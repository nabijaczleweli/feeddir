initSidebarItems({"struct":[["CText","CText characters"],["DQuoteOrEscape","The characters mainly needing escaping (just `'\"'` and `'\\\\'`)"],["HttpToken","HttToken character allowed in a token given the grammar from RFC7230 (http)"],["MediaTypeChars","MediaTypeChars is a lookup table for a number of character classes relevant when parsing media types"],["ObsNoWsCtl","ObsNoWsCtl characters of the `obs-` part of the mime grammar which are not ws and not ctl by combining this with other classes the `obs-` part of the grammar can be supported e.g. `QText` + `ObsNoWsCtl` == `ObsQText` i.e. `QText` in the `obs-` grammar"],["ObsQText","QText incl. obs-parts of the mime grammar"],["ObsQTextWs","QText incl. obs-parts (mime) or ws"],["QText","QText characters, i.e. characters which can appear in a quoted string without being escaped through quoted pairs"],["QTextWs","QText or Ws chars"],["RestrictedToken","Restricted Token, character allowed in a token wrt. to registering media types at IANA, any registered media type has to be compatible with this any other should be, through there is no guarantee for it."],["Token","Token (Mime) characters allowed in a token given the grammar from RFC2045 (mime)"],["VChar","VChar printable us-ascii chars (i.e. `'!' <= ch && ch <= '~'`)"],["VCharWs","VChar or Ws (i.e. `(' ' <= ch && ch <= '~') || ch == '\\t'`)"],["Ws","Ws  (just `'\\t'` and `'\\r'`)"]]});