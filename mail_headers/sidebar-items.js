initSidebarItems({"macro":[["def_headers","Defines a new header types with given type name, filed name and component"],["headers","Create a header map from a list of header's with ther fields"]],"mod":[["data","A number of little helper types, which contain text."],["error","module contains the (new) errors emitted by this crate"],["header_components","This modules contains all components provided by this library."],["headers",""],["map","Module containing the `HeaderMap`."]],"struct":[["Header",""],["HeaderName","Note: Normally you will never have the need to create a HeaderName instance by yourself (except maybe for testing). At last as long as you use `def_header!` for defining custom Headers, which is highly recommended"],["InvalidHeaderName",""],["_SoftAsciiStr","A `str` wrapper adding a \"is us-ascii\" soft constraint."]],"trait":[["HasHeaderName","a utility trait allowing us to use type hint structs in `HeaderMap::{contains, get_untyped}`"],["HeaderKind","Trait representing a mail header."],["HeaderObjTrait",""],["HeaderObjTraitBoxExt",""],["HeaderTryFrom","Workaround for `TryFrom`,`TryInto` not being stable."],["HeaderTryInto","Workaround for `TryFrom`,`TryInto` not being stable."],["MaxOneMarker",""]],"type":[["HeaderObj","Type alias for HeaderObjTrait's trait object."]]});