<?xml version='1.0' encoding='UTF-8'?>
<?xml-stylesheet href="./feed.xsl" type="text/xsl"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en"><id>https://pitsidianak.is/blog/</id><title>epilys notes</title><updated>2023-03-24T18:21:35.409738+00:00</updated><author><name>epilys</name><email>manos@pitsidianak.is</email></author><link href="https://pitsidianak.is/blog/" rel="alternate"/><link href="https://pitsidianak.is/blog/feed.atom" rel="self"/><rights>cc-by</rights><subtitle>code etc tidbits</subtitle><entry><id>https://pitsidianak.is/blog/posts/2021-08-17_concept_to_color.html</id><title>Mapping concepts to colors (terribly) with the Oklab perceptual colospace</title><updated>2023-03-24T18:21:35.409968+00:00</updated><content type="html">&lt;h2 id="tldr"&gt;TL;DR&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;What?&lt;/em&gt; I wanted a way to semi-automate associating colors to
topic tags stories posted on &lt;a href="https://sic.pm"
class="uri"&gt;https://sic.pm&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Why not any color?&lt;/em&gt; I was curious to see what was reasonable
within this approach.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;What’s the approach?&lt;/em&gt; I had no idea about colorspaces or
image processing before I started. My strategy would be to download the
top results of a query using DuckDuckGo image search, calculate their
dominant colors, and then calculate the overall dominant colors. Any
suggestions/corrections are most welcome!&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Show me the result&lt;/em&gt;:&lt;/li&gt;
&lt;/ul&gt;
&lt;figure&gt;
&lt;style&gt;
.results {
display: flex;
gap: 2px;
max-width: 402px;
width: 100%;
flex-flow: row wrap;
justify-content: space-between;
}
.colors figure {
    padding: 0px;
}
.results figure {
    border: 3px solid black;
    padding: 14px;
    border-radius: 4px;
    display: grid;
    grid-template-rows: auto 1fr;
    grid-template-columns: 1fr;
    max-width: 200px !important;
    max-width: min(200px,calc(var(--max-width) / 2.05)) !important;
    max-height: max-content;
    margin: 0px;
    }
    .results table {
    table-layout: fixed;
    width: 100%;
    word-break: break-all;
    font-size: 70%;
    height: min-content;
}
 .results figcaption {
                display: table-caption;
                padding: 11px;
                text-align: center;
                word-break: break-all;
                padding: 11px;
                text-align: center;
    border: 2px solid black;
            }
            .results figure div {
                display: flex;
                flex-flow: row wrap;
            }
            .results caption {
                font-size: 1rem;
            }
            
&lt;/style&gt;
&lt;div class="results colors"&gt;
&lt;figure style="background-color: #2d5b76; --red: 45.78248429808607; --green: 91.8769631030122; --blue: 118.32691000698078;   --aa-brightness: ((var(--red) * 299) + (var(--green) * 587) + (var(--blue) * 114)) / 1000; --aa-color: calc((var(--aa-brightness) - 128) * -1000); color: rgb(var(--aa-color), var(--aa-color), var(--aa-color));"&gt;
&lt;table role="presentation"&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;
Oklab
&lt;/th&gt;
&lt;th&gt;
HSL
&lt;/th&gt;
&lt;th&gt;
RGB
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;[‘0.45’, ‘-0.04’, ‘-0.06’]&lt;/code&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;code&gt;[‘200.00’, ‘0.44’, ‘0.32’]&lt;/code&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;code&gt;[‘46.00’, ‘92.00’, ‘120.00’]&lt;/code&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;figcaption style="background-color: #2d5b76;"&gt;
#2d5b76
&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;figure style="background-color: #d73e5f; --red: 215.41961837894783; --green: 62.36380170387439; --blue: 95.07985352814016;   --aa-brightness: ((var(--red) * 299) + (var(--green) * 587) + (var(--blue) * 114)) / 1000; --aa-color: calc((var(--aa-brightness) - 128) * -1000); color: rgb(var(--aa-color), var(--aa-color), var(--aa-color));"&gt;
&lt;table role="presentation"&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;
Oklab
&lt;/th&gt;
&lt;th&gt;
HSL
&lt;/th&gt;
&lt;th&gt;
RGB
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;[‘0.60’, ‘0.18’, ‘0.04’]&lt;/code&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;code&gt;[‘350.00’, ‘0.66’, ‘0.54’]&lt;/code&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;code&gt;[‘220.00’, ‘62.00’, ‘95.00’]&lt;/code&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;figcaption style="background-color: #d73e5f;"&gt;
#d73e5f
&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;figure style="background-color: #338193; --red: 51.156000630968656; --green: 129.21135730256776; --blue: 147.67130242125629;   --aa-brightness: ((var(--red) * 299) + (var(--green) * 587) + (var(--blue) * 114)) / 1000; --aa-color: calc((var(--aa-brightness) - 128) * -1000); color: rgb(var(--aa-color), var(--aa-color), var(--aa-color));"&gt;
&lt;table role="presentation"&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;
Oklab
&lt;/th&gt;
&lt;th&gt;
HSL
&lt;/th&gt;
&lt;th&gt;
RGB
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;[‘0.56’, ‘-0.07’, ‘-0.05’]&lt;/code&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;code&gt;[‘190.00’, ‘0.49’, ‘0.39’]&lt;/code&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;code&gt;[‘51.00’, ‘130.00’, ‘150.00’]&lt;/code&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;figcaption style="background-color: #338193;"&gt;
#338193
&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;figure style="background-color: #1e4eaf; --red: 30.489464307028793; --green: 78.70887638338755; --blue: 175.99797510122806;   --aa-brightness: ((var(--red) * 299) + (var(--green) * 587) + (var(--blue) * 114)) / 1000; --aa-color: calc((var(--aa-brightness) - 128) * -1000); color: rgb(var(--aa-color), var(--aa-color), var(--aa-color));"&gt;
&lt;table role="presentation"&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;
Oklab
&lt;/th&gt;
&lt;th&gt;
HSL
&lt;/th&gt;
&lt;th&gt;
RGB
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;[‘0.45’, ‘-0.02’, ‘-0.16’]&lt;/code&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;code&gt;[‘220.00’, ‘0.70’, ‘0.40’]&lt;/code&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;code&gt;[‘30.00’, ‘79.00’, ‘180.00’]&lt;/code&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;figcaption style="background-color: #1e4eaf;"&gt;
#1e4eaf
&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;figure style="background-color: #3a7c59; --red: 58.932726729736224; --green: 124.57603231390945; --blue: 89.32705127504498;   --aa-brightness: ((var(--red) * 299) + (var(--green) * 587) + (var(--blue) * 114)) / 1000; --aa-color: calc((var(--aa-brightness) - 128) * -1000); color: rgb(var(--aa-color), var(--aa-color), var(--aa-color));"&gt;
&lt;table role="presentation"&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;
Oklab
&lt;/th&gt;
&lt;th&gt;
HSL
&lt;/th&gt;
&lt;th&gt;
RGB
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;[‘0.53’, ‘-0.08’, ‘0.03’]&lt;/code&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;code&gt;[‘150.00’, ‘0.36’, ‘0.36’]&lt;/code&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;code&gt;[‘59.00’, ‘120.00’, ‘89.00’]&lt;/code&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;figcaption style="background-color: #3a7c59;"&gt;
#3a7c59
&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;figure style="background-color: #16217e; --red: 22.588571936125955; --green: 33.64672997706896; --blue: 126.99057383737028;   --aa-brightness: ((var(--red) * 299) + (var(--green) * 587) + (var(--blue) * 114)) / 1000; --aa-color: calc((var(--aa-brightness) - 128) * -1000); color: rgb(var(--aa-color), var(--aa-color), var(--aa-color));"&gt;
&lt;table role="presentation"&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;
Oklab
&lt;/th&gt;
&lt;th&gt;
HSL
&lt;/th&gt;
&lt;th&gt;
RGB
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;[‘0.32’, ‘-0.00’, ‘-0.15’]&lt;/code&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;code&gt;[‘230.00’, ‘0.70’, ‘0.29’]&lt;/code&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;code&gt;[‘23.00’, ‘34.00’, ‘130.00’]&lt;/code&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;figcaption style="background-color: #16217e;"&gt;
#16217e
&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;figure style="background-color: #89c658; --red: 137.46747549189422; --green: 198.43482094174996; --blue: 88.30022101081092;   --aa-brightness: ((var(--red) * 299) + (var(--green) * 587) + (var(--blue) * 114)) / 1000; --aa-color: calc((var(--aa-brightness) - 128) * -1000); color: rgb(var(--aa-color), var(--aa-color), var(--aa-color));"&gt;
&lt;table role="presentation"&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;
Oklab
&lt;/th&gt;
&lt;th&gt;
HSL
&lt;/th&gt;
&lt;th&gt;
RGB
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;[‘0.76’, ‘-0.11’, ‘0.11’]&lt;/code&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;code&gt;[‘93.00’, ‘0.49’, ‘0.56’]&lt;/code&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;code&gt;[‘140.00’, ‘200.00’, ‘88.00’]&lt;/code&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;figcaption style="background-color: #89c658;"&gt;
#89c658
&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;figure style="background-color: #e9a156; --red: 233.23661180948883; --green: 161.34857047951013; --blue: 86.39521525767827;   --aa-brightness: ((var(--red) * 299) + (var(--green) * 587) + (var(--blue) * 114)) / 1000; --aa-color: calc((var(--aa-brightness) - 128) * -1000); color: rgb(var(--aa-color), var(--aa-color), var(--aa-color));"&gt;
&lt;table role="presentation"&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;
Oklab
&lt;/th&gt;
&lt;th&gt;
HSL
&lt;/th&gt;
&lt;th&gt;
RGB
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;[‘0.77’, ‘0.05’, ‘0.11’]&lt;/code&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;code&gt;[‘31.00’, ‘0.77’, ‘0.63’]&lt;/code&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;code&gt;[‘230.00’, ‘160.00’, ‘86.00’]&lt;/code&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;figcaption style="background-color: #e9a156;"&gt;
#e9a156
&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;/div&gt;
&lt;figcaption style="caption-side: top; border-radius: 0px; border-top-left-radius: 5px; border-top-right-radius: 5px;"&gt;
Results for “programming”
&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;h2 id="whats-a-colorspace-and-whats-perceptually-uniform"&gt;What’s a
colorspace and what’s “Perceptually uniform”?&lt;/h2&gt;
&lt;p&gt;A &lt;em&gt;colorspace&lt;/em&gt; is basically a way to model colors to
attributes. The well known RGB colorspace maps colors to &lt;em&gt;Red&lt;/em&gt;,
&lt;em&gt;Green&lt;/em&gt; and &lt;em&gt;Blue&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;If that space has three attributes, we can view them as coordinates
on a 3D space (Any &lt;em&gt;n&lt;/em&gt; attributes can be viewed as an
&lt;em&gt;n&lt;/em&gt;-dimensional vector space). Then we define color distance as
the usual Euclidean distance we use for tangible stuff in the real
world.&lt;/p&gt;
&lt;p&gt;A uniformly perceptual colorspace aims to have the following
identity: “identical spatial distance between two colors equals
identical amount of perceived color difference”. The actual definitions
of those terms can be found in color science books and research.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://bottosson.github.io/posts/oklab/"&gt;Oklab&lt;/a&gt; is a
perceptual color space designed by Björn Ottosson to make working with
colors in image processing easier. After reading the introductory blog
post, I wondered if I could apply it to finding dominant colors of an
image.&lt;/p&gt;
&lt;p&gt;Oklab has three coordinates:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;L&lt;/em&gt; perceived lightness&lt;/li&gt;
&lt;li&gt;&lt;em&gt;a&lt;/em&gt; how green/red the color is&lt;/li&gt;
&lt;li&gt;&lt;em&gt;b&lt;/em&gt; how blue/yellow the color is&lt;/li&gt;
&lt;/ul&gt;
&lt;figure&gt;
&lt;img src="/blog/static/images/n8.svg" alt="" loading="lazy"&gt;
&lt;figcaption&gt;
Uniformly sampling the Oklab colorspace in 8 parts per coordinate.
&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;figure&gt;
&lt;img src="/blog/static/images/n16.svg" alt="" loading="lazy"&gt;
&lt;figcaption&gt;
Uniformly sampling the Oklab colorspace in 16 parts per coordinate.
&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;h2 id="dominant-colors"&gt;Dominant colors&lt;/h2&gt;
&lt;p&gt;I guess we would take an image and average all colors. What would
that produce?&lt;/p&gt;
&lt;figure&gt;
&lt;img src="/blog/static/images/avg_d2c6b6.jpg" alt="" loading="lazy"&gt;
&lt;figcaption&gt;
&lt;span style="background-color: #d2c6b6;"&gt;#d2c6b6&lt;/span&gt;
&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;Terrible. Obviously the approach can’t work with multiple colors
apparent in a picture. If the picture was mostly one color it’d be
somewhat useful:&lt;/p&gt;
&lt;figure&gt;
&lt;img src="/blog/static/images/avg_94706f.jpg" alt="" loading="lazy"&gt;
&lt;figcaption&gt;
&lt;span style="background-color: #94706f;"&gt;#94706f&lt;/span&gt;
&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;h2 id="k-means-clustering"&gt;&lt;em&gt;k&lt;/em&gt;-means clustering&lt;/h2&gt;
&lt;p&gt;From signal processing comes this dazzling technique: Given a set of
colors &lt;em&gt;c&lt;/em&gt;, partition them to &lt;em&gt;k&lt;/em&gt; buckets as follows:&lt;/p&gt;
&lt;ol type="1"&gt;
&lt;li&gt;Initially assign &lt;span class="math inline"&gt;&lt;em&gt;k&lt;/em&gt;&lt;/span&gt; average
colors somehow. You can pick them randomly for example. We will
incrementally improve on those averages to arrive to a &lt;em&gt;centroid&lt;/em&gt;
color, or the mean (average) color of a cluster.&lt;/li&gt;
&lt;li&gt;Assign every color &lt;em&gt;c&lt;/em&gt; to the average closest to it
&lt;em&gt;m&lt;/em&gt;&lt;sub&gt;κ&lt;/sub&gt; by calculating Euclidean distances to each
&lt;em&gt;m&lt;/em&gt;.&lt;/li&gt;
&lt;li&gt;Recalculate &lt;em&gt;m&lt;/em&gt;&lt;sub&gt;κ&lt;/sub&gt; as the average of the updated
cluster &lt;em&gt;κ&lt;/em&gt;.&lt;/li&gt;
&lt;li&gt;Repeat until assignments are the same as the previous step; we’ve
reached convergence which is not necessarily correct/optimal.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Since we will use a perceptually uniform colorspace, we expect each
cluster to be perceivably close to the actual colors it contains.&lt;/p&gt;
&lt;p&gt;And since we will be working with lots of sample images, we can
calculate the overall dominant colors by putting all the colors
together.&lt;/p&gt;
&lt;h2 id="implementation"&gt;Implementation&lt;/h2&gt;
&lt;p&gt;To visualize the results, I chose to calculate the dominant colors
for each image, then calculate the overall dominant colors from
those.&lt;/p&gt;
&lt;p&gt;I also uniformly split the Oklab colorspace into colors and clustered
all the dominant colors again, in order to see the difference of the
calculated dominant colors and the uniformly sampled ones:&lt;/p&gt;
&lt;figure style="width: 100%;max-width: 100% !important;"&gt;
&lt;img style="width: 100%;object-fit: scale-down;max-width: unset;" width="402" src="/blog/static/images/clusters.html.svg" alt="" loading="lazy"&gt;
&lt;figcaption&gt;
Uniformly partitioning dominant colors.
&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;The image results for most queries are stock photos or text, hence
there is a lot of black and white. We can deduce how black or greyscale
looking is a color by looking at its coordinates. In Oklab, the
&lt;em&gt;a&lt;/em&gt;, &lt;em&gt;b&lt;/em&gt; coordinates will be close to zero. In
&lt;em&gt;HSL&lt;/em&gt; (Hue-Saturation-Lightness) a low &lt;em&gt;L&lt;/em&gt; value means the
color is close to black. We can discard such colors by checking those
values.&lt;/p&gt;
&lt;h2 id="results"&gt;Results&lt;/h2&gt;
&lt;p&gt;Searching for non abstract things such as fruits returns pictures of
the things themselves so we get good results:&lt;/p&gt;
&lt;figure&gt;
&lt;img src="/blog/static/images/banana.html.svg" alt="" loading="lazy"&gt;
&lt;div class="results colors"&gt;
&lt;figure style="background-color: #c4ab46;--red: 196.28318248390545; --green: 171.22987781738678; --blue: 70.06462577833034;  --aa-brightness: ((var(--red) * 299) + (var(--green) * 587) + (var(--blue) * 114)) / 1000; --aa-color: calc((var(--aa-brightness) - 128) * -1000); color: rgb(var(--aa-color), var(--aa-color), var(--aa-color));"&gt;
&lt;table role="presentation"&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;
Oklab
&lt;/th&gt;
&lt;th&gt;
HSL
&lt;/th&gt;
&lt;th&gt;
RGB
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;[‘0.74’, ‘-0.01’, ‘0.12’]&lt;/code&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;code&gt;[‘48.00’, ‘0.52’, ‘0.52’]&lt;/code&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;code&gt;[‘200.00’, ‘170.00’, ‘70.00’]&lt;/code&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;figcaption style="background-color: #c4ab46;"&gt;
#c4ab46
&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;figure style="background-color: #46451f;--red: 70.11154443210407; --green: 69.33670729746845; --blue: 31.23333262699616;  --aa-brightness: ((var(--red) * 299) + (var(--green) * 587) + (var(--blue) * 114)) / 1000; --aa-color: calc((var(--aa-brightness) - 128) * -1000); color: rgb(var(--aa-color), var(--aa-color), var(--aa-color));"&gt;
&lt;table role="presentation"&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;
Oklab
&lt;/th&gt;
&lt;th&gt;
HSL
&lt;/th&gt;
&lt;th&gt;
RGB
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;[‘0.38’, ‘-0.02’, ‘0.05’]&lt;/code&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;code&gt;[‘59.00’, ‘0.38’, ‘0.20’]&lt;/code&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;code&gt;[‘70.00’, ‘69.00’, ‘31.00’]&lt;/code&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;figcaption style="background-color: #46451f;"&gt;
#46451f
&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;figure style="background-color: #e1e27f;--red: 225.90423044792516; --green: 226.05870308646374; --blue: 127.41786090109363;  --aa-brightness: ((var(--red) * 299) + (var(--green) * 587) + (var(--blue) * 114)) / 1000; --aa-color: calc((var(--aa-brightness) - 128) * -1000); color: rgb(var(--aa-color), var(--aa-color), var(--aa-color));"&gt;
&lt;table role="presentation"&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;
Oklab
&lt;/th&gt;
&lt;th&gt;
HSL
&lt;/th&gt;
&lt;th&gt;
RGB
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;[‘0.89’, ‘-0.04’, ‘0.12’]&lt;/code&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;code&gt;[‘60.00’, ‘0.63’, ‘0.69’]&lt;/code&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;code&gt;[‘230.00’, ‘230.00’, ‘130.00’]&lt;/code&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;figcaption style="background-color: #e1e27f;"&gt;
#e1e27f
&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;figure style="background-color: #1c190c;--red: 28.56983700260185; --green: 25.626647567386716; --blue: 12.551556034953945;  --aa-brightness: ((var(--red) * 299) + (var(--green) * 587) + (var(--blue) * 114)) / 1000; --aa-color: calc((var(--aa-brightness) - 128) * -1000); color: rgb(var(--aa-color), var(--aa-color), var(--aa-color));"&gt;
&lt;table role="presentation"&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;
Oklab
&lt;/th&gt;
&lt;th&gt;
HSL
&lt;/th&gt;
&lt;th&gt;
RGB
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;[‘0.22’, ‘-0.00’, ‘0.02’]&lt;/code&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;code&gt;[‘49.00’, ‘0.39’, ‘0.08’]&lt;/code&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;code&gt;[‘29.00’, ‘26.00’, ‘13.00’]&lt;/code&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;figcaption style="background-color: #1c190c;"&gt;
#1c190c
&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;figure style="background-color: #9d8433;--red: 157.89721444994035; --green: 132.77263694561853; --blue: 51.19642464048814;  --aa-brightness: ((var(--red) * 299) + (var(--green) * 587) + (var(--blue) * 114)) / 1000; --aa-color: calc((var(--aa-brightness) - 128) * -1000); color: rgb(var(--aa-color), var(--aa-color), var(--aa-color));"&gt;
&lt;table role="presentation"&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;
Oklab
&lt;/th&gt;
&lt;th&gt;
HSL
&lt;/th&gt;
&lt;th&gt;
RGB
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;[‘0.62’, ‘-0.00’, ‘0.10’]&lt;/code&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;code&gt;[‘46.00’, ‘0.51’, ‘0.41’]&lt;/code&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;code&gt;[‘160.00’, ‘130.00’, ‘51.00’]&lt;/code&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;figcaption style="background-color: #9d8433;"&gt;
#9d8433
&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;figure style="background-color: #7c6732;--red: 124.84816474230027; --green: 103.04763841029607; --blue: 50.675136743583494;  --aa-brightness: ((var(--red) * 299) + (var(--green) * 587) + (var(--blue) * 114)) / 1000; --aa-color: calc((var(--aa-brightness) - 128) * -1000); color: rgb(var(--aa-color), var(--aa-color), var(--aa-color));"&gt;
&lt;table role="presentation"&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;
Oklab
&lt;/th&gt;
&lt;th&gt;
HSL
&lt;/th&gt;
&lt;th&gt;
RGB
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;[‘0.52’, ‘0.00’, ‘0.08’]&lt;/code&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;code&gt;[‘42.00’, ‘0.42’, ‘0.34’]&lt;/code&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;code&gt;[‘120.00’, ‘100.00’, ‘51.00’]&lt;/code&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;figcaption style="background-color: #7c6732;"&gt;
#7c6732
&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;/div&gt;
&lt;figcaption style="caption-side: top; border-radius: 0px; border-top-left-radius: 5px; border-top-right-radius: 5px;"&gt;
Results for “banana” (is that an impostor?)
&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;Searching for &lt;em&gt;pharmaceuticals&lt;/em&gt; returns lots of pictures of
colorful pills:&lt;/p&gt;
&lt;figure&gt;
&lt;img src="/blog/static/images/pharma.html.svg" alt="" loading="lazy"&gt;
&lt;div class="results colors"&gt;
&lt;figure style="background-color: #4d81ae;--red: 77.33534012784165; --green: 129.27371312709678; --blue: 174.63535437467024;  --aa-brightness: ((var(--red) * 299) + (var(--green) * 587) + (var(--blue) * 114)) / 1000; --aa-color: calc((var(--aa-brightness) - 128) * -1000); color: rgb(var(--aa-color), var(--aa-color), var(--aa-color));"&gt;
&lt;table role="presentation"&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;
Oklab
&lt;/th&gt;
&lt;th&gt;
HSL
&lt;/th&gt;
&lt;th&gt;
RGB
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;[‘0.59’, ‘-0.04’, ‘-0.08’]&lt;/code&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;code&gt;[‘210.00’, ‘0.39’, ‘0.49’]&lt;/code&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;code&gt;[‘77.00’, ‘130.00’, ‘170.00’]&lt;/code&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;figcaption style="background-color: #4d81ae;"&gt;
#4d81ae
&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;figure style="background-color: #4d585a;--red: 77.65747619972743; --green: 88.33947901269752; --blue: 90.7305623996395;  --aa-brightness: ((var(--red) * 299) + (var(--green) * 587) + (var(--blue) * 114)) / 1000; --aa-color: calc((var(--aa-brightness) - 128) * -1000); color: rgb(var(--aa-color), var(--aa-color), var(--aa-color));"&gt;
&lt;table role="presentation"&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;
Oklab
&lt;/th&gt;
&lt;th&gt;
HSL
&lt;/th&gt;
&lt;th&gt;
RGB
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;[‘0.45’, ‘-0.01’, ‘-0.01’]&lt;/code&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;code&gt;[‘190.00’, ‘0.08’, ‘0.33’]&lt;/code&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;code&gt;[‘78.00’, ‘88.00’, ‘91.00’]&lt;/code&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;figcaption style="background-color: #4d585a;"&gt;
#4d585a
&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;figure style="background-color: #20479d;--red: 32.66844241679075; --green: 71.85160453317006; --blue: 157.05401304300975;  --aa-brightness: ((var(--red) * 299) + (var(--green) * 587) + (var(--blue) * 114)) / 1000; --aa-color: calc((var(--aa-brightness) - 128) * -1000); color: rgb(var(--aa-color), var(--aa-color), var(--aa-color));"&gt;
&lt;table role="presentation"&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;
Oklab
&lt;/th&gt;
&lt;th&gt;
HSL
&lt;/th&gt;
&lt;th&gt;
RGB
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;[‘0.43’, ‘-0.02’, ‘-0.15’]&lt;/code&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;code&gt;[‘220.00’, ‘0.66’, ‘0.37’]&lt;/code&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;code&gt;[‘33.00’, ‘72.00’, ‘160.00’]&lt;/code&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;figcaption style="background-color: #20479d;"&gt;
#20479d
&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;figure style="background-color: #b1cfea;--red: 177.11718514939957; --green: 207.1476864074912; --blue: 234.6288950167034;  --aa-brightness: ((var(--red) * 299) + (var(--green) * 587) + (var(--blue) * 114)) / 1000; --aa-color: calc((var(--aa-brightness) - 128) * -1000); color: rgb(var(--aa-color), var(--aa-color), var(--aa-color));"&gt;
&lt;table role="presentation"&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;
Oklab
&lt;/th&gt;
&lt;th&gt;
HSL
&lt;/th&gt;
&lt;th&gt;
RGB
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;[‘0.84’, ‘-0.02’, ‘-0.05’]&lt;/code&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;code&gt;[‘210.00’, ‘0.59’, ‘0.81’]&lt;/code&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;code&gt;[‘180.00’, ‘210.00’, ‘230.00’]&lt;/code&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;figcaption style="background-color: #b1cfea;"&gt;
#b1cfea
&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;figure style="background-color: #ba3d3e;--red: 186.1693599015324; --green: 61.36541273761866; --blue: 62.32060313682186;  --aa-brightness: ((var(--red) * 299) + (var(--green) * 587) + (var(--blue) * 114)) / 1000; --aa-color: calc((var(--aa-brightness) - 128) * -1000); color: rgb(var(--aa-color), var(--aa-color), var(--aa-color));"&gt;
&lt;table role="presentation"&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;
Oklab
&lt;/th&gt;
&lt;th&gt;
HSL
&lt;/th&gt;
&lt;th&gt;
RGB
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;[‘0.54’, ‘0.15’, ‘0.07’]&lt;/code&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;code&gt;[‘360.00’, ‘0.50’, ‘0.49’]&lt;/code&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;code&gt;[‘190.00’, ‘61.00’, ‘62.00’]&lt;/code&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;figcaption style="background-color: #ba3d3e;"&gt;
#ba3d3e
&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;figure style="background-color: #418b58;--red: 65.61860176956954; --green: 139.66843518364155; --blue: 88.30085126039629;  --aa-brightness: ((var(--red) * 299) + (var(--green) * 587) + (var(--blue) * 114)) / 1000; --aa-color: calc((var(--aa-brightness) - 128) * -1000); color: rgb(var(--aa-color), var(--aa-color), var(--aa-color));"&gt;
&lt;table role="presentation"&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;
Oklab
&lt;/th&gt;
&lt;th&gt;
HSL
&lt;/th&gt;
&lt;th&gt;
RGB
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;[‘0.58’, ‘-0.10’, ‘0.05’]&lt;/code&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;code&gt;[‘140.00’, ‘0.36’, ‘0.40’]&lt;/code&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;code&gt;[‘66.00’, ‘140.00’, ‘88.00’]&lt;/code&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;figcaption style="background-color: #418b58;"&gt;
#418b58
&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;/div&gt;
&lt;figcaption style="caption-side: top; border-radius: 0px; border-top-left-radius: 5px; border-top-right-radius: 5px;"&gt;
Results for “pharmaceuticals”
&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;Searching for &lt;em&gt;ethics&lt;/em&gt; returns pictures of signs that point to
stuff such as “Right” and “Wrong” and “Principles”:&lt;/p&gt;
&lt;figure&gt;
&lt;img src="/blog/static/images/ethics.html.svg" alt="" loading="lazy"&gt;
&lt;div class="results colors"&gt;
&lt;figure style="background-color: #99b757;--red: 153.5850942678971; --green: 183.40548984857804; --blue: 87.99736877215766;  --aa-brightness: ((var(--red) * 299) + (var(--green) * 587) + (var(--blue) * 114)) / 1000; --aa-color: calc((var(--aa-brightness) - 128) * -1000); color: rgb(var(--aa-color), var(--aa-color), var(--aa-color));"&gt;
&lt;table role="presentation"&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;
Oklab
&lt;/th&gt;
&lt;th&gt;
HSL
&lt;/th&gt;
&lt;th&gt;
RGB
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;[‘0.74’, ‘-0.07’, ‘0.11’]&lt;/code&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;code&gt;[‘79.00’, ‘0.40’, ‘0.53’]&lt;/code&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;code&gt;[‘150.00’, ‘180.00’, ‘88.00’]&lt;/code&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;figcaption style="background-color: #99b757;"&gt;
#99b757
&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;figure style="background-color: #76a6c8;--red: 118.38853932231477; --green: 166.55909717803968; --blue: 200.02588785203736;  --aa-brightness: ((var(--red) * 299) + (var(--green) * 587) + (var(--blue) * 114)) / 1000; --aa-color: calc((var(--aa-brightness) - 128) * -1000); color: rgb(var(--aa-color), var(--aa-color), var(--aa-color));"&gt;
&lt;table role="presentation"&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;
Oklab
&lt;/th&gt;
&lt;th&gt;
HSL
&lt;/th&gt;
&lt;th&gt;
RGB
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;[‘0.71’, ‘-0.04’, ‘-0.06’]&lt;/code&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;code&gt;[‘200.00’, ‘0.43’, ‘0.62’]&lt;/code&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;code&gt;[‘120.00’, ‘170.00’, ‘200.00’]&lt;/code&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;figcaption style="background-color: #76a6c8;"&gt;
#76a6c8
&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;figure style="background-color: #edede6;--red: 237.0745909259664; --green: 237.5089358669673; --blue: 230.94915954330384;  --aa-brightness: ((var(--red) * 299) + (var(--green) * 587) + (var(--blue) * 114)) / 1000; --aa-color: calc((var(--aa-brightness) - 128) * -1000); color: rgb(var(--aa-color), var(--aa-color), var(--aa-color));"&gt;
&lt;table role="presentation"&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;
Oklab
&lt;/th&gt;
&lt;th&gt;
HSL
&lt;/th&gt;
&lt;th&gt;
RGB
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;[‘0.95’, ‘-0.00’, ‘0.01’]&lt;/code&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;code&gt;[‘64.00’, ‘0.16’, ‘0.92’]&lt;/code&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;code&gt;[‘240.00’, ‘240.00’, ‘230.00’]&lt;/code&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;figcaption style="background-color: #edede6;"&gt;
#edede6
&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;figure style="background-color: #a99387;--red: 169.9109720706113; --green: 147.2605959334244; --blue: 135.91314618149732;  --aa-brightness: ((var(--red) * 299) + (var(--green) * 587) + (var(--blue) * 114)) / 1000; --aa-color: calc((var(--aa-brightness) - 128) * -1000); color: rgb(var(--aa-color), var(--aa-color), var(--aa-color));"&gt;
&lt;table role="presentation"&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;
Oklab
&lt;/th&gt;
&lt;th&gt;
HSL
&lt;/th&gt;
&lt;th&gt;
RGB
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;[‘0.68’, ‘0.02’, ‘0.02’]&lt;/code&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;code&gt;[‘20.00’, ‘0.17’, ‘0.60’]&lt;/code&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;code&gt;[‘170.00’, ‘150.00’, ‘140.00’]&lt;/code&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;figcaption style="background-color: #a99387;"&gt;
#a99387
&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;/div&gt;
&lt;figcaption style="caption-side: top; border-radius: 0px; border-top-left-radius: 5px; border-top-right-radius: 5px;"&gt;
Results for “ethics”
&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;Searching for &lt;em&gt;design&lt;/em&gt; returns a boring sea of brown and beige
thanks to interior design trends:&lt;/p&gt;
&lt;figure&gt;
&lt;img src="/blog/static/images/design.html.svg" alt="" loading="lazy"&gt;
&lt;div class="results colors"&gt;
&lt;figure style="background-color: #93887b;--red: 147.44032737387627; --green: 136.9791971867938; --blue: 123.48551940720034;  --aa-brightness: ((var(--red) * 299) + (var(--green) * 587) + (var(--blue) * 114)) / 1000; --aa-color: calc((var(--aa-brightness) - 128) * -1000); color: rgb(var(--aa-color), var(--aa-color), var(--aa-color));"&gt;
&lt;table role="presentation"&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;
Oklab
&lt;/th&gt;
&lt;th&gt;
HSL
&lt;/th&gt;
&lt;th&gt;
RGB
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;[‘0.64’, &amp;lt;‘0.01’, ‘0.02’]&lt;/code&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;code&gt;[‘34.00’, ‘0.10’, ‘0.53’]&lt;/code&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;code&gt;[‘150.00’, ‘140.00’, ‘120.00’]&lt;/code&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;figcaption style="background-color: #93887b;"&gt;
#93887b
&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;figure style="background-color: #c2b7a9;--red: 194.24663181106135; --green: 183.9096475302234; --blue: 169.81091557028293;  --aa-brightness: ((var(--red) * 299) + (var(--green) * 587) + (var(--blue) * 114)) / 1000; --aa-color: calc((var(--aa-brightness) - 128) * -1000); color: rgb(var(--aa-color), var(--aa-color), var(--aa-color));"&gt;
&lt;table role="presentation"&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;
Oklab
&lt;/th&gt;
&lt;th&gt;
HSL
&lt;/th&gt;
&lt;th&gt;
RGB
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;[‘0.79’, ‘0.01’, ‘0.02’]&lt;/code&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;code&gt;[‘35.00’, ‘0.17’, ‘0.71’]&lt;/code&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;code&gt;[‘190.00’, ‘180.00’, ‘170.00’]&lt;/code&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;figcaption style="background-color: #c2b7a9;"&gt;
#c2b7a9
&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;figure style="background-color: #cbc8c2;--red: 203.32969762370587; --green: 200.8009366157517; --blue: 194.45173078411435;  --aa-brightness: ((var(--red) * 299) + (var(--green) * 587) + (var(--blue) * 114)) / 1000; --aa-color: calc((var(--aa-brightness) - 128) * -1000); color: rgb(var(--aa-color), var(--aa-color), var(--aa-color));"&gt;
&lt;table role="presentation"&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;
Oklab
&lt;/th&gt;
&lt;th&gt;
HSL
&lt;/th&gt;
&lt;th&gt;
RGB
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;[‘0.84’, ‘0.00’, ‘0.01’]&lt;/code&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;code&gt;[‘43.00’, ‘0.08’, ‘0.78’]&lt;/code&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;code&gt;[‘200.00’, ‘200.00’, ‘190.00’]&lt;/code&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;figcaption style="background-color: #cbc8c2;"&gt;
#cbc8c2
&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;figure style="background-color: #74675c;--red: 116.99319983117225; --green: 103.74989161529457; --blue: 92.26608788946902;  --aa-brightness: ((var(--red) * 299) + (var(--green) * 587) + (var(--blue) * 114)) / 1000; --aa-color: calc((var(--aa-brightness) - 128) * -1000); color: rgb(var(--aa-color), var(--aa-color), var(--aa-color));"&gt;
&lt;table role="presentation"&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;
Oklab
&lt;/th&gt;
&lt;th&gt;
HSL
&lt;/th&gt;
&lt;th&gt;
RGB
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;[‘0.53’, ‘0.01’, ‘0.02’]&lt;/code&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;code&gt;[‘28.00’, ‘0.12’, ‘0.41’]&lt;/code&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;code&gt;[‘120.00’, ‘100.00’, ‘92.00’]&lt;/code&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;figcaption style="background-color: #74675c;"&gt;
#74675c
&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;/div&gt;
&lt;figcaption style="caption-side: top; border-radius: 0px; border-top-left-radius: 5px; border-top-right-radius: 5px;"&gt;
Results for “design”
&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;Searching for &lt;em&gt;programming&lt;/em&gt; identifies the classic green
terminal color along with other syntax highlighting palettes:&lt;/p&gt;
&lt;figure&gt;
&lt;img src="/blog/static/images/programming.html.svg" alt="" loading="lazy"&gt;
&lt;div class="results colors"&gt;
&lt;figure style="background-color: #d73e5f; --red: 215.41961837894783; --green: 62.36380170387439; --blue: 95.07985352814016;   --aa-brightness: ((var(--red) * 299) + (var(--green) * 587) + (var(--blue) * 114)) / 1000; --aa-color: calc((var(--aa-brightness) - 128) * -1000); color: rgb(var(--aa-color), var(--aa-color), var(--aa-color));"&gt;
&lt;table role="presentation"&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;
Oklab
&lt;/th&gt;
&lt;th&gt;
HSL
&lt;/th&gt;
&lt;th&gt;
RGB
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;[‘0.60’, ‘0.18’, ‘0.04’]&lt;/code&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;code&gt;[‘350.00’, ‘0.66’, ‘0.54’]&lt;/code&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;code&gt;[‘220.00’, ‘62.00’, ‘95.00’]&lt;/code&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;figcaption style="background-color: #d73e5f;"&gt;
#d73e5f
&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;figure style="background-color: #1e4eaf; --red: 30.489464307028793; --green: 78.70887638338755; --blue: 175.99797510122806;   --aa-brightness: ((var(--red) * 299) + (var(--green) * 587) + (var(--blue) * 114)) / 1000; --aa-color: calc((var(--aa-brightness) - 128) * -1000); color: rgb(var(--aa-color), var(--aa-color), var(--aa-color));"&gt;
&lt;table role="presentation"&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;
Oklab
&lt;/th&gt;
&lt;th&gt;
HSL
&lt;/th&gt;
&lt;th&gt;
RGB
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;[‘0.45’, ‘-0.02’, ‘-0.16’]&lt;/code&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;code&gt;[‘220.00’, ‘0.70’, ‘0.40’]&lt;/code&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;code&gt;[‘30.00’, ‘79.00’, ‘180.00’]&lt;/code&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;figcaption style="background-color: #1e4eaf;"&gt;
#1e4eaf
&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;figure style="background-color: #89c658; --red: 137.46747549189422; --green: 198.43482094174996; --blue: 88.30022101081092;   --aa-brightness: ((var(--red) * 299) + (var(--green) * 587) + (var(--blue) * 114)) / 1000; --aa-color: calc((var(--aa-brightness) - 128) * -1000); color: rgb(var(--aa-color), var(--aa-color), var(--aa-color));"&gt;
&lt;table role="presentation"&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;
Oklab
&lt;/th&gt;
&lt;th&gt;
HSL
&lt;/th&gt;
&lt;th&gt;
RGB
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;[‘0.76’, ‘-0.11’, ‘0.11’]&lt;/code&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;code&gt;[‘93.00’, ‘0.49’, ‘0.56’]&lt;/code&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;code&gt;[‘140.00’, ‘200.00’, ‘88.00’]&lt;/code&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;figcaption style="background-color: #89c658;"&gt;
#89c658
&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;figure style="background-color: #e9a156; --red: 233.23661180948883; --green: 161.34857047951013; --blue: 86.39521525767827;   --aa-brightness: ((var(--red) * 299) + (var(--green) * 587) + (var(--blue) * 114)) / 1000; --aa-color: calc((var(--aa-brightness) - 128) * -1000); color: rgb(var(--aa-color), var(--aa-color), var(--aa-color));"&gt;
&lt;table role="presentation"&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;
Oklab
&lt;/th&gt;
&lt;th&gt;
HSL
&lt;/th&gt;
&lt;th&gt;
RGB
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;[‘0.77’, ‘0.05’, ‘0.11’]&lt;/code&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;code&gt;[‘31.00’, ‘0.77’, ‘0.63’]&lt;/code&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;code&gt;[‘230.00’, ‘160.00’, ‘86.00’]&lt;/code&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;figcaption style="background-color: #e9a156;"&gt;
#e9a156
&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;/div&gt;
&lt;figcaption style="caption-side: top; border-radius: 0px; border-top-left-radius: 5px; border-top-right-radius: 5px;"&gt;
Results for “programming”
&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;Finally, &lt;em&gt;philosophy&lt;/em&gt; returns pictures of books and statues,
so the results are predictable and omitted:&lt;/p&gt;
&lt;figure&gt;
&lt;img width="402" src="/blog/static/images/philosophy.html.svg" alt="" loading="lazy"&gt;
&lt;figcaption style="caption-side: top; border-radius: 0px; border-top-left-radius: 5px; border-top-right-radius: 5px;"&gt;
Results for “philosophy”
&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;h2 id="improving-the-sample-source"&gt;Improving the sample source&lt;/h2&gt;
&lt;p&gt;I’ve had some luck getting “better” results by searching for “book
about {query}” and “book about {query} cover” expecting topical books to
share color schemes, like the distinctive palettes O’Reilly uses in its
programming books.&lt;/p&gt;
&lt;p&gt;I found Google Images to show less junk results but they have no API
you can use without an account.&lt;/p&gt;
&lt;h2 id="conclusions-and-notes"&gt;Conclusions and notes&lt;/h2&gt;
&lt;p&gt;As expected, this doesn’t produce particularly mind blowing results
since abstract concepts lack color association in general. Even if you
have any type of vision synesthesia, the colors you see are usually
unique for each person.&lt;/p&gt;
&lt;p&gt;To get back to the original motivation behind this experiment, which
was associating post tags with colors: you can achieve this by
clustering existing colors and for each new tag calculate dominant
colors, and choose one that belongs to the smallest cluster. That way
you can avoid common colors like black/white/blue/orange saturating your
tag cloud.&lt;/p&gt;
&lt;h2 id="sample-code"&gt;Sample code&lt;/h2&gt;
&lt;div class="sourceCode" id="cb1"&gt;&lt;pre
class="sourceCode python"&gt;&lt;code class="sourceCode python"&gt;&lt;span id="cb1-1"&gt;&lt;a href="#cb1-1" aria-hidden="true" tabindex="-1"&gt;&lt;/a&gt;&lt;span class="im"&gt;import&lt;/span&gt; decimal&lt;/span&gt;
&lt;span id="cb1-2"&gt;&lt;a href="#cb1-2" aria-hidden="true" tabindex="-1"&gt;&lt;/a&gt;&lt;span class="im"&gt;import&lt;/span&gt; itertools&lt;/span&gt;
&lt;span id="cb1-3"&gt;&lt;a href="#cb1-3" aria-hidden="true" tabindex="-1"&gt;&lt;/a&gt;&lt;span class="im"&gt;from&lt;/span&gt; wand.image &lt;span class="im"&gt;import&lt;/span&gt; Image&lt;/span&gt;
&lt;span id="cb1-4"&gt;&lt;a href="#cb1-4" aria-hidden="true" tabindex="-1"&gt;&lt;/a&gt;&lt;span class="im"&gt;import&lt;/span&gt; numpy &lt;span class="im"&gt;as&lt;/span&gt; np&lt;/span&gt;
&lt;span id="cb1-5"&gt;&lt;a href="#cb1-5" aria-hidden="true" tabindex="-1"&gt;&lt;/a&gt;&lt;span class="im"&gt;from&lt;/span&gt; scipy.cluster.vq &lt;span class="im"&gt;import&lt;/span&gt; vq, kmeans&lt;/span&gt;
&lt;span id="cb1-6"&gt;&lt;a href="#cb1-6" aria-hidden="true" tabindex="-1"&gt;&lt;/a&gt;&lt;span class="im"&gt;import&lt;/span&gt; colorio&lt;/span&gt;
&lt;span id="cb1-7"&gt;&lt;a href="#cb1-7" aria-hidden="true" tabindex="-1"&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id="cb1-8"&gt;&lt;a href="#cb1-8" aria-hidden="true" tabindex="-1"&gt;&lt;/a&gt;wand_color_to_arr &lt;span class="op"&gt;=&lt;/span&gt; &lt;span class="kw"&gt;lambda&lt;/span&gt; c: np.array([c.red_int8, c.green_int8, c.blue_int8])&lt;/span&gt;
&lt;span id="cb1-9"&gt;&lt;a href="#cb1-9" aria-hidden="true" tabindex="-1"&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id="cb1-10"&gt;&lt;a href="#cb1-10" aria-hidden="true" tabindex="-1"&gt;&lt;/a&gt;OKLAB &lt;span class="op"&gt;=&lt;/span&gt; colorio.cs.OKLAB()&lt;/span&gt;
&lt;span id="cb1-11"&gt;&lt;a href="#cb1-11" aria-hidden="true" tabindex="-1"&gt;&lt;/a&gt;color_abs &lt;span class="op"&gt;=&lt;/span&gt; &lt;span class="kw"&gt;lambda&lt;/span&gt; v: &lt;span class="bn"&gt;0xFF&lt;/span&gt; &lt;span class="cf"&gt;if&lt;/span&gt; v &lt;span class="op"&gt;&amp;gt;&lt;/span&gt; &lt;span class="bn"&gt;0xFF&lt;/span&gt; &lt;span class="cf"&gt;else&lt;/span&gt; v &lt;span class="cf"&gt;if&lt;/span&gt; v &lt;span class="op"&gt;&amp;gt;=&lt;/span&gt; &lt;span class="dv"&gt;0&lt;/span&gt; &lt;span class="cf"&gt;else&lt;/span&gt; &lt;span class="dv"&gt;0&lt;/span&gt;&lt;/span&gt;
&lt;span id="cb1-12"&gt;&lt;a href="#cb1-12" aria-hidden="true" tabindex="-1"&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id="cb1-13"&gt;&lt;a href="#cb1-13" aria-hidden="true" tabindex="-1"&gt;&lt;/a&gt;oklab_to_rgb255 &lt;span class="op"&gt;=&lt;/span&gt; &lt;span class="kw"&gt;lambda&lt;/span&gt; o: OKLAB.to_rgb255(o)&lt;/span&gt;
&lt;span id="cb1-14"&gt;&lt;a href="#cb1-14" aria-hidden="true" tabindex="-1"&gt;&lt;/a&gt;rgb_to_hex &lt;span class="op"&gt;=&lt;/span&gt; &lt;span class="kw"&gt;lambda&lt;/span&gt; rgb: &lt;span class="st"&gt;&amp;quot;#&lt;/span&gt;&lt;span class="sc"&gt;%s&lt;/span&gt;&lt;span class="st"&gt;&amp;quot;&lt;/span&gt; &lt;span class="op"&gt;%&lt;/span&gt; &lt;span class="st"&gt;&amp;quot;&amp;quot;&lt;/span&gt;.join((&lt;span class="st"&gt;&amp;quot;&lt;/span&gt;&lt;span class="sc"&gt;%02x&lt;/span&gt;&lt;span class="st"&gt;&amp;quot;&lt;/span&gt; &lt;span class="op"&gt;%&lt;/span&gt; p &lt;span class="cf"&gt;for&lt;/span&gt; p &lt;span class="kw"&gt;in&lt;/span&gt; rgb))&lt;/span&gt;
&lt;span id="cb1-15"&gt;&lt;a href="#cb1-15" aria-hidden="true" tabindex="-1"&gt;&lt;/a&gt;oklab_to_hex &lt;span class="op"&gt;=&lt;/span&gt; &lt;span class="kw"&gt;lambda&lt;/span&gt; o: rgb_to_hex(&lt;span class="bu"&gt;map&lt;/span&gt;(color_abs, &lt;span class="bu"&gt;map&lt;/span&gt;(&lt;span class="bu"&gt;int&lt;/span&gt;, oklab_to_rgb255(o))))&lt;/span&gt;
&lt;span id="cb1-16"&gt;&lt;a href="#cb1-16" aria-hidden="true" tabindex="-1"&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id="cb1-17"&gt;&lt;a href="#cb1-17" aria-hidden="true" tabindex="-1"&gt;&lt;/a&gt;dec_ctx &lt;span class="op"&gt;=&lt;/span&gt; decimal.Context(prec&lt;span class="op"&gt;=&lt;/span&gt;&lt;span class="dv"&gt;2&lt;/span&gt;, rounding&lt;span class="op"&gt;=&lt;/span&gt;decimal.ROUND_HALF_DOWN)&lt;/span&gt;
&lt;span id="cb1-18"&gt;&lt;a href="#cb1-18" aria-hidden="true" tabindex="-1"&gt;&lt;/a&gt;arr_display &lt;span class="op"&gt;=&lt;/span&gt; &lt;span class="kw"&gt;lambda&lt;/span&gt; arr: [&lt;span class="st"&gt;&amp;quot;&lt;/span&gt;&lt;span class="sc"&gt;%.2f&lt;/span&gt;&lt;span class="st"&gt;&amp;quot;&lt;/span&gt; &lt;span class="op"&gt;%&lt;/span&gt; dec_ctx.create_decimal_from_float(i) &lt;span class="cf"&gt;for&lt;/span&gt; i &lt;span class="kw"&gt;in&lt;/span&gt; arr]&lt;/span&gt;
&lt;span id="cb1-19"&gt;&lt;a href="#cb1-19" aria-hidden="true" tabindex="-1"&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id="cb1-20"&gt;&lt;a href="#cb1-20" aria-hidden="true" tabindex="-1"&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id="cb1-21"&gt;&lt;a href="#cb1-21" aria-hidden="true" tabindex="-1"&gt;&lt;/a&gt;&lt;span class="kw"&gt;def&lt;/span&gt; image_to_colors(img: Image):&lt;/span&gt;
&lt;span id="cb1-22"&gt;&lt;a href="#cb1-22" aria-hidden="true" tabindex="-1"&gt;&lt;/a&gt;    img.thumbnail(&lt;span class="dv"&gt;200&lt;/span&gt;, &lt;span class="dv"&gt;200&lt;/span&gt;)&lt;/span&gt;
&lt;span id="cb1-23"&gt;&lt;a href="#cb1-23" aria-hidden="true" tabindex="-1"&gt;&lt;/a&gt;    colors &lt;span class="op"&gt;=&lt;/span&gt; &lt;span class="bu"&gt;set&lt;/span&gt;(c &lt;span class="cf"&gt;for&lt;/span&gt; row &lt;span class="kw"&gt;in&lt;/span&gt; img &lt;span class="cf"&gt;for&lt;/span&gt; c &lt;span class="kw"&gt;in&lt;/span&gt; row)&lt;/span&gt;
&lt;span id="cb1-24"&gt;&lt;a href="#cb1-24" aria-hidden="true" tabindex="-1"&gt;&lt;/a&gt;    ret &lt;span class="op"&gt;=&lt;/span&gt; []&lt;/span&gt;
&lt;span id="cb1-25"&gt;&lt;a href="#cb1-25" aria-hidden="true" tabindex="-1"&gt;&lt;/a&gt;    &lt;span class="cf"&gt;for&lt;/span&gt; c &lt;span class="kw"&gt;in&lt;/span&gt; colors:&lt;/span&gt;
&lt;span id="cb1-26"&gt;&lt;a href="#cb1-26" aria-hidden="true" tabindex="-1"&gt;&lt;/a&gt;        ret.append(OKLAB.from_rgb255(wand_color_to_arr(c)))&lt;/span&gt;
&lt;span id="cb1-27"&gt;&lt;a href="#cb1-27" aria-hidden="true" tabindex="-1"&gt;&lt;/a&gt;    &lt;span class="cf"&gt;return&lt;/span&gt; ret&lt;/span&gt;
&lt;span id="cb1-28"&gt;&lt;a href="#cb1-28" aria-hidden="true" tabindex="-1"&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id="cb1-29"&gt;&lt;a href="#cb1-29" aria-hidden="true" tabindex="-1"&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id="cb1-30"&gt;&lt;a href="#cb1-30" aria-hidden="true" tabindex="-1"&gt;&lt;/a&gt;&lt;span class="kw"&gt;class&lt;/span&gt; Bucket:&lt;/span&gt;
&lt;span id="cb1-31"&gt;&lt;a href="#cb1-31" aria-hidden="true" tabindex="-1"&gt;&lt;/a&gt;    &lt;span class="kw"&gt;def&lt;/span&gt; &lt;span class="fu"&gt;__init__&lt;/span&gt;(&lt;span class="va"&gt;self&lt;/span&gt;, rep):&lt;/span&gt;
&lt;span id="cb1-32"&gt;&lt;a href="#cb1-32" aria-hidden="true" tabindex="-1"&gt;&lt;/a&gt;        &lt;span class="va"&gt;self&lt;/span&gt;.rep &lt;span class="op"&gt;=&lt;/span&gt; rep&lt;/span&gt;
&lt;span id="cb1-33"&gt;&lt;a href="#cb1-33" aria-hidden="true" tabindex="-1"&gt;&lt;/a&gt;        &lt;span class="va"&gt;self&lt;/span&gt;.colors &lt;span class="op"&gt;=&lt;/span&gt; []&lt;/span&gt;
&lt;span id="cb1-34"&gt;&lt;a href="#cb1-34" aria-hidden="true" tabindex="-1"&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id="cb1-35"&gt;&lt;a href="#cb1-35" aria-hidden="true" tabindex="-1"&gt;&lt;/a&gt;    &lt;span class="kw"&gt;def&lt;/span&gt; &lt;span class="fu"&gt;__len__&lt;/span&gt;(&lt;span class="va"&gt;self&lt;/span&gt;):&lt;/span&gt;
&lt;span id="cb1-36"&gt;&lt;a href="#cb1-36" aria-hidden="true" tabindex="-1"&gt;&lt;/a&gt;        &lt;span class="cf"&gt;return&lt;/span&gt; &lt;span class="bu"&gt;len&lt;/span&gt;(&lt;span class="va"&gt;self&lt;/span&gt;.colors)&lt;/span&gt;
&lt;span id="cb1-37"&gt;&lt;a href="#cb1-37" aria-hidden="true" tabindex="-1"&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id="cb1-38"&gt;&lt;a href="#cb1-38" aria-hidden="true" tabindex="-1"&gt;&lt;/a&gt;    &lt;span class="kw"&gt;def&lt;/span&gt; append(&lt;span class="va"&gt;self&lt;/span&gt;, color):&lt;/span&gt;
&lt;span id="cb1-39"&gt;&lt;a href="#cb1-39" aria-hidden="true" tabindex="-1"&gt;&lt;/a&gt;        &lt;span class="va"&gt;self&lt;/span&gt;.colors.append(color)&lt;/span&gt;
&lt;span id="cb1-40"&gt;&lt;a href="#cb1-40" aria-hidden="true" tabindex="-1"&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id="cb1-41"&gt;&lt;a href="#cb1-41" aria-hidden="true" tabindex="-1"&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id="cb1-42"&gt;&lt;a href="#cb1-42" aria-hidden="true" tabindex="-1"&gt;&lt;/a&gt;&lt;span class="kw"&gt;def&lt;/span&gt; dominant_colors(oks, n&lt;span class="op"&gt;=&lt;/span&gt;&lt;span class="dv"&gt;20&lt;/span&gt;):&lt;/span&gt;
&lt;span id="cb1-43"&gt;&lt;a href="#cb1-43" aria-hidden="true" tabindex="-1"&gt;&lt;/a&gt;    _r, _ &lt;span class="op"&gt;=&lt;/span&gt; kmeans(oks, &lt;span class="bu"&gt;min&lt;/span&gt;(n, &lt;span class="bu"&gt;len&lt;/span&gt;(oks)))&lt;/span&gt;
&lt;span id="cb1-44"&gt;&lt;a href="#cb1-44" aria-hidden="true" tabindex="-1"&gt;&lt;/a&gt;    &lt;span class="co"&gt;# sort dominant colors by cluster size&lt;/span&gt;&lt;/span&gt;
&lt;span id="cb1-45"&gt;&lt;a href="#cb1-45" aria-hidden="true" tabindex="-1"&gt;&lt;/a&gt;    buckets &lt;span class="op"&gt;=&lt;/span&gt; [Bucket(rep) &lt;span class="cf"&gt;for&lt;/span&gt; rep &lt;span class="kw"&gt;in&lt;/span&gt; _r]&lt;/span&gt;
&lt;span id="cb1-46"&gt;&lt;a href="#cb1-46" aria-hidden="true" tabindex="-1"&gt;&lt;/a&gt;    _s, _ &lt;span class="op"&gt;=&lt;/span&gt; vq(oks, _r)&lt;/span&gt;
&lt;span id="cb1-47"&gt;&lt;a href="#cb1-47" aria-hidden="true" tabindex="-1"&gt;&lt;/a&gt;    &lt;span class="cf"&gt;for&lt;/span&gt; idx, c &lt;span class="kw"&gt;in&lt;/span&gt; &lt;span class="bu"&gt;enumerate&lt;/span&gt;(oks):&lt;/span&gt;
&lt;span id="cb1-48"&gt;&lt;a href="#cb1-48" aria-hidden="true" tabindex="-1"&gt;&lt;/a&gt;        bucket_idx &lt;span class="op"&gt;=&lt;/span&gt; _s[idx]&lt;/span&gt;
&lt;span id="cb1-49"&gt;&lt;a href="#cb1-49" aria-hidden="true" tabindex="-1"&gt;&lt;/a&gt;        buckets[bucket_idx].append(c)&lt;/span&gt;
&lt;span id="cb1-50"&gt;&lt;a href="#cb1-50" aria-hidden="true" tabindex="-1"&gt;&lt;/a&gt;    buckets.sort(key&lt;span class="op"&gt;=&lt;/span&gt;&lt;span class="kw"&gt;lambda&lt;/span&gt; b: &lt;span class="bu"&gt;len&lt;/span&gt;(b), reverse&lt;span class="op"&gt;=&lt;/span&gt;&lt;span class="va"&gt;True&lt;/span&gt;)&lt;/span&gt;
&lt;span id="cb1-51"&gt;&lt;a href="#cb1-51" aria-hidden="true" tabindex="-1"&gt;&lt;/a&gt;    &lt;span class="cf"&gt;return&lt;/span&gt; [b.rep &lt;span class="cf"&gt;for&lt;/span&gt; b &lt;span class="kw"&gt;in&lt;/span&gt; buckets]&lt;/span&gt;
&lt;span id="cb1-52"&gt;&lt;a href="#cb1-52" aria-hidden="true" tabindex="-1"&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id="cb1-53"&gt;&lt;a href="#cb1-53" aria-hidden="true" tabindex="-1"&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id="cb1-54"&gt;&lt;a href="#cb1-54" aria-hidden="true" tabindex="-1"&gt;&lt;/a&gt;&lt;span class="kw"&gt;def&lt;/span&gt; make_uniform_clusters(oks, n&lt;span class="op"&gt;=&lt;/span&gt;&lt;span class="dv"&gt;20&lt;/span&gt;):&lt;/span&gt;
&lt;span id="cb1-55"&gt;&lt;a href="#cb1-55" aria-hidden="true" tabindex="-1"&gt;&lt;/a&gt;    &lt;span class="kw"&gt;def&lt;/span&gt; make_grid(n&lt;span class="op"&gt;=&lt;/span&gt;&lt;span class="dv"&gt;20&lt;/span&gt;):&lt;/span&gt;
&lt;span id="cb1-56"&gt;&lt;a href="#cb1-56" aria-hidden="true" tabindex="-1"&gt;&lt;/a&gt;        code_steps &lt;span class="op"&gt;=&lt;/span&gt; np.linspace(&lt;span class="op"&gt;-&lt;/span&gt;&lt;span class="fl"&gt;1.0&lt;/span&gt;, &lt;span class="fl"&gt;1.0&lt;/span&gt;, num&lt;span class="op"&gt;=&lt;/span&gt;n)&lt;/span&gt;
&lt;span id="cb1-57"&gt;&lt;a href="#cb1-57" aria-hidden="true" tabindex="-1"&gt;&lt;/a&gt;        &lt;span class="cf"&gt;return&lt;/span&gt; &lt;span class="bu"&gt;list&lt;/span&gt;(itertools.product(code_steps, code_steps, code_steps))&lt;/span&gt;
&lt;span id="cb1-58"&gt;&lt;a href="#cb1-58" aria-hidden="true" tabindex="-1"&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id="cb1-59"&gt;&lt;a href="#cb1-59" aria-hidden="true" tabindex="-1"&gt;&lt;/a&gt;    prod &lt;span class="op"&gt;=&lt;/span&gt; make_grid(n)&lt;/span&gt;
&lt;span id="cb1-60"&gt;&lt;a href="#cb1-60" aria-hidden="true" tabindex="-1"&gt;&lt;/a&gt;    buckets &lt;span class="op"&gt;=&lt;/span&gt; [Bucket(rep) &lt;span class="cf"&gt;for&lt;/span&gt; rep &lt;span class="kw"&gt;in&lt;/span&gt; prod]&lt;/span&gt;
&lt;span id="cb1-61"&gt;&lt;a href="#cb1-61" aria-hidden="true" tabindex="-1"&gt;&lt;/a&gt;    _r, _ &lt;span class="op"&gt;=&lt;/span&gt; vq(oks, prod)&lt;/span&gt;
&lt;span id="cb1-62"&gt;&lt;a href="#cb1-62" aria-hidden="true" tabindex="-1"&gt;&lt;/a&gt;    &lt;span class="cf"&gt;for&lt;/span&gt; idx, c &lt;span class="kw"&gt;in&lt;/span&gt; &lt;span class="bu"&gt;enumerate&lt;/span&gt;(oks):&lt;/span&gt;
&lt;span id="cb1-63"&gt;&lt;a href="#cb1-63" aria-hidden="true" tabindex="-1"&gt;&lt;/a&gt;        bucket_idx &lt;span class="op"&gt;=&lt;/span&gt; _r[idx]&lt;/span&gt;
&lt;span id="cb1-64"&gt;&lt;a href="#cb1-64" aria-hidden="true" tabindex="-1"&gt;&lt;/a&gt;        buckets[bucket_idx].append(c)&lt;/span&gt;
&lt;span id="cb1-65"&gt;&lt;a href="#cb1-65" aria-hidden="true" tabindex="-1"&gt;&lt;/a&gt;    buckets.sort(key&lt;span class="op"&gt;=&lt;/span&gt;&lt;span class="kw"&gt;lambda&lt;/span&gt; b: &lt;span class="bu"&gt;len&lt;/span&gt;(b), reverse&lt;span class="op"&gt;=&lt;/span&gt;&lt;span class="va"&gt;True&lt;/span&gt;)&lt;/span&gt;
&lt;span id="cb1-66"&gt;&lt;a href="#cb1-66" aria-hidden="true" tabindex="-1"&gt;&lt;/a&gt;    &lt;span class="cf"&gt;return&lt;/span&gt; buckets&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
</content><link href="https://pitsidianak.is/blog/posts/2021-08-17_concept_to_color.html" rel="alternate"/><published>2021-08-17T00:00:00+02:00</published></entry><entry><id>https://pitsidianak.is/blog/posts/2022-03-26_Django_jobs.html</id><title>Running minor tasks with a simple job system in Django</title><updated>2023-03-24T18:21:35.409958+00:00</updated><content type="html">&lt;p&gt;Suppose you have a Django website that needs to run jobs and when
exactly it runs and idempotence are not important, as long as it
eventually runs soon enough.&lt;/p&gt;
&lt;p&gt;Examples:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;run and collect statistics on data&lt;/li&gt;
&lt;li&gt;send or process received &lt;a
href="https://www.w3.org/TR/webmention/"&gt;Webmentions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;cache remote URL contents&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;You can encode a generic job function as a Django model and store it
in the database. The job’s function is a plain text field that must
include a valid Python dotted path of a function, that is, on runtime we
must be able to import the function by using its path from the given
string.&lt;/p&gt;
&lt;pre class="python3"&gt;&lt;code&gt;from django.db import models
from django.utils.timezone import make_aware
from django.utils.module_loading import import_string

class JobKind(models.Model):
    id = models.AutoField(primary_key=True)
    dotted_path = models.TextField(null=False, blank=False, unique=True)
    created = models.DateTimeField(auto_now_add=True, null=False, blank=False)
    last_modified = models.DateTimeField(auto_now_add=True, null=False, blank=False)

    def __str__(self):
        return self.dotted_path

    @staticmethod
    def from_func(func):
        if isinstance(func, types.FunctionType):
            dotted_path = f&amp;quot;{func.__module__}.{func.__name__}&amp;quot;
            ret, _ = JobKind.objects.get_or_create(dotted_path=dotted_path)
            return ret
        else:
            raise TypeError

    def run(self, job):
        try:
            func = import_string(self.dotted_path)
            return func(job)
        except ImportError:
            logging.error(f&amp;quot;Could not resolve job dotted_path: {self.dotted_path}&amp;quot;)
            raise ImportError&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;You can implement a &lt;code&gt;Job&lt;/code&gt; Django model that can run a
&lt;code&gt;JobKind&lt;/code&gt; as follows:&lt;/p&gt;
&lt;pre class="python3"&gt;&lt;code&gt;class Job(models.Model):
    id = models.AutoField(primary_key=True)
    kind = models.ForeignKey(JobKind, null=True, on_delete=models.SET_NULL)
    created = models.DateTimeField(auto_now_add=True)
    active = models.BooleanField(default=True, null=False, blank=False)
    periodic = models.BooleanField(default=False, null=False, blank=False)
    failed = models.BooleanField(default=False, null=False, blank=False)
    last_run = models.DateTimeField(default=None, null=True, blank=True)
    logs = models.TextField(null=True, blank=True)
    data = models.JSONField(null=True, blank=True)

    def __str__(self):
        return f&amp;quot;{self.kind} {self.data}&amp;quot;

    def run(self):
        if not self.kind_id:
            return
        self.last_run = make_aware(datetime.now())
        try:
            res = self.kind.run(self)
            if res and not self.periodic:
                self.active = False
            if isinstance(res, str):
                if self.logs is None:
                    self.logs = &amp;quot;&amp;quot;
                self.logs += res
            self.failed = False
            self.save(update_fields=[&amp;quot;last_run&amp;quot;, &amp;quot;failed&amp;quot;, &amp;quot;active&amp;quot;, &amp;quot;logs&amp;quot;])
        except Exception as exc:
            if self.logs is None:
                self.logs = &amp;quot;&amp;quot;
            self.logs += str(exc)
            self.failed = True
            self.save(update_fields=[&amp;quot;last_run&amp;quot;, &amp;quot;failed&amp;quot;, &amp;quot;logs&amp;quot;])
        return&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now you can run pending jobs with cron by making a Django management
command:&lt;/p&gt;
&lt;pre class="python3"&gt;&lt;code&gt;# my_project/management/commands/run_jobs.py
from django.core.management.base import BaseCommand
from my_project.jobs import Job

class Command(BaseCommand):
    help = &amp;quot;Run pending jobs&amp;quot;

    def handle(self, *args, **kwargs):
        for job in Job.objects.filter(active=True):
            job.run()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;You can also setup a thread that sleeps and periodically wakes up to
run any pending tasks by overriding the &lt;code&gt;ready&lt;/code&gt; method on
your &lt;code&gt;django.apps.AppConfig&lt;/code&gt;:&lt;/p&gt;
&lt;pre class="python3"&gt;&lt;code&gt;# my_project/apps.py
import threading

    def ready(self):
        import my_project.jobs

        def sched_jobs():
            from my_project.jobs import Job
            import sched
            import time

            def exec_fn():
                for job in Job.objects.filter(active=True, failed=False):
                    job.run()

            s = sched.scheduler(time.time, time.sleep)
            while True:
                s.enter(15 * 60, 1, exec_fn)
                s.run(blocking=True)

        self.scheduling_thread = threading.Thread(target=sched_jobs, daemon=True)
        self.scheduling_thread.name = &amp;quot;scheduling_thread&amp;quot;
        self.scheduling_thread.start()&lt;/code&gt;&lt;/pre&gt;
&lt;table role="presentation"&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;p&gt;&lt;a href="/blog/static/images/job_kinds.png"&gt;&lt;img src="/blog/static/images/job_kinds.png" alt="JobKind django admin panel" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;&lt;a href="/blog/static/images/job_admin.png"&gt;&lt;img src="/blog/static/images/job_admin.png" alt="Job django admin panel" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;
&lt;p&gt;You can easily inspect jobs from the Django admin panel by
registering the models to the admin app:&lt;/p&gt;
&lt;pre class="python3"&gt;&lt;code&gt;@admin.action(description=&amp;quot;Run jobs&amp;quot;)
def run_jobs(modeladmin, request, queryset):
    for job in queryset.all():
        job.run()

class JobAdmin(ModelAdmin):
    def success(self, obj):
        if obj.last_run is None:
            return None
        return not obj.failed

    readonly_fields = (
        &amp;quot;json_pprint&amp;quot;,
    )

    @admin.display(description=&amp;quot;JSON pretty print&amp;quot;)
    def json_pprint(self, instance):
        import json

        return mark_safe(
            f&amp;quot;&amp;quot;&amp;quot;&amp;lt;pre&amp;gt;{json.dumps(instance.data, sort_keys=True, indent=4)}&amp;lt;/pre&amp;gt;&amp;quot;&amp;quot;&amp;quot;
        )

    success.boolean = True
    ordering = [&amp;quot;-created&amp;quot;, &amp;quot;-last_run&amp;quot;]
    actions = [run_jobs]
    list_display = [&amp;quot;__str__&amp;quot;, &amp;quot;created&amp;quot;, &amp;quot;active&amp;quot;, &amp;quot;periodic&amp;quot;, &amp;quot;success&amp;quot;, &amp;quot;last_run&amp;quot;]
    list_filter = [
        &amp;quot;kind&amp;quot;,
        &amp;quot;active&amp;quot;,
        &amp;quot;failed&amp;quot;,
    ]


class JobKindAdmin(ModelAdmin):
    def resolves(self, obj):
        from django.utils.module_loading import import_string

        try:
            _ = import_string(obj.dotted_path)
            return True
        except ImportError:
            return False

    resolves.boolean = True
    ordering = [&amp;quot;-created&amp;quot;, &amp;quot;-last_modified&amp;quot;]
    list_display = [&amp;quot;__str__&amp;quot;, &amp;quot;created&amp;quot;, &amp;quot;last_modified&amp;quot;, &amp;quot;resolves&amp;quot;]&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now you can create new jobs from the admin panel and from code
elsewhere in your app. Suppose you have an API endpoint to receive
Webmentions. You can avoid blocking the HTTP response by scheduling the
processing for later in the view:&lt;/p&gt;
&lt;pre class="python3"&gt;&lt;code&gt;from my_project.jobs import Job, JobKind

# schedule job
kind = JobKind.from_func(webmention_receive)
_job_obj, _ = Job.objects.get_or_create(
    kind=kind, periodic=False, data={&amp;quot;source&amp;quot;: source, &amp;quot;target&amp;quot;: target}
)&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id="improvements"&gt;Improvements&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Make a job to periodically delete/cleanup old jobs&lt;/li&gt;
&lt;li&gt;override &lt;code&gt;Job&lt;/code&gt;’s &lt;code&gt;save&lt;/code&gt; method to limit the
maximum amount of jobs in the database&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="real-life-example"&gt;Real life example&lt;/h2&gt;
&lt;p&gt;This pattern is used in the &lt;code&gt;sic.pm&lt;/code&gt; link aggregator
community: &lt;a
href="https://github.com/epilys/sic/blob/158284451097ab94da0efe5cbdfae14b0bb3a1a8/sic/jobs.py"
class="uri"&gt;https://github.com/epilys/sic/blob/158284451097ab94da0efe5cbdfae14b0bb3a1a8/sic/jobs.py&lt;/a&gt;&lt;/p&gt;
</content><link href="https://pitsidianak.is/blog/posts/2022-03-26_Django_jobs.html" rel="alternate"/><published>2022-03-26T00:00:00+02:00</published></entry><entry><id>https://pitsidianak.is/blog/posts/2021-09-06_nntpserver.py:_nodependency_single_file_NNTP_server_library.html</id><title>nntpserver.py: no-dependency single file NNTP server library</title><updated>2023-03-24T18:21:35.409946+00:00</updated><content type="html">&lt;p&gt;Repository: &lt;a href="https://github.com/epilys/nntpserver.py"
class="uri"&gt;https://github.com/epilys/nntpserver.py&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;No-dependency, single file NNTP server library for developing modern,
rfc3977-compliant (bridge) NNTP servers for python &amp;gt;=3.7. Developed
as part of &lt;a
href="https://github.com/epilys/tade"&gt;&lt;code&gt;tade&lt;/code&gt;&lt;/a&gt;, a web
discussion forum with mailing list/NNTP interfaces which powers the &lt;a
href="https://sic.pm" class="uri"&gt;https://sic.pm&lt;/a&gt; link
aggregator.&lt;/p&gt;
&lt;p&gt;Included example servers are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;example_server.py&lt;/code&gt; returning hard-coded articles&lt;/li&gt;
&lt;li&gt;&lt;code&gt;hnnntp.py&lt;/code&gt; querying &lt;a
href="https://news.ycombinator.com"
class="uri"&gt;https://news.ycombinator.com&lt;/a&gt; (hackernews) API and
caching results in an sqlite3 database. A public instance &lt;em&gt;might&lt;/em&gt;
be online at nessuent.xyz:564 (TLS only)&lt;/li&gt;
&lt;/ul&gt;
&lt;table role="presentation" align="center"&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;p align="center"&gt;
&lt;kbd &gt;&lt;img src="/blog/static/images/commodore-amiga.png" alt="screenshot of nntp server accessed via commodore amiga" title="screenshot of nntp server accessed via commodore amiga" height="300"  style="width: 100%; height: auto; " /&gt;&lt;/kbd&gt;
&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;th&gt;
&lt;sup&gt;https://sic.pm NNTP server that uses &lt;code&gt;nntpserver.py&lt;/code&gt;
&lt;br /&gt;accessed on a Commodore Amiga with
&lt;a href="http://newscoaster.sourceforge.net/"&gt;NewsCoaster&lt;/a&gt;
client&lt;/sup&gt;
&lt;/th&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Running &lt;code&gt;example_server.py&lt;/code&gt;:&lt;/p&gt;
&lt;pre class="shell"&gt;&lt;code&gt;$ python3 example_server.py --connect-with-nntplib
Listening on localhost:9999
Connecting with nntplib...
New connection.
sending 201 NNTP Service Ready, posting prohibited
got: CAPABILITIES
sending 101 Capability list:
sending VERSION 2
sending READER
sending HDR
sending LIST ACTIVE NEWSGROUPS OVERVIEW.FMT SUBSCRIPTIONS
sending OVER
sending .
got: GROUP example.all
Group name example.all
sending 211 1 1 1 example.all
got: XOVER 1-1
sending 224 Overview information follows (multi-line)
sending 1       Hello world!    epilys &amp;lt;epilys@example.com&amp;gt;     Wed, 01 Sep 2021 15:06:01 +0000 &amp;lt;unique@example.com&amp;gt;            16      1
sending .
got: LIST OVERVIEW.FMT
sending 215 Order of fields in overview database.
sending Subject:
sending From:
sending Date:
sending Message-ID:
sending References:
sending Bytes:
sending Lines:
sending .
1 epilys &amp;lt;epilys@example.com&amp;gt; Hello world! (1)
Done with nntplib.&lt;/code&gt;&lt;/pre&gt;
</content><link href="https://pitsidianak.is/blog/posts/2021-09-06_nntpserver.py:_nodependency_single_file_NNTP_server_library.html" rel="alternate"/><published>2021-09-06T00:00:00+02:00</published></entry><entry><id>https://pitsidianak.is/blog/posts/2021-11-26_kitkat.html</id><title>kitkat from scratch</title><updated>2023-03-24T18:21:35.409936+00:00</updated><content type="html">&lt;p&gt;The now iconic &lt;code&gt;catclock&lt;/code&gt; from plan9 implemented from
scratch in Rust. The only dependency is a raw framebuffer window drawing
library, &lt;code&gt;minifb&lt;/code&gt;. Install with&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cargo install kitkat&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/epilys/kitkat"
class="uri"&gt;https://github.com/epilys/kitkat&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://crates.io/crates/kitkat"
class="uri"&gt;https://crates.io/crates/kitkat&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The source of plan9’s &lt;code&gt;catclock&lt;/code&gt; is located &lt;a
href="https://github.com/plan9foundation/plan9/blob/main/sys/src/games/catclock.c"&gt;here&lt;/a&gt;&lt;/p&gt;
&lt;pre class="shell"&gt;&lt;code&gt;$ kitkat --help
Usage: kitkat [--hook|--crazy|--offset OFFSET|--borderless|--resize|--sunmoon|--moon|--date]

Displays a kit kat clock with the system time, or the system time with given offset if the --offset
argument is provided.

      --hook                 show a hooked tail instead of the default drop shaped one
      --crazy                go faster for each time this argument is invoked
      --offset OFFSET        add OFFSET to current system time (only the first given
                             offset will be used)
      --borderless
      --resize
      --sunmoon              show sun or moon phase depending on the hour
      --moon                 show only moon phase
      --date                 show month date
      --dog                  show an italian greyhound named Gaius Octavius Maximus instead of a cat

      OFFSET format is [+-]{0,1}\d\d:\d\d, e.g: 02:00 or -03:45 or +00:00&lt;/code&gt;&lt;/pre&gt;
&lt;table role="presentation"&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;p&gt;&lt;img src="/blog/static/images/kitkat-round.gif" /&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;&lt;img src="/blog/static/images/kitkat-hook.gif" /&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;&lt;img src="/blog/static/images/kitkat-resized.jpg" /&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;&lt;img src="/blog/static/images/dogkat.gif" /&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;th&gt;
Default drop shaped tail.
&lt;/th&gt;
&lt;th&gt;
Hooked tail with &lt;code&gt;--hook&lt;/code&gt;.
&lt;/th&gt;
&lt;th&gt;
Resizable window with &lt;code&gt;--resize&lt;/code&gt;.
&lt;/th&gt;
&lt;th&gt;
Dog instead of cat with &lt;code&gt;--dog&lt;/code&gt;.
&lt;/th&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;p&gt;&lt;img src="/blog/static/images/kitkat-date-and-sun.jpg" /&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;&lt;img src="/blog/static/images/kitkat-moon-phase-only.jpg" /&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;th&gt;
Showing current date and sun/moon phase status.
&lt;/th&gt;
&lt;th&gt;
Showing just moon phase status.
&lt;/th&gt;
&lt;th&gt;
&lt;/th&gt;
&lt;th&gt;
&lt;/th&gt;
&lt;/tr&gt;
&lt;/table&gt;
</content><link href="https://pitsidianak.is/blog/posts/2021-11-26_kitkat.html" rel="alternate"/><published>2021-11-26T00:00:00+02:00</published></entry><entry><id>https://pitsidianak.is/blog/posts/2021-04-19_anatomy_of_melancholy.html</id><title>Typesetting the 17th century book "The Anatomy Of Melancholy" by Robert Burton</title><updated>2023-03-24T18:21:35.409926+00:00</updated><content type="html">&lt;p&gt;Project website: &lt;a
href="https://epilys.github.io/anatomy-of-melancholy-latex"
class="uri"&gt;https://epilys.github.io/anatomy-of-melancholy-latex&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Technical document: &lt;a
href="https://epilys.github.io/anatomy-of-melancholy-latex/style.pdf"&gt;‘The
Anatomy of the “Anatomy of Melancholy”’&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Page thumbnails:&lt;/p&gt;
&lt;figure&gt;
&lt;img src="/blog/static/images/anatomy_spread.png" alt="Pages 15-16" /&gt;
&lt;figcaption aria-hidden="true"&gt;Pages 15-16&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;figure&gt;
&lt;img src="/blog/static/images/65-66.png" alt="Pages 65-66" /&gt;
&lt;figcaption aria-hidden="true"&gt;Pages 65-66&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;figure&gt;
&lt;img src="/blog/static/images/163-164.png" alt="Pages 163-164" /&gt;
&lt;figcaption aria-hidden="true"&gt;Pages 163-164&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;figure&gt;
&lt;img src="/blog/static/images/241-242.png" alt="Pages 241-242" /&gt;
&lt;figcaption aria-hidden="true"&gt;Pages 241-242&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;figure&gt;
&lt;img src="/blog/static/images/307-308.png" alt="Pages 307-308" /&gt;
&lt;figcaption aria-hidden="true"&gt;Pages 307-308&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;figure&gt;
&lt;img src="/blog/static/images/595-596.png" alt="Pages 595-596" /&gt;
&lt;figcaption aria-hidden="true"&gt;Pages 595-596&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;figure&gt;
&lt;img src="/blog/static/images/lycanthropia.png" alt="Lycanthropia" /&gt;
&lt;figcaption aria-hidden="true"&gt;Lycanthropia&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;figure&gt;
&lt;img src="/blog/static/images/output-872.png" alt="Page 872" /&gt;
&lt;figcaption aria-hidden="true"&gt;Page 872&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;figure&gt;
&lt;img src="/blog/static/images/1479-1480.png" alt="Pages 1479-1480" /&gt;
&lt;figcaption aria-hidden="true"&gt;Pages 1479-1480&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;figure&gt;
&lt;img src="/blog/static/images/1493-1494.png" alt="Pages 1493-1494" /&gt;
&lt;figcaption aria-hidden="true"&gt;Pages 1493-1494&lt;/figcaption&gt;
&lt;/figure&gt;
</content><link href="https://pitsidianak.is/blog/posts/2021-04-19_anatomy_of_melancholy.html" rel="alternate"/><published>2021-04-19T00:00:00+02:00</published></entry><entry><id>https://pitsidianak.is/blog/posts/2021-08-14_tag-wasm-rust.html</id><title>Tag input assistant for &lt;select&gt; elements in Rust/wasm</title><updated>2023-03-24T18:21:35.409915+00:00</updated><content type="html">&lt;p&gt;Choosing multiple options with the plain HTML
&lt;code&gt;&amp;lt;select&amp;gt;&lt;/code&gt; element limits you to what the browser
chooses to display it as. This is necessary because it has to be
accessible to assistive technologies that would choose to render it
differently. Here’s how &lt;code&gt;&amp;lt;select&amp;gt;&lt;/code&gt; looks in my browser
(Firefox):&lt;/p&gt;
&lt;p&gt;&lt;img src="/blog/static/images/wasm1.png" /&gt;&lt;/p&gt;
&lt;p&gt;In the post submission form of the &lt;a href="https://sic.pm"
class="uri"&gt;https://sic.pm&lt;/a&gt; link aggregator community you can select
tags to categorise your post. I wrote a small “input assistant” module
in Rust and Webassembly that enhances but not replaces the
&lt;code&gt;&amp;lt;select&amp;gt;&lt;/code&gt; element. The dynamic usage is not required
since the &lt;code&gt;&amp;lt;select&amp;gt;&lt;/code&gt; element works always even with
javascript disabled. Here’s the finished result:&lt;/p&gt;
&lt;figure&gt;
&lt;video controls loop="true" autoplay="true" src="/blog/static/images/wasm2.webm"&gt;
&lt;a href="/blog/static/images/wasm2.webm"&gt;View video&lt;/a&gt;
&lt;/video&gt;
&lt;/figure&gt;
&lt;p&gt;The code is AGPL-3.0 licensed and is located &lt;a
href="https://github.com/epilys/sic/tree/main/tools/tag-input-wasm"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id="project-setup"&gt;Project setup&lt;/h2&gt;
&lt;p&gt;I followed the &lt;a
href="https://rustwasm.github.io/book/game-of-life/hello-world.html"&gt;hello
world&lt;/a&gt; example from the official &lt;code&gt;rustwasm&lt;/code&gt; guide. It uses
the &lt;code&gt;wasm-pack&lt;/code&gt; tool to compile your Rust project to a
&lt;code&gt;wasm&lt;/code&gt; module. I chose not to use &lt;code&gt;npm&lt;/code&gt; and any
javascript other than what’s strictly necessary.&lt;/p&gt;
&lt;p&gt;The browser and javascript APIs are exposed to Rust via the
&lt;code&gt;js-sys&lt;/code&gt; and &lt;code&gt;web-sys&lt;/code&gt; crates, so we can do what
we would normally do in Javascript: set up event callbacks and
manipulate the DOM. For inspiration, I followed the general idea
outlined in this logrocket.com guide: &lt;a
href="https://blog.logrocket.com/building-a-tag-input-field-component-for-react/"&gt;Building
a tag input field component for React&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;web-sys&lt;/code&gt; crate exposes each API as different crate
features. By default, it has none. We explicitly enable the features we
end up needing:&lt;/p&gt;
&lt;div class="sourceCode" id="cb1"&gt;&lt;pre
class="sourceCode toml"&gt;&lt;code class="sourceCode toml"&gt;&lt;span id="cb1-1"&gt;&lt;a href="#cb1-1" aria-hidden="true" tabindex="-1"&gt;&lt;/a&gt;&lt;span class="kw"&gt;[&lt;/span&gt;&lt;span class="dt"&gt;dependencies&lt;/span&gt;&lt;span class="kw"&gt;]&lt;/span&gt;&lt;/span&gt;
&lt;span id="cb1-2"&gt;&lt;a href="#cb1-2" aria-hidden="true" tabindex="-1"&gt;&lt;/a&gt;&lt;span class="dt"&gt;wasm-bindgen&lt;/span&gt; &lt;span class="op"&gt;=&lt;/span&gt; &lt;span class="st"&gt;&amp;quot;0.2.63&amp;quot;&lt;/span&gt;&lt;/span&gt;
&lt;span id="cb1-3"&gt;&lt;a href="#cb1-3" aria-hidden="true" tabindex="-1"&gt;&lt;/a&gt;&lt;span class="dt"&gt;js-sys&lt;/span&gt; &lt;span class="op"&gt;=&lt;/span&gt; &lt;span class="st"&gt;&amp;quot;0.3.52&amp;quot;&lt;/span&gt;&lt;/span&gt;
&lt;span id="cb1-4"&gt;&lt;a href="#cb1-4" aria-hidden="true" tabindex="-1"&gt;&lt;/a&gt;&lt;span class="dt"&gt;web-sys&lt;/span&gt; &lt;span class="op"&gt;=&lt;/span&gt; &lt;span class="op"&gt;{ &lt;/span&gt;&lt;span class="dt"&gt;version&lt;/span&gt;&lt;span class="op"&gt; =&lt;/span&gt; &lt;span class="st"&gt;&amp;quot;0.3.52&amp;quot;&lt;/span&gt;&lt;span class="op"&gt;, &lt;/span&gt;&lt;span class="dt"&gt;features&lt;/span&gt;&lt;span class="op"&gt; =&lt;/span&gt; &lt;span class="op"&gt;[&lt;/span&gt;&lt;span class="st"&gt;&amp;quot;Document&amp;quot;&lt;/span&gt;&lt;span class="op"&gt;,&lt;/span&gt; &lt;span class="st"&gt;&amp;quot;Text&amp;quot;&lt;/span&gt;&lt;span class="op"&gt;,&lt;/span&gt; &lt;span class="st"&gt;&amp;quot;Window&amp;quot;&lt;/span&gt;&lt;span class="op"&gt;,&lt;/span&gt; &lt;span class="st"&gt;&amp;quot;HtmlElement&amp;quot;&lt;/span&gt;&lt;span class="op"&gt;,&lt;/span&gt; &lt;span class="st"&gt;&amp;quot;Element&amp;quot;&lt;/span&gt;&lt;span class="op"&gt;,&lt;/span&gt; &lt;span class="st"&gt;&amp;quot;console&amp;quot;&lt;/span&gt;&lt;span class="op"&gt;,&lt;/span&gt; &lt;span class="st"&gt;&amp;quot;HtmlInputElement&amp;quot;&lt;/span&gt;&lt;span class="op"&gt;,&lt;/span&gt; &lt;span class="st"&gt;&amp;quot;KeyboardEvent&amp;quot;&lt;/span&gt;&lt;span class="op"&gt;,&lt;/span&gt; &lt;span class="st"&gt;&amp;quot;Node&amp;quot;&lt;/span&gt;&lt;span class="op"&gt;,&lt;/span&gt; &lt;span class="st"&gt;&amp;quot;NodeList&amp;quot;&lt;/span&gt;&lt;span class="op"&gt;,&lt;/span&gt; &lt;span class="st"&gt;&amp;quot;HtmlOptionElement&amp;quot;&lt;/span&gt;&lt;span class="op"&gt;,&lt;/span&gt; &lt;span class="st"&gt;&amp;quot;EventTarget&amp;quot;&lt;/span&gt;&lt;span class="op"&gt;,&lt;/span&gt; &lt;span class="st"&gt;&amp;quot;HtmlSpanElement&amp;quot;&lt;/span&gt;&lt;span class="op"&gt;,&lt;/span&gt; &lt;span class="st"&gt;&amp;quot;HtmlSelectElement&amp;quot;&lt;/span&gt;&lt;span class="op"&gt;] }&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id="design-considerations"&gt;Design considerations&lt;/h2&gt;
&lt;p&gt;We will need a way to track the state of the
&lt;code&gt;&amp;lt;select&amp;gt;&lt;/code&gt; field so we create a &lt;code&gt;State&lt;/code&gt;
struct singleton that we put behind a &lt;code&gt;Mutex&lt;/code&gt; and then an
&lt;code&gt;Arc&lt;/code&gt;. This way when registering the event callbacks we can
pass around a cloned state reference and access it from there. Every
callback will have its own
&lt;code&gt;Arc&amp;lt;Mutex&amp;lt;State&amp;gt;&amp;gt;&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;(Note: this is the general design pattern I followed when porting my
terminal e-mail client &lt;a href="https://github.com/meli/meli"&gt;meli&lt;/a&gt;
to wasm for &lt;a href="https://meli.delivery/wasm2.html"&gt;an interactive
web demo&lt;/a&gt;. The terminal is simulated by rendering an
&lt;code&gt;&amp;lt;svg&amp;gt;&lt;/code&gt; element with each terminal cell.)&lt;/p&gt;
&lt;p&gt;We need a way to know what options are valid. One could just read the
options from &lt;code&gt;&amp;lt;select&amp;gt;&lt;/code&gt; but I chose to read them from a
&lt;code&gt;json&lt;/code&gt; script element in order to include associated colors
for each tag. The &lt;code&gt;json&lt;/code&gt; &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; element
should contain a dictionary of valid options as keys and hex colors as
values and render as:&lt;/p&gt;
&lt;div class="sourceCode" id="cb2"&gt;&lt;pre
class="sourceCode html"&gt;&lt;code class="sourceCode html"&gt;&lt;span id="cb2-1"&gt;&lt;a href="#cb2-1" aria-hidden="true" tabindex="-1"&gt;&lt;/a&gt;&lt;span class="kw"&gt;&amp;lt;script&lt;/span&gt; &lt;span class="er"&gt;id&lt;/span&gt;&lt;span class="ot"&gt;=&lt;/span&gt;&lt;span class="st"&gt;&amp;quot;tags_json&amp;quot;&lt;/span&gt;&lt;span class="ot"&gt; type=&lt;/span&gt;&lt;span class="st"&gt;&amp;quot;application/json&amp;quot;&lt;/span&gt;&lt;span class="kw"&gt;&amp;gt;&lt;/span&gt;{&lt;span class="st"&gt;&amp;quot;programming languages&amp;quot;&lt;/span&gt;&lt;span class="op"&gt;:&lt;/span&gt; &lt;span class="st"&gt;&amp;quot;#ffffff&amp;quot;&lt;/span&gt;&lt;span class="op"&gt;,&lt;/span&gt; &lt;span class="st"&gt;&amp;quot;python&amp;quot;&lt;/span&gt;&lt;span class="op"&gt;:&lt;/span&gt; &lt;span class="st"&gt;&amp;quot;#3776ab&amp;quot;&lt;/span&gt;&lt;span class="op"&gt;,&lt;/span&gt; }&lt;span class="kw"&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Finally, a &lt;code&gt;&amp;lt;datalist&amp;gt;&lt;/code&gt; element will be used to
enable autocomplete for the input.&lt;/p&gt;
&lt;h2 id="implementation"&gt;Implementation&lt;/h2&gt;
&lt;p&gt;The &lt;code&gt;State&lt;/code&gt; definition:&lt;/p&gt;
&lt;div class="sourceCode" id="cb3"&gt;&lt;pre
class="sourceCode rust"&gt;&lt;code class="sourceCode rust"&gt;&lt;span id="cb3-1"&gt;&lt;a href="#cb3-1" aria-hidden="true" tabindex="-1"&gt;&lt;/a&gt;&lt;span class="kw"&gt;struct&lt;/span&gt; State &lt;span class="op"&gt;{&lt;/span&gt;&lt;/span&gt;
&lt;span id="cb3-2"&gt;&lt;a href="#cb3-2" aria-hidden="true" tabindex="-1"&gt;&lt;/a&gt;    tags&lt;span class="op"&gt;:&lt;/span&gt; &lt;span class="dt"&gt;Vec&lt;/span&gt;&lt;span class="op"&gt;&amp;lt;&lt;/span&gt;&lt;span class="dt"&gt;String&lt;/span&gt;&lt;span class="op"&gt;&amp;gt;,&lt;/span&gt;&lt;/span&gt;
&lt;span id="cb3-3"&gt;&lt;a href="#cb3-3" aria-hidden="true" tabindex="-1"&gt;&lt;/a&gt;    is_key_released&lt;span class="op"&gt;:&lt;/span&gt; &lt;span class="dt"&gt;bool&lt;/span&gt;&lt;span class="op"&gt;,&lt;/span&gt; &lt;span class="co"&gt;// Track key release (see below)&lt;/span&gt;&lt;/span&gt;
&lt;span id="cb3-4"&gt;&lt;a href="#cb3-4" aria-hidden="true" tabindex="-1"&gt;&lt;/a&gt;    valid_tags_set&lt;span class="op"&gt;:&lt;/span&gt; &lt;span class="dt"&gt;Vec&lt;/span&gt;&lt;span class="op"&gt;&amp;lt;&lt;/span&gt;&lt;span class="dt"&gt;String&lt;/span&gt;&lt;span class="op"&gt;&amp;gt;,&lt;/span&gt;&lt;/span&gt;
&lt;span id="cb3-5"&gt;&lt;a href="#cb3-5" aria-hidden="true" tabindex="-1"&gt;&lt;/a&gt;    current_input&lt;span class="op"&gt;:&lt;/span&gt; &lt;span class="dt"&gt;String&lt;/span&gt;&lt;span class="op"&gt;,&lt;/span&gt;&lt;/span&gt;
&lt;span id="cb3-6"&gt;&lt;a href="#cb3-6" aria-hidden="true" tabindex="-1"&gt;&lt;/a&gt;    valid_tags_map&lt;span class="op"&gt;:&lt;/span&gt; HashMap&lt;span class="op"&gt;&amp;lt;&lt;/span&gt;&lt;span class="dt"&gt;String&lt;/span&gt;&lt;span class="op"&gt;,&lt;/span&gt; (&lt;span class="dt"&gt;u8&lt;/span&gt;&lt;span class="op"&gt;,&lt;/span&gt; &lt;span class="dt"&gt;u8&lt;/span&gt;&lt;span class="op"&gt;,&lt;/span&gt; &lt;span class="dt"&gt;u8&lt;/span&gt;)&lt;span class="op"&gt;&amp;gt;,&lt;/span&gt;&lt;/span&gt;
&lt;span id="cb3-7"&gt;&lt;a href="#cb3-7" aria-hidden="true" tabindex="-1"&gt;&lt;/a&gt;    remove_tag_cb&lt;span class="op"&gt;:&lt;/span&gt; &lt;span class="pp"&gt;js_sys::&lt;/span&gt;Function&lt;span class="op"&gt;,&lt;/span&gt;&lt;/span&gt;
&lt;span id="cb3-8"&gt;&lt;a href="#cb3-8" aria-hidden="true" tabindex="-1"&gt;&lt;/a&gt;    field_name&lt;span class="op"&gt;:&lt;/span&gt; &lt;span class="dt"&gt;String&lt;/span&gt;&lt;span class="op"&gt;,&lt;/span&gt;&lt;/span&gt;
&lt;span id="cb3-9"&gt;&lt;a href="#cb3-9" aria-hidden="true" tabindex="-1"&gt;&lt;/a&gt;    select_element_id&lt;span class="op"&gt;:&lt;/span&gt; &lt;span class="dt"&gt;String&lt;/span&gt;&lt;span class="op"&gt;,&lt;/span&gt;&lt;/span&gt;
&lt;span id="cb3-10"&gt;&lt;a href="#cb3-10" aria-hidden="true" tabindex="-1"&gt;&lt;/a&gt;    tag_list_id&lt;span class="op"&gt;:&lt;/span&gt; &lt;span class="dt"&gt;String&lt;/span&gt;&lt;span class="op"&gt;,&lt;/span&gt;&lt;/span&gt;
&lt;span id="cb3-11"&gt;&lt;a href="#cb3-11" aria-hidden="true" tabindex="-1"&gt;&lt;/a&gt;    input_id&lt;span class="op"&gt;:&lt;/span&gt; &lt;span class="dt"&gt;String&lt;/span&gt;&lt;span class="op"&gt;,&lt;/span&gt;&lt;/span&gt;
&lt;span id="cb3-12"&gt;&lt;a href="#cb3-12" aria-hidden="true" tabindex="-1"&gt;&lt;/a&gt;    datalist_id&lt;span class="op"&gt;:&lt;/span&gt; &lt;span class="dt"&gt;String&lt;/span&gt;&lt;span class="op"&gt;,&lt;/span&gt;&lt;/span&gt;
&lt;span id="cb3-13"&gt;&lt;a href="#cb3-13" aria-hidden="true" tabindex="-1"&gt;&lt;/a&gt;    msg_id&lt;span class="op"&gt;:&lt;/span&gt; &lt;span class="dt"&gt;String&lt;/span&gt;&lt;span class="op"&gt;,&lt;/span&gt;&lt;/span&gt;
&lt;span id="cb3-14"&gt;&lt;a href="#cb3-14" aria-hidden="true" tabindex="-1"&gt;&lt;/a&gt;    singular_name&lt;span class="op"&gt;:&lt;/span&gt; &lt;span class="dt"&gt;String&lt;/span&gt;&lt;span class="op"&gt;,&lt;/span&gt; &lt;span class="co"&gt;/* The singular name of what the user calls the options,&lt;/span&gt;&lt;/span&gt;
&lt;span id="cb3-15"&gt;&lt;a href="#cb3-15" aria-hidden="true" tabindex="-1"&gt;&lt;/a&gt;&lt;span class="co"&gt;                              so that we can display it in error messages */&lt;/span&gt;&lt;/span&gt;
&lt;span id="cb3-16"&gt;&lt;a href="#cb3-16" aria-hidden="true" tabindex="-1"&gt;&lt;/a&gt;&lt;span class="op"&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;with the following methods:&lt;/p&gt;
&lt;div class="sourceCode" id="cb4"&gt;&lt;pre
class="sourceCode rust"&gt;&lt;code class="sourceCode rust"&gt;&lt;span id="cb4-1"&gt;&lt;a href="#cb4-1" aria-hidden="true" tabindex="-1"&gt;&lt;/a&gt;    add_tag(&lt;span class="op"&gt;&amp;amp;&lt;/span&gt;&lt;span class="kw"&gt;mut&lt;/span&gt; &lt;span class="kw"&gt;self&lt;/span&gt;&lt;span class="op"&gt;,&lt;/span&gt; tag&lt;span class="op"&gt;:&lt;/span&gt; &lt;span class="dt"&gt;String&lt;/span&gt;) &lt;span class="op"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="pp"&gt;std::result::&lt;/span&gt;&lt;span class="dt"&gt;Result&lt;/span&gt;&lt;span class="op"&gt;&amp;lt;&lt;/span&gt;()&lt;span class="op"&gt;,&lt;/span&gt; JsValue&lt;span class="op"&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id="cb4-2"&gt;&lt;a href="#cb4-2" aria-hidden="true" tabindex="-1"&gt;&lt;/a&gt;    pop(&lt;span class="op"&gt;&amp;amp;&lt;/span&gt;&lt;span class="kw"&gt;mut&lt;/span&gt; &lt;span class="kw"&gt;self&lt;/span&gt;) &lt;span class="op"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="dt"&gt;Option&lt;/span&gt;&lt;span class="op"&gt;&amp;lt;&lt;/span&gt;&lt;span class="dt"&gt;String&lt;/span&gt;&lt;span class="op"&gt;&amp;gt;&lt;/span&gt; &lt;span class="op"&gt;:&lt;/span&gt; method&lt;/span&gt;
&lt;span id="cb4-3"&gt;&lt;a href="#cb4-3" aria-hidden="true" tabindex="-1"&gt;&lt;/a&gt;    remove_tag(&lt;span class="op"&gt;&amp;amp;&lt;/span&gt;&lt;span class="kw"&gt;mut&lt;/span&gt; &lt;span class="kw"&gt;self&lt;/span&gt;&lt;span class="op"&gt;,&lt;/span&gt; event&lt;span class="op"&gt;:&lt;/span&gt; &lt;span class="pp"&gt;web_sys::&lt;/span&gt;Event) &lt;span class="op"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="pp"&gt;std::result::&lt;/span&gt;&lt;span class="dt"&gt;Result&lt;/span&gt;&lt;span class="op"&gt;&amp;lt;&lt;/span&gt;()&lt;span class="op"&gt;,&lt;/span&gt; JsValue&lt;span class="op"&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id="cb4-4"&gt;&lt;a href="#cb4-4" aria-hidden="true" tabindex="-1"&gt;&lt;/a&gt;    update_datalist(&lt;span class="op"&gt;&amp;amp;&lt;/span&gt;&lt;span class="kw"&gt;mut&lt;/span&gt; &lt;span class="kw"&gt;self&lt;/span&gt;) &lt;span class="op"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="pp"&gt;std::result::&lt;/span&gt;&lt;span class="dt"&gt;Result&lt;/span&gt;&lt;span class="op"&gt;&amp;lt;&lt;/span&gt;()&lt;span class="op"&gt;,&lt;/span&gt; JsValue&lt;span class="op"&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id="cb4-5"&gt;&lt;a href="#cb4-5" aria-hidden="true" tabindex="-1"&gt;&lt;/a&gt;    update_dom(&lt;span class="op"&gt;&amp;amp;&lt;/span&gt;&lt;span class="kw"&gt;mut&lt;/span&gt; &lt;span class="kw"&gt;self&lt;/span&gt;) &lt;span class="op"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="pp"&gt;std::result::&lt;/span&gt;&lt;span class="dt"&gt;Result&lt;/span&gt;&lt;span class="op"&gt;&amp;lt;&lt;/span&gt;()&lt;span class="op"&gt;,&lt;/span&gt; JsValue&lt;span class="op"&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id="cb4-6"&gt;&lt;a href="#cb4-6" aria-hidden="true" tabindex="-1"&gt;&lt;/a&gt;    update_from_select(&lt;span class="op"&gt;&amp;amp;&lt;/span&gt;&lt;span class="kw"&gt;mut&lt;/span&gt; &lt;span class="kw"&gt;self&lt;/span&gt;) &lt;span class="op"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="pp"&gt;std::result::&lt;/span&gt;&lt;span class="dt"&gt;Result&lt;/span&gt;&lt;span class="op"&gt;&amp;lt;&lt;/span&gt;()&lt;span class="op"&gt;,&lt;/span&gt; JsValue&lt;span class="op"&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The following elements are rendered in the DOM just before the
&lt;code&gt;&amp;lt;select&amp;gt;&lt;/code&gt; element:&lt;/p&gt;
&lt;div class="sourceCode" id="cb5"&gt;&lt;pre
class="sourceCode html"&gt;&lt;code class="sourceCode html"&gt;&lt;span id="cb5-1"&gt;&lt;a href="#cb5-1" aria-hidden="true" tabindex="-1"&gt;&lt;/a&gt;&lt;span class="kw"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="er"&gt;id&lt;/span&gt;&lt;span class="ot"&gt;=&lt;/span&gt;&lt;span class="st"&gt;&amp;quot;id_tags-tag-wasm&amp;quot;&lt;/span&gt; &lt;span class="er"&gt;class&lt;/span&gt;&lt;span class="ot"&gt;=&lt;/span&gt;&lt;span class="st"&gt;&amp;quot;tag-wasm&amp;quot;&lt;/span&gt; &lt;span class="er"&gt;aria-hidden&lt;/span&gt;&lt;span class="ot"&gt;=&lt;/span&gt;&lt;span class="st"&gt;&amp;quot;true&amp;quot;&lt;/span&gt;&lt;span class="kw"&gt;&amp;gt;&amp;lt;div&lt;/span&gt; &lt;span class="er"&gt;id&lt;/span&gt;&lt;span class="ot"&gt;=&lt;/span&gt;&lt;span class="st"&gt;&amp;quot;id_tags-tag-wasm-tag-list&amp;quot;&lt;/span&gt; &lt;span class="er"&gt;class&lt;/span&gt;&lt;span class="ot"&gt;=&lt;/span&gt;&lt;span class="st"&gt;&amp;quot;tag-wasm-tag-list&amp;quot;&lt;/span&gt;&lt;span class="kw"&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt; &lt;span class="kw"&gt;&amp;lt;input&lt;/span&gt; &lt;span class="er"&gt;id&lt;/span&gt;&lt;span class="ot"&gt;=&lt;/span&gt;&lt;span class="st"&gt;&amp;quot;id_tags-tag-wasm-input&amp;quot;&lt;/span&gt; &lt;span class="er"&gt;class&lt;/span&gt;&lt;span class="ot"&gt;=&lt;/span&gt;&lt;span class="st"&gt;&amp;quot;tag-wasm-input&amp;quot;&lt;/span&gt; &lt;span class="er"&gt;list&lt;/span&gt;&lt;span class="ot"&gt;=&lt;/span&gt;&lt;span class="st"&gt;&amp;quot;id_tags-tag-wasm-datalist&amp;quot;&lt;/span&gt; &lt;span class="er"&gt;type&lt;/span&gt;&lt;span class="ot"&gt;=&lt;/span&gt;&lt;span class="st"&gt;&amp;quot;text&amp;quot;&lt;/span&gt; &lt;span class="er"&gt;placeholder&lt;/span&gt;&lt;span class="ot"&gt;=&lt;/span&gt;&lt;span class="st"&gt;&amp;quot;tag name…&amp;quot;&lt;/span&gt;&lt;span class="kw"&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id="cb5-2"&gt;&lt;a href="#cb5-2" aria-hidden="true" tabindex="-1"&gt;&lt;/a&gt;&lt;span class="kw"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="er"&gt;id&lt;/span&gt;&lt;span class="ot"&gt;=&lt;/span&gt;&lt;span class="st"&gt;&amp;quot;id_tags-tag-wasm-msg&amp;quot;&lt;/span&gt; &lt;span class="er"&gt;class&lt;/span&gt;&lt;span class="ot"&gt;=&lt;/span&gt;&lt;span class="st"&gt;&amp;quot;tag-wasm-msg&amp;quot;&lt;/span&gt;&lt;span class="kw"&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id="cb5-3"&gt;&lt;a href="#cb5-3" aria-hidden="true" tabindex="-1"&gt;&lt;/a&gt;&lt;span class="kw"&gt;&amp;lt;p&lt;/span&gt; &lt;span class="er"&gt;class&lt;/span&gt;&lt;span class="ot"&gt;=&lt;/span&gt;&lt;span class="st"&gt;&amp;quot;after help-text&amp;quot;&lt;/span&gt; &lt;span class="er"&gt;aria-hidden&lt;/span&gt;&lt;span class="ot"&gt;=&lt;/span&gt;&lt;span class="st"&gt;&amp;quot;true&amp;quot;&lt;/span&gt;&lt;span class="kw"&gt;&amp;gt;&lt;/span&gt;Or, &lt;span class="kw"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The following events will be monitored:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;onclick&lt;/code&gt; event for the outer container
&lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt;, that will focus the &lt;code&gt;input&lt;/code&gt; element
inside.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;oninput&lt;/code&gt; event for the &lt;code&gt;&amp;lt;select&amp;gt;&lt;/code&gt;, so
that we can synchronise &lt;code&gt;State&lt;/code&gt; when it changes&lt;/li&gt;
&lt;li&gt;&lt;code&gt;onkeydown&lt;/code&gt; event for &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; so that
we can detect when a tag name is terminated (I chose the comma character
or Enter/Return) or when Backspace is pressed on an empty input which
will “pop” the previous tag&lt;/li&gt;
&lt;li&gt;&lt;code&gt;onkeyup&lt;/code&gt; event for &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; so we can
track when a key is released. If Backspace is pressed and released, the
user has pressed it repeatedly.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Finally, we’ll add a little ‘x’ button to each tag to enable quick
removal and register &lt;code&gt;onclick&lt;/code&gt; and &lt;code&gt;onkeydown&lt;/code&gt; for
it. This is where &lt;code&gt;State.remove_tag_cb&lt;/code&gt; is needed: we keep
one copy of the callback and register it for every rendered tag.&lt;/p&gt;
&lt;h3 id="setting-up-the-module-from-javascript"&gt;Setting up the module
from Javascript&lt;/h3&gt;
&lt;p&gt;We register a setup function in the module by annotating it with
&lt;code&gt;#[wasm_bindgen]&lt;/code&gt;:&lt;/p&gt;
&lt;div class="sourceCode" id="cb6"&gt;&lt;pre
class="sourceCode rust"&gt;&lt;code class="sourceCode rust"&gt;&lt;span id="cb6-1"&gt;&lt;a href="#cb6-1" aria-hidden="true" tabindex="-1"&gt;&lt;/a&gt;&lt;span class="at"&gt;#[&lt;/span&gt;wasm_bindgen&lt;span class="at"&gt;]&lt;/span&gt;&lt;/span&gt;
&lt;span id="cb6-2"&gt;&lt;a href="#cb6-2" aria-hidden="true" tabindex="-1"&gt;&lt;/a&gt;&lt;span class="kw"&gt;pub&lt;/span&gt; &lt;span class="kw"&gt;fn&lt;/span&gt; setup(&lt;/span&gt;
&lt;span id="cb6-3"&gt;&lt;a href="#cb6-3" aria-hidden="true" tabindex="-1"&gt;&lt;/a&gt;    singular_name&lt;span class="op"&gt;:&lt;/span&gt; &lt;span class="dt"&gt;String&lt;/span&gt;&lt;span class="op"&gt;,&lt;/span&gt;&lt;/span&gt;
&lt;span id="cb6-4"&gt;&lt;a href="#cb6-4" aria-hidden="true" tabindex="-1"&gt;&lt;/a&gt;    field_name&lt;span class="op"&gt;:&lt;/span&gt; &lt;span class="dt"&gt;String&lt;/span&gt;&lt;span class="op"&gt;,&lt;/span&gt;&lt;/span&gt;
&lt;span id="cb6-5"&gt;&lt;a href="#cb6-5" aria-hidden="true" tabindex="-1"&gt;&lt;/a&gt;    select_element_id&lt;span class="op"&gt;:&lt;/span&gt; &lt;span class="dt"&gt;String&lt;/span&gt;&lt;span class="op"&gt;,&lt;/span&gt;&lt;/span&gt;
&lt;span id="cb6-6"&gt;&lt;a href="#cb6-6" aria-hidden="true" tabindex="-1"&gt;&lt;/a&gt;    tags_json_id&lt;span class="op"&gt;:&lt;/span&gt; &lt;span class="dt"&gt;String&lt;/span&gt;&lt;span class="op"&gt;,&lt;/span&gt;&lt;/span&gt;
&lt;span id="cb6-7"&gt;&lt;a href="#cb6-7" aria-hidden="true" tabindex="-1"&gt;&lt;/a&gt;) &lt;span class="op"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="pp"&gt;std::result::&lt;/span&gt;&lt;span class="dt"&gt;Result&lt;/span&gt;&lt;span class="op"&gt;&amp;lt;&lt;/span&gt;()&lt;span class="op"&gt;,&lt;/span&gt; JsValue&lt;span class="op"&gt;&amp;gt;&lt;/span&gt; &lt;span class="op"&gt;{&lt;/span&gt;&lt;/span&gt;
&lt;span id="cb6-8"&gt;&lt;a href="#cb6-8" aria-hidden="true" tabindex="-1"&gt;&lt;/a&gt;&lt;span class="op"&gt;...&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id="interacting-with-the-dom"&gt;Interacting with the DOM&lt;/h3&gt;
&lt;p&gt;The browser API symbols in &lt;code&gt;web_sys&lt;/code&gt; are generally the
equivalent Javascript symbols but not in snake-case. This part is mostly
the tedious process of setting up elements, attributes and
callbacks:&lt;/p&gt;
&lt;div class="sourceCode" id="cb7"&gt;&lt;pre
class="sourceCode rust"&gt;&lt;code class="sourceCode rust"&gt;&lt;span id="cb7-1"&gt;&lt;a href="#cb7-1" aria-hidden="true" tabindex="-1"&gt;&lt;/a&gt;    &lt;span class="kw"&gt;let&lt;/span&gt; window &lt;span class="op"&gt;=&lt;/span&gt; &lt;span class="pp"&gt;web_sys::&lt;/span&gt;window()&lt;span class="op"&gt;.&lt;/span&gt;expect(&lt;span class="st"&gt;&amp;quot;no global `window` exists&amp;quot;&lt;/span&gt;)&lt;span class="op"&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span id="cb7-2"&gt;&lt;a href="#cb7-2" aria-hidden="true" tabindex="-1"&gt;&lt;/a&gt;    &lt;span class="kw"&gt;let&lt;/span&gt; document &lt;span class="op"&gt;=&lt;/span&gt; window&lt;span class="op"&gt;.&lt;/span&gt;document()&lt;span class="op"&gt;.&lt;/span&gt;expect(&lt;span class="st"&gt;&amp;quot;should have a document on window&amp;quot;&lt;/span&gt;)&lt;span class="op"&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span id="cb7-3"&gt;&lt;a href="#cb7-3" aria-hidden="true" tabindex="-1"&gt;&lt;/a&gt;    &lt;span class="kw"&gt;let&lt;/span&gt; tag_list_id &lt;span class="op"&gt;=&lt;/span&gt; &lt;span class="pp"&gt;format!&lt;/span&gt;(&lt;span class="st"&gt;&amp;quot;{}-{}&amp;quot;&lt;/span&gt;&lt;span class="op"&gt;,&lt;/span&gt; &lt;span class="op"&gt;&amp;amp;&lt;/span&gt;select_element_id&lt;span class="op"&gt;,&lt;/span&gt; TAG_LIST_ID)&lt;span class="op"&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span id="cb7-4"&gt;&lt;a href="#cb7-4" aria-hidden="true" tabindex="-1"&gt;&lt;/a&gt;    &lt;span class="kw"&gt;let&lt;/span&gt; input_id &lt;span class="op"&gt;=&lt;/span&gt; &lt;span class="pp"&gt;format!&lt;/span&gt;(&lt;span class="st"&gt;&amp;quot;{}-{}&amp;quot;&lt;/span&gt;&lt;span class="op"&gt;,&lt;/span&gt; &lt;span class="op"&gt;&amp;amp;&lt;/span&gt;select_element_id&lt;span class="op"&gt;,&lt;/span&gt; INPUT_ID)&lt;span class="op"&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span id="cb7-5"&gt;&lt;a href="#cb7-5" aria-hidden="true" tabindex="-1"&gt;&lt;/a&gt;    &lt;span class="kw"&gt;let&lt;/span&gt; datalist_id &lt;span class="op"&gt;=&lt;/span&gt; &lt;span class="pp"&gt;format!&lt;/span&gt;(&lt;span class="st"&gt;&amp;quot;{}-{}&amp;quot;&lt;/span&gt;&lt;span class="op"&gt;,&lt;/span&gt; &lt;span class="op"&gt;&amp;amp;&lt;/span&gt;select_element_id&lt;span class="op"&gt;,&lt;/span&gt; DATALIST_ID)&lt;span class="op"&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span id="cb7-6"&gt;&lt;a href="#cb7-6" aria-hidden="true" tabindex="-1"&gt;&lt;/a&gt;    &lt;span class="kw"&gt;let&lt;/span&gt; msg_id &lt;span class="op"&gt;=&lt;/span&gt; &lt;span class="pp"&gt;format!&lt;/span&gt;(&lt;span class="st"&gt;&amp;quot;{}-{}&amp;quot;&lt;/span&gt;&lt;span class="op"&gt;,&lt;/span&gt; &lt;span class="op"&gt;&amp;amp;&lt;/span&gt;select_element_id&lt;span class="op"&gt;,&lt;/span&gt; MSG_ID)&lt;span class="op"&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span id="cb7-7"&gt;&lt;a href="#cb7-7" aria-hidden="true" tabindex="-1"&gt;&lt;/a&gt;    &lt;span class="kw"&gt;let&lt;/span&gt; root_el &lt;span class="op"&gt;=&lt;/span&gt; document&lt;/span&gt;
&lt;span id="cb7-8"&gt;&lt;a href="#cb7-8" aria-hidden="true" tabindex="-1"&gt;&lt;/a&gt;        &lt;span class="op"&gt;.&lt;/span&gt;get_element_by_id(&lt;span class="op"&gt;&amp;amp;&lt;/span&gt;select_element_id)&lt;/span&gt;
&lt;span id="cb7-9"&gt;&lt;a href="#cb7-9" aria-hidden="true" tabindex="-1"&gt;&lt;/a&gt;        &lt;span class="op"&gt;.&lt;/span&gt;expect(&lt;span class="st"&gt;&amp;quot;could not find tag element&amp;quot;&lt;/span&gt;)&lt;span class="op"&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span id="cb7-10"&gt;&lt;a href="#cb7-10" aria-hidden="true" tabindex="-1"&gt;&lt;/a&gt;    &lt;span class="kw"&gt;let&lt;/span&gt; tag_container &lt;span class="op"&gt;=&lt;/span&gt; document&lt;span class="op"&gt;.&lt;/span&gt;create_element(&lt;span class="st"&gt;&amp;quot;div&amp;quot;&lt;/span&gt;)&lt;span class="op"&gt;?;&lt;/span&gt;&lt;/span&gt;
&lt;span id="cb7-11"&gt;&lt;a href="#cb7-11" aria-hidden="true" tabindex="-1"&gt;&lt;/a&gt;    tag_container&lt;span class="op"&gt;.&lt;/span&gt;set_id(&lt;span class="op"&gt;&amp;amp;&lt;/span&gt;&lt;span class="pp"&gt;format!&lt;/span&gt;(&lt;span class="st"&gt;&amp;quot;{}-tag-wasm&amp;quot;&lt;/span&gt;&lt;span class="op"&gt;,&lt;/span&gt; &lt;span class="op"&gt;&amp;amp;&lt;/span&gt;select_element_id))&lt;span class="op"&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span id="cb7-12"&gt;&lt;a href="#cb7-12" aria-hidden="true" tabindex="-1"&gt;&lt;/a&gt;    tag_container&lt;span class="op"&gt;.&lt;/span&gt;set_attribute(&lt;span class="st"&gt;&amp;quot;class&amp;quot;&lt;/span&gt;&lt;span class="op"&gt;,&lt;/span&gt; &lt;span class="st"&gt;&amp;quot;tag-wasm&amp;quot;&lt;/span&gt;)&lt;span class="op"&gt;?;&lt;/span&gt;&lt;/span&gt;
&lt;span id="cb7-13"&gt;&lt;a href="#cb7-13" aria-hidden="true" tabindex="-1"&gt;&lt;/a&gt;    tag_container&lt;span class="op"&gt;.&lt;/span&gt;set_attribute(&lt;span class="st"&gt;&amp;quot;aria-hidden&amp;quot;&lt;/span&gt;&lt;span class="op"&gt;,&lt;/span&gt; &lt;span class="st"&gt;&amp;quot;true&amp;quot;&lt;/span&gt;)&lt;span class="op"&gt;?;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To create a callback from Rust, we wrap a closure in
&lt;code&gt;Callback&lt;/code&gt; and we &lt;a
href="https://www.youtube.com/watch?v=Hzh9koy7b1E"&gt;&lt;code&gt;forget&lt;/code&gt;
about it&lt;/a&gt;, meaning that we tell Rust not to call &lt;code&gt;Drop&lt;/code&gt; on
it because otherwise when it’s called from the browser it won’t
exist.&lt;/p&gt;
&lt;div class="sourceCode" id="cb8"&gt;&lt;pre
class="sourceCode rust"&gt;&lt;code class="sourceCode rust"&gt;&lt;span id="cb8-1"&gt;&lt;a href="#cb8-1" aria-hidden="true" tabindex="-1"&gt;&lt;/a&gt;    &lt;span class="op"&gt;{&lt;/span&gt;&lt;/span&gt;
&lt;span id="cb8-2"&gt;&lt;a href="#cb8-2" aria-hidden="true" tabindex="-1"&gt;&lt;/a&gt;        &lt;span class="kw"&gt;let&lt;/span&gt; input_id &lt;span class="op"&gt;=&lt;/span&gt; input_id&lt;span class="op"&gt;.&lt;/span&gt;clone()&lt;span class="op"&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span id="cb8-3"&gt;&lt;a href="#cb8-3" aria-hidden="true" tabindex="-1"&gt;&lt;/a&gt;        &lt;span class="kw"&gt;let&lt;/span&gt; onclick_db &lt;span class="op"&gt;=&lt;/span&gt; &lt;span class="pp"&gt;Closure::&lt;/span&gt;wrap(&lt;span class="dt"&gt;Box&lt;/span&gt;&lt;span class="pp"&gt;::&lt;/span&gt;new(&lt;span class="kw"&gt;move&lt;/span&gt; &lt;span class="op"&gt;|&lt;/span&gt;_event&lt;span class="op"&gt;:&lt;/span&gt; &lt;span class="pp"&gt;web_sys::&lt;/span&gt;Event&lt;span class="op"&gt;|&lt;/span&gt; &lt;span class="op"&gt;{&lt;/span&gt;&lt;/span&gt;
&lt;span id="cb8-4"&gt;&lt;a href="#cb8-4" aria-hidden="true" tabindex="-1"&gt;&lt;/a&gt;            &lt;span class="pp"&gt;JsCast::unchecked_into::&lt;/span&gt;&lt;span class="op"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pp"&gt;web_sys::&lt;/span&gt;HtmlElement&lt;span class="op"&gt;&amp;gt;&lt;/span&gt;(&lt;/span&gt;
&lt;span id="cb8-5"&gt;&lt;a href="#cb8-5" aria-hidden="true" tabindex="-1"&gt;&lt;/a&gt;                document&lt;span class="op"&gt;.&lt;/span&gt;get_element_by_id(&lt;span class="op"&gt;&amp;amp;&lt;/span&gt;input_id)&lt;span class="op"&gt;.&lt;/span&gt;expect(&lt;span class="st"&gt;&amp;quot;&amp;quot;&lt;/span&gt;)&lt;span class="op"&gt;,&lt;/span&gt;&lt;/span&gt;
&lt;span id="cb8-6"&gt;&lt;a href="#cb8-6" aria-hidden="true" tabindex="-1"&gt;&lt;/a&gt;            )&lt;/span&gt;
&lt;span id="cb8-7"&gt;&lt;a href="#cb8-7" aria-hidden="true" tabindex="-1"&gt;&lt;/a&gt;            &lt;span class="op"&gt;.&lt;/span&gt;focus()&lt;/span&gt;
&lt;span id="cb8-8"&gt;&lt;a href="#cb8-8" aria-hidden="true" tabindex="-1"&gt;&lt;/a&gt;            &lt;span class="op"&gt;.&lt;/span&gt;unwrap()&lt;span class="op"&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span id="cb8-9"&gt;&lt;a href="#cb8-9" aria-hidden="true" tabindex="-1"&gt;&lt;/a&gt;        &lt;span class="op"&gt;}&lt;/span&gt;) &lt;span class="kw"&gt;as&lt;/span&gt; &lt;span class="dt"&gt;Box&lt;/span&gt;&lt;span class="op"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kw"&gt;dyn&lt;/span&gt; &lt;span class="bu"&gt;FnMut&lt;/span&gt;(_)&lt;span class="op"&gt;&amp;gt;&lt;/span&gt;)&lt;span class="op"&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span id="cb8-10"&gt;&lt;a href="#cb8-10" aria-hidden="true" tabindex="-1"&gt;&lt;/a&gt;        tag_container&lt;span class="op"&gt;.&lt;/span&gt;set_onclick(&lt;span class="cn"&gt;Some&lt;/span&gt;(onclick_db&lt;span class="op"&gt;.&lt;/span&gt;as_ref()&lt;span class="op"&gt;.&lt;/span&gt;unchecked_ref()))&lt;span class="op"&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span id="cb8-11"&gt;&lt;a href="#cb8-11" aria-hidden="true" tabindex="-1"&gt;&lt;/a&gt;        onclick_db&lt;span class="op"&gt;.&lt;/span&gt;forget()&lt;span class="op"&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span id="cb8-12"&gt;&lt;a href="#cb8-12" aria-hidden="true" tabindex="-1"&gt;&lt;/a&gt;    &lt;span class="op"&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Casting javascript objects and elements with &lt;code&gt;JsCast&lt;/code&gt; is
necessary to call the appropriate functions from each interface. The
casting can be unchecked or checked on runtime.&lt;/p&gt;
&lt;h3 id="putting-it-all-together"&gt;Putting it all together&lt;/h3&gt;
&lt;p&gt;We build the module by running
&lt;code&gt;wasm-pack build --target web --release&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;This creates a &lt;code&gt;pkg&lt;/code&gt; directory with a &lt;code&gt;.wasm&lt;/code&gt;
module and a &lt;code&gt;.js&lt;/code&gt; file which does the loading and symbol
export for us.&lt;/p&gt;
&lt;p&gt;In the HTML page we dynamically import the module to avoid any errors
showing up if it’s missing or something doesn’t work. We can just print
a warning instead, since the &lt;code&gt;&amp;lt;select&amp;gt;&lt;/code&gt; element still
works. This is the graceful degradation part of this design: the user
experience is not limited by the enhanced workflow.&lt;/p&gt;
&lt;div class="sourceCode" id="cb9"&gt;&lt;pre
class="sourceCode html"&gt;&lt;code class="sourceCode html"&gt;&lt;span id="cb9-1"&gt;&lt;a href="#cb9-1" aria-hidden="true" tabindex="-1"&gt;&lt;/a&gt;  &lt;span class="kw"&gt;&amp;lt;script&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id="cb9-2"&gt;&lt;a href="#cb9-2" aria-hidden="true" tabindex="-1"&gt;&lt;/a&gt;      &lt;span class="kw"&gt;var&lt;/span&gt; error &lt;span class="op"&gt;=&lt;/span&gt; &lt;span class="kw"&gt;null&lt;/span&gt;&lt;span class="op"&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span id="cb9-3"&gt;&lt;a href="#cb9-3" aria-hidden="true" tabindex="-1"&gt;&lt;/a&gt;      &lt;span class="im"&gt;import&lt;/span&gt;(&lt;span class="st"&gt;&amp;quot;tag_input_wasm.js&amp;quot;&lt;/span&gt;)&lt;/span&gt;
&lt;span id="cb9-4"&gt;&lt;a href="#cb9-4" aria-hidden="true" tabindex="-1"&gt;&lt;/a&gt;          &lt;span class="op"&gt;.&lt;/span&gt;&lt;span class="fu"&gt;then&lt;/span&gt;((module) &lt;span class="kw"&gt;=&amp;gt;&lt;/span&gt; {&lt;/span&gt;
&lt;span id="cb9-5"&gt;&lt;a href="#cb9-5" aria-hidden="true" tabindex="-1"&gt;&lt;/a&gt;          &lt;span class="kw"&gt;async&lt;/span&gt; &lt;span class="kw"&gt;function&lt;/span&gt; &lt;span class="fu"&gt;run&lt;/span&gt;() {&lt;/span&gt;
&lt;span id="cb9-6"&gt;&lt;a href="#cb9-6" aria-hidden="true" tabindex="-1"&gt;&lt;/a&gt;              &lt;span class="kw"&gt;let&lt;/span&gt; _ &lt;span class="op"&gt;=&lt;/span&gt; &lt;span class="cf"&gt;await&lt;/span&gt; module&lt;span class="op"&gt;.&lt;/span&gt;&lt;span class="fu"&gt;default&lt;/span&gt;(&lt;span class="st"&gt;&amp;quot;tag_input_wasm_bg.wasm&amp;quot;&lt;/span&gt;)&lt;span class="op"&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span id="cb9-7"&gt;&lt;a href="#cb9-7" aria-hidden="true" tabindex="-1"&gt;&lt;/a&gt;              &lt;span class="co"&gt;//module.setup({singular_name}, {field_name_attribute}, {field_id_attribute}, {json_id_attribute});&lt;/span&gt;&lt;/span&gt;
&lt;span id="cb9-8"&gt;&lt;a href="#cb9-8" aria-hidden="true" tabindex="-1"&gt;&lt;/a&gt;              module&lt;span class="op"&gt;.&lt;/span&gt;&lt;span class="fu"&gt;setup&lt;/span&gt;(&lt;span class="st"&gt;&amp;quot;tag&amp;quot;&lt;/span&gt;&lt;span class="op"&gt;,&lt;/span&gt; &lt;span class="st"&gt;&amp;quot;tags&amp;quot;&lt;/span&gt;&lt;span class="op"&gt;,&lt;/span&gt; &lt;span class="st"&gt;&amp;quot;id_tags&amp;quot;&lt;/span&gt;&lt;span class="op"&gt;,&lt;/span&gt; &lt;span class="st"&gt;&amp;quot;tags_json&amp;quot;&lt;/span&gt;)&lt;span class="op"&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span id="cb9-9"&gt;&lt;a href="#cb9-9" aria-hidden="true" tabindex="-1"&gt;&lt;/a&gt;          }&lt;/span&gt;
&lt;span id="cb9-10"&gt;&lt;a href="#cb9-10" aria-hidden="true" tabindex="-1"&gt;&lt;/a&gt;          &lt;span class="cf"&gt;return&lt;/span&gt; &lt;span class="fu"&gt;run&lt;/span&gt;()&lt;span class="op"&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span id="cb9-11"&gt;&lt;a href="#cb9-11" aria-hidden="true" tabindex="-1"&gt;&lt;/a&gt;      })&lt;span class="op"&gt;.&lt;/span&gt;&lt;span class="fu"&gt;catch&lt;/span&gt;(err &lt;span class="kw"&gt;=&amp;gt;&lt;/span&gt; {&lt;/span&gt;
&lt;span id="cb9-12"&gt;&lt;a href="#cb9-12" aria-hidden="true" tabindex="-1"&gt;&lt;/a&gt;          &lt;span class="bu"&gt;console&lt;/span&gt;&lt;span class="op"&gt;.&lt;/span&gt;&lt;span class="fu"&gt;warn&lt;/span&gt;(&lt;span class="st"&gt;&amp;quot;Could not load tag input .wasm file.&lt;/span&gt;&lt;span class="sc"&gt;\n\n&lt;/span&gt;&lt;span class="st"&gt;The error is saved in the global variable `error` for more details. The page and submission form will still work.&lt;/span&gt;&lt;span class="sc"&gt;\n\n&lt;/span&gt;&lt;span class="st"&gt;You can use `console.dir(error)` to see what happened.&amp;quot;&lt;/span&gt;)&lt;span class="op"&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span id="cb9-13"&gt;&lt;a href="#cb9-13" aria-hidden="true" tabindex="-1"&gt;&lt;/a&gt;          error &lt;span class="op"&gt;=&lt;/span&gt; err&lt;span class="op"&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span id="cb9-14"&gt;&lt;a href="#cb9-14" aria-hidden="true" tabindex="-1"&gt;&lt;/a&gt;      })&lt;span class="op"&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span id="cb9-15"&gt;&lt;a href="#cb9-15" aria-hidden="true" tabindex="-1"&gt;&lt;/a&gt;  &lt;span class="kw"&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id="cb9-16"&gt;&lt;a href="#cb9-16" aria-hidden="true" tabindex="-1"&gt;&lt;/a&gt;&lt;span class="kw"&gt;&amp;lt;script&lt;/span&gt; &lt;span class="er"&gt;id&lt;/span&gt;&lt;span class="ot"&gt;=&lt;/span&gt;&lt;span class="st"&gt;&amp;quot;tags_json&amp;quot;&lt;/span&gt;&lt;span class="ot"&gt; type=&lt;/span&gt;&lt;span class="st"&gt;&amp;quot;application/json&amp;quot;&lt;/span&gt;&lt;span class="kw"&gt;&amp;gt;&lt;/span&gt;{&lt;span class="st"&gt;&amp;quot;programming languages&amp;quot;&lt;/span&gt;&lt;span class="op"&gt;:&lt;/span&gt; &lt;span class="st"&gt;&amp;quot;#ffffff&amp;quot;&lt;/span&gt;&lt;span class="op"&gt;,&lt;/span&gt; &lt;span class="st"&gt;&amp;quot;python&amp;quot;&lt;/span&gt;&lt;span class="op"&gt;:&lt;/span&gt; &lt;span class="st"&gt;&amp;quot;#3776ab&amp;quot;&lt;/span&gt;&lt;span class="op"&gt;,&lt;/span&gt; }&lt;span class="kw"&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
</content><link href="https://pitsidianak.is/blog/posts/2021-08-14_tag-wasm-rust.html" rel="alternate"/><published>2021-08-14T00:00:00+02:00</published></entry><entry><id>https://pitsidianak.is/blog/posts/2023-03-20_debian_gdb_auto_dl_dbg.html</id><title>Automatically download missing dynamic lib debug symbols in gdb and debian</title><updated>2023-03-24T18:21:35.409904+00:00</updated><content type="html">&lt;h2 id="tldr"&gt;&lt;a href="#tldr"&gt;🔗&lt;/a&gt;TL;DR&lt;/h2&gt;
&lt;p&gt;Set
&lt;code&gt;export DEBUGINFOD_URLS&lt;/code&gt;&lt;wbr&gt;&lt;code&gt;=&lt;/code&gt;&lt;wbr&gt;&lt;code&gt;"https://&lt;/code&gt;&lt;wbr&gt;&lt;code&gt;debuginfod&lt;/code&gt;&lt;wbr&gt;&lt;code&gt;.&lt;/code&gt;&lt;wbr&gt;&lt;code&gt;debian&lt;/code&gt;&lt;wbr&gt;&lt;code&gt;.&lt;/code&gt;&lt;wbr&gt;&lt;code&gt;net"&lt;/code&gt;
to automatically download missing debug symbols in &lt;code&gt;gdb&lt;/code&gt;.&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;Found this &lt;a href="https://wiki.debian.org/Debuginfod"&gt;in the Debian
wiki&lt;/a&gt;: You can configure &lt;code&gt;gdb&lt;/code&gt;, &lt;code&gt;elfutils&lt;/code&gt; and
&lt;code&gt;binutils&lt;/code&gt; to automatically download debug symbols from
debian’s official &lt;a
href="https://sourceware.org/elfutils/Debuginfod.html"&gt;&lt;code&gt;debuginfod&lt;/code&gt;&lt;/a&gt;
server. This can save you time by not &lt;a
href="https://wiki.debian.org/HowToGetABacktrace"&gt;needing to separately
download debug symbol packages&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id="configuration"&gt;&lt;a href="#configuration"&gt;🔗&lt;/a&gt;Configuration&lt;/h2&gt;
&lt;p&gt;Set the environment variable &lt;code&gt;$DEBUGINFOD_URLS&lt;/code&gt;:&lt;/p&gt;
&lt;pre class="shell"&gt;&lt;code&gt;export DEBUGINFOD_URLS=&amp;quot;https://debuginfod.debian.net&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;And whenever you launch gdb etc with missing debug symbols in
libraries, it will query the server for debug symbols. On gdb startup,
you should see lines like
&lt;code&gt;Downloading separate debug info for /lib&lt;/code&gt;&lt;wbr&gt;&lt;code&gt;/x86_64-linux-gnu&lt;/code&gt;&lt;wbr&gt;&lt;code&gt;/liblz4.so.1...&lt;/code&gt;
for each dynamically linked library. Beware that this can cause a large
number of symbols to be downloaded if the transitive linked dependencies
are too many.&lt;/p&gt;
&lt;p&gt;You can check approximately how many separate symbol packages it
would download in a fresh run for a specific binary by using
&lt;code&gt;ldd&lt;/code&gt; to list dependencies:&lt;/p&gt;
&lt;pre class="shell"&gt;&lt;code&gt;$ ldd a.out&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;You can also set the server URL in your &lt;code&gt;.gdbinit&lt;/code&gt;
configuration instead. Example values taken from the &lt;a
href="https://sourceware.org/gdb/onlinedocs/gdb/Debuginfod-Settings.html"&gt;GDB
online documentation&lt;/a&gt;:&lt;/p&gt;
&lt;pre class="text"&gt;&lt;code&gt;set debuginfod enabled on
#set debuginfod enabled off
#set debuginfod enabled ask

# space separated URL list
set debuginfod urls https://debuginfod.debian.net

# inspect settings:
#show debuginfod enabled
#show debuginfod urls&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;a
href="https://wiki.debian.org/Debuginfod#Where_does_libdebuginfod_store_the_debuginfo_that_is_downloaded.3F"&gt;Location
of the symbol cache is&lt;/a&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;if &lt;code&gt;DEBUGINFOD_CACHE_PATH&lt;/code&gt; is set, then the files are
saved in the directory pointed by it.&lt;/li&gt;
&lt;li&gt;Otherwise, if &lt;code&gt;XDG_CACHE_HOME&lt;/code&gt; is set, then files are
saved into &lt;code&gt;$XDG_CACHE_HOME/debuginfod_client&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Otherwise, the files will be saved into
&lt;code&gt;$HOME&lt;/code&gt;&lt;wbr&gt;&lt;code&gt;/.cache&lt;/code&gt;&lt;wbr&gt;&lt;code&gt;/debuginfod_client&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Can I delete the cache directory?&lt;/strong&gt; Yes.&lt;/p&gt;
</content><link href="https://pitsidianak.is/blog/posts/2023-03-20_debian_gdb_auto_dl_dbg.html" rel="alternate"/><published>2023-03-20T00:00:00+02:00</published></entry><entry><id>https://pitsidianak.is/blog/posts/2023-03-23_self_compiling_markdown_files_by_misusing_shebangs.html</id><title>Self-compiling Markdown files by misusing shebangs</title><updated>2023-03-24T18:21:35.409893+00:00</updated><content type="html">&lt;h2 id="has-this-every-happened-to-you"&gt;&lt;a href="#tldr"&gt;🔗&lt;/a&gt;Has this
every happened to you?&lt;/h2&gt;
&lt;p&gt;You use &lt;code&gt;pandoc&lt;/code&gt; or some other markdown -&amp;gt; pdf or other
format a lot. Your command invocation is long since you add a lot of
configuration flags. You make it into a shell script to avoid typing the
same command everytime, but for it to be reusable you have to give the
&lt;code&gt;.md&lt;/code&gt; filename as an argument.&lt;/p&gt;
&lt;p&gt;You, like me, might not be able to withstand all these previous
seconds you feel you are waisting.&lt;/p&gt;
&lt;h2 id="shebangs"&gt;&lt;a href="#shebangs"&gt;🔗&lt;/a&gt;Shebangs&lt;/h2&gt;
&lt;p&gt;You probably know that files that begin with &lt;code&gt;#! ...&lt;/code&gt; in
their first line are executed with the interpreter defined after the
shebang (&lt;code&gt;#!&lt;/code&gt;). The kernel, when called to execute something,
looks for a shebang header or an &lt;code&gt;INTERP&lt;/code&gt; field in the ELF
binary headers (unrelevant to his post). If the shebang exists, it
passes the control to that interpeter.&lt;/p&gt;
&lt;p&gt;A familiar usage is starting python scripts with
&lt;code&gt;#!/usr/bin/env python3&lt;/code&gt; or similar.&lt;/p&gt;
&lt;p&gt;So, we can use this to make the interpreter be the markdown compiling
command:&lt;/p&gt;
&lt;p&gt;On a markdown file, say &lt;code&gt;document.md&lt;/code&gt;:&lt;/p&gt;
&lt;pre class="shell"&gt;&lt;code&gt;#!/usr/bin/env -S bash -c &amp;#39;pandoc --from markdown -V links-as-notes -V boxlinks -V pagestyle:empty --pdf-engine xelatex -V mainfont:&amp;#39;Inter-Medium&amp;#39; -V geometry:a6paper -t pdf -o &amp;quot;$(basename ${0} md)pdf&amp;quot; &amp;lt;(tail -n +2 &amp;quot;${0}&amp;quot;)&amp;#39;

Dear reader,

This is a letter addressed to you, written in Markdown.

Author Name&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Executing &lt;code&gt;document.md&lt;/code&gt; runs the command right away. If
your file is not executable, make it so with
&lt;code&gt;chmod u+x document.md&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Some minor explanations of the shell command:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;$(basename ${0} md)&lt;/code&gt; executes a shell subprocess. The
&lt;code&gt;basename&lt;/code&gt; util strips prefixes and suffixes from paths. In
this case it returns &lt;code&gt;document.&lt;/code&gt; which along with
&lt;code&gt;pdf&lt;/code&gt; makes the output filename.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;(tail -n +2 "${0}")&lt;/code&gt; executes a shell subprocess
whose output you can use as a file argument. &lt;code&gt;tail -n +N&lt;/code&gt;
skips the first &lt;code&gt;N&lt;/code&gt; lines and returns the rest of the file.
That’s how we strip the shebang before the pdf conversion.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="huh"&gt;&lt;a href="#huh"&gt;🔗&lt;/a&gt;Huh??&lt;/h3&gt;
&lt;p&gt;PS: At first I was confused on why this worked; the kernel has a
usually 127 or 255 byte length limit for the shebang interpreter. But it
does something smart: if the first argument of the shebang is complete,
it doesn’t have to bother with the bytes after the limit, since only the
interpreter binary needs to know about the arguments. &lt;a
href="https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/tree/fs/binfmt_script.c"
class="uri"&gt;https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/tree/fs/binfmt_script.c&lt;/a&gt;&lt;/p&gt;
</content><link href="https://pitsidianak.is/blog/posts/2023-03-23_self_compiling_markdown_files_by_misusing_shebangs.html" rel="alternate"/><published>2023-03-23T00:00:00+02:00</published></entry><entry><id>https://pitsidianak.is/blog/posts/2022-10-22_open2_mode_gotcha.html</id><title>A minor gotcha in open(2)</title><updated>2023-03-24T18:21:35.409880+00:00</updated><content type="html">&lt;p&gt;A test I was writing in C was causing a panic in Rust code that was
called via FFI. The panicking line of Rust code was something of the
sort:&lt;/p&gt;
&lt;div class="sourceCode" id="cb1"&gt;&lt;pre
class="sourceCode rust"&gt;&lt;code class="sourceCode rust"&gt;&lt;span id="cb1-1"&gt;&lt;a href="#cb1-1" aria-hidden="true" tabindex="-1"&gt;&lt;/a&gt;&lt;span class="kw"&gt;use&lt;/span&gt; &lt;span class="pp"&gt;nix::sys::stat::&lt;/span&gt;Mode&lt;span class="op"&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span id="cb1-2"&gt;&lt;a href="#cb1-2" aria-hidden="true" tabindex="-1"&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id="cb1-3"&gt;&lt;a href="#cb1-3" aria-hidden="true" tabindex="-1"&gt;&lt;/a&gt;&lt;span class="kw"&gt;fn&lt;/span&gt; foo(mode&lt;span class="op"&gt;:&lt;/span&gt; &lt;span class="pp"&gt;libc::&lt;/span&gt;&lt;span class="dt"&gt;mode_t&lt;/span&gt;) &lt;span class="op"&gt;{&lt;/span&gt;&lt;/span&gt;
&lt;span id="cb1-4"&gt;&lt;a href="#cb1-4" aria-hidden="true" tabindex="-1"&gt;&lt;/a&gt;  &lt;span class="kw"&gt;let&lt;/span&gt; mode&lt;span class="op"&gt;:&lt;/span&gt; Mode &lt;span class="op"&gt;=&lt;/span&gt; &lt;span class="pp"&gt;Mode::&lt;/span&gt;from_bits(mode)&lt;span class="op"&gt;.&lt;/span&gt;unwrap()&lt;span class="op"&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span id="cb1-5"&gt;&lt;a href="#cb1-5" aria-hidden="true" tabindex="-1"&gt;&lt;/a&gt;  &lt;span class="op"&gt;..&lt;/span&gt;&lt;/span&gt;
&lt;span id="cb1-6"&gt;&lt;a href="#cb1-6" aria-hidden="true" tabindex="-1"&gt;&lt;/a&gt;&lt;span class="op"&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;nix&lt;/code&gt;&lt;a href="#fn1" class="footnote-ref" id="fnref1"
role="doc-noteref"&gt;&lt;sup&gt;1&lt;/sup&gt;&lt;/a&gt; fails to handle a valid (I thought)
mode value? There’s gotta be a simpler explanation: the mode value is
invalid. Indeed looking at the C code:&lt;/p&gt;
&lt;figure&gt;
&lt;div class="sourceCode" id="cb2"&gt;&lt;pre class="sourceCode c"&gt;&lt;code class="sourceCode c"&gt;&lt;span id="cb2-1"&gt;&lt;a href="#cb2-1" aria-hidden="true" tabindex="-1"&gt;&lt;/a&gt;&lt;span class="dt"&gt;char&lt;/span&gt; &lt;span class="op"&gt;*&lt;/span&gt;file &lt;span class="op"&gt;=&lt;/span&gt; &lt;span class="st"&gt;&amp;quot;/tmp/file&amp;quot;&lt;/span&gt;&lt;span class="op"&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span id="cb2-2"&gt;&lt;a href="#cb2-2" aria-hidden="true" tabindex="-1"&gt;&lt;/a&gt;&lt;span class="op"&gt;...&lt;/span&gt;&lt;/span&gt;
&lt;span id="cb2-3"&gt;&lt;a href="#cb2-3" aria-hidden="true" tabindex="-1"&gt;&lt;/a&gt;fd &lt;span class="op"&gt;=&lt;/span&gt; open&lt;span class="op"&gt;(&lt;/span&gt;file&lt;span class="op"&gt;,&lt;/span&gt; O_WRONLY &lt;span class="op"&gt;|&lt;/span&gt; O_CREAT &lt;span class="op"&gt;|&lt;/span&gt; O_TRUNC&lt;span class="op"&gt;);&lt;/span&gt;&lt;/span&gt;
&lt;span id="cb2-4"&gt;&lt;a href="#cb2-4" aria-hidden="true" tabindex="-1"&gt;&lt;/a&gt;&lt;span class="op"&gt;...&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;figcaption&gt;
&lt;small&gt;example taken from POSIX &lt;code&gt;open&lt;/code&gt; specification&lt;a
href="#fn2" class="footnote-ref" id="fnref2"
role="doc-noteref"&gt;&lt;sup&gt;2&lt;/sup&gt;&lt;/a&gt;&lt;/small&gt;
&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;I had forgotten to specify the &lt;code&gt;mode&lt;/code&gt; argument in
&lt;code&gt;open&lt;/code&gt;. However that’s legal behavior in POSIX, and it
doesn’t define what happens when you call the variadic&lt;a href="#fn3"
class="footnote-ref" id="fnref3" role="doc-noteref"&gt;&lt;sup&gt;3&lt;/sup&gt;&lt;/a&gt;
function &lt;code&gt;open&lt;/code&gt; without the &lt;code&gt;mode&lt;/code&gt; argument.&lt;/p&gt;
&lt;p&gt;The glibc+Linux &lt;code&gt;open(2)&lt;/code&gt; manual page with
&lt;code&gt;man 2 open&lt;/code&gt; explains what happens in their
implementation:&lt;/p&gt;
&lt;pre class="text"&gt;&lt;code&gt;The mode argument must be supplied if O_CREAT
or O_TMPFILE is specified in flags; if it is
not supplied, some arbitrary bytes from the
stack will be applied as the file mode [..]&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Why am I not surprised! This should not be considered acceptable
behavior for a standard library.&lt;/p&gt;
&lt;section id="footnotes" class="footnotes footnotes-end-of-document"
role="doc-endnotes"&gt;
&lt;hr /&gt;
&lt;ol&gt;
&lt;li id="fn1"&gt;&lt;p&gt;&lt;q cite="https://crates.io/crates/nix"&gt;Rust friendly
bindings to *nix APIs&lt;/q&gt; &lt;a href="https://crates.io/crates/nix"
class="uri"&gt;https://crates.io/crates/nix&lt;/a&gt;&lt;a href="#fnref1"
class="footnote-back" role="doc-backlink"&gt;↩︎&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li id="fn2"&gt;&lt;p&gt;&lt;a
href="https://pubs.opengroup.org/onlinepubs/007904875/functions/open.html"
class="uri"&gt;https://pubs.opengroup.org/onlinepubs/007904875/functions/open.html&lt;/a&gt;&lt;a
href="#fnref2" class="footnote-back" role="doc-backlink"&gt;↩︎&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li
id="fn3"&gt;&lt;p&gt;&lt;dfn title="Variadic functions are functions (e.g. printf) which take a variable number of arguments. The declaration of a variadic function uses an ellipsis as the last parameter, e.g. int printf(const char* format, ...);."&gt;variadic&lt;/dfn&gt;
means it accepts a non fixed number of arguments, like
&lt;code&gt;printf&lt;/code&gt;. Its function signature is&lt;/p&gt;
&lt;div class="sourceCode" id="cb3"&gt;&lt;pre class="sourceCode c"&gt;&lt;code class="sourceCode c"&gt;&lt;span id="cb3-1"&gt;&lt;a href="#cb3-1" aria-hidden="true" tabindex="-1"&gt;&lt;/a&gt;&lt;span class="dt"&gt;int&lt;/span&gt; open&lt;span class="op"&gt;(&lt;/span&gt;&lt;span class="dt"&gt;const&lt;/span&gt; &lt;span class="dt"&gt;char&lt;/span&gt; &lt;span class="op"&gt;*&lt;/span&gt;path&lt;span class="op"&gt;,&lt;/span&gt; &lt;span class="dt"&gt;int&lt;/span&gt; oflag&lt;span class="op"&gt;,&lt;/span&gt; &lt;span class="op"&gt;...&lt;/span&gt; &lt;span class="op"&gt;);&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Without historical context, my guess this was to avoid having a
different function when you want to specify the &lt;code&gt;mode&lt;/code&gt;.
Adding extra functions for extra arguments is an acceptable pattern in
other &lt;code&gt;libc&lt;/code&gt; functions, though.&lt;a href="#fnref3"
class="footnote-back" role="doc-backlink"&gt;↩︎&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/section&gt;
</content><link href="https://pitsidianak.is/blog/posts/2022-10-22_open2_mode_gotcha.html" rel="alternate"/><published>2022-10-22T00:00:00+02:00</published></entry><entry><id>https://pitsidianak.is/blog/posts/2021-09-09_buke_full_text_search_manpages.html</id><title>buke full text search manpages</title><updated>2023-03-24T18:21:35.409869+00:00</updated><content type="html">&lt;p&gt;Repository: &lt;a href="https://github.com/epilys/buke"
class="uri"&gt;https://github.com/epilys/buke&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;cargo run --release -- --build&lt;/code&gt; builds an sqlite3
database out of all manpages in your &lt;code&gt;$MANPATH&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cargo run --release -- "query"&lt;/code&gt; searches for “query” in
the index&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The &lt;code&gt;sqlite3&lt;/code&gt; C bindings were generated with
&lt;code&gt;bindgen&lt;/code&gt;. The sqlite3 database is gzipped in blocks with a
custom &lt;a href="https://sqlite.org/vfs.html"&gt;&lt;code&gt;VFS&lt;/code&gt; layer&lt;/a&gt;
extension located in &lt;a
href="./src/db/vfs.rs"&gt;&lt;code&gt;src/db/vfs.rs&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The gzip version is 42MiB compared to 117MiB uncompressed.&lt;/p&gt;
&lt;h2 id="use"&gt;Use&lt;/h2&gt;
&lt;p&gt;First, build the database:&lt;/p&gt;
&lt;pre class="shell"&gt;&lt;code&gt;% ./target/release/buke --build
Wait patiently, this part wasn&amp;#39;t optimized (or bothered with)
306/10689 done..^C&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Then query:&lt;/p&gt;
&lt;pre class="shell"&gt;&lt;code&gt;% ./target/release/buke socket
systemd-socket-proxyd.8         - systemd-socket-proxyd - Bidirectionally proxy local soc
socket.7                        - socket - Linux socket interface
systemd.socket.5                - systemd.socket - Socket unit configuration
systemd-socket-activate.1       - systemd-socket-activate - Test socket activation of dae
socketcall.2                    - socketcall - socket system calls
socket.2                        - socket - create an endpoint for communication
dbus-cleanup-sockets.1          - dbus-cleanup-sockets - clean up leftover sockets in a d
socketpair.2                    - socketpair - create a pair of connected sockets
modbus_set_socket.3             - modbus_set_socket - set socket of the context
tipc-socket.8                   - tipc-socket - show TIPC socket (port) information
modbus_get_socket.3             - modbus_get_socket - get the current socket of the conte
socketmap_table.5               - socketmap_table - Postfix socketmap table lookup client
systemd-journald.socket.8       - systemd-journald.service, systemd-journald.socket, syst
systemd-journald@.socket.8      - systemd-journald.service, systemd-journald.socket, syst
systemd-journald-audit.socket.8 - systemd-journald.service, systemd-journald.socket, syst

content matches:
packet.7    - packet - packet interface on device level
unix.7      - unix - sockets for local interprocess communication
raw.7       - raw - Linux IPv4 raw sockets
connect.2   - connect - initiate a connection on a socket
ss.8        - ss - another utility to investigate sockets
udp.7       - udp - User Datagram Protocol for IPv4
netstat.8   - netstat - Print network connections, routing tables, in
sock_diag.7 - sock_diag - obtaining information about sockets
vsock.7     - vsock - Linux VSOCK address family&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Regular expression match if build with &lt;code&gt;re&lt;/code&gt; feature
(default) or if your sqlite3 version includes a &lt;code&gt;REGEXP&lt;/code&gt;
implementation:&lt;/p&gt;
&lt;pre class="shell"&gt;&lt;code&gt;% target/release/buke -r &amp;#39;system_[^_]*_types&amp;#39;
system_data_types.7 - system_data_types - overview of system data types

content matches:
FILE.3      - system_data_types - overview of system data types
time_t.3    - system_data_types - overview of system data types
fenv_t.3    - system_data_types - overview of system data types
uint64_t.3  - system_data_types - overview of system data types
va_list.3   - system_data_types - overview of system data types
dev_t.3     - system_data_types - overview of system data types
size_t.3    - system_data_types - overview of system data types
float_t.3   - system_data_types - overview of system data types
uintN_t.3   - system_data_types - overview of system data types
ptrdiff_t.3 - system_data_types - overview of system data types
int16_t.3   - system_data_types - overview of system data types
ftm.7       - feature_test_macros - feature test macros
clockid_t.3 - system_data_types - overview of system data types
off_t.3     - system_data_types - overview of system data types
div_t.3     - system_data_types - overview of system data types&lt;/code&gt;&lt;/pre&gt;
</content><link href="https://pitsidianak.is/blog/posts/2021-09-09_buke_full_text_search_manpages.html" rel="alternate"/><published>2021-09-09T00:00:00+02:00</published></entry><entry><id>https://pitsidianak.is/blog/posts/2021-10-07_Example_sqlite3_Dynamic_Loadable_Extension_in_Rust_vfs_and_vtab.html</id><title>Example sqlite3 Dynamic Loadable Extension in Rust (vfs and vtab)</title><updated>2023-03-24T18:21:35.409858+00:00</updated><content type="html">&lt;p&gt;Repository: &lt;a href="https://github.com/epilys/vfsstat.rs"
class="uri"&gt;https://github.com/epilys/vfsstat.rs&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This is an example of how to create a dynamic loadable extension for
&lt;code&gt;sqlite3&lt;/code&gt; in Rust with its FFI capabilities by calling into
the C &lt;code&gt;sqlite3&lt;/code&gt; API directly. As a proof of concept it
implements a VFS and a VTAB.&lt;/p&gt;
&lt;h2 id="vfs-and-virtual-tables"&gt;VFS and virtual tables&lt;/h2&gt;
&lt;p&gt;A VFS is an OS interface for &lt;code&gt;sqlite3&lt;/code&gt;; it handles IO with
the system. For example, the &lt;code&gt;unix&lt;/code&gt; vfs handles all the read,
write, lock operations by translating them to appropriate libc,
systemcall etc calls. Since we can chain VFSes, we can create a tree
where the leafs are the default VFS (&lt;code&gt;unix&lt;/code&gt; etc) and the
intermediate nodes process all the information before passing them on to
the next in the chain. The &lt;code&gt;sqlite3&lt;/code&gt; source distribution
contains the &lt;code&gt;vfsstat&lt;/code&gt; extension which implements a VFS that
keeps track of all read/write etc operations, and puts them in a virtual
SQL table using the &lt;code&gt;vtab&lt;/code&gt; interface of &lt;code&gt;sqlite3&lt;/code&gt;.
Just like the original, &lt;code&gt;vfsstat.rs&lt;/code&gt; keeps IO statistics.&lt;/p&gt;
&lt;p&gt;The code was a port of the official &lt;a
href="https://www.sqlite.org/src/file?name=ext/misc/vfsstat.c&amp;amp;ci=tip"&gt;&lt;code&gt;ext/misc/vfsstat.c&lt;/code&gt;&lt;/a&gt;
sqlite3 extension.&lt;/p&gt;
&lt;h2 id="build"&gt;Build&lt;/h2&gt;
&lt;pre class="shell"&gt;&lt;code&gt;cargo build --release&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Output will be located at
&lt;code&gt;target/release/libvfsstat_rs.so&lt;/code&gt;&lt;/p&gt;
&lt;h2 id="use"&gt;Use&lt;/h2&gt;
&lt;p&gt;Note: Query the virtual table by issuing
&lt;code&gt;SELECT * FROM vtabstat&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Assuming &lt;code&gt;libvfsstat_rs.so&lt;/code&gt; is in current directory,&lt;/p&gt;
&lt;pre class="shell"&gt;&lt;code&gt;$ sqlite3
sqlite&amp;gt; .load ./libvfsstat_rs
sqlite&amp;gt; .open ../../test.db
sqlite&amp;gt; .schema
CREATE TABLE person (
                  id              INTEGER PRIMARY KEY,
                  name            TEXT NOT NULL UNIQUE,
                  data            BLOB
                  );
sqlite&amp;gt; select * from person;
id  name                              data
--  --------------------------------  -------------
1   Steven                            NULL
2   05504B041661AAD1320A8537EB8234D2  zÔ];[^;H
3   4967EEDBF69420D82C6B1BCFB31397DD  ?BiΘI
4   19D0F5974A48AA561B7097CDA39E4047
                                      l!Xk- 5
5   1F1FFD477777F5AA5CBFF916A4AF9593  + 텸vy\Y
6   0925676226D46FB4EC6DAEB11D130350  &amp;lt;&amp;lt;/jޏ
7   5D6F4F219D2E3FAF7D61CA5237F106F8  (nlZ
8   FFD140BD25C1CA899446F2C9C2631A51  ,9^&amp;lt;      p
9   F9F66F44D64FC54FDFAEBD3750FD3513  [C@E
sqlite&amp;gt; select * from vtabstat;
file            stat         count
--------------  -----------  -----
main            bytesIn      12388
main            bytesOut     0
main            read         4
main            write        0
main            sync         0
main            open         1
main            lock         1
main            access       0
main            delete       0
main            fullPath     0
main            random       0
main            sleep        0
main            currentTime  0
journal         bytesIn      0
journal         bytesOut     0
journal         read         0
journal         write        0
journal         sync         0
journal         open         0
journal         lock         0
journal         access       0
journal         delete       0
journal         fullPath     0
journal         random       0
journal         sleep        0
journal         currentTime  0
wal             bytesIn      0
wal             bytesOut     0
wal             read         0
wal             write        0
wal             sync         0
wal             open         1
wal             lock         0
wal             access       0
wal             delete       0
wal             fullPath     0
wal             random       0
wal             sleep        0
wal             currentTime  0
master-journal  bytesIn      0
master-journal  bytesOut     0
master-journal  read         0
master-journal  write        0
master-journal  sync         0
master-journal  open         0
master-journal  lock         0
master-journal  access       0
master-journal  delete       0
master-journal  fullPath     0
master-journal  random       0
master-journal  sleep        0
master-journal  currentTime  0
sub-journal     bytesIn      0
sub-journal     bytesOut     0
sub-journal     read         0
sub-journal     write        0
sub-journal     sync         0
sub-journal     open         0
sub-journal     lock         0
sub-journal     access       0
sub-journal     delete       0
sub-journal     fullPath     0
sub-journal     random       0
sub-journal     sleep        0
sub-journal     currentTime  0
temp-database   bytesIn      0
temp-database   bytesOut     0
temp-database   read         0
temp-database   write        0
temp-database   sync         0
temp-database   open         0
temp-database   lock         0
temp-database   access       0
temp-database   delete       0
temp-database   fullPath     0
temp-database   random       0
temp-database   sleep        0
temp-database   currentTime  0
temp-journal    bytesIn      0
temp-journal    bytesOut     0
temp-journal    read         0
temp-journal    write        0
temp-journal    sync         0
temp-journal    open         0
temp-journal    lock         0
temp-journal    access       0
temp-journal    delete       0
temp-journal    fullPath     0
temp-journal    random       0
temp-journal    sleep        0
temp-journal    currentTime  0
transient-db    bytesIn      0
transient-db    bytesOut     0
transient-db    read         0
transient-db    write        0
transient-db    sync         0
transient-db    open         0
transient-db    lock         0
transient-db    access       0
transient-db    delete       0
transient-db    fullPath     0
transient-db    random       0
transient-db    sleep        0
transient-db    currentTime  0
*               bytesIn      0
*               bytesOut     0
*               read         0
*               write        0
*               sync         0
*               open         0
*               lock         0
*               access       2
*               delete       0
*               fullPath     1
*               random       0
*               sleep        0&lt;/code&gt;&lt;/pre&gt;
</content><link href="https://pitsidianak.is/blog/posts/2021-10-07_Example_sqlite3_Dynamic_Loadable_Extension_in_Rust_vfs_and_vtab.html" rel="alternate"/><published>2021-10-07T00:00:00+02:00</published></entry><entry><id>https://pitsidianak.is/blog/posts/2019-04-19_t420s_fuse.html</id><title>Replacing backlight fuse on t420s</title><updated>2023-03-24T18:21:35.409846+00:00</updated><content type="html">&lt;figure&gt;
&lt;img src="https://nessuent.xyz/t420s_fuse/1.jpg"
alt="the perpetrator" /&gt;
&lt;figcaption aria-hidden="true"&gt;the perpetrator&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;It is on the upper left of the monitor connection, testing the local
fuses with a multimeter led to it quickly.&lt;/p&gt;
&lt;p&gt;time for the dirtiest repair job ever. I have never done tiny SMD
soldering in my life. I had no flux, small solder or a fine soldering
tip and they are expensive to get in this forsaken part of the world. I
usually order stuff online but I didn’t want to wait.&lt;/p&gt;
&lt;p&gt;I ordered 5 fuses (for redundancy) from digi-key with express
shipping and they arrived in 2 days. It was only afterwards that I
realised I could have ordered solder, tips and flux from digikey as
well.&lt;/p&gt;
&lt;p&gt;I needed to protect the laptop from ESD. I am far from the actual
ground (1st floor) so I connected the&lt;/p&gt;
&lt;figure&gt;
&lt;img src="https://nessuent.xyz/t420s_fuse/esd.jpg" width="250"
alt="anti-static wrist wrap (stock photo)" /&gt;
&lt;figcaption aria-hidden="true"&gt;anti-static wrist wrap (stock
photo)&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;on my oscilloscope.&lt;/p&gt;
&lt;p&gt;The fuse is 0402, ie 0.4mm x 0.2mm. Smaller than a flea, and&lt;/p&gt;
&lt;figure&gt;
&lt;img src="https://nessuent.xyz/t420s_fuse/2.jpg"
alt="it looks like a breadcrumb unless you look at it with a magnifying lens." /&gt;
&lt;figcaption aria-hidden="true"&gt;it looks like a breadcrumb unless you
look at it with a magnifying lens.&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;Removing the old fuse was out of the question because a safer way
exists: applying the new one over the old one. By the way, I’ve read
people online saying you could short it as well, but if another high
load passes through you would probably do permanent damage.&lt;/p&gt;
&lt;figure&gt;
&lt;img src="https://nessuent.xyz/t420s_fuse/3.jpg"
alt="Aligning the fuses is incredibly frustrating." /&gt;
&lt;figcaption aria-hidden="true"&gt;Aligning the fuses is incredibly
frustrating.&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;Flux would make it easier because it wouldn’t be pushed around by my
breath or accidental pushes with my tweezers (nervousness and caffeine
shouldn’t mix!).&lt;/p&gt;
&lt;figure&gt;
&lt;img src="https://nessuent.xyz/t420s_fuse/4.jpg"
alt="I also had to cut very very thin pieces of solder with a hobby knife." /&gt;
&lt;figcaption aria-hidden="true"&gt;I also had to cut very very thin pieces
of solder with a hobby knife.&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;It was annoying to cut pieces with guesswork only to see that even
though you cut it in half 3 times it’s still bigger than the fuse.&lt;/p&gt;
&lt;figure&gt;
&lt;img src="https://nessuent.xyz/t420s_fuse/5.jpg"
alt="It took me ages to properly align and apply the first solder" /&gt;
&lt;figcaption aria-hidden="true"&gt;It took me ages to properly align
&lt;em&gt;and&lt;/em&gt; apply the first solder&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;(dry tacking was impossible). Plus you can’t touch the actual fuse
with the soldering iron or it’s busted. I was getting anxious because my
10 Hours Classical Music for Concentration video was reaching the
end.&lt;/p&gt;
&lt;figure&gt;
&lt;img src="https://nessuent.xyz/t420s_fuse/6.jpg" alt="fiat lux!" /&gt;
&lt;figcaption aria-hidden="true"&gt;fiat lux!&lt;/figcaption&gt;
&lt;/figure&gt;
</content><link href="https://pitsidianak.is/blog/posts/2019-04-19_t420s_fuse.html" rel="alternate"/><published>2019-04-19T00:00:00+02:00</published></entry><entry><id>https://pitsidianak.is/blog/posts/2021-07-15_link_aggregator.html</id><title>sic.pm is a no-javascript tagged link aggregator community</title><updated>2023-03-24T18:21:35.409834+00:00</updated><content type="html">&lt;p&gt;&lt;a href="https://sic.pm/" class="uri"&gt;https://sic.pm/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/epilys/sic"
class="uri"&gt;https://github.com/epilys/sic&lt;/a&gt;&lt;/p&gt;
</content><link href="https://pitsidianak.is/blog/posts/2021-07-15_link_aggregator.html" rel="alternate"/><published>2021-07-15T00:00:00+02:00</published></entry><entry><id>https://pitsidianak.is/blog/posts/2021-06-29-using_sqlite3_as_a_notekeeping_graph.html</id><title>Using sqlite3 as a notekeeping document graph with automatic reference indexing</title><updated>2023-03-24T18:21:35.409821+00:00</updated><content type="html">&lt;p&gt;Article located at:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://epilys.github.io/bibliothecula/notekeeping.html"
class="uri"&gt;https://epilys.github.io/bibliothecula/notekeeping.html&lt;/a&gt;&lt;/p&gt;
</content><link href="https://pitsidianak.is/blog/posts/2021-06-29-using_sqlite3_as_a_notekeeping_graph.html" rel="alternate"/><published>2021-06-29T00:00:00+02:00</published></entry><entry><id>https://pitsidianak.is/blog/posts/2017-08-28_completed_gsoc.html</id><title>Completed GSOC with QEMU project on "Moving I/O throttling and write notifiers into block filter drivers"</title><updated>2023-03-24T18:21:35.409807+00:00</updated><content type="html">&lt;p&gt;(&lt;em&gt;Note&lt;/em&gt;: this is a copy of my completion report on the
&lt;code&gt;qemu&lt;/code&gt; mailing list: &lt;a
href="https://lists.nongnu.org/archive/html/qemu-devel/2017-08/msg05371.html"
class="uri"&gt;https://lists.nongnu.org/archive/html/qemu-devel/2017-08/msg05371.html&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;This is a GSOC project summary required for the project’s final
submission. As part of GSOC 2017, I took the project of moving two hard
coded block layer features into filter drivers. I/O Throttling is
implemented in &lt;code&gt;block/throttle.c&lt;/code&gt; and before write notifiers
are split into a driver for each user of the before write notifier API:
&lt;code&gt;block/backup.c&lt;/code&gt; and &lt;code&gt;block/write-threshold.c&lt;/code&gt;.
Furthermore, work began on &lt;code&gt;block-insert-node&lt;/code&gt; and
&lt;code&gt;block-remove-noder&lt;/code&gt; commands for the QMP interface to allow
runtime insertion and removal of filter drivers. [0]&lt;/p&gt;
&lt;p&gt;A lot of thanks to my mentors for their help: Alberto Garcia, Stefan
Hajnoczi and Kevin Wolf.&lt;/p&gt;
&lt;h2 id="terms"&gt;Terms&lt;/h2&gt;
&lt;p&gt;The &lt;code&gt;BlockBackend&lt;/code&gt; struct
(&lt;code&gt;block/block-backend.c&lt;/code&gt;) represents the backend part of a
storage device that a VM sees in the QEMU environment. The
&lt;code&gt;BlockBackend&lt;/code&gt; has the responsibility to forward I/O requests
from the VM down to the actual underlying storage; a network block
device, a qcow2 image etc.&lt;/p&gt;
&lt;p&gt;In order to allow for polymorphic storage, a
&lt;code&gt;BlockBackend&lt;/code&gt; forwards the requests to an acyclic graph in
which the leaves are the terminal I/O destination, a file or network
connection. The &lt;code&gt;BlockDriverState&lt;/code&gt; struct represents a node
in this graph, and each node is governed by a specific driver. Above the
leaf-nodes we have format drivers that translate requests for each
format (ie a qcow2 driver, or a raw driver). Backing files are
implemented as chains of nodes that forward read requests to their
children but keep write requests to themselves. This setup allows
different node drivers to intercept requests before they reach their
destination by being inserted into points of interest in the graph. We
call these block filter drivers.&lt;/p&gt;
&lt;p&gt;An existing filter driver for example is
&lt;code&gt;block/blkverify.c&lt;/code&gt; which compares two children for content
parity and reports content mismatches.&lt;/p&gt;
&lt;h2 id="io-throttling"&gt;I/O Throttling&lt;/h2&gt;
&lt;p&gt;I/O throttling is done by intercepting I/O requests and throttling
them based on the configured limits (docs/throttle.txt). The interface
was refactored into the throttle driver [1] while the throttling
primitives were left unchanged. The already existing interface of
setting limits on a BlockBackend device is simulated [2] by inserting a
hidden to the user throttle filter node at the root of the BlockBackend
with the user’s set limits. Implicitly created filter nodes is not a
good solution since some of the QEMU internals are written without
considering filter nodes. Some patches in the throttle-remove-legacy
branch are dedicated to changing existing behaviour to match the new
concept of implicit filters. In the future management tools should be
expected to explicitly add and remove filter nodes like throttle (except
for transient block job filters which may remain implicit) and there
should be no surprises about the state of the block layer graph for the
user.&lt;/p&gt;
&lt;p&gt;Throttle groups are categories of drives sharing the same limits with
a round-robin algorithm. Additional effort was spent on making throttle
groups easier to configure by turning them into a separately creatable
object (with -object syntax on command line invocation or object-add in
QMP). Their properties can be set with ‘qom-set’ commands and retrieved
with ‘qom-get’.&lt;/p&gt;
&lt;h2 id="write-notifiers"&gt;Write Notifiers&lt;/h2&gt;
&lt;p&gt;While a backup block job is running, it is important to have
knowledge of writes to the relevant image. Before write notifiers pass
the write requests to the backup job to perform copy on write on the
target image with the new data. Currently this is done on the
BlockBackend level. Other block jobs (commit/mirror) already create
implicit nodes in the BDS chain and this approach was copied and a
backup filter driver was created [3], internal to block/backup.c&lt;/p&gt;
&lt;p&gt;The write-threshold feature once enabled via QMP, watches passing
write requests and compares them to a user-given threshold offset. When
that threshold is exceeded an event is delivered to the user and the
feature disables itself. This is used for management tools that need to
know when they have to resize their images. Like backup, this was done
in the BlockBackend level. However it wasn’t easy to replace the
existing interface with an implicit filter node like in throttling, so
only a separate driver was created [4] in block/write-threshold.c. Like
other filter drivers, it can be inserted on runtime and removed once it
delivers the event and is spent and should be removed or replaced.&lt;/p&gt;
&lt;h2 id="branches-patches"&gt;Branches / Patches&lt;/h2&gt;
&lt;p&gt;The ‘throttle’ and ‘throttle-remove-legacy’ patches should be merged
soon after master unfreezes from the 2.10 release. The rest of the patch
series are in final stages of review on qemu-devel except for
block-insert-node which is an RFC [5].&lt;/p&gt;
&lt;p&gt;Already merged patches in 2.10
https://github.com/qemu/qemu/commits/v2.10.0-rc4?author=epilys Already
merged patches for 2.11
https://www.mail-archive.com/address@hidden/msg470461.html&lt;/p&gt;
&lt;p&gt;[0] [insert-node] block-insert-node and block-remove-node commands
https://github.com/epilys/qemu/commits/insert-node?author=epilys&lt;/p&gt;
&lt;p&gt;[1] [throttle] add throttle filter driver
https://github.com/epilys/qemu/commits/throttle?author=epilys
Message-ID: &lt;a href="mailto:address@hidden"
class="email"&gt;address@hidden&lt;/a&gt;
https://www.mail-archive.com/address@hidden/msg476047.html&lt;/p&gt;
&lt;p&gt;[2] [throttle-remove-legacy] remove legacy throttling interface
https://github.com/epilys/qemu/commits/throttle-remove-legacy?author=epilys&lt;/p&gt;
&lt;p&gt;[3] [4] [notify]
https://github.com/epilys/qemu/commits/notify?author=epilys&lt;/p&gt;
&lt;p&gt;[5] block-insert-node RFC Message-ID: &lt;a href="mailto:address@hidden"
class="email"&gt;address@hidden&lt;/a&gt;
https://www.mail-archive.com/address@hidden/msg473619.html&lt;/p&gt;
</content><link href="https://pitsidianak.is/blog/posts/2017-08-28_completed_gsoc.html" rel="alternate"/><published>2017-08-28T00:00:00+02:00</published></entry><entry><id>https://pitsidianak.is/blog/posts/2021-07-18_detecting_cycles.html</id><title>Detecting cycles in tag parent-child relationship in sqlite3</title><updated>2023-03-24T18:21:35.409782+00:00</updated><content type="html">&lt;h2 id="problem-statement"&gt;Problem statement&lt;/h2&gt;
&lt;p&gt;Story tags can have multiple parents. This establishes a hierarchy
where a tag can have a tree of descendants. We want this directed graph
to be acyclic (&lt;em&gt;DAG&lt;/em&gt;) because cycles don’t make sense in a
topical hierarchy, and when we query the graph we would have to be extra
cautious to not fall in infinite loops.&lt;/p&gt;
&lt;h3 id="database-schema"&gt;Database schema&lt;/h3&gt;
&lt;p&gt;Here are the tables created by django:&lt;/p&gt;
&lt;div class="sourceCode" id="cb1"&gt;&lt;pre
class="sourceCode sql"&gt;&lt;code class="sourceCode sql"&gt;&lt;span id="cb1-1"&gt;&lt;a href="#cb1-1" aria-hidden="true" tabindex="-1"&gt;&lt;/a&gt;&lt;span class="kw"&gt;CREATE&lt;/span&gt; &lt;span class="kw"&gt;TABLE&lt;/span&gt; &lt;span class="cf"&gt;IF&lt;/span&gt; &lt;span class="kw"&gt;NOT&lt;/span&gt; &lt;span class="kw"&gt;EXISTS&lt;/span&gt; &lt;span class="ot"&gt;&amp;quot;sic_tag&amp;quot;&lt;/span&gt; (&lt;/span&gt;
&lt;span id="cb1-2"&gt;&lt;a href="#cb1-2" aria-hidden="true" tabindex="-1"&gt;&lt;/a&gt;  &lt;span class="ot"&gt;&amp;quot;id&amp;quot;&lt;/span&gt; &lt;span class="dt"&gt;integer&lt;/span&gt; &lt;span class="kw"&gt;NOT&lt;/span&gt; &lt;span class="kw"&gt;NULL&lt;/span&gt; &lt;span class="kw"&gt;PRIMARY&lt;/span&gt; &lt;span class="kw"&gt;KEY&lt;/span&gt; AUTOINCREMENT,&lt;/span&gt;
&lt;span id="cb1-3"&gt;&lt;a href="#cb1-3" aria-hidden="true" tabindex="-1"&gt;&lt;/a&gt;  &lt;span class="ot"&gt;&amp;quot;name&amp;quot;&lt;/span&gt; &lt;span class="dt"&gt;varchar&lt;/span&gt;(&lt;span class="dv"&gt;40&lt;/span&gt;) &lt;span class="kw"&gt;NOT&lt;/span&gt; &lt;span class="kw"&gt;NULL&lt;/span&gt; &lt;span class="kw"&gt;UNIQUE&lt;/span&gt;,&lt;/span&gt;
&lt;span id="cb1-4"&gt;&lt;a href="#cb1-4" aria-hidden="true" tabindex="-1"&gt;&lt;/a&gt;  &lt;span class="ot"&gt;&amp;quot;created&amp;quot;&lt;/span&gt; datetime &lt;span class="kw"&gt;NOT&lt;/span&gt; &lt;span class="kw"&gt;NULL&lt;/span&gt;,&lt;/span&gt;
&lt;span id="cb1-5"&gt;&lt;a href="#cb1-5" aria-hidden="true" tabindex="-1"&gt;&lt;/a&gt;  &lt;span class="ot"&gt;&amp;quot;hex_color&amp;quot;&lt;/span&gt; &lt;span class="dt"&gt;varchar&lt;/span&gt;(&lt;span class="dv"&gt;7&lt;/span&gt;) &lt;span class="kw"&gt;NULL&lt;/span&gt;&lt;/span&gt;
&lt;span id="cb1-6"&gt;&lt;a href="#cb1-6" aria-hidden="true" tabindex="-1"&gt;&lt;/a&gt;);&lt;/span&gt;
&lt;span id="cb1-7"&gt;&lt;a href="#cb1-7" aria-hidden="true" tabindex="-1"&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id="cb1-8"&gt;&lt;a href="#cb1-8" aria-hidden="true" tabindex="-1"&gt;&lt;/a&gt;&lt;span class="kw"&gt;CREATE&lt;/span&gt; &lt;span class="kw"&gt;TABLE&lt;/span&gt; &lt;span class="cf"&gt;IF&lt;/span&gt; &lt;span class="kw"&gt;NOT&lt;/span&gt; &lt;span class="kw"&gt;EXISTS&lt;/span&gt; &lt;span class="ot"&gt;&amp;quot;sic_tag_parents&amp;quot;&lt;/span&gt; (&lt;/span&gt;
&lt;span id="cb1-9"&gt;&lt;a href="#cb1-9" aria-hidden="true" tabindex="-1"&gt;&lt;/a&gt;  &lt;span class="ot"&gt;&amp;quot;id&amp;quot;&lt;/span&gt; &lt;span class="dt"&gt;integer&lt;/span&gt; &lt;span class="kw"&gt;NOT&lt;/span&gt; &lt;span class="kw"&gt;NULL&lt;/span&gt; &lt;span class="kw"&gt;PRIMARY&lt;/span&gt; &lt;span class="kw"&gt;KEY&lt;/span&gt; AUTOINCREMENT,&lt;/span&gt;
&lt;span id="cb1-10"&gt;&lt;a href="#cb1-10" aria-hidden="true" tabindex="-1"&gt;&lt;/a&gt;  &lt;span class="ot"&gt;&amp;quot;from_tag_id&amp;quot;&lt;/span&gt; &lt;span class="dt"&gt;integer&lt;/span&gt; &lt;span class="kw"&gt;NOT&lt;/span&gt; &lt;span class="kw"&gt;NULL&lt;/span&gt; &lt;span class="kw"&gt;REFERENCES&lt;/span&gt; &lt;span class="ot"&gt;&amp;quot;sic_tag&amp;quot;&lt;/span&gt; (&lt;span class="ot"&gt;&amp;quot;id&amp;quot;&lt;/span&gt;) &lt;span class="kw"&gt;DEFERRABLE&lt;/span&gt; &lt;span class="kw"&gt;INITIALLY&lt;/span&gt; &lt;span class="kw"&gt;DEFERRED&lt;/span&gt;,&lt;/span&gt;
&lt;span id="cb1-11"&gt;&lt;a href="#cb1-11" aria-hidden="true" tabindex="-1"&gt;&lt;/a&gt;  &lt;span class="ot"&gt;&amp;quot;to_tag_id&amp;quot;&lt;/span&gt; &lt;span class="dt"&gt;integer&lt;/span&gt; &lt;span class="kw"&gt;NOT&lt;/span&gt; &lt;span class="kw"&gt;NULL&lt;/span&gt; &lt;span class="kw"&gt;REFERENCES&lt;/span&gt; &lt;span class="ot"&gt;&amp;quot;sic_tag&amp;quot;&lt;/span&gt; (&lt;span class="ot"&gt;&amp;quot;id&amp;quot;&lt;/span&gt;) &lt;span class="kw"&gt;DEFERRABLE&lt;/span&gt; &lt;span class="kw"&gt;INITIALLY&lt;/span&gt; &lt;span class="kw"&gt;DEFERRED&lt;/span&gt;&lt;/span&gt;
&lt;span id="cb1-12"&gt;&lt;a href="#cb1-12" aria-hidden="true" tabindex="-1"&gt;&lt;/a&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The table &lt;code&gt;sic_tag_parents&lt;/code&gt; contains one row for each
directed edge.&lt;/p&gt;
&lt;h2 id="recursive-common-table-expression-cte-to-the-rescue"&gt;Recursive
Common Table Expression (CTE) to the rescue&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;sqlite3&lt;/code&gt; provides us with the ability to perform
recursive queries with Common Table Expressions. We can use this to
write a query that returns all paths within the graph. Then, when we
insert a new parent-child relationship, we check if there already exists
a directed path from the child to its parent.&lt;/p&gt;
&lt;p&gt;Unfortunately it’s not possible to make a table
&lt;code&gt;CHECK CONSTRAINT&lt;/code&gt; since the constraint must refer to the
table, which exists only after the &lt;code&gt;CREATE TABLE&lt;/code&gt; statement
is finished. We can instead make the check in a
&lt;code&gt;BEFORE INSERT&lt;/code&gt; trigger and &lt;code&gt;RAISE(ABORT)&lt;/code&gt; if a
cycle is detected, thus preventing the insertion.&lt;/p&gt;
&lt;p&gt;Firstly, the trigger shall execute a &lt;code&gt;SELECT&lt;/code&gt; query for
each inserted row. In order to raise an exception, we have to
&lt;code&gt;SELECT&lt;/code&gt; it:&lt;/p&gt;
&lt;div class="sourceCode" id="cb2"&gt;&lt;pre
class="sourceCode sql"&gt;&lt;code class="sourceCode sql"&gt;&lt;span id="cb2-1"&gt;&lt;a href="#cb2-1" aria-hidden="true" tabindex="-1"&gt;&lt;/a&gt;&lt;span class="kw"&gt;CREATE&lt;/span&gt; &lt;span class="kw"&gt;TRIGGER&lt;/span&gt; cycle_check&lt;/span&gt;
&lt;span id="cb2-2"&gt;&lt;a href="#cb2-2" aria-hidden="true" tabindex="-1"&gt;&lt;/a&gt;&lt;span class="kw"&gt;BEFORE&lt;/span&gt; &lt;span class="kw"&gt;INSERT&lt;/span&gt; &lt;span class="kw"&gt;ON&lt;/span&gt; sic_tag_parents&lt;/span&gt;
&lt;span id="cb2-3"&gt;&lt;a href="#cb2-3" aria-hidden="true" tabindex="-1"&gt;&lt;/a&gt;&lt;span class="cf"&gt;FOR&lt;/span&gt; &lt;span class="kw"&gt;EACH&lt;/span&gt; &lt;span class="kw"&gt;ROW&lt;/span&gt;&lt;/span&gt;
&lt;span id="cb2-4"&gt;&lt;a href="#cb2-4" aria-hidden="true" tabindex="-1"&gt;&lt;/a&gt;&lt;span class="cf"&gt;BEGIN&lt;/span&gt;&lt;/span&gt;
&lt;span id="cb2-5"&gt;&lt;a href="#cb2-5" aria-hidden="true" tabindex="-1"&gt;&lt;/a&gt;  &lt;span class="kw"&gt;SELECT&lt;/span&gt; RAISE(ABORT, &lt;span class="st"&gt;&amp;#39;Cycle detected&amp;#39;&lt;/span&gt;);&lt;/span&gt;
&lt;span id="cb2-6"&gt;&lt;a href="#cb2-6" aria-hidden="true" tabindex="-1"&gt;&lt;/a&gt;&lt;span class="cf"&gt;END&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Secondly, in order to abort only when a specific condition is met, we
can use a &lt;code&gt;WHERE EXISTS&lt;/code&gt;:&lt;/p&gt;
&lt;div class="sourceCode" id="cb3"&gt;&lt;pre
class="sourceCode sql"&gt;&lt;code class="sourceCode sql"&gt;&lt;span id="cb3-1"&gt;&lt;a href="#cb3-1" aria-hidden="true" tabindex="-1"&gt;&lt;/a&gt;&lt;span class="kw"&gt;CREATE&lt;/span&gt; &lt;span class="kw"&gt;TRIGGER&lt;/span&gt; cycle_check&lt;/span&gt;
&lt;span id="cb3-2"&gt;&lt;a href="#cb3-2" aria-hidden="true" tabindex="-1"&gt;&lt;/a&gt;&lt;span class="kw"&gt;BEFORE&lt;/span&gt; &lt;span class="kw"&gt;INSERT&lt;/span&gt; &lt;span class="kw"&gt;ON&lt;/span&gt; sic_tag_parents&lt;/span&gt;
&lt;span id="cb3-3"&gt;&lt;a href="#cb3-3" aria-hidden="true" tabindex="-1"&gt;&lt;/a&gt;&lt;span class="cf"&gt;FOR&lt;/span&gt; &lt;span class="kw"&gt;EACH&lt;/span&gt; &lt;span class="kw"&gt;ROW&lt;/span&gt;&lt;/span&gt;
&lt;span id="cb3-4"&gt;&lt;a href="#cb3-4" aria-hidden="true" tabindex="-1"&gt;&lt;/a&gt;&lt;span class="cf"&gt;BEGIN&lt;/span&gt;&lt;/span&gt;
&lt;span id="cb3-5"&gt;&lt;a href="#cb3-5" aria-hidden="true" tabindex="-1"&gt;&lt;/a&gt;  &lt;span class="kw"&gt;SELECT&lt;/span&gt; RAISE(ABORT, &lt;span class="st"&gt;&amp;#39;Cycle detected&amp;#39;&lt;/span&gt;) &lt;span class="kw"&gt;WHERE&lt;/span&gt; &lt;span class="kw"&gt;EXISTS&lt;/span&gt; (&lt;span class="op"&gt;..&lt;/span&gt;.);&lt;/span&gt;
&lt;span id="cb3-6"&gt;&lt;a href="#cb3-6" aria-hidden="true" tabindex="-1"&gt;&lt;/a&gt;&lt;span class="cf"&gt;END&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;In the &lt;code&gt;EXISTS&lt;/code&gt; expression we shall put a recursive CTE
that returns something (anything) if a cycle exists. If anything is
returned, &lt;code&gt;EXISTS&lt;/code&gt; evaluates to true and &lt;code&gt;RAISE&lt;/code&gt;
is selected.&lt;/p&gt;
&lt;p&gt;This is the CTE query:&lt;/p&gt;
&lt;div class="sourceCode" id="cb4"&gt;&lt;pre
class="sourceCode sql"&gt;&lt;code class="sourceCode sql"&gt;&lt;span id="cb4-1"&gt;&lt;a href="#cb4-1" aria-hidden="true" tabindex="-1"&gt;&lt;/a&gt;&lt;span class="kw"&gt;WITH&lt;/span&gt; RECURSIVE w(&lt;span class="kw"&gt;parent&lt;/span&gt;, last_visited, already_visited, &lt;span class="kw"&gt;cycle&lt;/span&gt;) &lt;span class="kw"&gt;AS&lt;/span&gt; (&lt;/span&gt;
&lt;span id="cb4-2"&gt;&lt;a href="#cb4-2" aria-hidden="true" tabindex="-1"&gt;&lt;/a&gt;      &lt;span class="kw"&gt;SELECT&lt;/span&gt; &lt;span class="kw"&gt;DISTINCT&lt;/span&gt; to_tag_id &lt;span class="kw"&gt;AS&lt;/span&gt; &lt;span class="kw"&gt;parent&lt;/span&gt;, from_tag_id &lt;span class="kw"&gt;AS&lt;/span&gt; last_visited, to_tag_id &lt;span class="kw"&gt;AS&lt;/span&gt; already_visited, &lt;span class="dv"&gt;0&lt;/span&gt; &lt;span class="kw"&gt;AS&lt;/span&gt; &lt;span class="kw"&gt;cycle&lt;/span&gt; &lt;span class="kw"&gt;FROM&lt;/span&gt; sic_tag_parents&lt;/span&gt;
&lt;span id="cb4-3"&gt;&lt;a href="#cb4-3" aria-hidden="true" tabindex="-1"&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id="cb4-4"&gt;&lt;a href="#cb4-4" aria-hidden="true" tabindex="-1"&gt;&lt;/a&gt;      &lt;span class="kw"&gt;UNION&lt;/span&gt; &lt;span class="kw"&gt;ALL&lt;/span&gt;&lt;/span&gt;
&lt;span id="cb4-5"&gt;&lt;a href="#cb4-5" aria-hidden="true" tabindex="-1"&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id="cb4-6"&gt;&lt;a href="#cb4-6" aria-hidden="true" tabindex="-1"&gt;&lt;/a&gt;      &lt;span class="kw"&gt;SELECT&lt;/span&gt; t.to_tag_id &lt;span class="kw"&gt;AS&lt;/span&gt; &lt;span class="kw"&gt;parent&lt;/span&gt;, t.from_tag_id &lt;span class="kw"&gt;AS&lt;/span&gt; last_visited, already_visited &lt;span class="op"&gt;||&lt;/span&gt; &lt;span class="st"&gt;&amp;#39;, &amp;#39;&lt;/span&gt; &lt;span class="op"&gt;||&lt;/span&gt; t.to_tag_id, already_visited &lt;span class="kw"&gt;LIKE&lt;/span&gt; &lt;span class="st"&gt;&amp;#39;%&amp;#39;&lt;/span&gt;&lt;span class="op"&gt;||&lt;/span&gt;t.to_tag_id&lt;span class="op"&gt;||&lt;/span&gt;&lt;span class="ot"&gt;&amp;quot;%&amp;quot;&lt;/span&gt; &lt;span class="kw"&gt;FROM&lt;/span&gt; sic_tag_parents &lt;span class="kw"&gt;AS&lt;/span&gt; t &lt;span class="kw"&gt;JOIN&lt;/span&gt; w &lt;span class="kw"&gt;ON&lt;/span&gt; w.last_visited &lt;span class="op"&gt;=&lt;/span&gt; t.to_tag_id&lt;/span&gt;
&lt;span id="cb4-7"&gt;&lt;a href="#cb4-7" aria-hidden="true" tabindex="-1"&gt;&lt;/a&gt;      &lt;span class="kw"&gt;WHERE&lt;/span&gt; &lt;span class="kw"&gt;NOT&lt;/span&gt; &lt;span class="kw"&gt;cycle&lt;/span&gt;&lt;/span&gt;
&lt;span id="cb4-8"&gt;&lt;a href="#cb4-8" aria-hidden="true" tabindex="-1"&gt;&lt;/a&gt;)&lt;/span&gt;
&lt;span id="cb4-9"&gt;&lt;a href="#cb4-9" aria-hidden="true" tabindex="-1"&gt;&lt;/a&gt;&lt;span class="kw"&gt;SELECT&lt;/span&gt; already_visited, &lt;span class="kw"&gt;cycle&lt;/span&gt; &lt;span class="kw"&gt;FROM&lt;/span&gt; w &lt;span class="kw"&gt;WHERE&lt;/span&gt; last_visited &lt;span class="op"&gt;=&lt;/span&gt; &lt;span class="kw"&gt;NEW&lt;/span&gt;.to_tag_id &lt;span class="kw"&gt;AND&lt;/span&gt; already_visited &lt;span class="kw"&gt;LIKE&lt;/span&gt; &lt;span class="st"&gt;&amp;#39;%&amp;#39;&lt;/span&gt;&lt;span class="op"&gt;||&lt;/span&gt;&lt;span class="kw"&gt;NEW&lt;/span&gt;.from_tag_id&lt;span class="op"&gt;||&lt;/span&gt;&lt;span class="st"&gt;&amp;#39;%&amp;#39;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Line-by-line:&lt;/p&gt;
&lt;div class="sourceCode" id="cb5"&gt;&lt;pre
class="sourceCode sql"&gt;&lt;code class="sourceCode sql"&gt;&lt;span id="cb5-1"&gt;&lt;a href="#cb5-1" aria-hidden="true" tabindex="-1"&gt;&lt;/a&gt;&lt;span class="kw"&gt;WITH&lt;/span&gt; RECURSIVE w(&lt;span class="kw"&gt;parent&lt;/span&gt;, last_visited, already_visited, &lt;span class="kw"&gt;cycle&lt;/span&gt;) &lt;span class="kw"&gt;AS&lt;/span&gt;&lt;span class="op"&gt;..&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This defines a temporary table/view called &lt;code&gt;w&lt;/code&gt; with these
columns as an expression. This is similar to defining regular views as
the result of a &lt;code&gt;SELECT&lt;/code&gt; statement.&lt;/p&gt;
&lt;div class="sourceCode" id="cb6"&gt;&lt;pre
class="sourceCode sql"&gt;&lt;code class="sourceCode sql"&gt;&lt;span id="cb6-1"&gt;&lt;a href="#cb6-1" aria-hidden="true" tabindex="-1"&gt;&lt;/a&gt;&lt;span class="kw"&gt;SELECT&lt;/span&gt; &lt;span class="kw"&gt;DISTINCT&lt;/span&gt; to_tag_id &lt;span class="kw"&gt;AS&lt;/span&gt; &lt;span class="kw"&gt;parent&lt;/span&gt;, from_tag_id &lt;span class="kw"&gt;AS&lt;/span&gt; last_visited, to_tag_id &lt;span class="kw"&gt;AS&lt;/span&gt; already_visited, &lt;span class="dv"&gt;0&lt;/span&gt; &lt;span class="kw"&gt;AS&lt;/span&gt; &lt;span class="kw"&gt;cycle&lt;/span&gt; &lt;span class="kw"&gt;FROM&lt;/span&gt; sic_tag_parents&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Here we select every edge as the start of a potential path. These
edges are paths of length 1, and are also acyclic, hence we select 0 as
&lt;code&gt;cycle&lt;/code&gt;. This line is performed one time at the beginning of
the CTE, it’s the basis of the recursion.&lt;/p&gt;
&lt;div class="sourceCode" id="cb7"&gt;&lt;pre
class="sourceCode sql"&gt;&lt;code class="sourceCode sql"&gt;&lt;span id="cb7-1"&gt;&lt;a href="#cb7-1" aria-hidden="true" tabindex="-1"&gt;&lt;/a&gt;&lt;span class="kw"&gt;UNION&lt;/span&gt; &lt;span class="kw"&gt;ALL&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The base select is united with the select that follows:&lt;/p&gt;
&lt;div class="sourceCode" id="cb8"&gt;&lt;pre
class="sourceCode sql"&gt;&lt;code class="sourceCode sql"&gt;&lt;span id="cb8-1"&gt;&lt;a href="#cb8-1" aria-hidden="true" tabindex="-1"&gt;&lt;/a&gt;&lt;span class="kw"&gt;SELECT&lt;/span&gt; t.to_tag_id &lt;span class="kw"&gt;AS&lt;/span&gt; &lt;span class="kw"&gt;parent&lt;/span&gt;, t.from_tag_id &lt;span class="kw"&gt;AS&lt;/span&gt; last_visited, already_visited &lt;span class="op"&gt;||&lt;/span&gt; &lt;span class="st"&gt;&amp;#39;, &amp;#39;&lt;/span&gt; &lt;span class="op"&gt;||&lt;/span&gt; t.to_tag_id, already_visited &lt;span class="kw"&gt;LIKE&lt;/span&gt; &lt;span class="st"&gt;&amp;#39;%&amp;#39;&lt;/span&gt;&lt;span class="op"&gt;||&lt;/span&gt;t.to_tag_id&lt;span class="op"&gt;||&lt;/span&gt;&lt;span class="ot"&gt;&amp;quot;%&amp;quot;&lt;/span&gt; &lt;span class="kw"&gt;FROM&lt;/span&gt; sic_tag_parents &lt;span class="kw"&gt;AS&lt;/span&gt; t &lt;span class="kw"&gt;JOIN&lt;/span&gt; w &lt;span class="kw"&gt;ON&lt;/span&gt; w.last_visited &lt;span class="op"&gt;=&lt;/span&gt; t.to_tag_id&lt;/span&gt;
&lt;span id="cb8-2"&gt;&lt;a href="#cb8-2" aria-hidden="true" tabindex="-1"&gt;&lt;/a&gt;&lt;span class="kw"&gt;WHERE&lt;/span&gt; &lt;span class="kw"&gt;NOT&lt;/span&gt; &lt;span class="kw"&gt;cycle&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Here we &lt;code&gt;JOIN&lt;/code&gt; &lt;code&gt;sic_tag_parents&lt;/code&gt; with
&lt;code&gt;w&lt;/code&gt; itself, by adding edges to the already existing paths in
the previous iteration of &lt;code&gt;w&lt;/code&gt;. The path is built as a string
of comma separated &lt;code&gt;id&lt;/code&gt;s. &lt;code&gt;cycle&lt;/code&gt; is true if
&lt;code&gt;to_tag_id&lt;/code&gt;, the parent, already exists in the previous path.
The &lt;code&gt;WHERE NOT cycle&lt;/code&gt; is necessary to prevent infinite
recursion.&lt;/p&gt;
&lt;div class="sourceCode" id="cb9"&gt;&lt;pre
class="sourceCode sql"&gt;&lt;code class="sourceCode sql"&gt;&lt;span id="cb9-1"&gt;&lt;a href="#cb9-1" aria-hidden="true" tabindex="-1"&gt;&lt;/a&gt;&lt;span class="kw"&gt;SELECT&lt;/span&gt; already_visited, &lt;span class="kw"&gt;cycle&lt;/span&gt; &lt;span class="kw"&gt;FROM&lt;/span&gt; w &lt;span class="kw"&gt;WHERE&lt;/span&gt; last_visited &lt;span class="op"&gt;=&lt;/span&gt; &lt;span class="kw"&gt;NEW&lt;/span&gt;.to_tag_id &lt;span class="kw"&gt;AND&lt;/span&gt; already_visited &lt;span class="kw"&gt;LIKE&lt;/span&gt; &lt;span class="st"&gt;&amp;#39;%&amp;#39;&lt;/span&gt;&lt;span class="op"&gt;||&lt;/span&gt;&lt;span class="kw"&gt;NEW&lt;/span&gt;.from_tag_id&lt;span class="op"&gt;||&lt;/span&gt;&lt;span class="st"&gt;&amp;#39;%&amp;#39;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Finally, we select the paths that begin with the parent and contain
the child.&lt;/p&gt;
&lt;p&gt;The entire trigger:&lt;/p&gt;
&lt;div class="sourceCode" id="cb10"&gt;&lt;pre
class="sourceCode sql"&gt;&lt;code class="sourceCode sql"&gt;&lt;span id="cb10-1"&gt;&lt;a href="#cb10-1" aria-hidden="true" tabindex="-1"&gt;&lt;/a&gt;&lt;span class="kw"&gt;CREATE&lt;/span&gt; &lt;span class="kw"&gt;TRIGGER&lt;/span&gt; cycle_check&lt;/span&gt;
&lt;span id="cb10-2"&gt;&lt;a href="#cb10-2" aria-hidden="true" tabindex="-1"&gt;&lt;/a&gt;&lt;span class="kw"&gt;BEFORE&lt;/span&gt; &lt;span class="kw"&gt;INSERT&lt;/span&gt; &lt;span class="kw"&gt;ON&lt;/span&gt; sic_tag_parents&lt;/span&gt;
&lt;span id="cb10-3"&gt;&lt;a href="#cb10-3" aria-hidden="true" tabindex="-1"&gt;&lt;/a&gt;&lt;span class="cf"&gt;FOR&lt;/span&gt; &lt;span class="kw"&gt;EACH&lt;/span&gt; &lt;span class="kw"&gt;ROW&lt;/span&gt;&lt;/span&gt;
&lt;span id="cb10-4"&gt;&lt;a href="#cb10-4" aria-hidden="true" tabindex="-1"&gt;&lt;/a&gt;&lt;span class="cf"&gt;BEGIN&lt;/span&gt;&lt;/span&gt;
&lt;span id="cb10-5"&gt;&lt;a href="#cb10-5" aria-hidden="true" tabindex="-1"&gt;&lt;/a&gt;    &lt;span class="kw"&gt;SELECT&lt;/span&gt; RAISE(ABORT, &lt;span class="st"&gt;&amp;#39;Cycle detected&amp;#39;&lt;/span&gt;) &lt;span class="kw"&gt;WHERE&lt;/span&gt; &lt;span class="kw"&gt;EXISTS&lt;/span&gt; (&lt;/span&gt;
&lt;span id="cb10-6"&gt;&lt;a href="#cb10-6" aria-hidden="true" tabindex="-1"&gt;&lt;/a&gt;      &lt;span class="kw"&gt;WITH&lt;/span&gt; RECURSIVE w(&lt;span class="kw"&gt;parent&lt;/span&gt;, last_visited, already_visited, &lt;span class="kw"&gt;cycle&lt;/span&gt;) &lt;span class="kw"&gt;AS&lt;/span&gt; (&lt;/span&gt;
&lt;span id="cb10-7"&gt;&lt;a href="#cb10-7" aria-hidden="true" tabindex="-1"&gt;&lt;/a&gt;            &lt;span class="kw"&gt;SELECT&lt;/span&gt; &lt;span class="kw"&gt;DISTINCT&lt;/span&gt; to_tag_id &lt;span class="kw"&gt;AS&lt;/span&gt; &lt;span class="kw"&gt;parent&lt;/span&gt;, from_tag_id &lt;span class="kw"&gt;AS&lt;/span&gt; last_visited, to_tag_id &lt;span class="kw"&gt;AS&lt;/span&gt; already_visited, &lt;span class="dv"&gt;0&lt;/span&gt; &lt;span class="kw"&gt;AS&lt;/span&gt; &lt;span class="kw"&gt;cycle&lt;/span&gt; &lt;span class="kw"&gt;FROM&lt;/span&gt; sic_tag_parents&lt;/span&gt;
&lt;span id="cb10-8"&gt;&lt;a href="#cb10-8" aria-hidden="true" tabindex="-1"&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id="cb10-9"&gt;&lt;a href="#cb10-9" aria-hidden="true" tabindex="-1"&gt;&lt;/a&gt;            &lt;span class="kw"&gt;UNION&lt;/span&gt; &lt;span class="kw"&gt;ALL&lt;/span&gt;&lt;/span&gt;
&lt;span id="cb10-10"&gt;&lt;a href="#cb10-10" aria-hidden="true" tabindex="-1"&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id="cb10-11"&gt;&lt;a href="#cb10-11" aria-hidden="true" tabindex="-1"&gt;&lt;/a&gt;            &lt;span class="kw"&gt;SELECT&lt;/span&gt; t.to_tag_id &lt;span class="kw"&gt;AS&lt;/span&gt; &lt;span class="kw"&gt;parent&lt;/span&gt;, t.from_tag_id &lt;span class="kw"&gt;AS&lt;/span&gt; last_visited, already_visited &lt;span class="op"&gt;||&lt;/span&gt; &lt;span class="st"&gt;&amp;#39;, &amp;#39;&lt;/span&gt; &lt;span class="op"&gt;||&lt;/span&gt; t.to_tag_id, already_visited &lt;span class="kw"&gt;LIKE&lt;/span&gt; &lt;span class="st"&gt;&amp;#39;%&amp;#39;&lt;/span&gt;&lt;span class="op"&gt;||&lt;/span&gt;t.to_tag_id&lt;span class="op"&gt;||&lt;/span&gt;&lt;span class="ot"&gt;&amp;quot;%&amp;quot;&lt;/span&gt; &lt;span class="kw"&gt;FROM&lt;/span&gt; sic_tag_parents &lt;span class="kw"&gt;AS&lt;/span&gt; t &lt;span class="kw"&gt;JOIN&lt;/span&gt; w &lt;span class="kw"&gt;ON&lt;/span&gt; w.last_visited &lt;span class="op"&gt;=&lt;/span&gt; t.to_tag_id&lt;/span&gt;
&lt;span id="cb10-12"&gt;&lt;a href="#cb10-12" aria-hidden="true" tabindex="-1"&gt;&lt;/a&gt;            &lt;span class="kw"&gt;WHERE&lt;/span&gt; &lt;span class="kw"&gt;NOT&lt;/span&gt; &lt;span class="kw"&gt;cycle&lt;/span&gt;&lt;/span&gt;
&lt;span id="cb10-13"&gt;&lt;a href="#cb10-13" aria-hidden="true" tabindex="-1"&gt;&lt;/a&gt;      )&lt;/span&gt;
&lt;span id="cb10-14"&gt;&lt;a href="#cb10-14" aria-hidden="true" tabindex="-1"&gt;&lt;/a&gt;      &lt;span class="kw"&gt;SELECT&lt;/span&gt; already_visited, &lt;span class="kw"&gt;cycle&lt;/span&gt; &lt;span class="kw"&gt;FROM&lt;/span&gt; w &lt;span class="kw"&gt;WHERE&lt;/span&gt; last_visited &lt;span class="op"&gt;=&lt;/span&gt; &lt;span class="kw"&gt;NEW&lt;/span&gt;.to_tag_id &lt;span class="kw"&gt;AND&lt;/span&gt; already_visited &lt;span class="kw"&gt;LIKE&lt;/span&gt; &lt;span class="st"&gt;&amp;#39;%&amp;#39;&lt;/span&gt;&lt;span class="op"&gt;||&lt;/span&gt;&lt;span class="kw"&gt;NEW&lt;/span&gt;.from_tag_id&lt;span class="op"&gt;||&lt;/span&gt;&lt;span class="st"&gt;&amp;#39;%&amp;#39;&lt;/span&gt;&lt;/span&gt;
&lt;span id="cb10-15"&gt;&lt;a href="#cb10-15" aria-hidden="true" tabindex="-1"&gt;&lt;/a&gt;    );&lt;/span&gt;
&lt;span id="cb10-16"&gt;&lt;a href="#cb10-16" aria-hidden="true" tabindex="-1"&gt;&lt;/a&gt;&lt;span class="cf"&gt;END&lt;/span&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id="appendix"&gt;Appendix&lt;/h2&gt;
&lt;p&gt;We can visualise the paths with a CTE.&lt;/p&gt;
&lt;p&gt;First, create a utility view that associates edges with their
corresponding tag names:&lt;/p&gt;
&lt;div class="sourceCode" id="cb11"&gt;&lt;pre
class="sourceCode sql"&gt;&lt;code class="sourceCode sql"&gt;&lt;span id="cb11-1"&gt;&lt;a href="#cb11-1" aria-hidden="true" tabindex="-1"&gt;&lt;/a&gt;&lt;span class="kw"&gt;CREATE&lt;/span&gt; &lt;span class="kw"&gt;TEMPORARY&lt;/span&gt; &lt;span class="kw"&gt;VIEW&lt;/span&gt; sic_tag_parents_name &lt;span class="kw"&gt;AS&lt;/span&gt; &lt;span class="kw"&gt;select&lt;/span&gt; f.name &lt;span class="kw"&gt;AS&lt;/span&gt; from_name, from_tag_id, t.name &lt;span class="kw"&gt;AS&lt;/span&gt; to_name, to_tag_id &lt;span class="kw"&gt;from&lt;/span&gt; sic_tag_parents &lt;span class="kw"&gt;join&lt;/span&gt; sic_tag &lt;span class="kw"&gt;AS&lt;/span&gt; f &lt;span class="kw"&gt;on&lt;/span&gt; f.&lt;span class="kw"&gt;id&lt;/span&gt; &lt;span class="op"&gt;=&lt;/span&gt; from_tag_id &lt;span class="kw"&gt;join&lt;/span&gt; sic_tag &lt;span class="kw"&gt;AS&lt;/span&gt; t &lt;span class="kw"&gt;on&lt;/span&gt; t.&lt;span class="kw"&gt;id&lt;/span&gt; &lt;span class="op"&gt;=&lt;/span&gt; to_tag_id;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Sample output:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sqlite&amp;gt; SELECT * FROM sic_tag_parents_name LIMIT 2;
from_name    from_tag_id  to_name           to_tag_id
-----------  -----------  ----------------  ---------
programming  57           computer science  102
debugging    137          programming       57&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Then write a similar CTE as a view that creates a path string out of
the tag names:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;CREATE TEMPORARY VIEW sic_tag_parents_paths AS 
WITH RECURSIVE w(parent, last_visited, parent_name, last_visited_name, already_visited, cycle, length) AS (
      SELECT DISTINCT to_tag_id AS parent, from_tag_id AS last_visited, to_name AS parent_name, from_name AS last_visited_name, to_name AS already_visited, 0 AS cycle, 1 as length FROM sic_tag_parents_name

      UNION ALL

      SELECT t.to_tag_id AS parent, t.from_tag_id AS last_visited, t.to_name, t.from_name,  t.to_name || &amp;#39; &amp;gt; &amp;#39; || already_visited, already_visited LIKE &amp;#39;%&amp;#39;||t.to_name||&amp;quot;%&amp;quot;, length+1 AS length FROM sic_tag_parents_name AS t JOIN w ON w.last_visited = t.to_tag_id
      WHERE NOT cycle
)
SELECT * FROM w;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The output:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sqlite&amp;gt; select distinct(last_visited_name || &amp;#39; &amp;gt; &amp;#39; || already_visited) as path, length from sic_tag_parents_paths order by length desc limit 25;
path                                                                 length
-------------------------------------------------------------------  ------
c &amp;gt; programming languages &amp;gt; programming &amp;gt; computer science           3
c++ &amp;gt; programming languages &amp;gt; programming &amp;gt; computer science         3
clojure &amp;gt; programming languages &amp;gt; programming &amp;gt; computer science     3
elixir &amp;gt; programming languages &amp;gt; programming &amp;gt; computer science      3
erlang &amp;gt; programming languages &amp;gt; programming &amp;gt; computer science      3
go &amp;gt; programming languages &amp;gt; programming &amp;gt; computer science          3
haskell &amp;gt; programming languages &amp;gt; programming &amp;gt; computer science     3
javascript &amp;gt; programming languages &amp;gt; programming &amp;gt; computer science  3
java &amp;gt; programming languages &amp;gt; programming &amp;gt; computer science        3
lisp &amp;gt; programming languages &amp;gt; programming &amp;gt; computer science        3
lua &amp;gt; programming languages &amp;gt; programming &amp;gt; computer science         3
python &amp;gt; programming languages &amp;gt; programming &amp;gt; computer science      3
ruby &amp;gt; programming languages &amp;gt; programming &amp;gt; computer science        3
rust &amp;gt; programming languages &amp;gt; programming &amp;gt; computer science        3
swift &amp;gt; programming languages &amp;gt; programming &amp;gt; computer science       3
emacs &amp;gt; commandline &amp;gt; unix &amp;gt; operating systems                       3
emacs &amp;gt; commandline &amp;gt; unix                                           2
debugging &amp;gt; programming &amp;gt; computer science                           2
programming languages &amp;gt; programming &amp;gt; computer science               2
vcs &amp;gt; programming &amp;gt; computer science                                 2
commandline &amp;gt; unix &amp;gt; operating systems                               2
linux &amp;gt; unix &amp;gt; operating systems                                     2
openbsd &amp;gt; unix &amp;gt; operating systems                                   2
dragonflybsd &amp;gt; unix &amp;gt; operating systems                              2
sqlite3 &amp;gt; databases &amp;gt; computer science                               2&lt;/code&gt;&lt;/pre&gt;
</content><link href="https://pitsidianak.is/blog/posts/2021-07-18_detecting_cycles.html" rel="alternate"/><published>2021-07-18T00:00:00+02:00</published></entry></feed>
