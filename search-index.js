var searchIndex={};
searchIndex["addr2line"] = {"doc":"This crate provides a cross-platform library and binary…","i":[[3,"Context","addr2line","The state necessary to perform address to line translation.",null,null],[3,"FrameIter","","An iterator over function frames.",null,null],[3,"Frame","","A function frame.",null,null],[12,"dw_die_offset","","The DWARF unit offset corresponding to the DIE of the…",0,null],[12,"function","","The name of the function.",0,null],[12,"location","","The source location corresponding to this frame.",0,null],[3,"FunctionName","","A function name.",null,null],[12,"name","","The name of the function.",1,null],[12,"language","","The language of the compilation unit containing this…",1,null],[3,"Location","","A source location.",null,null],[12,"file","","The file name.",2,null],[12,"line","","The line number.",2,null],[12,"column","","The column number.",2,null],[5,"demangle","","Demangle a symbol name using the demangling scheme for the…",null,[[["str"],["dwlang"]],[["string"],["option",["string"]]]]],[5,"demangle_auto","","Apply 'best effort' demangling of a symbol name.",null,[[["cow",["str"]],["str"],["option",["dwlang"]],["dwlang"]],[["cow",["str"]],["str"]]]],[11,"from_sections","","Construct a new `Context` from DWARF sections.",3,[[["debuglinestr"],["debugline"],["debugabbrev"],["debugranges"],["debugrnglists"],["debugstr"],["debugstroffsets"],["debugaddr"],["debuginfo"],["r"]],[["error"],["result",["error"]]]]],[11,"from_dwarf","","Construct a new `Context` from an existing…",3,[[["dwarf"]],[["error"],["result",["error"]]]]],[11,"dwarf","","The dwarf sections associated with this `Context`.",3,[[["self"]],["dwarf"]]],[11,"find_dwarf_unit","","Find the DWARF unit corresponding to the given virtual…",3,[[["self"],["u64"]],[["unit"],["option",["unit"]]]]],[11,"find_location","","Find the source file and line corresponding to the given…",3,[[["self"],["u64"]],[["error"],["result",["option","error"]],["option",["location"]]]]],[11,"find_frames","","Return an iterator for the function frames corresponding…",3,[[["self"],["u64"]],[["error"],["frameiter"],["result",["frameiter","error"]]]]],[11,"next","","Advances the iterator and returns the next frame.",4,[[["self"]],[["option",["frame"]],["error"],["result",["option","error"]]]]],[11,"raw_name","","The raw name of this function before demangling.",1,[[["self"]],[["cow",["str"]],["error"],["result",["cow","error"]]]]],[11,"demangle","","The name of this function after demangling (if applicable).",1,[[["self"]],[["cow",["str"]],["error"],["result",["cow","error"]]]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"into","","",3,[[],["u"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"into","","",4,[[],["u"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"into","","",0,[[],["u"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"into","","",1,[[],["u"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"into","","",2,[[],["u"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]]],"p":[[3,"Frame"],[3,"FunctionName"],[3,"Location"],[3,"Context"],[3,"FrameIter"]]};
searchIndex["aho_corasick"] = {"doc":"A library for finding occurrences of many patterns at…","i":[[3,"AhoCorasick","aho_corasick","An automaton for searching multiple strings in linear time.",null,null],[3,"AhoCorasickBuilder","","A builder for configuring an Aho-Corasick automaton.",null,null],[3,"FindIter","","An iterator of non-overlapping matches in a particular…",null,null],[3,"FindOverlappingIter","","An iterator of overlapping matches in a particular haystack.",null,null],[3,"StreamFindIter","","An iterator that reports Aho-Corasick matches in a stream.",null,null],[3,"Error","","An error that occurred during the construction of an…",null,null],[3,"Match","","A representation of a match reported by an Aho-Corasick…",null,null],[4,"MatchKind","","A knob for controlling the match semantics of an…",null,null],[13,"Standard","","Use standard match semantics, which support overlapping…",0,null],[13,"LeftmostFirst","","Use leftmost-first match semantics, which reports leftmost…",0,null],[13,"LeftmostLongest","","Use leftmost-longest match semantics, which reports…",0,null],[4,"ErrorKind","","The kind of error that occurred.",null,null],[13,"StateIDOverflow","","An error that occurs when constructing an automaton would…",1,null],[12,"max","aho_corasick::ErrorKind","The maximum possible state ID.",2,null],[13,"PremultiplyOverflow","aho_corasick","An error that occurs when premultiplication of state IDs…",1,null],[12,"max","aho_corasick::ErrorKind","The maximum possible state id.",3,null],[12,"requested_max","","The maximum ID required by premultiplication.",3,null],[11,"new","aho_corasick","Create a new Aho-Corasick automaton using the default…",4,[[["i"]],["ahocorasick"]]],[11,"new_auto_configured","","Build an Aho-Corasick automaton with an automatically…",4,[[],["ahocorasick"]]],[11,"is_match","","Returns true if and only if this automaton matches the…",4,[[["asref"],["self"]],["bool"]]],[11,"earliest_find","","Returns the location of the first detected match in…",4,[[["asref"],["self"]],[["match"],["option",["match"]]]]],[11,"find","","Returns the location of the first match according to the…",4,[[["asref"],["self"]],[["match"],["option",["match"]]]]],[11,"find_iter","","Returns an iterator of non-overlapping matches, using the…",4,[[["self"],["b"]],["finditer"]]],[11,"find_overlapping_iter","","Returns an iterator of overlapping matches in the given…",4,[[["self"],["b"]],["findoverlappingiter"]]],[11,"replace_all","","Replace all matches with a corresponding value in the…",4,[[["str"],["self"]],["string"]]],[11,"replace_all_bytes","","Replace all matches using raw bytes with a corresponding…",4,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"replace_all_with","","Replace all matches using a closure called on each match.…",4,[[["str"],["string"],["self"],["f"]]]],[11,"replace_all_with_bytes","","Replace all matches using raw bytes with a closure called…",4,[[["vec"],["self"],["f"]]]],[11,"stream_find_iter","","Returns an iterator of non-overlapping matches in the…",4,[[["self"],["read"]],[["streamfinditer"],["read"]]]],[11,"stream_replace_all","","Search for and replace all matches of this automaton in…",4,[[["w"],["self"],["r"]],["result"]]],[11,"stream_replace_all_with","","Search the given reader and replace all matches of this…",4,[[["w"],["f"],["self"],["r"]],["result"]]],[11,"match_kind","","Returns the match kind used by this automaton.",4,[[["self"]],["matchkind"]]],[11,"max_pattern_len","","Returns the length of the longest pattern matched by this…",4,[[["self"]],["usize"]]],[11,"pattern_count","","Return the total number of patterns matched by this…",4,[[["self"]],["usize"]]],[11,"supports_overlapping","","Returns true if and only if this automaton supports…",4,[[["self"]],["bool"]]],[11,"supports_stream","","Returns true if and only if this automaton supports stream…",4,[[["self"]],["bool"]]],[11,"heap_bytes","","Returns the approximate total amount of heap used by this…",4,[[["self"]],["usize"]]],[11,"new","","Create a new builder for configuring an Aho-Corasick…",5,[[],["ahocorasickbuilder"]]],[11,"build","","Build an Aho-Corasick automaton using the configuration…",5,[[["i"],["self"]],["ahocorasick"]]],[11,"build_with_size","","Build an Aho-Corasick automaton using the configuration…",5,[[["i"],["self"]],[["ahocorasick"],["error"],["result",["ahocorasick","error"]]]]],[11,"auto_configure","","Automatically configure the settings on this builder…",5,[[["self"]],["ahocorasickbuilder"]]],[11,"match_kind","","Set the desired match semantics.",5,[[["self"],["matchkind"]],["ahocorasickbuilder"]]],[11,"anchored","","Enable anchored mode, which requires all matches to start…",5,[[["self"],["bool"]],["ahocorasickbuilder"]]],[11,"ascii_case_insensitive","","Enable ASCII-aware case insensitive matching.",5,[[["self"],["bool"]],["ahocorasickbuilder"]]],[11,"dense_depth","","Set the limit on how many NFA states use a dense…",5,[[["self"],["usize"]],["ahocorasickbuilder"]]],[11,"dfa","","Compile the standard Aho-Corasick automaton into a…",5,[[["self"],["bool"]],["ahocorasickbuilder"]]],[11,"prefilter","","Enable heuristic prefilter optimizations.",5,[[["self"],["bool"]],["ahocorasickbuilder"]]],[11,"byte_classes","","Shrink the size of the transition alphabet by mapping…",5,[[["self"],["bool"]],["ahocorasickbuilder"]]],[11,"premultiply","","Premultiply state identifiers in the transition table.…",5,[[["self"],["bool"]],["ahocorasickbuilder"]]],[11,"kind","","Return the kind of this error.",6,[[["self"]],["errorkind"]]],[0,"packed","","A lower level API for packed multiple substring search,…",null,null],[3,"Builder","aho_corasick::packed","A builder for constructing a packed searcher from a…",null,null],[3,"Config","","The configuration for a packed multiple pattern searcher.",null,null],[3,"FindIter","","An iterator over non-overlapping matches from a packed…",null,null],[3,"Searcher","","A packed searcher for quickly finding occurrences of…",null,null],[4,"MatchKind","","A knob for controlling the match semantics of a packed…",null,null],[13,"LeftmostFirst","","Use leftmost-first match semantics, which reports leftmost…",7,null],[13,"LeftmostLongest","","Use leftmost-longest match semantics, which reports…",7,null],[11,"new","","Create a new default configuration. A default…",8,[[],["config"]]],[11,"builder","","Create a packed builder from this configuration. The…",8,[[["self"]],["builder"]]],[11,"match_kind","","Set the match semantics for this configuration.",8,[[["self"],["matchkind"]],["config"]]],[11,"new","","Create a new builder for constructing a multi-pattern…",9,[[],["builder"]]],[11,"build","","Build a searcher from the patterns added to this builder…",9,[[["self"]],[["searcher"],["option",["searcher"]]]]],[11,"add","","Add the given pattern to this set to match.",9,[[["self"],["asref"]],["builder"]]],[11,"extend","","Add the given iterator of patterns to this set to match.",9,[[["self"],["i"]],["builder"]]],[11,"new","","A convenience function for constructing a searcher from an…",10,[[["i"]],[["searcher"],["option",["searcher"]]]]],[11,"find","","Return the first occurrence of any of the patterns in this…",10,[[["asref"],["self"]],[["match"],["option",["match"]]]]],[11,"find_at","","Return the first occurrence of any of the patterns in this…",10,[[["asref"],["usize"],["self"]],[["match"],["option",["match"]]]]],[11,"find_iter","","Return an iterator of non-overlapping occurrences of the…",10,[[["self"],["b"]],["finditer"]]],[11,"match_kind","","Returns the match kind used by this packed searcher.",10,[[["self"]],["matchkind"]]],[11,"minimum_len","","Returns the minimum length of a haystack that is required…",10,[[["self"]],["usize"]]],[11,"heap_bytes","","Returns the approximate total amount of heap used by this…",10,[[["self"]],["usize"]]],[8,"StateID","aho_corasick","A trait describing the representation of an automaton's…",null,null],[10,"from_usize","","Convert from a `usize` to this implementation's…",11,[[["usize"]],["self"]]],[10,"to_usize","","Convert this implementation's representation to a `usize`.",11,[[],["usize"]]],[10,"max_id","","Return the maximum state identifier supported by this…",11,[[],["usize"]]],[11,"pattern","","Returns the identifier of the pattern that matched.",12,[[["self"]],["usize"]]],[11,"start","","The starting position of the match.",12,[[["self"]],["usize"]]],[11,"end","","The ending position of the match.",12,[[["self"]],["usize"]]],[11,"is_empty","","Returns true if and only if this match is empty. That is,…",12,[[["self"]],["bool"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,[[["self"],["t"]]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,[[["self"],["t"]]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"into","","",13,[[],["u"]]],[11,"into_iter","","",13,[[],["i"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"try_into","","",13,[[],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"type_id","","",13,[[["self"]],["typeid"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"into","","",14,[[],["u"]]],[11,"into_iter","","",14,[[],["i"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"try_into","","",14,[[],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"type_id","","",14,[[["self"]],["typeid"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"into","","",15,[[],["u"]]],[11,"into_iter","","",15,[[],["i"]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"try_into","","",15,[[],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"type_id","","",15,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,[[["self"],["t"]]]],[11,"to_string","","",6,[[["self"]],["string"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[],["u"]]],[11,"to_owned","","",12,[[["self"]],["t"]]],[11,"clone_into","","",12,[[["self"],["t"]]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"try_into","","",12,[[],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"type_id","","",12,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","aho_corasick::packed","",9,[[["t"]],["t"]]],[11,"into","","",9,[[],["u"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,[[["self"],["t"]]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,[[["self"],["t"]]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"into","","",16,[[],["u"]]],[11,"into_iter","","",16,[[],["i"]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"try_into","","",16,[[],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"type_id","","",16,[[["self"]],["typeid"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[],["u"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,[[["self"],["t"]]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,[[["self"],["t"]]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"next","aho_corasick","",13,[[["self"]],[["match"],["option",["match"]]]]],[11,"next","","",14,[[["self"]],[["match"],["option",["match"]]]]],[11,"next","","",15,[[["self"]],[["option",["result"]],["result",["match"]]]]],[11,"next","aho_corasick::packed","",16,[[["self"]],[["match"],["option",["match"]]]]],[11,"clone","aho_corasick","",4,[[["self"]],["ahocorasick"]]],[11,"clone","","",5,[[["self"]],["ahocorasickbuilder"]]],[11,"clone","","",0,[[["self"]],["matchkind"]]],[11,"clone","","",6,[[["self"]],["error"]]],[11,"clone","","",1,[[["self"]],["errorkind"]]],[11,"clone","aho_corasick::packed","",7,[[["self"]],["matchkind"]]],[11,"clone","","",8,[[["self"]],["config"]]],[11,"clone","","",9,[[["self"]],["builder"]]],[11,"clone","","",10,[[["self"]],["searcher"]]],[11,"clone","aho_corasick","",12,[[["self"]],["match"]]],[11,"default","","",5,[[],["ahocorasickbuilder"]]],[11,"default","","",0,[[],["matchkind"]]],[11,"default","aho_corasick::packed","",7,[[],["matchkind"]]],[11,"default","","",8,[[],["config"]]],[11,"default","","",9,[[],["builder"]]],[11,"eq","aho_corasick","",0,[[["self"],["matchkind"]],["bool"]]],[11,"eq","aho_corasick::packed","",7,[[["self"],["matchkind"]],["bool"]]],[11,"eq","aho_corasick","",12,[[["self"],["match"]],["bool"]]],[11,"ne","","",12,[[["self"],["match"]],["bool"]]],[11,"fmt","","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",13,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",14,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",15,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",6,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","aho_corasick::packed","",7,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",8,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",9,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",10,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",16,[[["formatter"],["self"]],["result"]]],[11,"fmt","aho_corasick","",12,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",6,[[["formatter"],["self"]],["result"]]],[11,"hash","","",12,[[["self"],["__h"]]]],[11,"description","","",6,[[["self"]],["str"]]]],"p":[[4,"MatchKind"],[4,"ErrorKind"],[13,"StateIDOverflow"],[13,"PremultiplyOverflow"],[3,"AhoCorasick"],[3,"AhoCorasickBuilder"],[3,"Error"],[4,"MatchKind"],[3,"Config"],[3,"Builder"],[3,"Searcher"],[8,"StateID"],[3,"Match"],[3,"FindIter"],[3,"FindOverlappingIter"],[3,"StreamFindIter"],[3,"FindIter"]]};
searchIndex["ansi_term"] = {"doc":"This is a library for controlling colours and formatting,…","i":[[3,"Prefix","ansi_term","Like `ANSIString`, but only displays the style prefix.",null,null],[3,"Infix","","Like `ANSIString`, but only displays the difference…",null,null],[3,"Suffix","","Like `ANSIString`, but only displays the style suffix.",null,null],[3,"Style","","A style is a collection of properties that can format a…",null,null],[12,"foreground","","The style's foreground colour, if it has one.",0,null],[12,"background","","The style's background colour, if it has one.",0,null],[12,"is_bold","","Whether this style is bold.",0,null],[12,"is_dimmed","","Whether this style is dimmed.",0,null],[12,"is_italic","","Whether this style is italic.",0,null],[12,"is_underline","","Whether this style is underlined.",0,null],[12,"is_blink","","Whether this style is blinking.",0,null],[12,"is_reverse","","Whether this style has reverse colours.",0,null],[12,"is_hidden","","Whether this style is hidden.",0,null],[12,"is_strikethrough","","Whether this style is struckthrough.",0,null],[3,"ANSIGenericString","","An `ANSIGenericString` includes a generic string type and…",null,null],[3,"ANSIGenericStrings","","A set of `ANSIGenericString`s collected together, in order…",null,null],[12,"0","","",1,null],[4,"Colour","","A colour is one specific type of ANSI escape code, and can…",null,null],[13,"Black","","Colour #0 (foreground code `30`, background code `40`).",2,null],[13,"Red","","Colour #1 (foreground code `31`, background code `41`).",2,null],[13,"Green","","Colour #2 (foreground code `32`, background code `42`).",2,null],[13,"Yellow","","Colour #3 (foreground code `33`, background code `43`).",2,null],[13,"Blue","","Colour #4 (foreground code `34`, background code `44`).",2,null],[13,"Purple","","Colour #5 (foreground code `35`, background code `45`).",2,null],[13,"Cyan","","Colour #6 (foreground code `36`, background code `46`).",2,null],[13,"White","","Colour #7 (foreground code `37`, background code `47`).",2,null],[13,"Fixed","","A colour number from 0 to 255, for use in 256-colour…",2,null],[13,"RGB","","A 24-bit RGB color, as specified by ISO-8613-3.",2,null],[4,"Color","","A colour is one specific type of ANSI escape code, and can…",null,null],[13,"Black","","Colour #0 (foreground code `30`, background code `40`).",2,null],[13,"Red","","Colour #1 (foreground code `31`, background code `41`).",2,null],[13,"Green","","Colour #2 (foreground code `32`, background code `42`).",2,null],[13,"Yellow","","Colour #3 (foreground code `33`, background code `43`).",2,null],[13,"Blue","","Colour #4 (foreground code `34`, background code `44`).",2,null],[13,"Purple","","Colour #5 (foreground code `35`, background code `45`).",2,null],[13,"Cyan","","Colour #6 (foreground code `36`, background code `46`).",2,null],[13,"White","","Colour #7 (foreground code `37`, background code `47`).",2,null],[13,"Fixed","","A colour number from 0 to 255, for use in 256-colour…",2,null],[13,"RGB","","A 24-bit RGB color, as specified by ISO-8613-3.",2,null],[5,"ANSIStrings","","A function to construct an `ANSIStrings` instance.",null,[[],["ansistrings"]]],[5,"ANSIByteStrings","","A function to construct an `ANSIByteStrings` instance.",null,[[],["ansibytestrings"]]],[11,"prefix","","The prefix for this style.",0,[[],["prefix"]]],[11,"infix","","The infix between this style and another.",0,[[["style"]],["infix"]]],[11,"suffix","","The suffix for this style.",0,[[],["suffix"]]],[11,"prefix","","The prefix for this colour.",2,[[],["prefix"]]],[11,"infix","","The infix between this colour and another.",2,[[["colour"]],["infix"]]],[11,"suffix","","The suffix for this colour.",2,[[],["suffix"]]],[11,"new","","Creates a new Style with no differences.",0,[[],["style"]]],[11,"bold","","Returns a `Style` with the bold property set.",0,[[["self"]],["style"]]],[11,"dimmed","","Returns a `Style` with the dimmed property set.",0,[[["self"]],["style"]]],[11,"italic","","Returns a `Style` with the italic property set.",0,[[["self"]],["style"]]],[11,"underline","","Returns a `Style` with the underline property set.",0,[[["self"]],["style"]]],[11,"blink","","Returns a `Style` with the blink property set.",0,[[["self"]],["style"]]],[11,"reverse","","Returns a `Style` with the reverse property set.",0,[[["self"]],["style"]]],[11,"hidden","","Returns a `Style` with the hidden property set.",0,[[["self"]],["style"]]],[11,"strikethrough","","Returns a `Style` with the hidden property set.",0,[[["self"]],["style"]]],[11,"fg","","Returns a `Style` with the foreground colour property set.",0,[[["colour"],["self"]],["style"]]],[11,"on","","Returns a `Style` with the background colour property set.",0,[[["colour"],["self"]],["style"]]],[11,"is_plain","","Return true if this `Style` has no actual styles, and can…",0,[[],["bool"]]],[11,"normal","","Return a `Style` with the foreground colour set to this…",2,[[],["style"]]],[11,"bold","","Returns a `Style` with the bold property set.",2,[[],["style"]]],[11,"dimmed","","Returns a `Style` with the dimmed property set.",2,[[],["style"]]],[11,"italic","","Returns a `Style` with the italic property set.",2,[[],["style"]]],[11,"underline","","Returns a `Style` with the underline property set.",2,[[],["style"]]],[11,"blink","","Returns a `Style` with the blink property set.",2,[[],["style"]]],[11,"reverse","","Returns a `Style` with the reverse property set.",2,[[],["style"]]],[11,"hidden","","Returns a `Style` with the hidden property set.",2,[[],["style"]]],[11,"strikethrough","","Returns a `Style` with the strikethrough property set.",2,[[],["style"]]],[11,"on","","Returns a `Style` with the background colour property set.",2,[[["colour"]],["style"]]],[11,"paint","","Paints the given text with this colour, returning an ANSI…",0,[[["i"]],[["ansigenericstring"],["toowned"],["sized"]]]],[11,"paint","","Paints the given text with this colour, returning an ANSI…",2,[[["i"]],[["ansigenericstring"],["toowned"],["sized"]]]],[11,"write_to","","Write an `ANSIByteString` to an `io::Write`. This writes…",3,[[["w"],["self"]],["result"]]],[11,"write_to","","Write `ANSIByteStrings` to an `io::Write`. This writes the…",1,[[["w"],["self"]],["result"]]],[6,"ANSIString","","An ANSI String is a string coupled with the `Style` to…",null,null],[6,"ANSIByteString","","An `ANSIByteString` represents a formatted series of…",null,null],[6,"ANSIStrings","","A set of `ANSIString`s collected together, in order to be…",null,null],[6,"ANSIByteStrings","","A set of `ANSIByteString`s collected together, in order to…",null,null],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,[[["self"],["t"]]]],[11,"to_string","","",4,[[["self"]],["string"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,[[["self"],["t"]]]],[11,"to_string","","",5,[[["self"]],["string"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,[[["self"],["t"]]]],[11,"to_string","","",6,[[["self"]],["string"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"to_string","","",3,[[["self"]],["string"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_string","","",1,[[["self"]],["string"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","You can turn a `Colour` into a `Style` with the foreground…",0,[[["colour"]],["style"]]],[11,"from","","",3,[[["i"]],["ansigenericstring"]]],[11,"clone","","",4,[[["self"]],["prefix"]]],[11,"clone","","",5,[[["self"]],["infix"]]],[11,"clone","","",6,[[["self"]],["suffix"]]],[11,"clone","","",0,[[["self"]],["style"]]],[11,"clone","","",2,[[["self"]],["colour"]]],[11,"clone","","",3,[[["self"]],["ansigenericstring"]]],[11,"default","","Returns a style with no properties set. Formatting text…",0,[[],["style"]]],[11,"eq","","",0,[[["style"],["self"]],["bool"]]],[11,"ne","","",0,[[["style"],["self"]],["bool"]]],[11,"eq","","",2,[[["colour"],["self"]],["bool"]]],[11,"ne","","",2,[[["colour"],["self"]],["bool"]]],[11,"eq","","",3,[[["ansigenericstring"],["self"]],["bool"]]],[11,"ne","","",3,[[["ansigenericstring"],["self"]],["bool"]]],[11,"deref","","",3,[[["self"]],["s"]]],[11,"fmt","","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",6,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",6,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",7,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",8,[[["formatter"],["self"]],["result"]]],[11,"write_to","","Write an `ANSIByteString` to an `io::Write`. This writes…",9,[[["w"],["self"]],["result"]]],[11,"write_to","","Write `ANSIByteStrings` to an `io::Write`. This writes the…",10,[[["w"],["self"]],["result"]]]],"p":[[3,"Style"],[3,"ANSIGenericStrings"],[4,"Colour"],[3,"ANSIGenericString"],[3,"Prefix"],[3,"Infix"],[3,"Suffix"],[6,"ANSIString"],[6,"ANSIStrings"],[6,"ANSIByteString"],[6,"ANSIByteStrings"]]};
searchIndex["atty"] = {"doc":"atty is a simple utility that answers one question > is…","i":[[4,"Stream","atty","possible stream sources",null,null],[13,"Stdout","","",0,null],[13,"Stderr","","",0,null],[13,"Stdin","","",0,null],[5,"is","","returns true if this is a tty",null,[[["stream"]],["bool"]]],[5,"isnt","","returns true if this is not a tty",null,[[["stream"]],["bool"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"into","","",0,[[],["u"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"clone","","",0,[[["self"]],["stream"]]]],"p":[[4,"Stream"]]};
searchIndex["backtrace"] = {"doc":"A library for acquiring a backtrace at runtime","i":[[3,"Frame","backtrace","A trait representing one frame of a backtrace, yielded to…",null,null],[3,"Symbol","","A trait representing the resolution of a symbol in a file.",null,null],[3,"SymbolName","","A wrapper around a symbol name to provide ergonomic…",null,null],[3,"BacktraceFmt","","A formatter for backtraces.",null,null],[3,"BacktraceFrameFmt","","A formatter for just one frame of a backtrace.",null,null],[3,"Backtrace","","Representation of an owned and self-contained backtrace.",null,null],[3,"BacktraceFrame","","Captured version of a frame in a backtrace.",null,null],[3,"BacktraceSymbol","","Captured version of a symbol in a backtrace.",null,null],[4,"BytesOrWideString","","A platform independent representation of a string. When…",null,null],[13,"Bytes","","A slice, typically provided on Unix platforms.",0,null],[13,"Wide","","Wide strings typically from Windows.",0,null],[4,"PrintFmt","","The styles of printing that we can print",null,null],[13,"Short","","Prints a terser backtrace which ideally only contains…",1,null],[13,"Full","","Prints a backtrace that contains all possible information",1,null],[5,"trace_unsynchronized","","Same as `trace`, only unsafe as it's unsynchronized.",null,[[["fnmut"]]]],[5,"resolve_frame_unsynchronized","","Same as `resolve_frame`, only unsafe as it's unsynchronized.",null,[[["f"],["frame"]]]],[5,"resolve_unsynchronized","","Same as `resolve`, only unsafe as it's unsynchronized.",null,[[["f"]]]],[5,"clear_symbol_cache","","Attempt to reclaim that cached memory used to symbolicate…",null,[[]]],[5,"trace","","Inspects the current call-stack, passing all active frames…",null,[[["fnmut"]]]],[5,"resolve","","Resolve an address to a symbol, passing the symbol to the…",null,[[["fnmut"]]]],[5,"resolve_frame","","Resolve a previously capture frame to a symbol, passing…",null,[[["fnmut"],["frame"]]]],[11,"ip","","Returns the current instruction pointer of this frame.",2,[[["self"]]]],[11,"symbol_address","","Returns the starting symbol address of the frame of this…",2,[[["self"]]]],[11,"name","","Returns the name of this function.",3,[[["self"]],[["option",["symbolname"]],["symbolname"]]]],[11,"addr","","Returns the starting address of this function.",3,[[["self"]],["option"]]],[11,"filename_raw","","Returns the raw filename as a slice. This is mainly useful…",3,[[["self"]],[["option",["bytesorwidestring"]],["bytesorwidestring"]]]],[11,"lineno","","Returns the line number for where this symbol is currently…",3,[[["self"]],[["u32"],["option",["u32"]]]]],[11,"filename","","Returns the file name where this function was defined.",3,[[["self"]],[["option",["path"]],["path"]]]],[11,"new","","Creates a new symbol name from the raw underlying bytes.",4,[[],["symbolname"]]],[11,"as_str","","Returns the raw (mangled) symbol name as a `str` if the…",4,[[["self"]],[["str"],["option",["str"]]]]],[11,"as_bytes","","Returns the raw symbol name as a list of bytes",4,[[["self"]]]],[11,"to_str_lossy","","Lossy converts to a `Cow<str>`, will allocate if `Bytes`…",0,[[["self"]],[["str"],["cow",["str"]]]]],[11,"into_path_buf","","Provides a `Path` representation of `BytesOrWideString`.",0,[[],["pathbuf"]]],[11,"new","","Create a new `BacktraceFmt` which will write output to the…",5,[[["formatter"],["fnmut"],["printfmt"]],["self"]]],[11,"add_context","","Prints a preamble for the backtrace about to be printed.",5,[[["self"]],["result"]]],[11,"frame","","Adds a frame to the backtrace output.",5,[[["self"]],["backtraceframefmt"]]],[11,"finish","","Completes the backtrace output.",5,[[["self"]],["result"]]],[11,"backtrace_frame","","Prints a `BacktraceFrame` with this frame formatter.",6,[[["backtraceframe"],["self"]],["result"]]],[11,"backtrace_symbol","","Prints a `BacktraceSymbol` within a `BacktraceFrame`.",6,[[["backtraceframe"],["self"],["backtracesymbol"]],["result"]]],[11,"symbol","","Prints a raw traced `Frame` and `Symbol`, typically from…",6,[[["self"],["frame"],["symbol"]],["result"]]],[11,"print_raw","","Adds a raw frame to the backtrace output.",6,[[["u32"],["symbolname"],["option",["bytesorwidestring"]],["option",["u32"]],["option",["symbolname"]],["self"],["bytesorwidestring"]],["result"]]],[11,"new","","Captures a backtrace at the callsite of this function,…",7,[[],["backtrace"]]],[11,"new_unresolved","","Similar to `new` except that this does not resolve any…",7,[[],["backtrace"]]],[11,"frames","","Returns the frames from when this backtrace was captured.",7,[[["self"]]]],[11,"resolve","","If this backtrace was created from `new_unresolved` then…",7,[[["self"]]]],[11,"ip","","Same as `Frame::ip`",8,[[["self"]]]],[11,"symbol_address","","Same as `Frame::symbol_address`",8,[[["self"]]]],[11,"symbols","","Returns the list of symbols that this frame corresponds to.",8,[[["self"]]]],[11,"name","","Same as `Symbol::name`",9,[[["self"]],[["option",["symbolname"]],["symbolname"]]]],[11,"addr","","Same as `Symbol::addr`",9,[[["self"]],["option"]]],[11,"filename","","Same as `Symbol::filename`",9,[[["self"]],[["option",["path"]],["path"]]]],[11,"lineno","","Same as `Symbol::lineno`",9,[[["self"]],[["u32"],["option",["u32"]]]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"into","","",2,[[],["u"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"into","","",3,[[],["u"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"into","","",4,[[],["u"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"to_string","","",4,[[["self"]],["string"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"into","","",5,[[],["u"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"into","","",6,[[],["u"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"into","","",7,[[],["u"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,[[["self"],["t"]]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"into","","",8,[[],["u"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,[[["self"],["t"]]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"into","","",9,[[],["u"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,[[["self"],["t"]]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"into","","",0,[[],["u"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"into","","",1,[[],["u"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"from","","",7,[[["backtraceframe"],["vec",["backtraceframe"]]],["self"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",9,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"eq","","",1,[[["self"],["printfmt"]],["bool"]]],[11,"drop","","",6,[[["self"]]]],[11,"into","","",7,[[],[["backtraceframe"],["vec",["backtraceframe"]]]]],[11,"clone","","",2,[[["self"]],["frame"]]],[11,"clone","","",1,[[["self"]],["printfmt"]]],[11,"clone","","",7,[[["self"]],["backtrace"]]],[11,"clone","","",8,[[["self"]],["backtraceframe"]]],[11,"clone","","",9,[[["self"]],["backtracesymbol"]]],[11,"default","","",7,[[],["backtrace"]]]],"p":[[4,"BytesOrWideString"],[4,"PrintFmt"],[3,"Frame"],[3,"Symbol"],[3,"SymbolName"],[3,"BacktraceFmt"],[3,"BacktraceFrameFmt"],[3,"Backtrace"],[3,"BacktraceFrame"],[3,"BacktraceSymbol"]]};
searchIndex["base64"] = {"doc":"Configs","i":[[3,"Config","base64","Contains configuration parameters for base64 encoding",null,null],[4,"DecodeError","","Errors that can occur while decoding.",null,null],[13,"InvalidByte","","An invalid byte was found in the input. The offset and…",0,null],[13,"InvalidLength","","The length of the input is invalid.",0,null],[13,"InvalidLastSymbol","","The last non-padding input symbol's encoded 6 bits have…",0,null],[4,"CharacterSet","","Available encoding character sets",null,null],[13,"Standard","","The standard character set (uses `+` and `/`).",1,null],[13,"UrlSafe","","The URL safe character set (uses `-` and `_`).",1,null],[13,"Crypt","","The `crypt(3)` character set (uses…",1,null],[5,"encode","","Encode arbitrary octets as base64. Returns a String.…",null,[[["t"]],["string"]]],[5,"encode_config","","Encode arbitrary octets as base64. Returns a String.",null,[[["t"],["config"]],["string"]]],[5,"encode_config_buf","","Encode arbitrary octets as base64. Writes into the…",null,[[["string"],["t"],["config"]]]],[5,"encode_config_slice","","Encode arbitrary octets as base64. Writes into the…",null,[[["t"],["config"]],["usize"]]],[5,"decode","","Decode from string reference as octets. Returns a Result…",null,[[["t"]],[["result",["vec","decodeerror"]],["vec",["u8"]],["decodeerror"]]]],[5,"decode_config","","Decode from string reference as octets. Returns a Result…",null,[[["t"],["config"]],[["result",["vec","decodeerror"]],["vec",["u8"]],["decodeerror"]]]],[5,"decode_config_buf","","Decode from string reference as octets. Writes into the…",null,[[["t"],["config"],["vec"]],[["decodeerror"],["result",["decodeerror"]]]]],[5,"decode_config_slice","","Decode the input into the provided output slice.",null,[[["t"],["config"]],[["result",["usize","decodeerror"]],["usize"],["decodeerror"]]]],[0,"display","","Enables base64'd output anywhere you might use a `Display`…",null,null],[3,"Base64Display","base64::display","A convenience wrapper for base64'ing bytes into a format…",null,null],[11,"with_config","","Create a `Base64Display` with the provided config.",2,[[["config"]],["base64display"]]],[0,"write","base64","Implementations of `io::Write` to transparently handle…",null,null],[3,"EncoderWriter","base64::write","A `Write` implementation that base64 encodes data before…",null,null],[11,"new","","Create a new encoder that will write to the provided…",3,[[["w"],["config"]],["encoderwriter"]]],[11,"finish","","Encode all remaining buffered data and write it, including…",3,[[["self"]],["result"]]],[17,"STANDARD","base64","Standard character set with padding.",null,null],[17,"STANDARD_NO_PAD","","Standard character set without padding.",null,null],[17,"URL_SAFE","","URL-safe character set with padding",null,null],[17,"URL_SAFE_NO_PAD","","URL-safe character set without padding",null,null],[17,"CRYPT","","As per `crypt(3)` requirements",null,null],[11,"new","","Create a new `Config`.",4,[[["characterset"],["bool"]],["config"]]],[11,"pad","","Sets whether to pad output with `=` characters.",4,[[["bool"]],["config"]]],[11,"decode_allow_trailing_bits","","Sets whether to emit errors for nonzero trailing bits.",4,[[["bool"]],["config"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,[[["self"],["t"]]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","base64::display","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_string","","",2,[[["self"]],["string"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","base64::write","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"drop","","",3,[[["self"]]]],[11,"clone","base64","",0,[[["self"]],["decodeerror"]]],[11,"clone","","",1,[[["self"]],["characterset"]]],[11,"clone","","",4,[[["self"]],["config"]]],[11,"eq","","",0,[[["decodeerror"],["self"]],["bool"]]],[11,"ne","","",0,[[["decodeerror"],["self"]],["bool"]]],[11,"fmt","base64::write","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","base64","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","base64::display","",2,[[["formatter"],["self"]],[["result",["error"]],["error"]]]],[11,"fmt","base64","",0,[[["formatter"],["self"]],["result"]]],[11,"description","","",0,[[["self"]],["str"]]],[11,"cause","","",0,[[["self"]],[["error"],["option",["error"]]]]],[11,"write","base64::write","Encode input and then write to the delegate writer.",3,[[["self"]],[["result",["usize"]],["usize"]]]],[11,"flush","","Because this is usually treated as OK to call multiple…",3,[[["self"]],["result"]]]],"p":[[4,"DecodeError"],[4,"CharacterSet"],[3,"Base64Display"],[3,"EncoderWriter"],[3,"Config"]]};
searchIndex["bitflags"] = {"doc":"A typesafe bitmask flag generator useful for sets of…","i":[[14,"bitflags","bitflags","The macro used to generate the flag structure.",null,null]],"p":[]};
searchIndex["byteorder"] = {"doc":"This crate provides convenience methods for encoding and…","i":[[4,"BigEndian","byteorder","Defines big-endian serialization.",null,null],[4,"LittleEndian","","Defines little-endian serialization.",null,null],[6,"BE","","A type alias for [`BigEndian`].",null,null],[6,"LE","","A type alias for [`LittleEndian`].",null,null],[6,"NetworkEndian","","Defines network byte order serialization.",null,null],[6,"NativeEndian","","Defines system native-endian serialization.",null,null],[8,"ReadBytesExt","","Extends [`Read`] with methods for reading numbers. (For…",null,null],[11,"read_u8","","Reads an unsigned 8 bit integer from the underlying reader.",0,[[["self"]],[["result",["u8"]],["u8"]]]],[11,"read_i8","","Reads a signed 8 bit integer from the underlying reader.",0,[[["self"]],[["result",["i8"]],["i8"]]]],[11,"read_u16","","Reads an unsigned 16 bit integer from the underlying reader.",0,[[["self"]],[["u16"],["result",["u16"]]]]],[11,"read_i16","","Reads a signed 16 bit integer from the underlying reader.",0,[[["self"]],[["i16"],["result",["i16"]]]]],[11,"read_u24","","Reads an unsigned 24 bit integer from the underlying reader.",0,[[["self"]],[["result",["u32"]],["u32"]]]],[11,"read_i24","","Reads a signed 24 bit integer from the underlying reader.",0,[[["self"]],[["result",["i32"]],["i32"]]]],[11,"read_u32","","Reads an unsigned 32 bit integer from the underlying reader.",0,[[["self"]],[["result",["u32"]],["u32"]]]],[11,"read_i32","","Reads a signed 32 bit integer from the underlying reader.",0,[[["self"]],[["result",["i32"]],["i32"]]]],[11,"read_u48","","Reads an unsigned 48 bit integer from the underlying reader.",0,[[["self"]],[["u64"],["result",["u64"]]]]],[11,"read_i48","","Reads a signed 48 bit integer from the underlying reader.",0,[[["self"]],[["result",["i64"]],["i64"]]]],[11,"read_u64","","Reads an unsigned 64 bit integer from the underlying reader.",0,[[["self"]],[["u64"],["result",["u64"]]]]],[11,"read_i64","","Reads a signed 64 bit integer from the underlying reader.",0,[[["self"]],[["result",["i64"]],["i64"]]]],[11,"read_u128","","Reads an unsigned 128 bit integer from the underlying…",0,[[["self"]],[["u128"],["result",["u128"]]]]],[11,"read_i128","","Reads a signed 128 bit integer from the underlying reader.",0,[[["self"]],[["result",["i128"]],["i128"]]]],[11,"read_uint","","Reads an unsigned n-bytes integer from the underlying…",0,[[["self"],["usize"]],[["u64"],["result",["u64"]]]]],[11,"read_int","","Reads a signed n-bytes integer from the underlying reader.",0,[[["self"],["usize"]],[["result",["i64"]],["i64"]]]],[11,"read_uint128","","Reads an unsigned n-bytes integer from the underlying…",0,[[["self"],["usize"]],[["u128"],["result",["u128"]]]]],[11,"read_int128","","Reads a signed n-bytes integer from the underlying reader.",0,[[["self"],["usize"]],[["result",["i128"]],["i128"]]]],[11,"read_f32","","Reads a IEEE754 single-precision (4 bytes) floating point…",0,[[["self"]],[["f32"],["result",["f32"]]]]],[11,"read_f64","","Reads a IEEE754 double-precision (8 bytes) floating point…",0,[[["self"]],[["f64"],["result",["f64"]]]]],[11,"read_u16_into","","Reads a sequence of unsigned 16 bit integers from the…",0,[[["self"]],["result"]]],[11,"read_u32_into","","Reads a sequence of unsigned 32 bit integers from the…",0,[[["self"]],["result"]]],[11,"read_u64_into","","Reads a sequence of unsigned 64 bit integers from the…",0,[[["self"]],["result"]]],[11,"read_u128_into","","Reads a sequence of unsigned 128 bit integers from the…",0,[[["self"]],["result"]]],[11,"read_i8_into","","Reads a sequence of signed 8 bit integers from the…",0,[[["self"]],["result"]]],[11,"read_i16_into","","Reads a sequence of signed 16 bit integers from the…",0,[[["self"]],["result"]]],[11,"read_i32_into","","Reads a sequence of signed 32 bit integers from the…",0,[[["self"]],["result"]]],[11,"read_i64_into","","Reads a sequence of signed 64 bit integers from the…",0,[[["self"]],["result"]]],[11,"read_i128_into","","Reads a sequence of signed 128 bit integers from the…",0,[[["self"]],["result"]]],[11,"read_f32_into","","Reads a sequence of IEEE754 single-precision (4 bytes)…",0,[[["self"]],["result"]]],[11,"read_f32_into_unchecked","","DEPRECATED.",0,[[["self"]],["result"]]],[11,"read_f64_into","","Reads a sequence of IEEE754 double-precision (8 bytes)…",0,[[["self"]],["result"]]],[11,"read_f64_into_unchecked","","DEPRECATED.",0,[[["self"]],["result"]]],[8,"WriteBytesExt","","Extends [`Write`] with methods for writing numbers. (For…",null,null],[11,"write_u8","","Writes an unsigned 8 bit integer to the underlying writer.",1,[[["self"],["u8"]],["result"]]],[11,"write_i8","","Writes a signed 8 bit integer to the underlying writer.",1,[[["self"],["i8"]],["result"]]],[11,"write_u16","","Writes an unsigned 16 bit integer to the underlying writer.",1,[[["u16"],["self"]],["result"]]],[11,"write_i16","","Writes a signed 16 bit integer to the underlying writer.",1,[[["self"],["i16"]],["result"]]],[11,"write_u24","","Writes an unsigned 24 bit integer to the underlying writer.",1,[[["self"],["u32"]],["result"]]],[11,"write_i24","","Writes a signed 24 bit integer to the underlying writer.",1,[[["self"],["i32"]],["result"]]],[11,"write_u32","","Writes an unsigned 32 bit integer to the underlying writer.",1,[[["self"],["u32"]],["result"]]],[11,"write_i32","","Writes a signed 32 bit integer to the underlying writer.",1,[[["self"],["i32"]],["result"]]],[11,"write_u48","","Writes an unsigned 48 bit integer to the underlying writer.",1,[[["self"],["u64"]],["result"]]],[11,"write_i48","","Writes a signed 48 bit integer to the underlying writer.",1,[[["i64"],["self"]],["result"]]],[11,"write_u64","","Writes an unsigned 64 bit integer to the underlying writer.",1,[[["self"],["u64"]],["result"]]],[11,"write_i64","","Writes a signed 64 bit integer to the underlying writer.",1,[[["i64"],["self"]],["result"]]],[11,"write_u128","","Writes an unsigned 128 bit integer to the underlying writer.",1,[[["self"],["u128"]],["result"]]],[11,"write_i128","","Writes a signed 128 bit integer to the underlying writer.",1,[[["self"],["i128"]],["result"]]],[11,"write_uint","","Writes an unsigned n-bytes integer to the underlying writer.",1,[[["self"],["u64"],["usize"]],["result"]]],[11,"write_int","","Writes a signed n-bytes integer to the underlying writer.",1,[[["i64"],["self"],["usize"]],["result"]]],[11,"write_uint128","","Writes an unsigned n-bytes integer to the underlying writer.",1,[[["self"],["usize"],["u128"]],["result"]]],[11,"write_int128","","Writes a signed n-bytes integer to the underlying writer.",1,[[["self"],["i128"],["usize"]],["result"]]],[11,"write_f32","","Writes a IEEE754 single-precision (4 bytes) floating point…",1,[[["f32"],["self"]],["result"]]],[11,"write_f64","","Writes a IEEE754 double-precision (8 bytes) floating point…",1,[[["self"],["f64"]],["result"]]],[8,"ByteOrder","","`ByteOrder` describes types that can serialize integers as…",null,null],[10,"read_u16","","Reads an unsigned 16 bit integer from `buf`.",2,[[],["u16"]]],[11,"read_u24","","Reads an unsigned 24 bit integer from `buf`, stored in u32.",2,[[],["u32"]]],[10,"read_u32","","Reads an unsigned 32 bit integer from `buf`.",2,[[],["u32"]]],[11,"read_u48","","Reads an unsigned 48 bit integer from `buf`, stored in u64.",2,[[],["u64"]]],[10,"read_u64","","Reads an unsigned 64 bit integer from `buf`.",2,[[],["u64"]]],[10,"read_u128","","Reads an unsigned 128 bit integer from `buf`.",2,[[],["u128"]]],[10,"read_uint","","Reads an unsigned n-bytes integer from `buf`.",2,[[["usize"]],["u64"]]],[10,"read_uint128","","Reads an unsigned n-bytes integer from `buf`.",2,[[["usize"]],["u128"]]],[10,"write_u16","","Writes an unsigned 16 bit integer `n` to `buf`.",2,[[["u16"]]]],[11,"write_u24","","Writes an unsigned 24 bit integer `n` to `buf`, stored in…",2,[[["u32"]]]],[10,"write_u32","","Writes an unsigned 32 bit integer `n` to `buf`.",2,[[["u32"]]]],[11,"write_u48","","Writes an unsigned 48 bit integer `n` to `buf`, stored in…",2,[[["u64"]]]],[10,"write_u64","","Writes an unsigned 64 bit integer `n` to `buf`.",2,[[["u64"]]]],[10,"write_u128","","Writes an unsigned 128 bit integer `n` to `buf`.",2,[[["u128"]]]],[10,"write_uint","","Writes an unsigned integer `n` to `buf` using only `nbytes`.",2,[[["usize"],["u64"]]]],[10,"write_uint128","","Writes an unsigned integer `n` to `buf` using only `nbytes`.",2,[[["usize"],["u128"]]]],[11,"read_i16","","Reads a signed 16 bit integer from `buf`.",2,[[],["i16"]]],[11,"read_i24","","Reads a signed 24 bit integer from `buf`, stored in i32.",2,[[],["i32"]]],[11,"read_i32","","Reads a signed 32 bit integer from `buf`.",2,[[],["i32"]]],[11,"read_i48","","Reads a signed 48 bit integer from `buf`, stored in i64.",2,[[],["i64"]]],[11,"read_i64","","Reads a signed 64 bit integer from `buf`.",2,[[],["i64"]]],[11,"read_i128","","Reads a signed 128 bit integer from `buf`.",2,[[],["i128"]]],[11,"read_int","","Reads a signed n-bytes integer from `buf`.",2,[[["usize"]],["i64"]]],[11,"read_int128","","Reads a signed n-bytes integer from `buf`.",2,[[["usize"]],["i128"]]],[11,"read_f32","","Reads a IEEE754 single-precision (4 bytes) floating point…",2,[[],["f32"]]],[11,"read_f64","","Reads a IEEE754 double-precision (8 bytes) floating point…",2,[[],["f64"]]],[11,"write_i16","","Writes a signed 16 bit integer `n` to `buf`.",2,[[["i16"]]]],[11,"write_i24","","Writes a signed 24 bit integer `n` to `buf`, stored in i32.",2,[[["i32"]]]],[11,"write_i32","","Writes a signed 32 bit integer `n` to `buf`.",2,[[["i32"]]]],[11,"write_i48","","Writes a signed 48 bit integer `n` to `buf`, stored in i64.",2,[[["i64"]]]],[11,"write_i64","","Writes a signed 64 bit integer `n` to `buf`.",2,[[["i64"]]]],[11,"write_i128","","Writes a signed 128 bit integer `n` to `buf`.",2,[[["i128"]]]],[11,"write_int","","Writes a signed integer `n` to `buf` using only `nbytes`.",2,[[["i64"],["usize"]]]],[11,"write_int128","","Writes a signed integer `n` to `buf` using only `nbytes`.",2,[[["i128"],["usize"]]]],[11,"write_f32","","Writes a IEEE754 single-precision (4 bytes) floating point…",2,[[["f32"]]]],[11,"write_f64","","Writes a IEEE754 double-precision (8 bytes) floating point…",2,[[["f64"]]]],[10,"read_u16_into","","Reads unsigned 16 bit integers from `src` into `dst`.",2,[[]]],[10,"read_u32_into","","Reads unsigned 32 bit integers from `src` into `dst`.",2,[[]]],[10,"read_u64_into","","Reads unsigned 64 bit integers from `src` into `dst`.",2,[[]]],[10,"read_u128_into","","Reads unsigned 128 bit integers from `src` into `dst`.",2,[[]]],[11,"read_i16_into","","Reads signed 16 bit integers from `src` to `dst`.",2,[[]]],[11,"read_i32_into","","Reads signed 32 bit integers from `src` into `dst`.",2,[[]]],[11,"read_i64_into","","Reads signed 64 bit integers from `src` into `dst`.",2,[[]]],[11,"read_i128_into","","Reads signed 128 bit integers from `src` into `dst`.",2,[[]]],[11,"read_f32_into","","Reads IEEE754 single-precision (4 bytes) floating point…",2,[[]]],[11,"read_f32_into_unchecked","","DEPRECATED.",2,[[]]],[11,"read_f64_into","","Reads IEEE754 single-precision (4 bytes) floating point…",2,[[]]],[11,"read_f64_into_unchecked","","DEPRECATED.",2,[[]]],[10,"write_u16_into","","Writes unsigned 16 bit integers from `src` into `dst`.",2,[[]]],[10,"write_u32_into","","Writes unsigned 32 bit integers from `src` into `dst`.",2,[[]]],[10,"write_u64_into","","Writes unsigned 64 bit integers from `src` into `dst`.",2,[[]]],[10,"write_u128_into","","Writes unsigned 128 bit integers from `src` into `dst`.",2,[[]]],[11,"write_i8_into","","Writes signed 8 bit integers from `src` into `dst`.",2,[[]]],[11,"write_i16_into","","Writes signed 16 bit integers from `src` into `dst`.",2,[[]]],[11,"write_i32_into","","Writes signed 32 bit integers from `src` into `dst`.",2,[[]]],[11,"write_i64_into","","Writes signed 64 bit integers from `src` into `dst`.",2,[[]]],[11,"write_i128_into","","Writes signed 128 bit integers from `src` into `dst`.",2,[[]]],[11,"write_f32_into","","Writes IEEE754 single-precision (4 bytes) floating point…",2,[[]]],[11,"write_f64_into","","Writes IEEE754 double-precision (8 bytes) floating point…",2,[[]]],[10,"from_slice_u16","","Converts the given slice of unsigned 16 bit integers to a…",2,[[]]],[10,"from_slice_u32","","Converts the given slice of unsigned 32 bit integers to a…",2,[[]]],[10,"from_slice_u64","","Converts the given slice of unsigned 64 bit integers to a…",2,[[]]],[10,"from_slice_u128","","Converts the given slice of unsigned 128 bit integers to a…",2,[[]]],[11,"from_slice_i16","","Converts the given slice of signed 16 bit integers to a…",2,[[]]],[11,"from_slice_i32","","Converts the given slice of signed 32 bit integers to a…",2,[[]]],[11,"from_slice_i64","","Converts the given slice of signed 64 bit integers to a…",2,[[]]],[11,"from_slice_i128","","Converts the given slice of signed 128 bit integers to a…",2,[[]]],[10,"from_slice_f32","","Converts the given slice of IEEE754 single-precision (4…",2,[[]]],[10,"from_slice_f64","","Converts the given slice of IEEE754 double-precision (8…",2,[[]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,[[["self"],["t"]]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"read_u16","","",3,[[],["u16"]]],[11,"read_u32","","",3,[[],["u32"]]],[11,"read_u64","","",3,[[],["u64"]]],[11,"read_u128","","",3,[[],["u128"]]],[11,"read_uint","","",3,[[["usize"]],["u64"]]],[11,"read_uint128","","",3,[[["usize"]],["u128"]]],[11,"write_u16","","",3,[[["u16"]]]],[11,"write_u32","","",3,[[["u32"]]]],[11,"write_u64","","",3,[[["u64"]]]],[11,"write_u128","","",3,[[["u128"]]]],[11,"write_uint","","",3,[[["usize"],["u64"]]]],[11,"write_uint128","","",3,[[["usize"],["u128"]]]],[11,"read_u16_into","","",3,[[]]],[11,"read_u32_into","","",3,[[]]],[11,"read_u64_into","","",3,[[]]],[11,"read_u128_into","","",3,[[]]],[11,"write_u16_into","","",3,[[]]],[11,"write_u32_into","","",3,[[]]],[11,"write_u64_into","","",3,[[]]],[11,"write_u128_into","","",3,[[]]],[11,"from_slice_u16","","",3,[[]]],[11,"from_slice_u32","","",3,[[]]],[11,"from_slice_u64","","",3,[[]]],[11,"from_slice_u128","","",3,[[]]],[11,"from_slice_f32","","",3,[[]]],[11,"from_slice_f64","","",3,[[]]],[11,"read_u16","","",4,[[],["u16"]]],[11,"read_u32","","",4,[[],["u32"]]],[11,"read_u64","","",4,[[],["u64"]]],[11,"read_u128","","",4,[[],["u128"]]],[11,"read_uint","","",4,[[["usize"]],["u64"]]],[11,"read_uint128","","",4,[[["usize"]],["u128"]]],[11,"write_u16","","",4,[[["u16"]]]],[11,"write_u32","","",4,[[["u32"]]]],[11,"write_u64","","",4,[[["u64"]]]],[11,"write_u128","","",4,[[["u128"]]]],[11,"write_uint","","",4,[[["usize"],["u64"]]]],[11,"write_uint128","","",4,[[["usize"],["u128"]]]],[11,"read_u16_into","","",4,[[]]],[11,"read_u32_into","","",4,[[]]],[11,"read_u64_into","","",4,[[]]],[11,"read_u128_into","","",4,[[]]],[11,"write_u16_into","","",4,[[]]],[11,"write_u32_into","","",4,[[]]],[11,"write_u64_into","","",4,[[]]],[11,"write_u128_into","","",4,[[]]],[11,"from_slice_u16","","",4,[[]]],[11,"from_slice_u32","","",4,[[]]],[11,"from_slice_u64","","",4,[[]]],[11,"from_slice_u128","","",4,[[]]],[11,"from_slice_f32","","",4,[[]]],[11,"from_slice_f64","","",4,[[]]],[11,"clone","","",3,[[["self"]],["bigendian"]]],[11,"clone","","",4,[[["self"]],["littleendian"]]],[11,"default","","",3,[[],["bigendian"]]],[11,"default","","",4,[[],["littleendian"]]],[11,"cmp","","",3,[[["bigendian"],["self"]],["ordering"]]],[11,"cmp","","",4,[[["self"],["littleendian"]],["ordering"]]],[11,"eq","","",3,[[["bigendian"],["self"]],["bool"]]],[11,"eq","","",4,[[["self"],["littleendian"]],["bool"]]],[11,"partial_cmp","","",3,[[["bigendian"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"partial_cmp","","",4,[[["self"],["littleendian"]],[["option",["ordering"]],["ordering"]]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",4,[[["formatter"],["self"]],["result"]]],[11,"hash","","",3,[[["self"],["__h"]]]],[11,"hash","","",4,[[["self"],["__h"]]]],[11,"read_u8","","Reads an unsigned 8 bit integer from the underlying reader.",0,[[["self"]],[["result",["u8"]],["u8"]]]],[11,"read_i8","","Reads a signed 8 bit integer from the underlying reader.",0,[[["self"]],[["result",["i8"]],["i8"]]]],[11,"read_u16","","Reads an unsigned 16 bit integer from the underlying reader.",0,[[["self"]],[["u16"],["result",["u16"]]]]],[11,"read_i16","","Reads a signed 16 bit integer from the underlying reader.",0,[[["self"]],[["i16"],["result",["i16"]]]]],[11,"read_u24","","Reads an unsigned 24 bit integer from the underlying reader.",0,[[["self"]],[["result",["u32"]],["u32"]]]],[11,"read_i24","","Reads a signed 24 bit integer from the underlying reader.",0,[[["self"]],[["result",["i32"]],["i32"]]]],[11,"read_u32","","Reads an unsigned 32 bit integer from the underlying reader.",0,[[["self"]],[["result",["u32"]],["u32"]]]],[11,"read_i32","","Reads a signed 32 bit integer from the underlying reader.",0,[[["self"]],[["result",["i32"]],["i32"]]]],[11,"read_u48","","Reads an unsigned 48 bit integer from the underlying reader.",0,[[["self"]],[["u64"],["result",["u64"]]]]],[11,"read_i48","","Reads a signed 48 bit integer from the underlying reader.",0,[[["self"]],[["result",["i64"]],["i64"]]]],[11,"read_u64","","Reads an unsigned 64 bit integer from the underlying reader.",0,[[["self"]],[["u64"],["result",["u64"]]]]],[11,"read_i64","","Reads a signed 64 bit integer from the underlying reader.",0,[[["self"]],[["result",["i64"]],["i64"]]]],[11,"read_u128","","Reads an unsigned 128 bit integer from the underlying…",0,[[["self"]],[["u128"],["result",["u128"]]]]],[11,"read_i128","","Reads a signed 128 bit integer from the underlying reader.",0,[[["self"]],[["result",["i128"]],["i128"]]]],[11,"read_uint","","Reads an unsigned n-bytes integer from the underlying…",0,[[["self"],["usize"]],[["u64"],["result",["u64"]]]]],[11,"read_int","","Reads a signed n-bytes integer from the underlying reader.",0,[[["self"],["usize"]],[["result",["i64"]],["i64"]]]],[11,"read_uint128","","Reads an unsigned n-bytes integer from the underlying…",0,[[["self"],["usize"]],[["u128"],["result",["u128"]]]]],[11,"read_int128","","Reads a signed n-bytes integer from the underlying reader.",0,[[["self"],["usize"]],[["result",["i128"]],["i128"]]]],[11,"read_f32","","Reads a IEEE754 single-precision (4 bytes) floating point…",0,[[["self"]],[["f32"],["result",["f32"]]]]],[11,"read_f64","","Reads a IEEE754 double-precision (8 bytes) floating point…",0,[[["self"]],[["f64"],["result",["f64"]]]]],[11,"read_u16_into","","Reads a sequence of unsigned 16 bit integers from the…",0,[[["self"]],["result"]]],[11,"read_u32_into","","Reads a sequence of unsigned 32 bit integers from the…",0,[[["self"]],["result"]]],[11,"read_u64_into","","Reads a sequence of unsigned 64 bit integers from the…",0,[[["self"]],["result"]]],[11,"read_u128_into","","Reads a sequence of unsigned 128 bit integers from the…",0,[[["self"]],["result"]]],[11,"read_i8_into","","Reads a sequence of signed 8 bit integers from the…",0,[[["self"]],["result"]]],[11,"read_i16_into","","Reads a sequence of signed 16 bit integers from the…",0,[[["self"]],["result"]]],[11,"read_i32_into","","Reads a sequence of signed 32 bit integers from the…",0,[[["self"]],["result"]]],[11,"read_i64_into","","Reads a sequence of signed 64 bit integers from the…",0,[[["self"]],["result"]]],[11,"read_i128_into","","Reads a sequence of signed 128 bit integers from the…",0,[[["self"]],["result"]]],[11,"read_f32_into","","Reads a sequence of IEEE754 single-precision (4 bytes)…",0,[[["self"]],["result"]]],[11,"read_f32_into_unchecked","","DEPRECATED.",0,[[["self"]],["result"]]],[11,"read_f64_into","","Reads a sequence of IEEE754 double-precision (8 bytes)…",0,[[["self"]],["result"]]],[11,"read_f64_into_unchecked","","DEPRECATED.",0,[[["self"]],["result"]]],[11,"write_u8","","Writes an unsigned 8 bit integer to the underlying writer.",1,[[["self"],["u8"]],["result"]]],[11,"write_i8","","Writes a signed 8 bit integer to the underlying writer.",1,[[["self"],["i8"]],["result"]]],[11,"write_u16","","Writes an unsigned 16 bit integer to the underlying writer.",1,[[["u16"],["self"]],["result"]]],[11,"write_i16","","Writes a signed 16 bit integer to the underlying writer.",1,[[["self"],["i16"]],["result"]]],[11,"write_u24","","Writes an unsigned 24 bit integer to the underlying writer.",1,[[["self"],["u32"]],["result"]]],[11,"write_i24","","Writes a signed 24 bit integer to the underlying writer.",1,[[["self"],["i32"]],["result"]]],[11,"write_u32","","Writes an unsigned 32 bit integer to the underlying writer.",1,[[["self"],["u32"]],["result"]]],[11,"write_i32","","Writes a signed 32 bit integer to the underlying writer.",1,[[["self"],["i32"]],["result"]]],[11,"write_u48","","Writes an unsigned 48 bit integer to the underlying writer.",1,[[["self"],["u64"]],["result"]]],[11,"write_i48","","Writes a signed 48 bit integer to the underlying writer.",1,[[["i64"],["self"]],["result"]]],[11,"write_u64","","Writes an unsigned 64 bit integer to the underlying writer.",1,[[["self"],["u64"]],["result"]]],[11,"write_i64","","Writes a signed 64 bit integer to the underlying writer.",1,[[["i64"],["self"]],["result"]]],[11,"write_u128","","Writes an unsigned 128 bit integer to the underlying writer.",1,[[["self"],["u128"]],["result"]]],[11,"write_i128","","Writes a signed 128 bit integer to the underlying writer.",1,[[["self"],["i128"]],["result"]]],[11,"write_uint","","Writes an unsigned n-bytes integer to the underlying writer.",1,[[["self"],["u64"],["usize"]],["result"]]],[11,"write_int","","Writes a signed n-bytes integer to the underlying writer.",1,[[["i64"],["self"],["usize"]],["result"]]],[11,"write_uint128","","Writes an unsigned n-bytes integer to the underlying writer.",1,[[["self"],["usize"],["u128"]],["result"]]],[11,"write_int128","","Writes a signed n-bytes integer to the underlying writer.",1,[[["self"],["i128"],["usize"]],["result"]]],[11,"write_f32","","Writes a IEEE754 single-precision (4 bytes) floating point…",1,[[["f32"],["self"]],["result"]]],[11,"write_f64","","Writes a IEEE754 double-precision (8 bytes) floating point…",1,[[["self"],["f64"]],["result"]]]],"p":[[8,"ReadBytesExt"],[8,"WriteBytesExt"],[8,"ByteOrder"],[4,"BigEndian"],[4,"LittleEndian"]]};
searchIndex["cfg_if"] = {"doc":"A macro for defining `#[cfg]` if-else statements.","i":[[14,"cfg_if","cfg_if","The main macro provided by this crate. See crate…",null,null]],"p":[]};
searchIndex["charset"] = {"doc":"`charset` is a wrapper around [`encoding_rs`][1] that…","i":[[3,"Charset","charset","A character encoding suitable for decoding email.",null,null],[5,"decode_latin1","","Converts bytes whose unsigned value is interpreted as…",null,[[],[["str"],["cow",["str"]]]]],[5,"decode_ascii","","Converts ASCII to UTF-8 with non-ASCII bytes replaced with…",null,[[],[["str"],["cow",["str"]]]]],[17,"UTF_7","","The UTF-7 encoding.",null,null],[11,"for_label","","Implements the get an encoding algorithm with the label…",0,[[],[["charset"],["option",["charset"]]]]],[11,"for_label_no_replacement","","This method behaves the same as `for_label()`, except when…",0,[[],[["charset"],["option",["charset"]]]]],[11,"for_encoding","","Returns the `Charset` corresponding to an `&'static…",0,[[["encoding"]],["charset"]]],[11,"for_bom","","Performs non-incremental BOM sniffing.",0,[[],["option"]]],[11,"name","","Returns the name of this encoding.",0,[[],["str"]]],[11,"is_ascii_compatible","","Checks whether the bytes 0x00...0x7F map exclusively to…",0,[[],["bool"]]],[11,"decode","","Decode complete input to `Cow<'a, str>` with BOM sniffing…",0,[[]]],[11,"decode_with_bom_removal","","Decode complete input to `Cow<'a, str>` with BOM removal…",0,[[]]],[11,"decode_without_bom_handling","","Decode complete input to `Cow<'a, str>` without BOM…",0,[[]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",0,[[["encoding"]],["self"]]],[11,"clone","","",0,[[["self"]],["charset"]]],[11,"eq","","",0,[[["charset"],["self"]],["bool"]]],[11,"ne","","",0,[[["charset"],["self"]],["bool"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"hash","","",0,[[["self"],["__h"]]]]],"p":[[3,"Charset"]]};
searchIndex["checked_command"] = {"doc":"In std the methods used to retrieve the…","i":[[3,"CheckedChild","checked_command","A wrapper around `std::process::Child` which hides the…",null,null],[3,"CheckedCommand","","A wrapper around `std::process::Command` which hides the…",null,null],[3,"Output","","custom output type which, diferently to…",null,null],[12,"stdout","","the collected output of stdout as bytes",0,null],[12,"stderr","","the collected output of stderr as bytes",0,null],[4,"Error","","error type representing either a `io::Error` or a failure…",null,null],[13,"Io","","a `io::Error` occurred when handling the action",1,null],[13,"Failure","","Process exited with a non-zero exit code",1,null],[11,"as_std_command","","returns a mutable reference to the wrapped child",2,[[["self"]],["child"]]],[11,"into_std_command","","converts the checked child into a `std::process::Child`…",2,[[],["child"]]],[11,"stdin","","return a optional &mut to the childs Stding",2,[[["self"]],["option"]]],[11,"stdout","","return a optional &mut to the childs Stding",2,[[["self"]],["option"]]],[11,"stderr","","return a optional &mut to the childs Stding",2,[[["self"]],["option"]]],[11,"kill","","calls `std::process::Child::kill`",2,[[["self"]],[["ioerror"],["result",["ioerror"]]]]],[11,"id","","calls `std::process::Child::id`",2,[[["self"]],["u32"]]],[11,"wait","","calls `ChildExt::checked_wait` on the wrapped `Child`",2,[[["self"]],[["error"],["result",["error"]]]]],[11,"wait_with_output","","calls `ChildExt::checked_wait_with_output` on the wrapped…",2,[[],[["result",["output","error"]],["output"],["error"]]]],[11,"as_std_command","","return a mutable reference to the wrapped…",3,[[["self"]],["command"]]],[11,"into_std_command","","converts this Command into a `std::process::Command`…",3,[[],["command"]]],[11,"new","","creates a new `CheckedCommand` see…",3,[[["asref",["osstr"]],["osstr"]],["checkedcommand"]]],[11,"arg","","calls `std::process::Command::arg`",3,[[["self"],["asref",["osstr"]],["osstr"]],["checkedcommand"]]],[11,"args","","calls `std::process::Command::args`",3,[[["self"],["i"]],["checkedcommand"]]],[11,"env","","calls `std::process::Command::env`",3,[[["self"],["k"],["v"]],["checkedcommand"]]],[11,"env_remove","","calls `std::process::Command::env_remove`",3,[[["self"],["asref",["osstr"]],["osstr"]],["checkedcommand"]]],[11,"env_clear","","calls `std::process::Command::env_clear`",3,[[["self"]],["checkedcommand"]]],[11,"current_dir","","calls `std::process::Command::current_dir`",3,[[["path"],["self"],["asref",["path"]]],["checkedcommand"]]],[11,"stdin","","calls `std::process::Command::stdin`",3,[[["self"],["stdio"]],["checkedcommand"]]],[11,"stdout","","calls `std::process::Command::stdout`",3,[[["self"],["stdio"]],["checkedcommand"]]],[11,"stderr","","calls `std::process::Command::stderr`",3,[[["self"],["stdio"]],["checkedcommand"]]],[11,"spawn","","calls `std::process::Command::spawn` and converts the…",3,[[["self"]],[["checkedchild"],["result",["checkedchild","ioerror"]],["ioerror"]]]],[11,"output","","calls `CommandExt::checked_output` on the wrapped `Command`",3,[[["self"]],[["result",["output","error"]],["output"],["error"]]]],[11,"status","","calls `CommandExt::checked_status` on the wrapped `Command`",3,[[["self"]],[["error"],["result",["error"]]]]],[8,"CommandExt","","Extension to `std::process::Command` adding versions of…",null,null],[10,"checked_output","","Behaves like `std::process::Command::output` but also…",4,[[["self"]],[["result",["output","error"]],["output"],["error"]]]],[10,"checked_status","","Behaves like `std::process::Command::status` but also…",4,[[["self"]],[["error"],["result",["error"]]]]],[8,"ChildExt","","Extension to `std::process::Child` adding versions of the…",null,null],[10,"checked_wait_with_output","","Behaves like `std::process::Child::wait_with_output` but…",5,[[],[["result",["output","error"]],["output"],["error"]]]],[10,"checked_wait","","Behaves like `std::process::Child::wait` but also checks…",5,[[["self"]],[["error"],["result",["error"]]]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_string","","",1,[[["self"]],["string"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",0,[[["stdoutput"]],["output"]]],[11,"from","","",1,[[["ioerror"]],["error"]]],[11,"from","","",2,[[["child"]],["checkedchild"]]],[11,"from","","",3,[[["command"]],["checkedcommand"]]],[11,"clone","","",0,[[["self"]],["output"]]],[11,"eq","","",0,[[["self"],["output"]],["bool"]]],[11,"ne","","",0,[[["self"],["output"]],["bool"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"cause","","",1,[[["self"]],[["error"],["option",["error"]]]]]],"p":[[3,"Output"],[4,"Error"],[3,"CheckedChild"],[3,"CheckedCommand"],[8,"CommandExt"],[8,"ChildExt"]]};
searchIndex["chrono"] = {"doc":"Chrono: Date and Time for Rust","i":[[3,"Duration","chrono","ISO 8601 time duration with nanosecond precision. This…",null,null],[3,"Date","","ISO 8601 calendar date with time zone.",null,null],[3,"DateTime","","ISO 8601 combined date and time with time zone.",null,null],[3,"ParseWeekdayError","","An error resulting from reading `Weekday` value with…",null,null],[4,"SecondsFormat","","Specific formatting options for seconds. This may be…",null,null],[13,"Secs","","Format whole seconds only, with no decimal point nor…",0,null],[13,"Millis","","Use fixed 3 subsecond digits. This corresponds to…",0,null],[13,"Micros","","Use fixed 6 subsecond digits. This corresponds to…",0,null],[13,"Nanos","","Use fixed 9 subsecond digits. This corresponds to…",0,null],[13,"AutoSi","","Automatically select one of `Secs`, `Millis`, `Micros`, or…",0,null],[4,"Weekday","","The day of week.",null,null],[13,"Mon","","Monday.",1,null],[13,"Tue","","Tuesday.",1,null],[13,"Wed","","Wednesday.",1,null],[13,"Thu","","Thursday.",1,null],[13,"Fri","","Friday.",1,null],[13,"Sat","","Saturday.",1,null],[13,"Sun","","Sunday.",1,null],[0,"prelude","","A convenience module appropriate for glob imports (`use…",null,null],[0,"offset","","The time zone, which calculates offsets from the local…",null,null],[3,"FixedOffset","chrono::offset","The time zone with fixed offset, from UTC-23:59:59 to…",null,null],[3,"Local","","The local timescale. This is implemented via the standard…",null,null],[3,"Utc","","The UTC time zone. This is the most efficient time zone…",null,null],[4,"LocalResult","","The conversion result from the local time to the…",null,null],[13,"None","","Given local time representation is invalid. This can occur…",2,null],[13,"Single","","Given local time representation has a single unique result.",2,null],[13,"Ambiguous","","Given local time representation has multiple results and…",2,null],[11,"east","","Makes a new `FixedOffset` for the Eastern Hemisphere with…",3,[[["i32"]],["fixedoffset"]]],[11,"east_opt","","Makes a new `FixedOffset` for the Eastern Hemisphere with…",3,[[["i32"]],[["fixedoffset"],["option",["fixedoffset"]]]]],[11,"west","","Makes a new `FixedOffset` for the Western Hemisphere with…",3,[[["i32"]],["fixedoffset"]]],[11,"west_opt","","Makes a new `FixedOffset` for the Western Hemisphere with…",3,[[["i32"]],[["fixedoffset"],["option",["fixedoffset"]]]]],[11,"local_minus_utc","","Returns the number of seconds to add to convert from UTC…",3,[[["self"]],["i32"]]],[11,"utc_minus_local","","Returns the number of seconds to add to convert from the…",3,[[["self"]],["i32"]]],[11,"today","","Returns a `Date` which corresponds to the current date.",4,[[],[["date",["local"]],["local"]]]],[11,"now","","Returns a `DateTime` which corresponds to the current date.",4,[[],[["datetime",["local"]],["local"]]]],[11,"today","","Returns a `Date` which corresponds to the current date.",5,[[],[["date",["utc"]],["utc"]]]],[11,"now","","Returns a `DateTime` which corresponds to the current date.",5,[[],[["datetime",["utc"]],["utc"]]]],[8,"Offset","","The offset from the local time to UTC.",null,null],[10,"fix","","Returns the fixed offset from UTC to the local time stored.",6,[[["self"]],["fixedoffset"]]],[8,"TimeZone","","The time zone.",null,null],[16,"Offset","","An associated offset type. This type is used to store the…",7,null],[11,"ymd","","Makes a new `Date` from year, month, day and the current…",7,[[["u32"],["i32"],["self"]],["date"]]],[11,"ymd_opt","","Makes a new `Date` from year, month, day and the current…",7,[[["u32"],["i32"],["self"]],[["localresult",["date"]],["date"]]]],[11,"yo","","Makes a new `Date` from year, day of year (DOY or…",7,[[["u32"],["self"],["i32"]],["date"]]],[11,"yo_opt","","Makes a new `Date` from year, day of year (DOY or…",7,[[["u32"],["self"],["i32"]],[["localresult",["date"]],["date"]]]],[11,"isoywd","","Makes a new `Date` from ISO week date (year and week…",7,[[["u32"],["i32"],["weekday"],["self"]],["date"]]],[11,"isoywd_opt","","Makes a new `Date` from ISO week date (year and week…",7,[[["u32"],["i32"],["weekday"],["self"]],[["localresult",["date"]],["date"]]]],[11,"timestamp","","Makes a new `DateTime` from the number of non-leap seconds…",7,[[["i64"],["u32"],["self"]],["datetime"]]],[11,"timestamp_opt","","Makes a new `DateTime` from the number of non-leap seconds…",7,[[["i64"],["u32"],["self"]],[["localresult",["datetime"]],["datetime"]]]],[11,"timestamp_millis","","Makes a new `DateTime` from the number of non-leap…",7,[[["i64"],["self"]],["datetime"]]],[11,"timestamp_millis_opt","","Makes a new `DateTime` from the number of non-leap…",7,[[["i64"],["self"]],[["localresult",["datetime"]],["datetime"]]]],[11,"timestamp_nanos","","Makes a new `DateTime` from the number of non-leap…",7,[[["i64"],["self"]],["datetime"]]],[11,"datetime_from_str","","Parses a string with the specified format string and…",7,[[["str"],["self"]],[["datetime"],["parseresult",["datetime"]]]]],[10,"from_offset","","Reconstructs the time zone from the offset.",7,[[],["self"]]],[10,"offset_from_local_date","","Creates the offset(s) for given local `NaiveDate` if…",7,[[["self"],["naivedate"]],["localresult"]]],[10,"offset_from_local_datetime","","Creates the offset(s) for given local `NaiveDateTime` if…",7,[[["self"],["naivedatetime"]],["localresult"]]],[11,"from_local_date","","Converts the local `NaiveDate` to the timezone-aware…",7,[[["self"],["naivedate"]],[["localresult",["date"]],["date"]]]],[11,"from_local_datetime","","Converts the local `NaiveDateTime` to the timezone-aware…",7,[[["self"],["naivedatetime"]],[["localresult",["datetime"]],["datetime"]]]],[10,"offset_from_utc_date","","Creates the offset for given UTC `NaiveDate`. This cannot…",7,[[["self"],["naivedate"]]]],[10,"offset_from_utc_datetime","","Creates the offset for given UTC `NaiveDateTime`. This…",7,[[["self"],["naivedatetime"]]]],[11,"from_utc_date","","Converts the UTC `NaiveDate` to the local time. The UTC is…",7,[[["self"],["naivedate"]],["date"]]],[11,"from_utc_datetime","","Converts the UTC `NaiveDateTime` to the local time. The…",7,[[["self"],["naivedatetime"]],["datetime"]]],[11,"single","","Returns `Some` only when the conversion result is unique,…",2,[[],["option"]]],[11,"earliest","","Returns `Some` for the earliest possible conversion…",2,[[],["option"]]],[11,"latest","","Returns `Some` for the latest possible conversion result,…",2,[[],["option"]]],[11,"map","","Maps a `LocalResult<T>` into `LocalResult<U>` with given…",2,[[["fnmut"]],["localresult"]]],[11,"and_time","","Makes a new `DateTime` from the current date and given…",2,[[["naivetime"]],[["localresult",["datetime"]],["datetime"]]]],[11,"and_hms_opt","","Makes a new `DateTime` from the current date, hour, minute…",2,[[["u32"]],[["localresult",["datetime"]],["datetime"]]]],[11,"and_hms_milli_opt","","Makes a new `DateTime` from the current date, hour,…",2,[[["u32"]],[["localresult",["datetime"]],["datetime"]]]],[11,"and_hms_micro_opt","","Makes a new `DateTime` from the current date, hour,…",2,[[["u32"]],[["localresult",["datetime"]],["datetime"]]]],[11,"and_hms_nano_opt","","Makes a new `DateTime` from the current date, hour,…",2,[[["u32"]],[["localresult",["datetime"]],["datetime"]]]],[11,"unwrap","","Returns the single unique conversion result, or panics…",2,[[],["t"]]],[0,"naive","chrono","Date and time types unconcerned with timezones.",null,null],[3,"NaiveDate","chrono::naive","ISO 8601 calendar date without timezone. Allows for every…",null,null],[3,"IsoWeek","","ISO 8601 week.",null,null],[3,"NaiveTime","","ISO 8601 time without timezone. Allows for the nanosecond…",null,null],[3,"NaiveDateTime","","ISO 8601 combined date and time without timezone.",null,null],[11,"from_ymd","","Makes a new `NaiveDate` from the calendar date (year,…",8,[[["u32"],["i32"]],["naivedate"]]],[11,"from_ymd_opt","","Makes a new `NaiveDate` from the calendar date (year,…",8,[[["u32"],["i32"]],[["naivedate"],["option",["naivedate"]]]]],[11,"from_yo","","Makes a new `NaiveDate` from the ordinal date (year and…",8,[[["u32"],["i32"]],["naivedate"]]],[11,"from_yo_opt","","Makes a new `NaiveDate` from the ordinal date (year and…",8,[[["u32"],["i32"]],[["naivedate"],["option",["naivedate"]]]]],[11,"from_isoywd","","Makes a new `NaiveDate` from the ISO week date (year, week…",8,[[["weekday"],["u32"],["i32"]],["naivedate"]]],[11,"from_isoywd_opt","","Makes a new `NaiveDate` from the ISO week date (year, week…",8,[[["weekday"],["u32"],["i32"]],[["naivedate"],["option",["naivedate"]]]]],[11,"from_num_days_from_ce","","Makes a new `NaiveDate` from a day's number in the…",8,[[["i32"]],["naivedate"]]],[11,"from_num_days_from_ce_opt","","Makes a new `NaiveDate` from a day's number in the…",8,[[["i32"]],[["naivedate"],["option",["naivedate"]]]]],[11,"from_weekday_of_month","","Makes a new `NaiveDate` by counting the number of…",8,[[["u32"],["i32"],["weekday"],["u8"]],["naivedate"]]],[11,"from_weekday_of_month_opt","","Makes a new `NaiveDate` by counting the number of…",8,[[["u32"],["i32"],["weekday"],["u8"]],[["naivedate"],["option",["naivedate"]]]]],[11,"parse_from_str","","Parses a string with the specified format string and…",8,[[["str"]],[["naivedate"],["parseresult",["naivedate"]]]]],[11,"and_time","","Makes a new `NaiveDateTime` from the current date and…",8,[[["self"],["naivetime"]],["naivedatetime"]]],[11,"and_hms","","Makes a new `NaiveDateTime` from the current date, hour,…",8,[[["u32"],["self"]],["naivedatetime"]]],[11,"and_hms_opt","","Makes a new `NaiveDateTime` from the current date, hour,…",8,[[["u32"],["self"]],[["option",["naivedatetime"]],["naivedatetime"]]]],[11,"and_hms_milli","","Makes a new `NaiveDateTime` from the current date, hour,…",8,[[["u32"],["self"]],["naivedatetime"]]],[11,"and_hms_milli_opt","","Makes a new `NaiveDateTime` from the current date, hour,…",8,[[["u32"],["self"]],[["option",["naivedatetime"]],["naivedatetime"]]]],[11,"and_hms_micro","","Makes a new `NaiveDateTime` from the current date, hour,…",8,[[["u32"],["self"]],["naivedatetime"]]],[11,"and_hms_micro_opt","","Makes a new `NaiveDateTime` from the current date, hour,…",8,[[["u32"],["self"]],[["option",["naivedatetime"]],["naivedatetime"]]]],[11,"and_hms_nano","","Makes a new `NaiveDateTime` from the current date, hour,…",8,[[["u32"],["self"]],["naivedatetime"]]],[11,"and_hms_nano_opt","","Makes a new `NaiveDateTime` from the current date, hour,…",8,[[["u32"],["self"]],[["option",["naivedatetime"]],["naivedatetime"]]]],[11,"succ","","Makes a new `NaiveDate` for the next calendar date.",8,[[["self"]],["naivedate"]]],[11,"succ_opt","","Makes a new `NaiveDate` for the next calendar date.",8,[[["self"]],[["naivedate"],["option",["naivedate"]]]]],[11,"pred","","Makes a new `NaiveDate` for the previous calendar date.",8,[[["self"]],["naivedate"]]],[11,"pred_opt","","Makes a new `NaiveDate` for the previous calendar date.",8,[[["self"]],[["naivedate"],["option",["naivedate"]]]]],[11,"checked_add_signed","","Adds the `days` part of given `Duration` to the current…",8,[[["oldduration"]],[["naivedate"],["option",["naivedate"]]]]],[11,"checked_sub_signed","","Subtracts the `days` part of given `Duration` from the…",8,[[["oldduration"]],[["naivedate"],["option",["naivedate"]]]]],[11,"signed_duration_since","","Subtracts another `NaiveDate` from the current date.…",8,[[["naivedate"]],["oldduration"]]],[11,"format_with_items","","Formats the date with the specified formatting items.…",8,[[["i"],["self"]],["delayedformat"]]],[11,"format","","Formats the date with the specified format string. See the…",8,[[["str"],["self"]],[["delayedformat",["strftimeitems"]],["strftimeitems"]]]],[11,"year","","Returns the year number for this ISO week.",9,[[["self"]],["i32"]]],[11,"week","","Returns the ISO week number starting from 1.",9,[[["self"]],["u32"]]],[11,"week0","","Returns the ISO week number starting from 0.",9,[[["self"]],["u32"]]],[11,"from_hms","","Makes a new `NaiveTime` from hour, minute and second.",10,[[["u32"]],["naivetime"]]],[11,"from_hms_opt","","Makes a new `NaiveTime` from hour, minute and second.",10,[[["u32"]],[["option",["naivetime"]],["naivetime"]]]],[11,"from_hms_milli","","Makes a new `NaiveTime` from hour, minute, second and…",10,[[["u32"]],["naivetime"]]],[11,"from_hms_milli_opt","","Makes a new `NaiveTime` from hour, minute, second and…",10,[[["u32"]],[["option",["naivetime"]],["naivetime"]]]],[11,"from_hms_micro","","Makes a new `NaiveTime` from hour, minute, second and…",10,[[["u32"]],["naivetime"]]],[11,"from_hms_micro_opt","","Makes a new `NaiveTime` from hour, minute, second and…",10,[[["u32"]],[["option",["naivetime"]],["naivetime"]]]],[11,"from_hms_nano","","Makes a new `NaiveTime` from hour, minute, second and…",10,[[["u32"]],["naivetime"]]],[11,"from_hms_nano_opt","","Makes a new `NaiveTime` from hour, minute, second and…",10,[[["u32"]],[["option",["naivetime"]],["naivetime"]]]],[11,"from_num_seconds_from_midnight","","Makes a new `NaiveTime` from the number of seconds since…",10,[[["u32"]],["naivetime"]]],[11,"from_num_seconds_from_midnight_opt","","Makes a new `NaiveTime` from the number of seconds since…",10,[[["u32"]],[["option",["naivetime"]],["naivetime"]]]],[11,"parse_from_str","","Parses a string with the specified format string and…",10,[[["str"]],[["parseresult",["naivetime"]],["naivetime"]]]],[11,"overflowing_add_signed","","Adds given `Duration` to the current time, and also…",10,[[["self"],["oldduration"]]]],[11,"overflowing_sub_signed","","Subtracts given `Duration` from the current time, and also…",10,[[["self"],["oldduration"]]]],[11,"signed_duration_since","","Subtracts another `NaiveTime` from the current time.…",10,[[["naivetime"]],["oldduration"]]],[11,"format_with_items","","Formats the time with the specified formatting items.…",10,[[["i"],["self"]],["delayedformat"]]],[11,"format","","Formats the time with the specified format string. See the…",10,[[["str"],["self"]],[["delayedformat",["strftimeitems"]],["strftimeitems"]]]],[11,"new","","Makes a new `NaiveDateTime` from date and time components.…",11,[[["naivedate"],["naivetime"]],["naivedatetime"]]],[11,"from_timestamp","","Makes a new `NaiveDateTime` corresponding to a UTC date…",11,[[["i64"],["u32"]],["naivedatetime"]]],[11,"from_timestamp_opt","","Makes a new `NaiveDateTime` corresponding to a UTC date…",11,[[["i64"],["u32"]],[["option",["naivedatetime"]],["naivedatetime"]]]],[11,"parse_from_str","","Parses a string with the specified format string and…",11,[[["str"]],[["naivedatetime"],["parseresult",["naivedatetime"]]]]],[11,"date","","Retrieves a date component.",11,[[["self"]],["naivedate"]]],[11,"time","","Retrieves a time component.",11,[[["self"]],["naivetime"]]],[11,"timestamp","","Returns the number of non-leap seconds since the midnight…",11,[[["self"]],["i64"]]],[11,"timestamp_millis","","Returns the number of non-leap milliseconds since midnight…",11,[[["self"]],["i64"]]],[11,"timestamp_nanos","","Returns the number of non-leap nanoseconds since midnight…",11,[[["self"]],["i64"]]],[11,"timestamp_subsec_millis","","Returns the number of milliseconds since the last whole…",11,[[["self"]],["u32"]]],[11,"timestamp_subsec_micros","","Returns the number of microseconds since the last whole…",11,[[["self"]],["u32"]]],[11,"timestamp_subsec_nanos","","Returns the number of nanoseconds since the last whole…",11,[[["self"]],["u32"]]],[11,"checked_add_signed","","Adds given `Duration` to the current date and time.",11,[[["oldduration"]],[["option",["naivedatetime"]],["naivedatetime"]]]],[11,"checked_sub_signed","","Subtracts given `Duration` from the current date and time.",11,[[["oldduration"]],[["option",["naivedatetime"]],["naivedatetime"]]]],[11,"signed_duration_since","","Subtracts another `NaiveDateTime` from the current date…",11,[[["naivedatetime"]],["oldduration"]]],[11,"format_with_items","","Formats the combined date and time with the specified…",11,[[["i"],["self"]],["delayedformat"]]],[11,"format","","Formats the combined date and time with the specified…",11,[[["str"],["self"]],[["delayedformat",["strftimeitems"]],["strftimeitems"]]]],[17,"MIN_DATE","","The minimum possible `NaiveDate` (January 1, 262145 BCE).",null,null],[17,"MAX_DATE","","The maximum possible `NaiveDate` (December 31, 262143 CE).",null,null],[11,"from_utc","chrono","Makes a new `Date` with given UTC date and offset. The…",12,[[["naivedate"]],["date"]]],[11,"and_time","","Makes a new `DateTime` from the current date and given…",12,[[["self"],["naivetime"]],[["datetime"],["option",["datetime"]]]]],[11,"and_hms","","Makes a new `DateTime` from the current date, hour, minute…",12,[[["u32"],["self"]],["datetime"]]],[11,"and_hms_opt","","Makes a new `DateTime` from the current date, hour, minute…",12,[[["u32"],["self"]],[["datetime"],["option",["datetime"]]]]],[11,"and_hms_milli","","Makes a new `DateTime` from the current date, hour,…",12,[[["u32"],["self"]],["datetime"]]],[11,"and_hms_milli_opt","","Makes a new `DateTime` from the current date, hour,…",12,[[["u32"],["self"]],[["datetime"],["option",["datetime"]]]]],[11,"and_hms_micro","","Makes a new `DateTime` from the current date, hour,…",12,[[["u32"],["self"]],["datetime"]]],[11,"and_hms_micro_opt","","Makes a new `DateTime` from the current date, hour,…",12,[[["u32"],["self"]],[["datetime"],["option",["datetime"]]]]],[11,"and_hms_nano","","Makes a new `DateTime` from the current date, hour,…",12,[[["u32"],["self"]],["datetime"]]],[11,"and_hms_nano_opt","","Makes a new `DateTime` from the current date, hour,…",12,[[["u32"],["self"]],[["datetime"],["option",["datetime"]]]]],[11,"succ","","Makes a new `Date` for the next date.",12,[[["self"]],["date"]]],[11,"succ_opt","","Makes a new `Date` for the next date.",12,[[["self"]],[["date"],["option",["date"]]]]],[11,"pred","","Makes a new `Date` for the prior date.",12,[[["self"]],["date"]]],[11,"pred_opt","","Makes a new `Date` for the prior date.",12,[[["self"]],[["date"],["option",["date"]]]]],[11,"offset","","Retrieves an associated offset from UTC.",12,[[["self"]]]],[11,"timezone","","Retrieves an associated time zone.",12,[[["self"]],["tz"]]],[11,"with_timezone","","Changes the associated time zone. This does not change the…",12,[[["tz2"],["self"]],[["timezone"],["date"]]]],[11,"checked_add_signed","","Adds given `Duration` to the current date.",12,[[["oldduration"]],[["date"],["option",["date"]]]]],[11,"checked_sub_signed","","Subtracts given `Duration` from the current date.",12,[[["oldduration"]],[["date"],["option",["date"]]]]],[11,"signed_duration_since","","Subtracts another `Date` from the current date. Returns a…",12,[[["timezone"],["date"]],["oldduration"]]],[11,"naive_utc","","Returns a view to the naive UTC date.",12,[[["self"]],["naivedate"]]],[11,"naive_local","","Returns a view to the naive local date.",12,[[["self"]],["naivedate"]]],[11,"format_with_items","","Formats the date with the specified formatting items.",12,[[["i"],["self"]],["delayedformat"]]],[11,"format","","Formats the date with the specified format string. See the…",12,[[["str"],["self"]],[["delayedformat",["strftimeitems"]],["strftimeitems"]]]],[11,"from_utc","","Makes a new `DateTime` with given UTC datetime and offset.…",13,[[["naivedatetime"]],["datetime"]]],[11,"date","","Retrieves a date component.",13,[[["self"]],["date"]]],[11,"time","","Retrieves a time component. Unlike `date`, this is not…",13,[[["self"]],["naivetime"]]],[11,"timestamp","","Returns the number of non-leap seconds since January 1,…",13,[[["self"]],["i64"]]],[11,"timestamp_millis","","Returns the number of non-leap-milliseconds since January…",13,[[["self"]],["i64"]]],[11,"timestamp_nanos","","Returns the number of non-leap-nanoseconds since January…",13,[[["self"]],["i64"]]],[11,"timestamp_subsec_millis","","Returns the number of milliseconds since the last second…",13,[[["self"]],["u32"]]],[11,"timestamp_subsec_micros","","Returns the number of microseconds since the last second…",13,[[["self"]],["u32"]]],[11,"timestamp_subsec_nanos","","Returns the number of nanoseconds since the last second…",13,[[["self"]],["u32"]]],[11,"offset","","Retrieves an associated offset from UTC.",13,[[["self"]]]],[11,"timezone","","Retrieves an associated time zone.",13,[[["self"]],["tz"]]],[11,"with_timezone","","Changes the associated time zone. This does not change the…",13,[[["tz2"],["self"]],[["datetime"],["timezone"]]]],[11,"checked_add_signed","","Adds given `Duration` to the current date and time.",13,[[["oldduration"]],[["datetime"],["option",["datetime"]]]]],[11,"checked_sub_signed","","Subtracts given `Duration` from the current date and time.",13,[[["oldduration"]],[["datetime"],["option",["datetime"]]]]],[11,"signed_duration_since","","Subtracts another `DateTime` from the current date and…",13,[[["datetime"],["timezone"]],["oldduration"]]],[11,"naive_utc","","Returns a view to the naive UTC datetime.",13,[[["self"]],["naivedatetime"]]],[11,"naive_local","","Returns a view to the naive local datetime.",13,[[["self"]],["naivedatetime"]]],[11,"parse_from_rfc2822","","Parses an RFC 2822 date and time string such as `Tue, 1…",13,[[["str"]],[["parseresult",["datetime"]],["datetime",["fixedoffset"]]]]],[11,"parse_from_rfc3339","","Parses an RFC 3339 and ISO 8601 date and time string such…",13,[[["str"]],[["parseresult",["datetime"]],["datetime",["fixedoffset"]]]]],[11,"parse_from_str","","Parses a string with the specified format string and…",13,[[["str"]],[["parseresult",["datetime"]],["datetime",["fixedoffset"]]]]],[11,"to_rfc2822","","Returns an RFC 2822 date and time string such as `Tue, 1…",13,[[["self"]],["string"]]],[11,"to_rfc3339","","Returns an RFC 3339 and ISO 8601 date and time string such…",13,[[["self"]],["string"]]],[11,"to_rfc3339_opts","","Return an RFC 3339 and ISO 8601 date and time string with…",13,[[["bool"],["self"],["secondsformat"]],["string"]]],[11,"format_with_items","","Formats the combined date and time with the specified…",13,[[["i"],["self"]],["delayedformat"]]],[11,"format","","Formats the combined date and time with the specified…",13,[[["str"],["self"]],[["delayedformat",["strftimeitems"]],["strftimeitems"]]]],[0,"format","","Formatting (and parsing) utilities for date and time.",null,null],[3,"Parsed","chrono::format","Parsed parts of date and time. There are two classes of…",null,null],[12,"year","","Year.",14,null],[12,"year_div_100","","Year divided by 100. Implies that the year is >= 1 BCE…",14,null],[12,"year_mod_100","","Year modulo 100. Implies that the year is >= 1 BCE when set.",14,null],[12,"isoyear","","Year in the ISO week date.",14,null],[12,"isoyear_div_100","","Year in the ISO week date, divided by 100. Implies that…",14,null],[12,"isoyear_mod_100","","Year in the ISO week date, modulo 100. Implies that the…",14,null],[12,"month","","Month (1--12).",14,null],[12,"week_from_sun","","Week number, where the week 1 starts at the first Sunday…",14,null],[12,"week_from_mon","","Week number, where the week 1 starts at the first Monday…",14,null],[12,"isoweek","","ISO week number (1--52 or 1--53 depending on the year).",14,null],[12,"weekday","","Day of the week.",14,null],[12,"ordinal","","Day of the year (1--365 or 1--366 depending on the year).",14,null],[12,"day","","Day of the month (1--28, 1--29, 1--30 or 1--31 depending…",14,null],[12,"hour_div_12","","Hour number divided by 12 (0--1). 0 indicates AM and 1…",14,null],[12,"hour_mod_12","","Hour number modulo 12 (0--11).",14,null],[12,"minute","","Minute number (0--59).",14,null],[12,"second","","Second number (0--60, accounting for leap seconds).",14,null],[12,"nanosecond","","The number of nanoseconds since the whole second…",14,null],[12,"timestamp","","The number of non-leap seconds since the midnight UTC on…",14,null],[12,"offset","","Offset from the local time to UTC, in seconds.",14,null],[3,"InternalNumeric","","An opaque type representing numeric item types for…",null,null],[3,"InternalFixed","","An opaque type representing fixed-format item types for…",null,null],[3,"ParseError","","An error from the `parse` function.",null,null],[3,"DelayedFormat","","A temporary object which can be used as an argument to…",null,null],[4,"Pad","","Padding characters for numeric items.",null,null],[13,"None","","No padding.",15,null],[13,"Zero","","Zero (`0`) padding.",15,null],[13,"Space","","Space padding.",15,null],[4,"Numeric","","Numeric item types. They have associated formatting width…",null,null],[13,"Year","","Full Gregorian year (FW=4, PW=∞). May accept years before…",16,null],[13,"YearDiv100","","Gregorian year divided by 100 (century number; FW=PW=2).…",16,null],[13,"YearMod100","","Gregorian year modulo 100 (FW=PW=2). Cannot be negative.",16,null],[13,"IsoYear","","Year in the ISO week date (FW=4, PW=∞). May accept years…",16,null],[13,"IsoYearDiv100","","Year in the ISO week date, divided by 100 (FW=PW=2).…",16,null],[13,"IsoYearMod100","","Year in the ISO week date, modulo 100 (FW=PW=2). Cannot be…",16,null],[13,"Month","","Month (FW=PW=2).",16,null],[13,"Day","","Day of the month (FW=PW=2).",16,null],[13,"WeekFromSun","","Week number, where the week 1 starts at the first Sunday…",16,null],[13,"WeekFromMon","","Week number, where the week 1 starts at the first Monday…",16,null],[13,"IsoWeek","","Week number in the ISO week date (FW=PW=2).",16,null],[13,"NumDaysFromSun","","Day of the week, where Sunday = 0 and Saturday = 6…",16,null],[13,"WeekdayFromMon","","Day of the week, where Monday = 1 and Sunday = 7 (FW=PW=1).",16,null],[13,"Ordinal","","Day of the year (FW=PW=3).",16,null],[13,"Hour","","Hour number in the 24-hour clocks (FW=PW=2).",16,null],[13,"Hour12","","Hour number in the 12-hour clocks (FW=PW=2).",16,null],[13,"Minute","","The number of minutes since the last whole hour (FW=PW=2).",16,null],[13,"Second","","The number of seconds since the last whole minute (FW=PW=2).",16,null],[13,"Nanosecond","","The number of nanoseconds since the last whole second…",16,null],[13,"Timestamp","","The number of non-leap seconds since the midnight UTC on…",16,null],[13,"Internal","","Internal uses only.",16,null],[4,"Fixed","","Fixed-format item types.",null,null],[13,"ShortMonthName","","Abbreviated month names.",17,null],[13,"LongMonthName","","Full month names.",17,null],[13,"ShortWeekdayName","","Abbreviated day of the week names.",17,null],[13,"LongWeekdayName","","Full day of the week names.",17,null],[13,"LowerAmPm","","AM/PM.",17,null],[13,"UpperAmPm","","AM/PM.",17,null],[13,"Nanosecond","","An optional dot plus one or more digits for left-aligned…",17,null],[13,"Nanosecond3","","Same as `Nanosecond` but the accuracy is fixed to 3.",17,null],[13,"Nanosecond6","","Same as `Nanosecond` but the accuracy is fixed to 6.",17,null],[13,"Nanosecond9","","Same as `Nanosecond` but the accuracy is fixed to 9.",17,null],[13,"TimezoneName","","Timezone name.",17,null],[13,"TimezoneOffsetColon","","Offset from the local time to UTC (`+09:00` or `-04:00` or…",17,null],[13,"TimezoneOffsetColonZ","","Offset from the local time to UTC (`+09:00` or `-04:00` or…",17,null],[13,"TimezoneOffset","","Same as `TimezoneOffsetColon` but prints no colon. Parsing…",17,null],[13,"TimezoneOffsetZ","","Same as `TimezoneOffsetColonZ` but prints no colon.…",17,null],[13,"RFC2822","","RFC 2822 date and time syntax. Commonly used for email and…",17,null],[13,"RFC3339","","RFC 3339 & ISO 8601 date and time syntax.",17,null],[13,"Internal","","Internal uses only.",17,null],[4,"Item","","A single formatting item. This is used for both formatting…",null,null],[13,"Literal","","A literally printed and parsed text.",18,null],[13,"OwnedLiteral","","Same as `Literal` but with the string owned by the item.",18,null],[13,"Space","","Whitespace. Prints literally but reads zero or more…",18,null],[13,"OwnedSpace","","Same as `Space` but with the string owned by the item.",18,null],[13,"Numeric","","Numeric item. Can be optionally padded to the maximal…",18,null],[13,"Fixed","","Fixed-format item.",18,null],[13,"Error","","Issues a formatting error. Used to signal an invalid…",18,null],[5,"parse","","Tries to parse given string into `parsed` with given…",null,[[["str"],["i"],["parsed"]],["parseresult"]]],[5,"format","","Tries to format given arguments with given formatting…",null,[[["naivetime"],["option"],["option",["naivetime"]],["formatter"],["option",["naivedate"]],["naivedate"],["i"]],["result"]]],[11,"new","","Returns the initial value of parsed parts.",14,[[],["parsed"]]],[11,"set_year","","Tries to set the `year` field from given value.",14,[[["i64"],["self"]],["parseresult"]]],[11,"set_year_div_100","","Tries to set the `year_div_100` field from given value.",14,[[["i64"],["self"]],["parseresult"]]],[11,"set_year_mod_100","","Tries to set the `year_mod_100` field from given value.",14,[[["i64"],["self"]],["parseresult"]]],[11,"set_isoyear","","Tries to set the `isoyear` field from given value.",14,[[["i64"],["self"]],["parseresult"]]],[11,"set_isoyear_div_100","","Tries to set the `isoyear_div_100` field from given value.",14,[[["i64"],["self"]],["parseresult"]]],[11,"set_isoyear_mod_100","","Tries to set the `isoyear_mod_100` field from given value.",14,[[["i64"],["self"]],["parseresult"]]],[11,"set_month","","Tries to set the `month` field from given value.",14,[[["i64"],["self"]],["parseresult"]]],[11,"set_week_from_sun","","Tries to set the `week_from_sun` field from given value.",14,[[["i64"],["self"]],["parseresult"]]],[11,"set_week_from_mon","","Tries to set the `week_from_mon` field from given value.",14,[[["i64"],["self"]],["parseresult"]]],[11,"set_isoweek","","Tries to set the `isoweek` field from given value.",14,[[["i64"],["self"]],["parseresult"]]],[11,"set_weekday","","Tries to set the `weekday` field from given value.",14,[[["weekday"],["self"]],["parseresult"]]],[11,"set_ordinal","","Tries to set the `ordinal` field from given value.",14,[[["i64"],["self"]],["parseresult"]]],[11,"set_day","","Tries to set the `day` field from given value.",14,[[["i64"],["self"]],["parseresult"]]],[11,"set_ampm","","Tries to set the `hour_div_12` field from given value.…",14,[[["self"],["bool"]],["parseresult"]]],[11,"set_hour12","","Tries to set the `hour_mod_12` field from given hour…",14,[[["i64"],["self"]],["parseresult"]]],[11,"set_hour","","Tries to set both `hour_div_12` and `hour_mod_12` fields…",14,[[["i64"],["self"]],["parseresult"]]],[11,"set_minute","","Tries to set the `minute` field from given value.",14,[[["i64"],["self"]],["parseresult"]]],[11,"set_second","","Tries to set the `second` field from given value.",14,[[["i64"],["self"]],["parseresult"]]],[11,"set_nanosecond","","Tries to set the `nanosecond` field from given value.",14,[[["i64"],["self"]],["parseresult"]]],[11,"set_timestamp","","Tries to set the `timestamp` field from given value.",14,[[["i64"],["self"]],["parseresult"]]],[11,"set_offset","","Tries to set the `offset` field from given value.",14,[[["i64"],["self"]],["parseresult"]]],[11,"to_naive_date","","Returns a parsed naive date out of given fields.",14,[[["self"]],[["naivedate"],["parseresult",["naivedate"]]]]],[11,"to_naive_time","","Returns a parsed naive time out of given fields.",14,[[["self"]],[["parseresult",["naivetime"]],["naivetime"]]]],[11,"to_naive_datetime_with_offset","","Returns a parsed naive date and time out of given fields,…",14,[[["self"],["i32"]],[["naivedatetime"],["parseresult",["naivedatetime"]]]]],[11,"to_fixed_offset","","Returns a parsed fixed time zone offset out of given fields.",14,[[["self"]],[["fixedoffset"],["parseresult",["fixedoffset"]]]]],[11,"to_datetime","","Returns a parsed timezone-aware date and time out of given…",14,[[["self"]],[["parseresult",["datetime"]],["datetime",["fixedoffset"]]]]],[11,"to_datetime_with_timezone","","Returns a parsed timezone-aware date and time out of given…",14,[[["tz"],["self"]],[["parseresult",["datetime"]],["datetime"]]]],[0,"strftime","","`strftime`/`strptime`-inspired date and time formatting…",null,null],[3,"StrftimeItems","chrono::format::strftime","Parsing iterator for `strftime`-like format strings.",null,null],[11,"new","","Creates a new parsing iterator from the `strftime`-like…",19,[[["str"]],["strftimeitems"]]],[6,"ParseResult","chrono::format","Same as `Result<T, ParseError>`.",null,null],[11,"new","","Makes a new `DelayedFormat` value out of local date and…",20,[[["option",["naivedate"]],["naivetime"],["naivedate"],["option",["naivetime"]],["i"]],["delayedformat"]]],[11,"new_with_offset","","Makes a new `DelayedFormat` value out of local date and…",20,[[["off"],["option",["naivedate"]],["naivetime"],["naivedate"],["option",["naivetime"]],["i"]],["delayedformat"]]],[17,"MIN_DATE","chrono","The minimum possible `Date`.",null,null],[17,"MAX_DATE","","The maximum possible `Date`.",null,null],[8,"SubsecRound","","Extension trait for subsecond rounding or truncation to a…",null,null],[10,"round_subsecs","","Return a copy rounded to the specified number of subsecond…",21,[[["u16"]],["self"]]],[10,"trunc_subsecs","","Return a copy truncated to the specified number of…",21,[[["u16"]],["self"]]],[8,"Datelike","","The common set of methods for date component.",null,null],[10,"year","","Returns the year number in the calendar date.",22,[[["self"]],["i32"]]],[11,"year_ce","","Returns the absolute year number starting from 1 with a…",22,[[["self"]]]],[10,"month","","Returns the month number starting from 1.",22,[[["self"]],["u32"]]],[10,"month0","","Returns the month number starting from 0.",22,[[["self"]],["u32"]]],[10,"day","","Returns the day of month starting from 1.",22,[[["self"]],["u32"]]],[10,"day0","","Returns the day of month starting from 0.",22,[[["self"]],["u32"]]],[10,"ordinal","","Returns the day of year starting from 1.",22,[[["self"]],["u32"]]],[10,"ordinal0","","Returns the day of year starting from 0.",22,[[["self"]],["u32"]]],[10,"weekday","","Returns the day of week.",22,[[["self"]],["weekday"]]],[10,"iso_week","","Returns the ISO week.",22,[[["self"]],["isoweek"]]],[10,"with_year","","Makes a new value with the year number changed.",22,[[["self"],["i32"]],["option"]]],[10,"with_month","","Makes a new value with the month number (starting from 1)…",22,[[["u32"],["self"]],["option"]]],[10,"with_month0","","Makes a new value with the month number (starting from 0)…",22,[[["u32"],["self"]],["option"]]],[10,"with_day","","Makes a new value with the day of month (starting from 1)…",22,[[["u32"],["self"]],["option"]]],[10,"with_day0","","Makes a new value with the day of month (starting from 0)…",22,[[["u32"],["self"]],["option"]]],[10,"with_ordinal","","Makes a new value with the day of year (starting from 1)…",22,[[["u32"],["self"]],["option"]]],[10,"with_ordinal0","","Makes a new value with the day of year (starting from 0)…",22,[[["u32"],["self"]],["option"]]],[11,"num_days_from_ce","","Counts the days in the proleptic Gregorian calendar, with…",22,[[["self"]],["i32"]]],[8,"Timelike","","The common set of methods for time component.",null,null],[10,"hour","","Returns the hour number from 0 to 23.",23,[[["self"]],["u32"]]],[11,"hour12","","Returns the hour number from 1 to 12 with a boolean flag,…",23,[[["self"]]]],[10,"minute","","Returns the minute number from 0 to 59.",23,[[["self"]],["u32"]]],[10,"second","","Returns the second number from 0 to 59.",23,[[["self"]],["u32"]]],[10,"nanosecond","","Returns the number of nanoseconds since the whole non-leap…",23,[[["self"]],["u32"]]],[10,"with_hour","","Makes a new value with the hour number changed.",23,[[["u32"],["self"]],["option"]]],[10,"with_minute","","Makes a new value with the minute number changed.",23,[[["u32"],["self"]],["option"]]],[10,"with_second","","Makes a new value with the second number changed.",23,[[["u32"],["self"]],["option"]]],[10,"with_nanosecond","","Makes a new value with nanoseconds since the whole…",23,[[["u32"],["self"]],["option"]]],[11,"num_seconds_from_midnight","","Returns the number of non-leap seconds past the last…",23,[[["self"]],["u32"]]],[11,"succ","","The next day in the week.",1,[[["self"]],["weekday"]]],[11,"pred","","The previous day in the week.",1,[[["self"]],["weekday"]]],[11,"number_from_monday","","Returns a day-of-week number starting from Monday = 1.…",1,[[["self"]],["u32"]]],[11,"number_from_sunday","","Returns a day-of-week number starting from Sunday = 1.",1,[[["self"]],["u32"]]],[11,"num_days_from_monday","","Returns a day-of-week number starting from Monday = 0.",1,[[["self"]],["u32"]]],[11,"num_days_from_sunday","","Returns a day-of-week number starting from Sunday = 0.",1,[[["self"]],["u32"]]],[11,"from","","",24,[[["t"]],["t"]]],[11,"into","","",24,[[],["u"]]],[11,"to_owned","","",24,[[["self"]],["t"]]],[11,"clone_into","","",24,[[["self"],["t"]]]],[11,"to_string","","",24,[[["self"]],["string"]]],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"try_into","","",24,[[],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"type_id","","",24,[[["self"]],["typeid"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[],["u"]]],[11,"to_owned","","",12,[[["self"]],["t"]]],[11,"clone_into","","",12,[[["self"],["t"]]]],[11,"to_string","","",12,[[["self"]],["string"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"try_into","","",12,[[],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"type_id","","",12,[[["self"]],["typeid"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"into","","",13,[[],["u"]]],[11,"to_owned","","",13,[[["self"]],["t"]]],[11,"clone_into","","",13,[[["self"],["t"]]]],[11,"to_string","","",13,[[["self"]],["string"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"try_into","","",13,[[],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"type_id","","",13,[[["self"]],["typeid"]]],[11,"from","","",25,[[["t"]],["t"]]],[11,"into","","",25,[[],["u"]]],[11,"to_owned","","",25,[[["self"]],["t"]]],[11,"clone_into","","",25,[[["self"],["t"]]]],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"try_into","","",25,[[],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"type_id","","",25,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"to_string","","",1,[[["self"]],["string"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","chrono::offset","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"to_string","","",3,[[["self"]],["string"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,[[["self"],["t"]]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,[[["self"],["t"]]]],[11,"to_string","","",5,[[["self"]],["string"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","chrono::naive","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,[[["self"],["t"]]]],[11,"to_string","","",8,[[["self"]],["string"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[],["u"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,[[["self"],["t"]]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[],["u"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,[[["self"],["t"]]]],[11,"to_string","","",10,[[["self"]],["string"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[],["u"]]],[11,"to_owned","","",11,[[["self"]],["t"]]],[11,"clone_into","","",11,[[["self"],["t"]]]],[11,"to_string","","",11,[[["self"]],["string"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"try_into","","",11,[[],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"type_id","","",11,[[["self"]],["typeid"]]],[11,"from","chrono::format","",14,[[["t"]],["t"]]],[11,"into","","",14,[[],["u"]]],[11,"to_owned","","",14,[[["self"]],["t"]]],[11,"clone_into","","",14,[[["self"],["t"]]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"try_into","","",14,[[],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"type_id","","",14,[[["self"]],["typeid"]]],[11,"from","","",26,[[["t"]],["t"]]],[11,"into","","",26,[[],["u"]]],[11,"to_owned","","",26,[[["self"]],["t"]]],[11,"clone_into","","",26,[[["self"],["t"]]]],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"try_into","","",26,[[],["result"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"type_id","","",26,[[["self"]],["typeid"]]],[11,"from","","",27,[[["t"]],["t"]]],[11,"into","","",27,[[],["u"]]],[11,"to_owned","","",27,[[["self"]],["t"]]],[11,"clone_into","","",27,[[["self"],["t"]]]],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"try_into","","",27,[[],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"type_id","","",27,[[["self"]],["typeid"]]],[11,"from","","",28,[[["t"]],["t"]]],[11,"into","","",28,[[],["u"]]],[11,"to_owned","","",28,[[["self"]],["t"]]],[11,"clone_into","","",28,[[["self"],["t"]]]],[11,"to_string","","",28,[[["self"]],["string"]]],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"try_into","","",28,[[],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"type_id","","",28,[[["self"]],["typeid"]]],[11,"from","","",20,[[["t"]],["t"]]],[11,"into","","",20,[[],["u"]]],[11,"to_string","","",20,[[["self"]],["string"]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"try_into","","",20,[[],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"type_id","","",20,[[["self"]],["typeid"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"into","","",15,[[],["u"]]],[11,"to_owned","","",15,[[["self"]],["t"]]],[11,"clone_into","","",15,[[["self"],["t"]]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"try_into","","",15,[[],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"type_id","","",15,[[["self"]],["typeid"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"into","","",16,[[],["u"]]],[11,"to_owned","","",16,[[["self"]],["t"]]],[11,"clone_into","","",16,[[["self"],["t"]]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"try_into","","",16,[[],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"type_id","","",16,[[["self"]],["typeid"]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"into","","",17,[[],["u"]]],[11,"to_owned","","",17,[[["self"]],["t"]]],[11,"clone_into","","",17,[[["self"],["t"]]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"try_into","","",17,[[],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"type_id","","",17,[[["self"]],["typeid"]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"into","","",18,[[],["u"]]],[11,"to_owned","","",18,[[["self"]],["t"]]],[11,"clone_into","","",18,[[["self"],["t"]]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"try_into","","",18,[[],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"type_id","","",18,[[["self"]],["typeid"]]],[11,"from","chrono::format::strftime","",19,[[["t"]],["t"]]],[11,"into","","",19,[[],["u"]]],[11,"into_iter","","",19,[[],["i"]]],[11,"to_owned","","",19,[[["self"]],["t"]]],[11,"clone_into","","",19,[[["self"],["t"]]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"try_into","","",19,[[],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"type_id","","",19,[[["self"]],["typeid"]]],[11,"div","chrono","",24,[[["i32"]],["duration"]]],[11,"fmt","","",24,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"add","","",24,[[["duration"]],["duration"]]],[11,"sub","","",24,[[["duration"]],["duration"]]],[11,"fmt","","",24,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"cmp","","",24,[[["duration"],["self"]],["ordering"]]],[11,"mul","","",24,[[["i32"]],["duration"]]],[11,"clone","","",24,[[["self"]],["duration"]]],[11,"eq","","",24,[[["duration"],["self"]],["bool"]]],[11,"ne","","",24,[[["duration"],["self"]],["bool"]]],[11,"hash","","",24,[[["self"],["__h"]]]],[11,"neg","","",24,[[],["duration"]]],[11,"partial_cmp","","",24,[[["duration"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",24,[[["duration"],["self"]],["bool"]]],[11,"le","","",24,[[["duration"],["self"]],["bool"]]],[11,"gt","","",24,[[["duration"],["self"]],["bool"]]],[11,"ge","","",24,[[["duration"],["self"]],["bool"]]],[11,"fix","chrono::offset","",3,[[["self"]],["fixedoffset"]]],[11,"fix","","",5,[[["self"]],["fixedoffset"]]],[11,"from_offset","","",3,[[["fixedoffset"]],["fixedoffset"]]],[11,"offset_from_local_date","","",3,[[["self"],["naivedate"]],[["localresult",["fixedoffset"]],["fixedoffset"]]]],[11,"offset_from_local_datetime","","",3,[[["self"],["naivedatetime"]],[["localresult",["fixedoffset"]],["fixedoffset"]]]],[11,"offset_from_utc_date","","",3,[[["self"],["naivedate"]],["fixedoffset"]]],[11,"offset_from_utc_datetime","","",3,[[["self"],["naivedatetime"]],["fixedoffset"]]],[11,"from_offset","","",4,[[["fixedoffset"]],["local"]]],[11,"offset_from_local_date","","",4,[[["self"],["naivedate"]],[["localresult",["fixedoffset"]],["fixedoffset"]]]],[11,"offset_from_local_datetime","","",4,[[["self"],["naivedatetime"]],[["localresult",["fixedoffset"]],["fixedoffset"]]]],[11,"offset_from_utc_date","","",4,[[["self"],["naivedate"]],["fixedoffset"]]],[11,"offset_from_utc_datetime","","",4,[[["self"],["naivedatetime"]],["fixedoffset"]]],[11,"from_local_date","","",4,[[["self"],["naivedate"]],[["localresult",["date"]],["date",["local"]]]]],[11,"from_local_datetime","","",4,[[["self"],["naivedatetime"]],[["datetime",["local"]],["localresult",["datetime"]]]]],[11,"from_utc_date","","",4,[[["self"],["naivedate"]],[["date",["local"]],["local"]]]],[11,"from_utc_datetime","","",4,[[["self"],["naivedatetime"]],[["datetime",["local"]],["local"]]]],[11,"from_offset","","",5,[[["utc"]],["utc"]]],[11,"offset_from_local_date","","",5,[[["self"],["naivedate"]],[["localresult",["utc"]],["utc"]]]],[11,"offset_from_local_datetime","","",5,[[["self"],["naivedatetime"]],[["localresult",["utc"]],["utc"]]]],[11,"offset_from_utc_date","","",5,[[["self"],["naivedate"]],["utc"]]],[11,"offset_from_utc_datetime","","",5,[[["self"],["naivedatetime"]],["utc"]]],[11,"year","chrono::naive","Returns the year number in the calendar date.",8,[[["self"]],["i32"]]],[11,"month","","Returns the month number starting from 1.",8,[[["self"]],["u32"]]],[11,"month0","","Returns the month number starting from 0.",8,[[["self"]],["u32"]]],[11,"day","","Returns the day of month starting from 1.",8,[[["self"]],["u32"]]],[11,"day0","","Returns the day of month starting from 0.",8,[[["self"]],["u32"]]],[11,"ordinal","","Returns the day of year starting from 1.",8,[[["self"]],["u32"]]],[11,"ordinal0","","Returns the day of year starting from 0.",8,[[["self"]],["u32"]]],[11,"weekday","","Returns the day of week.",8,[[["self"]],["weekday"]]],[11,"iso_week","","",8,[[["self"]],["isoweek"]]],[11,"with_year","","Makes a new `NaiveDate` with the year number changed.",8,[[["self"],["i32"]],[["naivedate"],["option",["naivedate"]]]]],[11,"with_month","","Makes a new `NaiveDate` with the month number (starting…",8,[[["u32"],["self"]],[["naivedate"],["option",["naivedate"]]]]],[11,"with_month0","","Makes a new `NaiveDate` with the month number (starting…",8,[[["u32"],["self"]],[["naivedate"],["option",["naivedate"]]]]],[11,"with_day","","Makes a new `NaiveDate` with the day of month (starting…",8,[[["u32"],["self"]],[["naivedate"],["option",["naivedate"]]]]],[11,"with_day0","","Makes a new `NaiveDate` with the day of month (starting…",8,[[["u32"],["self"]],[["naivedate"],["option",["naivedate"]]]]],[11,"with_ordinal","","Makes a new `NaiveDate` with the day of year (starting…",8,[[["u32"],["self"]],[["naivedate"],["option",["naivedate"]]]]],[11,"with_ordinal0","","Makes a new `NaiveDate` with the day of year (starting…",8,[[["u32"],["self"]],[["naivedate"],["option",["naivedate"]]]]],[11,"year","","Returns the year number in the calendar date.",11,[[["self"]],["i32"]]],[11,"month","","Returns the month number starting from 1.",11,[[["self"]],["u32"]]],[11,"month0","","Returns the month number starting from 0.",11,[[["self"]],["u32"]]],[11,"day","","Returns the day of month starting from 1.",11,[[["self"]],["u32"]]],[11,"day0","","Returns the day of month starting from 0.",11,[[["self"]],["u32"]]],[11,"ordinal","","Returns the day of year starting from 1.",11,[[["self"]],["u32"]]],[11,"ordinal0","","Returns the day of year starting from 0.",11,[[["self"]],["u32"]]],[11,"weekday","","Returns the day of week.",11,[[["self"]],["weekday"]]],[11,"iso_week","","",11,[[["self"]],["isoweek"]]],[11,"with_year","","Makes a new `NaiveDateTime` with the year number changed.",11,[[["self"],["i32"]],[["option",["naivedatetime"]],["naivedatetime"]]]],[11,"with_month","","Makes a new `NaiveDateTime` with the month number…",11,[[["u32"],["self"]],[["option",["naivedatetime"]],["naivedatetime"]]]],[11,"with_month0","","Makes a new `NaiveDateTime` with the month number…",11,[[["u32"],["self"]],[["option",["naivedatetime"]],["naivedatetime"]]]],[11,"with_day","","Makes a new `NaiveDateTime` with the day of month…",11,[[["u32"],["self"]],[["option",["naivedatetime"]],["naivedatetime"]]]],[11,"with_day0","","Makes a new `NaiveDateTime` with the day of month…",11,[[["u32"],["self"]],[["option",["naivedatetime"]],["naivedatetime"]]]],[11,"with_ordinal","","Makes a new `NaiveDateTime` with the day of year (starting…",11,[[["u32"],["self"]],[["option",["naivedatetime"]],["naivedatetime"]]]],[11,"with_ordinal0","","Makes a new `NaiveDateTime` with the day of year (starting…",11,[[["u32"],["self"]],[["option",["naivedatetime"]],["naivedatetime"]]]],[11,"year","chrono","",12,[[["self"]],["i32"]]],[11,"month","","",12,[[["self"]],["u32"]]],[11,"month0","","",12,[[["self"]],["u32"]]],[11,"day","","",12,[[["self"]],["u32"]]],[11,"day0","","",12,[[["self"]],["u32"]]],[11,"ordinal","","",12,[[["self"]],["u32"]]],[11,"ordinal0","","",12,[[["self"]],["u32"]]],[11,"weekday","","",12,[[["self"]],["weekday"]]],[11,"iso_week","","",12,[[["self"]],["isoweek"]]],[11,"with_year","","",12,[[["self"],["i32"]],[["date"],["option",["date"]]]]],[11,"with_month","","",12,[[["u32"],["self"]],[["date"],["option",["date"]]]]],[11,"with_month0","","",12,[[["u32"],["self"]],[["date"],["option",["date"]]]]],[11,"with_day","","",12,[[["u32"],["self"]],[["date"],["option",["date"]]]]],[11,"with_day0","","",12,[[["u32"],["self"]],[["date"],["option",["date"]]]]],[11,"with_ordinal","","",12,[[["u32"],["self"]],[["date"],["option",["date"]]]]],[11,"with_ordinal0","","",12,[[["u32"],["self"]],[["date"],["option",["date"]]]]],[11,"year","","",13,[[["self"]],["i32"]]],[11,"month","","",13,[[["self"]],["u32"]]],[11,"month0","","",13,[[["self"]],["u32"]]],[11,"day","","",13,[[["self"]],["u32"]]],[11,"day0","","",13,[[["self"]],["u32"]]],[11,"ordinal","","",13,[[["self"]],["u32"]]],[11,"ordinal0","","",13,[[["self"]],["u32"]]],[11,"weekday","","",13,[[["self"]],["weekday"]]],[11,"iso_week","","",13,[[["self"]],["isoweek"]]],[11,"with_year","","",13,[[["self"],["i32"]],[["datetime"],["option",["datetime"]]]]],[11,"with_month","","",13,[[["u32"],["self"]],[["datetime"],["option",["datetime"]]]]],[11,"with_month0","","",13,[[["u32"],["self"]],[["datetime"],["option",["datetime"]]]]],[11,"with_day","","",13,[[["u32"],["self"]],[["datetime"],["option",["datetime"]]]]],[11,"with_day0","","",13,[[["u32"],["self"]],[["datetime"],["option",["datetime"]]]]],[11,"with_ordinal","","",13,[[["u32"],["self"]],[["datetime"],["option",["datetime"]]]]],[11,"with_ordinal0","","",13,[[["u32"],["self"]],[["datetime"],["option",["datetime"]]]]],[11,"hour","chrono::naive","Returns the hour number from 0 to 23.",10,[[["self"]],["u32"]]],[11,"minute","","Returns the minute number from 0 to 59.",10,[[["self"]],["u32"]]],[11,"second","","Returns the second number from 0 to 59.",10,[[["self"]],["u32"]]],[11,"nanosecond","","Returns the number of nanoseconds since the whole non-leap…",10,[[["self"]],["u32"]]],[11,"with_hour","","Makes a new `NaiveTime` with the hour number changed.",10,[[["u32"],["self"]],[["option",["naivetime"]],["naivetime"]]]],[11,"with_minute","","Makes a new `NaiveTime` with the minute number changed.",10,[[["u32"],["self"]],[["option",["naivetime"]],["naivetime"]]]],[11,"with_second","","Makes a new `NaiveTime` with the second number changed.",10,[[["u32"],["self"]],[["option",["naivetime"]],["naivetime"]]]],[11,"with_nanosecond","","Makes a new `NaiveTime` with nanoseconds since the whole…",10,[[["u32"],["self"]],[["option",["naivetime"]],["naivetime"]]]],[11,"num_seconds_from_midnight","","Returns the number of non-leap seconds past the last…",10,[[["self"]],["u32"]]],[11,"hour","","Returns the hour number from 0 to 23.",11,[[["self"]],["u32"]]],[11,"minute","","Returns the minute number from 0 to 59.",11,[[["self"]],["u32"]]],[11,"second","","Returns the second number from 0 to 59.",11,[[["self"]],["u32"]]],[11,"nanosecond","","Returns the number of nanoseconds since the whole non-leap…",11,[[["self"]],["u32"]]],[11,"with_hour","","Makes a new `NaiveDateTime` with the hour number changed.",11,[[["u32"],["self"]],[["option",["naivedatetime"]],["naivedatetime"]]]],[11,"with_minute","","Makes a new `NaiveDateTime` with the minute number changed.",11,[[["u32"],["self"]],[["option",["naivedatetime"]],["naivedatetime"]]]],[11,"with_second","","Makes a new `NaiveDateTime` with the second number changed.",11,[[["u32"],["self"]],[["option",["naivedatetime"]],["naivedatetime"]]]],[11,"with_nanosecond","","Makes a new `NaiveDateTime` with nanoseconds since the…",11,[[["u32"],["self"]],[["option",["naivedatetime"]],["naivedatetime"]]]],[11,"hour","chrono","",13,[[["self"]],["u32"]]],[11,"minute","","",13,[[["self"]],["u32"]]],[11,"second","","",13,[[["self"]],["u32"]]],[11,"nanosecond","","",13,[[["self"]],["u32"]]],[11,"with_hour","","",13,[[["u32"],["self"]],[["datetime"],["option",["datetime"]]]]],[11,"with_minute","","",13,[[["u32"],["self"]],[["datetime"],["option",["datetime"]]]]],[11,"with_second","","",13,[[["u32"],["self"]],[["datetime"],["option",["datetime"]]]]],[11,"with_nanosecond","","",13,[[["u32"],["self"]],[["datetime"],["option",["datetime"]]]]],[11,"from","","Convert this `DateTime<Utc>` instance into a…",13,[[["datetime",["utc"]],["utc"]],["self"]]],[11,"from","","Convert this `DateTime<Utc>` instance into a…",13,[[["datetime",["utc"]],["utc"]],["self"]]],[11,"from","","Convert this `DateTime<FixedOffset>` instance into a…",13,[[["datetime",["fixedoffset"]],["fixedoffset"]],["self"]]],[11,"from","","Convert this `DateTime<FixedOffset>` instance into a…",13,[[["datetime",["fixedoffset"]],["fixedoffset"]],["self"]]],[11,"from","","Convert this `DateTime<Local>` instance into a…",13,[[["datetime",["local"]],["local"]],["self"]]],[11,"from","","Convert this `DateTime<Local>` instance into a…",13,[[["datetime",["local"]],["local"]],["self"]]],[11,"from","","",13,[[["systemtime"]],[["datetime",["utc"]],["utc"]]]],[11,"from","","",13,[[["systemtime"]],[["datetime",["local"]],["local"]]]],[11,"next","chrono::format::strftime","",19,[[["self"]],[["option",["item"]],["item"]]]],[11,"clone","chrono::offset","",2,[[["self"]],["localresult"]]],[11,"clone","","",3,[[["self"]],["fixedoffset"]]],[11,"clone","","",4,[[["self"]],["local"]]],[11,"clone","","",5,[[["self"]],["utc"]]],[11,"clone","chrono::naive","",8,[[["self"]],["naivedate"]]],[11,"clone","","",9,[[["self"]],["isoweek"]]],[11,"clone","","",10,[[["self"]],["naivetime"]]],[11,"clone","","",11,[[["self"]],["naivedatetime"]]],[11,"clone","chrono","",12,[[["self"]],["date"]]],[11,"clone","","",0,[[["self"]],["secondsformat"]]],[11,"clone","","",13,[[["self"]],["datetime"]]],[11,"clone","chrono::format","",15,[[["self"]],["pad"]]],[11,"clone","","",16,[[["self"]],["numeric"]]],[11,"clone","","",26,[[["self"]],["self"]]],[11,"clone","","",17,[[["self"]],["fixed"]]],[11,"clone","","",27,[[["self"]],["internalfixed"]]],[11,"clone","","",18,[[["self"]],["item"]]],[11,"clone","","",28,[[["self"]],["parseerror"]]],[11,"clone","","",14,[[["self"]],["parsed"]]],[11,"clone","chrono::format::strftime","",19,[[["self"]],["strftimeitems"]]],[11,"clone","chrono","",1,[[["self"]],["weekday"]]],[11,"clone","","",25,[[["self"]],["parseweekdayerror"]]],[11,"default","chrono::format","",14,[[],["parsed"]]],[11,"cmp","chrono::naive","",8,[[["self"],["naivedate"]],["ordering"]]],[11,"cmp","","",9,[[["isoweek"],["self"]],["ordering"]]],[11,"cmp","","",10,[[["naivetime"],["self"]],["ordering"]]],[11,"cmp","","",11,[[["self"],["naivedatetime"]],["ordering"]]],[11,"cmp","chrono","",12,[[["date"],["self"]],["ordering"]]],[11,"cmp","","",13,[[["datetime"],["self"]],["ordering"]]],[11,"eq","chrono::offset","",2,[[["localresult"],["self"]],["bool"]]],[11,"ne","","",2,[[["localresult"],["self"]],["bool"]]],[11,"eq","","",3,[[["fixedoffset"],["self"]],["bool"]]],[11,"ne","","",3,[[["fixedoffset"],["self"]],["bool"]]],[11,"eq","","",5,[[["utc"],["self"]],["bool"]]],[11,"eq","chrono::naive","",8,[[["self"],["naivedate"]],["bool"]]],[11,"ne","","",8,[[["self"],["naivedate"]],["bool"]]],[11,"eq","","",9,[[["isoweek"],["self"]],["bool"]]],[11,"ne","","",9,[[["isoweek"],["self"]],["bool"]]],[11,"eq","","",10,[[["naivetime"],["self"]],["bool"]]],[11,"ne","","",10,[[["naivetime"],["self"]],["bool"]]],[11,"eq","","",11,[[["self"],["naivedatetime"]],["bool"]]],[11,"ne","","",11,[[["self"],["naivedatetime"]],["bool"]]],[11,"eq","chrono","",12,[[["date"],["self"]],["bool"]]],[11,"eq","","",0,[[["self"],["secondsformat"]],["bool"]]],[11,"eq","","",13,[[["datetime"],["self"]],["bool"]]],[11,"eq","chrono::format","",15,[[["pad"],["self"]],["bool"]]],[11,"eq","","",16,[[["numeric"],["self"]],["bool"]]],[11,"ne","","",16,[[["numeric"],["self"]],["bool"]]],[11,"eq","","",26,[[["self"],["internalnumeric"]],["bool"]]],[11,"eq","","",17,[[["self"],["fixed"]],["bool"]]],[11,"ne","","",17,[[["self"],["fixed"]],["bool"]]],[11,"eq","","",27,[[["self"],["internalfixed"]],["bool"]]],[11,"ne","","",27,[[["self"],["internalfixed"]],["bool"]]],[11,"eq","","",18,[[["item"],["self"]],["bool"]]],[11,"ne","","",18,[[["item"],["self"]],["bool"]]],[11,"eq","","",28,[[["parseerror"],["self"]],["bool"]]],[11,"ne","","",28,[[["parseerror"],["self"]],["bool"]]],[11,"eq","","",14,[[["self"],["parsed"]],["bool"]]],[11,"ne","","",14,[[["self"],["parsed"]],["bool"]]],[11,"eq","chrono","",1,[[["weekday"],["self"]],["bool"]]],[11,"eq","","",25,[[["parseweekdayerror"],["self"]],["bool"]]],[11,"ne","","",25,[[["parseweekdayerror"],["self"]],["bool"]]],[11,"partial_cmp","chrono::naive","",8,[[["self"],["naivedate"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",8,[[["self"],["naivedate"]],["bool"]]],[11,"le","","",8,[[["self"],["naivedate"]],["bool"]]],[11,"gt","","",8,[[["self"],["naivedate"]],["bool"]]],[11,"ge","","",8,[[["self"],["naivedate"]],["bool"]]],[11,"partial_cmp","","",9,[[["isoweek"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",9,[[["isoweek"],["self"]],["bool"]]],[11,"le","","",9,[[["isoweek"],["self"]],["bool"]]],[11,"gt","","",9,[[["isoweek"],["self"]],["bool"]]],[11,"ge","","",9,[[["isoweek"],["self"]],["bool"]]],[11,"partial_cmp","","",10,[[["naivetime"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",10,[[["naivetime"],["self"]],["bool"]]],[11,"le","","",10,[[["naivetime"],["self"]],["bool"]]],[11,"gt","","",10,[[["naivetime"],["self"]],["bool"]]],[11,"ge","","",10,[[["naivetime"],["self"]],["bool"]]],[11,"partial_cmp","","",11,[[["self"],["naivedatetime"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",11,[[["self"],["naivedatetime"]],["bool"]]],[11,"le","","",11,[[["self"],["naivedatetime"]],["bool"]]],[11,"gt","","",11,[[["self"],["naivedatetime"]],["bool"]]],[11,"ge","","",11,[[["self"],["naivedatetime"]],["bool"]]],[11,"partial_cmp","chrono","",12,[[["date"],["self"]],[["ordering"],["option",["ordering"]]]]],[11,"partial_cmp","","Compare two DateTimes based on their true time, ignoring…",13,[[["datetime"],["self"]],[["ordering"],["option",["ordering"]]]]],[11,"fmt","chrono::offset","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","chrono::naive","",8,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",9,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",10,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",11,[[["formatter"],["self"]],["result"]]],[11,"fmt","chrono","",12,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",13,[[["formatter"],["self"]],["result"]]],[11,"fmt","chrono::format","",15,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",16,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",26,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",17,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",27,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",18,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",28,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",14,[[["formatter"],["self"]],["result"]]],[11,"fmt","chrono::format::strftime","",19,[[["formatter"],["self"]],["result"]]],[11,"fmt","chrono::format","",20,[[["formatter"],["self"]],["result"]]],[11,"fmt","chrono","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",25,[[["formatter"],["self"]],["result"]]],[11,"fmt","chrono::offset","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","chrono::naive","",8,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",10,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",11,[[["formatter"],["self"]],["result"]]],[11,"fmt","chrono","",12,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",13,[[["formatter"],["self"]],["result"]]],[11,"fmt","chrono::format","",28,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",20,[[["formatter"],["self"]],["result"]]],[11,"fmt","chrono","",1,[[["formatter"],["self"]],["result"]]],[11,"sub","chrono::naive","",10,[[["fixedoffset"]],["naivetime"]]],[11,"sub","","",11,[[["fixedoffset"]],["naivedatetime"]]],[11,"sub","chrono","",13,[[["fixedoffset"]],["datetime"]]],[11,"sub","chrono::naive","",8,[[["oldduration"]],["naivedate"]]],[11,"sub","","",8,[[["naivedate"]],["oldduration"]]],[11,"sub","","",10,[[["oldduration"]],["naivetime"]]],[11,"sub","","",10,[[["naivetime"]],["oldduration"]]],[11,"sub","","",11,[[["oldduration"]],["naivedatetime"]]],[11,"sub","","",11,[[["naivedatetime"]],["oldduration"]]],[11,"sub","chrono","",12,[[["oldduration"]],["date"]]],[11,"sub","","",12,[[["date"]],["oldduration"]]],[11,"sub","","",13,[[["oldduration"]],["datetime"]]],[11,"sub","","",13,[[["datetime"]],["oldduration"]]],[11,"add","chrono::naive","",10,[[["fixedoffset"]],["naivetime"]]],[11,"add","","",11,[[["fixedoffset"]],["naivedatetime"]]],[11,"add","chrono","",13,[[["fixedoffset"]],["datetime"]]],[11,"add","chrono::naive","",8,[[["oldduration"]],["naivedate"]]],[11,"add","","",10,[[["oldduration"]],["naivetime"]]],[11,"add","","",11,[[["oldduration"]],["naivedatetime"]]],[11,"add","chrono","",12,[[["oldduration"]],["date"]]],[11,"add","","",13,[[["oldduration"]],["datetime"]]],[11,"add_assign","chrono::naive","",8,[[["self"],["oldduration"]]]],[11,"add_assign","","",10,[[["self"],["oldduration"]]]],[11,"add_assign","","",11,[[["self"],["oldduration"]]]],[11,"sub_assign","","",8,[[["self"],["oldduration"]]]],[11,"sub_assign","","",10,[[["self"],["oldduration"]]]],[11,"sub_assign","","",11,[[["self"],["oldduration"]]]],[11,"hash","chrono::offset","",2,[[["self"],["__h"]]]],[11,"hash","","",3,[[["self"],["__h"]]]],[11,"hash","chrono::naive","",8,[[["self"],["__h"]]]],[11,"hash","","",10,[[["self"],["h"]]]],[11,"hash","","",11,[[["self"],["h"]]]],[11,"hash","chrono","",12,[[["self"],["h"]]]],[11,"hash","","",13,[[["self"],["h"]]]],[11,"hash","","",1,[[["self"],["__h"]]]],[11,"from_str","chrono::naive","",8,[[["str"]],[["naivedate"],["parseresult",["naivedate"]]]]],[11,"from_str","","",10,[[["str"]],[["parseresult",["naivetime"]],["naivetime"]]]],[11,"from_str","","",11,[[["str"]],[["naivedatetime"],["parseresult",["naivedatetime"]]]]],[11,"from_str","chrono","",13,[[["str"]],[["datetime",["utc"]],["parseresult",["datetime"]]]]],[11,"from_str","","",13,[[["str"]],[["datetime",["local"]],["parseresult",["datetime"]]]]],[11,"from_str","","",13,[[["str"]],[["parseresult",["datetime"]],["datetime",["fixedoffset"]]]]],[11,"from_str","","",1,[[["str"]],["result"]]],[11,"description","chrono::format","",28,[[["self"]],["str"]]],[11,"from_i64","chrono","",1,[[["i64"]],[["weekday"],["option",["weekday"]]]]],[11,"from_u64","","",1,[[["u64"]],[["weekday"],["option",["weekday"]]]]],[11,"weeks","","Makes a new `Duration` with given number of weeks.…",24,[[["i64"]],["duration"]]],[11,"days","","Makes a new `Duration` with given number of days.…",24,[[["i64"]],["duration"]]],[11,"hours","","Makes a new `Duration` with given number of hours.…",24,[[["i64"]],["duration"]]],[11,"minutes","","Makes a new `Duration` with given number of minutes.…",24,[[["i64"]],["duration"]]],[11,"seconds","","Makes a new `Duration` with given number of seconds.…",24,[[["i64"]],["duration"]]],[11,"milliseconds","","Makes a new `Duration` with given number of milliseconds.",24,[[["i64"]],["duration"]]],[11,"microseconds","","Makes a new `Duration` with given number of microseconds.",24,[[["i64"]],["duration"]]],[11,"nanoseconds","","Makes a new `Duration` with given number of nanoseconds.",24,[[["i64"]],["duration"]]],[11,"span","","Runs a closure, returning the duration of time it took to…",24,[[["f"]],["duration"]]],[11,"num_weeks","","Returns the total number of whole weeks in the duration.",24,[[["self"]],["i64"]]],[11,"num_days","","Returns the total number of whole days in the duration.",24,[[["self"]],["i64"]]],[11,"num_hours","","Returns the total number of whole hours in the duration.",24,[[["self"]],["i64"]]],[11,"num_minutes","","Returns the total number of whole minutes in the duration.",24,[[["self"]],["i64"]]],[11,"num_seconds","","Returns the total number of whole seconds in the duration.",24,[[["self"]],["i64"]]],[11,"num_milliseconds","","Returns the total number of whole milliseconds in the…",24,[[["self"]],["i64"]]],[11,"num_microseconds","","Returns the total number of whole microseconds in the…",24,[[["self"]],[["i64"],["option",["i64"]]]]],[11,"num_nanoseconds","","Returns the total number of whole nanoseconds in the…",24,[[["self"]],[["i64"],["option",["i64"]]]]],[11,"checked_add","","Add two durations, returning `None` if overflow occurred.",24,[[["duration"],["self"]],[["option",["duration"]],["duration"]]]],[11,"checked_sub","","Subtract two durations, returning `None` if overflow…",24,[[["duration"],["self"]],[["option",["duration"]],["duration"]]]],[11,"min_value","","The minimum possible `Duration`: `i64::MIN` milliseconds.",24,[[],["duration"]]],[11,"max_value","","The maximum possible `Duration`: `i64::MAX` milliseconds.",24,[[],["duration"]]],[11,"zero","","A duration where the stored seconds and nanoseconds are…",24,[[],["duration"]]],[11,"is_zero","","Returns `true` if the duration equals `Duration::zero()`.",24,[[["self"]],["bool"]]],[11,"from_std","","Creates a `time::Duration` object from `std::time::Duration`",24,[[["duration"]],[["outofrangeerror"],["duration"],["result",["duration","outofrangeerror"]]]]],[11,"to_std","","Creates a `std::time::Duration` object from `time::Duration`",24,[[["self"]],[["duration"],["outofrangeerror"],["result",["duration","outofrangeerror"]]]]]],"p":[[4,"SecondsFormat"],[4,"Weekday"],[4,"LocalResult"],[3,"FixedOffset"],[3,"Local"],[3,"Utc"],[8,"Offset"],[8,"TimeZone"],[3,"NaiveDate"],[3,"IsoWeek"],[3,"NaiveTime"],[3,"NaiveDateTime"],[3,"Date"],[3,"DateTime"],[3,"Parsed"],[4,"Pad"],[4,"Numeric"],[4,"Fixed"],[4,"Item"],[3,"StrftimeItems"],[3,"DelayedFormat"],[8,"SubsecRound"],[8,"Datelike"],[8,"Timelike"],[3,"Duration"],[3,"ParseWeekdayError"],[3,"InternalNumeric"],[3,"InternalFixed"],[3,"ParseError"]]};
searchIndex["clap"] = {"doc":"`clap` is a simple-to-use, efficient, and full-featured…","i":[[3,"App","clap","Used to create a representation of a command line program…",null,null],[3,"Arg","","The abstract representation of a command line argument.…",null,null],[3,"ArgGroup","","`ArgGroup`s are a family of related [arguments] and way…",null,null],[3,"ArgMatches","","Used to get information about the arguments that were…",null,null],[3,"OsValues","","An iterator for getting multiple values out of an argument…",null,null],[3,"SubCommand","","The abstract representation of a command line subcommand.",null,null],[3,"Values","","An iterator for getting multiple values out of an argument…",null,null],[3,"Error","","Command Line Argument Parser Error",null,null],[12,"message","","Formatted error message",0,null],[12,"kind","","The type of error",0,null],[12,"info","","Any additional information passed along, such as the…",0,null],[4,"AppSettings","","Application level settings, which affect how [`App`]…",null,null],[13,"AllowInvalidUtf8","","Specifies that any invalid UTF-8 code points should not be…",1,null],[13,"AllArgsOverrideSelf","","Essentially sets [`Arg::overrides_with(\"itself\")`] for all…",1,null],[13,"AllowLeadingHyphen","","Specifies that leading hyphens are allowed in argument…",1,null],[13,"AllowNegativeNumbers","","Allows negative numbers to pass as values. This is similar…",1,null],[13,"AllowMissingPositional","","Allows one to implement two styles of CLIs where…",1,null],[13,"AllowExternalSubcommands","","Specifies that an unexpected positional argument, which…",1,null],[13,"ArgsNegateSubcommands","","Specifies that use of a valid [argument] negates…",1,null],[13,"ArgRequiredElseHelp","","Specifies that the help text should be displayed (and then…",1,null],[13,"ColoredHelp","","Uses colorized help messages.",1,null],[13,"ColorAuto","","Enables colored output only when the output is going to a…",1,null],[13,"ColorAlways","","Enables colored output regardless of whether or not the…",1,null],[13,"ColorNever","","Disables colored output no matter if the output is going…",1,null],[13,"DontCollapseArgsInUsage","","Disables the automatic collapsing of positional args into…",1,null],[13,"DontDelimitTrailingValues","","Disables the automatic delimiting of values when `--` or…",1,null],[13,"DisableHelpFlags","","Disables `-h` and `--help` [`App`] without affecting any…",1,null],[13,"DisableHelpSubcommand","","Disables the `help` subcommand",1,null],[13,"DisableVersion","","Disables `-V` and `--version` [`App`] without affecting…",1,null],[13,"DeriveDisplayOrder","","Displays the arguments and [`SubCommand`]s in the help…",1,null],[13,"GlobalVersion","","Specifies to use the version of the current command for…",1,null],[13,"Hidden","","Specifies that this [`SubCommand`] should be hidden from…",1,null],[13,"HidePossibleValuesInHelp","","Tells `clap` not to print possible values when displaying…",1,null],[13,"InferSubcommands","","Tries to match unknown args to partial [`subcommands`] or…",1,null],[13,"NoBinaryName","","Specifies that the parser should not assume the first…",1,null],[13,"NextLineHelp","","Places the help string for all arguments on the line after…",1,null],[13,"PropagateGlobalValuesDown","","DEPRECATED: This setting is no longer required in order to…",1,null],[13,"SubcommandsNegateReqs","","Allows [`SubCommand`]s to override all requirements of the…",1,null],[13,"SubcommandRequiredElseHelp","","Specifies that the help text should be displayed (before…",1,null],[13,"StrictUtf8","","Specifies that any invalid UTF-8 code points should be…",1,null],[13,"SubcommandRequired","","Allows specifying that if no [`SubCommand`] is present at…",1,null],[13,"TrailingVarArg","","Specifies that the final positional argument is a \"VarArg\"…",1,null],[13,"UnifiedHelpMessage","","Groups flags and options together, presenting a more…",1,null],[13,"VersionlessSubcommands","","Disables `-V` and `--version` for all [`SubCommand`]s…",1,null],[13,"WaitOnError","","Will display a message \"Press [ENTER]/[RETURN] to…",1,null],[4,"ArgSettings","","Various settings that apply to arguments and may be set,…",null,null],[13,"Required","","The argument must be used",2,null],[13,"Multiple","","The argument may be used multiple times such as `--flag…",2,null],[13,"EmptyValues","","The argument allows empty values such as `--option \"\"`",2,null],[13,"Global","","The argument should be propagated down through all child…",2,null],[13,"Hidden","","The argument should not be shown in help text",2,null],[13,"TakesValue","","The argument accepts a value, such as `--option <value>`",2,null],[13,"UseValueDelimiter","","Determines if the argument allows values to be grouped via…",2,null],[13,"NextLineHelp","","Prints the help text on the line after the argument",2,null],[13,"RequireDelimiter","","Requires the use of a value delimiter for all multiple…",2,null],[13,"HidePossibleValues","","Hides the possible values from the help string",2,null],[13,"AllowLeadingHyphen","","Allows vals that start with a '-'",2,null],[13,"RequireEquals","","Require options use `--option=val` syntax",2,null],[13,"Last","","Specifies that the arg is the last positional argument and…",2,null],[13,"HideDefaultValue","","Hides the default value from the help string",2,null],[13,"CaseInsensitive","","Makes `Arg::possible_values` case insensitive",2,null],[13,"HideEnvValues","","Hides ENV values in the help message",2,null],[13,"HiddenShortHelp","","The argument should not be shown in short help text",2,null],[13,"HiddenLongHelp","","The argument should not be shown in long help text",2,null],[4,"Shell","","Describes which shell to produce a completions file for",null,null],[13,"Bash","","Generates a .bash completion file for the Bourne Again…",3,null],[13,"Fish","","Generates a .fish completion file for the Friendly…",3,null],[13,"Zsh","","Generates a completion file for the Z SHell (ZSH)",3,null],[13,"PowerShell","","Generates a completion file for PowerShell",3,null],[13,"Elvish","","Generates a completion file for Elvish",3,null],[4,"ErrorKind","","Command line argument parser kind of error",null,null],[13,"InvalidValue","","Occurs when an [`Arg`] has a set of possible values, and…",4,null],[13,"UnknownArgument","","Occurs when a user provides a flag, option, argument or…",4,null],[13,"InvalidSubcommand","","Occurs when the user provides an unrecognized…",4,null],[13,"UnrecognizedSubcommand","","Occurs when the user provides an unrecognized…",4,null],[13,"EmptyValue","","Occurs when the user provides an empty value for an option…",4,null],[13,"ValueValidation","","Occurs when the user provides a value for an argument with…",4,null],[13,"TooManyValues","","Occurs when a user provides more values for an argument…",4,null],[13,"TooFewValues","","Occurs when the user provides fewer values for an argument…",4,null],[13,"WrongNumberOfValues","","Occurs when the user provides a different number of values…",4,null],[13,"ArgumentConflict","","Occurs when the user provides two values which conflict…",4,null],[13,"MissingRequiredArgument","","Occurs when the user does not provide one or more required…",4,null],[13,"MissingSubcommand","","Occurs when a subcommand is required (as defined by…",4,null],[13,"MissingArgumentOrSubcommand","","Occurs when either an argument or [`SubCommand`] is…",4,null],[13,"UnexpectedMultipleUsage","","Occurs when the user provides multiple values to an…",4,null],[13,"InvalidUtf8","","Occurs when the user provides a value containing invalid…",4,null],[13,"HelpDisplayed","","Not a true \"error\" as it means `--help` or similar was…",4,null],[13,"VersionDisplayed","","Not a true \"error\" as it means `--version` or similar was…",4,null],[13,"ArgumentNotFound","","Occurs when using the [`value_t!`] and [`values_t!`]…",4,null],[13,"Io","","Represents an [I/O error]. Can occur when writing to…",4,null],[13,"Format","","Represents a [Format error] (which is a part of…",4,null],[11,"new","","Creates a new instance of an application requiring a name.…",5,[[["into",["string"]],["string"]],["self"]]],[11,"get_name","","Get the name of the app",5,[[["self"]],["str"]]],[11,"get_bin_name","","Get the name of the binary",5,[[["self"]],[["str"],["option",["str"]]]]],[11,"with_defaults","","Creates a new instance of an application requiring a name,…",5,[[["into",["string"]],["string"]],["self"]]],[11,"author","","Sets a string of author(s) that will be displayed to the…",5,[[["str"],["into",["str"]]],["self"]]],[11,"bin_name","","Overrides the system-determined binary name. This should…",5,[[["into",["string"]],["string"]],["self"]]],[11,"about","","Sets a string describing what the program does. This will…",5,[[["str"],["into",["str"]]],["self"]]],[11,"long_about","","Sets a string describing what the program does. This will…",5,[[["str"],["into",["str"]]],["self"]]],[11,"name","","Sets the program's name. This will be displayed when…",5,[[["into",["string"]],["string"]],["self"]]],[11,"after_help","","Adds additional help information to be displayed in…",5,[[["str"],["into",["str"]]],["self"]]],[11,"before_help","","Adds additional help information to be displayed in…",5,[[["str"],["into",["str"]]],["self"]]],[11,"version","","Sets a string of the version number to be displayed when…",5,[[["str"],["into",["str"]]],["self"]]],[11,"long_version","","Sets a string of the version number to be displayed when…",5,[[["str"],["into",["str"]]],["self"]]],[11,"usage","","Sets a custom usage string to override the auto-generated…",5,[[["str"],["into",["str"]]],["self"]]],[11,"help","","Sets a custom help message and overrides the…",5,[[["str"],["into",["str"]]],["self"]]],[11,"help_short","","Sets the [`short`] for the auto-generated `help` argument.",5,[[["str"],["asref",["str"]]],["self"]]],[11,"version_short","","Sets the [`short`] for the auto-generated `version`…",5,[[["str"],["asref",["str"]]],["self"]]],[11,"help_message","","Sets the help text for the auto-generated `help` argument.",5,[[["str"],["into",["str"]]],["self"]]],[11,"version_message","","Sets the help text for the auto-generated `version`…",5,[[["str"],["into",["str"]]],["self"]]],[11,"template","","Sets the help template to be used, overriding the default…",5,[[["str"],["into",["str"]]],["self"]]],[11,"setting","","Enables a single command, or [`SubCommand`], level settings.",5,[[["appsettings"]],["self"]]],[11,"settings","","Enables multiple command, or [`SubCommand`], level settings",5,[[],["self"]]],[11,"global_setting","","Enables a single setting that is propagated down through…",5,[[["appsettings"]],["self"]]],[11,"global_settings","","Enables multiple settings which are propagated down…",5,[[],["self"]]],[11,"unset_setting","","Disables a single command, or [`SubCommand`], level setting.",5,[[["appsettings"]],["self"]]],[11,"unset_settings","","Disables multiple command, or [`SubCommand`], level…",5,[[],["self"]]],[11,"set_term_width","","Sets the terminal width at which to wrap help messages.…",5,[[["usize"]],["self"]]],[11,"max_term_width","","Sets the max terminal width at which to wrap help…",5,[[["usize"]],["self"]]],[11,"arg","","Adds an [argument] to the list of valid possibilities.",5,[[["arg"],["into",["arg"]]],["self"]]],[11,"args","","Adds multiple [arguments] to the list of valid possibilities",5,[[],["self"]]],[11,"arg_from_usage","","A convenience method for adding a single [argument] from a…",5,[[["str"]],["self"]]],[11,"args_from_usage","","Adds multiple [arguments] at once from a usage string, one…",5,[[["str"]],["self"]]],[11,"alias","","Allows adding a [`SubCommand`] alias, which function as…",5,[[["str"],["into",["str"]]],["self"]]],[11,"aliases","","Allows adding [`SubCommand`] aliases, which function as…",5,[[],["self"]]],[11,"visible_alias","","Allows adding a [`SubCommand`] alias that functions…",5,[[["str"],["into",["str"]]],["self"]]],[11,"visible_aliases","","Allows adding multiple [`SubCommand`] aliases that…",5,[[],["self"]]],[11,"group","","Adds an [`ArgGroup`] to the application. [`ArgGroup`]s are…",5,[[["arggroup"]],["self"]]],[11,"groups","","Adds multiple [`ArgGroup`]s to the [`App`] at once.",5,[[],["self"]]],[11,"subcommand","","Adds a [`SubCommand`] to the list of valid possibilities.…",5,[[["app"]],["self"]]],[11,"subcommands","","Adds multiple subcommands to the list of valid…",5,[[["i"]],["self"]]],[11,"display_order","","Allows custom ordering of [`SubCommand`]s within the help…",5,[[["usize"]],["self"]]],[11,"print_help","","Prints the full help message to [`io::stdout()`] using a…",5,[[["self"]],["clapresult"]]],[11,"print_long_help","","Prints the full help message to [`io::stdout()`] using a…",5,[[["self"]],["clapresult"]]],[11,"write_help","","Writes the full help message to the user to a…",5,[[["w"],["self"]],["clapresult"]]],[11,"write_long_help","","Writes the full help message to the user to a…",5,[[["w"],["self"]],["clapresult"]]],[11,"write_version","","Writes the version message to the user to a [`io::Write`]…",5,[[["w"],["self"]],["clapresult"]]],[11,"write_long_version","","Writes the version message to the user to a [`io::Write`]…",5,[[["w"],["self"]],["clapresult"]]],[11,"gen_completions","","Generate a completions file for a specified shell at…",5,[[["osstring"],["into",["string"]],["shell"],["self"],["into",["osstring"]],["string"]]]],[11,"gen_completions_to","","Generate a completions file for a specified shell at…",5,[[["w"],["into",["string"]],["shell"],["self"],["string"]]]],[11,"get_matches","","Starts the parsing process, upon a failed parse an error…",5,[[],["argmatches"]]],[11,"get_matches_safe","","Starts the parsing process. This method will return a…",5,[[],[["argmatches"],["clapresult",["argmatches"]]]]],[11,"get_matches_from","","Starts the parsing process. Like [`App::get_matches`] this…",5,[[["i"]],["argmatches"]]],[11,"get_matches_from_safe","","Starts the parsing process. A combination of…",5,[[["i"]],[["argmatches"],["clapresult",["argmatches"]]]]],[11,"get_matches_from_safe_borrow","","Starts the parsing process without consuming the [`App`]…",5,[[["self"],["i"]],[["argmatches"],["clapresult",["argmatches"]]]]],[11,"with_name","","Creates a new instance of [`Arg`] using a unique string…",6,[[["str"]],["self"]]],[11,"from_usage","","Creates a new instance of [`Arg`] from a usage string.…",6,[[["str"]],["self"]]],[11,"short","","Sets the short version of the argument without the…",6,[[["str"],["asref",["str"]]],["self"]]],[11,"long","","Sets the long version of the argument without the…",6,[[["str"]],["self"]]],[11,"alias","","Allows adding a [`Arg`] alias, which function as \"hidden\"…",6,[[["str"],["into",["str"]]],["self"]]],[11,"aliases","","Allows adding [`Arg`] aliases, which function as \"hidden\"…",6,[[],["self"]]],[11,"visible_alias","","Allows adding a [`Arg`] alias that functions exactly like…",6,[[["str"],["into",["str"]]],["self"]]],[11,"visible_aliases","","Allows adding multiple [`Arg`] aliases that functions…",6,[[],["self"]]],[11,"help","","Sets the short help text of the argument that will be…",6,[[["str"]],["self"]]],[11,"long_help","","Sets the long help text of the argument that will be…",6,[[["str"]],["self"]]],[11,"last","","Specifies that this arg is the last, or final, positional…",6,[[["bool"]],["self"]]],[11,"required","","Sets whether or not the argument is required by default.…",6,[[["bool"]],["self"]]],[11,"require_equals","","Requires that options use the `--option=val` syntax (i.e.…",6,[[["bool"]],["self"]]],[11,"allow_hyphen_values","","Allows values which start with a leading hyphen (`-`)",6,[[["bool"]],["self"]]],[11,"required_unless","","Sets an arg that override this arg's required setting.…",6,[[["str"]],["self"]]],[11,"required_unless_all","","Sets args that override this arg's required setting. (i.e.…",6,[[],["self"]]],[11,"required_unless_one","","Sets args that override this arg's [required] setting.…",6,[[],["self"]]],[11,"conflicts_with","","Sets a conflicting argument by name. I.e. when using this…",6,[[["str"]],["self"]]],[11,"conflicts_with_all","","The same as [`Arg::conflicts_with`] but allows specifying…",6,[[],["self"]]],[11,"overrides_with","","Sets a overridable argument by name. I.e. this argument…",6,[[["str"]],["self"]]],[11,"overrides_with_all","","Sets multiple mutually overridable arguments by name. I.e.…",6,[[],["self"]]],[11,"requires","","Sets an argument by name that is required when this one is…",6,[[["str"]],["self"]]],[11,"requires_if","","Allows a conditional requirement. The requirement will…",6,[[["str"],["str"]],["self"]]],[11,"requires_ifs","","Allows multiple conditional requirements. The requirement…",6,[[],["self"]]],[11,"required_if","","Allows specifying that an argument is [required]…",6,[[["str"],["str"]],["self"]]],[11,"required_ifs","","Allows specifying that an argument is [required] based on…",6,[[],["self"]]],[11,"requires_all","","Sets multiple arguments by names that are required when…",6,[[],["self"]]],[11,"takes_value","","Specifies that the argument takes a value at run time.",6,[[["bool"]],["self"]]],[11,"hide_possible_values","","Specifies if the possible values of an argument should be…",6,[[["bool"]],["self"]]],[11,"hide_default_value","","Specifies if the default value of an argument should be…",6,[[["bool"]],["self"]]],[11,"index","","Specifies the index of a positional argument starting at 1.",6,[[["u64"]],["self"]]],[11,"multiple","","Specifies that the argument may appear more than once. For…",6,[[["bool"]],["self"]]],[11,"value_terminator","","Specifies a value that stops parsing multiple values of a…",6,[[["str"]],["self"]]],[11,"global","","Specifies that an argument can be matched to all child…",6,[[["bool"]],["self"]]],[11,"empty_values","","Allows an argument to accept explicitly empty values. An…",6,[[["bool"]],["self"]]],[11,"hidden","","Hides an argument from help message output.",6,[[["bool"]],["self"]]],[11,"possible_values","","Specifies a list of possible values for this argument. At…",6,[[],["self"]]],[11,"possible_value","","Specifies a possible value for this argument, one at a…",6,[[["str"]],["self"]]],[11,"case_insensitive","","When used with [`Arg::possible_values`] it allows the…",6,[[["bool"]],["self"]]],[11,"group","","Specifies the name of the [`ArgGroup`] the argument…",6,[[["str"]],["self"]]],[11,"groups","","Specifies the names of multiple [`ArgGroup`]'s the…",6,[[],["self"]]],[11,"number_of_values","","Specifies how many values are required to satisfy this…",6,[[["u64"]],["self"]]],[11,"validator","","Allows one to perform a custom validation on the argument…",6,[[["f"]],["self"]]],[11,"validator_os","","Works identically to Validator but is intended to be used…",6,[[["f"]],["self"]]],[11,"max_values","","Specifies the maximum number of values are for this…",6,[[["u64"]],["self"]]],[11,"min_values","","Specifies the minimum number of values for this argument.…",6,[[["u64"]],["self"]]],[11,"use_delimiter","","Specifies whether or not an argument should allow grouping…",6,[[["bool"]],["self"]]],[11,"require_delimiter","","Specifies that multiple values may only be set using the…",6,[[["bool"]],["self"]]],[11,"value_delimiter","","Specifies the separator to use when values are clumped…",6,[[["str"]],["self"]]],[11,"value_names","","Specify multiple names for values of option arguments.…",6,[[],["self"]]],[11,"value_name","","Specifies the name for value of [option] or [positional]…",6,[[["str"]],["self"]]],[11,"default_value","","Specifies the value of the argument when not specified at…",6,[[["str"]],["self"]]],[11,"default_value_os","","Provides a default value in the exact same manner as…",6,[[["osstr"]],["self"]]],[11,"default_value_if","","Specifies the value of the argument if `arg` has been used…",6,[[["str"],["option",["str"]],["str"]],["self"]]],[11,"default_value_if_os","","Provides a conditional default value in the exact same…",6,[[["option",["osstr"]],["str"],["osstr"]],["self"]]],[11,"default_value_ifs","","Specifies multiple values and conditions in the same…",6,[[],["self"]]],[11,"default_value_ifs_os","","Provides multiple conditional default values in the exact…",6,[[],["self"]]],[11,"env","","Specifies that if the value is not passed in as an…",6,[[["str"]],["self"]]],[11,"env_os","","Specifies that if the value is not passed in as an…",6,[[["osstr"]],["self"]]],[11,"hide_env_values","","@TODO @p2 @docs @release: write docs",6,[[["bool"]],["self"]]],[11,"next_line_help","","When set to `true` the help string will be displayed on…",6,[[["bool"]],["self"]]],[11,"display_order","","Allows custom ordering of args within the help message.…",6,[[["usize"]],["self"]]],[11,"raw","","Indicates that all parameters passed after this should not…",6,[[["bool"]],["self"]]],[11,"hidden_short_help","","Hides an argument from short help message output.",6,[[["bool"]],["self"]]],[11,"hidden_long_help","","Hides an argument from long help message output.",6,[[["bool"]],["self"]]],[11,"is_set","","Checks if one of the [`ArgSettings`] settings is set for…",6,[[["argsettings"],["self"]],["bool"]]],[11,"set","","Sets one of the [`ArgSettings`] settings for the argument.",6,[[["argsettings"]],["self"]]],[11,"unset","","Unsets one of the [`ArgSettings`] settings for the argument.",6,[[["argsettings"]],["self"]]],[11,"value_of","","Gets the value of a specific [option] or [positional]…",7,[[["str"],["asref",["str"]],["self"]],[["str"],["option",["str"]]]]],[11,"value_of_lossy","","Gets the lossy value of a specific argument. If the…",7,[[["str"],["asref",["str"]],["self"]],[["option",["cow"]],["cow",["str"]]]]],[11,"value_of_os","","Gets the OS version of a string value of a specific…",7,[[["str"],["asref",["str"]],["self"]],[["osstr"],["option",["osstr"]]]]],[11,"values_of","","Gets a [`Values`] struct which implements [`Iterator`] for…",7,[[["str"],["asref",["str"]],["self"]],[["values"],["option",["values"]]]]],[11,"values_of_lossy","","Gets the lossy values of a specific argument. If the…",7,[[["str"],["asref",["str"]],["self"]],[["vec",["string"]],["option",["vec"]]]]],[11,"values_of_os","","Gets a [`OsValues`] struct which is implements…",7,[[["str"],["asref",["str"]],["self"]],[["osvalues"],["option",["osvalues"]]]]],[11,"is_present","","Returns `true` if an argument was present at runtime,…",7,[[["str"],["asref",["str"]],["self"]],["bool"]]],[11,"occurrences_of","","Returns the number of times an argument was used at…",7,[[["str"],["asref",["str"]],["self"]],["u64"]]],[11,"index_of","","Gets the starting index of the argument in respect to all…",7,[[["str"],["asref",["str"]],["self"]],[["usize"],["option",["usize"]]]]],[11,"indices_of","","Gets all indices of the argument in respect to all other…",7,[[["str"],["asref",["str"]],["self"]],[["indices"],["option",["indices"]]]]],[11,"subcommand_matches","","Because [`Subcommand`]s are essentially \"sub-[`App`]s\"…",7,[[["str"],["asref",["str"]],["self"]],[["option",["argmatches"]],["argmatches"]]]],[11,"subcommand_name","","Because [`Subcommand`]s are essentially \"sub-[`App`]s\"…",7,[[["self"]],[["str"],["option",["str"]]]]],[11,"subcommand","","This brings together [`ArgMatches::subcommand_matches`]…",7,[[["self"]]]],[11,"usage","","Returns a string slice of the usage statement for the…",7,[[["self"]],["str"]]],[11,"with_name","","Creates a new instance of `ArgGroup` using a unique string…",8,[[["str"]],["self"]]],[11,"arg","","Adds an [argument] to this group by name",8,[[["str"]],["self"]]],[11,"args","","Adds multiple [arguments] to this group by name",8,[[],["self"]]],[11,"multiple","","Allows more than one of the ['Arg']s in this group to be…",8,[[["bool"]],["self"]]],[11,"required","","Sets the group as required or not. A required group will…",8,[[["bool"]],["self"]]],[11,"requires","","Sets the requirement rules of this group. This is not to…",8,[[["str"]],["self"]]],[11,"requires_all","","Sets the requirement rules of this group. This is not to…",8,[[],["self"]]],[11,"conflicts_with","","Sets the exclusion rules of this group. Exclusion (aka…",8,[[["str"]],["self"]]],[11,"conflicts_with_all","","Sets the exclusion rules of this group. Exclusion rules…",8,[[],["self"]]],[11,"with_name","","Creates a new instance of a subcommand requiring a name.…",9,[[["str"]],["app"]]],[11,"variants","","A list of possible variants in `&'static str` form",3,[[]]],[11,"use_stderr","","Should the message be written to `stdout` or not",0,[[["self"]],["bool"]]],[11,"exit","","Prints the error to `stderr` and exits with a status of `1`",0,[[["self"]]]],[11,"with_description","","Create an error with a custom description.",0,[[["str"],["errorkind"]],["self"]]],[6,"Result","","Short hand for [`Result`] type",null,null],[14,"value_t","","Convenience macro getting a typed value `T` where `T`…",null,null],[14,"value_t_or_exit","","Convenience macro getting a typed value `T` where `T`…",null,null],[14,"values_t","","Convenience macro getting a typed value [`Vec<T>`] where…",null,null],[14,"values_t_or_exit","","Convenience macro getting a typed value [`Vec<T>`] where…",null,null],[14,"_clap_count_exprs","","Counts the number of comma-delimited expressions passed to…",null,null],[14,"arg_enum","","Convenience macro to generate more complete enums with…",null,null],[14,"crate_version","","Allows you to pull the version from your Cargo.toml at…",null,null],[14,"crate_authors","","Allows you to pull the authors for the app from your…",null,null],[14,"crate_description","","Allows you to pull the description from your Cargo.toml at…",null,null],[14,"crate_name","","Allows you to pull the name from your Cargo.toml at…",null,null],[14,"app_from_crate","","Allows you to build the `App` instance from your…",null,null],[14,"clap_app","","Build `App`, `Arg`s, `SubCommand`s and `Group`s with…",null,null],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,[[["self"],["t"]]]],[11,"to_string","","",5,[[["self"]],["string"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,[[["self"],["t"]]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,[[["self"],["t"]]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,[[["self"],["t"]]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[],["u"]]],[11,"into_iter","","",10,[[],["i"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,[[["self"],["t"]]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[],["u"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,[[["self"],["t"]]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[],["u"]]],[11,"into_iter","","",11,[[],["i"]]],[11,"to_owned","","",11,[[["self"]],["t"]]],[11,"clone_into","","",11,[[["self"],["t"]]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"try_into","","",11,[[],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"type_id","","",11,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"to_string","","",3,[[["self"]],["string"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,[[["self"],["t"]]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",6,[[["arg"]],["self"]]],[11,"from","","",8,[[["arggroup"]],["self"]]],[11,"from","","",0,[[["error"]],["self"]]],[11,"from","","",0,[[["error"]],["self"]]],[11,"next_back","","",11,[[["self"]],[["str"],["option",["str"]]]]],[11,"next_back","","",10,[[["self"]],[["option",["osstr"]],["osstr"]]]],[11,"next","","",11,[[["self"]],[["str"],["option",["str"]]]]],[11,"size_hint","","",11,[[["self"]]]],[11,"next","","",10,[[["self"]],[["option",["osstr"]],["osstr"]]]],[11,"size_hint","","",10,[[["self"]]]],[11,"clone","","",1,[[["self"]],["appsettings"]]],[11,"clone","","",5,[[["self"]],["self"]]],[11,"clone","","",6,[[["self"]],["arg"]]],[11,"clone","","",7,[[["self"]],["argmatches"]]],[11,"clone","","",11,[[["self"]],["values"]]],[11,"clone","","",10,[[["self"]],["osvalues"]]],[11,"clone","","",8,[[["self"]],["self"]]],[11,"clone","","",2,[[["self"]],["argsettings"]]],[11,"clone","","",9,[[["self"]],["subcommand"]]],[11,"clone","","",3,[[["self"]],["shell"]]],[11,"clone","","",4,[[["self"]],["errorkind"]]],[11,"default","","",6,[[],["arg"]]],[11,"default","","",7,[[],["self"]]],[11,"default","","",11,[[],["self"]]],[11,"default","","",10,[[],["self"]]],[11,"default","","",8,[[],["arggroup"]]],[11,"eq","","",1,[[["appsettings"],["self"]],["bool"]]],[11,"eq","","",6,[[["self"],["arg"]],["bool"]]],[11,"eq","","",2,[[["self"],["argsettings"]],["bool"]]],[11,"eq","","",4,[[["errorkind"],["self"]],["bool"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",7,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",11,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",10,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",8,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",9,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"from_str","","",1,[[["str"]],["result"]]],[11,"from_str","","",2,[[["str"]],["result"]]],[11,"from_str","","",3,[[["str"]],["result"]]],[11,"description","","",0,[[["self"]],["str"]]]],"p":[[3,"Error"],[4,"AppSettings"],[4,"ArgSettings"],[4,"Shell"],[4,"ErrorKind"],[3,"App"],[3,"Arg"],[3,"ArgMatches"],[3,"ArgGroup"],[3,"SubCommand"],[3,"OsValues"],[3,"Values"]]};
searchIndex["encoding_rs"] = {"doc":"encoding_rs is a Gecko-oriented Free Software / Open…","i":[[3,"Encoding","encoding_rs","An encoding as defined in the [Encoding Standard][1].",null,null],[3,"Decoder","","A converter that decodes a byte stream into Unicode…",null,null],[3,"Encoder","","A converter that encodes a Unicode stream into bytes…",null,null],[4,"CoderResult","","Result of a (potentially partial) decode or encode…",null,null],[13,"InputEmpty","","The input was exhausted.",0,null],[13,"OutputFull","","The converter cannot produce another unit of output,…",0,null],[4,"DecoderResult","","Result of a (potentially partial) decode operation without…",null,null],[13,"InputEmpty","","The input was exhausted.",1,null],[13,"OutputFull","","The decoder cannot produce another unit of output, because…",1,null],[13,"Malformed","","The decoder encountered a malformed byte sequence.",1,null],[4,"EncoderResult","","Result of a (potentially partial) encode operation without…",null,null],[13,"InputEmpty","","The input was exhausted.",2,null],[13,"OutputFull","","The encoder cannot produce another unit of output, because…",2,null],[13,"Unmappable","","The encoder encountered an unmappable character.",2,null],[0,"mem","","Functions for converting between different in-RAM…",null,null],[4,"Latin1Bidi","encoding_rs::mem","Classification of text as Latin1 (all code points are…",null,null],[13,"Latin1","","Every character is below U+0100.",3,null],[13,"LeftToRight","","There is at least one character that's U+0100 or higher,…",3,null],[13,"Bidi","","There is at least one right-to-left character.",3,null],[5,"is_ascii","","Checks whether the buffer is all-ASCII.",null,[[],["bool"]]],[5,"is_basic_latin","","Checks whether the buffer is all-Basic Latin (i.e. UTF-16…",null,[[],["bool"]]],[5,"is_utf8_latin1","","Checks whether the buffer is valid UTF-8 representing only…",null,[[],["bool"]]],[5,"is_str_latin1","","Checks whether the buffer represents only code points less…",null,[[["str"]],["bool"]]],[5,"is_utf16_latin1","","Checks whether the buffer represents only code point less…",null,[[],["bool"]]],[5,"is_utf8_bidi","","Checks whether a potentially-invalid UTF-8 buffer contains…",null,[[],["bool"]]],[5,"is_str_bidi","","Checks whether a valid UTF-8 buffer contains code points…",null,[[["str"]],["bool"]]],[5,"is_utf16_bidi","","Checks whether a UTF-16 buffer contains code points that…",null,[[],["bool"]]],[5,"is_char_bidi","","Checks whether a scalar value triggers right-to-left…",null,[[["char"]],["bool"]]],[5,"is_utf16_code_unit_bidi","","Checks whether a UTF-16 code unit triggers right-to-left…",null,[[["u16"]],["bool"]]],[5,"check_utf8_for_latin1_and_bidi","","Checks whether a potentially invalid UTF-8 buffer contains…",null,[[],["latin1bidi"]]],[5,"check_str_for_latin1_and_bidi","","Checks whether a valid UTF-8 buffer contains code points…",null,[[["str"]],["latin1bidi"]]],[5,"check_utf16_for_latin1_and_bidi","","Checks whether a potentially invalid UTF-16 buffer…",null,[[],["latin1bidi"]]],[5,"convert_utf8_to_utf16","","Converts potentially-invalid UTF-8 to valid UTF-16 with…",null,[[],["usize"]]],[5,"convert_str_to_utf16","","Converts valid UTF-8 to valid UTF-16.",null,[[["str"]],["usize"]]],[5,"convert_utf8_to_utf16_without_replacement","","Converts potentially-invalid UTF-8 to valid UTF-16…",null,[[],[["usize"],["option",["usize"]]]]],[5,"convert_utf16_to_utf8_partial","","Converts potentially-invalid UTF-16 to valid UTF-8 with…",null,[[]]],[5,"convert_utf16_to_utf8","","Converts potentially-invalid UTF-16 to valid UTF-8 with…",null,[[],["usize"]]],[5,"convert_utf16_to_str_partial","","Converts potentially-invalid UTF-16 to valid UTF-8 with…",null,[[["str"]]]],[5,"convert_utf16_to_str","","Converts potentially-invalid UTF-16 to valid UTF-8 with…",null,[[["str"]],["usize"]]],[5,"convert_latin1_to_utf16","","Converts bytes whose unsigned value is interpreted as…",null,[[]]],[5,"convert_latin1_to_utf8_partial","","Converts bytes whose unsigned value is interpreted as…",null,[[]]],[5,"convert_latin1_to_utf8","","Converts bytes whose unsigned value is interpreted as…",null,[[],["usize"]]],[5,"convert_latin1_to_str_partial","","Converts bytes whose unsigned value is interpreted as…",null,[[["str"]]]],[5,"convert_latin1_to_str","","Converts bytes whose unsigned value is interpreted as…",null,[[["str"]],["usize"]]],[5,"convert_utf8_to_latin1_lossy","","If the input is valid UTF-8 representing only Unicode code…",null,[[],["usize"]]],[5,"convert_utf16_to_latin1_lossy","","If the input is valid UTF-16 representing only Unicode…",null,[[]]],[5,"decode_latin1","","Converts bytes whose unsigned value is interpreted as…",null,[[],[["str"],["cow",["str"]]]]],[5,"encode_latin1_lossy","","If the input is valid UTF-8 representing only Unicode code…",null,[[["str"]],["cow"]]],[5,"utf16_valid_up_to","","Returns the index of the first unpaired surrogate or, if…",null,[[],["usize"]]],[5,"utf8_latin1_up_to","","Returns the index of first byte that starts an invalid…",null,[[],["usize"]]],[5,"str_latin1_up_to","","Returns the index of first byte that starts a non-Latin1…",null,[[["str"]],["usize"]]],[5,"ensure_utf16_validity","","Replaces unpaired surrogates in the input with the…",null,[[]]],[5,"copy_ascii_to_ascii","","Copies ASCII from source to destination up to the first…",null,[[],["usize"]]],[5,"copy_ascii_to_basic_latin","","Copies ASCII from source to destination zero-extending it…",null,[[],["usize"]]],[5,"copy_basic_latin_to_ascii","","Copies Basic Latin from source to destination narrowing it…",null,[[],["usize"]]],[7,"BIG5_INIT","encoding_rs","The initializer for the Big5 encoding.",null,null],[7,"BIG5","","The Big5 encoding.",null,null],[7,"EUC_JP_INIT","","The initializer for the EUC-JP encoding.",null,null],[7,"EUC_JP","","The EUC-JP encoding.",null,null],[7,"EUC_KR_INIT","","The initializer for the EUC-KR encoding.",null,null],[7,"EUC_KR","","The EUC-KR encoding.",null,null],[7,"GBK_INIT","","The initializer for the GBK encoding.",null,null],[7,"GBK","","The GBK encoding.",null,null],[7,"IBM866_INIT","","The initializer for the IBM866 encoding.",null,null],[7,"IBM866","","The IBM866 encoding.",null,null],[7,"ISO_2022_JP_INIT","","The initializer for the ISO-2022-JP encoding.",null,null],[7,"ISO_2022_JP","","The ISO-2022-JP encoding.",null,null],[7,"ISO_8859_10_INIT","","The initializer for the ISO-8859-10 encoding.",null,null],[7,"ISO_8859_10","","The ISO-8859-10 encoding.",null,null],[7,"ISO_8859_13_INIT","","The initializer for the ISO-8859-13 encoding.",null,null],[7,"ISO_8859_13","","The ISO-8859-13 encoding.",null,null],[7,"ISO_8859_14_INIT","","The initializer for the ISO-8859-14 encoding.",null,null],[7,"ISO_8859_14","","The ISO-8859-14 encoding.",null,null],[7,"ISO_8859_15_INIT","","The initializer for the ISO-8859-15 encoding.",null,null],[7,"ISO_8859_15","","The ISO-8859-15 encoding.",null,null],[7,"ISO_8859_16_INIT","","The initializer for the ISO-8859-16 encoding.",null,null],[7,"ISO_8859_16","","The ISO-8859-16 encoding.",null,null],[7,"ISO_8859_2_INIT","","The initializer for the ISO-8859-2 encoding.",null,null],[7,"ISO_8859_2","","The ISO-8859-2 encoding.",null,null],[7,"ISO_8859_3_INIT","","The initializer for the ISO-8859-3 encoding.",null,null],[7,"ISO_8859_3","","The ISO-8859-3 encoding.",null,null],[7,"ISO_8859_4_INIT","","The initializer for the ISO-8859-4 encoding.",null,null],[7,"ISO_8859_4","","The ISO-8859-4 encoding.",null,null],[7,"ISO_8859_5_INIT","","The initializer for the ISO-8859-5 encoding.",null,null],[7,"ISO_8859_5","","The ISO-8859-5 encoding.",null,null],[7,"ISO_8859_6_INIT","","The initializer for the ISO-8859-6 encoding.",null,null],[7,"ISO_8859_6","","The ISO-8859-6 encoding.",null,null],[7,"ISO_8859_7_INIT","","The initializer for the ISO-8859-7 encoding.",null,null],[7,"ISO_8859_7","","The ISO-8859-7 encoding.",null,null],[7,"ISO_8859_8_INIT","","The initializer for the ISO-8859-8 encoding.",null,null],[7,"ISO_8859_8","","The ISO-8859-8 encoding.",null,null],[7,"ISO_8859_8_I_INIT","","The initializer for the ISO-8859-8-I encoding.",null,null],[7,"ISO_8859_8_I","","The ISO-8859-8-I encoding.",null,null],[7,"KOI8_R_INIT","","The initializer for the KOI8-R encoding.",null,null],[7,"KOI8_R","","The KOI8-R encoding.",null,null],[7,"KOI8_U_INIT","","The initializer for the KOI8-U encoding.",null,null],[7,"KOI8_U","","The KOI8-U encoding.",null,null],[7,"SHIFT_JIS_INIT","","The initializer for the Shift_JIS encoding.",null,null],[7,"SHIFT_JIS","","The Shift_JIS encoding.",null,null],[7,"UTF_16BE_INIT","","The initializer for the UTF-16BE encoding.",null,null],[7,"UTF_16BE","","The UTF-16BE encoding.",null,null],[7,"UTF_16LE_INIT","","The initializer for the UTF-16LE encoding.",null,null],[7,"UTF_16LE","","The UTF-16LE encoding.",null,null],[7,"UTF_8_INIT","","The initializer for the UTF-8 encoding.",null,null],[7,"UTF_8","","The UTF-8 encoding.",null,null],[7,"GB18030_INIT","","The initializer for the gb18030 encoding.",null,null],[7,"GB18030","","The gb18030 encoding.",null,null],[7,"MACINTOSH_INIT","","The initializer for the macintosh encoding.",null,null],[7,"MACINTOSH","","The macintosh encoding.",null,null],[7,"REPLACEMENT_INIT","","The initializer for the replacement encoding.",null,null],[7,"REPLACEMENT","","The replacement encoding.",null,null],[7,"WINDOWS_1250_INIT","","The initializer for the windows-1250 encoding.",null,null],[7,"WINDOWS_1250","","The windows-1250 encoding.",null,null],[7,"WINDOWS_1251_INIT","","The initializer for the windows-1251 encoding.",null,null],[7,"WINDOWS_1251","","The windows-1251 encoding.",null,null],[7,"WINDOWS_1252_INIT","","The initializer for the windows-1252 encoding.",null,null],[7,"WINDOWS_1252","","The windows-1252 encoding.",null,null],[7,"WINDOWS_1253_INIT","","The initializer for the windows-1253 encoding.",null,null],[7,"WINDOWS_1253","","The windows-1253 encoding.",null,null],[7,"WINDOWS_1254_INIT","","The initializer for the windows-1254 encoding.",null,null],[7,"WINDOWS_1254","","The windows-1254 encoding.",null,null],[7,"WINDOWS_1255_INIT","","The initializer for the windows-1255 encoding.",null,null],[7,"WINDOWS_1255","","The windows-1255 encoding.",null,null],[7,"WINDOWS_1256_INIT","","The initializer for the windows-1256 encoding.",null,null],[7,"WINDOWS_1256","","The windows-1256 encoding.",null,null],[7,"WINDOWS_1257_INIT","","The initializer for the windows-1257 encoding.",null,null],[7,"WINDOWS_1257","","The windows-1257 encoding.",null,null],[7,"WINDOWS_1258_INIT","","The initializer for the windows-1258 encoding.",null,null],[7,"WINDOWS_1258","","The windows-1258 encoding.",null,null],[7,"WINDOWS_874_INIT","","The initializer for the windows-874 encoding.",null,null],[7,"WINDOWS_874","","The windows-874 encoding.",null,null],[7,"X_MAC_CYRILLIC_INIT","","The initializer for the x-mac-cyrillic encoding.",null,null],[7,"X_MAC_CYRILLIC","","The x-mac-cyrillic encoding.",null,null],[7,"X_USER_DEFINED_INIT","","The initializer for the x-user-defined encoding.",null,null],[7,"X_USER_DEFINED","","The x-user-defined encoding.",null,null],[11,"for_label","","Implements the get an encoding algorithm.",4,[[],[["option",["encoding"]],["encoding"]]]],[11,"for_label_no_replacement","","This method behaves the same as `for_label()`, except when…",4,[[],[["option",["encoding"]],["encoding"]]]],[11,"for_bom","","Performs non-incremental BOM sniffing.",4,[[],["option"]]],[11,"name","","Returns the name of this encoding.",4,[[["self"]],["str"]]],[11,"can_encode_everything","","Checks whether the output encoding of this encoding can…",4,[[["self"]],["bool"]]],[11,"is_ascii_compatible","","Checks whether the bytes 0x00...0x7F map exclusively to…",4,[[["self"]],["bool"]]],[11,"is_single_byte","","Checks whether this encoding maps one byte to one Basic…",4,[[["self"]],["bool"]]],[11,"output_encoding","","Returns the output encoding of this encoding. This is…",4,[[["self"]],["encoding"]]],[11,"decode","","Decode complete input to `Cow<'a, str>` with BOM sniffing…",4,[[["self"]]]],[11,"decode_with_bom_removal","","Decode complete input to `Cow<'a, str>` with BOM removal…",4,[[["self"]]]],[11,"decode_without_bom_handling","","Decode complete input to `Cow<'a, str>` without BOM…",4,[[["self"]]]],[11,"decode_without_bom_handling_and_without_replacement","","Decode complete input to `Cow<'a, str>` without BOM…",4,[[["self"]],[["option",["cow"]],["cow",["str"]]]]],[11,"encode","","Encode complete input to `Cow<'a, [u8]>` with unmappable…",4,[[["self"],["str"]]]],[11,"new_decoder","","Instantiates a new decoder for this encoding with BOM…",4,[[["self"]],["decoder"]]],[11,"new_decoder_with_bom_removal","","Instantiates a new decoder for this encoding with BOM…",4,[[["self"]],["decoder"]]],[11,"new_decoder_without_bom_handling","","Instantiates a new decoder for this encoding with BOM…",4,[[["self"]],["decoder"]]],[11,"new_encoder","","Instantiates a new encoder for the output encoding of this…",4,[[["self"]],["encoder"]]],[11,"utf8_valid_up_to","","Validates UTF-8.",4,[[],["usize"]]],[11,"ascii_valid_up_to","","Validates ASCII.",4,[[],["usize"]]],[11,"iso_2022_jp_ascii_valid_up_to","","Validates ISO-2022-JP ASCII-state data.",4,[[],["usize"]]],[11,"encoding","","The `Encoding` this `Decoder` is for.",5,[[["self"]],["encoding"]]],[11,"max_utf8_buffer_length","","Query the worst-case UTF-8 output size with replacement.",5,[[["self"],["usize"]],[["usize"],["option",["usize"]]]]],[11,"max_utf8_buffer_length_without_replacement","","Query the worst-case UTF-8 output size without replacement.",5,[[["self"],["usize"]],[["usize"],["option",["usize"]]]]],[11,"decode_to_utf8","","Incrementally decode a byte stream into UTF-8 with…",5,[[["self"],["bool"]]]],[11,"decode_to_str","","Incrementally decode a byte stream into UTF-8 with…",5,[[["self"],["str"],["bool"]]]],[11,"decode_to_string","","Incrementally decode a byte stream into UTF-8 with…",5,[[["string"],["self"],["bool"]]]],[11,"decode_to_utf8_without_replacement","","Incrementally decode a byte stream into UTF-8 without…",5,[[["self"],["bool"]]]],[11,"decode_to_str_without_replacement","","Incrementally decode a byte stream into UTF-8 with type…",5,[[["self"],["str"],["bool"]]]],[11,"decode_to_string_without_replacement","","Incrementally decode a byte stream into UTF-8 using a…",5,[[["string"],["self"],["bool"]]]],[11,"max_utf16_buffer_length","","Query the worst-case UTF-16 output size (with or without…",5,[[["self"],["usize"]],[["usize"],["option",["usize"]]]]],[11,"decode_to_utf16","","Incrementally decode a byte stream into UTF-16 with…",5,[[["self"],["bool"]]]],[11,"decode_to_utf16_without_replacement","","Incrementally decode a byte stream into UTF-16 without…",5,[[["self"],["bool"]]]],[11,"latin1_byte_compatible_up_to","","Checks for compatibility with storing Unicode scalar…",5,[[["self"]],[["usize"],["option",["usize"]]]]],[11,"encoding","","The `Encoding` this `Encoder` is for.",6,[[["self"]],["encoding"]]],[11,"has_pending_state","","Returns `true` if this is an ISO-2022-JP encoder that's…",6,[[["self"]],["bool"]]],[11,"max_buffer_length_from_utf8_if_no_unmappables","","Query the worst-case output size when encoding from UTF-8…",6,[[["self"],["usize"]],[["usize"],["option",["usize"]]]]],[11,"max_buffer_length_from_utf8_without_replacement","","Query the worst-case output size when encoding from UTF-8…",6,[[["self"],["usize"]],[["usize"],["option",["usize"]]]]],[11,"encode_from_utf8","","Incrementally encode into byte stream from UTF-8 with…",6,[[["str"],["self"],["bool"]]]],[11,"encode_from_utf8_to_vec","","Incrementally encode into byte stream from UTF-8 with…",6,[[["str"],["self"],["vec"],["bool"]]]],[11,"encode_from_utf8_without_replacement","","Incrementally encode into byte stream from UTF-8 without…",6,[[["str"],["self"],["bool"]]]],[11,"encode_from_utf8_to_vec_without_replacement","","Incrementally encode into byte stream from UTF-8 without…",6,[[["str"],["self"],["vec"],["bool"]]]],[11,"max_buffer_length_from_utf16_if_no_unmappables","","Query the worst-case output size when encoding from UTF-16…",6,[[["self"],["usize"]],[["usize"],["option",["usize"]]]]],[11,"max_buffer_length_from_utf16_without_replacement","","Query the worst-case output size when encoding from UTF-16…",6,[[["self"],["usize"]],[["usize"],["option",["usize"]]]]],[11,"encode_from_utf16","","Incrementally encode into byte stream from UTF-16 with…",6,[[["self"],["bool"]]]],[11,"encode_from_utf16_without_replacement","","Incrementally encode into byte stream from UTF-16 without…",6,[[["self"],["bool"]]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","encoding_rs::mem","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"eq","","",3,[[["self"],["latin1bidi"]],["bool"]]],[11,"eq","encoding_rs","",4,[[["self"],["encoding"]],["bool"]]],[11,"eq","","",0,[[["coderresult"],["self"]],["bool"]]],[11,"eq","","",1,[[["decoderresult"],["self"]],["bool"]]],[11,"ne","","",1,[[["decoderresult"],["self"]],["bool"]]],[11,"eq","","",2,[[["encoderresult"],["self"]],["bool"]]],[11,"ne","","",2,[[["encoderresult"],["self"]],["bool"]]],[11,"fmt","encoding_rs::mem","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","encoding_rs","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"hash","","",4,[[["self"],["h"]]]]],"p":[[4,"CoderResult"],[4,"DecoderResult"],[4,"EncoderResult"],[4,"Latin1Bidi"],[3,"Encoding"],[3,"Decoder"],[3,"Encoder"]]};
searchIndex["failure"] = {"doc":"An experimental new error-handling library. Guide-style…","i":[[3,"Backtrace","failure","A `Backtrace`.",null,null],[3,"Compat","","A compatibility wrapper around an error type from this…",null,null],[3,"Context","","An error with context around it.",null,null],[3,"SyncFailure","","Wrapper for `std` errors to make them `Sync`.",null,null],[3,"Error","","The `Error` type, which can contain any failure.",null,null],[3,"Causes","","A iterator over the causes of a `Fail`",null,null],[5,"err_msg","","Constructs a `Fail` type from a string.",null,[[["debug"],["send"],["sync"],["display"]],["error"]]],[11,"new","","Constructs a new backtrace. This will only create a real…",0,[[],["backtrace"]]],[11,"is_empty","","Returns true if displaying this backtrace would be an…",0,[[["self"]],["bool"]]],[11,"into_inner","","Unwraps this into the inner error.",1,[[],["e"]]],[11,"get_ref","","Gets a reference to the inner error.",1,[[["self"]],["e"]]],[11,"new","","Creates a new context without an underlying error message.",2,[[["d"]],["context"]]],[11,"get_context","","Returns a reference to the context provided with this error.",2,[[["self"]],["d"]]],[11,"map","","Maps `Context<D>` to `Context<T>` by applying a function…",2,[[["f"]],["context"]]],[11,"new","","Wraps a non-`Sync` `Error` in order to make it implement…",3,[[["e"]],["self"]]],[11,"from_boxed_compat","","Creates an `Error` from `Box<std::error::Error>`.",4,[[["stderror"],["box",["stderror"]]],["error"]]],[11,"as_fail","","Return a reference to the underlying failure that this…",4,[[["self"]],["fail"]]],[11,"name","","Returns the name of the underlying fail.",4,[[["self"]],[["str"],["option",["str"]]]]],[11,"cause","","Returns a reference to the underlying cause of this…",4,[[["self"]],["fail"]]],[11,"backtrace","","Gets a reference to the `Backtrace` for this `Error`.",4,[[["self"]],["backtrace"]]],[11,"context","","Provides context for this `Error`.",4,[[["send"],["display"],["sync"]],[["context"],["send"],["display"],["sync"]]]],[11,"compat","","Wraps `Error` in a compatibility type.",4,[[],[["error"],["compat",["error"]]]]],[11,"downcast","","Attempts to downcast this `Error` to a particular `Fail`…",4,[[],[["result",["error"]],["fail"],["error"]]]],[11,"find_root_cause","","Returns the \"root cause\" of this error - the last value in…",4,[[["self"]],["fail"]]],[11,"iter_causes","","Returns a iterator over the causes of this error with the…",4,[[["self"]],["causes"]]],[11,"iter_chain","","Returns a iterator over all fails up the chain from the…",4,[[["self"]],["causes"]]],[11,"downcast_ref","","Attempts to downcast this `Error` to a particular `Fail`…",4,[[["self"]],[["t"],["option"]]]],[11,"downcast_mut","","Attempts to downcast this `Error` to a particular `Fail`…",4,[[["self"]],[["option"],["t"]]]],[11,"root_cause","","Deprecated alias to `find_root_cause`.",4,[[["self"]],["fail"]]],[11,"causes","","Deprecated alias to `iter_causes`.",4,[[["self"]],["causes"]]],[6,"Fallible","","A common result with an `Error`.",null,null],[8,"AsFail","","The `AsFail` trait",null,null],[10,"as_fail","","Converts a reference to `Self` into a dynamic trait object…",5,[[["self"]],["fail"]]],[8,"ResultExt","","Extension methods for `Result`.",null,null],[10,"compat","","Wraps the error in `Compat` to make it compatible with…",6,[[],[["result",["compat"]],["compat"]]]],[10,"context","","Wraps the error type in a context type.",6,[[["d"]],[["context"],["result",["context"]]]]],[10,"with_context","","Wraps the error type in a context type generated by…",6,[[["f"]],[["context"],["result",["context"]]]]],[8,"Fail","","The `Fail` trait.",null,null],[11,"name","","Returns the \"name\" of the error.",7,[[["self"]],[["str"],["option",["str"]]]]],[11,"cause","","Returns a reference to the underlying cause of this…",7,[[["self"]],[["option",["fail"]],["fail"]]]],[11,"backtrace","","Returns a reference to the `Backtrace` carried by this…",7,[[["self"]],[["backtrace"],["option",["backtrace"]]]]],[11,"context","","Provides context for this failure.",7,[[["d"]],["context"]]],[11,"compat","","Wraps this failure in a compatibility wrapper that…",7,[[],["compat"]]],[11,"downcast_ref","","Attempts to downcast this failure to a concrete type by…",7,[[["self"]],[["t"],["option"]]]],[11,"downcast_mut","","Attempts to downcast this failure to a concrete type by…",7,[[["self"]],[["option"],["t"]]]],[11,"find_root_cause","","Returns the \"root cause\" of this `Fail` - the last value…",7,[[["self"]],["fail"]]],[11,"iter_causes","","Returns a iterator over the causes of this `Fail` with the…",7,[[["self"]],["causes"]]],[11,"iter_chain","","Returns a iterator over all fails up the chain from the…",7,[[["self"]],["causes"]]],[11,"root_cause","","Deprecated alias to `find_root_cause`.",7,[[["self"]],["fail"]]],[11,"causes","","Deprecated alias to `iter_chain`.",7,[[["self"]],["causes"]]],[14,"bail","","Exits a function early with an `Error`.",null,null],[14,"ensure","","Exits a function early with an `Error` if the condition is…",null,null],[14,"format_err","","Constructs an `Error` using the standard string…",null,null],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"to_string","","",1,[[["self"]],["string"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[],["t"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_string","","",2,[[["self"]],["string"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"to_string","","",3,[[["self"]],["string"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[],["t"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"to_string","","",4,[[["self"]],["string"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"into_iter","","",8,[[],["i"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"as_fail","","",7,[[["self"]],["fail"]]],[11,"as_fail","","",4,[[["self"]],["fail"]]],[11,"name","","",2,[[["self"]],[["str"],["option",["str"]]]]],[11,"cause","","",2,[[["self"]],[["option",["fail"]],["fail"]]]],[11,"backtrace","","",2,[[["self"]],[["backtrace"],["option",["backtrace"]]]]],[11,"as_ref","","",4,[[["self"]],["fail"]]],[11,"from","","",2,[[["d"]],["context"]]],[11,"from","","",4,[[["f"]],["error"]]],[11,"next","","",8,[[["self"]],[["option",["fail"]],["fail"]]]],[11,"clone","","",1,[[["self"]],["compat"]]],[11,"default","","",0,[[],["backtrace"]]],[11,"default","","",1,[[],["compat"]]],[11,"eq","","",1,[[["self"],["compat"]],["bool"]]],[11,"ne","","",1,[[["self"],["compat"]],["bool"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",4,[[["formatter"],["self"]],["result"]]],[11,"hash","","",1,[[["self"],["__h"]]]],[11,"description","","",1,[[["self"]],["str"]]]],"p":[[3,"Backtrace"],[3,"Compat"],[3,"Context"],[3,"SyncFailure"],[3,"Error"],[8,"AsFail"],[8,"ResultExt"],[8,"Fail"],[3,"Causes"]]};
searchIndex["failure_derive"] = {"doc":"","i":[[24,"Fail","failure_derive","",null,null]],"p":[]};
searchIndex["feed_rs"] = {"doc":"This crate provides a parser and common data model over…","i":[[0,"model","feed_rs","",null,null],[3,"Feed","feed_rs::model","Combined model for a syndication feed (i.e. RSS1, RSS 2,…",null,null],[12,"id","","A unique identifier for this feed * Atom (required):…",0,null],[12,"title","","The title of the feed * Atom (required): Contains a human…",0,null],[12,"updated","","The time at which the feed was last modified. If not…",0,null],[12,"authors","","Atom (recommended): Collection of authors defined at the…",0,null],[12,"description","","Description of the feed * Atom (optional): Contains a…",0,null],[12,"links","","Links to related pages * Atom (recommended): Identifies a…",0,null],[12,"categories","","Structured classification of the feed * Atom (optional):…",0,null],[12,"contributors","","People who have contributed to the feed * Atom (optional):…",0,null],[12,"generator","","Information on the software used to build the feed * Atom…",0,null],[12,"icon","","A small icon * Atom (optional): Identifies a small image…",0,null],[12,"language","","RSS 2 (optional): The language the channel is written in.",0,null],[12,"logo","","An image used to visually identify the feed * Atom…",0,null],[12,"published","","RSS 2 (optional): The publication date for the content in…",0,null],[12,"rights","","Rights restricting content within the feed * Atom…",0,null],[12,"ttl","","RSS 2 (optional): It's a number of minutes that indicates…",0,null],[12,"entries","","The individual items within the feed * Atom (optional):…",0,null],[3,"Entry","","An item within a feed",null,null],[12,"id","","A unique identifier for this item with a feed. If not…",1,null],[12,"title","","Title of this item within the feed * Atom, RSS…",1,null],[12,"updated","","Time at which this item was last modified. If not provided…",1,null],[12,"authors","","Authors of this item * Atom (recommended): Collection of…",1,null],[12,"content","","The content of the item * Atom (recommended): Contains or…",1,null],[12,"links","","Links associated with this item * Atom (recommended):…",1,null],[12,"summary","","A short summary of the item * Atom (recommended): Conveys…",1,null],[12,"categories","","Structured classification of the item * Atom (optional):…",1,null],[12,"contributors","","Atom (optional): Names one contributor to the entry. A…",1,null],[12,"published","","Time at which this item was first published * Atom…",1,null],[12,"source","","Atom (optional): If an entry is copied from one feed into…",1,null],[12,"rights","","Atom (optional): Conveys information about rights, e.g.…",1,null],[3,"Category","","Represents the category of a feed or entry",null,null],[12,"term","","The category as a human readable string * Atom (required):…",2,null],[12,"scheme","","Atom (optional): Identifies the categorization scheme via…",2,null],[12,"label","","Atom (optional): Provides a human-readable label for…",2,null],[3,"Content","","Content, or link to the content, for a given entry.",null,null],[12,"body","","Atom * If the type attribute ends in +xml or /xml, then an…",3,null],[12,"content_type","","Type of content * Atom: The type attribute is either text,…",3,null],[12,"length","","RSS 2.0: Length of the content in bytes",3,null],[12,"src","","Source of the content * Atom: If the src attribute is…",3,null],[3,"Generator","","Information on the tools used to generate the feed",null,null],[12,"content","","Atom: Additional data RSS 2: A string indicating the…",4,null],[12,"uri","","Atom: Link to the tool",4,null],[12,"version","","Atom: Tool version",4,null],[3,"Image","","Represents a a link to an image.",null,null],[12,"uri","","Link to the image * Atom: The URL to an image or logo *…",5,null],[12,"title","","RSS 1 + 2: describes the image, it's used in the ALT…",5,null],[12,"link","","RSS 1 + 2: the URL of the site, when the channel is…",5,null],[12,"width","","RSS 2 (optional): width of the image",5,null],[12,"height","","RSS 2 (optional): height of the image",5,null],[12,"description","","RSS 2 (optional): contains text that is included in the…",5,null],[3,"Link","","Represents a link to an associated resource for the feed…",null,null],[12,"href","","Link to additional content * Atom: The URI of the…",6,null],[12,"rel","","A single link relationship type.",6,null],[12,"media_type","","Indicates the media type of the resource.",6,null],[12,"href_lang","","Indicates the language of the referenced resource.",6,null],[12,"title","","Human readable information about the link, typically for…",6,null],[12,"length","","The length of the resource, in bytes.",6,null],[3,"Person","","Represents an author, contributor etc.",null,null],[12,"name","","Atom: human-readable name for the person. JSON Feed:…",7,null],[12,"uri","","Atom: home page for the person. JSON Feed: link to media…",7,null],[12,"email","","Atom: An email address for the person.",7,null],[3,"Text","","Textual content, or link to the content, for a given entry.",null,null],[12,"content_type","","",8,null],[12,"src","","",8,null],[12,"content","","",8,null],[11,"new","","",2,[[["string"]],["category"]]],[11,"new","","",4,[[["string"]],["generator"]]],[11,"new","","",5,[[["string"]],["image"]]],[11,"new","","",6,[[["string"]],["link"]]],[11,"new","","",7,[[["string"]],["person"]]],[11,"new","","",8,[[["string"]],["text"]]],[0,"parser","feed_rs","",null,null],[4,"ParseFeedError","feed_rs::parser","An error returned when parsing a feed from a source fails",null,null],[13,"ParseError","","",9,null],[13,"IoError","","",9,null],[13,"JsonSerde","","",9,null],[13,"XmlReader","","",9,null],[4,"ParseErrorKind","","Underlying cause of the parse failure",null,null],[13,"NoFeedRoot","","Could not find the expected root element (e.g. \"channel\"…",10,null],[13,"UnknownMimeType","","The content type is unsupported and we cannot parse the…",10,null],[13,"MissingContent","","Required content within the source was not found e.g. the…",10,null],[5,"parse","","Parse the input (Atom, a flavour of RSS or JSON Feed) into…",null,[[["read"]],[["parsefeedresult",["feed"]],["feed"]]]],[6,"ParseFeedResult","","",null,null],[11,"from","feed_rs::model","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"vzip","","",0,[[],["v"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"vzip","","",1,[[],["v"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"vzip","","",2,[[],["v"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"vzip","","",3,[[],["v"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"vzip","","",4,[[],["v"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"vzip","","",5,[[],["v"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"vzip","","",6,[[],["v"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"vzip","","",7,[[],["v"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"vzip","","",8,[[],["v"]]],[11,"from","feed_rs::parser","",9,[[["t"]],["t"]]],[11,"into","","",9,[[],["u"]]],[11,"to_string","","",9,[[["self"]],["string"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"vzip","","",9,[[],["v"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[],["u"]]],[11,"to_string","","",10,[[["self"]],["string"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"vzip","","",10,[[],["v"]]],[11,"from","","",9,[[["error"]],["self"]]],[11,"from","","",9,[[["error"]],["self"]]],[11,"from","","",9,[[["error"]],["self"]]],[11,"default","feed_rs::model","",0,[[],["self"]]],[11,"default","","",1,[[],["self"]]],[11,"default","","",3,[[],["content"]]],[11,"eq","","",0,[[["feed"],["self"]],["bool"]]],[11,"ne","","",0,[[["feed"],["self"]],["bool"]]],[11,"eq","","",1,[[["entry"],["self"]],["bool"]]],[11,"ne","","",1,[[["entry"],["self"]],["bool"]]],[11,"eq","","",2,[[["self"],["category"]],["bool"]]],[11,"ne","","",2,[[["self"],["category"]],["bool"]]],[11,"eq","","",3,[[["content"],["self"]],["bool"]]],[11,"ne","","",3,[[["content"],["self"]],["bool"]]],[11,"eq","","",4,[[["generator"],["self"]],["bool"]]],[11,"ne","","",4,[[["generator"],["self"]],["bool"]]],[11,"eq","","",5,[[["image"],["self"]],["bool"]]],[11,"ne","","",5,[[["image"],["self"]],["bool"]]],[11,"eq","","",6,[[["link"],["self"]],["bool"]]],[11,"ne","","",6,[[["link"],["self"]],["bool"]]],[11,"eq","","",7,[[["person"],["self"]],["bool"]]],[11,"ne","","",7,[[["person"],["self"]],["bool"]]],[11,"eq","","",8,[[["text"],["self"]],["bool"]]],[11,"ne","","",8,[[["text"],["self"]],["bool"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",6,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",7,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",8,[[["formatter"],["self"]],["result"]]],[11,"fmt","feed_rs::parser","",9,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",10,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",9,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",10,[[["formatter"],["self"]],["result"]]],[11,"source","","",9,[[["self"]],[["error"],["option",["error"]]]]]],"p":[[3,"Feed"],[3,"Entry"],[3,"Category"],[3,"Content"],[3,"Generator"],[3,"Image"],[3,"Link"],[3,"Person"],[3,"Text"],[4,"ParseFeedError"],[4,"ParseErrorKind"]]};
searchIndex["feembox"] = {"doc":"What if a feed, but it's a mailbox?","i":[[5,"assemble_mail","feembox","",null,[[["ai"],["mc"],["feed"],["feedentry"],["string"]],[["result",["mail","ioerror"]],["mail"],["ioerror"]]]],[0,"util","","Various utility functions.",null,null],[3,"DisplayFeedPerson","feembox::util","`Display` a `Person` as `name <email> (uri)`",null,null],[12,"0","","",0,null],[5,"message_id_for_feed_entry","","Get the Message-ID corresponding to the specified entry in…",null,[[["feed"],["feedentry"]],["string"]]],[7,"MESSAGE_ID_HEADER","","Case-insensitive matcher for the Message-ID header",null,null],[7,"LINK_REL_FILTER","","Matchers for the `rel=`s to not include in the status…",null,null],[0,"options","feembox","This module contains the configuration of the application.",null,null],[3,"Options","feembox::options","Representation of the application's all configurable values.",null,null],[12,"maildir","","The location of the maildir to deliver to",1,null],[12,"feed","","The location of the maildir to deliver to, or `-` for stdin",1,null],[12,"verbosity","","Print what's happening to stdout",1,null],[12,"alternatives_transformations","","The program to invoke to transform the first mime-type to…",1,null],[4,"Verbosity","","Verbosity level to print to stdout",null,null],[13,"None","","Print nothing",2,null],[13,"Human","","Print data for human consumption",2,null],[13,"Debug","","Print values useful for debugging",2,null],[11,"parse","","Parse `env`-wide command-line arguments into an `Options`…",1,[[],["options"]]],[11,"from","feembox::util","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"try_into","","",0,[[],[["result",["componentcreationerror"]],["componentcreationerror"]]]],[11,"try_from","","",0,[[["t"]],[["result",["componentcreationerror"]],["componentcreationerror"]]]],[11,"vzip","","",0,[[],["v"]]],[11,"from","feembox::options","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"try_into","","",1,[[],[["result",["componentcreationerror"]],["componentcreationerror"]]]],[11,"try_from","","",1,[[["t"]],[["result",["componentcreationerror"]],["componentcreationerror"]]]],[11,"vzip","","",1,[[],["v"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"try_into","","",2,[[],[["result",["componentcreationerror"]],["componentcreationerror"]]]],[11,"try_from","","",2,[[["t"]],[["result",["componentcreationerror"]],["componentcreationerror"]]]],[11,"vzip","","",2,[[],["v"]]],[11,"from","","",2,[[["u64"]],["verbosity"]]],[11,"clone","","",2,[[["self"]],["verbosity"]]],[11,"clone","","",1,[[["self"]],["options"]]],[11,"cmp","","",2,[[["verbosity"],["self"]],["ordering"]]],[11,"eq","feembox::util","",0,[[["displayfeedperson"],["self"]],["bool"]]],[11,"ne","","",0,[[["displayfeedperson"],["self"]],["bool"]]],[11,"eq","feembox::options","",2,[[["verbosity"],["self"]],["bool"]]],[11,"eq","","",1,[[["options"],["self"]],["bool"]]],[11,"ne","","",1,[[["options"],["self"]],["bool"]]],[11,"partial_cmp","","",2,[[["verbosity"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"fmt","feembox::util","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","feembox::options","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","feembox::util","",0,[[["formatter"],["self"]],["result"]]],[11,"hash","","",0,[[["self"],["h"]]]],[11,"hash","feembox::options","",2,[[["self"],["__h"]]]],[11,"hash","","",1,[[["self"],["__h"]]]]],"p":[[3,"DisplayFeedPerson"],[3,"Options"],[4,"Verbosity"]]};
searchIndex["futures"] = {"doc":"Zero-cost Futures in Rust","i":[[4,"Async","futures","Return type of future, indicating whether a value is ready…",null,null],[13,"Ready","","Represents that a value is immediately ready.",0,null],[13,"NotReady","","Represents that a value is not ready yet, but may be so…",0,null],[4,"AsyncSink","","The result of an asynchronous attempt to send a value to a…",null,null],[13,"Ready","","The `start_send` attempt succeeded, so the sending process…",1,null],[13,"NotReady","","The `start_send` attempt failed due to the sink being…",1,null],[11,"map","","Change the success value of this `Async` with the closure…",0,[[["f"]],["async"]]],[11,"is_ready","","Returns whether this is `Async::Ready`",0,[[["self"]],["bool"]]],[11,"is_not_ready","","Returns whether this is `Async::NotReady`",0,[[["self"]],["bool"]]],[11,"map","","Change the NotReady value of this `AsyncSink` with the…",1,[[["f"]],["asyncsink"]]],[11,"is_ready","","Returns whether this is `AsyncSink::Ready`",1,[[["self"]],["bool"]]],[11,"is_not_ready","","Returns whether this is `AsyncSink::NotReady`",1,[[["self"]],["bool"]]],[0,"future","","Futures",null,null],[3,"Empty","futures::future","A future which is never resolved.",null,null],[3,"Lazy","","A future which defers creation of the actual future until…",null,null],[3,"PollFn","","A future which adapts a function returning `Poll`.",null,null],[3,"FutureResult","","A future representing a value that is immediately ready.",null,null],[3,"LoopFn","","A future implementing a tail-recursive loop.",null,null],[3,"AndThen","","Future for the `and_then` combinator, chaining a…",null,null],[3,"Flatten","","Future for the `flatten` combinator, flattening a…",null,null],[3,"FlattenStream","","Future for the `flatten_stream` combinator, flattening a…",null,null],[3,"Fuse","","A future which \"fuses\" a future once it's been resolved.",null,null],[3,"IntoStream","","Future that forwards one element from the underlying…",null,null],[3,"Join","","Future for the `join` combinator, waiting for two futures…",null,null],[3,"Join3","","Future for the `join3` combinator, waiting for three…",null,null],[3,"Join4","","Future for the `join4` combinator, waiting for four…",null,null],[3,"Join5","","Future for the `join5` combinator, waiting for five…",null,null],[3,"Map","","Future for the `map` combinator, changing the type of a…",null,null],[3,"MapErr","","Future for the `map_err` combinator, changing the error…",null,null],[3,"FromErr","","Future for the `from_err` combinator, changing the error…",null,null],[3,"OrElse","","Future for the `or_else` combinator, chaining a…",null,null],[3,"Select","","Future for the `select` combinator, waiting for one of two…",null,null],[3,"SelectNext","","Future yielded as the second result in a `Select` future.",null,null],[3,"Select2","","Future for the `select2` combinator, waiting for one of…",null,null],[3,"Then","","Future for the `then` combinator, chaining computations on…",null,null],[3,"Inspect","","Do something with the item of a future, passing it on.",null,null],[3,"CatchUnwind","","Future for the `catch_unwind` combinator.",null,null],[3,"JoinAll","","A future which takes a list of futures and resolves with a…",null,null],[3,"SelectAll","","Future for the `select_all` combinator, waiting for one of…",null,null],[3,"SelectOk","","Future for the `select_ok` combinator, waiting for one of…",null,null],[3,"Shared","","A future that is cloneable and can be polled in multiple…",null,null],[3,"SharedItem","","A wrapped item of the original future that is cloneable…",null,null],[3,"SharedError","","A wrapped error of the original future that is cloneable…",null,null],[3,"ExecuteError","","Errors returned from the `Spawn::spawn` function.",null,null],[4,"Loop","","The status of a `loop_fn` loop.",null,null],[13,"Break","","Indicates that the loop has completed with output `T`.",2,null],[13,"Continue","","Indicates that the loop function should be called again…",2,null],[4,"Either","","Combines two different futures yielding the same item and…",null,null],[13,"A","","First branch of the type",3,null],[13,"B","","Second branch of the type",3,null],[4,"ExecuteErrorKind","","Kinds of errors that can be returned from the…",null,null],[13,"Shutdown","","This executor has shut down and will no longer accept new…",4,null],[13,"NoCapacity","","This executor has no more capacity to run more futures.…",4,null],[5,"empty","","Creates a future which never resolves, representing a…",null,[[],["empty"]]],[5,"lazy","","Creates a new future which will eventually be the same as…",null,[[["f"]],["lazy"]]],[5,"poll_fn","","Creates a new future wrapping around a function returning…",null,[[["f"]],["pollfn"]]],[5,"result","","Creates a new \"leaf future\" which will resolve with the…",null,[[["result"]],["futureresult"]]],[5,"ok","","Creates a \"leaf future\" from an immediate value of a…",null,[[["t"]],["futureresult"]]],[5,"err","","Creates a \"leaf future\" from an immediate value of a…",null,[[["e"]],["futureresult"]]],[5,"loop_fn","","Creates a new future implementing a tail-recursive loop.",null,[[["s"],["f"]],["loopfn"]]],[5,"join_all","","Creates a future which represents a collection of the…",null,[[["i"]],["joinall"]]],[5,"select_all","","Creates a new future which will select over a list of…",null,[[["i"]],["selectall"]]],[5,"select_ok","","Creates a new future which will select the first…",null,[[["i"]],["selectok"]]],[11,"is_done","","Returns whether the underlying future has finished or not.",5,[[["self"]],["bool"]]],[11,"split","","Splits out the homogeneous type from an either of tuples.",3,[[]]],[11,"peek","","If any clone of this `Shared` has completed execution,…",6,[[["self"]],[["option",["result"]],["result",["shareditem","sharederror"]]]]],[8,"Future","","Trait for types which are a placeholder of a value that…",null,null],[16,"Item","","The type of value that this future will resolved with if…",7,null],[16,"Error","","The type of error that this future will resolve with if it…",7,null],[10,"poll","","Query this future to see if its value has become…",7,[[["self"]],["poll"]]],[11,"wait","","Block the current thread until this future is resolved.",7,[[],["result"]]],[11,"map","","Map this future's result to a different type, returning a…",7,[[["f"]],["map"]]],[11,"map_err","","Map this future's error to a different error, returning a…",7,[[["f"]],["maperr"]]],[11,"from_err","","Map this future's error to any error implementing `From`…",7,[[],[["fromerr"],["from"]]]],[11,"then","","Chain on a computation for when a future finished, passing…",7,[[["f"]],["then"]]],[11,"and_then","","Execute another future after this one has resolved…",7,[[["f"]],["andthen"]]],[11,"or_else","","Execute another future if this one resolves with an error.",7,[[["f"]],["orelse"]]],[11,"select","","Waits for either one of two futures to complete.",7,[[["b"]],["select"]]],[11,"select2","","Waits for either one of two differently-typed futures to…",7,[[["b"]],["select2"]]],[11,"join","","Joins the result of two futures, waiting for them both to…",7,[[["b"]],["join"]]],[11,"join3","","Same as `join`, but with more futures.",7,[[["c"],["b"]],["join3"]]],[11,"join4","","Same as `join`, but with more futures.",7,[[["c"],["d"],["b"]],["join4"]]],[11,"join5","","Same as `join`, but with more futures.",7,[[["e"],["c"],["d"],["b"]],["join5"]]],[11,"into_stream","","Convert this future into a single element stream.",7,[[],["intostream"]]],[11,"flatten","","Flatten the execution of this future when the successful…",7,[[],["flatten"]]],[11,"flatten_stream","","Flatten the execution of this future when the successful…",7,[[],["flattenstream"]]],[11,"fuse","","Fuse a future such that `poll` will never again be called…",7,[[],["fuse"]]],[11,"inspect","","Do something with the item of a future, passing it on.",7,[[["f"]],["inspect"]]],[11,"catch_unwind","","Catches unwinding panics while polling the future.",7,[[],["catchunwind"]]],[11,"shared","","Create a cloneable handle to this future where all handles…",7,[[],["shared"]]],[8,"IntoFuture","","Class of types which can be converted into a future.",null,null],[16,"Future","","The future that this type can be converted into.",8,null],[16,"Item","","The item that the future may resolve with.",8,null],[16,"Error","","The error that the future may resolve with.",8,null],[10,"into_future","","Consumes this object and produces a future.",8,[[]]],[8,"FutureFrom","","Asynchronous conversion from a type `T`.",null,null],[16,"Future","","The future for the conversion.",9,null],[16,"Error","","Possible errors during conversion.",9,null],[10,"future_from","","Consume the given value, beginning the conversion.",9,[[["t"]]]],[8,"Executor","","A trait for types which can spawn fresh futures.",null,null],[10,"execute","","Spawns a future to run on this `Executor`, typically in…",10,[[["self"],["f"]],[["result",["executeerror"]],["executeerror"]]]],[11,"new","","Create a new `ExecuteError`",11,[[["executeerrorkind"],["f"]],["executeerror"]]],[11,"kind","","Returns the associated reason for the error",11,[[["self"]],["executeerrorkind"]]],[11,"into_future","","Consumes self and returns the original future that was…",11,[[],["f"]]],[0,"stream","futures","Asynchronous streams",null,null],[3,"Iter","futures::stream","A stream which is just a shim over an underlying instance…",null,null],[3,"IterStream","","A stream which is just a shim over an underlying instance…",null,null],[3,"IterOk","","A stream which is just a shim over an underlying instance…",null,null],[3,"IterResult","","A stream which is just a shim over an underlying instance…",null,null],[3,"Repeat","","Stream that produces the same element repeatedly.",null,null],[3,"AndThen","","A stream combinator which chains a computation onto values…",null,null],[3,"Chain","","An adapter for chaining the output of two streams.",null,null],[3,"Concat","","A stream combinator to concatenate the results of a stream…",null,null],[3,"Concat2","","A stream combinator to concatenate the results of a stream…",null,null],[3,"Empty","","A stream which contains no elements.",null,null],[3,"Filter","","A stream combinator used to filter the results of a stream…",null,null],[3,"FilterMap","","A combinator used to filter the results of a stream and…",null,null],[3,"Flatten","","A combinator used to flatten a stream-of-streams into one…",null,null],[3,"Fold","","A future used to collect all the results of a stream into…",null,null],[3,"ForEach","","A stream combinator which executes a unit closure over…",null,null],[3,"FromErr","","A stream combinator to change the error type of a stream.",null,null],[3,"Fuse","","A stream which \"fuse\"s a stream once it's terminated.",null,null],[3,"StreamFuture","","A combinator used to temporarily convert a stream into a…",null,null],[3,"Inspect","","Do something with the items of a stream, passing it on.",null,null],[3,"InspectErr","","Do something with the error of a stream, passing it on.",null,null],[3,"Map","","A stream combinator which will change the type of a stream…",null,null],[3,"MapErr","","A stream combinator which will change the error type of a…",null,null],[3,"Merge","","An adapter for merging the output of two streams.",null,null],[3,"Once","","A stream which emits single element and then EOF.",null,null],[3,"OrElse","","A stream combinator which chains a computation onto errors…",null,null],[3,"Peekable","","A `Stream` that implements a `peek` method.",null,null],[3,"PollFn","","A stream which adapts a function returning `Poll`.",null,null],[3,"Select","","An adapter for merging the output of two streams.",null,null],[3,"Skip","","A stream combinator which skips a number of elements…",null,null],[3,"SkipWhile","","A stream combinator which skips elements of a stream while…",null,null],[3,"Take","","A stream combinator which returns a maximum number of…",null,null],[3,"TakeWhile","","A stream combinator which takes elements from a stream…",null,null],[3,"Then","","A stream combinator which chains a computation onto each…",null,null],[3,"Unfold","","A stream which creates futures, polls them and return…",null,null],[3,"Zip","","An adapter for merging the output of two streams.",null,null],[3,"Forward","","Future for the `Stream::forward` combinator, which sends a…",null,null],[3,"Buffered","","An adaptor for a stream of futures to execute the futures…",null,null],[3,"BufferUnordered","","An adaptor for a stream of futures to execute the futures…",null,null],[3,"CatchUnwind","","Stream for the `catch_unwind` combinator.",null,null],[3,"Chunks","","An adaptor that chunks up elements in a vector.",null,null],[3,"Collect","","A future which collects all of the values of a stream into…",null,null],[3,"Wait","","A stream combinator which converts an asynchronous stream…",null,null],[3,"SplitStream","","A `Stream` part of the split pair",null,null],[3,"SplitSink","","A `Sink` part of the split pair",null,null],[3,"ReuniteError","","Error indicating a `SplitSink<S>` and `SplitStream<S>`…",null,null],[12,"0","","",12,null],[12,"1","","",12,null],[3,"FuturesOrdered","","An unbounded queue of futures.",null,null],[4,"MergedItem","","An item returned from a merge stream, which represents an…",null,null],[13,"First","","An item from the first stream",13,null],[13,"Second","","An item from the second stream",13,null],[13,"Both","","Items from both streams",13,null],[5,"iter","","Converts an `Iterator` over `Result`s into a `Stream`…",null,[[["j"]],["iter"]]],[5,"iter_ok","","Converts an `Iterator` into a `Stream` which is always…",null,[[["i"]],["iterok"]]],[5,"iter_result","","Converts an `Iterator` over `Result`s into a `Stream`…",null,[[["j"]],["iterresult"]]],[5,"repeat","","Create a stream which produces the same item repeatedly.",null,[[["t"]],["repeat"]]],[5,"empty","","Creates a stream which contains no elements.",null,[[],["empty"]]],[5,"once","","Creates a stream of single element",null,[[["result"]],["once"]]],[5,"poll_fn","","Creates a new stream wrapping around a function returning…",null,[[["f"]],["pollfn"]]],[5,"unfold","","Creates a `Stream` from a seed and a closure returning a…",null,[[["t"],["f"]],["unfold"]]],[5,"futures_ordered","","Converts a list of futures into a `Stream` of results from…",null,[[["i"]],["futuresordered"]]],[5,"futures_unordered","","Converts a list of futures into a `Stream` of results from…",null,[[["i"]],["futuresunordered"]]],[11,"get_ref","","Acquires a reference to the underlying stream that this…",14,[[["self"]],["s"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that…",14,[[["self"]],["s"]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",14,[[],["s"]]],[11,"get_ref","","Acquires a reference to the underlying stream that this…",15,[[["self"]],["s"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that…",15,[[["self"]],["s"]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",15,[[],["s"]]],[11,"get_ref","","Acquires a reference to the underlying stream that this…",16,[[["self"]],["s"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that…",16,[[["self"]],["s"]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",16,[[],["s"]]],[11,"get_ref","","Acquires a reference to the underlying stream that this…",17,[[["self"]],["s"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that…",17,[[["self"]],["s"]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",17,[[],["s"]]],[11,"get_ref","","Acquires a reference to the underlying stream that this…",18,[[["self"]],["s"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that…",18,[[["self"]],["s"]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",18,[[],["s"]]],[11,"is_done","","Returns whether the underlying stream has finished or not.",19,[[["self"]],["bool"]]],[11,"get_ref","","Acquires a reference to the underlying stream that this…",19,[[["self"]],["s"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that…",19,[[["self"]],["s"]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",19,[[],["s"]]],[11,"get_ref","","Acquires a reference to the underlying stream that this…",20,[[["self"]],[["option"],["s"]]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that…",20,[[["self"]],[["s"],["option"]]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",20,[[],["option"]]],[11,"get_ref","","Acquires a reference to the underlying stream that this…",21,[[["self"]],["s"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that…",21,[[["self"]],["s"]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",21,[[],["s"]]],[11,"get_ref","","Acquires a reference to the underlying stream that this…",22,[[["self"]],["s"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that…",22,[[["self"]],["s"]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",22,[[],["s"]]],[11,"get_ref","","Acquires a reference to the underlying stream that this…",23,[[["self"]],["s"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that…",23,[[["self"]],["s"]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",23,[[],["s"]]],[11,"get_ref","","Acquires a reference to the underlying stream that this…",24,[[["self"]],["s"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that…",24,[[["self"]],["s"]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",24,[[],["s"]]],[11,"peek","","Peek retrieves a reference to the next item in the stream.",25,[[["self"]],[["poll",["option"]],["option"]]]],[11,"get_ref","","Acquires a reference to the underlying stream that this…",26,[[["self"]],["s"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that…",26,[[["self"]],["s"]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",26,[[],["s"]]],[11,"get_ref","","Acquires a reference to the underlying stream that this…",27,[[["self"]],["s"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that…",27,[[["self"]],["s"]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",27,[[],["s"]]],[11,"get_ref","","Acquires a reference to the underlying stream that this…",28,[[["self"]],["s"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that…",28,[[["self"]],["s"]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",28,[[],["s"]]],[11,"get_ref","","Acquires a reference to the underlying stream that this…",29,[[["self"]],["s"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that…",29,[[["self"]],["s"]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",29,[[],["s"]]],[11,"sink_ref","","Get a shared reference to the inner sink. If this…",30,[[["self"]],[["u"],["option"]]]],[11,"sink_mut","","Get a mutable reference to the inner sink. If this…",30,[[["self"]],[["u"],["option"]]]],[11,"stream_ref","","Get a shared reference to the inner stream. If this…",30,[[["self"]],[["t"],["option"]]]],[11,"stream_mut","","Get a mutable reference to the inner stream. If this…",30,[[["self"]],[["t"],["option"]]]],[11,"get_ref","","Acquires a reference to the underlying stream that this…",31,[[["self"]],["s"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that…",31,[[["self"]],["s"]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",31,[[],["s"]]],[11,"get_ref","","Acquires a reference to the underlying stream that this…",32,[[["self"]],["s"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that…",32,[[["self"]],["s"]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",32,[[],["s"]]],[11,"get_ref","","Acquires a reference to the underlying stream that this…",33,[[["self"]],["s"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that…",33,[[["self"]],["s"]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",33,[[],["s"]]],[11,"get_ref","","Acquires a reference to the underlying stream that this…",34,[[["self"]],["s"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that…",34,[[["self"]],["s"]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",34,[[],["s"]]],[11,"reunite","","Attempts to put the two \"halves\" of a split `Stream +…",35,[[["splitsink"]],[["result",["reuniteerror"]],["reuniteerror"]]]],[11,"reunite","","Attempts to put the two \"halves\" of a split `Stream +…",36,[[["splitstream"]],[["result",["reuniteerror"]],["reuniteerror"]]]],[0,"futures_unordered","","An unbounded set of futures.",null,null],[3,"FuturesUnordered","futures::stream::futures_unordered","An unbounded set of futures.",null,null],[3,"IterMut","","Mutable iterator over all futures in the unordered set.",null,null],[11,"new","","Constructs a new, empty `FuturesUnordered`",37,[[],["futuresunordered"]]],[11,"len","","Returns the number of futures contained in the set.",37,[[["self"]],["usize"]]],[11,"is_empty","","Returns `true` if the set contains no futures",37,[[["self"]],["bool"]]],[11,"push","","Push a future into the set.",37,[[["self"],["t"]]]],[11,"iter_mut","","Returns an iterator that allows modifying each future in…",37,[[["self"]],["itermut"]]],[11,"new","futures::stream","Constructs a new, empty `FuturesOrdered`",38,[[],["futuresordered"]]],[11,"len","","Returns the number of futures contained in the queue.",38,[[["self"]],["usize"]]],[11,"is_empty","","Returns `true` if the queue contains no futures",38,[[["self"]],["bool"]]],[11,"push","","Push a future into the queue.",38,[[["self"],["t"]]]],[8,"Stream","","A stream of values, not all of which may have been…",null,null],[16,"Item","","The type of item this stream will yield on success.",39,null],[16,"Error","","The type of error this stream may generate.",39,null],[10,"poll","","Attempt to pull out the next value of this stream,…",39,[[["self"]],[["poll",["option"]],["option"]]]],[11,"wait","","Creates an iterator which blocks the current thread until…",39,[[],["wait"]]],[11,"into_future","","Converts this stream into a `Future`.",39,[[],["streamfuture"]]],[11,"map","","Converts a stream of type `T` to a stream of type `U`.",39,[[["f"]],["map"]]],[11,"map_err","","Converts a stream of error type `T` to a stream of error…",39,[[["f"]],["maperr"]]],[11,"filter","","Filters the values produced by this stream according to…",39,[[["f"]],["filter"]]],[11,"filter_map","","Filters the values produced by this stream while…",39,[[["f"]],["filtermap"]]],[11,"then","","Chain on a computation for when a value is ready, passing…",39,[[["f"]],["then"]]],[11,"and_then","","Chain on a computation for when a value is ready, passing…",39,[[["f"]],["andthen"]]],[11,"or_else","","Chain on a computation for when an error happens, passing…",39,[[["f"]],["orelse"]]],[11,"collect","","Collect all of the values of this stream into a vector,…",39,[[],["collect"]]],[11,"concat2","","Concatenate all results of a stream into a single…",39,[[],["concat2"]]],[11,"concat","","Concatenate all results of a stream into a single…",39,[[],["concat"]]],[11,"fold","","Execute an accumulating computation over a stream,…",39,[[["t"],["f"]],["fold"]]],[11,"flatten","","Flattens a stream of streams into just one continuous…",39,[[],["flatten"]]],[11,"skip_while","","Skip elements on this stream while the predicate provided…",39,[[["p"]],["skipwhile"]]],[11,"take_while","","Take elements from this stream while the predicate…",39,[[["p"]],["takewhile"]]],[11,"for_each","","Runs this stream to completion, executing the provided…",39,[[["f"]],["foreach"]]],[11,"from_err","","Map this stream's error to any error implementing `From`…",39,[[],[["fromerr"],["from"]]]],[11,"take","","Creates a new stream of at most `amt` items of the…",39,[[["u64"]],["take"]]],[11,"skip","","Creates a new stream which skips `amt` items of the…",39,[[["u64"]],["skip"]]],[11,"fuse","","Fuse a stream such that `poll` will never again be called…",39,[[],["fuse"]]],[11,"by_ref","","Borrows a stream, rather than consuming it.",39,[[["self"]],["self"]]],[11,"catch_unwind","","Catches unwinding panics while polling the stream.",39,[[],["catchunwind"]]],[11,"buffered","","An adaptor for creating a buffered list of pending futures.",39,[[["usize"]],["buffered"]]],[11,"buffer_unordered","","An adaptor for creating a buffered list of pending futures…",39,[[["usize"]],["bufferunordered"]]],[11,"merge","","An adapter for merging the output of two streams.",39,[[["s"]],["merge"]]],[11,"zip","","An adapter for zipping two streams together.",39,[[["s"]],["zip"]]],[11,"chain","","Adapter for chaining two stream.",39,[[["s"]],["chain"]]],[11,"peekable","","Creates a new stream which exposes a `peek` method.",39,[[],["peekable"]]],[11,"chunks","","An adaptor for chunking up items of the stream inside a…",39,[[["usize"]],["chunks"]]],[11,"select","","Creates a stream that selects the next element from either…",39,[[["s"]],["select"]]],[11,"forward","","A future that completes after the given stream has been…",39,[[["s"]],["forward"]]],[11,"split","","Splits this `Stream + Sink` object into separate `Stream`…",39,[[]]],[11,"inspect","","Do something with each item of this stream, afterwards…",39,[[["f"]],["inspect"]]],[11,"inspect_err","","Do something with the error of this stream, afterwards…",39,[[["f"]],["inspecterr"]]],[0,"sink","futures","Asynchronous sinks",null,null],[3,"Buffer","futures::sink","Sink for the `Sink::buffer` combinator, which buffers up…",null,null],[3,"Wait","","A sink combinator which converts an asynchronous sink to a…",null,null],[3,"With","","Sink for the `Sink::with` combinator, chaining a…",null,null],[3,"WithFlatMap","","Sink for the `Sink::with_flat_map` combinator, chaining a…",null,null],[3,"Flush","","Future for the `Sink::flush` combinator, which polls the…",null,null],[3,"Send","","Future for the `Sink::send` combinator, which sends a…",null,null],[3,"SendAll","","Future for the `Sink::send_all` combinator, which sends a…",null,null],[3,"SinkMapErr","","Sink for the `Sink::sink_map_err` combinator.",null,null],[3,"SinkFromErr","","A sink combinator to change the error type of a sink.",null,null],[3,"Fanout","","Sink that clones incoming items and forwards them to two…",null,null],[11,"get_ref","","Get a shared reference to the inner sink.",40,[[["self"]],["s"]]],[11,"get_mut","","Get a mutable reference to the inner sink.",40,[[["self"]],["s"]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink.",40,[[],["s"]]],[11,"get_ref","","Get a shared reference to the inner sink.",41,[[["self"]],["s"]]],[11,"get_mut","","Get a mutable reference to the inner sink.",41,[[["self"]],["s"]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink.",41,[[],["s"]]],[11,"get_ref","","Get a shared reference to the inner sink.",42,[[["self"]],["s"]]],[11,"get_mut","","Get a mutable reference to the inner sink.",42,[[["self"]],["s"]]],[11,"into_inner","","Consume the `Flush` and return the inner sink.",42,[[],["s"]]],[11,"get_ref","","Get a shared reference to the inner sink.",43,[[["self"]],["s"]]],[11,"get_mut","","Get a mutable reference to the inner sink.",43,[[["self"]],["s"]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink.",43,[[],["s"]]],[11,"get_ref","","Get a shared reference to the inner sink.",44,[[["self"]],["s"]]],[11,"get_mut","","Get a mutable reference to the inner sink.",44,[[["self"]],["s"]]],[11,"get_ref","","Get a shared reference to the inner sink.",45,[[["self"]],["s"]]],[11,"get_mut","","Get a mutable reference to the inner sink.",45,[[["self"]],["s"]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink.",45,[[],["s"]]],[11,"into_inner","","Consumes this combinator, returning the underlying sinks.",46,[[]]],[11,"get_ref","","Get a shared reference to the inner sink.",47,[[["self"]],["s"]]],[11,"get_mut","","Get a mutable reference to the inner sink.",47,[[["self"]],["s"]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink.",47,[[],["s"]]],[11,"send","","Sends a value to this sink, blocking the current thread…",48,[[["self"]],["result"]]],[11,"flush","","Flushes any buffered data in this sink, blocking the…",48,[[["self"]],["result"]]],[11,"close","","Close this sink, blocking the current thread until it's…",48,[[["self"]],["result"]]],[6,"BoxSink","","A type alias for `Box<Sink + Send>`",null,null],[8,"Sink","","A `Sink` is a value into which other values can be sent,…",null,null],[16,"SinkItem","","The type of value that the sink accepts.",49,null],[16,"SinkError","","The type of value produced by the sink when an error occurs.",49,null],[10,"start_send","","Begin the process of sending a value to the sink.",49,[[["self"]],["startsend"]]],[10,"poll_complete","","Flush all output from this sink, if necessary.",49,[[["self"]],["poll"]]],[11,"close","","A method to indicate that no more values will ever be…",49,[[["self"]],["poll"]]],[11,"wait","","Creates a new object which will produce a synchronous sink.",49,[[],["wait"]]],[11,"with","","Composes a function in front of the sink.",49,[[["f"]],["with"]]],[11,"with_flat_map","","Composes a function in front of the sink.",49,[[["f"]],["withflatmap"]]],[11,"sink_map_err","","Transforms the error returned by the sink.",49,[[["f"]],["sinkmaperr"]]],[11,"sink_from_err","","Map this sink's error to any error implementing `From` for…",49,[[],[["sinkfromerr"],["from"]]]],[11,"buffer","","Adds a fixed-size buffer to the current sink.",49,[[["usize"]],["buffer"]]],[11,"fanout","","Fanout items to multiple sinks.",49,[[["s"]],["fanout"]]],[11,"flush","","A future that completes when the sink has finished…",49,[[],["flush"]]],[11,"send","","A future that completes after the given item has been…",49,[[],["send"]]],[11,"send_all","","A future that completes after the given stream has been…",49,[[["s"]],["sendall"]]],[0,"task","futures","Tasks used to drive a future computation",null,null],[3,"Task","futures::task","A handle to a \"task\", which represents a single…",null,null],[3,"AtomicTask","","A synchronization primitive for task notification.",null,null],[3,"LocalKey","","A key for task-local data stored in a future's task.",null,null],[3,"UnparkEvent","","A set insertion to trigger upon `unpark`.",null,null],[5,"current","","Returns a handle to the current task to call `notify` at a…",null,[[],["task"]]],[5,"init","","Initialize the `futures` task system.",null,[[],["bool"]]],[5,"is_in_task","","Return whether the caller is running in a task (and so can…",null,[[],["bool"]]],[5,"with_unpark_event","","For the duration of the given callback, add an \"unpark…",null,[[["unparkevent"],["f"]],["r"]]],[8,"EventSet","","A concurrent set which allows for the insertion of `usize`…",null,null],[10,"insert","","Insert the given ID into the set",50,[[["self"],["usize"]]]],[0,"executor","futures","Executors",null,null],[3,"Spawn","futures::executor","Representation of a spawned future/stream.",null,null],[3,"NotifyHandle","","A `NotifyHandle` is the core value through which…",null,null],[5,"spawn","","Spawns a future or stream, returning it and the new task…",null,[[["t"]],["spawn"]]],[5,"with_notify","","Sets the `NotifyHandle` of the current task for the…",null,[[["t"],["usize"],["f"]],["r"]]],[8,"Notify","","A trait which represents a sink of notifications that a…",null,null],[10,"notify","","Indicates that an associated future and/or task are ready…",51,[[["self"],["usize"]]]],[11,"clone_id","","This function is called whenever a new copy of `id` is…",51,[[["self"],["usize"]],["usize"]]],[11,"drop_id","","All instances of `Task` store an `id` that they're going…",51,[[["self"],["usize"]]]],[8,"UnsafeNotify","","An unsafe trait for implementing custom forms of memory…",null,null],[10,"clone_raw","","Creates a new `NotifyHandle` from this instance of…",52,[[["self"]],["notifyhandle"]]],[10,"drop_raw","","Drops this instance of `UnsafeNotify`, deallocating…",52,[[["self"]]]],[0,"sync","futures","Future-aware synchronization",null,null],[3,"BiLock","futures::sync","A type of futures-powered synchronization primitive which…",null,null],[3,"BiLockGuard","","Returned RAII guard from the `poll_lock` method.",null,null],[3,"BiLockAcquire","","Future returned by `BiLock::lock` which will resolve when…",null,null],[3,"BiLockAcquired","","Resolved value of the `BiLockAcquire<T>` future.",null,null],[0,"oneshot","","A one-shot, futures-aware channel",null,null],[3,"Receiver","futures::sync::oneshot","A future representing the completion of a computation…",null,null],[3,"Sender","","Represents the completion half of a oneshot through which…",null,null],[3,"Canceled","","Error returned from a `Receiver<T>` whenever the…",null,null],[3,"SpawnHandle","","Handle returned from the `spawn` function.",null,null],[3,"Execute","","Type of future which `Execute` instances below must be…",null,null],[5,"channel","","Creates a new futures-aware, one-shot channel.",null,[[]]],[5,"spawn","","Spawns a `future` onto the instance of `Executor`…",null,[[["f"],["e"]],["spawnhandle"]]],[5,"spawn_fn","","Spawns a function `f` onto the `Spawn` instance provided…",null,[[["f"],["e"]],["spawnhandle"]]],[11,"send","","Completes this oneshot with a successful result.",53,[[["t"]],["result"]]],[11,"poll_cancel","","Polls this `Sender` half to detect whether the `Receiver`…",53,[[["self"]],["poll"]]],[11,"is_canceled","","Tests to see whether this `Sender`'s corresponding…",53,[[["self"]],["bool"]]],[11,"close","","Gracefully close this receiver, preventing sending any…",54,[[["self"]]]],[11,"try_recv","","Attempts to receive a message outside of the context of a…",54,[[["self"]],[["canceled"],["result",["option","canceled"]],["option"]]]],[11,"forget","","Drop this future without canceling the underlying future.",55,[[]]],[0,"mpsc","futures::sync","A multi-producer, single-consumer, futures-aware, FIFO…",null,null],[3,"Sender","futures::sync::mpsc","The transmission end of a channel which is used to send…",null,null],[3,"UnboundedSender","","The transmission end of a channel which is used to send…",null,null],[3,"Receiver","","The receiving end of a channel which implements the…",null,null],[3,"UnboundedReceiver","","The receiving end of a channel which implements the…",null,null],[3,"SendError","","Error type for sending, used when the receiving end of a…",null,null],[3,"TrySendError","","Error type returned from `try_send`",null,null],[3,"SpawnHandle","","Handle returned from the `spawn` function.",null,null],[3,"Execute","","Type of future which `Executor` instances must be able to…",null,null],[5,"channel","","Creates an in-memory channel implementation of the…",null,[[["usize"]]]],[5,"unbounded","","Creates an in-memory channel implementation of the…",null,[[]]],[5,"spawn","","Spawns a `stream` onto the instance of `Executor`…",null,[[["s"],["e"],["usize"]],["spawnhandle"]]],[5,"spawn_unbounded","","Spawns a `stream` onto the instance of `Executor`…",null,[[["s"],["e"]],["spawnhandle"]]],[11,"into_inner","","Returns the message that was attempted to be sent but…",56,[[],["t"]]],[11,"is_full","","Returns true if this error is a result of the channel…",57,[[["self"]],["bool"]]],[11,"is_disconnected","","Returns true if this error is a result of the receiver…",57,[[["self"]],["bool"]]],[11,"into_inner","","Returns the message that was attempted to be sent but…",57,[[],["t"]]],[11,"try_send","","Attempts to send a message on this `Sender<T>` without…",58,[[["self"],["t"]],[["trysenderror"],["result",["trysenderror"]]]]],[11,"poll_ready","","Polls the channel to determine if there is guaranteed to…",58,[[["self"]],[["senderror"],["poll",["senderror"]]]]],[11,"is_closed","","Returns whether this channel is closed without needing a…",58,[[["self"]],["bool"]]],[11,"is_closed","","Returns whether this channel is closed without needing a…",59,[[["self"]],["bool"]]],[11,"unbounded_send","","Sends the provided message along this channel.",59,[[["self"],["t"]],[["result",["senderror"]],["senderror"]]]],[11,"close","","Closes the receiving half",60,[[["self"]]]],[11,"close","","Closes the receiving half",61,[[["self"]]]],[11,"new","futures::sync","Creates a new `BiLock` protecting the provided data.",62,[[["t"]]]],[11,"poll_lock","","Attempt to acquire this lock, returning `NotReady` if it…",62,[[["self"]],[["async",["bilockguard"]],["bilockguard"]]]],[11,"lock","","Perform a \"blocking lock\" of this lock, consuming this…",62,[[],["bilockacquire"]]],[11,"reunite","","Attempts to put the two \"halves\" of a `BiLock<T>` back…",62,[[],[["result",["reuniteerror"]],["reuniteerror"]]]],[11,"unlock","","Recovers the original `BiLock<T>`, unlocking this lock.",63,[[],["bilock"]]],[0,"unsync","futures","Future-aware single-threaded synchronization",null,null],[0,"mpsc","futures::unsync","A multi-producer, single-consumer, futures-aware, FIFO…",null,null],[3,"Sender","futures::unsync::mpsc","The transmission end of a channel.",null,null],[3,"Receiver","","The receiving end of a channel which implements the…",null,null],[3,"UnboundedSender","","The transmission end of an unbounded channel.",null,null],[3,"UnboundedReceiver","","The receiving end of an unbounded channel.",null,null],[3,"SendError","","Error type for sending, used when the receiving end of a…",null,null],[3,"SpawnHandle","","Handle returned from the `spawn` function.",null,null],[3,"Execute","","Type of future which `Executor` instances must be able to…",null,null],[5,"channel","","Creates a bounded in-memory channel with buffered storage.",null,[[["usize"]]]],[5,"unbounded","","Creates an unbounded in-memory channel with buffered…",null,[[]]],[5,"spawn","","Spawns a `stream` onto the instance of `Executor`…",null,[[["s"],["e"],["usize"]],["spawnhandle"]]],[5,"spawn_unbounded","","Spawns a `stream` onto the instance of `Executor`…",null,[[["s"],["e"]],["spawnhandle"]]],[11,"close","","Closes the receiving half",64,[[["self"]]]],[11,"unbounded_send","","Sends the provided message along this channel.",65,[[["self"],["t"]],[["result",["senderror"]],["senderror"]]]],[11,"close","","Closes the receiving half",66,[[["self"]]]],[11,"into_inner","","Returns the message that was attempted to be sent but…",67,[[],["t"]]],[0,"oneshot","futures::unsync","A one-shot, futures-aware channel",null,null],[3,"Sender","futures::unsync::oneshot","Represents the completion half of a oneshot through which…",null,null],[3,"Receiver","","A future representing the completion of a computation…",null,null],[3,"SpawnHandle","","Handle returned from the `spawn` function.",null,null],[3,"Execute","","Type of future which `Spawn` instances below must be able…",null,null],[5,"channel","","Creates a new futures-aware, one-shot channel.",null,[[]]],[5,"spawn","","Spawns a `future` onto the instance of `Executor`…",null,[[["f"],["e"]],["spawnhandle"]]],[5,"spawn_fn","","Spawns a function `f` onto the `Spawn` instance provided…",null,[[["f"],["e"]],["spawnhandle"]]],[11,"send","","Completes this oneshot with a successful result.",68,[[["t"]],["result"]]],[11,"poll_cancel","","Polls this `Sender` half to detect whether the `Receiver`…",68,[[["self"]],["poll"]]],[11,"is_canceled","","Tests to see whether this `Sender`'s corresponding…",68,[[["self"]],["bool"]]],[11,"close","","Gracefully close this receiver, preventing sending any…",69,[[["self"]]]],[11,"forget","","Drop this future without canceling the underlying future.",70,[[]]],[0,"prelude","futures","A \"prelude\" for crates using the `futures` crate.",null,null],[6,"Poll","","Return type of the `Future::poll` method, indicates…",null,null],[6,"StartSend","","Return type of the `Sink::start_send` method, indicating…",null,null],[14,"try_ready","","A macro for extracting the successful type of a `Poll<T,…",null,null],[14,"task_local","","A macro to create a `static` of type `LocalKey`",null,null],[11,"from","","",0,[[],["t"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"into","","",0,[[],["u"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"into","","",1,[[],["u"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"into_future","futures::future","",71,[[],["f"]]],[11,"from","","",71,[[["t"]],["t"]]],[11,"try_from","","",71,[[["u"]],["result"]]],[11,"into","","",71,[[],["u"]]],[11,"try_into","","",71,[[],["result"]]],[11,"borrow","","",71,[[["self"]],["t"]]],[11,"borrow_mut","","",71,[[["self"]],["t"]]],[11,"type_id","","",71,[[["self"]],["typeid"]]],[11,"into_future","","",72,[[],["f"]]],[11,"from","","",72,[[["t"]],["t"]]],[11,"try_from","","",72,[[["u"]],["result"]]],[11,"into","","",72,[[],["u"]]],[11,"try_into","","",72,[[],["result"]]],[11,"borrow","","",72,[[["self"]],["t"]]],[11,"borrow_mut","","",72,[[["self"]],["t"]]],[11,"type_id","","",72,[[["self"]],["typeid"]]],[11,"into_future","","",73,[[],["f"]]],[11,"from","","",73,[[["t"]],["t"]]],[11,"try_from","","",73,[[["u"]],["result"]]],[11,"into","","",73,[[],["u"]]],[11,"try_into","","",73,[[],["result"]]],[11,"borrow","","",73,[[["self"]],["t"]]],[11,"borrow_mut","","",73,[[["self"]],["t"]]],[11,"type_id","","",73,[[["self"]],["typeid"]]],[11,"into_future","","",74,[[],["f"]]],[11,"from","","",74,[[["t"]],["t"]]],[11,"try_from","","",74,[[["u"]],["result"]]],[11,"into","","",74,[[],["u"]]],[11,"try_into","","",74,[[],["result"]]],[11,"borrow","","",74,[[["self"]],["t"]]],[11,"borrow_mut","","",74,[[["self"]],["t"]]],[11,"type_id","","",74,[[["self"]],["typeid"]]],[11,"to_owned","","",74,[[["self"]],["t"]]],[11,"clone_into","","",74,[[["self"],["t"]]]],[11,"into_future","","",75,[[],["f"]]],[11,"from","","",75,[[["t"]],["t"]]],[11,"try_from","","",75,[[["u"]],["result"]]],[11,"into","","",75,[[],["u"]]],[11,"try_into","","",75,[[],["result"]]],[11,"borrow","","",75,[[["self"]],["t"]]],[11,"borrow_mut","","",75,[[["self"]],["t"]]],[11,"type_id","","",75,[[["self"]],["typeid"]]],[11,"into_future","","",76,[[],["f"]]],[11,"from","","",76,[[["t"]],["t"]]],[11,"try_from","","",76,[[["u"]],["result"]]],[11,"into","","",76,[[],["u"]]],[11,"try_into","","",76,[[],["result"]]],[11,"borrow","","",76,[[["self"]],["t"]]],[11,"borrow_mut","","",76,[[["self"]],["t"]]],[11,"type_id","","",76,[[["self"]],["typeid"]]],[11,"into_future","","",77,[[],["f"]]],[11,"from","","",77,[[["t"]],["t"]]],[11,"try_from","","",77,[[["u"]],["result"]]],[11,"into","","",77,[[],["u"]]],[11,"try_into","","",77,[[],["result"]]],[11,"borrow","","",77,[[["self"]],["t"]]],[11,"borrow_mut","","",77,[[["self"]],["t"]]],[11,"type_id","","",77,[[["self"]],["typeid"]]],[11,"from","","",78,[[["t"]],["t"]]],[11,"try_from","","",78,[[["u"]],["result"]]],[11,"into","","",78,[[],["u"]]],[11,"try_into","","",78,[[],["result"]]],[11,"borrow","","",78,[[["self"]],["t"]]],[11,"borrow_mut","","",78,[[["self"]],["t"]]],[11,"type_id","","",78,[[["self"]],["typeid"]]],[11,"into_future","","",5,[[],["f"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"into","","",5,[[],["u"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",79,[[["t"]],["t"]]],[11,"try_from","","",79,[[["u"]],["result"]]],[11,"into","","",79,[[],["u"]]],[11,"try_into","","",79,[[],["result"]]],[11,"borrow","","",79,[[["self"]],["t"]]],[11,"borrow_mut","","",79,[[["self"]],["t"]]],[11,"type_id","","",79,[[["self"]],["typeid"]]],[11,"into_future","","",80,[[],["f"]]],[11,"from","","",80,[[["t"]],["t"]]],[11,"try_from","","",80,[[["u"]],["result"]]],[11,"into","","",80,[[],["u"]]],[11,"try_into","","",80,[[],["result"]]],[11,"borrow","","",80,[[["self"]],["t"]]],[11,"borrow_mut","","",80,[[["self"]],["t"]]],[11,"type_id","","",80,[[["self"]],["typeid"]]],[11,"into_future","","",81,[[],["f"]]],[11,"from","","",81,[[["t"]],["t"]]],[11,"try_from","","",81,[[["u"]],["result"]]],[11,"into","","",81,[[],["u"]]],[11,"try_into","","",81,[[],["result"]]],[11,"borrow","","",81,[[["self"]],["t"]]],[11,"borrow_mut","","",81,[[["self"]],["t"]]],[11,"type_id","","",81,[[["self"]],["typeid"]]],[11,"into_future","","",82,[[],["f"]]],[11,"from","","",82,[[["t"]],["t"]]],[11,"try_from","","",82,[[["u"]],["result"]]],[11,"into","","",82,[[],["u"]]],[11,"try_into","","",82,[[],["result"]]],[11,"borrow","","",82,[[["self"]],["t"]]],[11,"borrow_mut","","",82,[[["self"]],["t"]]],[11,"type_id","","",82,[[["self"]],["typeid"]]],[11,"into_future","","",83,[[],["f"]]],[11,"from","","",83,[[["t"]],["t"]]],[11,"try_from","","",83,[[["u"]],["result"]]],[11,"into","","",83,[[],["u"]]],[11,"try_into","","",83,[[],["result"]]],[11,"borrow","","",83,[[["self"]],["t"]]],[11,"borrow_mut","","",83,[[["self"]],["t"]]],[11,"type_id","","",83,[[["self"]],["typeid"]]],[11,"into_future","","",84,[[],["f"]]],[11,"from","","",84,[[["t"]],["t"]]],[11,"try_from","","",84,[[["u"]],["result"]]],[11,"into","","",84,[[],["u"]]],[11,"try_into","","",84,[[],["result"]]],[11,"borrow","","",84,[[["self"]],["t"]]],[11,"borrow_mut","","",84,[[["self"]],["t"]]],[11,"type_id","","",84,[[["self"]],["typeid"]]],[11,"into_future","","",85,[[],["f"]]],[11,"from","","",85,[[["t"]],["t"]]],[11,"try_from","","",85,[[["u"]],["result"]]],[11,"into","","",85,[[],["u"]]],[11,"try_into","","",85,[[],["result"]]],[11,"borrow","","",85,[[["self"]],["t"]]],[11,"borrow_mut","","",85,[[["self"]],["t"]]],[11,"type_id","","",85,[[["self"]],["typeid"]]],[11,"into_future","","",86,[[],["f"]]],[11,"from","","",86,[[["t"]],["t"]]],[11,"try_from","","",86,[[["u"]],["result"]]],[11,"into","","",86,[[],["u"]]],[11,"try_into","","",86,[[],["result"]]],[11,"borrow","","",86,[[["self"]],["t"]]],[11,"borrow_mut","","",86,[[["self"]],["t"]]],[11,"type_id","","",86,[[["self"]],["typeid"]]],[11,"into_future","","",87,[[],["f"]]],[11,"from","","",87,[[["t"]],["t"]]],[11,"try_from","","",87,[[["u"]],["result"]]],[11,"into","","",87,[[],["u"]]],[11,"try_into","","",87,[[],["result"]]],[11,"borrow","","",87,[[["self"]],["t"]]],[11,"borrow_mut","","",87,[[["self"]],["t"]]],[11,"type_id","","",87,[[["self"]],["typeid"]]],[11,"into_future","","",88,[[],["f"]]],[11,"from","","",88,[[["t"]],["t"]]],[11,"try_from","","",88,[[["u"]],["result"]]],[11,"into","","",88,[[],["u"]]],[11,"try_into","","",88,[[],["result"]]],[11,"borrow","","",88,[[["self"]],["t"]]],[11,"borrow_mut","","",88,[[["self"]],["t"]]],[11,"type_id","","",88,[[["self"]],["typeid"]]],[11,"into_future","","",89,[[],["f"]]],[11,"from","","",89,[[["t"]],["t"]]],[11,"try_from","","",89,[[["u"]],["result"]]],[11,"into","","",89,[[],["u"]]],[11,"try_into","","",89,[[],["result"]]],[11,"borrow","","",89,[[["self"]],["t"]]],[11,"borrow_mut","","",89,[[["self"]],["t"]]],[11,"type_id","","",89,[[["self"]],["typeid"]]],[11,"into_future","","",90,[[],["f"]]],[11,"from","","",90,[[["t"]],["t"]]],[11,"try_from","","",90,[[["u"]],["result"]]],[11,"into","","",90,[[],["u"]]],[11,"try_into","","",90,[[],["result"]]],[11,"borrow","","",90,[[["self"]],["t"]]],[11,"borrow_mut","","",90,[[["self"]],["t"]]],[11,"type_id","","",90,[[["self"]],["typeid"]]],[11,"into_future","","",91,[[],["f"]]],[11,"from","","",91,[[["t"]],["t"]]],[11,"try_from","","",91,[[["u"]],["result"]]],[11,"into","","",91,[[],["u"]]],[11,"try_into","","",91,[[],["result"]]],[11,"borrow","","",91,[[["self"]],["t"]]],[11,"borrow_mut","","",91,[[["self"]],["t"]]],[11,"type_id","","",91,[[["self"]],["typeid"]]],[11,"into_future","","",92,[[],["f"]]],[11,"from","","",92,[[["t"]],["t"]]],[11,"try_from","","",92,[[["u"]],["result"]]],[11,"into","","",92,[[],["u"]]],[11,"try_into","","",92,[[],["result"]]],[11,"borrow","","",92,[[["self"]],["t"]]],[11,"borrow_mut","","",92,[[["self"]],["t"]]],[11,"type_id","","",92,[[["self"]],["typeid"]]],[11,"into_future","","",93,[[],["f"]]],[11,"from","","",93,[[["t"]],["t"]]],[11,"try_from","","",93,[[["u"]],["result"]]],[11,"into","","",93,[[],["u"]]],[11,"try_into","","",93,[[],["result"]]],[11,"borrow","","",93,[[["self"]],["t"]]],[11,"borrow_mut","","",93,[[["self"]],["t"]]],[11,"type_id","","",93,[[["self"]],["typeid"]]],[11,"into_future","","",94,[[],["f"]]],[11,"from","","",94,[[["t"]],["t"]]],[11,"try_from","","",94,[[["u"]],["result"]]],[11,"into","","",94,[[],["u"]]],[11,"try_into","","",94,[[],["result"]]],[11,"borrow","","",94,[[["self"]],["t"]]],[11,"borrow_mut","","",94,[[["self"]],["t"]]],[11,"type_id","","",94,[[["self"]],["typeid"]]],[11,"into_future","","",95,[[],["f"]]],[11,"from","","",95,[[["t"]],["t"]]],[11,"try_from","","",95,[[["u"]],["result"]]],[11,"into","","",95,[[],["u"]]],[11,"try_into","","",95,[[],["result"]]],[11,"borrow","","",95,[[["self"]],["t"]]],[11,"borrow_mut","","",95,[[["self"]],["t"]]],[11,"type_id","","",95,[[["self"]],["typeid"]]],[11,"into_future","","",96,[[],["f"]]],[11,"from","","",96,[[["t"]],["t"]]],[11,"try_from","","",96,[[["u"]],["result"]]],[11,"into","","",96,[[],["u"]]],[11,"try_into","","",96,[[],["result"]]],[11,"borrow","","",96,[[["self"]],["t"]]],[11,"borrow_mut","","",96,[[["self"]],["t"]]],[11,"type_id","","",96,[[["self"]],["typeid"]]],[11,"into_future","","",6,[[],["f"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"into","","",6,[[],["u"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,[[["self"],["t"]]]],[11,"from","","",97,[[["t"]],["t"]]],[11,"try_from","","",97,[[["u"]],["result"]]],[11,"into","","",97,[[],["u"]]],[11,"try_into","","",97,[[],["result"]]],[11,"borrow","","",97,[[["self"]],["t"]]],[11,"borrow_mut","","",97,[[["self"]],["t"]]],[11,"type_id","","",97,[[["self"]],["typeid"]]],[11,"to_owned","","",97,[[["self"]],["t"]]],[11,"clone_into","","",97,[[["self"],["t"]]]],[11,"from","","",98,[[["t"]],["t"]]],[11,"try_from","","",98,[[["u"]],["result"]]],[11,"into","","",98,[[],["u"]]],[11,"try_into","","",98,[[],["result"]]],[11,"borrow","","",98,[[["self"]],["t"]]],[11,"borrow_mut","","",98,[[["self"]],["t"]]],[11,"type_id","","",98,[[["self"]],["typeid"]]],[11,"to_owned","","",98,[[["self"]],["t"]]],[11,"clone_into","","",98,[[["self"],["t"]]]],[11,"to_string","","",98,[[["self"]],["string"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"into","","",11,[[],["u"]]],[11,"try_into","","",11,[[],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"type_id","","",11,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"into","","",2,[[],["u"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"into_future","","",3,[[],["f"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"into","","",3,[[],["u"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"into","","",4,[[],["u"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,[[["self"],["t"]]]],[11,"from","futures::stream","",99,[[["t"]],["t"]]],[11,"try_from","","",99,[[["u"]],["result"]]],[11,"into","","",99,[[],["u"]]],[11,"try_into","","",99,[[],["result"]]],[11,"borrow","","",99,[[["self"]],["t"]]],[11,"borrow_mut","","",99,[[["self"]],["t"]]],[11,"type_id","","",99,[[["self"]],["typeid"]]],[11,"from","","",100,[[["t"]],["t"]]],[11,"try_from","","",100,[[["u"]],["result"]]],[11,"into","","",100,[[],["u"]]],[11,"try_into","","",100,[[],["result"]]],[11,"borrow","","",100,[[["self"]],["t"]]],[11,"borrow_mut","","",100,[[["self"]],["t"]]],[11,"type_id","","",100,[[["self"]],["typeid"]]],[11,"from","","",101,[[["t"]],["t"]]],[11,"try_from","","",101,[[["u"]],["result"]]],[11,"into","","",101,[[],["u"]]],[11,"try_into","","",101,[[],["result"]]],[11,"borrow","","",101,[[["self"]],["t"]]],[11,"borrow_mut","","",101,[[["self"]],["t"]]],[11,"type_id","","",101,[[["self"]],["typeid"]]],[11,"from","","",102,[[["t"]],["t"]]],[11,"try_from","","",102,[[["u"]],["result"]]],[11,"into","","",102,[[],["u"]]],[11,"try_into","","",102,[[],["result"]]],[11,"borrow","","",102,[[["self"]],["t"]]],[11,"borrow_mut","","",102,[[["self"]],["t"]]],[11,"type_id","","",102,[[["self"]],["typeid"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"into","","",14,[[],["u"]]],[11,"try_into","","",14,[[],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"type_id","","",14,[[["self"]],["typeid"]]],[11,"from","","",103,[[["t"]],["t"]]],[11,"try_from","","",103,[[["u"]],["result"]]],[11,"into","","",103,[[],["u"]]],[11,"try_into","","",103,[[],["result"]]],[11,"borrow","","",103,[[["self"]],["t"]]],[11,"borrow_mut","","",103,[[["self"]],["t"]]],[11,"type_id","","",103,[[["self"]],["typeid"]]],[11,"into_future","","",104,[[],["f"]]],[11,"from","","",104,[[["t"]],["t"]]],[11,"try_from","","",104,[[["u"]],["result"]]],[11,"into","","",104,[[],["u"]]],[11,"try_into","","",104,[[],["result"]]],[11,"borrow","","",104,[[["self"]],["t"]]],[11,"borrow_mut","","",104,[[["self"]],["t"]]],[11,"type_id","","",104,[[["self"]],["typeid"]]],[11,"into_future","","",105,[[],["f"]]],[11,"from","","",105,[[["t"]],["t"]]],[11,"try_from","","",105,[[["u"]],["result"]]],[11,"into","","",105,[[],["u"]]],[11,"try_into","","",105,[[],["result"]]],[11,"borrow","","",105,[[["self"]],["t"]]],[11,"borrow_mut","","",105,[[["self"]],["t"]]],[11,"type_id","","",105,[[["self"]],["typeid"]]],[11,"from","","",106,[[["t"]],["t"]]],[11,"try_from","","",106,[[["u"]],["result"]]],[11,"into","","",106,[[],["u"]]],[11,"try_into","","",106,[[],["result"]]],[11,"borrow","","",106,[[["self"]],["t"]]],[11,"borrow_mut","","",106,[[["self"]],["t"]]],[11,"type_id","","",106,[[["self"]],["typeid"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"into","","",15,[[],["u"]]],[11,"try_into","","",15,[[],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"type_id","","",15,[[["self"]],["typeid"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"into","","",16,[[],["u"]]],[11,"try_into","","",16,[[],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"type_id","","",16,[[["self"]],["typeid"]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"into","","",17,[[],["u"]]],[11,"try_into","","",17,[[],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"type_id","","",17,[[["self"]],["typeid"]]],[11,"into_future","","",107,[[],["f"]]],[11,"from","","",107,[[["t"]],["t"]]],[11,"try_from","","",107,[[["u"]],["result"]]],[11,"into","","",107,[[],["u"]]],[11,"try_into","","",107,[[],["result"]]],[11,"borrow","","",107,[[["self"]],["t"]]],[11,"borrow_mut","","",107,[[["self"]],["t"]]],[11,"type_id","","",107,[[["self"]],["typeid"]]],[11,"into_future","","",108,[[],["f"]]],[11,"from","","",108,[[["t"]],["t"]]],[11,"try_from","","",108,[[["u"]],["result"]]],[11,"into","","",108,[[],["u"]]],[11,"try_into","","",108,[[],["result"]]],[11,"borrow","","",108,[[["self"]],["t"]]],[11,"borrow_mut","","",108,[[["self"]],["t"]]],[11,"type_id","","",108,[[["self"]],["typeid"]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"into","","",18,[[],["u"]]],[11,"try_into","","",18,[[],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"type_id","","",18,[[["self"]],["typeid"]]],[11,"from","","",19,[[["t"]],["t"]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"into","","",19,[[],["u"]]],[11,"try_into","","",19,[[],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"type_id","","",19,[[["self"]],["typeid"]]],[11,"into_future","","",20,[[],["f"]]],[11,"from","","",20,[[["t"]],["t"]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"into","","",20,[[],["u"]]],[11,"try_into","","",20,[[],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"type_id","","",20,[[["self"]],["typeid"]]],[11,"from","","",21,[[["t"]],["t"]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"into","","",21,[[],["u"]]],[11,"try_into","","",21,[[],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"type_id","","",21,[[["self"]],["typeid"]]],[11,"from","","",22,[[["t"]],["t"]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"into","","",22,[[],["u"]]],[11,"try_into","","",22,[[],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"type_id","","",22,[[["self"]],["typeid"]]],[11,"from","","",23,[[["t"]],["t"]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"into","","",23,[[],["u"]]],[11,"try_into","","",23,[[],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"type_id","","",23,[[["self"]],["typeid"]]],[11,"from","","",24,[[["t"]],["t"]]],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"into","","",24,[[],["u"]]],[11,"try_into","","",24,[[],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"type_id","","",24,[[["self"]],["typeid"]]],[11,"from","","",109,[[["t"]],["t"]]],[11,"try_from","","",109,[[["u"]],["result"]]],[11,"into","","",109,[[],["u"]]],[11,"try_into","","",109,[[],["result"]]],[11,"borrow","","",109,[[["self"]],["t"]]],[11,"borrow_mut","","",109,[[["self"]],["t"]]],[11,"type_id","","",109,[[["self"]],["typeid"]]],[11,"from","","",110,[[["t"]],["t"]]],[11,"try_from","","",110,[[["u"]],["result"]]],[11,"into","","",110,[[],["u"]]],[11,"try_into","","",110,[[],["result"]]],[11,"borrow","","",110,[[["self"]],["t"]]],[11,"borrow_mut","","",110,[[["self"]],["t"]]],[11,"type_id","","",110,[[["self"]],["typeid"]]],[11,"from","","",111,[[["t"]],["t"]]],[11,"try_from","","",111,[[["u"]],["result"]]],[11,"into","","",111,[[],["u"]]],[11,"try_into","","",111,[[],["result"]]],[11,"borrow","","",111,[[["self"]],["t"]]],[11,"borrow_mut","","",111,[[["self"]],["t"]]],[11,"type_id","","",111,[[["self"]],["typeid"]]],[11,"from","","",25,[[["t"]],["t"]]],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"into","","",25,[[],["u"]]],[11,"try_into","","",25,[[],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"type_id","","",25,[[["self"]],["typeid"]]],[11,"from","","",112,[[["t"]],["t"]]],[11,"try_from","","",112,[[["u"]],["result"]]],[11,"into","","",112,[[],["u"]]],[11,"try_into","","",112,[[],["result"]]],[11,"borrow","","",112,[[["self"]],["t"]]],[11,"borrow_mut","","",112,[[["self"]],["t"]]],[11,"type_id","","",112,[[["self"]],["typeid"]]],[11,"from","","",113,[[["t"]],["t"]]],[11,"try_from","","",113,[[["u"]],["result"]]],[11,"into","","",113,[[],["u"]]],[11,"try_into","","",113,[[],["result"]]],[11,"borrow","","",113,[[["self"]],["t"]]],[11,"borrow_mut","","",113,[[["self"]],["t"]]],[11,"type_id","","",113,[[["self"]],["typeid"]]],[11,"from","","",26,[[["t"]],["t"]]],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"into","","",26,[[],["u"]]],[11,"try_into","","",26,[[],["result"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"type_id","","",26,[[["self"]],["typeid"]]],[11,"from","","",27,[[["t"]],["t"]]],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"into","","",27,[[],["u"]]],[11,"try_into","","",27,[[],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"type_id","","",27,[[["self"]],["typeid"]]],[11,"from","","",28,[[["t"]],["t"]]],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"into","","",28,[[],["u"]]],[11,"try_into","","",28,[[],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"type_id","","",28,[[["self"]],["typeid"]]],[11,"from","","",29,[[["t"]],["t"]]],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"into","","",29,[[],["u"]]],[11,"try_into","","",29,[[],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"type_id","","",29,[[["self"]],["typeid"]]],[11,"from","","",114,[[["t"]],["t"]]],[11,"try_from","","",114,[[["u"]],["result"]]],[11,"into","","",114,[[],["u"]]],[11,"try_into","","",114,[[],["result"]]],[11,"borrow","","",114,[[["self"]],["t"]]],[11,"borrow_mut","","",114,[[["self"]],["t"]]],[11,"type_id","","",114,[[["self"]],["typeid"]]],[11,"from","","",115,[[["t"]],["t"]]],[11,"try_from","","",115,[[["u"]],["result"]]],[11,"into","","",115,[[],["u"]]],[11,"try_into","","",115,[[],["result"]]],[11,"borrow","","",115,[[["self"]],["t"]]],[11,"borrow_mut","","",115,[[["self"]],["t"]]],[11,"type_id","","",115,[[["self"]],["typeid"]]],[11,"from","","",116,[[["t"]],["t"]]],[11,"try_from","","",116,[[["u"]],["result"]]],[11,"into","","",116,[[],["u"]]],[11,"try_into","","",116,[[],["result"]]],[11,"borrow","","",116,[[["self"]],["t"]]],[11,"borrow_mut","","",116,[[["self"]],["t"]]],[11,"type_id","","",116,[[["self"]],["typeid"]]],[11,"into_future","","",30,[[],["f"]]],[11,"from","","",30,[[["t"]],["t"]]],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"into","","",30,[[],["u"]]],[11,"try_into","","",30,[[],["result"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"type_id","","",30,[[["self"]],["typeid"]]],[11,"from","","",31,[[["t"]],["t"]]],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"into","","",31,[[],["u"]]],[11,"try_into","","",31,[[],["result"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"type_id","","",31,[[["self"]],["typeid"]]],[11,"from","","",32,[[["t"]],["t"]]],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"into","","",32,[[],["u"]]],[11,"try_into","","",32,[[],["result"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"type_id","","",32,[[["self"]],["typeid"]]],[11,"from","","",117,[[["t"]],["t"]]],[11,"try_from","","",117,[[["u"]],["result"]]],[11,"into","","",117,[[],["u"]]],[11,"try_into","","",117,[[],["result"]]],[11,"borrow","","",117,[[["self"]],["t"]]],[11,"borrow_mut","","",117,[[["self"]],["t"]]],[11,"type_id","","",117,[[["self"]],["typeid"]]],[11,"from","","",33,[[["t"]],["t"]]],[11,"try_from","","",33,[[["u"]],["result"]]],[11,"into","","",33,[[],["u"]]],[11,"try_into","","",33,[[],["result"]]],[11,"borrow","","",33,[[["self"]],["t"]]],[11,"borrow_mut","","",33,[[["self"]],["t"]]],[11,"type_id","","",33,[[["self"]],["typeid"]]],[11,"into_future","","",118,[[],["f"]]],[11,"from","","",118,[[["t"]],["t"]]],[11,"try_from","","",118,[[["u"]],["result"]]],[11,"into","","",118,[[],["u"]]],[11,"try_into","","",118,[[],["result"]]],[11,"borrow","","",118,[[["self"]],["t"]]],[11,"borrow_mut","","",118,[[["self"]],["t"]]],[11,"type_id","","",118,[[["self"]],["typeid"]]],[11,"from","","",34,[[["t"]],["t"]]],[11,"into_iter","","",34,[[],["i"]]],[11,"try_from","","",34,[[["u"]],["result"]]],[11,"into","","",34,[[],["u"]]],[11,"try_into","","",34,[[],["result"]]],[11,"borrow","","",34,[[["self"]],["t"]]],[11,"borrow_mut","","",34,[[["self"]],["t"]]],[11,"type_id","","",34,[[["self"]],["typeid"]]],[11,"from","","",35,[[["t"]],["t"]]],[11,"try_from","","",35,[[["u"]],["result"]]],[11,"into","","",35,[[],["u"]]],[11,"try_into","","",35,[[],["result"]]],[11,"borrow","","",35,[[["self"]],["t"]]],[11,"borrow_mut","","",35,[[["self"]],["t"]]],[11,"type_id","","",35,[[["self"]],["typeid"]]],[11,"from","","",36,[[["t"]],["t"]]],[11,"try_from","","",36,[[["u"]],["result"]]],[11,"into","","",36,[[],["u"]]],[11,"try_into","","",36,[[],["result"]]],[11,"borrow","","",36,[[["self"]],["t"]]],[11,"borrow_mut","","",36,[[["self"]],["t"]]],[11,"type_id","","",36,[[["self"]],["typeid"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"into","","",12,[[],["u"]]],[11,"try_into","","",12,[[],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"type_id","","",12,[[["self"]],["typeid"]]],[11,"to_string","","",12,[[["self"]],["string"]]],[11,"from","","",38,[[["t"]],["t"]]],[11,"try_from","","",38,[[["u"]],["result"]]],[11,"into","","",38,[[],["u"]]],[11,"try_into","","",38,[[],["result"]]],[11,"borrow","","",38,[[["self"]],["t"]]],[11,"borrow_mut","","",38,[[["self"]],["t"]]],[11,"type_id","","",38,[[["self"]],["typeid"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"into","","",13,[[],["u"]]],[11,"try_into","","",13,[[],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"type_id","","",13,[[["self"]],["typeid"]]],[11,"from","futures::stream::futures_unordered","",37,[[["t"]],["t"]]],[11,"try_from","","",37,[[["u"]],["result"]]],[11,"into","","",37,[[],["u"]]],[11,"try_into","","",37,[[],["result"]]],[11,"borrow","","",37,[[["self"]],["t"]]],[11,"borrow_mut","","",37,[[["self"]],["t"]]],[11,"type_id","","",37,[[["self"]],["typeid"]]],[11,"from","","",119,[[["t"]],["t"]]],[11,"into_iter","","",119,[[],["i"]]],[11,"try_from","","",119,[[["u"]],["result"]]],[11,"into","","",119,[[],["u"]]],[11,"try_into","","",119,[[],["result"]]],[11,"borrow","","",119,[[["self"]],["t"]]],[11,"borrow_mut","","",119,[[["self"]],["t"]]],[11,"type_id","","",119,[[["self"]],["typeid"]]],[11,"from","futures::sink","",47,[[["t"]],["t"]]],[11,"try_from","","",47,[[["u"]],["result"]]],[11,"into","","",47,[[],["u"]]],[11,"try_into","","",47,[[],["result"]]],[11,"borrow","","",47,[[["self"]],["t"]]],[11,"borrow_mut","","",47,[[["self"]],["t"]]],[11,"type_id","","",47,[[["self"]],["typeid"]]],[11,"from","","",48,[[["t"]],["t"]]],[11,"try_from","","",48,[[["u"]],["result"]]],[11,"into","","",48,[[],["u"]]],[11,"try_into","","",48,[[],["result"]]],[11,"borrow","","",48,[[["self"]],["t"]]],[11,"borrow_mut","","",48,[[["self"]],["t"]]],[11,"type_id","","",48,[[["self"]],["typeid"]]],[11,"from","","",40,[[["t"]],["t"]]],[11,"try_from","","",40,[[["u"]],["result"]]],[11,"into","","",40,[[],["u"]]],[11,"try_into","","",40,[[],["result"]]],[11,"borrow","","",40,[[["self"]],["t"]]],[11,"borrow_mut","","",40,[[["self"]],["t"]]],[11,"type_id","","",40,[[["self"]],["typeid"]]],[11,"to_owned","","",40,[[["self"]],["t"]]],[11,"clone_into","","",40,[[["self"],["t"]]]],[11,"from","","",41,[[["t"]],["t"]]],[11,"try_from","","",41,[[["u"]],["result"]]],[11,"into","","",41,[[],["u"]]],[11,"try_into","","",41,[[],["result"]]],[11,"borrow","","",41,[[["self"]],["t"]]],[11,"borrow_mut","","",41,[[["self"]],["t"]]],[11,"type_id","","",41,[[["self"]],["typeid"]]],[11,"into_future","","",42,[[],["f"]]],[11,"from","","",42,[[["t"]],["t"]]],[11,"try_from","","",42,[[["u"]],["result"]]],[11,"into","","",42,[[],["u"]]],[11,"try_into","","",42,[[],["result"]]],[11,"borrow","","",42,[[["self"]],["t"]]],[11,"borrow_mut","","",42,[[["self"]],["t"]]],[11,"type_id","","",42,[[["self"]],["typeid"]]],[11,"into_future","","",44,[[],["f"]]],[11,"from","","",44,[[["t"]],["t"]]],[11,"try_from","","",44,[[["u"]],["result"]]],[11,"into","","",44,[[],["u"]]],[11,"try_into","","",44,[[],["result"]]],[11,"borrow","","",44,[[["self"]],["t"]]],[11,"borrow_mut","","",44,[[["self"]],["t"]]],[11,"type_id","","",44,[[["self"]],["typeid"]]],[11,"into_future","","",120,[[],["f"]]],[11,"from","","",120,[[["t"]],["t"]]],[11,"try_from","","",120,[[["u"]],["result"]]],[11,"into","","",120,[[],["u"]]],[11,"try_into","","",120,[[],["result"]]],[11,"borrow","","",120,[[["self"]],["t"]]],[11,"borrow_mut","","",120,[[["self"]],["t"]]],[11,"type_id","","",120,[[["self"]],["typeid"]]],[11,"from","","",45,[[["t"]],["t"]]],[11,"try_from","","",45,[[["u"]],["result"]]],[11,"into","","",45,[[],["u"]]],[11,"try_into","","",45,[[],["result"]]],[11,"borrow","","",45,[[["self"]],["t"]]],[11,"borrow_mut","","",45,[[["self"]],["t"]]],[11,"type_id","","",45,[[["self"]],["typeid"]]],[11,"to_owned","","",45,[[["self"]],["t"]]],[11,"clone_into","","",45,[[["self"],["t"]]]],[11,"from","","",43,[[["t"]],["t"]]],[11,"try_from","","",43,[[["u"]],["result"]]],[11,"into","","",43,[[],["u"]]],[11,"try_into","","",43,[[],["result"]]],[11,"borrow","","",43,[[["self"]],["t"]]],[11,"borrow_mut","","",43,[[["self"]],["t"]]],[11,"type_id","","",43,[[["self"]],["typeid"]]],[11,"to_owned","","",43,[[["self"]],["t"]]],[11,"clone_into","","",43,[[["self"],["t"]]]],[11,"from","","",46,[[["t"]],["t"]]],[11,"try_from","","",46,[[["u"]],["result"]]],[11,"into","","",46,[[],["u"]]],[11,"try_into","","",46,[[],["result"]]],[11,"borrow","","",46,[[["self"]],["t"]]],[11,"borrow_mut","","",46,[[["self"]],["t"]]],[11,"type_id","","",46,[[["self"]],["typeid"]]],[11,"from","futures::task","",121,[[["t"]],["t"]]],[11,"try_from","","",121,[[["u"]],["result"]]],[11,"into","","",121,[[],["u"]]],[11,"try_into","","",121,[[],["result"]]],[11,"borrow","","",121,[[["self"]],["t"]]],[11,"borrow_mut","","",121,[[["self"]],["t"]]],[11,"type_id","","",121,[[["self"]],["typeid"]]],[11,"to_owned","","",121,[[["self"]],["t"]]],[11,"clone_into","","",121,[[["self"],["t"]]]],[11,"from","futures::executor","",122,[[["t"]],["t"]]],[11,"try_from","","",122,[[["u"]],["result"]]],[11,"into","","",122,[[],["u"]]],[11,"try_into","","",122,[[],["result"]]],[11,"borrow","","",122,[[["self"]],["t"]]],[11,"borrow_mut","","",122,[[["self"]],["t"]]],[11,"type_id","","",122,[[["self"]],["typeid"]]],[11,"from","","",123,[[["t"]],["t"]]],[11,"try_from","","",123,[[["u"]],["result"]]],[11,"into","","",123,[[],["u"]]],[11,"try_into","","",123,[[],["result"]]],[11,"borrow","","",123,[[["self"]],["t"]]],[11,"borrow_mut","","",123,[[["self"]],["t"]]],[11,"type_id","","",123,[[["self"]],["typeid"]]],[11,"to_owned","","",123,[[["self"]],["t"]]],[11,"clone_into","","",123,[[["self"],["t"]]]],[11,"from","futures::task","",124,[[["t"]],["t"]]],[11,"try_from","","",124,[[["u"]],["result"]]],[11,"into","","",124,[[],["u"]]],[11,"try_into","","",124,[[],["result"]]],[11,"borrow","","",124,[[["self"]],["t"]]],[11,"borrow_mut","","",124,[[["self"]],["t"]]],[11,"type_id","","",124,[[["self"]],["typeid"]]],[11,"from","","",125,[[["t"]],["t"]]],[11,"try_from","","",125,[[["u"]],["result"]]],[11,"into","","",125,[[],["u"]]],[11,"try_into","","",125,[[],["result"]]],[11,"borrow","","",125,[[["self"]],["t"]]],[11,"borrow_mut","","",125,[[["self"]],["t"]]],[11,"type_id","","",125,[[["self"]],["typeid"]]],[11,"to_owned","","",125,[[["self"]],["t"]]],[11,"clone_into","","",125,[[["self"],["t"]]]],[11,"from","","",126,[[["t"]],["t"]]],[11,"try_from","","",126,[[["u"]],["result"]]],[11,"into","","",126,[[],["u"]]],[11,"try_into","","",126,[[],["result"]]],[11,"borrow","","",126,[[["self"]],["t"]]],[11,"borrow_mut","","",126,[[["self"]],["t"]]],[11,"type_id","","",126,[[["self"]],["typeid"]]],[11,"from","futures::sync","",62,[[["t"]],["t"]]],[11,"try_from","","",62,[[["u"]],["result"]]],[11,"into","","",62,[[],["u"]]],[11,"try_into","","",62,[[],["result"]]],[11,"borrow","","",62,[[["self"]],["t"]]],[11,"borrow_mut","","",62,[[["self"]],["t"]]],[11,"type_id","","",62,[[["self"]],["typeid"]]],[11,"from","","",127,[[["t"]],["t"]]],[11,"try_from","","",127,[[["u"]],["result"]]],[11,"into","","",127,[[],["u"]]],[11,"try_into","","",127,[[],["result"]]],[11,"borrow","","",127,[[["self"]],["t"]]],[11,"borrow_mut","","",127,[[["self"]],["t"]]],[11,"type_id","","",127,[[["self"]],["typeid"]]],[11,"into_future","","",128,[[],["f"]]],[11,"from","","",128,[[["t"]],["t"]]],[11,"try_from","","",128,[[["u"]],["result"]]],[11,"into","","",128,[[],["u"]]],[11,"try_into","","",128,[[],["result"]]],[11,"borrow","","",128,[[["self"]],["t"]]],[11,"borrow_mut","","",128,[[["self"]],["t"]]],[11,"type_id","","",128,[[["self"]],["typeid"]]],[11,"from","","",63,[[["t"]],["t"]]],[11,"try_from","","",63,[[["u"]],["result"]]],[11,"into","","",63,[[],["u"]]],[11,"try_into","","",63,[[],["result"]]],[11,"borrow","","",63,[[["self"]],["t"]]],[11,"borrow_mut","","",63,[[["self"]],["t"]]],[11,"type_id","","",63,[[["self"]],["typeid"]]],[11,"into_future","futures::sync::oneshot","",54,[[],["f"]]],[11,"from","","",54,[[["t"]],["t"]]],[11,"try_from","","",54,[[["u"]],["result"]]],[11,"into","","",54,[[],["u"]]],[11,"try_into","","",54,[[],["result"]]],[11,"borrow","","",54,[[["self"]],["t"]]],[11,"borrow_mut","","",54,[[["self"]],["t"]]],[11,"type_id","","",54,[[["self"]],["typeid"]]],[11,"from","","",53,[[["t"]],["t"]]],[11,"try_from","","",53,[[["u"]],["result"]]],[11,"into","","",53,[[],["u"]]],[11,"try_into","","",53,[[],["result"]]],[11,"borrow","","",53,[[["self"]],["t"]]],[11,"borrow_mut","","",53,[[["self"]],["t"]]],[11,"type_id","","",53,[[["self"]],["typeid"]]],[11,"from","","",129,[[["t"]],["t"]]],[11,"try_from","","",129,[[["u"]],["result"]]],[11,"into","","",129,[[],["u"]]],[11,"try_into","","",129,[[],["result"]]],[11,"borrow","","",129,[[["self"]],["t"]]],[11,"borrow_mut","","",129,[[["self"]],["t"]]],[11,"type_id","","",129,[[["self"]],["typeid"]]],[11,"to_owned","","",129,[[["self"]],["t"]]],[11,"clone_into","","",129,[[["self"],["t"]]]],[11,"to_string","","",129,[[["self"]],["string"]]],[11,"into_future","","",55,[[],["f"]]],[11,"from","","",55,[[["t"]],["t"]]],[11,"try_from","","",55,[[["u"]],["result"]]],[11,"into","","",55,[[],["u"]]],[11,"try_into","","",55,[[],["result"]]],[11,"borrow","","",55,[[["self"]],["t"]]],[11,"borrow_mut","","",55,[[["self"]],["t"]]],[11,"type_id","","",55,[[["self"]],["typeid"]]],[11,"into_future","","",130,[[],["f"]]],[11,"from","","",130,[[["t"]],["t"]]],[11,"try_from","","",130,[[["u"]],["result"]]],[11,"into","","",130,[[],["u"]]],[11,"try_into","","",130,[[],["result"]]],[11,"borrow","","",130,[[["self"]],["t"]]],[11,"borrow_mut","","",130,[[["self"]],["t"]]],[11,"type_id","","",130,[[["self"]],["typeid"]]],[11,"from","futures::sync::mpsc","",58,[[["t"]],["t"]]],[11,"try_from","","",58,[[["u"]],["result"]]],[11,"into","","",58,[[],["u"]]],[11,"try_into","","",58,[[],["result"]]],[11,"borrow","","",58,[[["self"]],["t"]]],[11,"borrow_mut","","",58,[[["self"]],["t"]]],[11,"type_id","","",58,[[["self"]],["typeid"]]],[11,"to_owned","","",58,[[["self"]],["t"]]],[11,"clone_into","","",58,[[["self"],["t"]]]],[11,"from","","",59,[[["t"]],["t"]]],[11,"try_from","","",59,[[["u"]],["result"]]],[11,"into","","",59,[[],["u"]]],[11,"try_into","","",59,[[],["result"]]],[11,"borrow","","",59,[[["self"]],["t"]]],[11,"borrow_mut","","",59,[[["self"]],["t"]]],[11,"type_id","","",59,[[["self"]],["typeid"]]],[11,"to_owned","","",59,[[["self"]],["t"]]],[11,"clone_into","","",59,[[["self"],["t"]]]],[11,"from","","",60,[[["t"]],["t"]]],[11,"try_from","","",60,[[["u"]],["result"]]],[11,"into","","",60,[[],["u"]]],[11,"try_into","","",60,[[],["result"]]],[11,"borrow","","",60,[[["self"]],["t"]]],[11,"borrow_mut","","",60,[[["self"]],["t"]]],[11,"type_id","","",60,[[["self"]],["typeid"]]],[11,"from","","",61,[[["t"]],["t"]]],[11,"try_from","","",61,[[["u"]],["result"]]],[11,"into","","",61,[[],["u"]]],[11,"try_into","","",61,[[],["result"]]],[11,"borrow","","",61,[[["self"]],["t"]]],[11,"borrow_mut","","",61,[[["self"]],["t"]]],[11,"type_id","","",61,[[["self"]],["typeid"]]],[11,"from","","",56,[[["t"]],["t"]]],[11,"try_from","","",56,[[["u"]],["result"]]],[11,"into","","",56,[[],["u"]]],[11,"try_into","","",56,[[],["result"]]],[11,"borrow","","",56,[[["self"]],["t"]]],[11,"borrow_mut","","",56,[[["self"]],["t"]]],[11,"type_id","","",56,[[["self"]],["typeid"]]],[11,"to_owned","","",56,[[["self"]],["t"]]],[11,"clone_into","","",56,[[["self"],["t"]]]],[11,"to_string","","",56,[[["self"]],["string"]]],[11,"from","","",57,[[["t"]],["t"]]],[11,"try_from","","",57,[[["u"]],["result"]]],[11,"into","","",57,[[],["u"]]],[11,"try_into","","",57,[[],["result"]]],[11,"borrow","","",57,[[["self"]],["t"]]],[11,"borrow_mut","","",57,[[["self"]],["t"]]],[11,"type_id","","",57,[[["self"]],["typeid"]]],[11,"to_owned","","",57,[[["self"]],["t"]]],[11,"clone_into","","",57,[[["self"],["t"]]]],[11,"to_string","","",57,[[["self"]],["string"]]],[11,"from","","",131,[[["t"]],["t"]]],[11,"try_from","","",131,[[["u"]],["result"]]],[11,"into","","",131,[[],["u"]]],[11,"try_into","","",131,[[],["result"]]],[11,"borrow","","",131,[[["self"]],["t"]]],[11,"borrow_mut","","",131,[[["self"]],["t"]]],[11,"type_id","","",131,[[["self"]],["typeid"]]],[11,"into_future","","",132,[[],["f"]]],[11,"from","","",132,[[["t"]],["t"]]],[11,"try_from","","",132,[[["u"]],["result"]]],[11,"into","","",132,[[],["u"]]],[11,"try_into","","",132,[[],["result"]]],[11,"borrow","","",132,[[["self"]],["t"]]],[11,"borrow_mut","","",132,[[["self"]],["t"]]],[11,"type_id","","",132,[[["self"]],["typeid"]]],[11,"from","futures::unsync::mpsc","",133,[[["t"]],["t"]]],[11,"try_from","","",133,[[["u"]],["result"]]],[11,"into","","",133,[[],["u"]]],[11,"try_into","","",133,[[],["result"]]],[11,"borrow","","",133,[[["self"]],["t"]]],[11,"borrow_mut","","",133,[[["self"]],["t"]]],[11,"type_id","","",133,[[["self"]],["typeid"]]],[11,"to_owned","","",133,[[["self"]],["t"]]],[11,"clone_into","","",133,[[["self"],["t"]]]],[11,"from","","",64,[[["t"]],["t"]]],[11,"try_from","","",64,[[["u"]],["result"]]],[11,"into","","",64,[[],["u"]]],[11,"try_into","","",64,[[],["result"]]],[11,"borrow","","",64,[[["self"]],["t"]]],[11,"borrow_mut","","",64,[[["self"]],["t"]]],[11,"type_id","","",64,[[["self"]],["typeid"]]],[11,"from","","",65,[[["t"]],["t"]]],[11,"try_from","","",65,[[["u"]],["result"]]],[11,"into","","",65,[[],["u"]]],[11,"try_into","","",65,[[],["result"]]],[11,"borrow","","",65,[[["self"]],["t"]]],[11,"borrow_mut","","",65,[[["self"]],["t"]]],[11,"type_id","","",65,[[["self"]],["typeid"]]],[11,"to_owned","","",65,[[["self"]],["t"]]],[11,"clone_into","","",65,[[["self"],["t"]]]],[11,"from","","",66,[[["t"]],["t"]]],[11,"try_from","","",66,[[["u"]],["result"]]],[11,"into","","",66,[[],["u"]]],[11,"try_into","","",66,[[],["result"]]],[11,"borrow","","",66,[[["self"]],["t"]]],[11,"borrow_mut","","",66,[[["self"]],["t"]]],[11,"type_id","","",66,[[["self"]],["typeid"]]],[11,"from","","",67,[[["t"]],["t"]]],[11,"try_from","","",67,[[["u"]],["result"]]],[11,"into","","",67,[[],["u"]]],[11,"try_into","","",67,[[],["result"]]],[11,"borrow","","",67,[[["self"]],["t"]]],[11,"borrow_mut","","",67,[[["self"]],["t"]]],[11,"type_id","","",67,[[["self"]],["typeid"]]],[11,"to_string","","",67,[[["self"]],["string"]]],[11,"from","","",134,[[["t"]],["t"]]],[11,"try_from","","",134,[[["u"]],["result"]]],[11,"into","","",134,[[],["u"]]],[11,"try_into","","",134,[[],["result"]]],[11,"borrow","","",134,[[["self"]],["t"]]],[11,"borrow_mut","","",134,[[["self"]],["t"]]],[11,"type_id","","",134,[[["self"]],["typeid"]]],[11,"into_future","","",135,[[],["f"]]],[11,"from","","",135,[[["t"]],["t"]]],[11,"try_from","","",135,[[["u"]],["result"]]],[11,"into","","",135,[[],["u"]]],[11,"try_into","","",135,[[],["result"]]],[11,"borrow","","",135,[[["self"]],["t"]]],[11,"borrow_mut","","",135,[[["self"]],["t"]]],[11,"type_id","","",135,[[["self"]],["typeid"]]],[11,"from","futures::unsync::oneshot","",68,[[["t"]],["t"]]],[11,"try_from","","",68,[[["u"]],["result"]]],[11,"into","","",68,[[],["u"]]],[11,"try_into","","",68,[[],["result"]]],[11,"borrow","","",68,[[["self"]],["t"]]],[11,"borrow_mut","","",68,[[["self"]],["t"]]],[11,"type_id","","",68,[[["self"]],["typeid"]]],[11,"into_future","","",69,[[],["f"]]],[11,"from","","",69,[[["t"]],["t"]]],[11,"try_from","","",69,[[["u"]],["result"]]],[11,"into","","",69,[[],["u"]]],[11,"try_into","","",69,[[],["result"]]],[11,"borrow","","",69,[[["self"]],["t"]]],[11,"borrow_mut","","",69,[[["self"]],["t"]]],[11,"type_id","","",69,[[["self"]],["typeid"]]],[11,"into_future","","",70,[[],["f"]]],[11,"from","","",70,[[["t"]],["t"]]],[11,"try_from","","",70,[[["u"]],["result"]]],[11,"into","","",70,[[],["u"]]],[11,"try_into","","",70,[[],["result"]]],[11,"borrow","","",70,[[["self"]],["t"]]],[11,"borrow_mut","","",70,[[["self"]],["t"]]],[11,"type_id","","",70,[[["self"]],["typeid"]]],[11,"into_future","","",136,[[],["f"]]],[11,"from","","",136,[[["t"]],["t"]]],[11,"try_from","","",136,[[["u"]],["result"]]],[11,"into","","",136,[[],["u"]]],[11,"try_into","","",136,[[],["result"]]],[11,"borrow","","",136,[[["self"]],["t"]]],[11,"borrow_mut","","",136,[[["self"]],["t"]]],[11,"type_id","","",136,[[["self"]],["typeid"]]],[11,"poll","futures::future","",71,[[["self"]],["poll"]]],[11,"poll","","",72,[[["self"]],["poll"]]],[11,"poll","","",73,[[["self"]],["poll"]]],[11,"poll","","",74,[[["self"]],["poll"]]],[11,"poll","","",75,[[["self"]],["poll"]]],[11,"poll","","",76,[[["self"]],["poll"]]],[11,"poll","","",77,[[["self"]],["poll"]]],[11,"poll","","",5,[[["self"]],["poll"]]],[11,"poll","","",80,[[["self"]],["poll"]]],[11,"poll","","",81,[[["self"]],["poll"]]],[11,"poll","","",82,[[["self"]],["poll"]]],[11,"poll","","",83,[[["self"]],["poll"]]],[11,"poll","","",84,[[["self"]],["poll"]]],[11,"poll","","",85,[[["self"]],["poll"]]],[11,"poll","","",86,[[["self"]],["poll"]]],[11,"poll","","",87,[[["self"]],["poll"]]],[11,"poll","","",88,[[["self"]],["poll"]]],[11,"poll","","",89,[[["self"]],["poll"]]],[11,"poll","","",90,[[["self"]],["poll"]]],[11,"poll","","",91,[[["self"]],["poll"]]],[11,"poll","","",3,[[["self"]],["poll"]]],[11,"poll","","",92,[[["self"]],["poll"]]],[11,"poll","","",93,[[["self"]],["poll"]]],[11,"poll","","",94,[[["self"]],["poll"]]],[11,"poll","","",95,[[["self"]],["poll"]]],[11,"poll","","",96,[[["self"]],["poll"]]],[11,"poll","","",6,[[["self"]],["poll"]]],[11,"poll","futures::stream","",105,[[["self"]],["poll"]]],[11,"poll","","",104,[[["self"]],["poll"]]],[11,"poll","","",107,[[["self"]],["poll"]]],[11,"poll","","",108,[[["self"]],["poll"]]],[11,"poll","","",20,[[["self"]],["poll"]]],[11,"poll","","",30,[[["self"]],["poll"]]],[11,"poll","","",118,[[["self"]],[["poll",["vec"]],["vec"]]]],[11,"poll","futures::sink","",42,[[["self"]],["poll"]]],[11,"poll","","",44,[[["self"]],["poll"]]],[11,"poll","","",120,[[["self"]],["poll"]]],[11,"poll","futures::sync::oneshot","",54,[[["self"]],[["canceled"],["poll",["canceled"]]]]],[11,"poll","","",55,[[["self"]],["poll"]]],[11,"poll","","",130,[[["self"]],["poll"]]],[11,"poll","futures::sync::mpsc","",132,[[["self"]],["poll"]]],[11,"poll","futures::sync","",128,[[["self"]],[["bilockacquired"],["poll",["bilockacquired"]]]]],[11,"poll","futures::unsync::mpsc","",135,[[["self"]],["poll"]]],[11,"poll","futures::unsync::oneshot","",69,[[["self"]],["poll"]]],[11,"poll","","",70,[[["self"]],["poll"]]],[11,"poll","","",136,[[["self"]],["poll"]]],[11,"poll","futures::future","",78,[[["self"]],[["poll",["option"]],["option"]]]],[11,"poll","","",79,[[["self"]],[["poll",["option"]],["option"]]]],[11,"poll","","",3,[[["self"]],[["option"],["poll",["option"]]]]],[11,"poll","futures::stream","",99,[[["self"]],[["poll",["option"]],["option"]]]],[11,"poll","","",100,[[["self"]],[["poll",["option"]],["option"]]]],[11,"poll","","",101,[[["self"]],[["poll",["option"]],["option"]]]],[11,"poll","","",102,[[["self"]],[["poll",["option"]],["option"]]]],[11,"poll","","",14,[[["self"]],[["poll",["option"]],["option"]]]],[11,"poll","","",103,[[["self"]],[["poll",["option"]],["option"]]]],[11,"poll","","",106,[[["self"]],[["poll",["option"]],["option"]]]],[11,"poll","","",15,[[["self"]],[["poll",["option"]],["option"]]]],[11,"poll","","",16,[[["self"]],[["option"],["poll",["option"]]]]],[11,"poll","","",17,[[["self"]],[["poll",["option"]],["option"]]]],[11,"poll","","",18,[[["self"]],[["poll",["option"]],["option"]]]],[11,"poll","","",19,[[["self"]],[["poll",["option"]],["option"]]]],[11,"poll","","",21,[[["self"]],[["poll",["option"]],["option"]]]],[11,"poll","","",22,[[["self"]],[["poll",["option"]],["option"]]]],[11,"poll","","",23,[[["self"]],[["poll",["option"]],["option"]]]],[11,"poll","","",24,[[["self"]],[["poll",["option"]],["option"]]]],[11,"poll","","",109,[[["self"]],[["poll",["option"]],["option"]]]],[11,"poll","","",110,[[["self"]],[["poll",["option"]],["option"]]]],[11,"poll","","",111,[[["self"]],[["option"],["poll",["option"]]]]],[11,"poll","","",25,[[["self"]],[["poll",["option"]],["option"]]]],[11,"poll","","",112,[[["self"]],[["poll",["option"]],["option"]]]],[11,"poll","","",113,[[["self"]],[["poll",["option"]],["option"]]]],[11,"poll","","",26,[[["self"]],[["poll",["option"]],["option"]]]],[11,"poll","","",27,[[["self"]],[["poll",["option"]],["option"]]]],[11,"poll","","",28,[[["self"]],[["poll",["option"]],["option"]]]],[11,"poll","","",29,[[["self"]],[["poll",["option"]],["option"]]]],[11,"poll","","",114,[[["self"]],[["option"],["poll",["option"]]]]],[11,"poll","","",115,[[["self"]],[["poll",["option"]],["option"]]]],[11,"poll","","",116,[[["self"]],[["poll",["option"]],["option"]]]],[11,"poll","","",31,[[["self"]],[["poll",["option"]],["option"]]]],[11,"poll","","",32,[[["self"]],[["poll",["option"]],["option"]]]],[11,"poll","","",117,[[["self"]],[["poll",["option"]],["option"]]]],[11,"poll","","",33,[[["self"]],[["poll",["option"]],["option"]]]],[11,"poll","","",35,[[["self"]],[["poll",["option"]],["option"]]]],[11,"poll","futures::stream::futures_unordered","",37,[[["self"]],[["poll",["option"]],["option"]]]],[11,"poll","futures::stream","",38,[[["self"]],[["poll",["option"]],["option"]]]],[11,"poll","futures::sink","",40,[[["self"]],[["poll",["option"]],["option"]]]],[11,"poll","","",41,[[["self"]],[["poll",["option"]],["option"]]]],[11,"poll","","",43,[[["self"]],[["poll",["option"]],["option"]]]],[11,"poll","","",45,[[["self"]],[["poll",["option"]],["option"]]]],[11,"poll","","",47,[[["self"]],[["poll",["option"]],["option"]]]],[11,"poll","futures::sync::mpsc","",60,[[["self"]],[["poll",["option"]],["option"]]]],[11,"poll","","",61,[[["self"]],[["poll",["option"]],["option"]]]],[11,"poll","","",131,[[["self"]],[["option"],["poll",["option"]]]]],[11,"poll","futures::unsync::mpsc","",64,[[["self"]],[["poll",["option"]],["option"]]]],[11,"poll","","",66,[[["self"]],[["poll",["option"]],["option"]]]],[11,"poll","","",134,[[["self"]],[["option"],["poll",["option"]]]]],[11,"start_send","futures::stream","",14,[[["self"]],["startsend"]]],[11,"poll_complete","","",14,[[["self"]],["poll"]]],[11,"close","","",14,[[["self"]],["poll"]]],[11,"start_send","","",15,[[["self"]],["startsend"]]],[11,"poll_complete","","",15,[[["self"]],["poll"]]],[11,"close","","",15,[[["self"]],["poll"]]],[11,"start_send","","",16,[[["self"]],["startsend"]]],[11,"poll_complete","","",16,[[["self"]],["poll"]]],[11,"close","","",16,[[["self"]],["poll"]]],[11,"start_send","","",17,[[["self"]],["startsend"]]],[11,"poll_complete","","",17,[[["self"]],["poll"]]],[11,"close","","",17,[[["self"]],["poll"]]],[11,"start_send","","",18,[[["self"]],["startsend"]]],[11,"poll_complete","","",18,[[["self"]],["poll"]]],[11,"close","","",18,[[["self"]],["poll"]]],[11,"start_send","","",19,[[["self"]],["startsend"]]],[11,"poll_complete","","",19,[[["self"]],["poll"]]],[11,"close","","",19,[[["self"]],["poll"]]],[11,"start_send","","",21,[[["self"]],["startsend"]]],[11,"poll_complete","","",21,[[["self"]],["poll"]]],[11,"close","","",21,[[["self"]],["poll"]]],[11,"start_send","","",22,[[["self"]],["startsend"]]],[11,"poll_complete","","",22,[[["self"]],["poll"]]],[11,"close","","",22,[[["self"]],["poll"]]],[11,"start_send","","",23,[[["self"]],["startsend"]]],[11,"poll_complete","","",23,[[["self"]],["poll"]]],[11,"close","","",23,[[["self"]],["poll"]]],[11,"start_send","","",24,[[["self"]],["startsend"]]],[11,"poll_complete","","",24,[[["self"]],["poll"]]],[11,"close","","",24,[[["self"]],["poll"]]],[11,"start_send","","",111,[[["self"]],["startsend"]]],[11,"poll_complete","","",111,[[["self"]],["poll"]]],[11,"close","","",111,[[["self"]],["poll"]]],[11,"start_send","","",25,[[["self"]],["startsend"]]],[11,"poll_complete","","",25,[[["self"]],["poll"]]],[11,"close","","",25,[[["self"]],["poll"]]],[11,"start_send","","",26,[[["self"]],["startsend"]]],[11,"poll_complete","","",26,[[["self"]],["poll"]]],[11,"close","","",26,[[["self"]],["poll"]]],[11,"start_send","","",27,[[["self"]],["startsend"]]],[11,"poll_complete","","",27,[[["self"]],["poll"]]],[11,"close","","",27,[[["self"]],["poll"]]],[11,"start_send","","",28,[[["self"]],["startsend"]]],[11,"poll_complete","","",28,[[["self"]],["poll"]]],[11,"close","","",28,[[["self"]],["poll"]]],[11,"start_send","","",29,[[["self"]],["startsend"]]],[11,"poll_complete","","",29,[[["self"]],["poll"]]],[11,"close","","",29,[[["self"]],["poll"]]],[11,"start_send","","",114,[[["self"]],["startsend"]]],[11,"poll_complete","","",114,[[["self"]],["poll"]]],[11,"close","","",114,[[["self"]],["poll"]]],[11,"start_send","","",31,[[["self"]],["startsend"]]],[11,"poll_complete","","",31,[[["self"]],["poll"]]],[11,"close","","",31,[[["self"]],["poll"]]],[11,"start_send","","",32,[[["self"]],["startsend"]]],[11,"poll_complete","","",32,[[["self"]],["poll"]]],[11,"close","","",32,[[["self"]],["poll"]]],[11,"start_send","","",33,[[["self"]],["startsend"]]],[11,"poll_complete","","",33,[[["self"]],["poll"]]],[11,"close","","",33,[[["self"]],["poll"]]],[11,"start_send","","",36,[[["self"]],["startsend"]]],[11,"poll_complete","","",36,[[["self"]],["poll"]]],[11,"close","","",36,[[["self"]],["poll"]]],[11,"start_send","futures::sink","",40,[[["self"]],["startsend"]]],[11,"poll_complete","","",40,[[["self"]],["poll"]]],[11,"close","","",40,[[["self"]],["poll"]]],[11,"start_send","","",41,[[["self"]],["startsend"]]],[11,"poll_complete","","",41,[[["self"]],["poll"]]],[11,"close","","",41,[[["self"]],["poll"]]],[11,"start_send","","",43,[[["self"]],["startsend"]]],[11,"poll_complete","","",43,[[["self"]],["poll"]]],[11,"close","","",43,[[["self"]],["poll"]]],[11,"start_send","","",45,[[["self"]],["startsend"]]],[11,"poll_complete","","",45,[[["self"]],["poll"]]],[11,"close","","",45,[[["self"]],["poll"]]],[11,"start_send","","",46,[[["self"]],["startsend"]]],[11,"poll_complete","","",46,[[["self"]],["poll"]]],[11,"close","","",46,[[["self"]],["poll"]]],[11,"start_send","","",47,[[["self"]],["startsend"]]],[11,"poll_complete","","",47,[[["self"]],["poll"]]],[11,"close","","",47,[[["self"]],["poll"]]],[11,"start_send","futures::sync::mpsc","",58,[[["self"],["t"]],[["startsend",["senderror"]],["senderror"]]]],[11,"poll_complete","","",58,[[["self"]],[["poll",["senderror"]],["senderror"]]]],[11,"close","","",58,[[["self"]],[["poll",["senderror"]],["senderror"]]]],[11,"start_send","","",59,[[["self"],["t"]],[["startsend",["senderror"]],["senderror"]]]],[11,"poll_complete","","",59,[[["self"]],[["poll",["senderror"]],["senderror"]]]],[11,"close","","",59,[[["self"]],[["poll",["senderror"]],["senderror"]]]],[11,"start_send","futures::unsync::mpsc","",133,[[["self"],["t"]],[["startsend",["senderror"]],["senderror"]]]],[11,"poll_complete","","",133,[[["self"]],[["senderror"],["poll",["senderror"]]]]],[11,"close","","",133,[[["self"]],[["senderror"],["poll",["senderror"]]]]],[11,"start_send","","",65,[[["self"],["t"]],[["startsend",["senderror"]],["senderror"]]]],[11,"poll_complete","","",65,[[["self"]],[["senderror"],["poll",["senderror"]]]]],[11,"close","","",65,[[["self"]],[["senderror"],["poll",["senderror"]]]]],[11,"deref","futures::future","",97,[[["self"]],["t"]]],[11,"deref","","",98,[[["self"]],["e"]]],[11,"deref","futures::sync","",127,[[["self"]],["t"]]],[11,"deref","","",63,[[["self"]],["t"]]],[11,"deref_mut","","",127,[[["self"]],["t"]]],[11,"deref_mut","","",63,[[["self"]],["t"]]],[11,"from","futures","",0,[[["t"]],["async"]]],[11,"from","futures::future","",74,[[["result"]],["self"]]],[11,"from","futures::executor","",123,[[["arc"]],["notifyhandle"]]],[11,"from","","",123,[[["t"]],["notifyhandle"]]],[11,"fmt","futures","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","futures::future","",71,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",72,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",73,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",74,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",75,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",76,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",77,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",78,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",79,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",80,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",81,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",82,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",83,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",84,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",85,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",86,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",87,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",88,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",89,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",90,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",91,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",92,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",93,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",94,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",95,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",96,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",97,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",98,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",11,[[["self"],["formatter"]],["result"]]],[11,"fmt","futures::stream","",99,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",100,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",101,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",102,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",14,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",103,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",105,[[["formatter"],["self"]],["fmtresult"]]],[11,"fmt","","",104,[[["formatter"],["self"]],["fmtresult"]]],[11,"fmt","","",106,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",15,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",16,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",17,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",107,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",108,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",18,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",19,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",20,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",21,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",22,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",23,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",24,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",109,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",13,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",110,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",111,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",25,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",112,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",113,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",26,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",27,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",28,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",29,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",114,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",115,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",116,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",30,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",31,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",32,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",117,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",33,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",118,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",34,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",35,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",36,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",12,[[["self"],["formatter"]],["result"]]],[11,"fmt","futures::stream::futures_unordered","",37,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",119,[[["formatter"],["self"]],["result"]]],[11,"fmt","futures::stream","",38,[[["self"],["formatter"]],["result"]]],[11,"fmt","futures::sink","",40,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",41,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",42,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",43,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",44,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",120,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",45,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",46,[[["formatter"],["self"]],["fmtresult"]]],[11,"fmt","","",47,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",48,[[["formatter"],["self"]],["result"]]],[11,"fmt","futures::task","",124,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",126,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",125,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",121,[[["self"],["formatter"]],["result"]]],[11,"fmt","futures::executor","",122,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",123,[[["self"],["formatter"]],["result"]]],[11,"fmt","futures::sync::oneshot","",54,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",53,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",129,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",55,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",130,[[["self"],["formatter"]],["result"]]],[11,"fmt","futures::sync::mpsc","",58,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",59,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",60,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",61,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",56,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",57,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",131,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",132,[[["self"],["formatter"]],["result"]]],[11,"fmt","futures::sync","",62,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",127,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",128,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",63,[[["formatter"],["self"]],["result"]]],[11,"fmt","futures::unsync::mpsc","",133,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",64,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",65,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",66,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",67,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",134,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",135,[[["self"],["formatter"]],["result"]]],[11,"fmt","futures::unsync::oneshot","",68,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",69,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",70,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",136,[[["self"],["formatter"]],["result"]]],[11,"fmt","futures::future","",98,[[["self"],["formatter"]],["result"]]],[11,"fmt","futures::stream","",12,[[["self"],["formatter"]],["result"]]],[11,"fmt","futures::sync::oneshot","",129,[[["self"],["formatter"]],["result"]]],[11,"fmt","futures::sync::mpsc","",56,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",57,[[["self"],["formatter"]],["result"]]],[11,"fmt","futures::unsync::mpsc","",67,[[["self"],["formatter"]],["result"]]],[11,"eq","futures","",0,[[["self"],["async"]],["bool"]]],[11,"ne","","",0,[[["self"],["async"]],["bool"]]],[11,"eq","","",1,[[["asyncsink"],["self"]],["bool"]]],[11,"ne","","",1,[[["asyncsink"],["self"]],["bool"]]],[11,"eq","futures::future","",4,[[["executeerrorkind"],["self"]],["bool"]]],[11,"eq","futures::sync::oneshot","",129,[[["self"],["canceled"]],["bool"]]],[11,"eq","futures::sync::mpsc","",56,[[["senderror"],["self"]],["bool"]]],[11,"ne","","",56,[[["senderror"],["self"]],["bool"]]],[11,"eq","","",57,[[["self"],["trysenderror"]],["bool"]]],[11,"ne","","",57,[[["self"],["trysenderror"]],["bool"]]],[11,"drop","futures::future","",6,[[["self"]]]],[11,"drop","futures::stream::futures_unordered","",37,[[["self"]]]],[11,"drop","futures::executor","",123,[[["self"]]]],[11,"drop","futures::sync::oneshot","",53,[[["self"]]]],[11,"drop","","",54,[[["self"]]]],[11,"drop","","",55,[[["self"]]]],[11,"drop","","",130,[[["self"]]]],[11,"drop","futures::sync::mpsc","",58,[[["self"]]]],[11,"drop","","",60,[[["self"]]]],[11,"drop","futures::sync","",127,[[["self"]]]],[11,"drop","","",63,[[["self"]]]],[11,"drop","futures::unsync::mpsc","",133,[[["self"]]]],[11,"drop","","",64,[[["self"]]]],[11,"drop","futures::unsync::oneshot","",68,[[["self"]]]],[11,"drop","","",69,[[["self"]]]],[11,"next","futures::stream","",34,[[["self"]],["option"]]],[11,"next","futures::stream::futures_unordered","",119,[[["self"]],[["f"],["option"]]]],[11,"size_hint","","",119,[[["self"]]]],[11,"from_iter","","",37,[[["t"]],["self"]]],[11,"from_iter","futures::stream","",38,[[["t"]],["self"]]],[11,"clone","futures","",0,[[["self"]],["async"]]],[11,"clone","","",1,[[["self"]],["asyncsink"]]],[11,"clone","futures::future","",74,[[["self"]],["futureresult"]]],[11,"clone","","",6,[[["self"]],["self"]]],[11,"clone","","",97,[[["self"]],["shareditem"]]],[11,"clone","","",98,[[["self"]],["sharederror"]]],[11,"clone","","",4,[[["self"]],["executeerrorkind"]]],[11,"clone","futures::sink","",40,[[["self"]],["with"]]],[11,"clone","","",43,[[["self"]],["sinkfromerr"]]],[11,"clone","","",45,[[["self"]],["sinkmaperr"]]],[11,"clone","futures::task","",125,[[["self"]],["unparkevent"]]],[11,"clone","","",121,[[["self"]],["task"]]],[11,"clone","futures::executor","",123,[[["self"]],["self"]]],[11,"clone","futures::sync::oneshot","",129,[[["self"]],["canceled"]]],[11,"clone","futures::sync::mpsc","",56,[[["self"]],["senderror"]]],[11,"clone","","",57,[[["self"]],["trysenderror"]]],[11,"clone","","",59,[[["self"]],["unboundedsender"]]],[11,"clone","","",58,[[["self"]],["sender"]]],[11,"clone","futures::unsync::mpsc","",133,[[["self"]],["self"]]],[11,"clone","","",65,[[["self"]],["self"]]],[11,"default","futures::stream::futures_unordered","",37,[[],["self"]]],[11,"default","futures::stream","",38,[[],["self"]]],[11,"default","futures::task","",124,[[],["self"]]],[11,"description","futures::future","",98,[[["self"]],["str"]]],[11,"cause","","",98,[[["self"]],[["error"],["option",["error"]]]]],[11,"description","futures::stream","",12,[[["self"]],["str"]]],[11,"description","futures::sync::oneshot","",129,[[["self"]],["str"]]],[11,"description","futures::sync::mpsc","",56,[[["self"]],["str"]]],[11,"description","","",57,[[["self"]],["str"]]],[11,"description","futures::unsync::mpsc","",67,[[["self"]],["str"]]],[11,"new","futures::task","Create an `AtomicTask` initialized with the given `Task`",124,[[],["atomictask"]]],[11,"register","","Registers the current task to be notified on calls to…",124,[[["self"]]]],[11,"register_task","","Registers the provided task to be notified on calls to…",124,[[["task"],["self"]]]],[11,"notify","","Notifies the task that last called `register`.",124,[[["self"]]]],[11,"with","","Access this task-local key, running the provided closure…",126,[[["self"],["f"]],["r"]]],[11,"wait_future","futures::executor","Waits for the internal future to complete, blocking this…",122,[[["self"]],["result"]]],[11,"wait_stream","","Like `wait_future`, except only waits for the next element…",122,[[["self"]],[["option",["result"]],["result"]]]],[11,"wait_send","","Blocks the current thread until it's able to send `value`…",122,[[["self"]],["result"]]],[11,"wait_flush","","Blocks the current thread until it's able to flush this…",122,[[["self"]],["result"]]],[11,"wait_close","","Blocks the current thread until it's able to close this…",122,[[["self"]],["result"]]],[11,"new","futures::task","Construct an unpark event that will insert `id` into `set`…",125,[[["arc",["eventset"]],["eventset"],["usize"]],["unparkevent"]]],[11,"clone_id","futures::executor","This function is called whenever a new copy of `id` is…",51,[[["self"],["usize"]],["usize"]]],[11,"drop_id","","All instances of `Task` store an `id` that they're going…",51,[[["self"],["usize"]]]],[11,"notify","futures::task","Indicate that the task should attempt to poll its future…",121,[[["self"]]]],[11,"is_current","","Returns `true` when called from within the context of the…",121,[[["self"]],["bool"]]],[11,"will_notify_current","","This function is intended as a performance optimization…",121,[[["self"]],["bool"]]],[11,"get_ref","futures::executor","Get a shared reference to the object the Spawn is wrapping.",122,[[["self"]],["t"]]],[11,"get_mut","","Get a mutable reference to the object the Spawn is wrapping.",122,[[["self"]],["t"]]],[11,"into_inner","","Consume the Spawn, returning its inner object",122,[[],["t"]]],[11,"poll_fn_notify","","Calls the provided closure, scheduling notifications to be…",122,[[["usize"],["self"],["n"],["f"]],["r"]]],[11,"poll_future_notify","","Polls the internal future, scheduling notifications to be…",122,[[["self"],["n"],["usize"]],["poll"]]],[11,"poll_stream_notify","","Like `poll_future_notify`, except polls the underlying…",122,[[["self"],["n"],["usize"]],[["option"],["poll",["option"]]]]],[11,"start_send_notify","","Invokes the underlying `start_send` method with this task…",122,[[["usize"],["self"],["n"]],["startsend"]]],[11,"poll_flush_notify","","Invokes the underlying `poll_complete` method with this…",122,[[["self"],["n"],["usize"]],["poll"]]],[11,"close_notify","","Invokes the underlying `close` method with this task in…",122,[[["self"],["n"],["usize"]],["poll"]]],[11,"new","","Constructs a new `NotifyHandle` directly.",123,[[],["notifyhandle"]]],[11,"notify","","Invokes the underlying instance of `Notify` with the…",123,[[["self"],["usize"]]]]],"p":[[4,"Async"],[4,"AsyncSink"],[4,"Loop"],[4,"Either"],[4,"ExecuteErrorKind"],[3,"Fuse"],[3,"Shared"],[8,"Future"],[8,"IntoFuture"],[8,"FutureFrom"],[8,"Executor"],[3,"ExecuteError"],[3,"ReuniteError"],[4,"MergedItem"],[3,"AndThen"],[3,"Filter"],[3,"FilterMap"],[3,"Flatten"],[3,"FromErr"],[3,"Fuse"],[3,"StreamFuture"],[3,"Inspect"],[3,"InspectErr"],[3,"Map"],[3,"MapErr"],[3,"Peekable"],[3,"Skip"],[3,"SkipWhile"],[3,"Take"],[3,"TakeWhile"],[3,"Forward"],[3,"Buffered"],[3,"BufferUnordered"],[3,"Chunks"],[3,"Wait"],[3,"SplitStream"],[3,"SplitSink"],[3,"FuturesUnordered"],[3,"FuturesOrdered"],[8,"Stream"],[3,"With"],[3,"WithFlatMap"],[3,"Flush"],[3,"SinkFromErr"],[3,"Send"],[3,"SinkMapErr"],[3,"Fanout"],[3,"Buffer"],[3,"Wait"],[8,"Sink"],[8,"EventSet"],[8,"Notify"],[8,"UnsafeNotify"],[3,"Sender"],[3,"Receiver"],[3,"SpawnHandle"],[3,"SendError"],[3,"TrySendError"],[3,"Sender"],[3,"UnboundedSender"],[3,"Receiver"],[3,"UnboundedReceiver"],[3,"BiLock"],[3,"BiLockAcquired"],[3,"Receiver"],[3,"UnboundedSender"],[3,"UnboundedReceiver"],[3,"SendError"],[3,"Sender"],[3,"Receiver"],[3,"SpawnHandle"],[3,"Empty"],[3,"Lazy"],[3,"PollFn"],[3,"FutureResult"],[3,"LoopFn"],[3,"AndThen"],[3,"Flatten"],[3,"FlattenStream"],[3,"IntoStream"],[3,"Join"],[3,"Join3"],[3,"Join4"],[3,"Join5"],[3,"Map"],[3,"MapErr"],[3,"FromErr"],[3,"OrElse"],[3,"Select"],[3,"SelectNext"],[3,"Select2"],[3,"Then"],[3,"Inspect"],[3,"CatchUnwind"],[3,"JoinAll"],[3,"SelectAll"],[3,"SelectOk"],[3,"SharedItem"],[3,"SharedError"],[3,"Iter"],[3,"IterOk"],[3,"IterResult"],[3,"Repeat"],[3,"Chain"],[3,"Concat"],[3,"Concat2"],[3,"Empty"],[3,"Fold"],[3,"ForEach"],[3,"Merge"],[3,"Once"],[3,"OrElse"],[3,"PollFn"],[3,"Select"],[3,"Then"],[3,"Unfold"],[3,"Zip"],[3,"CatchUnwind"],[3,"Collect"],[3,"IterMut"],[3,"SendAll"],[3,"Task"],[3,"Spawn"],[3,"NotifyHandle"],[3,"AtomicTask"],[3,"UnparkEvent"],[3,"LocalKey"],[3,"BiLockGuard"],[3,"BiLockAcquire"],[3,"Canceled"],[3,"Execute"],[3,"SpawnHandle"],[3,"Execute"],[3,"Sender"],[3,"SpawnHandle"],[3,"Execute"],[3,"Execute"]]};
searchIndex["futures_cpupool"] = {"doc":"A simple crate for executing work on a thread pool, and…","i":[[3,"CpuPool","futures_cpupool","A thread pool intended to run CPU intensive work.",null,null],[3,"Builder","","Thread pool configuration object",null,null],[3,"CpuFuture","","The type of future returned from the `CpuPool::spawn`…",null,null],[11,"new","","Creates a new thread pool with `size` worker threads…",0,[[["usize"]],["cpupool"]]],[11,"new_num_cpus","","Creates a new thread pool with a number of workers equal…",0,[[],["cpupool"]]],[11,"spawn","","Spawns a future to run on this thread pool, returning a…",0,[[["self"],["f"]],["cpufuture"]]],[11,"spawn_fn","","Spawns a closure on this thread pool.",0,[[["self"],["f"]],["cpufuture"]]],[11,"forget","","Drop this future without canceling the underlying future.",1,[[]]],[11,"new","","Create a builder a number of workers equal to the number…",2,[[],["builder"]]],[11,"pool_size","","Set size of a future CpuPool",2,[[["self"],["usize"]],["self"]]],[11,"stack_size","","Set stack size of threads in the pool.",2,[[["self"],["usize"]],["self"]]],[11,"name_prefix","","Set thread name prefix of a future CpuPool",2,[[["self"],["into",["string"]],["string"]],["self"]]],[11,"after_start","","Execute function `f` right after each thread is started…",2,[[["self"],["f"]],["self"]]],[11,"before_stop","","Execute function `f` before each worker thread stops.",2,[[["self"],["f"]],["self"]]],[11,"create","","Create CpuPool with configured parameters",2,[[["self"]],["cpupool"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"into_future","","",1,[[],["f"]]],[11,"drop","","",0,[[["self"]]]],[11,"clone","","",0,[[["self"]],["cpupool"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"poll","","",1,[[["self"]],["poll"]]],[11,"execute","","",0,[[["self"],["f"]],[["executeerror"],["result",["executeerror"]]]]]],"p":[[3,"CpuPool"],[3,"CpuFuture"],[3,"Builder"]]};
searchIndex["getrandom"] = {"doc":"Interface to the random number generator of the operating…","i":[[3,"Error","getrandom","A small and `no_std` compatible error type.",null,null],[5,"getrandom","","Fill `dest` with random bytes from the system's preferred…",null,[[],[["result",["error"]],["error"]]]],[18,"UNKNOWN","","Unknown error.",0,null],[18,"UNAVAILABLE","","System entropy source is unavailable.",0,null],[18,"INTERNAL_START","","Codes below this point represent OS Errors (i.e. positive…",0,null],[18,"CUSTOM_START","","Codes at or above this point can be used by users to…",0,null],[11,"raw_os_error","","Extract the raw OS error code (if this error came from the…",0,[[],[["i32"],["option",["i32"]]]]],[11,"code","","Extract the bare error code.",0,[[],["nonzerou32"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"into","","",0,[[],["u"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"from","","",0,[[["nonzerou32"]],["self"]]],[11,"from","","",0,[[["error"]],["self"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"eq","","",0,[[["self"],["error"]],["bool"]]],[11,"ne","","",0,[[["self"],["error"]],["bool"]]],[11,"clone","","",0,[[["self"]],["error"]]]],"p":[[3,"Error"]]};
searchIndex["gimli"] = {"doc":"`gimli` is a library for reading and writing the DWARF…","i":[[3,"Encoding","gimli","Encoding parameters that are commonly used for multiple…",null,null],[12,"address_size","","The size of an address.",0,null],[12,"format","","Whether the DWARF format is 32- or 64-bit.",0,null],[12,"version","","The DWARF version of the header.",0,null],[3,"LineEncoding","","Encoding parameters for a line number program.",null,null],[12,"minimum_instruction_length","","The size in bytes of the smallest target machine…",1,null],[12,"maximum_operations_per_instruction","","The maximum number of individual operations that may be…",1,null],[12,"default_is_stmt","","The initial value of the `is_stmt` register.",1,null],[12,"line_base","","The minimum value which a special opcode can add to the…",1,null],[12,"line_range","","The range of values which a special opcode can add to the…",1,null],[3,"Register","","A DWARF register number.",null,null],[12,"0","","",2,null],[3,"DebugAbbrevOffset","","An offset into the `.debug_abbrev` section.",null,null],[12,"0","","",3,null],[3,"DebugAddrBase","","An offset to a set of entries in the `.debug_addr` section.",null,null],[12,"0","","",4,null],[3,"DebugAddrIndex","","An index into a set of addresses in the `.debug_addr`…",null,null],[12,"0","","",5,null],[3,"DebugInfoOffset","","An offset into the `.debug_info` section.",null,null],[12,"0","","",6,null],[3,"DebugLineOffset","","An offset into the `.debug_line` section.",null,null],[12,"0","","",7,null],[3,"DebugLineStrOffset","","An offset into the `.debug_line_str` section.",null,null],[12,"0","","",8,null],[3,"LocationListsOffset","","An offset into either the `.debug_loc` section or the…",null,null],[12,"0","","",9,null],[3,"DebugLocListsBase","","An offset to a set of location list offsets in the…",null,null],[12,"0","","",10,null],[3,"DebugLocListsIndex","","An index into a set of location list offsets in the…",null,null],[12,"0","","",11,null],[3,"DebugMacinfoOffset","","An offset into the `.debug_macinfo` section.",null,null],[12,"0","","",12,null],[3,"DebugMacroOffset","","An offset into the `.debug_macro` section.",null,null],[12,"0","","",13,null],[3,"RangeListsOffset","","An offset into either the `.debug_ranges` section or the…",null,null],[12,"0","","",14,null],[3,"DebugRngListsBase","","An offset to a set of range list offsets in the…",null,null],[12,"0","","",15,null],[3,"DebugRngListsIndex","","An index into a set of range list offsets in the…",null,null],[12,"0","","",16,null],[3,"DebugStrOffset","","An offset into the `.debug_str` section.",null,null],[12,"0","","",17,null],[3,"DebugStrOffsetsBase","","An offset to a set of entries in the `.debug_str_offsets`…",null,null],[12,"0","","",18,null],[3,"DebugStrOffsetsIndex","","An index into a set of entries in the `.debug_str_offsets`…",null,null],[12,"0","","",19,null],[3,"DebugTypesOffset","","An offset into the `.debug_types` section.",null,null],[12,"0","","",20,null],[3,"DebugTypeSignature","","A type signature as used in the `.debug_types` section.",null,null],[12,"0","","",21,null],[3,"DebugFrameOffset","","An offset into the `.debug_frame` section.",null,null],[12,"0","","",22,null],[3,"EhFrameOffset","","An offset into the `.eh_frame` section.",null,null],[12,"0","","",23,null],[3,"Arm","","ARM architecture specific definitions.",null,null],[3,"X86","","Intel i386 architecture specific definitions.",null,null],[3,"X86_64","","AMD64 architecture specific definitions.",null,null],[3,"BigEndian","","Big endian byte order.",null,null],[3,"LittleEndian","","Little endian byte order.",null,null],[4,"Format","","Whether the format of a compilation unit is 32- or 64-bit.",null,null],[13,"Dwarf64","","64-bit DWARF",24,null],[13,"Dwarf32","","32-bit DWARF",24,null],[4,"UnitSectionOffset","","An offset into the `.debug_info` or `.debug_types` sections.",null,null],[13,"DebugInfoOffset","","An offset into the `.debug_info` section.",25,null],[13,"DebugTypesOffset","","An offset into the `.debug_types` section.",25,null],[4,"SectionId","","An identifier for a DWARF section.",null,null],[13,"DebugAbbrev","","The `.debug_abbrev` section.",26,null],[13,"DebugAddr","","The `.debug_addr` section.",26,null],[13,"DebugAranges","","The `.debug_aranges` section.",26,null],[13,"DebugFrame","","The `.debug_frame` section.",26,null],[13,"EhFrame","","The `.eh_frame` section.",26,null],[13,"EhFrameHdr","","The `.eh_frame_hdr` section.",26,null],[13,"DebugInfo","","The `.debug_info` section.",26,null],[13,"DebugLine","","The `.debug_line` section.",26,null],[13,"DebugLineStr","","The `.debug_line_str` section.",26,null],[13,"DebugLoc","","The `.debug_loc` section.",26,null],[13,"DebugLocLists","","The `.debug_loclists` section.",26,null],[13,"DebugMacinfo","","The `.debug_macinfo` section.",26,null],[13,"DebugMacro","","The `.debug_macro` section.",26,null],[13,"DebugPubNames","","The `.debug_pubnames` section.",26,null],[13,"DebugPubTypes","","The `.debug_pubtypes` section.",26,null],[13,"DebugRanges","","The `.debug_ranges` section.",26,null],[13,"DebugRngLists","","The `.debug_rnglists` section.",26,null],[13,"DebugStr","","The `.debug_str` section.",26,null],[13,"DebugStrOffsets","","The `.debug_str_offsets` section.",26,null],[13,"DebugTypes","","The `.debug_types` section.",26,null],[4,"RunTimeEndian","","Byte order that is selectable at runtime.",null,null],[13,"Little","","Little endian byte order.",27,null],[13,"Big","","Big endian byte order.",27,null],[11,"initial_length_size","","Return the serialized size of an initial length field for…",24,[[],["u8"]]],[11,"word_size","","Return the natural word size for the format",24,[[],["u8"]]],[11,"name","","Returns the ELF section name for this kind.",26,[[],["str"]]],[18,"R0","","",28,null],[18,"R1","","",28,null],[18,"R2","","",28,null],[18,"R3","","",28,null],[18,"R4","","",28,null],[18,"R5","","",28,null],[18,"R6","","",28,null],[18,"R7","","",28,null],[18,"R8","","",28,null],[18,"R9","","",28,null],[18,"R10","","",28,null],[18,"R11","","",28,null],[18,"R12","","",28,null],[18,"R13","","",28,null],[18,"R14","","",28,null],[18,"R15","","",28,null],[11,"register_name","","The name of a register, or `None` if the register number…",28,[[["register"]],[["option",["str"]],["str"]]]],[18,"EAX","","",29,null],[18,"ECX","","",29,null],[18,"EDX","","",29,null],[18,"EBX","","",29,null],[18,"ESP","","",29,null],[18,"EBP","","",29,null],[18,"ESI","","",29,null],[18,"EDI","","",29,null],[18,"RA","","",29,null],[18,"ST0","","",29,null],[18,"ST1","","",29,null],[18,"ST2","","",29,null],[18,"ST3","","",29,null],[18,"ST4","","",29,null],[18,"ST5","","",29,null],[18,"ST6","","",29,null],[18,"ST7","","",29,null],[18,"XMM0","","",29,null],[18,"XMM1","","",29,null],[18,"XMM2","","",29,null],[18,"XMM3","","",29,null],[18,"XMM4","","",29,null],[18,"XMM5","","",29,null],[18,"XMM6","","",29,null],[18,"XMM7","","",29,null],[18,"MM0","","",29,null],[18,"MM1","","",29,null],[18,"MM2","","",29,null],[18,"MM3","","",29,null],[18,"MM4","","",29,null],[18,"MM5","","",29,null],[18,"MM6","","",29,null],[18,"MM7","","",29,null],[18,"MXCSR","","",29,null],[18,"ES","","",29,null],[18,"CS","","",29,null],[18,"SS","","",29,null],[18,"DS","","",29,null],[18,"FS","","",29,null],[18,"GS","","",29,null],[18,"TR","","",29,null],[18,"LDTR","","",29,null],[18,"FS_BASE","","",29,null],[18,"GS_BASE","","",29,null],[11,"register_name","","The name of a register, or `None` if the register number…",29,[[["register"]],[["option",["str"]],["str"]]]],[18,"RAX","","",30,null],[18,"RDX","","",30,null],[18,"RCX","","",30,null],[18,"RBX","","",30,null],[18,"RSI","","",30,null],[18,"RDI","","",30,null],[18,"RBP","","",30,null],[18,"RSP","","",30,null],[18,"R8","","",30,null],[18,"R9","","",30,null],[18,"R10","","",30,null],[18,"R11","","",30,null],[18,"R12","","",30,null],[18,"R13","","",30,null],[18,"R14","","",30,null],[18,"R15","","",30,null],[18,"RA","","",30,null],[18,"XMM0","","",30,null],[18,"XMM1","","",30,null],[18,"XMM2","","",30,null],[18,"XMM3","","",30,null],[18,"XMM4","","",30,null],[18,"XMM5","","",30,null],[18,"XMM6","","",30,null],[18,"XMM7","","",30,null],[18,"XMM8","","",30,null],[18,"XMM9","","",30,null],[18,"XMM10","","",30,null],[18,"XMM11","","",30,null],[18,"XMM12","","",30,null],[18,"XMM13","","",30,null],[18,"XMM14","","",30,null],[18,"XMM15","","",30,null],[18,"ST0","","",30,null],[18,"ST1","","",30,null],[18,"ST2","","",30,null],[18,"ST3","","",30,null],[18,"ST4","","",30,null],[18,"ST5","","",30,null],[18,"ST6","","",30,null],[18,"ST7","","",30,null],[18,"MM0","","",30,null],[18,"MM1","","",30,null],[18,"MM2","","",30,null],[18,"MM3","","",30,null],[18,"MM4","","",30,null],[18,"MM5","","",30,null],[18,"MM6","","",30,null],[18,"MM7","","",30,null],[18,"RFLAGS","","",30,null],[18,"ES","","",30,null],[18,"CS","","",30,null],[18,"SS","","",30,null],[18,"DS","","",30,null],[18,"FS","","",30,null],[18,"GS","","",30,null],[18,"FS_BASE","","",30,null],[18,"GS_BASE","","",30,null],[18,"TR","","",30,null],[18,"LDTR","","",30,null],[18,"MXCSR","","",30,null],[18,"FCW","","",30,null],[18,"FSW","","",30,null],[18,"XMM16","","",30,null],[18,"XMM17","","",30,null],[18,"XMM18","","",30,null],[18,"XMM19","","",30,null],[18,"XMM20","","",30,null],[18,"XMM21","","",30,null],[18,"XMM22","","",30,null],[18,"XMM23","","",30,null],[18,"XMM24","","",30,null],[18,"XMM25","","",30,null],[18,"XMM26","","",30,null],[18,"XMM27","","",30,null],[18,"XMM28","","",30,null],[18,"XMM29","","",30,null],[18,"XMM30","","",30,null],[18,"XMM31","","",30,null],[18,"K0","","",30,null],[18,"K1","","",30,null],[18,"K2","","",30,null],[18,"K3","","",30,null],[18,"K4","","",30,null],[18,"K5","","",30,null],[18,"K6","","",30,null],[18,"K7","","",30,null],[11,"register_name","","The name of a register, or `None` if the register number…",30,[[["register"]],[["option",["str"]],["str"]]]],[0,"constants","","Constant definitions.",null,null],[3,"DwUt","gimli::constants","The unit type field in a unit header.",null,null],[12,"0","","",31,null],[3,"DwCfa","","The opcode for a call frame instruction.",null,null],[12,"0","","",32,null],[3,"DwChildren","","The child determination encodings for DIE attributes.",null,null],[12,"0","","",33,null],[3,"DwTag","","The tag encodings for DIE attributes.",null,null],[12,"0","","",34,null],[3,"DwAt","","The attribute encodings for DIE attributes.",null,null],[12,"0","","",35,null],[3,"DwForm","","The attribute form encodings for DIE attributes.",null,null],[12,"0","","",36,null],[3,"DwAte","","The encodings of the constants used in the…",null,null],[12,"0","","",37,null],[3,"DwLle","","The encodings of the constants used in location list…",null,null],[12,"0","","",38,null],[3,"DwDs","","The encodings of the constants used in the…",null,null],[12,"0","","",39,null],[3,"DwEnd","","The encodings of the constants used in the…",null,null],[12,"0","","",40,null],[3,"DwAccess","","The encodings of the constants used in the…",null,null],[12,"0","","",41,null],[3,"DwVis","","The encodings of the constants used in the…",null,null],[12,"0","","",42,null],[3,"DwVirtuality","","The encodings of the constants used in the…",null,null],[12,"0","","",43,null],[3,"DwLang","","The encodings of the constants used in the…",null,null],[12,"0","","",44,null],[3,"DwAddr","","The encodings of the constants used in the…",null,null],[12,"0","","",45,null],[3,"DwId","","The encodings of the constants used in the…",null,null],[12,"0","","",46,null],[3,"DwCc","","The encodings of the constants used in the…",null,null],[12,"0","","",47,null],[3,"DwInl","","The encodings of the constants used in the `DW_AT_inline`…",null,null],[12,"0","","",48,null],[3,"DwOrd","","The encodings of the constants used in the…",null,null],[12,"0","","",49,null],[3,"DwDsc","","The encodings of the constants used in the…",null,null],[12,"0","","",50,null],[3,"DwIdx","","Name index attribute encodings.",null,null],[12,"0","","",51,null],[3,"DwDefaulted","","The encodings of the constants used in the…",null,null],[12,"0","","",52,null],[3,"DwLns","","The encodings for the standard opcodes for line number…",null,null],[12,"0","","",53,null],[3,"DwLne","","The encodings for the extended opcodes for line number…",null,null],[12,"0","","",54,null],[3,"DwLnct","","The encodings for the line number header entry formats.",null,null],[12,"0","","",55,null],[3,"DwMacro","","The encodings for macro information entry types.",null,null],[12,"0","","",56,null],[3,"DwRle","","Range list entry encoding values.",null,null],[12,"0","","",57,null],[3,"DwOp","","The encodings for DWARF expression operations.",null,null],[12,"0","","",58,null],[3,"DwEhPe","","Pointer encoding used by `.eh_frame`.",null,null],[12,"0","","",59,null],[17,"DW_UT_compile","","",null,null],[17,"DW_UT_type","","",null,null],[17,"DW_UT_partial","","",null,null],[17,"DW_UT_skeleton","","",null,null],[17,"DW_UT_split_compile","","",null,null],[17,"DW_UT_split_type","","",null,null],[17,"DW_UT_lo_user","","",null,null],[17,"DW_UT_hi_user","","",null,null],[17,"DW_CFA_advance_loc","","",null,null],[17,"DW_CFA_offset","","",null,null],[17,"DW_CFA_restore","","",null,null],[17,"DW_CFA_nop","","",null,null],[17,"DW_CFA_set_loc","","",null,null],[17,"DW_CFA_advance_loc1","","",null,null],[17,"DW_CFA_advance_loc2","","",null,null],[17,"DW_CFA_advance_loc4","","",null,null],[17,"DW_CFA_offset_extended","","",null,null],[17,"DW_CFA_restore_extended","","",null,null],[17,"DW_CFA_undefined","","",null,null],[17,"DW_CFA_same_value","","",null,null],[17,"DW_CFA_register","","",null,null],[17,"DW_CFA_remember_state","","",null,null],[17,"DW_CFA_restore_state","","",null,null],[17,"DW_CFA_def_cfa","","",null,null],[17,"DW_CFA_def_cfa_register","","",null,null],[17,"DW_CFA_def_cfa_offset","","",null,null],[17,"DW_CFA_def_cfa_expression","","",null,null],[17,"DW_CFA_expression","","",null,null],[17,"DW_CFA_offset_extended_sf","","",null,null],[17,"DW_CFA_def_cfa_sf","","",null,null],[17,"DW_CFA_def_cfa_offset_sf","","",null,null],[17,"DW_CFA_val_offset","","",null,null],[17,"DW_CFA_val_offset_sf","","",null,null],[17,"DW_CFA_val_expression","","",null,null],[17,"DW_CFA_lo_user","","",null,null],[17,"DW_CFA_hi_user","","",null,null],[17,"DW_CFA_MIPS_advance_loc8","","",null,null],[17,"DW_CFA_GNU_window_save","","",null,null],[17,"DW_CFA_GNU_args_size","","",null,null],[17,"DW_CFA_GNU_negative_offset_extended","","",null,null],[17,"DW_CHILDREN_no","","",null,null],[17,"DW_CHILDREN_yes","","",null,null],[17,"DW_TAG_null","","",null,null],[17,"DW_TAG_array_type","","",null,null],[17,"DW_TAG_class_type","","",null,null],[17,"DW_TAG_entry_point","","",null,null],[17,"DW_TAG_enumeration_type","","",null,null],[17,"DW_TAG_formal_parameter","","",null,null],[17,"DW_TAG_imported_declaration","","",null,null],[17,"DW_TAG_label","","",null,null],[17,"DW_TAG_lexical_block","","",null,null],[17,"DW_TAG_member","","",null,null],[17,"DW_TAG_pointer_type","","",null,null],[17,"DW_TAG_reference_type","","",null,null],[17,"DW_TAG_compile_unit","","",null,null],[17,"DW_TAG_string_type","","",null,null],[17,"DW_TAG_structure_type","","",null,null],[17,"DW_TAG_subroutine_type","","",null,null],[17,"DW_TAG_typedef","","",null,null],[17,"DW_TAG_union_type","","",null,null],[17,"DW_TAG_unspecified_parameters","","",null,null],[17,"DW_TAG_variant","","",null,null],[17,"DW_TAG_common_block","","",null,null],[17,"DW_TAG_common_inclusion","","",null,null],[17,"DW_TAG_inheritance","","",null,null],[17,"DW_TAG_inlined_subroutine","","",null,null],[17,"DW_TAG_module","","",null,null],[17,"DW_TAG_ptr_to_member_type","","",null,null],[17,"DW_TAG_set_type","","",null,null],[17,"DW_TAG_subrange_type","","",null,null],[17,"DW_TAG_with_stmt","","",null,null],[17,"DW_TAG_access_declaration","","",null,null],[17,"DW_TAG_base_type","","",null,null],[17,"DW_TAG_catch_block","","",null,null],[17,"DW_TAG_const_type","","",null,null],[17,"DW_TAG_constant","","",null,null],[17,"DW_TAG_enumerator","","",null,null],[17,"DW_TAG_file_type","","",null,null],[17,"DW_TAG_friend","","",null,null],[17,"DW_TAG_namelist","","",null,null],[17,"DW_TAG_namelist_item","","",null,null],[17,"DW_TAG_packed_type","","",null,null],[17,"DW_TAG_subprogram","","",null,null],[17,"DW_TAG_template_type_parameter","","",null,null],[17,"DW_TAG_template_value_parameter","","",null,null],[17,"DW_TAG_thrown_type","","",null,null],[17,"DW_TAG_try_block","","",null,null],[17,"DW_TAG_variant_part","","",null,null],[17,"DW_TAG_variable","","",null,null],[17,"DW_TAG_volatile_type","","",null,null],[17,"DW_TAG_dwarf_procedure","","",null,null],[17,"DW_TAG_restrict_type","","",null,null],[17,"DW_TAG_interface_type","","",null,null],[17,"DW_TAG_namespace","","",null,null],[17,"DW_TAG_imported_module","","",null,null],[17,"DW_TAG_unspecified_type","","",null,null],[17,"DW_TAG_partial_unit","","",null,null],[17,"DW_TAG_imported_unit","","",null,null],[17,"DW_TAG_condition","","",null,null],[17,"DW_TAG_shared_type","","",null,null],[17,"DW_TAG_type_unit","","",null,null],[17,"DW_TAG_rvalue_reference_type","","",null,null],[17,"DW_TAG_template_alias","","",null,null],[17,"DW_TAG_coarray_type","","",null,null],[17,"DW_TAG_generic_subrange","","",null,null],[17,"DW_TAG_dynamic_type","","",null,null],[17,"DW_TAG_atomic_type","","",null,null],[17,"DW_TAG_call_site","","",null,null],[17,"DW_TAG_call_site_parameter","","",null,null],[17,"DW_TAG_skeleton_unit","","",null,null],[17,"DW_TAG_immutable_type","","",null,null],[17,"DW_TAG_lo_user","","",null,null],[17,"DW_TAG_hi_user","","",null,null],[17,"DW_TAG_MIPS_loop","","",null,null],[17,"DW_TAG_HP_array_descriptor","","",null,null],[17,"DW_TAG_HP_Bliss_field","","",null,null],[17,"DW_TAG_HP_Bliss_field_set","","",null,null],[17,"DW_TAG_format_label","","",null,null],[17,"DW_TAG_function_template","","",null,null],[17,"DW_TAG_class_template","","",null,null],[17,"DW_TAG_GNU_BINCL","","",null,null],[17,"DW_TAG_GNU_EINCL","","",null,null],[17,"DW_TAG_GNU_template_template_param","","",null,null],[17,"DW_TAG_GNU_template_parameter_pack","","",null,null],[17,"DW_TAG_GNU_formal_parameter_pack","","",null,null],[17,"DW_TAG_GNU_call_site","","",null,null],[17,"DW_TAG_GNU_call_site_parameter","","",null,null],[17,"DW_TAG_APPLE_property","","",null,null],[17,"DW_TAG_SUN_function_template","","",null,null],[17,"DW_TAG_SUN_class_template","","",null,null],[17,"DW_TAG_SUN_struct_template","","",null,null],[17,"DW_TAG_SUN_union_template","","",null,null],[17,"DW_TAG_SUN_indirect_inheritance","","",null,null],[17,"DW_TAG_SUN_codeflags","","",null,null],[17,"DW_TAG_SUN_memop_info","","",null,null],[17,"DW_TAG_SUN_omp_child_func","","",null,null],[17,"DW_TAG_SUN_rtti_descriptor","","",null,null],[17,"DW_TAG_SUN_dtor_info","","",null,null],[17,"DW_TAG_SUN_dtor","","",null,null],[17,"DW_TAG_SUN_f90_interface","","",null,null],[17,"DW_TAG_SUN_fortran_vax_structure","","",null,null],[17,"DW_TAG_ALTIUM_circ_type","","",null,null],[17,"DW_TAG_ALTIUM_mwa_circ_type","","",null,null],[17,"DW_TAG_ALTIUM_rev_carry_type","","",null,null],[17,"DW_TAG_ALTIUM_rom","","",null,null],[17,"DW_TAG_upc_shared_type","","",null,null],[17,"DW_TAG_upc_strict_type","","",null,null],[17,"DW_TAG_upc_relaxed_type","","",null,null],[17,"DW_TAG_PGI_kanji_type","","",null,null],[17,"DW_TAG_PGI_interface_block","","",null,null],[17,"DW_TAG_BORLAND_property","","",null,null],[17,"DW_TAG_BORLAND_Delphi_string","","",null,null],[17,"DW_TAG_BORLAND_Delphi_dynamic_array","","",null,null],[17,"DW_TAG_BORLAND_Delphi_set","","",null,null],[17,"DW_TAG_BORLAND_Delphi_variant","","",null,null],[17,"DW_AT_null","","",null,null],[17,"DW_AT_sibling","","",null,null],[17,"DW_AT_location","","",null,null],[17,"DW_AT_name","","",null,null],[17,"DW_AT_ordering","","",null,null],[17,"DW_AT_byte_size","","",null,null],[17,"DW_AT_bit_offset","","",null,null],[17,"DW_AT_bit_size","","",null,null],[17,"DW_AT_stmt_list","","",null,null],[17,"DW_AT_low_pc","","",null,null],[17,"DW_AT_high_pc","","",null,null],[17,"DW_AT_language","","",null,null],[17,"DW_AT_discr","","",null,null],[17,"DW_AT_discr_value","","",null,null],[17,"DW_AT_visibility","","",null,null],[17,"DW_AT_import","","",null,null],[17,"DW_AT_string_length","","",null,null],[17,"DW_AT_common_reference","","",null,null],[17,"DW_AT_comp_dir","","",null,null],[17,"DW_AT_const_value","","",null,null],[17,"DW_AT_containing_type","","",null,null],[17,"DW_AT_default_value","","",null,null],[17,"DW_AT_inline","","",null,null],[17,"DW_AT_is_optional","","",null,null],[17,"DW_AT_lower_bound","","",null,null],[17,"DW_AT_producer","","",null,null],[17,"DW_AT_prototyped","","",null,null],[17,"DW_AT_return_addr","","",null,null],[17,"DW_AT_start_scope","","",null,null],[17,"DW_AT_bit_stride","","",null,null],[17,"DW_AT_upper_bound","","",null,null],[17,"DW_AT_abstract_origin","","",null,null],[17,"DW_AT_accessibility","","",null,null],[17,"DW_AT_address_class","","",null,null],[17,"DW_AT_artificial","","",null,null],[17,"DW_AT_base_types","","",null,null],[17,"DW_AT_calling_convention","","",null,null],[17,"DW_AT_count","","",null,null],[17,"DW_AT_data_member_location","","",null,null],[17,"DW_AT_decl_column","","",null,null],[17,"DW_AT_decl_file","","",null,null],[17,"DW_AT_decl_line","","",null,null],[17,"DW_AT_declaration","","",null,null],[17,"DW_AT_discr_list","","",null,null],[17,"DW_AT_encoding","","",null,null],[17,"DW_AT_external","","",null,null],[17,"DW_AT_frame_base","","",null,null],[17,"DW_AT_friend","","",null,null],[17,"DW_AT_identifier_case","","",null,null],[17,"DW_AT_macro_info","","",null,null],[17,"DW_AT_namelist_item","","",null,null],[17,"DW_AT_priority","","",null,null],[17,"DW_AT_segment","","",null,null],[17,"DW_AT_specification","","",null,null],[17,"DW_AT_static_link","","",null,null],[17,"DW_AT_type","","",null,null],[17,"DW_AT_use_location","","",null,null],[17,"DW_AT_variable_parameter","","",null,null],[17,"DW_AT_virtuality","","",null,null],[17,"DW_AT_vtable_elem_location","","",null,null],[17,"DW_AT_allocated","","",null,null],[17,"DW_AT_associated","","",null,null],[17,"DW_AT_data_location","","",null,null],[17,"DW_AT_byte_stride","","",null,null],[17,"DW_AT_entry_pc","","",null,null],[17,"DW_AT_use_UTF8","","",null,null],[17,"DW_AT_extension","","",null,null],[17,"DW_AT_ranges","","",null,null],[17,"DW_AT_trampoline","","",null,null],[17,"DW_AT_call_column","","",null,null],[17,"DW_AT_call_file","","",null,null],[17,"DW_AT_call_line","","",null,null],[17,"DW_AT_description","","",null,null],[17,"DW_AT_binary_scale","","",null,null],[17,"DW_AT_decimal_scale","","",null,null],[17,"DW_AT_small","","",null,null],[17,"DW_AT_decimal_sign","","",null,null],[17,"DW_AT_digit_count","","",null,null],[17,"DW_AT_picture_string","","",null,null],[17,"DW_AT_mutable","","",null,null],[17,"DW_AT_threads_scaled","","",null,null],[17,"DW_AT_explicit","","",null,null],[17,"DW_AT_object_pointer","","",null,null],[17,"DW_AT_endianity","","",null,null],[17,"DW_AT_elemental","","",null,null],[17,"DW_AT_pure","","",null,null],[17,"DW_AT_recursive","","",null,null],[17,"DW_AT_signature","","",null,null],[17,"DW_AT_main_subprogram","","",null,null],[17,"DW_AT_data_bit_offset","","",null,null],[17,"DW_AT_const_expr","","",null,null],[17,"DW_AT_enum_class","","",null,null],[17,"DW_AT_linkage_name","","",null,null],[17,"DW_AT_string_length_bit_size","","",null,null],[17,"DW_AT_string_length_byte_size","","",null,null],[17,"DW_AT_rank","","",null,null],[17,"DW_AT_str_offsets_base","","",null,null],[17,"DW_AT_addr_base","","",null,null],[17,"DW_AT_rnglists_base","","",null,null],[17,"DW_AT_dwo_name","","",null,null],[17,"DW_AT_reference","","",null,null],[17,"DW_AT_rvalue_reference","","",null,null],[17,"DW_AT_macros","","",null,null],[17,"DW_AT_call_all_calls","","",null,null],[17,"DW_AT_call_all_source_calls","","",null,null],[17,"DW_AT_call_all_tail_calls","","",null,null],[17,"DW_AT_call_return_pc","","",null,null],[17,"DW_AT_call_value","","",null,null],[17,"DW_AT_call_origin","","",null,null],[17,"DW_AT_call_parameter","","",null,null],[17,"DW_AT_call_pc","","",null,null],[17,"DW_AT_call_tail_call","","",null,null],[17,"DW_AT_call_target","","",null,null],[17,"DW_AT_call_target_clobbered","","",null,null],[17,"DW_AT_call_data_location","","",null,null],[17,"DW_AT_call_data_value","","",null,null],[17,"DW_AT_noreturn","","",null,null],[17,"DW_AT_alignment","","",null,null],[17,"DW_AT_export_symbols","","",null,null],[17,"DW_AT_deleted","","",null,null],[17,"DW_AT_defaulted","","",null,null],[17,"DW_AT_loclists_base","","",null,null],[17,"DW_AT_lo_user","","",null,null],[17,"DW_AT_hi_user","","",null,null],[17,"DW_AT_MIPS_fde","","",null,null],[17,"DW_AT_MIPS_loop_begin","","",null,null],[17,"DW_AT_MIPS_tail_loop_begin","","",null,null],[17,"DW_AT_MIPS_epilog_begin","","",null,null],[17,"DW_AT_MIPS_loop_unroll_factor","","",null,null],[17,"DW_AT_MIPS_software_pipeline_depth","","",null,null],[17,"DW_AT_MIPS_linkage_name","","",null,null],[17,"DW_AT_MIPS_stride","","",null,null],[17,"DW_AT_MIPS_abstract_name","","",null,null],[17,"DW_AT_MIPS_clone_origin","","",null,null],[17,"DW_AT_MIPS_has_inlines","","",null,null],[17,"DW_AT_MIPS_stride_byte","","",null,null],[17,"DW_AT_MIPS_stride_elem","","",null,null],[17,"DW_AT_MIPS_ptr_dopetype","","",null,null],[17,"DW_AT_MIPS_allocatable_dopetype","","",null,null],[17,"DW_AT_MIPS_assumed_shape_dopetype","","",null,null],[17,"DW_AT_MIPS_assumed_size","","",null,null],[17,"DW_AT_INTEL_other_endian","","",null,null],[17,"DW_AT_sf_names","","",null,null],[17,"DW_AT_src_info","","",null,null],[17,"DW_AT_mac_info","","",null,null],[17,"DW_AT_src_coords","","",null,null],[17,"DW_AT_body_begin","","",null,null],[17,"DW_AT_body_end","","",null,null],[17,"DW_AT_GNU_vector","","",null,null],[17,"DW_AT_GNU_guarded_by","","",null,null],[17,"DW_AT_GNU_pt_guarded_by","","",null,null],[17,"DW_AT_GNU_guarded","","",null,null],[17,"DW_AT_GNU_pt_guarded","","",null,null],[17,"DW_AT_GNU_locks_excluded","","",null,null],[17,"DW_AT_GNU_exclusive_locks_required","","",null,null],[17,"DW_AT_GNU_shared_locks_required","","",null,null],[17,"DW_AT_GNU_odr_signature","","",null,null],[17,"DW_AT_GNU_template_name","","",null,null],[17,"DW_AT_GNU_call_site_value","","",null,null],[17,"DW_AT_GNU_call_site_data_value","","",null,null],[17,"DW_AT_GNU_call_site_target","","",null,null],[17,"DW_AT_GNU_call_site_target_clobbered","","",null,null],[17,"DW_AT_GNU_tail_call","","",null,null],[17,"DW_AT_GNU_all_tail_call_sites","","",null,null],[17,"DW_AT_GNU_all_call_sites","","",null,null],[17,"DW_AT_GNU_all_source_call_sites","","",null,null],[17,"DW_AT_GNU_macros","","",null,null],[17,"DW_AT_GNU_dwo_name","","",null,null],[17,"DW_AT_GNU_dwo_id","","",null,null],[17,"DW_AT_GNU_ranges_base","","",null,null],[17,"DW_AT_GNU_addr_base","","",null,null],[17,"DW_AT_GNU_pubnames","","",null,null],[17,"DW_AT_GNU_pubtypes","","",null,null],[17,"DW_AT_GNU_discriminator","","",null,null],[17,"DW_AT_GNU_locviews","","",null,null],[17,"DW_AT_GNU_entry_view","","",null,null],[17,"DW_AT_SUN_template","","",null,null],[17,"DW_AT_SUN_alignment","","",null,null],[17,"DW_AT_SUN_vtable","","",null,null],[17,"DW_AT_SUN_count_guarantee","","",null,null],[17,"DW_AT_SUN_command_line","","",null,null],[17,"DW_AT_SUN_vbase","","",null,null],[17,"DW_AT_SUN_compile_options","","",null,null],[17,"DW_AT_SUN_language","","",null,null],[17,"DW_AT_SUN_browser_file","","",null,null],[17,"DW_AT_SUN_vtable_abi","","",null,null],[17,"DW_AT_SUN_func_offsets","","",null,null],[17,"DW_AT_SUN_cf_kind","","",null,null],[17,"DW_AT_SUN_vtable_index","","",null,null],[17,"DW_AT_SUN_omp_tpriv_addr","","",null,null],[17,"DW_AT_SUN_omp_child_func","","",null,null],[17,"DW_AT_SUN_func_offset","","",null,null],[17,"DW_AT_SUN_memop_type_ref","","",null,null],[17,"DW_AT_SUN_profile_id","","",null,null],[17,"DW_AT_SUN_memop_signature","","",null,null],[17,"DW_AT_SUN_obj_dir","","",null,null],[17,"DW_AT_SUN_obj_file","","",null,null],[17,"DW_AT_SUN_original_name","","",null,null],[17,"DW_AT_SUN_hwcprof_signature","","",null,null],[17,"DW_AT_SUN_amd64_parmdump","","",null,null],[17,"DW_AT_SUN_part_link_name","","",null,null],[17,"DW_AT_SUN_link_name","","",null,null],[17,"DW_AT_SUN_pass_with_const","","",null,null],[17,"DW_AT_SUN_return_with_const","","",null,null],[17,"DW_AT_SUN_import_by_name","","",null,null],[17,"DW_AT_SUN_f90_pointer","","",null,null],[17,"DW_AT_SUN_pass_by_ref","","",null,null],[17,"DW_AT_SUN_f90_allocatable","","",null,null],[17,"DW_AT_SUN_f90_assumed_shape_array","","",null,null],[17,"DW_AT_SUN_c_vla","","",null,null],[17,"DW_AT_SUN_return_value_ptr","","",null,null],[17,"DW_AT_SUN_dtor_start","","",null,null],[17,"DW_AT_SUN_dtor_length","","",null,null],[17,"DW_AT_SUN_dtor_state_initial","","",null,null],[17,"DW_AT_SUN_dtor_state_final","","",null,null],[17,"DW_AT_SUN_dtor_state_deltas","","",null,null],[17,"DW_AT_SUN_import_by_lname","","",null,null],[17,"DW_AT_SUN_f90_use_only","","",null,null],[17,"DW_AT_SUN_namelist_spec","","",null,null],[17,"DW_AT_SUN_is_omp_child_func","","",null,null],[17,"DW_AT_SUN_fortran_main_alias","","",null,null],[17,"DW_AT_SUN_fortran_based","","",null,null],[17,"DW_AT_ALTIUM_loclist","","",null,null],[17,"DW_AT_use_GNAT_descriptive_type","","",null,null],[17,"DW_AT_GNAT_descriptive_type","","",null,null],[17,"DW_AT_GNU_numerator","","",null,null],[17,"DW_AT_GNU_denominator","","",null,null],[17,"DW_AT_GNU_bias","","",null,null],[17,"DW_AT_upc_threads_scaled","","",null,null],[17,"DW_AT_PGI_lbase","","",null,null],[17,"DW_AT_PGI_soffset","","",null,null],[17,"DW_AT_PGI_lstride","","",null,null],[17,"DW_AT_BORLAND_property_read","","",null,null],[17,"DW_AT_BORLAND_property_write","","",null,null],[17,"DW_AT_BORLAND_property_implements","","",null,null],[17,"DW_AT_BORLAND_property_index","","",null,null],[17,"DW_AT_BORLAND_property_default","","",null,null],[17,"DW_AT_BORLAND_Delphi_unit","","",null,null],[17,"DW_AT_BORLAND_Delphi_class","","",null,null],[17,"DW_AT_BORLAND_Delphi_record","","",null,null],[17,"DW_AT_BORLAND_Delphi_metaclass","","",null,null],[17,"DW_AT_BORLAND_Delphi_constructor","","",null,null],[17,"DW_AT_BORLAND_Delphi_destructor","","",null,null],[17,"DW_AT_BORLAND_Delphi_anonymous_method","","",null,null],[17,"DW_AT_BORLAND_Delphi_interface","","",null,null],[17,"DW_AT_BORLAND_Delphi_ABI","","",null,null],[17,"DW_AT_BORLAND_Delphi_return","","",null,null],[17,"DW_AT_BORLAND_Delphi_frameptr","","",null,null],[17,"DW_AT_BORLAND_closure","","",null,null],[17,"DW_AT_LLVM_include_path","","",null,null],[17,"DW_AT_LLVM_config_macros","","",null,null],[17,"DW_AT_LLVM_isysroot","","",null,null],[17,"DW_AT_APPLE_optimized","","",null,null],[17,"DW_AT_APPLE_flags","","",null,null],[17,"DW_AT_APPLE_isa","","",null,null],[17,"DW_AT_APPLE_block","","",null,null],[17,"DW_AT_APPLE_major_runtime_vers","","",null,null],[17,"DW_AT_APPLE_runtime_class","","",null,null],[17,"DW_AT_APPLE_omit_frame_ptr","","",null,null],[17,"DW_AT_APPLE_property_name","","",null,null],[17,"DW_AT_APPLE_property_getter","","",null,null],[17,"DW_AT_APPLE_property_setter","","",null,null],[17,"DW_AT_APPLE_property_attribute","","",null,null],[17,"DW_AT_APPLE_objc_complete_type","","",null,null],[17,"DW_AT_APPLE_property","","",null,null],[17,"DW_FORM_null","","",null,null],[17,"DW_FORM_addr","","",null,null],[17,"DW_FORM_block2","","",null,null],[17,"DW_FORM_block4","","",null,null],[17,"DW_FORM_data2","","",null,null],[17,"DW_FORM_data4","","",null,null],[17,"DW_FORM_data8","","",null,null],[17,"DW_FORM_string","","",null,null],[17,"DW_FORM_block","","",null,null],[17,"DW_FORM_block1","","",null,null],[17,"DW_FORM_data1","","",null,null],[17,"DW_FORM_flag","","",null,null],[17,"DW_FORM_sdata","","",null,null],[17,"DW_FORM_strp","","",null,null],[17,"DW_FORM_udata","","",null,null],[17,"DW_FORM_ref_addr","","",null,null],[17,"DW_FORM_ref1","","",null,null],[17,"DW_FORM_ref2","","",null,null],[17,"DW_FORM_ref4","","",null,null],[17,"DW_FORM_ref8","","",null,null],[17,"DW_FORM_ref_udata","","",null,null],[17,"DW_FORM_indirect","","",null,null],[17,"DW_FORM_sec_offset","","",null,null],[17,"DW_FORM_exprloc","","",null,null],[17,"DW_FORM_flag_present","","",null,null],[17,"DW_FORM_ref_sig8","","",null,null],[17,"DW_FORM_strx","","",null,null],[17,"DW_FORM_addrx","","",null,null],[17,"DW_FORM_ref_sup4","","",null,null],[17,"DW_FORM_strp_sup","","",null,null],[17,"DW_FORM_data16","","",null,null],[17,"DW_FORM_line_strp","","",null,null],[17,"DW_FORM_implicit_const","","",null,null],[17,"DW_FORM_loclistx","","",null,null],[17,"DW_FORM_rnglistx","","",null,null],[17,"DW_FORM_ref_sup8","","",null,null],[17,"DW_FORM_strx1","","",null,null],[17,"DW_FORM_strx2","","",null,null],[17,"DW_FORM_strx3","","",null,null],[17,"DW_FORM_strx4","","",null,null],[17,"DW_FORM_addrx1","","",null,null],[17,"DW_FORM_addrx2","","",null,null],[17,"DW_FORM_addrx3","","",null,null],[17,"DW_FORM_addrx4","","",null,null],[17,"DW_FORM_GNU_addr_index","","",null,null],[17,"DW_FORM_GNU_str_index","","",null,null],[17,"DW_FORM_GNU_ref_alt","","",null,null],[17,"DW_FORM_GNU_strp_alt","","",null,null],[17,"DW_ATE_address","","",null,null],[17,"DW_ATE_boolean","","",null,null],[17,"DW_ATE_complex_float","","",null,null],[17,"DW_ATE_float","","",null,null],[17,"DW_ATE_signed","","",null,null],[17,"DW_ATE_signed_char","","",null,null],[17,"DW_ATE_unsigned","","",null,null],[17,"DW_ATE_unsigned_char","","",null,null],[17,"DW_ATE_imaginary_float","","",null,null],[17,"DW_ATE_packed_decimal","","",null,null],[17,"DW_ATE_numeric_string","","",null,null],[17,"DW_ATE_edited","","",null,null],[17,"DW_ATE_signed_fixed","","",null,null],[17,"DW_ATE_unsigned_fixed","","",null,null],[17,"DW_ATE_decimal_float","","",null,null],[17,"DW_ATE_UTF","","",null,null],[17,"DW_ATE_UCS","","",null,null],[17,"DW_ATE_ASCII","","",null,null],[17,"DW_ATE_lo_user","","",null,null],[17,"DW_ATE_hi_user","","",null,null],[17,"DW_LLE_end_of_list","","",null,null],[17,"DW_LLE_base_addressx","","",null,null],[17,"DW_LLE_startx_endx","","",null,null],[17,"DW_LLE_startx_length","","",null,null],[17,"DW_LLE_offset_pair","","",null,null],[17,"DW_LLE_default_location","","",null,null],[17,"DW_LLE_base_address","","",null,null],[17,"DW_LLE_start_end","","",null,null],[17,"DW_LLE_start_length","","",null,null],[17,"DW_LLE_GNU_view_pair","","",null,null],[17,"DW_DS_unsigned","","",null,null],[17,"DW_DS_leading_overpunch","","",null,null],[17,"DW_DS_trailing_overpunch","","",null,null],[17,"DW_DS_leading_separate","","",null,null],[17,"DW_DS_trailing_separate","","",null,null],[17,"DW_END_default","","",null,null],[17,"DW_END_big","","",null,null],[17,"DW_END_little","","",null,null],[17,"DW_END_lo_user","","",null,null],[17,"DW_END_hi_user","","",null,null],[17,"DW_ACCESS_public","","",null,null],[17,"DW_ACCESS_protected","","",null,null],[17,"DW_ACCESS_private","","",null,null],[17,"DW_VIS_local","","",null,null],[17,"DW_VIS_exported","","",null,null],[17,"DW_VIS_qualified","","",null,null],[17,"DW_VIRTUALITY_none","","",null,null],[17,"DW_VIRTUALITY_virtual","","",null,null],[17,"DW_VIRTUALITY_pure_virtual","","",null,null],[17,"DW_LANG_C89","","",null,null],[17,"DW_LANG_C","","",null,null],[17,"DW_LANG_Ada83","","",null,null],[17,"DW_LANG_C_plus_plus","","",null,null],[17,"DW_LANG_Cobol74","","",null,null],[17,"DW_LANG_Cobol85","","",null,null],[17,"DW_LANG_Fortran77","","",null,null],[17,"DW_LANG_Fortran90","","",null,null],[17,"DW_LANG_Pascal83","","",null,null],[17,"DW_LANG_Modula2","","",null,null],[17,"DW_LANG_Java","","",null,null],[17,"DW_LANG_C99","","",null,null],[17,"DW_LANG_Ada95","","",null,null],[17,"DW_LANG_Fortran95","","",null,null],[17,"DW_LANG_PLI","","",null,null],[17,"DW_LANG_ObjC","","",null,null],[17,"DW_LANG_ObjC_plus_plus","","",null,null],[17,"DW_LANG_UPC","","",null,null],[17,"DW_LANG_D","","",null,null],[17,"DW_LANG_Python","","",null,null],[17,"DW_LANG_OpenCL","","",null,null],[17,"DW_LANG_Go","","",null,null],[17,"DW_LANG_Modula3","","",null,null],[17,"DW_LANG_Haskell","","",null,null],[17,"DW_LANG_C_plus_plus_03","","",null,null],[17,"DW_LANG_C_plus_plus_11","","",null,null],[17,"DW_LANG_OCaml","","",null,null],[17,"DW_LANG_Rust","","",null,null],[17,"DW_LANG_C11","","",null,null],[17,"DW_LANG_Swift","","",null,null],[17,"DW_LANG_Julia","","",null,null],[17,"DW_LANG_Dylan","","",null,null],[17,"DW_LANG_C_plus_plus_14","","",null,null],[17,"DW_LANG_Fortran03","","",null,null],[17,"DW_LANG_Fortran08","","",null,null],[17,"DW_LANG_RenderScript","","",null,null],[17,"DW_LANG_BLISS","","",null,null],[17,"DW_LANG_lo_user","","",null,null],[17,"DW_LANG_hi_user","","",null,null],[17,"DW_LANG_Mips_Assembler","","",null,null],[17,"DW_LANG_GOOGLE_RenderScript","","",null,null],[17,"DW_LANG_SUN_Assembler","","",null,null],[17,"DW_LANG_ALTIUM_Assembler","","",null,null],[17,"DW_LANG_BORLAND_Delphi","","",null,null],[17,"DW_ADDR_none","","",null,null],[17,"DW_ID_case_sensitive","","",null,null],[17,"DW_ID_up_case","","",null,null],[17,"DW_ID_down_case","","",null,null],[17,"DW_ID_case_insensitive","","",null,null],[17,"DW_CC_normal","","",null,null],[17,"DW_CC_program","","",null,null],[17,"DW_CC_nocall","","",null,null],[17,"DW_CC_pass_by_reference","","",null,null],[17,"DW_CC_pass_by_value","","",null,null],[17,"DW_CC_lo_user","","",null,null],[17,"DW_CC_hi_user","","",null,null],[17,"DW_INL_not_inlined","","",null,null],[17,"DW_INL_inlined","","",null,null],[17,"DW_INL_declared_not_inlined","","",null,null],[17,"DW_INL_declared_inlined","","",null,null],[17,"DW_ORD_row_major","","",null,null],[17,"DW_ORD_col_major","","",null,null],[17,"DW_DSC_label","","",null,null],[17,"DW_DSC_range","","",null,null],[17,"DW_IDX_compile_unit","","",null,null],[17,"DW_IDX_type_unit","","",null,null],[17,"DW_IDX_die_offset","","",null,null],[17,"DW_IDX_parent","","",null,null],[17,"DW_IDX_type_hash","","",null,null],[17,"DW_IDX_lo_user","","",null,null],[17,"DW_IDX_hi_user","","",null,null],[17,"DW_DEFAULTED_no","","",null,null],[17,"DW_DEFAULTED_in_class","","",null,null],[17,"DW_DEFAULTED_out_of_class","","",null,null],[17,"DW_LNS_copy","","",null,null],[17,"DW_LNS_advance_pc","","",null,null],[17,"DW_LNS_advance_line","","",null,null],[17,"DW_LNS_set_file","","",null,null],[17,"DW_LNS_set_column","","",null,null],[17,"DW_LNS_negate_stmt","","",null,null],[17,"DW_LNS_set_basic_block","","",null,null],[17,"DW_LNS_const_add_pc","","",null,null],[17,"DW_LNS_fixed_advance_pc","","",null,null],[17,"DW_LNS_set_prologue_end","","",null,null],[17,"DW_LNS_set_epilogue_begin","","",null,null],[17,"DW_LNS_set_isa","","",null,null],[17,"DW_LNE_end_sequence","","",null,null],[17,"DW_LNE_set_address","","",null,null],[17,"DW_LNE_define_file","","",null,null],[17,"DW_LNE_set_discriminator","","",null,null],[17,"DW_LNE_lo_user","","",null,null],[17,"DW_LNE_hi_user","","",null,null],[17,"DW_LNCT_path","","",null,null],[17,"DW_LNCT_directory_index","","",null,null],[17,"DW_LNCT_timestamp","","",null,null],[17,"DW_LNCT_size","","",null,null],[17,"DW_LNCT_MD5","","",null,null],[17,"DW_LNCT_lo_user","","",null,null],[17,"DW_LNCT_hi_user","","",null,null],[17,"DW_MACRO_define","","",null,null],[17,"DW_MACRO_undef","","",null,null],[17,"DW_MACRO_start_file","","",null,null],[17,"DW_MACRO_end_file","","",null,null],[17,"DW_MACRO_define_strp","","",null,null],[17,"DW_MACRO_undef_strp","","",null,null],[17,"DW_MACRO_import","","",null,null],[17,"DW_MACRO_define_sup","","",null,null],[17,"DW_MACRO_undef_sup","","",null,null],[17,"DW_MACRO_import_sup","","",null,null],[17,"DW_MACRO_define_strx","","",null,null],[17,"DW_MACRO_undef_strx","","",null,null],[17,"DW_MACRO_lo_user","","",null,null],[17,"DW_MACRO_hi_user","","",null,null],[17,"DW_RLE_end_of_list","","",null,null],[17,"DW_RLE_base_addressx","","",null,null],[17,"DW_RLE_startx_endx","","",null,null],[17,"DW_RLE_startx_length","","",null,null],[17,"DW_RLE_offset_pair","","",null,null],[17,"DW_RLE_base_address","","",null,null],[17,"DW_RLE_start_end","","",null,null],[17,"DW_RLE_start_length","","",null,null],[17,"DW_OP_addr","","",null,null],[17,"DW_OP_deref","","",null,null],[17,"DW_OP_const1u","","",null,null],[17,"DW_OP_const1s","","",null,null],[17,"DW_OP_const2u","","",null,null],[17,"DW_OP_const2s","","",null,null],[17,"DW_OP_const4u","","",null,null],[17,"DW_OP_const4s","","",null,null],[17,"DW_OP_const8u","","",null,null],[17,"DW_OP_const8s","","",null,null],[17,"DW_OP_constu","","",null,null],[17,"DW_OP_consts","","",null,null],[17,"DW_OP_dup","","",null,null],[17,"DW_OP_drop","","",null,null],[17,"DW_OP_over","","",null,null],[17,"DW_OP_pick","","",null,null],[17,"DW_OP_swap","","",null,null],[17,"DW_OP_rot","","",null,null],[17,"DW_OP_xderef","","",null,null],[17,"DW_OP_abs","","",null,null],[17,"DW_OP_and","","",null,null],[17,"DW_OP_div","","",null,null],[17,"DW_OP_minus","","",null,null],[17,"DW_OP_mod","","",null,null],[17,"DW_OP_mul","","",null,null],[17,"DW_OP_neg","","",null,null],[17,"DW_OP_not","","",null,null],[17,"DW_OP_or","","",null,null],[17,"DW_OP_plus","","",null,null],[17,"DW_OP_plus_uconst","","",null,null],[17,"DW_OP_shl","","",null,null],[17,"DW_OP_shr","","",null,null],[17,"DW_OP_shra","","",null,null],[17,"DW_OP_xor","","",null,null],[17,"DW_OP_bra","","",null,null],[17,"DW_OP_eq","","",null,null],[17,"DW_OP_ge","","",null,null],[17,"DW_OP_gt","","",null,null],[17,"DW_OP_le","","",null,null],[17,"DW_OP_lt","","",null,null],[17,"DW_OP_ne","","",null,null],[17,"DW_OP_skip","","",null,null],[17,"DW_OP_lit0","","",null,null],[17,"DW_OP_lit1","","",null,null],[17,"DW_OP_lit2","","",null,null],[17,"DW_OP_lit3","","",null,null],[17,"DW_OP_lit4","","",null,null],[17,"DW_OP_lit5","","",null,null],[17,"DW_OP_lit6","","",null,null],[17,"DW_OP_lit7","","",null,null],[17,"DW_OP_lit8","","",null,null],[17,"DW_OP_lit9","","",null,null],[17,"DW_OP_lit10","","",null,null],[17,"DW_OP_lit11","","",null,null],[17,"DW_OP_lit12","","",null,null],[17,"DW_OP_lit13","","",null,null],[17,"DW_OP_lit14","","",null,null],[17,"DW_OP_lit15","","",null,null],[17,"DW_OP_lit16","","",null,null],[17,"DW_OP_lit17","","",null,null],[17,"DW_OP_lit18","","",null,null],[17,"DW_OP_lit19","","",null,null],[17,"DW_OP_lit20","","",null,null],[17,"DW_OP_lit21","","",null,null],[17,"DW_OP_lit22","","",null,null],[17,"DW_OP_lit23","","",null,null],[17,"DW_OP_lit24","","",null,null],[17,"DW_OP_lit25","","",null,null],[17,"DW_OP_lit26","","",null,null],[17,"DW_OP_lit27","","",null,null],[17,"DW_OP_lit28","","",null,null],[17,"DW_OP_lit29","","",null,null],[17,"DW_OP_lit30","","",null,null],[17,"DW_OP_lit31","","",null,null],[17,"DW_OP_reg0","","",null,null],[17,"DW_OP_reg1","","",null,null],[17,"DW_OP_reg2","","",null,null],[17,"DW_OP_reg3","","",null,null],[17,"DW_OP_reg4","","",null,null],[17,"DW_OP_reg5","","",null,null],[17,"DW_OP_reg6","","",null,null],[17,"DW_OP_reg7","","",null,null],[17,"DW_OP_reg8","","",null,null],[17,"DW_OP_reg9","","",null,null],[17,"DW_OP_reg10","","",null,null],[17,"DW_OP_reg11","","",null,null],[17,"DW_OP_reg12","","",null,null],[17,"DW_OP_reg13","","",null,null],[17,"DW_OP_reg14","","",null,null],[17,"DW_OP_reg15","","",null,null],[17,"DW_OP_reg16","","",null,null],[17,"DW_OP_reg17","","",null,null],[17,"DW_OP_reg18","","",null,null],[17,"DW_OP_reg19","","",null,null],[17,"DW_OP_reg20","","",null,null],[17,"DW_OP_reg21","","",null,null],[17,"DW_OP_reg22","","",null,null],[17,"DW_OP_reg23","","",null,null],[17,"DW_OP_reg24","","",null,null],[17,"DW_OP_reg25","","",null,null],[17,"DW_OP_reg26","","",null,null],[17,"DW_OP_reg27","","",null,null],[17,"DW_OP_reg28","","",null,null],[17,"DW_OP_reg29","","",null,null],[17,"DW_OP_reg30","","",null,null],[17,"DW_OP_reg31","","",null,null],[17,"DW_OP_breg0","","",null,null],[17,"DW_OP_breg1","","",null,null],[17,"DW_OP_breg2","","",null,null],[17,"DW_OP_breg3","","",null,null],[17,"DW_OP_breg4","","",null,null],[17,"DW_OP_breg5","","",null,null],[17,"DW_OP_breg6","","",null,null],[17,"DW_OP_breg7","","",null,null],[17,"DW_OP_breg8","","",null,null],[17,"DW_OP_breg9","","",null,null],[17,"DW_OP_breg10","","",null,null],[17,"DW_OP_breg11","","",null,null],[17,"DW_OP_breg12","","",null,null],[17,"DW_OP_breg13","","",null,null],[17,"DW_OP_breg14","","",null,null],[17,"DW_OP_breg15","","",null,null],[17,"DW_OP_breg16","","",null,null],[17,"DW_OP_breg17","","",null,null],[17,"DW_OP_breg18","","",null,null],[17,"DW_OP_breg19","","",null,null],[17,"DW_OP_breg20","","",null,null],[17,"DW_OP_breg21","","",null,null],[17,"DW_OP_breg22","","",null,null],[17,"DW_OP_breg23","","",null,null],[17,"DW_OP_breg24","","",null,null],[17,"DW_OP_breg25","","",null,null],[17,"DW_OP_breg26","","",null,null],[17,"DW_OP_breg27","","",null,null],[17,"DW_OP_breg28","","",null,null],[17,"DW_OP_breg29","","",null,null],[17,"DW_OP_breg30","","",null,null],[17,"DW_OP_breg31","","",null,null],[17,"DW_OP_regx","","",null,null],[17,"DW_OP_fbreg","","",null,null],[17,"DW_OP_bregx","","",null,null],[17,"DW_OP_piece","","",null,null],[17,"DW_OP_deref_size","","",null,null],[17,"DW_OP_xderef_size","","",null,null],[17,"DW_OP_nop","","",null,null],[17,"DW_OP_push_object_address","","",null,null],[17,"DW_OP_call2","","",null,null],[17,"DW_OP_call4","","",null,null],[17,"DW_OP_call_ref","","",null,null],[17,"DW_OP_form_tls_address","","",null,null],[17,"DW_OP_call_frame_cfa","","",null,null],[17,"DW_OP_bit_piece","","",null,null],[17,"DW_OP_implicit_value","","",null,null],[17,"DW_OP_stack_value","","",null,null],[17,"DW_OP_implicit_pointer","","",null,null],[17,"DW_OP_addrx","","",null,null],[17,"DW_OP_constx","","",null,null],[17,"DW_OP_entry_value","","",null,null],[17,"DW_OP_const_type","","",null,null],[17,"DW_OP_regval_type","","",null,null],[17,"DW_OP_deref_type","","",null,null],[17,"DW_OP_xderef_type","","",null,null],[17,"DW_OP_convert","","",null,null],[17,"DW_OP_reinterpret","","",null,null],[17,"DW_OP_GNU_push_tls_address","","",null,null],[17,"DW_OP_GNU_implicit_pointer","","",null,null],[17,"DW_OP_GNU_entry_value","","",null,null],[17,"DW_OP_GNU_const_type","","",null,null],[17,"DW_OP_GNU_regval_type","","",null,null],[17,"DW_OP_GNU_deref_type","","",null,null],[17,"DW_OP_GNU_convert","","",null,null],[17,"DW_OP_GNU_reinterpret","","",null,null],[17,"DW_OP_GNU_parameter_ref","","",null,null],[17,"DW_EH_PE_uleb128","","",null,null],[17,"DW_EH_PE_udata2","","",null,null],[17,"DW_EH_PE_udata4","","",null,null],[17,"DW_EH_PE_udata8","","",null,null],[17,"DW_EH_PE_sleb128","","",null,null],[17,"DW_EH_PE_sdata2","","",null,null],[17,"DW_EH_PE_sdata4","","",null,null],[17,"DW_EH_PE_sdata8","","",null,null],[17,"DW_EH_PE_pcrel","","",null,null],[17,"DW_EH_PE_textrel","","",null,null],[17,"DW_EH_PE_datarel","","",null,null],[17,"DW_EH_PE_funcrel","","",null,null],[17,"DW_EH_PE_aligned","","",null,null],[17,"DW_EH_PE_indirect","","",null,null],[17,"DW_EH_PE_absptr","","",null,null],[17,"DW_EH_PE_omit","","",null,null],[11,"static_string","","",31,[[["self"]],[["option",["str"]],["str"]]]],[11,"static_string","","",32,[[["self"]],[["option",["str"]],["str"]]]],[11,"static_string","","",33,[[["self"]],[["option",["str"]],["str"]]]],[11,"static_string","","",34,[[["self"]],[["option",["str"]],["str"]]]],[11,"static_string","","",35,[[["self"]],[["option",["str"]],["str"]]]],[11,"static_string","","",36,[[["self"]],[["option",["str"]],["str"]]]],[11,"static_string","","",37,[[["self"]],[["option",["str"]],["str"]]]],[11,"static_string","","",38,[[["self"]],[["option",["str"]],["str"]]]],[11,"static_string","","",39,[[["self"]],[["option",["str"]],["str"]]]],[11,"static_string","","",40,[[["self"]],[["option",["str"]],["str"]]]],[11,"static_string","","",41,[[["self"]],[["option",["str"]],["str"]]]],[11,"static_string","","",42,[[["self"]],[["option",["str"]],["str"]]]],[11,"static_string","","",43,[[["self"]],[["option",["str"]],["str"]]]],[11,"static_string","","",44,[[["self"]],[["option",["str"]],["str"]]]],[11,"default_lower_bound","","Get the default DW_AT_lower_bound for this language.",44,[[],[["option",["usize"]],["usize"]]]],[11,"static_string","","",45,[[["self"]],[["option",["str"]],["str"]]]],[11,"static_string","","",46,[[["self"]],[["option",["str"]],["str"]]]],[11,"static_string","","",47,[[["self"]],[["option",["str"]],["str"]]]],[11,"static_string","","",48,[[["self"]],[["option",["str"]],["str"]]]],[11,"static_string","","",49,[[["self"]],[["option",["str"]],["str"]]]],[11,"static_string","","",50,[[["self"]],[["option",["str"]],["str"]]]],[11,"static_string","","",51,[[["self"]],[["option",["str"]],["str"]]]],[11,"static_string","","",52,[[["self"]],[["option",["str"]],["str"]]]],[11,"static_string","","",53,[[["self"]],[["option",["str"]],["str"]]]],[11,"static_string","","",54,[[["self"]],[["option",["str"]],["str"]]]],[11,"static_string","","",55,[[["self"]],[["option",["str"]],["str"]]]],[11,"static_string","","",56,[[["self"]],[["option",["str"]],["str"]]]],[11,"static_string","","",57,[[["self"]],[["option",["str"]],["str"]]]],[11,"static_string","","",58,[[["self"]],[["option",["str"]],["str"]]]],[11,"static_string","","",59,[[["self"]],[["option",["str"]],["str"]]]],[11,"format","","Get the pointer encoding's format.",59,[[],["dwehpe"]]],[11,"application","","Get the pointer encoding's application.",59,[[],["dwehpe"]]],[11,"is_absent","","Is this encoding the absent pointer encoding?",59,[[],["bool"]]],[11,"is_indirect","","Is this coding indirect? If so, its encoded value is the…",59,[[],["bool"]]],[11,"is_valid_encoding","","Is this a known, valid pointer encoding?",59,[[],["bool"]]],[0,"leb128","gimli","Read and write DWARF's \"Little Endian Base 128\" (LEB128)…",null,null],[0,"read","gimli::leb128","A module for reading signed and unsigned integers that…",null,null],[5,"unsigned","gimli::leb128::read","Read an unsigned LEB128 number from the given `Reader` and…",null,[[["r"]],[["result",["u64"]],["u64"]]]],[5,"u16","","Read an LEB128 u16 from the given `Reader` and return it…",null,[[["r"]],[["u16"],["result",["u16"]]]]],[5,"signed","","Read a signed LEB128 number from the given `Reader` and…",null,[[["r"]],[["result",["i64"]],["i64"]]]],[0,"read","gimli","Read DWARF debugging information.",null,null],[3,"DebugAddr","gimli::read","The raw contents of the `.debug_addr` section.",null,null],[3,"DebugFrame","","`DebugFrame` contains the `.debug_frame` section's frame…",null,null],[3,"EhFrameHdr","","`EhFrameHdr` contains the information about the…",null,null],[3,"ParsedEhFrameHdr","","`ParsedEhFrameHdr` contains the parsed information from…",null,null],[3,"EhHdrTable","","The CFI binary search table that is an optional part of…",null,null],[3,"EhFrame","","`EhFrame` contains the frame unwinding information needed…",null,null],[3,"BaseAddresses","","Optional base addresses for the relative `DW_EH_PE_*`…",null,null],[12,"eh_frame_hdr","","The base addresses to use for pointers in the…",60,null],[12,"eh_frame","","The base addresses to use for pointers in the `.eh_frame`…",60,null],[3,"SectionBaseAddresses","","Optional base addresses for the relative `DW_EH_PE_*`…",null,null],[12,"section","","The address of the section containing the pointer.",61,null],[12,"text","","The base address for text relative pointers. This is…",61,null],[12,"data","","The base address for data relative pointers.",61,null],[3,"CfiEntriesIter","","An iterator over CIE and FDE entries in a `.debug_frame`…",null,null],[3,"Augmentation","","We support the z-style augmentation [defined by…",null,null],[3,"CommonInformationEntry","","A Common Information Entry holds information that is…",null,null],[3,"PartialFrameDescriptionEntry","","A partially parsed `FrameDescriptionEntry`.",null,null],[3,"FrameDescriptionEntry","","A `FrameDescriptionEntry` is a set of CFA instructions for…",null,null],[3,"UninitializedUnwindContext","","Common context needed when evaluating the call frame…",null,null],[3,"UnwindContext","","An unwinding context.",null,null],[3,"UnwindTable","","The `UnwindTable` iteratively evaluates a…",null,null],[3,"RegisterRuleIter","","An unordered iterator for register rules.",null,null],[3,"UnwindTableRow","","A row in the virtual unwind table that describes how to…",null,null],[3,"CallFrameInstructionIter","","A lazy iterator parsing call frame instructions.",null,null],[3,"Dwarf","","All of the commonly used DWARF sections, and other common…",null,null],[12,"debug_abbrev","","The `.debug_abbrev` section.",62,null],[12,"debug_addr","","The `.debug_addr` section.",62,null],[12,"debug_info","","The `.debug_info` section.",62,null],[12,"debug_line","","The `.debug_line` section.",62,null],[12,"debug_line_str","","The `.debug_line_str` section.",62,null],[12,"debug_str","","The `.debug_str` section.",62,null],[12,"debug_str_offsets","","The `.debug_str_offsets` section.",62,null],[12,"debug_str_sup","","The `.debug_str` section for a supplementary object file.",62,null],[12,"debug_types","","The `.debug_types` section.",62,null],[12,"locations","","The location lists in the `.debug_loc` and…",62,null],[12,"ranges","","The range lists in the `.debug_ranges` and…",62,null],[3,"Unit","","All of the commonly used information for a unit in the…",null,null],[12,"offset","","The section offset of the unit.",63,null],[12,"header","","The header of the unit.",63,null],[12,"abbreviations","","The parsed abbreviations for the unit.",63,null],[12,"name","","The `DW_AT_name` attribute of the unit.",63,null],[12,"comp_dir","","The `DW_AT_comp_dir` attribute of the unit.",63,null],[12,"low_pc","","The `DW_AT_low_pc` attribute of the unit. Defaults to 0.",63,null],[12,"str_offsets_base","","The `DW_AT_str_offsets_base` attribute of the unit.…",63,null],[12,"addr_base","","The `DW_AT_addr_base` attribute of the unit. Defaults to 0.",63,null],[12,"loclists_base","","The `DW_AT_loclists_base` attribute of the unit. Defaults…",63,null],[12,"rnglists_base","","The `DW_AT_rnglists_base` attribute of the unit. Defaults…",63,null],[12,"line_program","","The line number program of the unit.",63,null],[3,"RangeIter","","An iterator for the address ranges of a…",null,null],[3,"EndianSlice","","A `&[u8]` slice with endianity metadata.",null,null],[3,"ReaderOffsetId","","An identifier for an offset within a section reader.",null,null],[12,"0","","",64,null],[3,"DebugAbbrev","","The `DebugAbbrev` struct represents the abbreviations…",null,null],[3,"Abbreviations","","A set of type abbreviations.",null,null],[3,"Abbreviation","","An abbreviation describes the shape of a…",null,null],[3,"AttributeSpecification","","The description of an attribute in an abbreviated type. It…",null,null],[3,"ArangeEntry","","A single parsed arange.",null,null],[3,"DebugAranges","","The `DebugAranges` struct represents the DWARF address…",null,null],[3,"ArangeEntryIter","","An iterator over the aranges from a `.debug_aranges`…",null,null],[3,"DebugLine","","The `DebugLine` struct contains the source location to…",null,null],[3,"LineRows","","Executes a `LineProgram` to iterate over the rows in the…",null,null],[3,"LineInstructions","","An iterator yielding parsed instructions.",null,null],[3,"LineRow","","A row in the line number program's resulting matrix.",null,null],[3,"LineSequence","","A sequence within a line number program. A sequence, as…",null,null],[12,"start","","The first address that is covered by this sequence within…",65,null],[12,"end","","The first address that is not covered by this sequence…",65,null],[3,"LineProgramHeader","","A header for a line number program in the `.debug_line`…",null,null],[3,"IncompleteLineProgram","","A line number program that has not been run to completion.",null,null],[3,"CompleteLineProgram","","A line number program that has previously been run to…",null,null],[3,"FileEntry","","An entry in the `LineProgramHeader`'s `file_names` set.",null,null],[3,"FileEntryFormat","","The format of a component of an include directory or file…",null,null],[12,"content_type","","The type of information that is represented by the…",66,null],[12,"form","","The encoding form of the component value.",66,null],[3,"DebugLoc","","The raw contents of the `.debug_loc` section.",null,null],[3,"DebugLocLists","","The `DebugLocLists` struct represents the DWARF data found…",null,null],[3,"LocationLists","","The DWARF data found in `.debug_loc` and `.debug_loclists`…",null,null],[3,"RawLocListIter","","A raw iterator over a location list.",null,null],[3,"LocListIter","","An iterator over a location list.",null,null],[3,"LocationListEntry","","A location list entry from the `.debug_loc` or…",null,null],[12,"range","","The address range that this location is valid for.",67,null],[12,"data","","The data containing a single location description.",67,null],[3,"Piece","","The description of a single piece of the result of a DWARF…",null,null],[12,"size_in_bits","","If given, the size of the piece in bits. If `None`, there…",68,null],[12,"bit_offset","","If given, the bit offset of the piece within the location.…",68,null],[12,"location","","Where this piece is to be found.",68,null],[3,"Expression","","The bytecode for a DWARF expression or location description.",null,null],[12,"0","","",69,null],[3,"OperationIter","","An iterator for the operations in an expression.",null,null],[3,"Evaluation","","A DWARF expression evaluator.",null,null],[3,"PubNamesEntry","","A single parsed pubname.",null,null],[3,"DebugPubNames","","The `DebugPubNames` struct represents the DWARF public…",null,null],[3,"PubNamesEntryIter","","An iterator over the pubnames from a `.debug_pubnames`…",null,null],[3,"PubTypesEntry","","A single parsed pubtype.",null,null],[3,"DebugPubTypes","","The `DebugPubTypes` struct represents the DWARF public…",null,null],[3,"PubTypesEntryIter","","An iterator over the pubtypes from a `.debug_pubtypes`…",null,null],[3,"DebugRanges","","The raw contents of the `.debug_ranges` section.",null,null],[3,"DebugRngLists","","The `DebugRngLists` struct represents the contents of the…",null,null],[3,"RangeLists","","The DWARF data found in `.debug_ranges` and…",null,null],[3,"RawRngListIter","","A raw iterator over an address range list.",null,null],[3,"RngListIter","","An iterator over an address range list.",null,null],[3,"Range","","An address range from the `.debug_ranges` or…",null,null],[12,"begin","","The beginning address of the range.",70,null],[12,"end","","The first address past the end of the range.",70,null],[3,"DebugStr","","The `DebugStr` struct represents the DWARF strings found…",null,null],[3,"DebugStrOffsets","","The raw contents of the `.debug_str_offsets` section.",null,null],[3,"DebugLineStr","","The `DebugLineStr` struct represents the DWARF strings…",null,null],[3,"UnitOffset","","An offset into the current compilation or type unit.",null,null],[12,"0","","",71,null],[3,"DebugInfo","","The `DebugInfo` struct represents the DWARF debugging…",null,null],[3,"CompilationUnitHeadersIter","","An iterator over the compilation- and partial-units of a…",null,null],[3,"CompilationUnitHeader","","The header of a compilation unit's debugging information.",null,null],[3,"UnitHeader","","The common fields for the headers of compilation units and…",null,null],[3,"DebuggingInformationEntry","","A Debugging Information Entry (DIE).",null,null],[3,"Attribute","","An attribute in a `DebuggingInformationEntry`, consisting…",null,null],[3,"AttrsIter","","An iterator over a particular entry's attributes.",null,null],[3,"EntriesRaw","","A raw reader of the data that defines the Debugging…",null,null],[3,"EntriesCursor","","A cursor into the Debugging Information Entries tree for a…",null,null],[3,"EntriesTree","","The state information for a tree view of the Debugging…",null,null],[3,"EntriesTreeNode","","A node in the Debugging Information Entry tree.",null,null],[3,"EntriesTreeIter","","An iterator that allows traversal of the children of an…",null,null],[3,"DebugTypes","","The `DebugTypes` struct represents the DWARF type…",null,null],[3,"TypeUnitHeadersIter","","An iterator over the type-units of this `.debug_types`…",null,null],[3,"TypeUnitHeader","","The header of a type unit's debugging information.",null,null],[4,"CieOrFde","","Either a `CommonInformationEntry` (CIE) or a…",null,null],[13,"Cie","","This CFI entry is a `CommonInformationEntry`.",72,null],[13,"Fde","","This CFI entry is a `FrameDescriptionEntry`, however fully…",72,null],[4,"CfaRule","","The canonical frame address (CFA) recovery rules.",null,null],[13,"RegisterAndOffset","","The CFA is given offset from the given register's value.",73,null],[12,"register","gimli::read::CfaRule","The register containing the base value.",74,null],[12,"offset","","The offset from the register's base value.",74,null],[13,"Expression","gimli::read","The CFA is obtained by evaluating this `Reader` as a DWARF…",73,null],[4,"RegisterRule","","An entry in the abstract CFI table that describes how to…",null,null],[13,"Undefined","","A register that has this rule has no recoverable value in…",75,null],[13,"SameValue","","This register has not been modified from the previous…",75,null],[13,"Offset","","\"The previous value of this register is saved at the…",75,null],[13,"ValOffset","","\"The previous value of this register is the value CFA+N…",75,null],[13,"Register","","\"The previous value of this register is stored in another…",75,null],[13,"Expression","","\"The previous value of this register is located at the…",75,null],[13,"ValExpression","","\"The previous value of this register is the value produced…",75,null],[13,"Architectural","","\"The rule is defined externally to this specification by…",75,null],[4,"CallFrameInstruction","","A parsed call frame instruction.",null,null],[13,"SetLoc","","",76,null],[12,"address","gimli::read::CallFrameInstruction","The target address.",77,null],[13,"AdvanceLoc","gimli::read","The `AdvanceLoc` instruction is used for all of…",76,null],[12,"delta","gimli::read::CallFrameInstruction","The delta to be added to the current address.",78,null],[13,"DefCfa","gimli::read","",76,null],[12,"register","gimli::read::CallFrameInstruction","The target register's number.",79,null],[12,"offset","","The non-factored offset.",79,null],[13,"DefCfaSf","gimli::read","",76,null],[12,"register","gimli::read::CallFrameInstruction","The target register's number.",80,null],[12,"factored_offset","","The factored offset.",80,null],[13,"DefCfaRegister","gimli::read","",76,null],[12,"register","gimli::read::CallFrameInstruction","The target register's number.",81,null],[13,"DefCfaOffset","gimli::read","",76,null],[12,"offset","gimli::read::CallFrameInstruction","The non-factored offset.",82,null],[13,"DefCfaOffsetSf","gimli::read","",76,null],[12,"factored_offset","gimli::read::CallFrameInstruction","The factored offset.",83,null],[13,"DefCfaExpression","gimli::read","",76,null],[12,"expression","gimli::read::CallFrameInstruction","The DWARF expression.",84,null],[13,"Undefined","gimli::read","",76,null],[12,"register","gimli::read::CallFrameInstruction","The target register's number.",85,null],[13,"SameValue","gimli::read","",76,null],[12,"register","gimli::read::CallFrameInstruction","The target register's number.",86,null],[13,"Offset","gimli::read","The `Offset` instruction represents both `DW_CFA_offset`…",76,null],[12,"register","gimli::read::CallFrameInstruction","The target register's number.",87,null],[12,"factored_offset","","The factored offset.",87,null],[13,"OffsetExtendedSf","gimli::read","",76,null],[12,"register","gimli::read::CallFrameInstruction","The target register's number.",88,null],[12,"factored_offset","","The factored offset.",88,null],[13,"ValOffset","gimli::read","",76,null],[12,"register","gimli::read::CallFrameInstruction","The target register's number.",89,null],[12,"factored_offset","","The factored offset.",89,null],[13,"ValOffsetSf","gimli::read","",76,null],[12,"register","gimli::read::CallFrameInstruction","The target register's number.",90,null],[12,"factored_offset","","The factored offset.",90,null],[13,"Register","gimli::read","",76,null],[12,"dest_register","gimli::read::CallFrameInstruction","The number of the register whose rule is being changed.",91,null],[12,"src_register","","The number of the register where the other register's…",91,null],[13,"Expression","gimli::read","",76,null],[12,"register","gimli::read::CallFrameInstruction","The target register's number.",92,null],[12,"expression","","The DWARF expression.",92,null],[13,"ValExpression","gimli::read","",76,null],[12,"register","gimli::read::CallFrameInstruction","The target register's number.",93,null],[12,"expression","","The DWARF expression.",93,null],[13,"Restore","gimli::read","The `Restore` instruction represents both `DW_CFA_restore`…",76,null],[12,"register","gimli::read::CallFrameInstruction","The register to be reset.",94,null],[13,"RememberState","gimli::read","",76,null],[13,"RestoreState","","",76,null],[13,"ArgsSize","","DW_CFA_GNU_args_size > > GNU Extension > > The…",76,null],[12,"size","gimli::read::CallFrameInstruction","The size of the arguments which have been pushed onto the…",95,null],[13,"Nop","gimli::read","",76,null],[4,"Pointer","","A decoded pointer.",null,null],[13,"Direct","","This value is the decoded pointer value.",96,null],[13,"Indirect","","This value is not the pointer value, but points to the…",96,null],[4,"LineInstruction","","A parsed line number program instruction.",null,null],[13,"Special","","6.2.5.1 Special Opcodes > > Each ubyte special opcode has…",97,null],[13,"Copy","","\"[`LineInstruction::Copy`] appends a row to the matrix…",97,null],[13,"AdvancePc","","\"The DW_LNS_advance_pc opcode takes a single unsigned…",97,null],[13,"AdvanceLine","","\"The DW_LNS_advance_line opcode takes a single signed…",97,null],[13,"SetFile","","\"The DW_LNS_set_file opcode takes a single unsigned LEB128…",97,null],[13,"SetColumn","","\"The DW_LNS_set_column opcode takes a single unsigned…",97,null],[13,"NegateStatement","","\"The DW_LNS_negate_stmt opcode takes no operands. It sets…",97,null],[13,"SetBasicBlock","","\"The DW_LNS_set_basic_block opcode takes no operands. It…",97,null],[13,"ConstAddPc","","The DW_LNS_const_add_pc opcode takes no operands. It…",97,null],[13,"FixedAddPc","","The DW_LNS_fixed_advance_pc opcode takes a single uhalf…",97,null],[13,"SetPrologueEnd","","\"[`LineInstruction::SetPrologueEnd`] sets the prologue_end…",97,null],[13,"SetEpilogueBegin","","\"[`LineInstruction::SetEpilogueBegin`] sets the…",97,null],[13,"SetIsa","","\"The DW_LNS_set_isa opcode takes a single unsigned LEB128…",97,null],[13,"UnknownStandard0","","An unknown standard opcode with zero operands.",97,null],[13,"UnknownStandard1","","An unknown standard opcode with one operand.",97,null],[13,"UnknownStandardN","","An unknown standard opcode with multiple operands.",97,null],[13,"EndSequence","","[`LineInstruction::EndSequence`] sets the end_sequence…",97,null],[13,"SetAddress","","The DW_LNE_set_address opcode takes a single relocatable…",97,null],[13,"DefineFile","","Defines a new source file in the line number program and…",97,null],[13,"SetDiscriminator","","\"The DW_LNE_set_discriminator opcode takes a single…",97,null],[13,"UnknownExtended","","An unknown extended opcode and the slice of its unparsed…",97,null],[4,"ColumnType","","The type of column that a row is referring to.",null,null],[13,"LeftEdge","","The `LeftEdge` means that the statement begins at the…",98,null],[13,"Column","","A column number, whose range begins at 1.",98,null],[4,"RawLocListEntry","","A raw entry in .debug_loclists.",null,null],[13,"AddressOrOffsetPair","","A location from DWARF version <= 4.",99,null],[12,"begin","gimli::read::RawLocListEntry","Start of range. May be an address or an offset.",100,null],[12,"end","","End of range. May be an address or an offset.",100,null],[12,"data","","expression",100,null],[13,"BaseAddress","gimli::read","DW_LLE_base_address",99,null],[12,"addr","gimli::read::RawLocListEntry","base address",101,null],[13,"BaseAddressx","gimli::read","DW_LLE_base_addressx",99,null],[12,"addr","gimli::read::RawLocListEntry","base address",102,null],[13,"StartxEndx","gimli::read","DW_LLE_startx_endx",99,null],[12,"begin","gimli::read::RawLocListEntry","start of range",103,null],[12,"end","","end of range",103,null],[12,"data","","expression",103,null],[13,"StartxLength","gimli::read","DW_LLE_startx_length",99,null],[12,"begin","gimli::read::RawLocListEntry","start of range",104,null],[12,"length","","length of range",104,null],[12,"data","","expression",104,null],[13,"OffsetPair","gimli::read","DW_LLE_offset_pair",99,null],[12,"begin","gimli::read::RawLocListEntry","start of range",105,null],[12,"end","","end of range",105,null],[12,"data","","expression",105,null],[13,"DefaultLocation","gimli::read","DW_LLE_default_location",99,null],[12,"data","gimli::read::RawLocListEntry","expression",106,null],[13,"StartEnd","gimli::read","DW_LLE_start_end",99,null],[12,"begin","gimli::read::RawLocListEntry","start of range",107,null],[12,"end","","end of range",107,null],[12,"data","","expression",107,null],[13,"StartLength","gimli::read","DW_LLE_start_length",99,null],[12,"begin","gimli::read::RawLocListEntry","start of range",108,null],[12,"length","","length of range",108,null],[12,"data","","expression",108,null],[4,"DieReference","gimli::read","A reference to a DIE, either relative to the current CU or…",null,null],[13,"UnitRef","","A CU-relative reference.",109,null],[13,"DebugInfoRef","","A section-relative reference.",109,null],[4,"Operation","","A single decoded DWARF expression operation.",null,null],[13,"Deref","","Dereference the topmost value of the stack.",110,null],[12,"base_type","gimli::read::Operation","The DIE of the base type or 0 to indicate the generic type",111,null],[12,"size","","The size of the data to dereference.",111,null],[12,"space","","True if the dereference operation takes an address space…",111,null],[13,"Drop","gimli::read","Drop an item from the stack.",110,null],[13,"Pick","","Pick an item from the stack and push it on top of the…",110,null],[12,"index","gimli::read::Operation","The index, from the top of the stack, of the item to copy.",112,null],[13,"Swap","gimli::read","Swap the top two stack items.",110,null],[13,"Rot","","Rotate the top three stack items.",110,null],[13,"Abs","","Take the absolute value of the top of the stack.",110,null],[13,"And","","Bitwise `and` of the top two values on the stack.",110,null],[13,"Div","","Divide the top two values on the stack.",110,null],[13,"Minus","","Subtract the top two values on the stack.",110,null],[13,"Mod","","Modulus of the top two values on the stack.",110,null],[13,"Mul","","Multiply the top two values on the stack.",110,null],[13,"Neg","","Negate the top of the stack.",110,null],[13,"Not","","Bitwise `not` of the top of the stack.",110,null],[13,"Or","","Bitwise `or` of the top two values on the stack.",110,null],[13,"Plus","","Add the top two values on the stack.",110,null],[13,"PlusConstant","","Add a constant to the topmost value on the stack.",110,null],[12,"value","gimli::read::Operation","The value to add.",113,null],[13,"Shl","gimli::read","Logical left shift of the 2nd value on the stack by the…",110,null],[13,"Shr","","Right shift of the 2nd value on the stack by the number of…",110,null],[13,"Shra","","Arithmetic left shift of the 2nd value on the stack by the…",110,null],[13,"Xor","","Bitwise `xor` of the top two values on the stack.",110,null],[13,"Bra","","Branch to the target location if the top of stack is…",110,null],[12,"target","gimli::read::Operation","The relative offset to the target bytecode.",114,null],[13,"Eq","gimli::read","Compare the top two stack values for equality.",110,null],[13,"Ge","","Compare the top two stack values using `>=`.",110,null],[13,"Gt","","Compare the top two stack values using `>`.",110,null],[13,"Le","","Compare the top two stack values using `<=`.",110,null],[13,"Lt","","Compare the top two stack values using `<`.",110,null],[13,"Ne","","Compare the top two stack values using `!=`.",110,null],[13,"Skip","","Unconditional branch to the target location.",110,null],[12,"target","gimli::read::Operation","The relative offset to the target bytecode.",115,null],[13,"UnsignedConstant","gimli::read","Push an unsigned constant value on the stack. This handles…",110,null],[12,"value","gimli::read::Operation","The value to push.",116,null],[13,"SignedConstant","gimli::read","Push a signed constant value on the stack. This handles…",110,null],[12,"value","gimli::read::Operation","The value to push.",117,null],[13,"Register","gimli::read","Indicate that this piece's location is in the given…",110,null],[12,"register","gimli::read::Operation","The register number.",118,null],[13,"RegisterOffset","gimli::read","Find the value of the given register, add the offset, and…",110,null],[12,"register","gimli::read::Operation","The register number.",119,null],[12,"offset","","The offset to add.",119,null],[12,"base_type","","The DIE of the base type or 0 to indicate the generic type",119,null],[13,"FrameOffset","gimli::read","Compute the frame base (using `DW_AT_frame_base`), add the…",110,null],[12,"offset","gimli::read::Operation","The offset to add.",120,null],[13,"Nop","gimli::read","No operation.",110,null],[13,"PushObjectAddress","","Push the object address on the stack.",110,null],[13,"Call","","Evaluate a DWARF expression as a subroutine. The…",110,null],[12,"offset","gimli::read::Operation","The DIE to use.",121,null],[13,"TLS","gimli::read","Compute the address of a thread-local variable and push it…",110,null],[13,"CallFrameCFA","","Compute the call frame CFA and push it on the stack.",110,null],[13,"Piece","","Terminate a piece.",110,null],[12,"size_in_bits","gimli::read::Operation","The size of this piece in bits.",122,null],[12,"bit_offset","","The bit offset of this piece. If `None`, then this piece…",122,null],[13,"ImplicitValue","gimli::read","Represents `DW_OP_implicit_value`. The object has no…",110,null],[12,"data","gimli::read::Operation","The implicit value to use.",123,null],[13,"StackValue","gimli::read","Represents `DW_OP_stack_value`. The object has no…",110,null],[13,"ImplicitPointer","","Represents `DW_OP_implicit_pointer`. The object is a…",110,null],[12,"value","gimli::read::Operation","The `.debug_info` offset of the value that this is an…",124,null],[12,"byte_offset","","The byte offset into the value that the implicit pointer…",124,null],[13,"EntryValue","gimli::read","Represents `DW_OP_entry_value`. Evaluate an expression at…",110,null],[12,"expression","gimli::read::Operation","The expression to be evaluated.",125,null],[13,"ParameterRef","gimli::read","Represents `DW_OP_GNU_parameter_ref`. This represents a…",110,null],[12,"offset","gimli::read::Operation","The DIE to use.",126,null],[13,"Address","gimli::read","Represents `DW_OP_addr`. Relocate the address if needed,…",110,null],[12,"address","gimli::read::Operation","The offset to add.",127,null],[13,"AddressIndex","gimli::read","Represents `DW_OP_addrx`. Read the address at the given…",110,null],[12,"index","gimli::read::Operation","The index of the address in `.debug_addr`.",128,null],[13,"ConstantIndex","gimli::read","Represents `DW_OP_constx`. Read the address at the given…",110,null],[12,"index","gimli::read::Operation","The index of the address in `.debug_addr`.",129,null],[13,"TypedLiteral","gimli::read","Represents `DW_OP_const_type`. Interpret the value bytes…",110,null],[12,"base_type","gimli::read::Operation","The DIE of the base type.",130,null],[12,"value","","The value bytes.",130,null],[13,"Convert","gimli::read","Represents `DW_OP_convert`. Pop the top stack entry,…",110,null],[12,"base_type","gimli::read::Operation","The DIE of the base type.",131,null],[13,"Reinterpret","gimli::read","Represents `DW_OP_reinterpret`. Pop the top stack entry,…",110,null],[12,"base_type","gimli::read::Operation","The DIE of the base type.",132,null],[4,"Location","gimli::read","A single location of a piece of the result of a DWARF…",null,null],[13,"Empty","","The piece is empty. Ordinarily this means the piece has…",133,null],[13,"Register","","The piece is found in a register.",133,null],[12,"register","gimli::read::Location","The register number.",134,null],[13,"Address","gimli::read","The piece is found in memory.",133,null],[12,"address","gimli::read::Location","The address.",135,null],[13,"Value","gimli::read","The piece has no location but its value is known.",133,null],[12,"value","gimli::read::Location","The value.",136,null],[13,"Bytes","gimli::read","The piece is represented by some constant bytes.",133,null],[12,"value","gimli::read::Location","The value.",137,null],[13,"ImplicitPointer","gimli::read","The piece is a pointer to a value which has no actual…",133,null],[12,"value","gimli::read::Location","The `.debug_info` offset of the value that this is an…",138,null],[12,"byte_offset","","The byte offset into the value that the implicit pointer…",138,null],[4,"EvaluationResult","gimli::read","The state of an `Evaluation` after evaluating a DWARF…",null,null],[13,"Complete","","The `Evaluation` is complete, and `Evaluation::result()`…",139,null],[13,"RequiresMemory","","The `Evaluation` needs a value from memory to proceed…",139,null],[12,"address","gimli::read::EvaluationResult","The address of the value required.",140,null],[12,"size","","The size of the value required. This is guaranteed to be…",140,null],[12,"space","","If not `None`, a target-specific address space value.",140,null],[12,"base_type","","The DIE of the base type or 0 to indicate the generic type",140,null],[13,"RequiresRegister","gimli::read","The `Evaluation` needs a value from a register to proceed…",139,null],[12,"register","gimli::read::EvaluationResult","The register number.",141,null],[12,"base_type","","The DIE of the base type or 0 to indicate the generic type",141,null],[13,"RequiresFrameBase","gimli::read","The `Evaluation` needs the frame base address to proceed…",139,null],[13,"RequiresTls","","The `Evaluation` needs a value from TLS to proceed…",139,null],[13,"RequiresCallFrameCfa","","The `Evaluation` needs the CFA to proceed further. Once…",139,null],[13,"RequiresAtLocation","","The `Evaluation` needs the DWARF expression at the given…",139,null],[13,"RequiresEntryValue","","The `Evaluation` needs the value produced by evaluating a…",139,null],[13,"RequiresParameterRef","","The `Evaluation` needs the value of the parameter at the…",139,null],[13,"RequiresRelocatedAddress","","The `Evaluation` needs an address to be relocated to…",139,null],[13,"RequiresIndexedAddress","","The `Evaluation` needs an address from the `.debug_addr`…",139,null],[12,"index","gimli::read::EvaluationResult","The index of the address in the `.debug_addr` section,…",142,null],[12,"relocate","","Whether the address also needs to be relocated.",142,null],[13,"RequiresBaseType","gimli::read","The `Evaluation` needs the `ValueType` for the base type…",139,null],[4,"RawRngListEntry","","A raw entry in .debug_rnglists",null,null],[13,"AddressOrOffsetPair","","A range from DWARF version <= 4.",143,null],[12,"begin","gimli::read::RawRngListEntry","Start of range. May be an address or an offset.",144,null],[12,"end","","End of range. May be an address or an offset.",144,null],[13,"BaseAddress","gimli::read","DW_RLE_base_address",143,null],[12,"addr","gimli::read::RawRngListEntry","base address",145,null],[13,"BaseAddressx","gimli::read","DW_RLE_base_addressx",143,null],[12,"addr","gimli::read::RawRngListEntry","base address",146,null],[13,"StartxEndx","gimli::read","DW_RLE_startx_endx",143,null],[12,"begin","gimli::read::RawRngListEntry","start of range",147,null],[12,"end","","end of range",147,null],[13,"StartxLength","gimli::read","DW_RLE_startx_length",143,null],[12,"begin","gimli::read::RawRngListEntry","start of range",148,null],[12,"length","","length of range",148,null],[13,"OffsetPair","gimli::read","DW_RLE_offset_pair",143,null],[12,"begin","gimli::read::RawRngListEntry","start of range",149,null],[12,"end","","end of range",149,null],[13,"StartEnd","gimli::read","DW_RLE_start_end",143,null],[12,"begin","gimli::read::RawRngListEntry","start of range",150,null],[12,"end","","end of range",150,null],[13,"StartLength","gimli::read","DW_RLE_start_length",143,null],[12,"begin","gimli::read::RawRngListEntry","start of range",151,null],[12,"length","","length of range",151,null],[4,"AttributeValue","gimli::read","The value of an attribute in a `DebuggingInformationEntry`.",null,null],[13,"Addr","","\"Refers to some location in the address space of the…",152,null],[13,"Block","","A slice of an arbitrary number of bytes.",152,null],[13,"Data1","","A one byte constant data value. How to interpret the byte…",152,null],[13,"Data2","","A two byte constant data value. How to interpret the bytes…",152,null],[13,"Data4","","A four byte constant data value. How to interpret the…",152,null],[13,"Data8","","An eight byte constant data value. How to interpret the…",152,null],[13,"Sdata","","A signed integer constant.",152,null],[13,"Udata","","An unsigned integer constant.",152,null],[13,"Exprloc","","\"The information bytes contain a DWARF expression (see…",152,null],[13,"Flag","","A boolean that indicates presence or absence of the…",152,null],[13,"SecOffset","","An offset into another section. Which section this is an…",152,null],[13,"DebugAddrBase","","An offset to a set of addresses in the `.debug_addr`…",152,null],[13,"DebugAddrIndex","","An index into a set of addresses in the `.debug_addr`…",152,null],[13,"UnitRef","","An offset into the current compilation unit.",152,null],[13,"DebugInfoRef","","An offset into the current `.debug_info` section, but…",152,null],[13,"DebugInfoRefSup","","An offset into the `.debug_info` section of the…",152,null],[13,"DebugLineRef","","An offset into the `.debug_line` section.",152,null],[13,"LocationListsRef","","An offset into either the `.debug_loc` section or the…",152,null],[13,"DebugLocListsBase","","An offset to a set of offsets in the `.debug_loclists`…",152,null],[13,"DebugLocListsIndex","","An index into a set of offsets in the `.debug_loclists`…",152,null],[13,"DebugMacinfoRef","","An offset into the `.debug_macinfo` section.",152,null],[13,"DebugMacroRef","","An offset into the `.debug_macro` section.",152,null],[13,"RangeListsRef","","An offset into the `.debug_ranges` section.",152,null],[13,"DebugRngListsBase","","An offset to a set of offsets in the `.debug_rnglists`…",152,null],[13,"DebugRngListsIndex","","An index into a set of offsets in the `.debug_rnglists`…",152,null],[13,"DebugTypesRef","","A type signature.",152,null],[13,"DebugStrRef","","An offset into the `.debug_str` section.",152,null],[13,"DebugStrRefSup","","An offset into the `.debug_str` section of the…",152,null],[13,"DebugStrOffsetsBase","","An offset to a set of entries in the `.debug_str_offsets`…",152,null],[13,"DebugStrOffsetsIndex","","An index into a set of entries in the `.debug_str_offsets`…",152,null],[13,"DebugLineStrRef","","An offset into the `.debug_line_str` section.",152,null],[13,"String","","A slice of bytes representing a string. Does not include a…",152,null],[13,"Encoding","","The value of a `DW_AT_encoding` attribute.",152,null],[13,"DecimalSign","","The value of a `DW_AT_decimal_sign` attribute.",152,null],[13,"Endianity","","The value of a `DW_AT_endianity` attribute.",152,null],[13,"Accessibility","","The value of a `DW_AT_accessibility` attribute.",152,null],[13,"Visibility","","The value of a `DW_AT_visibility` attribute.",152,null],[13,"Virtuality","","The value of a `DW_AT_virtuality` attribute.",152,null],[13,"Language","","The value of a `DW_AT_language` attribute.",152,null],[13,"AddressClass","","The value of a `DW_AT_address_class` attribute.",152,null],[13,"IdentifierCase","","The value of a `DW_AT_identifier_case` attribute.",152,null],[13,"CallingConvention","","The value of a `DW_AT_calling_convention` attribute.",152,null],[13,"Inline","","The value of a `DW_AT_inline` attribute.",152,null],[13,"Ordering","","The value of a `DW_AT_ordering` attribute.",152,null],[13,"FileIndex","","An index into the filename entries from the line number…",152,null],[4,"ValueType","","The type of an entry on the DWARF stack.",null,null],[13,"Generic","","The generic type, which is address-sized and of…",153,null],[13,"I8","","Signed 8-bit integer type.",153,null],[13,"U8","","Unsigned 8-bit integer type.",153,null],[13,"I16","","Signed 16-bit integer type.",153,null],[13,"U16","","Unsigned 16-bit integer type.",153,null],[13,"I32","","Signed 32-bit integer type.",153,null],[13,"U32","","Unsigned 32-bit integer type.",153,null],[13,"I64","","Signed 64-bit integer type.",153,null],[13,"U64","","Unsigned 64-bit integer type.",153,null],[13,"F32","","32-bit floating point type.",153,null],[13,"F64","","64-bit floating point type.",153,null],[4,"Value","","The value of an entry on the DWARF stack.",null,null],[13,"Generic","","A generic value, which is address-sized and of unspecified…",154,null],[13,"I8","","A signed 8-bit integer value.",154,null],[13,"U8","","An unsigned 8-bit integer value.",154,null],[13,"I16","","A signed 16-bit integer value.",154,null],[13,"U16","","An unsigned 16-bit integer value.",154,null],[13,"I32","","A signed 32-bit integer value.",154,null],[13,"U32","","An unsigned 32-bit integer value.",154,null],[13,"I64","","A signed 64-bit integer value.",154,null],[13,"U64","","An unsigned 64-bit integer value.",154,null],[13,"F32","","A 32-bit floating point value.",154,null],[13,"F64","","A 64-bit floating point value.",154,null],[4,"Error","","An error that occurred when parsing.",null,null],[13,"Io","","An I/O error occurred while reading.",155,null],[13,"PcRelativePointerButSectionBaseIsUndefined","","Found a PC relative pointer, but the section base is…",155,null],[13,"TextRelativePointerButTextBaseIsUndefined","","Found a `.text` relative pointer, but the `.text` base is…",155,null],[13,"DataRelativePointerButDataBaseIsUndefined","","Found a data relative pointer, but the data base is…",155,null],[13,"FuncRelativePointerInBadContext","","Found a function relative pointer in a context that does…",155,null],[13,"CannotParseOmitPointerEncoding","","Cannot parse a pointer with a `DW_EH_PE_omit` encoding.",155,null],[13,"BadUnsignedLeb128","","An error parsing an unsigned LEB128 value.",155,null],[13,"BadSignedLeb128","","An error parsing a signed LEB128 value.",155,null],[13,"AbbreviationTagZero","","An abbreviation declared that its tag is zero, but zero is…",155,null],[13,"AttributeFormZero","","An attribute specification declared that its form is zero,…",155,null],[13,"BadHasChildren","","The abbreviation's has-children byte was not one of…",155,null],[13,"BadLength","","The specified length is impossible.",155,null],[13,"UnknownForm","","Found an unknown `DW_FORM_*` type.",155,null],[13,"ExpectedZero","","Expected a zero, found something else.",155,null],[13,"DuplicateAbbreviationCode","","Found an abbreviation code that has already been used.",155,null],[13,"DuplicateArange","","Found a duplicate arange.",155,null],[13,"UnknownReservedLength","","Found an unknown reserved length value.",155,null],[13,"UnknownVersion","","Found an unknown DWARF version.",155,null],[13,"UnknownAbbreviation","","Found a record with an unknown abbreviation code.",155,null],[13,"UnexpectedEof","","Hit the end of input before it was expected.",155,null],[13,"UnexpectedNull","","Read a null entry before it was expected.",155,null],[13,"UnknownStandardOpcode","","Found an unknown standard opcode.",155,null],[13,"UnknownExtendedOpcode","","Found an unknown extended opcode.",155,null],[13,"UnsupportedAddressSize","","The specified address size is not supported.",155,null],[13,"UnsupportedOffsetSize","","The specified offset size is not supported.",155,null],[13,"UnsupportedFieldSize","","The specified field size is not supported.",155,null],[13,"MinimumInstructionLengthZero","","The minimum instruction length must not be zero.",155,null],[13,"MaximumOperationsPerInstructionZero","","The maximum operations per instruction must not be zero.",155,null],[13,"LineRangeZero","","The line range must not be zero.",155,null],[13,"OpcodeBaseZero","","The opcode base must not be zero.",155,null],[13,"BadUtf8","","Found an invalid UTF-8 string.",155,null],[13,"NotCieId","","Expected to find the CIE ID, but found something else.",155,null],[13,"NotCiePointer","","Expected to find a pointer to a CIE, but found the CIE ID…",155,null],[13,"NotFdePointer","","Expected to find a pointer to an FDE, but found a CIE…",155,null],[13,"BadBranchTarget","","Invalid branch target for a DW_OP_bra or DW_OP_skip.",155,null],[13,"InvalidPushObjectAddress","","DW_OP_push_object_address used but no address passed in.",155,null],[13,"NotEnoughStackItems","","Not enough items on the stack when evaluating an expression.",155,null],[13,"TooManyIterations","","Too many iterations to compute the expression.",155,null],[13,"InvalidExpression","","An unrecognized operation was found while parsing a DWARF…",155,null],[13,"InvalidPiece","","The expression had a piece followed by an expression…",155,null],[13,"InvalidExpressionTerminator","","An expression-terminating operation was followed by…",155,null],[13,"DivisionByZero","","Division or modulus by zero when evaluating an expression.",155,null],[13,"TypeMismatch","","An expression operation used mismatching types.",155,null],[13,"IntegralTypeRequired","","An expression operation required an integral type but saw…",155,null],[13,"UnsupportedTypeOperation","","An expression operation used types that are not supported.",155,null],[13,"InvalidShiftExpression","","The shift value in an expression must be a non-negative…",155,null],[13,"UnknownCallFrameInstruction","","An unknown DW_CFA_* instruction.",155,null],[13,"InvalidAddressRange","","The end of an address range was before the beginning.",155,null],[13,"InvalidLocationAddressRange","","The end offset of a loc list entry was before the beginning.",155,null],[13,"CfiInstructionInInvalidContext","","Encountered a call frame instruction in a context in which…",155,null],[13,"PopWithEmptyStack","","When evaluating call frame instructions, found a…",155,null],[13,"NoUnwindInfoForAddress","","Do not have unwind info for the given address.",155,null],[13,"UnsupportedOffset","","An offset value was larger than the maximum supported value.",155,null],[13,"UnknownPointerEncoding","","The given pointer encoding is either unknown or invalid.",155,null],[13,"NoEntryAtGivenOffset","","Did not find an entry at the given offset.",155,null],[13,"OffsetOutOfBounds","","The given offset is out of bounds.",155,null],[13,"UnknownAugmentation","","Found an unknown CFI augmentation.",155,null],[13,"UnsupportedPointerEncoding","","We do not support the given pointer encoding yet.",155,null],[13,"UnsupportedRegister","","Registers larger than `u16` are not supported.",155,null],[13,"TooManyRegisterRules","","The CFI program defined more register rules than we have…",155,null],[13,"CfiStackFull","","Attempted to push onto the CFI stack, but it was already…",155,null],[13,"VariableLengthSearchTable","","The `.eh_frame_hdr` binary search table claims to be…",155,null],[13,"UnsupportedUnitType","","The `DW_UT_*` value for this unit is not supported yet.",155,null],[13,"UnsupportedAddressIndex","","Ranges using AddressIndex are not supported yet.",155,null],[13,"UnsupportedSegmentSize","","Nonzero segment selector sizes aren't supported yet.",155,null],[13,"MissingUnitDie","","A compilation unit or type unit is missing its top level…",155,null],[13,"UnsupportedAttributeForm","","A DIE attribute used an unsupported form.",155,null],[13,"MissingFileEntryFormatPath","","Missing DW_LNCT_path in file entry format.",155,null],[13,"ExpectedStringAttributeValue","","Expected an attribute value to be a string form.",155,null],[11,"get_address","","Returns the address at the given `base` and `index`.",156,[[["debugaddrbase"],["debugaddrindex"],["self"],["u8"]],[["result",["u64"]],["u64"]]]],[11,"borrow","","Create a `DebugAddr` section that references the data in…",156,[[["self"],["f"]],["debugaddr"]]],[11,"set_address_size","","Set the size of a target address in bytes.",157,[[["self"],["u8"]]]],[11,"set_segment_size","","Set the size of a segment selector in bytes.",157,[[["self"],["u8"]]]],[11,"new","","Construct a new `DebugFrame` instance from the data in the…",157,[[["endian"]],["self"]]],[11,"new","","Constructs a new `EhFrameHdr` instance from the data in…",158,[[["endian"]],["self"]]],[11,"parse","","Parses this `EhFrameHdr` to a `ParsedEhFrameHdr`.",158,[[["u8"],["self"],["baseaddresses"]],[["parsedehframehdr"],["result",["parsedehframehdr"]]]]],[11,"eh_frame_ptr","","Returns the address of the binary's `.eh_frame` section.",159,[[["self"]],["pointer"]]],[11,"table","","Retrieves the CFI binary search table, if there is one.",159,[[["self"]],[["option",["ehhdrtable"]],["ehhdrtable"]]]],[11,"lookup","","Probably returns a pointer to the FDE for the given address.",160,[[["baseaddresses"],["self"],["u64"]],[["pointer"],["result",["pointer"]]]]],[11,"pointer_to_offset","","Convert a `Pointer` to a section offset.",160,[[["pointer"],["self"]],[["ehframeoffset"],["result",["ehframeoffset"]]]]],[11,"fde_for_address","","Returns a parsed FDE for the given address, or…",160,[[["u64"],["ehframe"],["f"],["self"],["baseaddresses"]],[["framedescriptionentry"],["result",["framedescriptionentry"]]]]],[11,"unwind_info_for_address","","Returns the frame unwind information for the given…",160,[[["uninitializedunwindcontext"],["ehframe"],["u64"],["f"],["self"],["baseaddresses"]],[["unwindtablerow"],["result",["unwindtablerow"]]]]],[11,"set_address_size","","Set the size of a target address in bytes.",161,[[["self"],["u8"]]]],[11,"new","","Construct a new `EhFrame` instance from the data in the…",161,[[["endian"]],["self"]]],[11,"set_eh_frame_hdr","","Set the `.eh_frame_hdr` section base address.",60,[[["u64"]],["self"]]],[11,"set_eh_frame","","Set the `.eh_frame` section base address.",60,[[["u64"]],["self"]]],[11,"set_text","","Set the `.text` section base address.",60,[[["u64"]],["self"]]],[11,"set_got","","Set the `.got` section base address.",60,[[["u64"]],["self"]]],[11,"next","","Advance the iterator to the next entry.",162,[[["self"]],[["option",["cieorfde"]],["result",["option"]]]]],[11,"offset","","Get the offset of this entry from the start of its…",163,[[["self"]]]],[11,"encoding","","Return the encoding parameters for this CIE.",163,[[["self"]],["encoding"]]],[11,"address_size","","The size of addresses (in bytes) in this CIE.",163,[[["self"]],["u8"]]],[11,"instructions","","Iterate over this CIE's initial instructions.",163,[[["baseaddresses"],["self"],["section"]],["callframeinstructioniter"]]],[11,"entry_len","","A constant that gives the number of bytes of the CIE…",163,[[["self"]]]],[11,"version","","A version number (see Section 7.23). This number is…",163,[[["self"]],["u8"]]],[11,"augmentation","","Get the augmentation data, if any exists.",163,[[["self"]],[["augmentation"],["option",["augmentation"]]]]],[11,"has_lsda","","True if this CIE's FDEs have a LSDA.",163,[[["self"]],["bool"]]],[11,"lsda_encoding","","Return the encoding of the LSDA address for this CIE's FDEs.",163,[[["self"]],[["option",["dwehpe"]],["dwehpe"]]]],[11,"personality_with_encoding","","Return the encoding and address of the personality routine…",163,[[["self"]],["option"]]],[11,"personality","","Return the address of the personality routine handler for…",163,[[["self"]],[["pointer"],["option",["pointer"]]]]],[11,"fde_address_encoding","","Return the encoding of the addresses for this CIE's FDEs.",163,[[["self"]],[["option",["dwehpe"]],["dwehpe"]]]],[11,"is_signal_trampoline","","True if this CIE's FDEs are trampolines for signal handlers.",163,[[["self"]],["bool"]]],[11,"code_alignment_factor","","A constant that is factored out of all advance location…",163,[[["self"]],["u64"]]],[11,"data_alignment_factor","","A constant that is factored out of certain offset…",163,[[["self"]],["i64"]]],[11,"return_address_register","","An unsigned ... constant that indicates which column in…",163,[[["self"]],["register"]]],[11,"parse","","Fully parse this FDE.",164,[[["self"],["f"]],[["framedescriptionentry"],["result",["framedescriptionentry"]]]]],[11,"rows","","Return the table of unwind information for this FDE.",165,[[["uninitializedunwindcontext"],["baseaddresses"],["self"],["section"]],[["result",["unwindtable"]],["unwindtable"]]]],[11,"unwind_info_for_address","","Find the frame unwind information for the given address.",165,[[["section"],["uninitializedunwindcontext"],["u64"],["self"],["baseaddresses"]],[["unwindtablerow"],["result",["unwindtablerow"]]]]],[11,"offset","","Get the offset of this entry from the start of its…",165,[[["self"]]]],[11,"cie","","Get a reference to this FDE's CIE.",165,[[["self"]],["commoninformationentry"]]],[11,"entry_len","","A constant that gives the number of bytes of the header…",165,[[["self"]]]],[11,"instructions","","Iterate over this FDE's instructions.",165,[[["baseaddresses"],["self"],["section"]],["callframeinstructioniter"]]],[11,"initial_address","","The first address for which this entry has unwind…",165,[[["self"]],["u64"]]],[11,"len","","The number of bytes of instructions that this entry has…",165,[[["self"]],["u64"]]],[11,"contains","","Return `true` if the given address is within this FDE,…",165,[[["self"],["u64"]],["bool"]]],[11,"lsda","","The address of this FDE's language-specific data area…",165,[[["self"]],[["pointer"],["option",["pointer"]]]]],[11,"is_signal_trampoline","","Return true if this FDE's function is a trampoline for a…",165,[[["self"]],["bool"]]],[11,"personality","","Return the address of the FDE's function's personality…",165,[[["self"]],[["pointer"],["option",["pointer"]]]]],[11,"new","","Construct a new call frame unwinding context.",166,[[],["uninitializedunwindcontext"]]],[11,"initialize","","Run the CIE's initial instructions, creating and return an…",166,[[["section"],["commoninformationentry"],["self"],["baseaddresses"]],[["result",["unwindcontext"]],["unwindcontext"]]]],[11,"new","","Construct a new `UnwindTable` for the given…",167,[[["framedescriptionentry"],["uninitializedunwindcontext"],["baseaddresses"],["section"]],[["result",["unwindtable"]],["unwindtable"]]]],[11,"next_row","","Evaluate call frame instructions until the next row of the…",167,[[["self"]],[["result",["option"]],["option",["unwindtablerow"]]]]],[11,"start_address","","Get the starting PC address that this row applies to.",168,[[["self"]],["u64"]]],[11,"end_address","","Get the end PC address where this row's register rules…",168,[[["self"]],["u64"]]],[11,"contains","","Return `true` if the given `address` is within this row's…",168,[[["self"],["u64"]],["bool"]]],[11,"saved_args_size","","Returns the amount of args currently on the stack.",168,[[["self"]],["u64"]]],[11,"cfa","","Get the canonical frame address (CFA) recovery rule for…",168,[[["self"]],["cfarule"]]],[11,"register","","Get the register recovery rule for the given register…",168,[[["register"],["self"]],["registerrule"]]],[11,"registers","","Iterate over all defined register `(number, rule)` pairs.",168,[[["self"]],["registerruleiter"]]],[11,"next","","Parse the next call frame instruction.",169,[[["self"]],[["result",["option"]],["option",["callframeinstruction"]]]]],[11,"load","","Try to load the DWARF sections using the given loader…",62,[[["f1"],["f2"]],["result"]]],[11,"borrow","","Create a `Dwarf` structure that references the data in…",62,[[["self"],["f"]],["dwarf"]]],[11,"units","","Iterate the compilation- and partial-unit headers in the…",62,[[["self"]],["compilationunitheadersiter"]]],[11,"unit","","Construct a new `Unit` from the given compilation unit…",62,[[["self"],["compilationunitheader"]],[["unit"],["result",["unit"]]]]],[11,"type_units","","Iterate the type-unit headers in the `.debug_types` section.",62,[[["self"]],["typeunitheadersiter"]]],[11,"type_unit","","Construct a new `Unit` from the given type unit header.",62,[[["typeunitheader"],["self"]],[["unit"],["result",["unit"]]]]],[11,"abbreviations","","Parse the abbreviations for a compilation unit.",62,[[["self"],["compilationunitheader"]],[["result",["abbreviations"]],["abbreviations"]]]],[11,"type_abbreviations","","Parse the abbreviations for a type unit.",62,[[["self"],["typeunitheader"]],[["result",["abbreviations"]],["abbreviations"]]]],[11,"string_offset","","Return the string offset at the given index.",62,[[["unit"],["self"],["debugstroffsetsindex"]],[["result",["debugstroffset"]],["debugstroffset"]]]],[11,"string","","Return the string at the given offset in `.debug_str`.",62,[[["debugstroffset"],["self"]],["result"]]],[11,"line_string","","Return the string at the given offset in `.debug_line_str`.",62,[[["debuglinestroffset"],["self"]],["result"]]],[11,"attr_string","","Return an attribute value as a string slice.",62,[[["attributevalue"],["unit"],["self"]],["result"]]],[11,"address","","Return the address at the given index.",62,[[["unit"],["self"],["debugaddrindex"]],[["result",["u64"]],["u64"]]]],[11,"ranges_offset","","Return the range list offset at the given index.",62,[[["unit"],["debugrnglistsindex"],["self"]],[["rangelistsoffset"],["result",["rangelistsoffset"]]]]],[11,"ranges","","Iterate over the `RangeListEntry`s starting at the given…",62,[[["unit"],["rangelistsoffset"],["self"]],[["result",["rnglistiter"]],["rnglistiter"]]]],[11,"attr_ranges_offset","","Try to return an attribute value as a range list offset.",62,[[["attributevalue"],["unit"],["self"]],[["result",["option"]],["option",["rangelistsoffset"]]]]],[11,"attr_ranges","","Try to return an attribute value as a range list entry…",62,[[["attributevalue"],["unit"],["self"]],[["result",["option"]],["option",["rnglistiter"]]]]],[11,"die_ranges","","Return an iterator for the address ranges of a…",62,[[["unit"],["self"],["debugginginformationentry"]],[["rangeiter"],["result",["rangeiter"]]]]],[11,"unit_ranges","","Return an iterator for the address ranges of a `Unit`.",62,[[["unit"],["self"]],[["rangeiter"],["result",["rangeiter"]]]]],[11,"locations_offset","","Return the location list offset at the given index.",62,[[["unit"],["self"],["debugloclistsindex"]],[["locationlistsoffset"],["result",["locationlistsoffset"]]]]],[11,"locations","","Iterate over the `LocationListEntry`s starting at the…",62,[[["unit"],["self"],["locationlistsoffset"]],[["loclistiter"],["result",["loclistiter"]]]]],[11,"attr_locations_offset","","Try to return an attribute value as a location list offset.",62,[[["attributevalue"],["unit"],["self"]],[["result",["option"]],["option",["locationlistsoffset"]]]]],[11,"attr_locations","","Try to return an attribute value as a location list entry…",62,[[["attributevalue"],["unit"],["self"]],[["option",["loclistiter"]],["result",["option"]]]]],[11,"lookup_offset_id","","Call `Reader::lookup_offset_id` for each section, and…",62,[[["readeroffsetid"],["self"]],["option"]]],[11,"format_error","","Returns a string representation of the given error.",62,[[["error"],["self"]],["string"]]],[11,"new","","Construct a new `Unit` from the given compilation unit…",63,[[["compilationunitheader"],["dwarf"]],["result"]]],[11,"new_type_unit","","Construct a new `Unit` from the given type unit header.",63,[[["typeunitheader"],["dwarf"]],["result"]]],[11,"encoding","","Return the encoding parameters for this unit.",63,[[["self"]],["encoding"]]],[11,"entry","","Read the `DebuggingInformationEntry` at the given offset.",63,[[["self"],["unitoffset"]],[["debugginginformationentry"],["result",["debugginginformationentry"]]]]],[11,"entries","","Navigate this unit's `DebuggingInformationEntry`s.",63,[[["self"]],["entriescursor"]]],[11,"entries_at_offset","","Navigate this unit's `DebuggingInformationEntry`s starting…",63,[[["self"],["unitoffset"]],[["result",["entriescursor"]],["entriescursor"]]]],[11,"entries_tree","","Navigate this unit's `DebuggingInformationEntry`s as a…",63,[[["option",["unitoffset"]],["self"],["unitoffset"]],[["result",["entriestree"]],["entriestree"]]]],[11,"entries_raw","","Read the raw data that defines the Debugging Information…",63,[[["option",["unitoffset"]],["self"],["unitoffset"]],[["entriesraw"],["result",["entriesraw"]]]]],[11,"to_unit_offset","gimli","Convert an offset to be relative to the start of the given…",25,[[["unit"],["self"]],[["option",["unitoffset"]],["unitoffset"]]]],[11,"to_unit_section_offset","gimli::read","Convert an offset to be relative to the start of the…",71,[[["unit"],["self"]],["unitsectionoffset"]]],[11,"next","","Advance the iterator to the next range.",170,[[["self"]],[["result",["option"]],["option",["range"]]]]],[11,"new","","Construct a new `EndianSlice` with the given slice and…",171,[[["endian"]],["endianslice"]]],[11,"slice","","Return a reference to the raw slice.",171,[[["self"]]]],[11,"split_at","","Split the slice in two at the given index, resulting in…",171,[[["self"],["usize"]]]],[11,"find","","Find the first occurence of a byte in the slice, and…",171,[[["self"],["u8"]],[["option",["usize"]],["usize"]]]],[11,"offset_from","","Return the offset of the start of the slice relative to…",171,[[["endianslice"],["self"]],["usize"]]],[11,"to_string","","Converts the slice to a string using `str::from_utf8`.",171,[[["self"]],[["str"],["result",["str"]]]]],[11,"to_string_lossy","","Converts the slice to a string, including invalid…",171,[[["self"]],[["str"],["cow",["str"]]]]],[11,"range","","Take the given `start..end` range of the underlying slice…",171,[[["range",["usize"]],["self"],["usize"]],["endianslice"]]],[11,"range_from","","Take the given `start..` range of the underlying slice and…",171,[[["rangefrom",["usize"]],["self"],["usize"]],["endianslice"]]],[11,"range_to","","Take the given `..end` range of the underlying slice and…",171,[[["rangeto",["usize"]],["self"],["usize"]],["endianslice"]]],[11,"new","","Construct a new `DebugAbbrev` instance from the data in…",172,[[["endian"]],["self"]]],[11,"abbreviations","","Parse the abbreviations at the given `offset` within this…",172,[[["self"],["debugabbrevoffset"]],[["result",["abbreviations"]],["abbreviations"]]]],[11,"borrow","","Create a `DebugAbbrev` section that references the data in…",172,[[["self"],["f"]],["debugabbrev"]]],[11,"get","","Get the abbreviation associated with the given code.",173,[[["self"],["u64"]],[["abbreviation"],["option",["abbreviation"]]]]],[11,"code","","Get this abbreviation's code.",174,[[["self"]],["u64"]]],[11,"tag","","Get this abbreviation's tag.",174,[[["self"]],["dwtag"]]],[11,"has_children","","Return true if this abbreviation's type has children,…",174,[[["self"]],["bool"]]],[11,"attributes","","Get this abbreviation's attributes.",174,[[["self"]]]],[11,"new","","Construct a new `AttributeSpecification` from the given…",175,[[["i64"],["dwat"],["option",["i64"]],["dwform"]],["attributespecification"]]],[11,"name","","Get the attribute's name.",175,[[["self"]],["dwat"]]],[11,"form","","Get the attribute's form.",175,[[["self"]],["dwform"]]],[11,"implicit_const_value","","Get the attribute's implicit const value.",175,[[["self"]],["i64"]]],[11,"size","","Return the size of the attribute, in bytes.",175,[[["self"],["unitheader"]],[["option",["usize"]],["usize"]]]],[11,"segment","","Return the segment selector of this arange.",176,[[["self"]],[["option",["u64"]],["u64"]]]],[11,"address","","Return the beginning address of this arange.",176,[[["self"]],["u64"]]],[11,"length","","Return the length of this arange.",176,[[["self"]],["u64"]]],[11,"debug_info_offset","","Return the offset into the .debug_info section for this…",176,[[["self"]],["debuginfooffset"]]],[11,"new","","Construct a new `DebugAranges` instance from the data in…",177,[[["endian"]],["self"]]],[11,"items","","Iterate the aranges in the `.debug_aranges` section.",177,[[["self"]],["arangeentryiter"]]],[11,"next","","Advance the iterator and return the next arange.",178,[[["self"]],[["result",["option"]],["option",["arangeentry"]]]]],[11,"new","","Construct a new `DebugLine` instance from the data in the…",179,[[["endian"]],["self"]]],[11,"program","","Parse the line number program whose header is at the given…",179,[[["u8"],["option"],["self"],["debuglineoffset"]],[["incompletelineprogram"],["result",["incompletelineprogram"]]]]],[11,"borrow","","Create a `DebugLine` section that references the data in…",179,[[["self"],["f"]],["debugline"]]],[11,"header","","Get a reference to the header for this state machine's…",180,[[["self"]],["lineprogramheader"]]],[11,"next_row","","Parse and execute the next instructions in the line number…",180,[[["self"]],[["option"],["result",["option"]]]]],[11,"next_instruction","","Advance the iterator and return the next instruction.",181,[[["self"],["lineprogramheader"]],[["option",["lineinstruction"]],["result",["option"]]]]],[11,"new","","Create a line number row in the initial state for the…",182,[[["lineprogramheader"]],["self"]]],[11,"address","","\"The program-counter value corresponding to a machine…",182,[[["self"]],["u64"]]],[11,"op_index","","An unsigned integer representing the index of an operation…",182,[[["self"]],["u64"]]],[11,"file_index","","\"An unsigned integer indicating the identity of the source…",182,[[["self"]],["u64"]]],[11,"file","","The source file corresponding to the current machine…",182,[[["lineprogramheader"],["self"]],[["fileentry"],["option",["fileentry"]]]]],[11,"line","","\"An unsigned integer indicating a source line number.…",182,[[["self"]],[["option",["u64"]],["u64"]]]],[11,"column","","\"An unsigned integer indicating a column number within a…",182,[[["self"]],["columntype"]]],[11,"is_stmt","","\"A boolean indicating that the current instruction is a…",182,[[["self"]],["bool"]]],[11,"basic_block","","\"A boolean indicating that the current instruction is the…",182,[[["self"]],["bool"]]],[11,"end_sequence","","\"A boolean indicating that the current address is that of…",182,[[["self"]],["bool"]]],[11,"prologue_end","","\"A boolean indicating that the current address is one (of…",182,[[["self"]],["bool"]]],[11,"epilogue_begin","","\"A boolean indicating that the current address is one (of…",182,[[["self"]],["bool"]]],[11,"isa","","Tag for the current instruction set architecture.",182,[[["self"]],["u64"]]],[11,"discriminator","","\"An unsigned integer identifying the block to which the…",182,[[["self"]],["u64"]]],[11,"execute","","Execute the given instruction, and return true if a new…",182,[[["self"],["lineinstruction"],["program"]],["bool"]]],[11,"reset","","Perform any reset that was required after copying the…",182,[[["self"],["lineprogramheader"]]]],[11,"offset","","Return the offset of the line number program header in the…",183,[[["self"]],["debuglineoffset"]]],[11,"unit_length","","Return the length of the line number program and header,…",183,[[["self"]]]],[11,"encoding","","Return the encoding parameters for this header's line…",183,[[["self"]],["encoding"]]],[11,"version","","Get the version of this header's line program.",183,[[["self"]],["u16"]]],[11,"header_length","","Get the length of the encoded line number program header,…",183,[[["self"]]]],[11,"address_size","","Get the size in bytes of a target machine address.",183,[[["self"]],["u8"]]],[11,"format","","Whether this line program is encoded in 64- or 32-bit DWARF.",183,[[["self"]],["format"]]],[11,"line_encoding","","Get the line encoding parameters for this header's line…",183,[[["self"]],["lineencoding"]]],[11,"minimum_instruction_length","","Get the minimum instruction length any instruction in this…",183,[[["self"]],["u8"]]],[11,"maximum_operations_per_instruction","","Get the maximum number of operations each instruction in…",183,[[["self"]],["u8"]]],[11,"default_is_stmt","","Get the default value of the `is_stmt` register for this…",183,[[["self"]],["bool"]]],[11,"line_base","","Get the line base for this header's line program.",183,[[["self"]],["i8"]]],[11,"line_range","","Get the line range for this header's line program.",183,[[["self"]],["u8"]]],[11,"opcode_base","","Get opcode base for this header's line program.",183,[[["self"]],["u8"]]],[11,"standard_opcode_lengths","","An array of `u8` that specifies the number of LEB128…",183,[[["self"]],["r"]]],[11,"directory_entry_format","","Get the format of a directory entry.",183,[[["self"]]]],[11,"include_directories","","Get the set of include directories for this header's line…",183,[[["self"]]]],[11,"directory","","The include directory with the given directory index.",183,[[["self"],["u64"]],[["option",["attributevalue"]],["attributevalue"]]]],[11,"file_name_entry_format","","Get the format of a file name entry.",183,[[["self"]]]],[11,"file_has_timestamp","","Return true if the file entries may have valid timestamps.",183,[[["self"]],["bool"]]],[11,"file_has_size","","Return true if the file entries may have valid sizes.",183,[[["self"]],["bool"]]],[11,"file_has_md5","","Return true if the file name entry format contains an MD5…",183,[[["self"]],["bool"]]],[11,"file_names","","Get the list of source files that appear in this header's…",183,[[["self"]]]],[11,"file","","The source file with the given file index.",183,[[["self"],["u64"]],[["fileentry"],["option",["fileentry"]]]]],[11,"raw_program_buf","","Get the raw, un-parsed `EndianSlice` containing this…",183,[[["self"]],["r"]]],[11,"instructions","","Iterate over the instructions in this header's line number…",183,[[["self"]],["lineinstructions"]]],[11,"header","","Retrieve the `LineProgramHeader` for this program.",184,[[["self"]],["lineprogramheader"]]],[11,"rows","","Construct a new `LineRows` for executing this program to…",184,[[],[["incompletelineprogram"],["linerows",["incompletelineprogram"]]]]],[11,"sequences","","Execute the line number program, completing the…",184,[[],["result"]]],[11,"header","","Retrieve the `LineProgramHeader` for this program.",185,[[["self"]],["lineprogramheader"]]],[11,"resume_from","","Construct a new `LineRows` for executing the subset of the…",185,[[["self"],["linesequence"]],[["completelineprogram"],["linerows",["completelineprogram"]]]]],[11,"path_name","","A slice containing the full or relative path name of > a…",186,[[["self"]],["attributevalue"]]],[11,"directory_index","","An unsigned LEB128 number representing the directory index…",186,[[["self"]],["u64"]]],[11,"directory","","Get this file's directory.",186,[[["lineprogramheader"],["self"]],[["option",["attributevalue"]],["attributevalue"]]]],[11,"timestamp","","The implementation-defined time of last modification of…",186,[[["self"]],["u64"]]],[11,"size","","The size of the file in bytes, or 0 if not available.",186,[[["self"]],["u64"]]],[11,"md5","","A 16-byte MD5 digest of the file contents.",186,[[["self"]]]],[11,"new","","Construct a new `DebugLoc` instance from the data in the…",187,[[["endian"]],["self"]]],[11,"new","","Construct a new `DebugLocLists` instance from the data in…",188,[[["endian"]],["self"]]],[11,"new","","Construct a new `LocationLists` instance from the data in…",189,[[["debugloc"],["debugloclists"]],["locationlists"]]],[11,"borrow","","Create a `LocationLists` that references the data in `self`.",189,[[["self"],["f"]],["locationlists"]]],[11,"locations","","Iterate over the `LocationListEntry`s starting at the…",189,[[["encoding"],["u64"],["debugaddrbase"],["debugaddr"],["self"],["locationlistsoffset"]],[["loclistiter"],["result",["loclistiter"]]]]],[11,"raw_locations","","Iterate over the raw `LocationListEntry`s starting at the…",189,[[["encoding"],["self"],["locationlistsoffset"]],[["result",["rawloclistiter"]],["rawloclistiter"]]]],[11,"get_offset","","Returns the `.debug_loclists` offset at the given `base`…",189,[[["debugloclistsbase"],["debugloclistsindex"],["self"],["encoding"]],[["locationlistsoffset"],["result",["locationlistsoffset"]]]]],[11,"lookup_offset_id","","Call `Reader::lookup_offset_id` for each section, and…",189,[[["readeroffsetid"],["self"]],["option"]]],[11,"new","","Construct a `RawLocListIter`.",190,[[["encoding"],["r"]],["rawloclistiter"]]],[11,"next","","Advance the iterator to the next location.",190,[[["self"]],[["result",["option"]],["option",["rawloclistentry"]]]]],[11,"next","","Advance the iterator to the next location.",191,[[["self"]],[["result",["option"]],["option",["locationlistentry"]]]]],[11,"is_empty","","Return true if the piece is empty.",133,[[["self"]],["bool"]]],[11,"parse","","Parse a single DWARF expression operation.",110,[[["encoding"],["r"]],[["result",["operation"]],["operation"]]]],[11,"evaluation","","Create an evaluation for this expression.",69,[[["encoding"]],["evaluation"]]],[11,"operations","","Return an iterator for the operations in the expression.",69,[[["encoding"]],["operationiter"]]],[11,"next","","Read the next operation in an expression.",192,[[["self"]],[["result",["option"]],["option",["operation"]]]]],[11,"offset_from","","Return the current byte offset of the iterator.",192,[[["expression"],["self"]]]],[11,"new","","Create a new DWARF expression evaluator.",193,[[["encoding"],["r"]],["evaluation"]]],[11,"set_initial_value","","Set an initial value to be pushed on the DWARF expression…",193,[[["self"],["u64"]]]],[11,"set_object_address","","Set the enclosing object's address, as used by…",193,[[["self"],["u64"]]]],[11,"set_max_iterations","","Set the maximum number of iterations to be allowed by the…",193,[[["self"],["u32"]]]],[11,"result","","Get the result of this `Evaluation`.",193,[[],[["vec",["piece"]],["piece"]]]],[11,"evaluate","","Evaluate a DWARF expression. This method should only ever…",193,[[["self"]],[["result",["evaluationresult"]],["evaluationresult"]]]],[11,"resume_with_memory","","Resume the `Evaluation` with the provided memory `value`.…",193,[[["self"],["value"]],[["result",["evaluationresult"]],["evaluationresult"]]]],[11,"resume_with_register","","Resume the `Evaluation` with the provided `register`…",193,[[["self"],["value"]],[["result",["evaluationresult"]],["evaluationresult"]]]],[11,"resume_with_frame_base","","Resume the `Evaluation` with the provided `frame_base`.…",193,[[["self"],["u64"]],[["result",["evaluationresult"]],["evaluationresult"]]]],[11,"resume_with_tls","","Resume the `Evaluation` with the provided `value`. This…",193,[[["self"],["u64"]],[["result",["evaluationresult"]],["evaluationresult"]]]],[11,"resume_with_call_frame_cfa","","Resume the `Evaluation` with the provided `cfa`. This will…",193,[[["self"],["u64"]],[["result",["evaluationresult"]],["evaluationresult"]]]],[11,"resume_with_at_location","","Resume the `Evaluation` with the provided `bytes`. This…",193,[[["self"],["r"]],[["result",["evaluationresult"]],["evaluationresult"]]]],[11,"resume_with_entry_value","","Resume the `Evaluation` with the provided `entry_value`.…",193,[[["self"],["value"]],[["result",["evaluationresult"]],["evaluationresult"]]]],[11,"resume_with_parameter_ref","","Resume the `Evaluation` with the provided…",193,[[["self"],["u64"]],[["result",["evaluationresult"]],["evaluationresult"]]]],[11,"resume_with_relocated_address","","Resume the `Evaluation` with the provided relocated…",193,[[["self"],["u64"]],[["result",["evaluationresult"]],["evaluationresult"]]]],[11,"resume_with_indexed_address","","Resume the `Evaluation` with the provided indexed…",193,[[["self"],["u64"]],[["result",["evaluationresult"]],["evaluationresult"]]]],[11,"resume_with_base_type","","Resume the `Evaluation` with the provided `base_type`.…",193,[[["valuetype"],["self"]],[["result",["evaluationresult"]],["evaluationresult"]]]],[11,"name","","Returns the name this entry refers to.",194,[[["self"]],["r"]]],[11,"unit_header_offset","","Returns the offset into the .debug_info section for the…",194,[[["self"]],["debuginfooffset"]]],[11,"die_offset","","Returns the offset into the compilation unit for the…",194,[[["self"]],["unitoffset"]]],[11,"new","","Construct a new `DebugPubNames` instance from the data in…",195,[[["endian"]],["self"]]],[11,"items","","Iterate the pubnames in the `.debug_pubnames` section.",195,[[["self"]],["pubnamesentryiter"]]],[11,"next","","Advance the iterator and return the next pubname.",196,[[["self"]],[["option",["pubnamesentry"]],["result",["option"]]]]],[11,"name","","Returns the name of the type this entry refers to.",197,[[["self"]],["r"]]],[11,"unit_header_offset","","Returns the offset into the .debug_info section for the…",197,[[["self"]],["debuginfooffset"]]],[11,"die_offset","","Returns the offset into the compilation unit for the…",197,[[["self"]],["unitoffset"]]],[11,"new","","Construct a new `DebugPubTypes` instance from the data in…",198,[[["endian"]],["self"]]],[11,"items","","Iterate the pubtypes in the `.debug_pubtypes` section.",198,[[["self"]],["pubtypesentryiter"]]],[11,"next","","Advance the iterator and return the next pubtype.",199,[[["self"]],[["result",["option"]],["option",["pubtypesentry"]]]]],[11,"new","","Construct a new `DebugRanges` instance from the data in…",200,[[["endian"]],["self"]]],[11,"new","","Construct a new `DebugRngLists` instance from the data in…",201,[[["endian"]],["self"]]],[11,"new","","Construct a new `RangeLists` instance from the data in the…",202,[[["debugranges"],["debugrnglists"]],["rangelists"]]],[11,"borrow","","Create a `RangeLists` that references the data in `self`.",202,[[["self"],["f"]],["rangelists"]]],[11,"ranges","","Iterate over the `Range` list entries starting at the…",202,[[["u64"],["debugaddrbase"],["rangelistsoffset"],["debugaddr"],["self"],["encoding"]],[["result",["rnglistiter"]],["rnglistiter"]]]],[11,"raw_ranges","","Iterate over the `RawRngListEntry`ies starting at the…",202,[[["rangelistsoffset"],["self"],["encoding"]],[["result",["rawrnglistiter"]],["rawrnglistiter"]]]],[11,"get_offset","","Returns the `.debug_rnglists` offset at the given `base`…",202,[[["debugrnglistsbase"],["debugrnglistsindex"],["self"],["encoding"]],[["rangelistsoffset"],["result",["rangelistsoffset"]]]]],[11,"lookup_offset_id","","Call `Reader::lookup_offset_id` for each section, and…",202,[[["readeroffsetid"],["self"]],["option"]]],[11,"next","","Advance the iterator to the next range.",203,[[["self"]],[["option",["rawrnglistentry"]],["result",["option"]]]]],[11,"next","","Advance the iterator to the next range.",204,[[["self"]],[["result",["option"]],["option",["range"]]]]],[11,"new","","Construct a new `DebugStr` instance from the data in the…",205,[[["endian"]],["self"]]],[11,"get_str","","Lookup a string from the `.debug_str` section by…",205,[[["debugstroffset"],["self"]],["result"]]],[11,"borrow","","Create a `DebugStr` section that references the data in…",205,[[["self"],["f"]],["debugstr"]]],[11,"get_str_offset","","Returns the `.debug_str` offset at the given `base` and…",206,[[["debugstroffsetsindex"],["debugstroffsetsbase"],["self"],["format"]],[["result",["debugstroffset"]],["debugstroffset"]]]],[11,"borrow","","Create a `DebugStrOffsets` section that references the…",206,[[["self"],["f"]],["debugstroffsets"]]],[11,"get_str","","Lookup a string from the `.debug_line_str` section by…",207,[[["debuglinestroffset"],["self"]],["result"]]],[11,"borrow","","Create a `DebugLineStr` section that references the data…",207,[[["self"],["f"]],["debuglinestr"]]],[11,"to_unit_offset","gimli","Convert an offset to be relative to the start of the given…",20,[[["self"],["typeunitheader"]],[["option",["unitoffset"]],["unitoffset"]]]],[11,"to_unit_offset","","Convert an offset to be relative to the start of the given…",6,[[["self"],["compilationunitheader"]],[["option",["unitoffset"]],["unitoffset"]]]],[11,"to_debug_info_offset","gimli::read","Convert an offset to be relative to the start of the…",71,[[["self"],["compilationunitheader"]],["debuginfooffset"]]],[11,"to_debug_types_offset","","Convert an offset to be relative to the start of the…",71,[[["self"],["typeunitheader"]],["debugtypesoffset"]]],[11,"new","","Construct a new `DebugInfo` instance from the data in the…",208,[[["endian"]],["self"]]],[11,"units","","Iterate the compilation- and partial-units in this…",208,[[["self"]],["compilationunitheadersiter"]]],[11,"header_from_offset","","Get the CompilationUnitHeader located at offset from this…",208,[[["debuginfooffset"],["self"]],[["compilationunitheader"],["result",["compilationunitheader"]]]]],[11,"borrow","","Create a `DebugInfo` section that references the data in…",208,[[["self"],["f"]],["debuginfo"]]],[11,"next","","Advance the iterator to the next unit header.",209,[[["self"]],[["result",["option"]],["option",["compilationunitheader"]]]]],[11,"new","","Construct a new `CompilationUnitHeader`.",210,[[["unitheader"],["debuginfooffset"]],["self"]]],[11,"header","","Return the `UnitHeader` containing common unit header…",210,[[],["unitheader"]]],[11,"size_of_header","","Return the serialized size of the compilation unit header…",210,[[["format"]],["usize"]]],[11,"offset","","Get the offset of this compilation unit within the…",210,[[["self"]],["debuginfooffset"]]],[11,"unit_length","","Get the length of the debugging info for this compilation…",210,[[["self"]]]],[11,"length_including_self","","Get the length of the debugging info for this compilation…",210,[[["self"]]]],[11,"encoding","","Return the encoding parameters for this unit.",210,[[["self"]],["encoding"]]],[11,"version","","Get the DWARF version of the debugging info for this…",210,[[["self"]],["u16"]]],[11,"debug_abbrev_offset","","The offset into the `.debug_abbrev` section for this…",210,[[["self"]],["debugabbrevoffset"]]],[11,"address_size","","The size of addresses (in bytes) in this type-unit.",210,[[["self"]],["u8"]]],[11,"format","","Whether this type unit is encoded in 64- or 32-bit DWARF.",210,[[["self"]],["format"]]],[11,"header_size","","The serialized size of the header for this compilation unit.",210,[[["self"]]]],[11,"entry","","Read the `DebuggingInformationEntry` at the given offset.",210,[[["unitoffset"],["self"],["abbreviations"]],[["debugginginformationentry"],["result",["debugginginformationentry"]]]]],[11,"entries","","Navigate this compilation unit's…",210,[[["self"],["abbreviations"]],["entriescursor"]]],[11,"entries_at_offset","","Navigate this compilation unit's…",210,[[["unitoffset"],["self"],["abbreviations"]],[["result",["entriescursor"]],["entriescursor"]]]],[11,"entries_tree","","Navigate this compilation unit's…",210,[[["option",["unitoffset"]],["unitoffset"],["self"],["abbreviations"]],[["result",["entriestree"]],["entriestree"]]]],[11,"entries_raw","","Read the raw data that defines the Debugging Information…",210,[[["option",["unitoffset"]],["unitoffset"],["self"],["abbreviations"]],[["entriesraw"],["result",["entriesraw"]]]]],[11,"abbreviations","","Parse this compilation unit's abbreviations.",210,[[["self"],["debugabbrev"]],[["result",["abbreviations"]],["abbreviations"]]]],[11,"new","","Construct a new `UnitHeader`.",211,[[["r"],["encoding"],["debugabbrevoffset"]],["self"]]],[11,"size_of_header","","Return the serialized size of the common unit header for…",211,[[["format"]],["usize"]]],[11,"unit_length","","Get the length of the debugging info for this compilation…",211,[[["self"]]]],[11,"length_including_self","","Get the length of the debugging info for this compilation…",211,[[["self"]]]],[11,"encoding","","Return the encoding parameters for this unit.",211,[[["self"]],["encoding"]]],[11,"version","","Get the DWARF version of the debugging info for this…",211,[[["self"]],["u16"]]],[11,"debug_abbrev_offset","","The offset into the `.debug_abbrev` section for this…",211,[[["self"]],["debugabbrevoffset"]]],[11,"address_size","","The size of addresses (in bytes) in this compilation unit.",211,[[["self"]],["u8"]]],[11,"format","","Whether this compilation unit is encoded in 64- or 32-bit…",211,[[["self"]],["format"]]],[11,"header_size","","The serialized size of the header for this compilation unit.",211,[[["self"]]]],[11,"range","","Get the underlying bytes for the supplied range.",211,[[["range",["unitoffset"]],["self"],["unitoffset"]],["result"]]],[11,"range_from","","Get the underlying bytes for the supplied range.",211,[[["unitoffset"],["self"],["rangefrom",["unitoffset"]]],["result"]]],[11,"range_to","","Get the underlying bytes for the supplied range.",211,[[["rangeto",["unitoffset"]],["self"],["unitoffset"]],["result"]]],[11,"entry","","Read the `DebuggingInformationEntry` at the given offset.",211,[[["unitoffset"],["self"],["abbreviations"]],[["debugginginformationentry"],["result",["debugginginformationentry"]]]]],[11,"entries","","Navigate this unit's `DebuggingInformationEntry`s.",211,[[["self"],["abbreviations"]],["entriescursor"]]],[11,"entries_at_offset","","Navigate this compilation unit's…",211,[[["unitoffset"],["self"],["abbreviations"]],[["result",["entriescursor"]],["entriescursor"]]]],[11,"entries_tree","","Navigate this unit's `DebuggingInformationEntry`s as a…",211,[[["option",["unitoffset"]],["unitoffset"],["self"],["abbreviations"]],[["result",["entriestree"]],["entriestree"]]]],[11,"entries_raw","","Read the raw data that defines the Debugging Information…",211,[[["option",["unitoffset"]],["unitoffset"],["self"],["abbreviations"]],[["entriesraw"],["result",["entriesraw"]]]]],[11,"abbreviations","","Parse this unit's abbreviations.",211,[[["self"],["debugabbrev"]],[["result",["abbreviations"]],["abbreviations"]]]],[11,"new","","Construct a new `DebuggingInformationEntry`.",212,[[["r"],["unitheader"],["unitoffset"],["abbreviation"]],["self"]]],[11,"code","","Get this entry's code.",212,[[["self"]],["u64"]]],[11,"offset","","Get this entry's offset.",212,[[["self"]],["unitoffset"]]],[11,"tag","","Get this entry's `DW_TAG_whatever` tag.",212,[[["self"]],["dwtag"]]],[11,"has_children","","Return true if this entry's type can have children, false…",212,[[["self"]],["bool"]]],[11,"attrs","","Iterate over this entry's set of attributes.",212,[[["self"]],["attrsiter"]]],[11,"attr","","Find the first attribute in this entry which has the given…",212,[[["self"],["dwat"]],[["result",["option"]],["option",["attribute"]]]]],[11,"attr_value_raw","","Find the first attribute in this entry which has the given…",212,[[["self"],["dwat"]],[["option",["attributevalue"]],["result",["option"]]]]],[11,"attr_value","","Find the first attribute in this entry which has the given…",212,[[["self"],["dwat"]],[["option",["attributevalue"]],["result",["option"]]]]],[11,"name","","Get this attribute's name.",213,[[["self"]],["dwat"]]],[11,"raw_value","","Get this attribute's raw value.",213,[[["self"]],["attributevalue"]]],[11,"value","","Get this attribute's normalized value.",213,[[["self"]],["attributevalue"]]],[11,"u8_value","","Try to convert this attribute's value to a u8.",213,[[["self"]],[["option",["u8"]],["u8"]]]],[11,"u16_value","","Try to convert this attribute's value to a u16.",213,[[["self"]],[["option",["u16"]],["u16"]]]],[11,"udata_value","","Try to convert this attribute's value to an unsigned…",213,[[["self"]],[["option",["u64"]],["u64"]]]],[11,"sdata_value","","Try to convert this attribute's value to a signed integer.",213,[[["self"]],[["i64"],["option",["i64"]]]]],[11,"offset_value","","Try to convert this attribute's value to an offset.",213,[[["self"]],["option"]]],[11,"exprloc_value","","Try to convert this attribute's value to an expression or…",213,[[["self"]],[["expression"],["option",["expression"]]]]],[11,"string_value","","Try to return this attribute's value as a string slice.",213,[[["self"],["debugstr"]],["option"]]],[11,"string_value_sup","","Try to return this attribute's value as a string slice.",213,[[["option",["debugstr"]],["self"],["debugstr"]],["option"]]],[11,"u8_value","","Try to convert this attribute's value to a u8.",152,[[["self"]],[["option",["u8"]],["u8"]]]],[11,"u16_value","","Try to convert this attribute's value to a u16.",152,[[["self"]],[["option",["u16"]],["u16"]]]],[11,"udata_value","","Try to convert this attribute's value to an unsigned…",152,[[["self"]],[["option",["u64"]],["u64"]]]],[11,"sdata_value","","Try to convert this attribute's value to a signed integer.",152,[[["self"]],[["i64"],["option",["i64"]]]]],[11,"offset_value","","Try to convert this attribute's value to an offset.",152,[[["self"]],["option"]]],[11,"exprloc_value","","Try to convert this attribute's value to an expression or…",152,[[["self"]],[["expression"],["option",["expression"]]]]],[11,"string_value","","Try to return this attribute's value as a string slice.",152,[[["self"],["debugstr"]],["option"]]],[11,"string_value_sup","","Try to return this attribute's value as a string slice.",152,[[["option",["debugstr"]],["self"],["debugstr"]],["option"]]],[11,"next","","Advance the iterator and return the next attribute.",214,[[["self"]],[["result",["option"]],["option",["attribute"]]]]],[11,"is_empty","","Return true if there is no more input.",215,[[["self"]],["bool"]]],[11,"next_offset","","Return the unit offset at which the reader will read next.",215,[[["self"]],["unitoffset"]]],[11,"next_depth","","Return the depth of the next entry.",215,[[["self"]],["isize"]]],[11,"read_abbreviation","","Read an abbreviation code and lookup the corresponding…",215,[[["self"]],[["option",["abbreviation"]],["result",["option"]]]]],[11,"read_attribute","","Read an attribute.",215,[[["self"],["attributespecification"]],[["result",["attribute"]],["attribute"]]]],[11,"current","","Get a reference to the entry that the cursor is currently…",216,[[["self"]],[["debugginginformationentry"],["option",["debugginginformationentry"]]]]],[11,"next_entry","","Move the cursor to the next DIE in the tree.",216,[[["self"]],[["result",["option"]],["option"]]]],[11,"next_dfs","","Move the cursor to the next DIE in the tree in DFS order.",216,[[["self"]],[["result",["option"]],["option"]]]],[11,"next_sibling","","Move the cursor to the next sibling DIE of the current one.",216,[[["self"]],[["result",["option"]],["option",["debugginginformationentry"]]]]],[11,"root","","Returns the root node of the tree.",217,[[["self"]],[["entriestreenode"],["result",["entriestreenode"]]]]],[11,"entry","","Returns the current entry in the tree.",218,[[["self"]],["debugginginformationentry"]]],[11,"children","","Create an iterator for the children of the current entry.",218,[[],["entriestreeiter"]]],[11,"next","","Returns an `EntriesTreeNode` for the next child entry.",219,[[["self"]],[["result",["option"]],["option",["entriestreenode"]]]]],[11,"new","","Construct a new `DebugTypes` instance from the data in the…",220,[[["endian"]],["self"]]],[11,"borrow","","Create a `DebugTypes` section that references the data in…",220,[[["self"],["f"]],["debugtypes"]]],[11,"units","","Iterate the type-units in this `.debug_types` section.",220,[[["self"]],["typeunitheadersiter"]]],[11,"next","","Advance the iterator to the next type unit header.",221,[[["self"]],[["result",["option"]],["option",["typeunitheader"]]]]],[11,"header","","Return the `UnitHeader` containing common unit fields.",222,[[],["unitheader"]]],[11,"size_of_header","","Return the serialized size of the type-unit header for the…",222,[[["format"]],["usize"]]],[11,"offset","","Get the offset of this compilation unit within the…",222,[[["self"]],["debugtypesoffset"]]],[11,"unit_length","","Get the length of the debugging info for this type-unit.",222,[[["self"]]]],[11,"length_including_self","","Get the length of the debugging info for this type-unit,…",222,[[["self"]]]],[11,"encoding","","Return the encoding parameters for this unit.",222,[[["self"]],["encoding"]]],[11,"version","","Get the DWARF version of the debugging info for this…",222,[[["self"]],["u16"]]],[11,"debug_abbrev_offset","","The offset into the `.debug_abbrev` section for this…",222,[[["self"]],["debugabbrevoffset"]]],[11,"address_size","","The size of addresses (in bytes) in this type-unit.",222,[[["self"]],["u8"]]],[11,"format","","Whether this type unit is encoded in 64- or 32-bit DWARF.",222,[[["self"]],["format"]]],[11,"header_size","","The serialized size of the header for this type-unit.",222,[[["self"]]]],[11,"type_signature","","Get the unique type signature for this type unit.",222,[[["self"]],["debugtypesignature"]]],[11,"type_offset","","Get the offset within this type unit where the type is…",222,[[["self"]],["unitoffset"]]],[11,"entries","","Navigate this type unit's `DebuggingInformationEntry`s.",222,[[["self"],["abbreviations"]],["entriescursor"]]],[11,"entries_at_offset","","Navigate this type unit's `DebuggingInformationEntry`s…",222,[[["unitoffset"],["self"],["abbreviations"]],[["result",["entriescursor"]],["entriescursor"]]]],[11,"entries_tree","","Navigate this type unit's `DebuggingInformationEntry`s as…",222,[[["option",["unitoffset"]],["unitoffset"],["self"],["abbreviations"]],[["result",["entriestree"]],["entriestree"]]]],[11,"entries_raw","","Read the raw data that defines the Debugging Information…",222,[[["option",["unitoffset"]],["unitoffset"],["self"],["abbreviations"]],[["entriesraw"],["result",["entriesraw"]]]]],[11,"abbreviations","","Parse this type unit's abbreviations.",222,[[["self"],["debugabbrev"]],[["result",["abbreviations"]],["abbreviations"]]]],[11,"bit_size","","The size in bits of a value for this type.",153,[[["u64"]],["u32"]]],[11,"from_encoding","","Construct a `ValueType` from the attributes of a base type…",153,[[["dwate"],["u64"]],[["valuetype"],["option",["valuetype"]]]]],[11,"from_entry","","Construct a `ValueType` from a base type DIE.",153,[[["debugginginformationentry"]],[["result",["option"]],["option",["valuetype"]]]]],[11,"value_type","","Return the `ValueType` corresponding to this `Value`.",154,[[["self"]],["valuetype"]]],[11,"parse","","Read a `Value` with the given `value_type` from a `Reader`.",154,[[["valuetype"],["reader"]],[["value"],["result",["value"]]]]],[11,"to_u64","","Convert a `Value` to a `u64`.",154,[[["u64"]],[["result",["u64"]],["u64"]]]],[11,"from_u64","","Create a `Value` with the given `value_type` from a `u64`…",154,[[["valuetype"],["u64"]],[["value"],["result",["value"]]]]],[11,"convert","","Convert a `Value` to the given `value_type`.",154,[[["valuetype"],["u64"]],[["value"],["result",["value"]]]]],[11,"reinterpret","","Reinterpret the bits in a `Value` as the given `value_type`.",154,[[["valuetype"],["u64"]],[["value"],["result",["value"]]]]],[11,"abs","","Perform an absolute value operation.",154,[[["u64"]],[["value"],["result",["value"]]]]],[11,"neg","","Perform a negation operation.",154,[[["u64"]],[["value"],["result",["value"]]]]],[11,"add","","Perform an addition operation.",154,[[["value"],["u64"]],[["value"],["result",["value"]]]]],[11,"sub","","Perform a subtraction operation.",154,[[["value"],["u64"]],[["value"],["result",["value"]]]]],[11,"mul","","Perform a multiplication operation.",154,[[["value"],["u64"]],[["value"],["result",["value"]]]]],[11,"div","","Perform a division operation.",154,[[["value"],["u64"]],[["value"],["result",["value"]]]]],[11,"rem","","Perform a remainder operation.",154,[[["value"],["u64"]],[["value"],["result",["value"]]]]],[11,"not","","Perform a bitwise not operation.",154,[[["u64"]],[["value"],["result",["value"]]]]],[11,"and","","Perform a bitwise and operation.",154,[[["value"],["u64"]],[["value"],["result",["value"]]]]],[11,"or","","Perform a bitwise or operation.",154,[[["value"],["u64"]],[["value"],["result",["value"]]]]],[11,"xor","","Perform a bitwise exclusive-or operation.",154,[[["value"],["u64"]],[["value"],["result",["value"]]]]],[11,"shl","","Perform a shift left operation.",154,[[["value"],["u64"]],[["value"],["result",["value"]]]]],[11,"shr","","Perform a logical shift right operation.",154,[[["value"],["u64"]],[["value"],["result",["value"]]]]],[11,"shra","","Perform an arithmetic shift right operation.",154,[[["value"],["u64"]],[["value"],["result",["value"]]]]],[11,"eq","","Perform the `==` relational operation.",154,[[["value"],["u64"]],[["value"],["result",["value"]]]]],[11,"ge","","Perform the `>=` relational operation.",154,[[["value"],["u64"]],[["value"],["result",["value"]]]]],[11,"gt","","Perform the `>` relational operation.",154,[[["value"],["u64"]],[["value"],["result",["value"]]]]],[11,"le","","Perform the `<= relational operation.",154,[[["value"],["u64"]],[["value"],["result",["value"]]]]],[11,"lt","","Perform the `< relational operation.",154,[[["value"],["u64"]],[["value"],["result",["value"]]]]],[11,"ne","","Perform the `!= relational operation.",154,[[["value"],["u64"]],[["value"],["result",["value"]]]]],[6,"LineNumberProgram","","Deprecated. `LineNumberProgram` has been renamed to…",null,null],[6,"StateMachine","","Deprecated. `StateMachine` has been renamed to `LineRows`.",null,null],[6,"Opcode","","Deprecated. `Opcode` has been renamed to `LineInstruction`.",null,null],[6,"OpcodesIter","","Deprecated. `OpcodesIter` has been renamed to…",null,null],[6,"LineNumberRow","","Deprecated. `LineNumberRow` has been renamed to `LineRow`.",null,null],[6,"LineNumberSequence","","Deprecated. `LineNumberSequence` has been renamed to…",null,null],[6,"LineNumberProgramHeader","","Deprecated. `LineNumberProgramHeader` has been renamed to…",null,null],[6,"IncompleteLineNumberProgram","","Deprecated. `IncompleteLineNumberProgram` has been renamed…",null,null],[6,"CompleteLineNumberProgram","","Deprecated. `CompleteLineNumberProgram` has been renamed…",null,null],[6,"EndianBuf","","`EndianBuf` has been renamed to `EndianSlice`. For ease of…",null,null],[6,"Result","","The result of a parse.",null,null],[8,"UnwindOffset","","An offset into an `UnwindSection`.",null,null],[10,"into","","Convert an `UnwindOffset<T>` into a `T`.",223,[[],["t"]]],[8,"UnwindSection","","A section holding unwind information: either…",null,null],[16,"Offset","","The offset type associated with this CFI section. Either…",224,null],[11,"entries","","Iterate over the `CommonInformationEntry`s and…",224,[[["self"],["baseaddresses"]],["cfientriesiter"]]],[11,"cie_from_offset","","Parse the `CommonInformationEntry` at the given offset.",224,[[["self"],["baseaddresses"]],[["result",["commoninformationentry"]],["commoninformationentry"]]]],[11,"partial_fde_from_offset","","Parse the `PartialFrameDescriptionEntry` at the given…",224,[[["self"],["baseaddresses"]],[["result",["partialframedescriptionentry"]],["partialframedescriptionentry"]]]],[11,"fde_from_offset","","Parse the `FrameDescriptionEntry` at the given offset.",224,[[["f"],["self"],["baseaddresses"]],[["framedescriptionentry"],["result",["framedescriptionentry"]]]]],[11,"fde_for_address","","Find the `FrameDescriptionEntry` for the given address.",224,[[["baseaddresses"],["f"],["u64"],["self"]],[["framedescriptionentry"],["result",["framedescriptionentry"]]]]],[11,"unwind_info_for_address","","Find the frame unwind information for the given address.",224,[[["baseaddresses"],["u64"],["f"],["self"],["uninitializedunwindcontext"]],[["unwindtablerow"],["result",["unwindtablerow"]]]]],[8,"ReaderOffset","","A trait for offsets with a DWARF section.",null,null],[10,"from_u8","","Convert a u8 to an offset.",225,[[["u8"]],["self"]]],[10,"from_u16","","Convert a u16 to an offset.",225,[[["u16"]],["self"]]],[10,"from_i16","","Convert an i16 to an offset.",225,[[["i16"]],["self"]]],[10,"from_u32","","Convert a u32 to an offset.",225,[[["u32"]],["self"]]],[10,"from_u64","","Convert a u64 to an offset.",225,[[["u64"]],["result"]]],[10,"into_u64","","Convert an offset to a u64.",225,[[],["u64"]]],[10,"wrapping_add","","Wrapping (modular) addition. Computes `self + other`.",225,[[],["self"]]],[10,"checked_sub","","Checked subtraction. Computes `self - other`.",225,[[],["option"]]],[8,"Reader","","A trait for reading the data from a DWARF section.",null,null],[16,"Endian","","The endianity of bytes that are read.",226,null],[16,"Offset","","The type used for offsets and lengths.",226,null],[10,"endian","","Return the endianity of bytes that are read.",226,[[["self"]]]],[10,"len","","Return the number of bytes remaining.",226,[[["self"]]]],[10,"empty","","Set the number of bytes remaining to zero.",226,[[["self"]]]],[10,"truncate","","Set the number of bytes remaining to the specified length.",226,[[["self"]],["result"]]],[10,"offset_from","","Return the offset of this reader's data relative to the…",226,[[["self"]]]],[10,"offset_id","","Return an identifier for the current reader offset.",226,[[["self"]],["readeroffsetid"]]],[10,"lookup_offset_id","","Return the offset corresponding to the given `id` if it is…",226,[[["readeroffsetid"],["self"]],["option"]]],[10,"find","","Find the index of the first occurence of the given byte.…",226,[[["self"],["u8"]],["result"]]],[10,"skip","","Discard the specified number of bytes.",226,[[["self"]],["result"]]],[10,"split","","Split a reader in two.",226,[[["self"]],["result"]]],[10,"to_slice","","Return all remaining data as a clone-on-write slice.",226,[[["self"]],[["result",["cow"]],["cow"]]]],[10,"to_string","","Convert all remaining data to a clone-on-write string.",226,[[["self"]],[["cow",["str"]],["result",["cow"]]]]],[10,"to_string_lossy","","Convert all remaining data to a clone-on-write string,…",226,[[["self"]],[["cow",["str"]],["result",["cow"]]]]],[10,"read_slice","","Read exactly `buf.len()` bytes into `buf`.",226,[[["self"]],["result"]]],[11,"read_u8_array","","Read a u8 array.",226,[[["self"]],["result"]]],[11,"is_empty","","Return true if the number of bytes remaining is zero.",226,[[["self"]],["bool"]]],[11,"read_u8","","Read a u8.",226,[[["self"]],[["result",["u8"]],["u8"]]]],[11,"read_i8","","Read an i8.",226,[[["self"]],[["i8"],["result",["i8"]]]]],[11,"read_u16","","Read a u16.",226,[[["self"]],[["u16"],["result",["u16"]]]]],[11,"read_i16","","Read an i16.",226,[[["self"]],[["result",["i16"]],["i16"]]]],[11,"read_u32","","Read a u32.",226,[[["self"]],[["u32"],["result",["u32"]]]]],[11,"read_i32","","Read an i32.",226,[[["self"]],[["result",["i32"]],["i32"]]]],[11,"read_u64","","Read a u64.",226,[[["self"]],[["result",["u64"]],["u64"]]]],[11,"read_i64","","Read an i64.",226,[[["self"]],[["result",["i64"]],["i64"]]]],[11,"read_f32","","Read a f32.",226,[[["self"]],[["f32"],["result",["f32"]]]]],[11,"read_f64","","Read a f64.",226,[[["self"]],[["result",["f64"]],["f64"]]]],[11,"read_uint","","Read an unsigned n-bytes integer u64.",226,[[["self"],["usize"]],[["result",["u64"]],["u64"]]]],[11,"read_null_terminated_slice","","Read a null-terminated slice, and return it (excluding the…",226,[[["self"]],["result"]]],[11,"read_uleb128","","Read an unsigned LEB128 encoded integer.",226,[[["self"]],[["result",["u64"]],["u64"]]]],[11,"read_uleb128_u16","","Read an unsigned LEB128 encoded u16.",226,[[["self"]],[["u16"],["result",["u16"]]]]],[11,"read_sleb128","","Read a signed LEB128 encoded integer.",226,[[["self"]],[["result",["i64"]],["i64"]]]],[11,"read_initial_length","","Read an initial length field.",226,[[["self"]],["result"]]],[11,"read_address","","Read an address-sized integer, and return it as a `u64`.",226,[[["self"],["u8"]],[["result",["u64"]],["u64"]]]],[11,"read_word","","Parse a word-sized integer according to the DWARF format.",226,[[["self"],["format"]],["result"]]],[11,"read_length","","Parse a word-sized section length according to the DWARF…",226,[[["self"],["format"]],["result"]]],[11,"read_offset","","Parse a word-sized section offset according to the DWARF…",226,[[["self"],["format"]],["result"]]],[11,"read_sized_offset","","Parse a section offset of the given size.",226,[[["self"],["u8"]],["result"]]],[8,"LineProgram","","A `LineProgram` provides access to a `LineProgramHeader`…",null,null],[10,"header","","Get a reference to the held `LineProgramHeader`.",227,[[["self"]],["lineprogramheader"]]],[10,"add_file","","Add a file to the file table if necessary.",227,[[["fileentry"],["self"]]]],[8,"Section","","A convenience trait for loading DWARF sections from object…",null,null],[10,"id","","Returns the section id for this type.",228,[[],["sectionid"]]],[11,"section_name","","Returns the ELF section name for this type.",228,[[],["str"]]],[11,"load","","Try to load the section using the given loader function.",228,[[["f"]],["result"]]],[10,"reader","","Returns the `Reader` for this section.",228,[[["self"]],["r"]]],[11,"lookup_offset_id","","Returns the `Reader` for this section.",228,[[["readeroffsetid"],["self"]],["option"]]],[11,"description","","A short description of the error.",155,[[["self"]],["str"]]],[6,"NativeEndian","gimli","The native endianity for the target platform.",null,null],[8,"Endianity","","A trait describing the endianity of some buffer.",null,null],[10,"is_big_endian","","Return true for big endian byte order.",229,[[],["bool"]]],[11,"is_little_endian","","Return true for little endian byte order.",229,[[],["bool"]]],[11,"read_u16","","Reads an unsigned 16 bit integer from `buf`.",229,[[],["u16"]]],[11,"read_u32","","Reads an unsigned 32 bit integer from `buf`.",229,[[],["u32"]]],[11,"read_u64","","Reads an unsigned 64 bit integer from `buf`.",229,[[],["u64"]]],[11,"read_uint","","Read an unsigned n-bytes integer u64.",229,[[["self"]],["u64"]]],[11,"read_i16","","Reads a signed 16 bit integer from `buf`.",229,[[],["i16"]]],[11,"read_i32","","Reads a signed 32 bit integer from `buf`.",229,[[],["i32"]]],[11,"read_i64","","Reads a signed 64 bit integer from `buf`.",229,[[],["i64"]]],[11,"read_f32","","Reads a 32 bit floating point number from `buf`.",229,[[],["f32"]]],[11,"read_f64","","Reads a 32 bit floating point number from `buf`.",229,[[],["f64"]]],[11,"write_u16","","Writes an unsigned 16 bit integer `n` to `buf`.",229,[[["u16"]]]],[11,"write_u32","","Writes an unsigned 32 bit integer `n` to `buf`.",229,[[["u32"]]]],[11,"write_u64","","Writes an unsigned 64 bit integer `n` to `buf`.",229,[[["u64"]]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"into","","",0,[[],["u"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"into","","",1,[[],["u"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"into","","",2,[[],["u"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"into","","",3,[[],["u"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"into","","",4,[[],["u"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,[[["self"],["t"]]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"into","","",5,[[],["u"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,[[["self"],["t"]]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"into","","",6,[[],["u"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,[[["self"],["t"]]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"into","","",7,[[],["u"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,[[["self"],["t"]]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"into","","",8,[[],["u"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,[[["self"],["t"]]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"into","","",9,[[],["u"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,[[["self"],["t"]]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"into","","",10,[[],["u"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,[[["self"],["t"]]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"into","","",11,[[],["u"]]],[11,"try_into","","",11,[[],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"type_id","","",11,[[["self"]],["typeid"]]],[11,"to_owned","","",11,[[["self"]],["t"]]],[11,"clone_into","","",11,[[["self"],["t"]]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"into","","",12,[[],["u"]]],[11,"try_into","","",12,[[],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"type_id","","",12,[[["self"]],["typeid"]]],[11,"to_owned","","",12,[[["self"]],["t"]]],[11,"clone_into","","",12,[[["self"],["t"]]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"into","","",13,[[],["u"]]],[11,"try_into","","",13,[[],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"type_id","","",13,[[["self"]],["typeid"]]],[11,"to_owned","","",13,[[["self"]],["t"]]],[11,"clone_into","","",13,[[["self"],["t"]]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"into","","",14,[[],["u"]]],[11,"try_into","","",14,[[],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"type_id","","",14,[[["self"]],["typeid"]]],[11,"to_owned","","",14,[[["self"]],["t"]]],[11,"clone_into","","",14,[[["self"],["t"]]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"into","","",15,[[],["u"]]],[11,"try_into","","",15,[[],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"type_id","","",15,[[["self"]],["typeid"]]],[11,"to_owned","","",15,[[["self"]],["t"]]],[11,"clone_into","","",15,[[["self"],["t"]]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"into","","",16,[[],["u"]]],[11,"try_into","","",16,[[],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"type_id","","",16,[[["self"]],["typeid"]]],[11,"to_owned","","",16,[[["self"]],["t"]]],[11,"clone_into","","",16,[[["self"],["t"]]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"into","","",17,[[],["u"]]],[11,"try_into","","",17,[[],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"type_id","","",17,[[["self"]],["typeid"]]],[11,"to_owned","","",17,[[["self"]],["t"]]],[11,"clone_into","","",17,[[["self"],["t"]]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"into","","",18,[[],["u"]]],[11,"try_into","","",18,[[],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"type_id","","",18,[[["self"]],["typeid"]]],[11,"to_owned","","",18,[[["self"]],["t"]]],[11,"clone_into","","",18,[[["self"],["t"]]]],[11,"from","","",19,[[["t"]],["t"]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"into","","",19,[[],["u"]]],[11,"try_into","","",19,[[],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"type_id","","",19,[[["self"]],["typeid"]]],[11,"to_owned","","",19,[[["self"]],["t"]]],[11,"clone_into","","",19,[[["self"],["t"]]]],[11,"from","","",20,[[["t"]],["t"]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"into","","",20,[[],["u"]]],[11,"try_into","","",20,[[],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"type_id","","",20,[[["self"]],["typeid"]]],[11,"to_owned","","",20,[[["self"]],["t"]]],[11,"clone_into","","",20,[[["self"],["t"]]]],[11,"from","","",21,[[["t"]],["t"]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"into","","",21,[[],["u"]]],[11,"try_into","","",21,[[],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"type_id","","",21,[[["self"]],["typeid"]]],[11,"to_owned","","",21,[[["self"]],["t"]]],[11,"clone_into","","",21,[[["self"],["t"]]]],[11,"from","","",22,[[],["t"]]],[11,"from","","",22,[[["t"]],["t"]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"into","","",22,[[],["u"]]],[11,"try_into","","",22,[[],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"type_id","","",22,[[["self"]],["typeid"]]],[11,"to_owned","","",22,[[["self"]],["t"]]],[11,"clone_into","","",22,[[["self"],["t"]]]],[11,"from","","",23,[[],["t"]]],[11,"from","","",23,[[["t"]],["t"]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"into","","",23,[[],["u"]]],[11,"try_into","","",23,[[],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"type_id","","",23,[[["self"]],["typeid"]]],[11,"to_owned","","",23,[[["self"]],["t"]]],[11,"clone_into","","",23,[[["self"],["t"]]]],[11,"from","","",28,[[["t"]],["t"]]],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"into","","",28,[[],["u"]]],[11,"try_into","","",28,[[],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"type_id","","",28,[[["self"]],["typeid"]]],[11,"to_owned","","",28,[[["self"]],["t"]]],[11,"clone_into","","",28,[[["self"],["t"]]]],[11,"from","","",29,[[["t"]],["t"]]],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"into","","",29,[[],["u"]]],[11,"try_into","","",29,[[],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"type_id","","",29,[[["self"]],["typeid"]]],[11,"to_owned","","",29,[[["self"]],["t"]]],[11,"clone_into","","",29,[[["self"],["t"]]]],[11,"from","","",30,[[["t"]],["t"]]],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"into","","",30,[[],["u"]]],[11,"try_into","","",30,[[],["result"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"type_id","","",30,[[["self"]],["typeid"]]],[11,"to_owned","","",30,[[["self"]],["t"]]],[11,"clone_into","","",30,[[["self"],["t"]]]],[11,"from","","",230,[[["t"]],["t"]]],[11,"try_from","","",230,[[["u"]],["result"]]],[11,"into","","",230,[[],["u"]]],[11,"try_into","","",230,[[],["result"]]],[11,"borrow","","",230,[[["self"]],["t"]]],[11,"borrow_mut","","",230,[[["self"]],["t"]]],[11,"type_id","","",230,[[["self"]],["typeid"]]],[11,"to_owned","","",230,[[["self"]],["t"]]],[11,"clone_into","","",230,[[["self"],["t"]]]],[11,"from","","",231,[[["t"]],["t"]]],[11,"try_from","","",231,[[["u"]],["result"]]],[11,"into","","",231,[[],["u"]]],[11,"try_into","","",231,[[],["result"]]],[11,"borrow","","",231,[[["self"]],["t"]]],[11,"borrow_mut","","",231,[[["self"]],["t"]]],[11,"type_id","","",231,[[["self"]],["typeid"]]],[11,"to_owned","","",231,[[["self"]],["t"]]],[11,"clone_into","","",231,[[["self"],["t"]]]],[11,"from","","",24,[[["t"]],["t"]]],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"into","","",24,[[],["u"]]],[11,"try_into","","",24,[[],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"type_id","","",24,[[["self"]],["typeid"]]],[11,"to_owned","","",24,[[["self"]],["t"]]],[11,"clone_into","","",24,[[["self"],["t"]]]],[11,"from","","",25,[[["t"]],["t"]]],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"into","","",25,[[],["u"]]],[11,"try_into","","",25,[[],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"type_id","","",25,[[["self"]],["typeid"]]],[11,"to_owned","","",25,[[["self"]],["t"]]],[11,"clone_into","","",25,[[["self"],["t"]]]],[11,"from","","",26,[[["t"]],["t"]]],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"into","","",26,[[],["u"]]],[11,"try_into","","",26,[[],["result"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"type_id","","",26,[[["self"]],["typeid"]]],[11,"to_owned","","",26,[[["self"]],["t"]]],[11,"clone_into","","",26,[[["self"],["t"]]]],[11,"from","","",27,[[["t"]],["t"]]],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"into","","",27,[[],["u"]]],[11,"try_into","","",27,[[],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"type_id","","",27,[[["self"]],["typeid"]]],[11,"to_owned","","",27,[[["self"]],["t"]]],[11,"clone_into","","",27,[[["self"],["t"]]]],[11,"from","gimli::constants","",31,[[["t"]],["t"]]],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"into","","",31,[[],["u"]]],[11,"try_into","","",31,[[],["result"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"type_id","","",31,[[["self"]],["typeid"]]],[11,"to_owned","","",31,[[["self"]],["t"]]],[11,"clone_into","","",31,[[["self"],["t"]]]],[11,"to_string","","",31,[[["self"]],["string"]]],[11,"from","","",32,[[["t"]],["t"]]],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"into","","",32,[[],["u"]]],[11,"try_into","","",32,[[],["result"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"type_id","","",32,[[["self"]],["typeid"]]],[11,"to_owned","","",32,[[["self"]],["t"]]],[11,"clone_into","","",32,[[["self"],["t"]]]],[11,"to_string","","",32,[[["self"]],["string"]]],[11,"from","","",33,[[["t"]],["t"]]],[11,"try_from","","",33,[[["u"]],["result"]]],[11,"into","","",33,[[],["u"]]],[11,"try_into","","",33,[[],["result"]]],[11,"borrow","","",33,[[["self"]],["t"]]],[11,"borrow_mut","","",33,[[["self"]],["t"]]],[11,"type_id","","",33,[[["self"]],["typeid"]]],[11,"to_owned","","",33,[[["self"]],["t"]]],[11,"clone_into","","",33,[[["self"],["t"]]]],[11,"to_string","","",33,[[["self"]],["string"]]],[11,"from","","",34,[[["t"]],["t"]]],[11,"try_from","","",34,[[["u"]],["result"]]],[11,"into","","",34,[[],["u"]]],[11,"try_into","","",34,[[],["result"]]],[11,"borrow","","",34,[[["self"]],["t"]]],[11,"borrow_mut","","",34,[[["self"]],["t"]]],[11,"type_id","","",34,[[["self"]],["typeid"]]],[11,"to_owned","","",34,[[["self"]],["t"]]],[11,"clone_into","","",34,[[["self"],["t"]]]],[11,"to_string","","",34,[[["self"]],["string"]]],[11,"from","","",35,[[["t"]],["t"]]],[11,"try_from","","",35,[[["u"]],["result"]]],[11,"into","","",35,[[],["u"]]],[11,"try_into","","",35,[[],["result"]]],[11,"borrow","","",35,[[["self"]],["t"]]],[11,"borrow_mut","","",35,[[["self"]],["t"]]],[11,"type_id","","",35,[[["self"]],["typeid"]]],[11,"to_owned","","",35,[[["self"]],["t"]]],[11,"clone_into","","",35,[[["self"],["t"]]]],[11,"to_string","","",35,[[["self"]],["string"]]],[11,"from","","",36,[[["t"]],["t"]]],[11,"try_from","","",36,[[["u"]],["result"]]],[11,"into","","",36,[[],["u"]]],[11,"try_into","","",36,[[],["result"]]],[11,"borrow","","",36,[[["self"]],["t"]]],[11,"borrow_mut","","",36,[[["self"]],["t"]]],[11,"type_id","","",36,[[["self"]],["typeid"]]],[11,"to_owned","","",36,[[["self"]],["t"]]],[11,"clone_into","","",36,[[["self"],["t"]]]],[11,"to_string","","",36,[[["self"]],["string"]]],[11,"from","","",37,[[["t"]],["t"]]],[11,"try_from","","",37,[[["u"]],["result"]]],[11,"into","","",37,[[],["u"]]],[11,"try_into","","",37,[[],["result"]]],[11,"borrow","","",37,[[["self"]],["t"]]],[11,"borrow_mut","","",37,[[["self"]],["t"]]],[11,"type_id","","",37,[[["self"]],["typeid"]]],[11,"to_owned","","",37,[[["self"]],["t"]]],[11,"clone_into","","",37,[[["self"],["t"]]]],[11,"to_string","","",37,[[["self"]],["string"]]],[11,"from","","",38,[[["t"]],["t"]]],[11,"try_from","","",38,[[["u"]],["result"]]],[11,"into","","",38,[[],["u"]]],[11,"try_into","","",38,[[],["result"]]],[11,"borrow","","",38,[[["self"]],["t"]]],[11,"borrow_mut","","",38,[[["self"]],["t"]]],[11,"type_id","","",38,[[["self"]],["typeid"]]],[11,"to_owned","","",38,[[["self"]],["t"]]],[11,"clone_into","","",38,[[["self"],["t"]]]],[11,"to_string","","",38,[[["self"]],["string"]]],[11,"from","","",39,[[["t"]],["t"]]],[11,"try_from","","",39,[[["u"]],["result"]]],[11,"into","","",39,[[],["u"]]],[11,"try_into","","",39,[[],["result"]]],[11,"borrow","","",39,[[["self"]],["t"]]],[11,"borrow_mut","","",39,[[["self"]],["t"]]],[11,"type_id","","",39,[[["self"]],["typeid"]]],[11,"to_owned","","",39,[[["self"]],["t"]]],[11,"clone_into","","",39,[[["self"],["t"]]]],[11,"to_string","","",39,[[["self"]],["string"]]],[11,"from","","",40,[[["t"]],["t"]]],[11,"try_from","","",40,[[["u"]],["result"]]],[11,"into","","",40,[[],["u"]]],[11,"try_into","","",40,[[],["result"]]],[11,"borrow","","",40,[[["self"]],["t"]]],[11,"borrow_mut","","",40,[[["self"]],["t"]]],[11,"type_id","","",40,[[["self"]],["typeid"]]],[11,"to_owned","","",40,[[["self"]],["t"]]],[11,"clone_into","","",40,[[["self"],["t"]]]],[11,"to_string","","",40,[[["self"]],["string"]]],[11,"from","","",41,[[["t"]],["t"]]],[11,"try_from","","",41,[[["u"]],["result"]]],[11,"into","","",41,[[],["u"]]],[11,"try_into","","",41,[[],["result"]]],[11,"borrow","","",41,[[["self"]],["t"]]],[11,"borrow_mut","","",41,[[["self"]],["t"]]],[11,"type_id","","",41,[[["self"]],["typeid"]]],[11,"to_owned","","",41,[[["self"]],["t"]]],[11,"clone_into","","",41,[[["self"],["t"]]]],[11,"to_string","","",41,[[["self"]],["string"]]],[11,"from","","",42,[[["t"]],["t"]]],[11,"try_from","","",42,[[["u"]],["result"]]],[11,"into","","",42,[[],["u"]]],[11,"try_into","","",42,[[],["result"]]],[11,"borrow","","",42,[[["self"]],["t"]]],[11,"borrow_mut","","",42,[[["self"]],["t"]]],[11,"type_id","","",42,[[["self"]],["typeid"]]],[11,"to_owned","","",42,[[["self"]],["t"]]],[11,"clone_into","","",42,[[["self"],["t"]]]],[11,"to_string","","",42,[[["self"]],["string"]]],[11,"from","","",43,[[["t"]],["t"]]],[11,"try_from","","",43,[[["u"]],["result"]]],[11,"into","","",43,[[],["u"]]],[11,"try_into","","",43,[[],["result"]]],[11,"borrow","","",43,[[["self"]],["t"]]],[11,"borrow_mut","","",43,[[["self"]],["t"]]],[11,"type_id","","",43,[[["self"]],["typeid"]]],[11,"to_owned","","",43,[[["self"]],["t"]]],[11,"clone_into","","",43,[[["self"],["t"]]]],[11,"to_string","","",43,[[["self"]],["string"]]],[11,"from","","",44,[[["t"]],["t"]]],[11,"try_from","","",44,[[["u"]],["result"]]],[11,"into","","",44,[[],["u"]]],[11,"try_into","","",44,[[],["result"]]],[11,"borrow","","",44,[[["self"]],["t"]]],[11,"borrow_mut","","",44,[[["self"]],["t"]]],[11,"type_id","","",44,[[["self"]],["typeid"]]],[11,"to_owned","","",44,[[["self"]],["t"]]],[11,"clone_into","","",44,[[["self"],["t"]]]],[11,"to_string","","",44,[[["self"]],["string"]]],[11,"from","","",45,[[["t"]],["t"]]],[11,"try_from","","",45,[[["u"]],["result"]]],[11,"into","","",45,[[],["u"]]],[11,"try_into","","",45,[[],["result"]]],[11,"borrow","","",45,[[["self"]],["t"]]],[11,"borrow_mut","","",45,[[["self"]],["t"]]],[11,"type_id","","",45,[[["self"]],["typeid"]]],[11,"to_owned","","",45,[[["self"]],["t"]]],[11,"clone_into","","",45,[[["self"],["t"]]]],[11,"to_string","","",45,[[["self"]],["string"]]],[11,"from","","",46,[[["t"]],["t"]]],[11,"try_from","","",46,[[["u"]],["result"]]],[11,"into","","",46,[[],["u"]]],[11,"try_into","","",46,[[],["result"]]],[11,"borrow","","",46,[[["self"]],["t"]]],[11,"borrow_mut","","",46,[[["self"]],["t"]]],[11,"type_id","","",46,[[["self"]],["typeid"]]],[11,"to_owned","","",46,[[["self"]],["t"]]],[11,"clone_into","","",46,[[["self"],["t"]]]],[11,"to_string","","",46,[[["self"]],["string"]]],[11,"from","","",47,[[["t"]],["t"]]],[11,"try_from","","",47,[[["u"]],["result"]]],[11,"into","","",47,[[],["u"]]],[11,"try_into","","",47,[[],["result"]]],[11,"borrow","","",47,[[["self"]],["t"]]],[11,"borrow_mut","","",47,[[["self"]],["t"]]],[11,"type_id","","",47,[[["self"]],["typeid"]]],[11,"to_owned","","",47,[[["self"]],["t"]]],[11,"clone_into","","",47,[[["self"],["t"]]]],[11,"to_string","","",47,[[["self"]],["string"]]],[11,"from","","",48,[[["t"]],["t"]]],[11,"try_from","","",48,[[["u"]],["result"]]],[11,"into","","",48,[[],["u"]]],[11,"try_into","","",48,[[],["result"]]],[11,"borrow","","",48,[[["self"]],["t"]]],[11,"borrow_mut","","",48,[[["self"]],["t"]]],[11,"type_id","","",48,[[["self"]],["typeid"]]],[11,"to_owned","","",48,[[["self"]],["t"]]],[11,"clone_into","","",48,[[["self"],["t"]]]],[11,"to_string","","",48,[[["self"]],["string"]]],[11,"from","","",49,[[["t"]],["t"]]],[11,"try_from","","",49,[[["u"]],["result"]]],[11,"into","","",49,[[],["u"]]],[11,"try_into","","",49,[[],["result"]]],[11,"borrow","","",49,[[["self"]],["t"]]],[11,"borrow_mut","","",49,[[["self"]],["t"]]],[11,"type_id","","",49,[[["self"]],["typeid"]]],[11,"to_owned","","",49,[[["self"]],["t"]]],[11,"clone_into","","",49,[[["self"],["t"]]]],[11,"to_string","","",49,[[["self"]],["string"]]],[11,"from","","",50,[[["t"]],["t"]]],[11,"try_from","","",50,[[["u"]],["result"]]],[11,"into","","",50,[[],["u"]]],[11,"try_into","","",50,[[],["result"]]],[11,"borrow","","",50,[[["self"]],["t"]]],[11,"borrow_mut","","",50,[[["self"]],["t"]]],[11,"type_id","","",50,[[["self"]],["typeid"]]],[11,"to_owned","","",50,[[["self"]],["t"]]],[11,"clone_into","","",50,[[["self"],["t"]]]],[11,"to_string","","",50,[[["self"]],["string"]]],[11,"from","","",51,[[["t"]],["t"]]],[11,"try_from","","",51,[[["u"]],["result"]]],[11,"into","","",51,[[],["u"]]],[11,"try_into","","",51,[[],["result"]]],[11,"borrow","","",51,[[["self"]],["t"]]],[11,"borrow_mut","","",51,[[["self"]],["t"]]],[11,"type_id","","",51,[[["self"]],["typeid"]]],[11,"to_owned","","",51,[[["self"]],["t"]]],[11,"clone_into","","",51,[[["self"],["t"]]]],[11,"to_string","","",51,[[["self"]],["string"]]],[11,"from","","",52,[[["t"]],["t"]]],[11,"try_from","","",52,[[["u"]],["result"]]],[11,"into","","",52,[[],["u"]]],[11,"try_into","","",52,[[],["result"]]],[11,"borrow","","",52,[[["self"]],["t"]]],[11,"borrow_mut","","",52,[[["self"]],["t"]]],[11,"type_id","","",52,[[["self"]],["typeid"]]],[11,"to_owned","","",52,[[["self"]],["t"]]],[11,"clone_into","","",52,[[["self"],["t"]]]],[11,"to_string","","",52,[[["self"]],["string"]]],[11,"from","","",53,[[["t"]],["t"]]],[11,"try_from","","",53,[[["u"]],["result"]]],[11,"into","","",53,[[],["u"]]],[11,"try_into","","",53,[[],["result"]]],[11,"borrow","","",53,[[["self"]],["t"]]],[11,"borrow_mut","","",53,[[["self"]],["t"]]],[11,"type_id","","",53,[[["self"]],["typeid"]]],[11,"to_owned","","",53,[[["self"]],["t"]]],[11,"clone_into","","",53,[[["self"],["t"]]]],[11,"to_string","","",53,[[["self"]],["string"]]],[11,"from","","",54,[[["t"]],["t"]]],[11,"try_from","","",54,[[["u"]],["result"]]],[11,"into","","",54,[[],["u"]]],[11,"try_into","","",54,[[],["result"]]],[11,"borrow","","",54,[[["self"]],["t"]]],[11,"borrow_mut","","",54,[[["self"]],["t"]]],[11,"type_id","","",54,[[["self"]],["typeid"]]],[11,"to_owned","","",54,[[["self"]],["t"]]],[11,"clone_into","","",54,[[["self"],["t"]]]],[11,"to_string","","",54,[[["self"]],["string"]]],[11,"from","","",55,[[["t"]],["t"]]],[11,"try_from","","",55,[[["u"]],["result"]]],[11,"into","","",55,[[],["u"]]],[11,"try_into","","",55,[[],["result"]]],[11,"borrow","","",55,[[["self"]],["t"]]],[11,"borrow_mut","","",55,[[["self"]],["t"]]],[11,"type_id","","",55,[[["self"]],["typeid"]]],[11,"to_owned","","",55,[[["self"]],["t"]]],[11,"clone_into","","",55,[[["self"],["t"]]]],[11,"to_string","","",55,[[["self"]],["string"]]],[11,"from","","",56,[[["t"]],["t"]]],[11,"try_from","","",56,[[["u"]],["result"]]],[11,"into","","",56,[[],["u"]]],[11,"try_into","","",56,[[],["result"]]],[11,"borrow","","",56,[[["self"]],["t"]]],[11,"borrow_mut","","",56,[[["self"]],["t"]]],[11,"type_id","","",56,[[["self"]],["typeid"]]],[11,"to_owned","","",56,[[["self"]],["t"]]],[11,"clone_into","","",56,[[["self"],["t"]]]],[11,"to_string","","",56,[[["self"]],["string"]]],[11,"from","","",57,[[["t"]],["t"]]],[11,"try_from","","",57,[[["u"]],["result"]]],[11,"into","","",57,[[],["u"]]],[11,"try_into","","",57,[[],["result"]]],[11,"borrow","","",57,[[["self"]],["t"]]],[11,"borrow_mut","","",57,[[["self"]],["t"]]],[11,"type_id","","",57,[[["self"]],["typeid"]]],[11,"to_owned","","",57,[[["self"]],["t"]]],[11,"clone_into","","",57,[[["self"],["t"]]]],[11,"to_string","","",57,[[["self"]],["string"]]],[11,"from","","",58,[[["t"]],["t"]]],[11,"try_from","","",58,[[["u"]],["result"]]],[11,"into","","",58,[[],["u"]]],[11,"try_into","","",58,[[],["result"]]],[11,"borrow","","",58,[[["self"]],["t"]]],[11,"borrow_mut","","",58,[[["self"]],["t"]]],[11,"type_id","","",58,[[["self"]],["typeid"]]],[11,"to_owned","","",58,[[["self"]],["t"]]],[11,"clone_into","","",58,[[["self"],["t"]]]],[11,"to_string","","",58,[[["self"]],["string"]]],[11,"from","","",59,[[["t"]],["t"]]],[11,"try_from","","",59,[[["u"]],["result"]]],[11,"into","","",59,[[],["u"]]],[11,"try_into","","",59,[[],["result"]]],[11,"borrow","","",59,[[["self"]],["t"]]],[11,"borrow_mut","","",59,[[["self"]],["t"]]],[11,"type_id","","",59,[[["self"]],["typeid"]]],[11,"to_owned","","",59,[[["self"]],["t"]]],[11,"clone_into","","",59,[[["self"],["t"]]]],[11,"to_string","","",59,[[["self"]],["string"]]],[11,"from","gimli::read","",156,[[],["t"]]],[11,"from","","",156,[[["t"]],["t"]]],[11,"try_from","","",156,[[["u"]],["result"]]],[11,"into","","",156,[[],["u"]]],[11,"try_into","","",156,[[],["result"]]],[11,"borrow","","",156,[[["self"]],["t"]]],[11,"borrow_mut","","",156,[[["self"]],["t"]]],[11,"type_id","","",156,[[["self"]],["typeid"]]],[11,"to_owned","","",156,[[["self"]],["t"]]],[11,"clone_into","","",156,[[["self"],["t"]]]],[11,"from","","",157,[[],["t"]]],[11,"from","","",157,[[["t"]],["t"]]],[11,"try_from","","",157,[[["u"]],["result"]]],[11,"into","","",157,[[],["u"]]],[11,"try_into","","",157,[[],["result"]]],[11,"borrow","","",157,[[["self"]],["t"]]],[11,"borrow_mut","","",157,[[["self"]],["t"]]],[11,"type_id","","",157,[[["self"]],["typeid"]]],[11,"to_owned","","",157,[[["self"]],["t"]]],[11,"clone_into","","",157,[[["self"],["t"]]]],[11,"from","","",158,[[],["t"]]],[11,"from","","",158,[[["t"]],["t"]]],[11,"try_from","","",158,[[["u"]],["result"]]],[11,"into","","",158,[[],["u"]]],[11,"try_into","","",158,[[],["result"]]],[11,"borrow","","",158,[[["self"]],["t"]]],[11,"borrow_mut","","",158,[[["self"]],["t"]]],[11,"type_id","","",158,[[["self"]],["typeid"]]],[11,"to_owned","","",158,[[["self"]],["t"]]],[11,"clone_into","","",158,[[["self"],["t"]]]],[11,"from","","",159,[[["t"]],["t"]]],[11,"try_from","","",159,[[["u"]],["result"]]],[11,"into","","",159,[[],["u"]]],[11,"try_into","","",159,[[],["result"]]],[11,"borrow","","",159,[[["self"]],["t"]]],[11,"borrow_mut","","",159,[[["self"]],["t"]]],[11,"type_id","","",159,[[["self"]],["typeid"]]],[11,"to_owned","","",159,[[["self"]],["t"]]],[11,"clone_into","","",159,[[["self"],["t"]]]],[11,"from","","",160,[[["t"]],["t"]]],[11,"try_from","","",160,[[["u"]],["result"]]],[11,"into","","",160,[[],["u"]]],[11,"try_into","","",160,[[],["result"]]],[11,"borrow","","",160,[[["self"]],["t"]]],[11,"borrow_mut","","",160,[[["self"]],["t"]]],[11,"type_id","","",160,[[["self"]],["typeid"]]],[11,"to_owned","","",160,[[["self"]],["t"]]],[11,"clone_into","","",160,[[["self"],["t"]]]],[11,"from","","",161,[[],["t"]]],[11,"from","","",161,[[["t"]],["t"]]],[11,"try_from","","",161,[[["u"]],["result"]]],[11,"into","","",161,[[],["u"]]],[11,"try_into","","",161,[[],["result"]]],[11,"borrow","","",161,[[["self"]],["t"]]],[11,"borrow_mut","","",161,[[["self"]],["t"]]],[11,"type_id","","",161,[[["self"]],["typeid"]]],[11,"to_owned","","",161,[[["self"]],["t"]]],[11,"clone_into","","",161,[[["self"],["t"]]]],[11,"from","","",60,[[["t"]],["t"]]],[11,"try_from","","",60,[[["u"]],["result"]]],[11,"into","","",60,[[],["u"]]],[11,"try_into","","",60,[[],["result"]]],[11,"borrow","","",60,[[["self"]],["t"]]],[11,"borrow_mut","","",60,[[["self"]],["t"]]],[11,"type_id","","",60,[[["self"]],["typeid"]]],[11,"to_owned","","",60,[[["self"]],["t"]]],[11,"clone_into","","",60,[[["self"],["t"]]]],[11,"from","","",61,[[["t"]],["t"]]],[11,"try_from","","",61,[[["u"]],["result"]]],[11,"into","","",61,[[],["u"]]],[11,"try_into","","",61,[[],["result"]]],[11,"borrow","","",61,[[["self"]],["t"]]],[11,"borrow_mut","","",61,[[["self"]],["t"]]],[11,"type_id","","",61,[[["self"]],["typeid"]]],[11,"to_owned","","",61,[[["self"]],["t"]]],[11,"clone_into","","",61,[[["self"],["t"]]]],[11,"from","","",162,[[["t"]],["t"]]],[11,"try_from","","",162,[[["u"]],["result"]]],[11,"into","","",162,[[],["u"]]],[11,"try_into","","",162,[[],["result"]]],[11,"borrow","","",162,[[["self"]],["t"]]],[11,"borrow_mut","","",162,[[["self"]],["t"]]],[11,"type_id","","",162,[[["self"]],["typeid"]]],[11,"to_owned","","",162,[[["self"]],["t"]]],[11,"clone_into","","",162,[[["self"],["t"]]]],[11,"from","","",232,[[["t"]],["t"]]],[11,"try_from","","",232,[[["u"]],["result"]]],[11,"into","","",232,[[],["u"]]],[11,"try_into","","",232,[[],["result"]]],[11,"borrow","","",232,[[["self"]],["t"]]],[11,"borrow_mut","","",232,[[["self"]],["t"]]],[11,"type_id","","",232,[[["self"]],["typeid"]]],[11,"to_owned","","",232,[[["self"]],["t"]]],[11,"clone_into","","",232,[[["self"],["t"]]]],[11,"from","","",163,[[["t"]],["t"]]],[11,"try_from","","",163,[[["u"]],["result"]]],[11,"into","","",163,[[],["u"]]],[11,"try_into","","",163,[[],["result"]]],[11,"borrow","","",163,[[["self"]],["t"]]],[11,"borrow_mut","","",163,[[["self"]],["t"]]],[11,"type_id","","",163,[[["self"]],["typeid"]]],[11,"to_owned","","",163,[[["self"]],["t"]]],[11,"clone_into","","",163,[[["self"],["t"]]]],[11,"from","","",164,[[["t"]],["t"]]],[11,"try_from","","",164,[[["u"]],["result"]]],[11,"into","","",164,[[],["u"]]],[11,"try_into","","",164,[[],["result"]]],[11,"borrow","","",164,[[["self"]],["t"]]],[11,"borrow_mut","","",164,[[["self"]],["t"]]],[11,"type_id","","",164,[[["self"]],["typeid"]]],[11,"to_owned","","",164,[[["self"]],["t"]]],[11,"clone_into","","",164,[[["self"],["t"]]]],[11,"from","","",165,[[["t"]],["t"]]],[11,"try_from","","",165,[[["u"]],["result"]]],[11,"into","","",165,[[],["u"]]],[11,"try_into","","",165,[[],["result"]]],[11,"borrow","","",165,[[["self"]],["t"]]],[11,"borrow_mut","","",165,[[["self"]],["t"]]],[11,"type_id","","",165,[[["self"]],["typeid"]]],[11,"to_owned","","",165,[[["self"]],["t"]]],[11,"clone_into","","",165,[[["self"],["t"]]]],[11,"from","","",166,[[["t"]],["t"]]],[11,"try_from","","",166,[[["u"]],["result"]]],[11,"into","","",166,[[],["u"]]],[11,"try_into","","",166,[[],["result"]]],[11,"borrow","","",166,[[["self"]],["t"]]],[11,"borrow_mut","","",166,[[["self"]],["t"]]],[11,"type_id","","",166,[[["self"]],["typeid"]]],[11,"to_owned","","",166,[[["self"]],["t"]]],[11,"clone_into","","",166,[[["self"],["t"]]]],[11,"from","","",233,[[["t"]],["t"]]],[11,"try_from","","",233,[[["u"]],["result"]]],[11,"into","","",233,[[],["u"]]],[11,"try_into","","",233,[[],["result"]]],[11,"borrow","","",233,[[["self"]],["t"]]],[11,"borrow_mut","","",233,[[["self"]],["t"]]],[11,"type_id","","",233,[[["self"]],["typeid"]]],[11,"to_owned","","",233,[[["self"]],["t"]]],[11,"clone_into","","",233,[[["self"],["t"]]]],[11,"from","","",167,[[["t"]],["t"]]],[11,"try_from","","",167,[[["u"]],["result"]]],[11,"into","","",167,[[],["u"]]],[11,"try_into","","",167,[[],["result"]]],[11,"borrow","","",167,[[["self"]],["t"]]],[11,"borrow_mut","","",167,[[["self"]],["t"]]],[11,"type_id","","",167,[[["self"]],["typeid"]]],[11,"from","","",234,[[["t"]],["t"]]],[11,"into_iter","","",234,[[],["i"]]],[11,"try_from","","",234,[[["u"]],["result"]]],[11,"into","","",234,[[],["u"]]],[11,"try_into","","",234,[[],["result"]]],[11,"borrow","","",234,[[["self"]],["t"]]],[11,"borrow_mut","","",234,[[["self"]],["t"]]],[11,"type_id","","",234,[[["self"]],["typeid"]]],[11,"to_owned","","",234,[[["self"]],["t"]]],[11,"clone_into","","",234,[[["self"],["t"]]]],[11,"from","","",168,[[["t"]],["t"]]],[11,"try_from","","",168,[[["u"]],["result"]]],[11,"into","","",168,[[],["u"]]],[11,"try_into","","",168,[[],["result"]]],[11,"borrow","","",168,[[["self"]],["t"]]],[11,"borrow_mut","","",168,[[["self"]],["t"]]],[11,"type_id","","",168,[[["self"]],["typeid"]]],[11,"to_owned","","",168,[[["self"]],["t"]]],[11,"clone_into","","",168,[[["self"],["t"]]]],[11,"from","","",169,[[["t"]],["t"]]],[11,"try_from","","",169,[[["u"]],["result"]]],[11,"into","","",169,[[],["u"]]],[11,"try_into","","",169,[[],["result"]]],[11,"borrow","","",169,[[["self"]],["t"]]],[11,"borrow_mut","","",169,[[["self"]],["t"]]],[11,"type_id","","",169,[[["self"]],["typeid"]]],[11,"to_owned","","",169,[[["self"]],["t"]]],[11,"clone_into","","",169,[[["self"],["t"]]]],[11,"from","","",62,[[["t"]],["t"]]],[11,"try_from","","",62,[[["u"]],["result"]]],[11,"into","","",62,[[],["u"]]],[11,"try_into","","",62,[[],["result"]]],[11,"borrow","","",62,[[["self"]],["t"]]],[11,"borrow_mut","","",62,[[["self"]],["t"]]],[11,"type_id","","",62,[[["self"]],["typeid"]]],[11,"from","","",63,[[["t"]],["t"]]],[11,"try_from","","",63,[[["u"]],["result"]]],[11,"into","","",63,[[],["u"]]],[11,"try_into","","",63,[[],["result"]]],[11,"borrow","","",63,[[["self"]],["t"]]],[11,"borrow_mut","","",63,[[["self"]],["t"]]],[11,"type_id","","",63,[[["self"]],["typeid"]]],[11,"from","","",170,[[["t"]],["t"]]],[11,"try_from","","",170,[[["u"]],["result"]]],[11,"into","","",170,[[],["u"]]],[11,"try_into","","",170,[[],["result"]]],[11,"borrow","","",170,[[["self"]],["t"]]],[11,"borrow_mut","","",170,[[["self"]],["t"]]],[11,"type_id","","",170,[[["self"]],["typeid"]]],[11,"from","","",171,[[["t"]],["t"]]],[11,"try_from","","",171,[[["u"]],["result"]]],[11,"into","","",171,[[],["u"]]],[11,"try_into","","",171,[[],["result"]]],[11,"borrow","","",171,[[["self"]],["t"]]],[11,"borrow_mut","","",171,[[["self"]],["t"]]],[11,"type_id","","",171,[[["self"]],["typeid"]]],[11,"to_owned","","",171,[[["self"]],["t"]]],[11,"clone_into","","",171,[[["self"],["t"]]]],[11,"from","","",64,[[["t"]],["t"]]],[11,"try_from","","",64,[[["u"]],["result"]]],[11,"into","","",64,[[],["u"]]],[11,"try_into","","",64,[[],["result"]]],[11,"borrow","","",64,[[["self"]],["t"]]],[11,"borrow_mut","","",64,[[["self"]],["t"]]],[11,"type_id","","",64,[[["self"]],["typeid"]]],[11,"to_owned","","",64,[[["self"]],["t"]]],[11,"clone_into","","",64,[[["self"],["t"]]]],[11,"from","","",172,[[],["t"]]],[11,"from","","",172,[[["t"]],["t"]]],[11,"try_from","","",172,[[["u"]],["result"]]],[11,"into","","",172,[[],["u"]]],[11,"try_into","","",172,[[],["result"]]],[11,"borrow","","",172,[[["self"]],["t"]]],[11,"borrow_mut","","",172,[[["self"]],["t"]]],[11,"type_id","","",172,[[["self"]],["typeid"]]],[11,"to_owned","","",172,[[["self"]],["t"]]],[11,"clone_into","","",172,[[["self"],["t"]]]],[11,"from","","",173,[[["t"]],["t"]]],[11,"try_from","","",173,[[["u"]],["result"]]],[11,"into","","",173,[[],["u"]]],[11,"try_into","","",173,[[],["result"]]],[11,"borrow","","",173,[[["self"]],["t"]]],[11,"borrow_mut","","",173,[[["self"]],["t"]]],[11,"type_id","","",173,[[["self"]],["typeid"]]],[11,"to_owned","","",173,[[["self"]],["t"]]],[11,"clone_into","","",173,[[["self"],["t"]]]],[11,"from","","",174,[[["t"]],["t"]]],[11,"try_from","","",174,[[["u"]],["result"]]],[11,"into","","",174,[[],["u"]]],[11,"try_into","","",174,[[],["result"]]],[11,"borrow","","",174,[[["self"]],["t"]]],[11,"borrow_mut","","",174,[[["self"]],["t"]]],[11,"type_id","","",174,[[["self"]],["typeid"]]],[11,"to_owned","","",174,[[["self"]],["t"]]],[11,"clone_into","","",174,[[["self"],["t"]]]],[11,"from","","",175,[[["t"]],["t"]]],[11,"try_from","","",175,[[["u"]],["result"]]],[11,"into","","",175,[[],["u"]]],[11,"try_into","","",175,[[],["result"]]],[11,"borrow","","",175,[[["self"]],["t"]]],[11,"borrow_mut","","",175,[[["self"]],["t"]]],[11,"type_id","","",175,[[["self"]],["typeid"]]],[11,"to_owned","","",175,[[["self"]],["t"]]],[11,"clone_into","","",175,[[["self"],["t"]]]],[11,"from","","",176,[[["t"]],["t"]]],[11,"try_from","","",176,[[["u"]],["result"]]],[11,"into","","",176,[[],["u"]]],[11,"try_into","","",176,[[],["result"]]],[11,"borrow","","",176,[[["self"]],["t"]]],[11,"borrow_mut","","",176,[[["self"]],["t"]]],[11,"type_id","","",176,[[["self"]],["typeid"]]],[11,"to_owned","","",176,[[["self"]],["t"]]],[11,"clone_into","","",176,[[["self"],["t"]]]],[11,"from","","",177,[[],["t"]]],[11,"from","","",177,[[["t"]],["t"]]],[11,"try_from","","",177,[[["u"]],["result"]]],[11,"into","","",177,[[],["u"]]],[11,"try_into","","",177,[[],["result"]]],[11,"borrow","","",177,[[["self"]],["t"]]],[11,"borrow_mut","","",177,[[["self"]],["t"]]],[11,"type_id","","",177,[[["self"]],["typeid"]]],[11,"to_owned","","",177,[[["self"]],["t"]]],[11,"clone_into","","",177,[[["self"],["t"]]]],[11,"from","","",178,[[["t"]],["t"]]],[11,"try_from","","",178,[[["u"]],["result"]]],[11,"into","","",178,[[],["u"]]],[11,"try_into","","",178,[[],["result"]]],[11,"borrow","","",178,[[["self"]],["t"]]],[11,"borrow_mut","","",178,[[["self"]],["t"]]],[11,"type_id","","",178,[[["self"]],["typeid"]]],[11,"to_owned","","",178,[[["self"]],["t"]]],[11,"clone_into","","",178,[[["self"],["t"]]]],[11,"from","","",179,[[],["t"]]],[11,"from","","",179,[[["t"]],["t"]]],[11,"try_from","","",179,[[["u"]],["result"]]],[11,"into","","",179,[[],["u"]]],[11,"try_into","","",179,[[],["result"]]],[11,"borrow","","",179,[[["self"]],["t"]]],[11,"borrow_mut","","",179,[[["self"]],["t"]]],[11,"type_id","","",179,[[["self"]],["typeid"]]],[11,"to_owned","","",179,[[["self"]],["t"]]],[11,"clone_into","","",179,[[["self"],["t"]]]],[11,"from","","",180,[[["t"]],["t"]]],[11,"try_from","","",180,[[["u"]],["result"]]],[11,"into","","",180,[[],["u"]]],[11,"try_into","","",180,[[],["result"]]],[11,"borrow","","",180,[[["self"]],["t"]]],[11,"borrow_mut","","",180,[[["self"]],["t"]]],[11,"type_id","","",180,[[["self"]],["typeid"]]],[11,"to_owned","","",180,[[["self"]],["t"]]],[11,"clone_into","","",180,[[["self"],["t"]]]],[11,"from","","",181,[[["t"]],["t"]]],[11,"try_from","","",181,[[["u"]],["result"]]],[11,"into","","",181,[[],["u"]]],[11,"try_into","","",181,[[],["result"]]],[11,"borrow","","",181,[[["self"]],["t"]]],[11,"borrow_mut","","",181,[[["self"]],["t"]]],[11,"type_id","","",181,[[["self"]],["typeid"]]],[11,"to_owned","","",181,[[["self"]],["t"]]],[11,"clone_into","","",181,[[["self"],["t"]]]],[11,"from","","",182,[[["t"]],["t"]]],[11,"try_from","","",182,[[["u"]],["result"]]],[11,"into","","",182,[[],["u"]]],[11,"try_into","","",182,[[],["result"]]],[11,"borrow","","",182,[[["self"]],["t"]]],[11,"borrow_mut","","",182,[[["self"]],["t"]]],[11,"type_id","","",182,[[["self"]],["typeid"]]],[11,"to_owned","","",182,[[["self"]],["t"]]],[11,"clone_into","","",182,[[["self"],["t"]]]],[11,"from","","",65,[[["t"]],["t"]]],[11,"try_from","","",65,[[["u"]],["result"]]],[11,"into","","",65,[[],["u"]]],[11,"try_into","","",65,[[],["result"]]],[11,"borrow","","",65,[[["self"]],["t"]]],[11,"borrow_mut","","",65,[[["self"]],["t"]]],[11,"type_id","","",65,[[["self"]],["typeid"]]],[11,"to_owned","","",65,[[["self"]],["t"]]],[11,"clone_into","","",65,[[["self"],["t"]]]],[11,"from","","",183,[[["t"]],["t"]]],[11,"try_from","","",183,[[["u"]],["result"]]],[11,"into","","",183,[[],["u"]]],[11,"try_into","","",183,[[],["result"]]],[11,"borrow","","",183,[[["self"]],["t"]]],[11,"borrow_mut","","",183,[[["self"]],["t"]]],[11,"type_id","","",183,[[["self"]],["typeid"]]],[11,"to_owned","","",183,[[["self"]],["t"]]],[11,"clone_into","","",183,[[["self"],["t"]]]],[11,"from","","",184,[[["t"]],["t"]]],[11,"try_from","","",184,[[["u"]],["result"]]],[11,"into","","",184,[[],["u"]]],[11,"try_into","","",184,[[],["result"]]],[11,"borrow","","",184,[[["self"]],["t"]]],[11,"borrow_mut","","",184,[[["self"]],["t"]]],[11,"type_id","","",184,[[["self"]],["typeid"]]],[11,"to_owned","","",184,[[["self"]],["t"]]],[11,"clone_into","","",184,[[["self"],["t"]]]],[11,"from","","",185,[[["t"]],["t"]]],[11,"try_from","","",185,[[["u"]],["result"]]],[11,"into","","",185,[[],["u"]]],[11,"try_into","","",185,[[],["result"]]],[11,"borrow","","",185,[[["self"]],["t"]]],[11,"borrow_mut","","",185,[[["self"]],["t"]]],[11,"type_id","","",185,[[["self"]],["typeid"]]],[11,"to_owned","","",185,[[["self"]],["t"]]],[11,"clone_into","","",185,[[["self"],["t"]]]],[11,"from","","",186,[[["t"]],["t"]]],[11,"try_from","","",186,[[["u"]],["result"]]],[11,"into","","",186,[[],["u"]]],[11,"try_into","","",186,[[],["result"]]],[11,"borrow","","",186,[[["self"]],["t"]]],[11,"borrow_mut","","",186,[[["self"]],["t"]]],[11,"type_id","","",186,[[["self"]],["typeid"]]],[11,"to_owned","","",186,[[["self"]],["t"]]],[11,"clone_into","","",186,[[["self"],["t"]]]],[11,"from","","",66,[[["t"]],["t"]]],[11,"try_from","","",66,[[["u"]],["result"]]],[11,"into","","",66,[[],["u"]]],[11,"try_into","","",66,[[],["result"]]],[11,"borrow","","",66,[[["self"]],["t"]]],[11,"borrow_mut","","",66,[[["self"]],["t"]]],[11,"type_id","","",66,[[["self"]],["typeid"]]],[11,"to_owned","","",66,[[["self"]],["t"]]],[11,"clone_into","","",66,[[["self"],["t"]]]],[11,"from","","",187,[[],["t"]]],[11,"from","","",187,[[["t"]],["t"]]],[11,"try_from","","",187,[[["u"]],["result"]]],[11,"into","","",187,[[],["u"]]],[11,"try_into","","",187,[[],["result"]]],[11,"borrow","","",187,[[["self"]],["t"]]],[11,"borrow_mut","","",187,[[["self"]],["t"]]],[11,"type_id","","",187,[[["self"]],["typeid"]]],[11,"to_owned","","",187,[[["self"]],["t"]]],[11,"clone_into","","",187,[[["self"],["t"]]]],[11,"from","","",188,[[],["t"]]],[11,"from","","",188,[[["t"]],["t"]]],[11,"try_from","","",188,[[["u"]],["result"]]],[11,"into","","",188,[[],["u"]]],[11,"try_into","","",188,[[],["result"]]],[11,"borrow","","",188,[[["self"]],["t"]]],[11,"borrow_mut","","",188,[[["self"]],["t"]]],[11,"type_id","","",188,[[["self"]],["typeid"]]],[11,"to_owned","","",188,[[["self"]],["t"]]],[11,"clone_into","","",188,[[["self"],["t"]]]],[11,"from","","",189,[[["t"]],["t"]]],[11,"try_from","","",189,[[["u"]],["result"]]],[11,"into","","",189,[[],["u"]]],[11,"try_into","","",189,[[],["result"]]],[11,"borrow","","",189,[[["self"]],["t"]]],[11,"borrow_mut","","",189,[[["self"]],["t"]]],[11,"type_id","","",189,[[["self"]],["typeid"]]],[11,"to_owned","","",189,[[["self"]],["t"]]],[11,"clone_into","","",189,[[["self"],["t"]]]],[11,"from","","",190,[[["t"]],["t"]]],[11,"try_from","","",190,[[["u"]],["result"]]],[11,"into","","",190,[[],["u"]]],[11,"try_into","","",190,[[],["result"]]],[11,"borrow","","",190,[[["self"]],["t"]]],[11,"borrow_mut","","",190,[[["self"]],["t"]]],[11,"type_id","","",190,[[["self"]],["typeid"]]],[11,"from","","",191,[[["t"]],["t"]]],[11,"try_from","","",191,[[["u"]],["result"]]],[11,"into","","",191,[[],["u"]]],[11,"try_into","","",191,[[],["result"]]],[11,"borrow","","",191,[[["self"]],["t"]]],[11,"borrow_mut","","",191,[[["self"]],["t"]]],[11,"type_id","","",191,[[["self"]],["typeid"]]],[11,"from","","",67,[[["t"]],["t"]]],[11,"try_from","","",67,[[["u"]],["result"]]],[11,"into","","",67,[[],["u"]]],[11,"try_into","","",67,[[],["result"]]],[11,"borrow","","",67,[[["self"]],["t"]]],[11,"borrow_mut","","",67,[[["self"]],["t"]]],[11,"type_id","","",67,[[["self"]],["typeid"]]],[11,"to_owned","","",67,[[["self"]],["t"]]],[11,"clone_into","","",67,[[["self"],["t"]]]],[11,"from","","",68,[[["t"]],["t"]]],[11,"try_from","","",68,[[["u"]],["result"]]],[11,"into","","",68,[[],["u"]]],[11,"try_into","","",68,[[],["result"]]],[11,"borrow","","",68,[[["self"]],["t"]]],[11,"borrow_mut","","",68,[[["self"]],["t"]]],[11,"type_id","","",68,[[["self"]],["typeid"]]],[11,"to_owned","","",68,[[["self"]],["t"]]],[11,"clone_into","","",68,[[["self"],["t"]]]],[11,"from","","",69,[[["t"]],["t"]]],[11,"try_from","","",69,[[["u"]],["result"]]],[11,"into","","",69,[[],["u"]]],[11,"try_into","","",69,[[],["result"]]],[11,"borrow","","",69,[[["self"]],["t"]]],[11,"borrow_mut","","",69,[[["self"]],["t"]]],[11,"type_id","","",69,[[["self"]],["typeid"]]],[11,"to_owned","","",69,[[["self"]],["t"]]],[11,"clone_into","","",69,[[["self"],["t"]]]],[11,"from","","",192,[[["t"]],["t"]]],[11,"try_from","","",192,[[["u"]],["result"]]],[11,"into","","",192,[[],["u"]]],[11,"try_into","","",192,[[],["result"]]],[11,"borrow","","",192,[[["self"]],["t"]]],[11,"borrow_mut","","",192,[[["self"]],["t"]]],[11,"type_id","","",192,[[["self"]],["typeid"]]],[11,"to_owned","","",192,[[["self"]],["t"]]],[11,"clone_into","","",192,[[["self"],["t"]]]],[11,"from","","",193,[[["t"]],["t"]]],[11,"try_from","","",193,[[["u"]],["result"]]],[11,"into","","",193,[[],["u"]]],[11,"try_into","","",193,[[],["result"]]],[11,"borrow","","",193,[[["self"]],["t"]]],[11,"borrow_mut","","",193,[[["self"]],["t"]]],[11,"type_id","","",193,[[["self"]],["typeid"]]],[11,"from","","",194,[[["t"]],["t"]]],[11,"try_from","","",194,[[["u"]],["result"]]],[11,"into","","",194,[[],["u"]]],[11,"try_into","","",194,[[],["result"]]],[11,"borrow","","",194,[[["self"]],["t"]]],[11,"borrow_mut","","",194,[[["self"]],["t"]]],[11,"type_id","","",194,[[["self"]],["typeid"]]],[11,"to_owned","","",194,[[["self"]],["t"]]],[11,"clone_into","","",194,[[["self"],["t"]]]],[11,"from","","",195,[[],["t"]]],[11,"from","","",195,[[["t"]],["t"]]],[11,"try_from","","",195,[[["u"]],["result"]]],[11,"into","","",195,[[],["u"]]],[11,"try_into","","",195,[[],["result"]]],[11,"borrow","","",195,[[["self"]],["t"]]],[11,"borrow_mut","","",195,[[["self"]],["t"]]],[11,"type_id","","",195,[[["self"]],["typeid"]]],[11,"to_owned","","",195,[[["self"]],["t"]]],[11,"clone_into","","",195,[[["self"],["t"]]]],[11,"from","","",196,[[["t"]],["t"]]],[11,"try_from","","",196,[[["u"]],["result"]]],[11,"into","","",196,[[],["u"]]],[11,"try_into","","",196,[[],["result"]]],[11,"borrow","","",196,[[["self"]],["t"]]],[11,"borrow_mut","","",196,[[["self"]],["t"]]],[11,"type_id","","",196,[[["self"]],["typeid"]]],[11,"to_owned","","",196,[[["self"]],["t"]]],[11,"clone_into","","",196,[[["self"],["t"]]]],[11,"from","","",197,[[["t"]],["t"]]],[11,"try_from","","",197,[[["u"]],["result"]]],[11,"into","","",197,[[],["u"]]],[11,"try_into","","",197,[[],["result"]]],[11,"borrow","","",197,[[["self"]],["t"]]],[11,"borrow_mut","","",197,[[["self"]],["t"]]],[11,"type_id","","",197,[[["self"]],["typeid"]]],[11,"to_owned","","",197,[[["self"]],["t"]]],[11,"clone_into","","",197,[[["self"],["t"]]]],[11,"from","","",198,[[],["t"]]],[11,"from","","",198,[[["t"]],["t"]]],[11,"try_from","","",198,[[["u"]],["result"]]],[11,"into","","",198,[[],["u"]]],[11,"try_into","","",198,[[],["result"]]],[11,"borrow","","",198,[[["self"]],["t"]]],[11,"borrow_mut","","",198,[[["self"]],["t"]]],[11,"type_id","","",198,[[["self"]],["typeid"]]],[11,"to_owned","","",198,[[["self"]],["t"]]],[11,"clone_into","","",198,[[["self"],["t"]]]],[11,"from","","",199,[[["t"]],["t"]]],[11,"try_from","","",199,[[["u"]],["result"]]],[11,"into","","",199,[[],["u"]]],[11,"try_into","","",199,[[],["result"]]],[11,"borrow","","",199,[[["self"]],["t"]]],[11,"borrow_mut","","",199,[[["self"]],["t"]]],[11,"type_id","","",199,[[["self"]],["typeid"]]],[11,"to_owned","","",199,[[["self"]],["t"]]],[11,"clone_into","","",199,[[["self"],["t"]]]],[11,"from","","",200,[[],["t"]]],[11,"from","","",200,[[["t"]],["t"]]],[11,"try_from","","",200,[[["u"]],["result"]]],[11,"into","","",200,[[],["u"]]],[11,"try_into","","",200,[[],["result"]]],[11,"borrow","","",200,[[["self"]],["t"]]],[11,"borrow_mut","","",200,[[["self"]],["t"]]],[11,"type_id","","",200,[[["self"]],["typeid"]]],[11,"to_owned","","",200,[[["self"]],["t"]]],[11,"clone_into","","",200,[[["self"],["t"]]]],[11,"from","","",201,[[],["t"]]],[11,"from","","",201,[[["t"]],["t"]]],[11,"try_from","","",201,[[["u"]],["result"]]],[11,"into","","",201,[[],["u"]]],[11,"try_into","","",201,[[],["result"]]],[11,"borrow","","",201,[[["self"]],["t"]]],[11,"borrow_mut","","",201,[[["self"]],["t"]]],[11,"type_id","","",201,[[["self"]],["typeid"]]],[11,"to_owned","","",201,[[["self"]],["t"]]],[11,"clone_into","","",201,[[["self"],["t"]]]],[11,"from","","",202,[[["t"]],["t"]]],[11,"try_from","","",202,[[["u"]],["result"]]],[11,"into","","",202,[[],["u"]]],[11,"try_into","","",202,[[],["result"]]],[11,"borrow","","",202,[[["self"]],["t"]]],[11,"borrow_mut","","",202,[[["self"]],["t"]]],[11,"type_id","","",202,[[["self"]],["typeid"]]],[11,"to_owned","","",202,[[["self"]],["t"]]],[11,"clone_into","","",202,[[["self"],["t"]]]],[11,"from","","",203,[[["t"]],["t"]]],[11,"try_from","","",203,[[["u"]],["result"]]],[11,"into","","",203,[[],["u"]]],[11,"try_into","","",203,[[],["result"]]],[11,"borrow","","",203,[[["self"]],["t"]]],[11,"borrow_mut","","",203,[[["self"]],["t"]]],[11,"type_id","","",203,[[["self"]],["typeid"]]],[11,"from","","",204,[[["t"]],["t"]]],[11,"try_from","","",204,[[["u"]],["result"]]],[11,"into","","",204,[[],["u"]]],[11,"try_into","","",204,[[],["result"]]],[11,"borrow","","",204,[[["self"]],["t"]]],[11,"borrow_mut","","",204,[[["self"]],["t"]]],[11,"type_id","","",204,[[["self"]],["typeid"]]],[11,"from","","",70,[[["t"]],["t"]]],[11,"try_from","","",70,[[["u"]],["result"]]],[11,"into","","",70,[[],["u"]]],[11,"try_into","","",70,[[],["result"]]],[11,"borrow","","",70,[[["self"]],["t"]]],[11,"borrow_mut","","",70,[[["self"]],["t"]]],[11,"type_id","","",70,[[["self"]],["typeid"]]],[11,"to_owned","","",70,[[["self"]],["t"]]],[11,"clone_into","","",70,[[["self"],["t"]]]],[11,"from","","",205,[[],["t"]]],[11,"from","","",205,[[["t"]],["t"]]],[11,"try_from","","",205,[[["u"]],["result"]]],[11,"into","","",205,[[],["u"]]],[11,"try_into","","",205,[[],["result"]]],[11,"borrow","","",205,[[["self"]],["t"]]],[11,"borrow_mut","","",205,[[["self"]],["t"]]],[11,"type_id","","",205,[[["self"]],["typeid"]]],[11,"to_owned","","",205,[[["self"]],["t"]]],[11,"clone_into","","",205,[[["self"],["t"]]]],[11,"from","","",206,[[],["t"]]],[11,"from","","",206,[[["t"]],["t"]]],[11,"try_from","","",206,[[["u"]],["result"]]],[11,"into","","",206,[[],["u"]]],[11,"try_into","","",206,[[],["result"]]],[11,"borrow","","",206,[[["self"]],["t"]]],[11,"borrow_mut","","",206,[[["self"]],["t"]]],[11,"type_id","","",206,[[["self"]],["typeid"]]],[11,"to_owned","","",206,[[["self"]],["t"]]],[11,"clone_into","","",206,[[["self"],["t"]]]],[11,"from","","",207,[[],["t"]]],[11,"from","","",207,[[["t"]],["t"]]],[11,"try_from","","",207,[[["u"]],["result"]]],[11,"into","","",207,[[],["u"]]],[11,"try_into","","",207,[[],["result"]]],[11,"borrow","","",207,[[["self"]],["t"]]],[11,"borrow_mut","","",207,[[["self"]],["t"]]],[11,"type_id","","",207,[[["self"]],["typeid"]]],[11,"to_owned","","",207,[[["self"]],["t"]]],[11,"clone_into","","",207,[[["self"],["t"]]]],[11,"from","","",71,[[["t"]],["t"]]],[11,"try_from","","",71,[[["u"]],["result"]]],[11,"into","","",71,[[],["u"]]],[11,"try_into","","",71,[[],["result"]]],[11,"borrow","","",71,[[["self"]],["t"]]],[11,"borrow_mut","","",71,[[["self"]],["t"]]],[11,"type_id","","",71,[[["self"]],["typeid"]]],[11,"to_owned","","",71,[[["self"]],["t"]]],[11,"clone_into","","",71,[[["self"],["t"]]]],[11,"from","","",208,[[],["t"]]],[11,"from","","",208,[[["t"]],["t"]]],[11,"try_from","","",208,[[["u"]],["result"]]],[11,"into","","",208,[[],["u"]]],[11,"try_into","","",208,[[],["result"]]],[11,"borrow","","",208,[[["self"]],["t"]]],[11,"borrow_mut","","",208,[[["self"]],["t"]]],[11,"type_id","","",208,[[["self"]],["typeid"]]],[11,"to_owned","","",208,[[["self"]],["t"]]],[11,"clone_into","","",208,[[["self"],["t"]]]],[11,"from","","",209,[[["t"]],["t"]]],[11,"try_from","","",209,[[["u"]],["result"]]],[11,"into","","",209,[[],["u"]]],[11,"try_into","","",209,[[],["result"]]],[11,"borrow","","",209,[[["self"]],["t"]]],[11,"borrow_mut","","",209,[[["self"]],["t"]]],[11,"type_id","","",209,[[["self"]],["typeid"]]],[11,"to_owned","","",209,[[["self"]],["t"]]],[11,"clone_into","","",209,[[["self"],["t"]]]],[11,"from","","",210,[[["t"]],["t"]]],[11,"try_from","","",210,[[["u"]],["result"]]],[11,"into","","",210,[[],["u"]]],[11,"try_into","","",210,[[],["result"]]],[11,"borrow","","",210,[[["self"]],["t"]]],[11,"borrow_mut","","",210,[[["self"]],["t"]]],[11,"type_id","","",210,[[["self"]],["typeid"]]],[11,"to_owned","","",210,[[["self"]],["t"]]],[11,"clone_into","","",210,[[["self"],["t"]]]],[11,"from","","",211,[[["t"]],["t"]]],[11,"try_from","","",211,[[["u"]],["result"]]],[11,"into","","",211,[[],["u"]]],[11,"try_into","","",211,[[],["result"]]],[11,"borrow","","",211,[[["self"]],["t"]]],[11,"borrow_mut","","",211,[[["self"]],["t"]]],[11,"type_id","","",211,[[["self"]],["typeid"]]],[11,"to_owned","","",211,[[["self"]],["t"]]],[11,"clone_into","","",211,[[["self"],["t"]]]],[11,"from","","",212,[[["t"]],["t"]]],[11,"try_from","","",212,[[["u"]],["result"]]],[11,"into","","",212,[[],["u"]]],[11,"try_into","","",212,[[],["result"]]],[11,"borrow","","",212,[[["self"]],["t"]]],[11,"borrow_mut","","",212,[[["self"]],["t"]]],[11,"type_id","","",212,[[["self"]],["typeid"]]],[11,"to_owned","","",212,[[["self"]],["t"]]],[11,"clone_into","","",212,[[["self"],["t"]]]],[11,"from","","",213,[[["t"]],["t"]]],[11,"try_from","","",213,[[["u"]],["result"]]],[11,"into","","",213,[[],["u"]]],[11,"try_into","","",213,[[],["result"]]],[11,"borrow","","",213,[[["self"]],["t"]]],[11,"borrow_mut","","",213,[[["self"]],["t"]]],[11,"type_id","","",213,[[["self"]],["typeid"]]],[11,"to_owned","","",213,[[["self"]],["t"]]],[11,"clone_into","","",213,[[["self"],["t"]]]],[11,"from","","",214,[[["t"]],["t"]]],[11,"try_from","","",214,[[["u"]],["result"]]],[11,"into","","",214,[[],["u"]]],[11,"try_into","","",214,[[],["result"]]],[11,"borrow","","",214,[[["self"]],["t"]]],[11,"borrow_mut","","",214,[[["self"]],["t"]]],[11,"type_id","","",214,[[["self"]],["typeid"]]],[11,"to_owned","","",214,[[["self"]],["t"]]],[11,"clone_into","","",214,[[["self"],["t"]]]],[11,"from","","",215,[[["t"]],["t"]]],[11,"try_from","","",215,[[["u"]],["result"]]],[11,"into","","",215,[[],["u"]]],[11,"try_into","","",215,[[],["result"]]],[11,"borrow","","",215,[[["self"]],["t"]]],[11,"borrow_mut","","",215,[[["self"]],["t"]]],[11,"type_id","","",215,[[["self"]],["typeid"]]],[11,"to_owned","","",215,[[["self"]],["t"]]],[11,"clone_into","","",215,[[["self"],["t"]]]],[11,"from","","",216,[[["t"]],["t"]]],[11,"try_from","","",216,[[["u"]],["result"]]],[11,"into","","",216,[[],["u"]]],[11,"try_into","","",216,[[],["result"]]],[11,"borrow","","",216,[[["self"]],["t"]]],[11,"borrow_mut","","",216,[[["self"]],["t"]]],[11,"type_id","","",216,[[["self"]],["typeid"]]],[11,"to_owned","","",216,[[["self"]],["t"]]],[11,"clone_into","","",216,[[["self"],["t"]]]],[11,"from","","",217,[[["t"]],["t"]]],[11,"try_from","","",217,[[["u"]],["result"]]],[11,"into","","",217,[[],["u"]]],[11,"try_into","","",217,[[],["result"]]],[11,"borrow","","",217,[[["self"]],["t"]]],[11,"borrow_mut","","",217,[[["self"]],["t"]]],[11,"type_id","","",217,[[["self"]],["typeid"]]],[11,"to_owned","","",217,[[["self"]],["t"]]],[11,"clone_into","","",217,[[["self"],["t"]]]],[11,"from","","",218,[[["t"]],["t"]]],[11,"try_from","","",218,[[["u"]],["result"]]],[11,"into","","",218,[[],["u"]]],[11,"try_into","","",218,[[],["result"]]],[11,"borrow","","",218,[[["self"]],["t"]]],[11,"borrow_mut","","",218,[[["self"]],["t"]]],[11,"type_id","","",218,[[["self"]],["typeid"]]],[11,"from","","",219,[[["t"]],["t"]]],[11,"try_from","","",219,[[["u"]],["result"]]],[11,"into","","",219,[[],["u"]]],[11,"try_into","","",219,[[],["result"]]],[11,"borrow","","",219,[[["self"]],["t"]]],[11,"borrow_mut","","",219,[[["self"]],["t"]]],[11,"type_id","","",219,[[["self"]],["typeid"]]],[11,"from","","",220,[[],["t"]]],[11,"from","","",220,[[["t"]],["t"]]],[11,"try_from","","",220,[[["u"]],["result"]]],[11,"into","","",220,[[],["u"]]],[11,"try_into","","",220,[[],["result"]]],[11,"borrow","","",220,[[["self"]],["t"]]],[11,"borrow_mut","","",220,[[["self"]],["t"]]],[11,"type_id","","",220,[[["self"]],["typeid"]]],[11,"to_owned","","",220,[[["self"]],["t"]]],[11,"clone_into","","",220,[[["self"],["t"]]]],[11,"from","","",221,[[["t"]],["t"]]],[11,"try_from","","",221,[[["u"]],["result"]]],[11,"into","","",221,[[],["u"]]],[11,"try_into","","",221,[[],["result"]]],[11,"borrow","","",221,[[["self"]],["t"]]],[11,"borrow_mut","","",221,[[["self"]],["t"]]],[11,"type_id","","",221,[[["self"]],["typeid"]]],[11,"to_owned","","",221,[[["self"]],["t"]]],[11,"clone_into","","",221,[[["self"],["t"]]]],[11,"from","","",222,[[["t"]],["t"]]],[11,"try_from","","",222,[[["u"]],["result"]]],[11,"into","","",222,[[],["u"]]],[11,"try_into","","",222,[[],["result"]]],[11,"borrow","","",222,[[["self"]],["t"]]],[11,"borrow_mut","","",222,[[["self"]],["t"]]],[11,"type_id","","",222,[[["self"]],["typeid"]]],[11,"to_owned","","",222,[[["self"]],["t"]]],[11,"clone_into","","",222,[[["self"],["t"]]]],[11,"from","","",72,[[["t"]],["t"]]],[11,"try_from","","",72,[[["u"]],["result"]]],[11,"into","","",72,[[],["u"]]],[11,"try_into","","",72,[[],["result"]]],[11,"borrow","","",72,[[["self"]],["t"]]],[11,"borrow_mut","","",72,[[["self"]],["t"]]],[11,"type_id","","",72,[[["self"]],["typeid"]]],[11,"to_owned","","",72,[[["self"]],["t"]]],[11,"clone_into","","",72,[[["self"],["t"]]]],[11,"from","","",73,[[["t"]],["t"]]],[11,"try_from","","",73,[[["u"]],["result"]]],[11,"into","","",73,[[],["u"]]],[11,"try_into","","",73,[[],["result"]]],[11,"borrow","","",73,[[["self"]],["t"]]],[11,"borrow_mut","","",73,[[["self"]],["t"]]],[11,"type_id","","",73,[[["self"]],["typeid"]]],[11,"to_owned","","",73,[[["self"]],["t"]]],[11,"clone_into","","",73,[[["self"],["t"]]]],[11,"from","","",75,[[["t"]],["t"]]],[11,"try_from","","",75,[[["u"]],["result"]]],[11,"into","","",75,[[],["u"]]],[11,"try_into","","",75,[[],["result"]]],[11,"borrow","","",75,[[["self"]],["t"]]],[11,"borrow_mut","","",75,[[["self"]],["t"]]],[11,"type_id","","",75,[[["self"]],["typeid"]]],[11,"to_owned","","",75,[[["self"]],["t"]]],[11,"clone_into","","",75,[[["self"],["t"]]]],[11,"from","","",76,[[["t"]],["t"]]],[11,"try_from","","",76,[[["u"]],["result"]]],[11,"into","","",76,[[],["u"]]],[11,"try_into","","",76,[[],["result"]]],[11,"borrow","","",76,[[["self"]],["t"]]],[11,"borrow_mut","","",76,[[["self"]],["t"]]],[11,"type_id","","",76,[[["self"]],["typeid"]]],[11,"to_owned","","",76,[[["self"]],["t"]]],[11,"clone_into","","",76,[[["self"],["t"]]]],[11,"from","","",96,[[["t"]],["t"]]],[11,"try_from","","",96,[[["u"]],["result"]]],[11,"into","","",96,[[],["u"]]],[11,"try_into","","",96,[[],["result"]]],[11,"borrow","","",96,[[["self"]],["t"]]],[11,"borrow_mut","","",96,[[["self"]],["t"]]],[11,"type_id","","",96,[[["self"]],["typeid"]]],[11,"to_owned","","",96,[[["self"]],["t"]]],[11,"clone_into","","",96,[[["self"],["t"]]]],[11,"from","","",97,[[["t"]],["t"]]],[11,"try_from","","",97,[[["u"]],["result"]]],[11,"into","","",97,[[],["u"]]],[11,"try_into","","",97,[[],["result"]]],[11,"borrow","","",97,[[["self"]],["t"]]],[11,"borrow_mut","","",97,[[["self"]],["t"]]],[11,"type_id","","",97,[[["self"]],["typeid"]]],[11,"to_owned","","",97,[[["self"]],["t"]]],[11,"clone_into","","",97,[[["self"],["t"]]]],[11,"to_string","","",97,[[["self"]],["string"]]],[11,"from","","",98,[[["t"]],["t"]]],[11,"try_from","","",98,[[["u"]],["result"]]],[11,"into","","",98,[[],["u"]]],[11,"try_into","","",98,[[],["result"]]],[11,"borrow","","",98,[[["self"]],["t"]]],[11,"borrow_mut","","",98,[[["self"]],["t"]]],[11,"type_id","","",98,[[["self"]],["typeid"]]],[11,"to_owned","","",98,[[["self"]],["t"]]],[11,"clone_into","","",98,[[["self"],["t"]]]],[11,"from","","",99,[[["t"]],["t"]]],[11,"try_from","","",99,[[["u"]],["result"]]],[11,"into","","",99,[[],["u"]]],[11,"try_into","","",99,[[],["result"]]],[11,"borrow","","",99,[[["self"]],["t"]]],[11,"borrow_mut","","",99,[[["self"]],["t"]]],[11,"type_id","","",99,[[["self"]],["typeid"]]],[11,"to_owned","","",99,[[["self"]],["t"]]],[11,"clone_into","","",99,[[["self"],["t"]]]],[11,"from","","",109,[[["t"]],["t"]]],[11,"try_from","","",109,[[["u"]],["result"]]],[11,"into","","",109,[[],["u"]]],[11,"try_into","","",109,[[],["result"]]],[11,"borrow","","",109,[[["self"]],["t"]]],[11,"borrow_mut","","",109,[[["self"]],["t"]]],[11,"type_id","","",109,[[["self"]],["typeid"]]],[11,"to_owned","","",109,[[["self"]],["t"]]],[11,"clone_into","","",109,[[["self"],["t"]]]],[11,"from","","",110,[[["t"]],["t"]]],[11,"try_from","","",110,[[["u"]],["result"]]],[11,"into","","",110,[[],["u"]]],[11,"try_into","","",110,[[],["result"]]],[11,"borrow","","",110,[[["self"]],["t"]]],[11,"borrow_mut","","",110,[[["self"]],["t"]]],[11,"type_id","","",110,[[["self"]],["typeid"]]],[11,"to_owned","","",110,[[["self"]],["t"]]],[11,"clone_into","","",110,[[["self"],["t"]]]],[11,"from","","",133,[[["t"]],["t"]]],[11,"try_from","","",133,[[["u"]],["result"]]],[11,"into","","",133,[[],["u"]]],[11,"try_into","","",133,[[],["result"]]],[11,"borrow","","",133,[[["self"]],["t"]]],[11,"borrow_mut","","",133,[[["self"]],["t"]]],[11,"type_id","","",133,[[["self"]],["typeid"]]],[11,"to_owned","","",133,[[["self"]],["t"]]],[11,"clone_into","","",133,[[["self"],["t"]]]],[11,"from","","",139,[[["t"]],["t"]]],[11,"try_from","","",139,[[["u"]],["result"]]],[11,"into","","",139,[[],["u"]]],[11,"try_into","","",139,[[],["result"]]],[11,"borrow","","",139,[[["self"]],["t"]]],[11,"borrow_mut","","",139,[[["self"]],["t"]]],[11,"type_id","","",139,[[["self"]],["typeid"]]],[11,"from","","",143,[[["t"]],["t"]]],[11,"try_from","","",143,[[["u"]],["result"]]],[11,"into","","",143,[[],["u"]]],[11,"try_into","","",143,[[],["result"]]],[11,"borrow","","",143,[[["self"]],["t"]]],[11,"borrow_mut","","",143,[[["self"]],["t"]]],[11,"type_id","","",143,[[["self"]],["typeid"]]],[11,"to_owned","","",143,[[["self"]],["t"]]],[11,"clone_into","","",143,[[["self"],["t"]]]],[11,"from","","",152,[[["t"]],["t"]]],[11,"try_from","","",152,[[["u"]],["result"]]],[11,"into","","",152,[[],["u"]]],[11,"try_into","","",152,[[],["result"]]],[11,"borrow","","",152,[[["self"]],["t"]]],[11,"borrow_mut","","",152,[[["self"]],["t"]]],[11,"type_id","","",152,[[["self"]],["typeid"]]],[11,"to_owned","","",152,[[["self"]],["t"]]],[11,"clone_into","","",152,[[["self"],["t"]]]],[11,"from","","",153,[[["t"]],["t"]]],[11,"try_from","","",153,[[["u"]],["result"]]],[11,"into","","",153,[[],["u"]]],[11,"try_into","","",153,[[],["result"]]],[11,"borrow","","",153,[[["self"]],["t"]]],[11,"borrow_mut","","",153,[[["self"]],["t"]]],[11,"type_id","","",153,[[["self"]],["typeid"]]],[11,"to_owned","","",153,[[["self"]],["t"]]],[11,"clone_into","","",153,[[["self"],["t"]]]],[11,"from","","",154,[[["t"]],["t"]]],[11,"try_from","","",154,[[["u"]],["result"]]],[11,"into","","",154,[[],["u"]]],[11,"try_into","","",154,[[],["result"]]],[11,"borrow","","",154,[[["self"]],["t"]]],[11,"borrow_mut","","",154,[[["self"]],["t"]]],[11,"type_id","","",154,[[["self"]],["typeid"]]],[11,"to_owned","","",154,[[["self"]],["t"]]],[11,"clone_into","","",154,[[["self"],["t"]]]],[11,"from","","",155,[[["t"]],["t"]]],[11,"try_from","","",155,[[["u"]],["result"]]],[11,"into","","",155,[[],["u"]]],[11,"try_into","","",155,[[],["result"]]],[11,"borrow","","",155,[[["self"]],["t"]]],[11,"borrow_mut","","",155,[[["self"]],["t"]]],[11,"type_id","","",155,[[["self"]],["typeid"]]],[11,"to_owned","","",155,[[["self"]],["t"]]],[11,"clone_into","","",155,[[["self"],["t"]]]],[11,"to_string","","",155,[[["self"]],["string"]]],[11,"is_big_endian","gimli","",27,[[],["bool"]]],[11,"is_big_endian","","",231,[[],["bool"]]],[11,"is_big_endian","","",230,[[],["bool"]]],[11,"into","","",22,[[],["t"]]],[11,"into","","",23,[[],["t"]]],[11,"endian","gimli::read","",171,[[["self"]],["endian"]]],[11,"len","","",171,[[["self"]],["usize"]]],[11,"is_empty","","",171,[[["self"]],["bool"]]],[11,"empty","","",171,[[["self"]]]],[11,"truncate","","",171,[[["self"],["usize"]],["result"]]],[11,"offset_from","","",171,[[["self"]],["usize"]]],[11,"offset_id","","",171,[[["self"]],["readeroffsetid"]]],[11,"lookup_offset_id","","",171,[[["readeroffsetid"],["self"]],["option"]]],[11,"find","","",171,[[["self"],["u8"]],[["result",["usize"]],["usize"]]]],[11,"skip","","",171,[[["self"],["usize"]],["result"]]],[11,"split","","",171,[[["self"],["usize"]],["result"]]],[11,"to_slice","","",171,[[["self"]],[["result",["cow"]],["cow"]]]],[11,"to_string","","",171,[[["self"]],[["cow",["str"]],["result",["cow"]]]]],[11,"to_string_lossy","","",171,[[["self"]],[["cow",["str"]],["result",["cow"]]]]],[11,"read_slice","","",171,[[["self"]],["result"]]],[11,"header","","",184,[[["self"]],["lineprogramheader"]]],[11,"add_file","","",184,[[["fileentry"],["self"]]]],[11,"id","","",156,[[],["sectionid"]]],[11,"reader","","",156,[[["self"]],["r"]]],[11,"id","","",157,[[],["sectionid"]]],[11,"reader","","",157,[[["self"]],["r"]]],[11,"id","","",158,[[],["sectionid"]]],[11,"reader","","",158,[[["self"]],["r"]]],[11,"id","","",161,[[],["sectionid"]]],[11,"reader","","",161,[[["self"]],["r"]]],[11,"id","","",172,[[],["sectionid"]]],[11,"reader","","",172,[[["self"]],["r"]]],[11,"id","","",177,[[],["sectionid"]]],[11,"reader","","",177,[[["self"]],["r"]]],[11,"id","","",179,[[],["sectionid"]]],[11,"reader","","",179,[[["self"]],["r"]]],[11,"id","","",187,[[],["sectionid"]]],[11,"reader","","",187,[[["self"]],["r"]]],[11,"id","","",188,[[],["sectionid"]]],[11,"reader","","",188,[[["self"]],["r"]]],[11,"id","","",195,[[],["sectionid"]]],[11,"reader","","",195,[[["self"]],["r"]]],[11,"id","","",198,[[],["sectionid"]]],[11,"reader","","",198,[[["self"]],["r"]]],[11,"id","","",200,[[],["sectionid"]]],[11,"reader","","",200,[[["self"]],["r"]]],[11,"id","","",201,[[],["sectionid"]]],[11,"reader","","",201,[[["self"]],["r"]]],[11,"id","","",205,[[],["sectionid"]]],[11,"reader","","",205,[[["self"]],["r"]]],[11,"id","","",206,[[],["sectionid"]]],[11,"reader","","",206,[[["self"]],["r"]]],[11,"id","","",207,[[],["sectionid"]]],[11,"reader","","",207,[[["self"]],["r"]]],[11,"id","","",208,[[],["sectionid"]]],[11,"reader","","",208,[[["self"]],["r"]]],[11,"id","","",220,[[],["sectionid"]]],[11,"reader","","",220,[[["self"]],["r"]]],[11,"deref","","",171,[[["self"]]]],[11,"from","gimli","",22,[[["t"]],["self"]]],[11,"from","","",23,[[["t"]],["self"]]],[11,"from","gimli::read","",156,[[["r"]],["self"]]],[11,"from","","",157,[[["r"]],["self"]]],[11,"from","","",158,[[["r"]],["self"]]],[11,"from","","",161,[[["r"]],["self"]]],[11,"from","","",172,[[["r"]],["self"]]],[11,"from","","",177,[[["r"]],["self"]]],[11,"from","","",179,[[["r"]],["self"]]],[11,"from","","",187,[[["r"]],["self"]]],[11,"from","","",188,[[["r"]],["self"]]],[11,"from","","",195,[[["r"]],["self"]]],[11,"from","","",198,[[["r"]],["self"]]],[11,"from","","",200,[[["r"]],["self"]]],[11,"from","","",201,[[["r"]],["self"]]],[11,"from","","",205,[[["r"]],["self"]]],[11,"from","","",206,[[["r"]],["self"]]],[11,"from","","",207,[[["r"]],["self"]]],[11,"from","","",208,[[["r"]],["self"]]],[11,"from","","",220,[[["r"]],["self"]]],[11,"fmt","gimli","",24,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",6,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",7,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",8,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",9,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",10,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",11,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",12,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",13,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",14,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",15,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",16,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",17,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",18,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",19,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",20,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",21,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",22,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",23,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",25,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",26,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",28,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",29,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",30,[[["formatter"],["self"]],["result"]]],[11,"fmt","gimli::constants","",31,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",32,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",33,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",34,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",35,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",36,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",37,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",38,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",39,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",40,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",41,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",42,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",43,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",44,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",45,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",46,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",47,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",48,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",49,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",50,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",51,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",52,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",53,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",54,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",55,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",56,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",57,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",58,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",59,[[["formatter"],["self"]],["result"]]],[11,"fmt","gimli","",27,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",231,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",230,[[["formatter"],["self"]],["result"]]],[11,"fmt","gimli::read","",156,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",157,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",158,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",159,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",160,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",161,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",60,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",61,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",162,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",72,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",232,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",163,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",164,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",165,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",166,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",233,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",167,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",234,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",168,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",73,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",75,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",76,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",169,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",96,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",62,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",63,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",170,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",171,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",64,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",172,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",173,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",174,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",175,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",176,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",177,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",178,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",179,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",180,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",97,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",181,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",182,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",98,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",65,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",183,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",184,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",185,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",186,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",66,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",187,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",188,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",189,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",190,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",99,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",191,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",67,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",109,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",110,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",133,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",68,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",139,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",69,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",192,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",193,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",194,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",195,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",196,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",197,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",198,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",199,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",200,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",201,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",202,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",203,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",143,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",204,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",70,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",205,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",206,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",207,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",71,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",208,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",209,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",210,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",211,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",212,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",152,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",213,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",214,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",215,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",216,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",217,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",218,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",219,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",220,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",221,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",222,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",153,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",154,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",155,[[["formatter"],["self"]],["result"]]],[11,"fmt","gimli::constants","",31,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",32,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",33,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",34,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",35,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",36,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",37,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",38,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",39,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",40,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",41,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",42,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",43,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",44,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",45,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",46,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",47,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",48,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",49,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",50,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",51,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",52,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",53,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",54,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",55,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",56,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",57,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",58,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",59,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","gimli::read","",97,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",155,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"eq","gimli","",24,[[["self"],["format"]],["bool"]]],[11,"eq","","",0,[[["encoding"],["self"]],["bool"]]],[11,"ne","","",0,[[["encoding"],["self"]],["bool"]]],[11,"eq","","",1,[[["self"],["lineencoding"]],["bool"]]],[11,"ne","","",1,[[["self"],["lineencoding"]],["bool"]]],[11,"eq","","",2,[[["self"],["register"]],["bool"]]],[11,"ne","","",2,[[["self"],["register"]],["bool"]]],[11,"eq","","",3,[[["self"],["debugabbrevoffset"]],["bool"]]],[11,"ne","","",3,[[["self"],["debugabbrevoffset"]],["bool"]]],[11,"eq","","",4,[[["debugaddrbase"],["self"]],["bool"]]],[11,"ne","","",4,[[["debugaddrbase"],["self"]],["bool"]]],[11,"eq","","",5,[[["self"],["debugaddrindex"]],["bool"]]],[11,"ne","","",5,[[["self"],["debugaddrindex"]],["bool"]]],[11,"eq","","",6,[[["debuginfooffset"],["self"]],["bool"]]],[11,"ne","","",6,[[["debuginfooffset"],["self"]],["bool"]]],[11,"eq","","",7,[[["self"],["debuglineoffset"]],["bool"]]],[11,"ne","","",7,[[["self"],["debuglineoffset"]],["bool"]]],[11,"eq","","",8,[[["self"],["debuglinestroffset"]],["bool"]]],[11,"ne","","",8,[[["self"],["debuglinestroffset"]],["bool"]]],[11,"eq","","",9,[[["self"],["locationlistsoffset"]],["bool"]]],[11,"ne","","",9,[[["self"],["locationlistsoffset"]],["bool"]]],[11,"eq","","",10,[[["self"],["debugloclistsbase"]],["bool"]]],[11,"ne","","",10,[[["self"],["debugloclistsbase"]],["bool"]]],[11,"eq","","",11,[[["self"],["debugloclistsindex"]],["bool"]]],[11,"ne","","",11,[[["self"],["debugloclistsindex"]],["bool"]]],[11,"eq","","",12,[[["self"],["debugmacinfooffset"]],["bool"]]],[11,"ne","","",12,[[["self"],["debugmacinfooffset"]],["bool"]]],[11,"eq","","",13,[[["self"],["debugmacrooffset"]],["bool"]]],[11,"ne","","",13,[[["self"],["debugmacrooffset"]],["bool"]]],[11,"eq","","",14,[[["self"],["rangelistsoffset"]],["bool"]]],[11,"ne","","",14,[[["self"],["rangelistsoffset"]],["bool"]]],[11,"eq","","",15,[[["self"],["debugrnglistsbase"]],["bool"]]],[11,"ne","","",15,[[["self"],["debugrnglistsbase"]],["bool"]]],[11,"eq","","",16,[[["debugrnglistsindex"],["self"]],["bool"]]],[11,"ne","","",16,[[["debugrnglistsindex"],["self"]],["bool"]]],[11,"eq","","",17,[[["self"],["debugstroffset"]],["bool"]]],[11,"ne","","",17,[[["self"],["debugstroffset"]],["bool"]]],[11,"eq","","",18,[[["debugstroffsetsbase"],["self"]],["bool"]]],[11,"ne","","",18,[[["debugstroffsetsbase"],["self"]],["bool"]]],[11,"eq","","",19,[[["self"],["debugstroffsetsindex"]],["bool"]]],[11,"ne","","",19,[[["self"],["debugstroffsetsindex"]],["bool"]]],[11,"eq","","",20,[[["self"],["debugtypesoffset"]],["bool"]]],[11,"ne","","",20,[[["self"],["debugtypesoffset"]],["bool"]]],[11,"eq","","",21,[[["self"],["debugtypesignature"]],["bool"]]],[11,"ne","","",21,[[["self"],["debugtypesignature"]],["bool"]]],[11,"eq","","",22,[[["debugframeoffset"],["self"]],["bool"]]],[11,"ne","","",22,[[["debugframeoffset"],["self"]],["bool"]]],[11,"eq","","",23,[[["ehframeoffset"],["self"]],["bool"]]],[11,"ne","","",23,[[["ehframeoffset"],["self"]],["bool"]]],[11,"eq","","",25,[[["self"],["unitsectionoffset"]],["bool"]]],[11,"ne","","",25,[[["self"],["unitsectionoffset"]],["bool"]]],[11,"eq","","",26,[[["self"],["sectionid"]],["bool"]]],[11,"eq","gimli::constants","",31,[[["dwut"],["self"]],["bool"]]],[11,"ne","","",31,[[["dwut"],["self"]],["bool"]]],[11,"eq","","",32,[[["dwcfa"],["self"]],["bool"]]],[11,"ne","","",32,[[["dwcfa"],["self"]],["bool"]]],[11,"eq","","",33,[[["dwchildren"],["self"]],["bool"]]],[11,"ne","","",33,[[["dwchildren"],["self"]],["bool"]]],[11,"eq","","",34,[[["self"],["dwtag"]],["bool"]]],[11,"ne","","",34,[[["self"],["dwtag"]],["bool"]]],[11,"eq","","",35,[[["dwat"],["self"]],["bool"]]],[11,"ne","","",35,[[["dwat"],["self"]],["bool"]]],[11,"eq","","",36,[[["self"],["dwform"]],["bool"]]],[11,"ne","","",36,[[["self"],["dwform"]],["bool"]]],[11,"eq","","",37,[[["dwate"],["self"]],["bool"]]],[11,"ne","","",37,[[["dwate"],["self"]],["bool"]]],[11,"eq","","",38,[[["self"],["dwlle"]],["bool"]]],[11,"ne","","",38,[[["self"],["dwlle"]],["bool"]]],[11,"eq","","",39,[[["dwds"],["self"]],["bool"]]],[11,"ne","","",39,[[["dwds"],["self"]],["bool"]]],[11,"eq","","",40,[[["self"],["dwend"]],["bool"]]],[11,"ne","","",40,[[["self"],["dwend"]],["bool"]]],[11,"eq","","",41,[[["dwaccess"],["self"]],["bool"]]],[11,"ne","","",41,[[["dwaccess"],["self"]],["bool"]]],[11,"eq","","",42,[[["dwvis"],["self"]],["bool"]]],[11,"ne","","",42,[[["dwvis"],["self"]],["bool"]]],[11,"eq","","",43,[[["self"],["dwvirtuality"]],["bool"]]],[11,"ne","","",43,[[["self"],["dwvirtuality"]],["bool"]]],[11,"eq","","",44,[[["dwlang"],["self"]],["bool"]]],[11,"ne","","",44,[[["dwlang"],["self"]],["bool"]]],[11,"eq","","",45,[[["self"],["dwaddr"]],["bool"]]],[11,"ne","","",45,[[["self"],["dwaddr"]],["bool"]]],[11,"eq","","",46,[[["dwid"],["self"]],["bool"]]],[11,"ne","","",46,[[["dwid"],["self"]],["bool"]]],[11,"eq","","",47,[[["self"],["dwcc"]],["bool"]]],[11,"ne","","",47,[[["self"],["dwcc"]],["bool"]]],[11,"eq","","",48,[[["dwinl"],["self"]],["bool"]]],[11,"ne","","",48,[[["dwinl"],["self"]],["bool"]]],[11,"eq","","",49,[[["dword"],["self"]],["bool"]]],[11,"ne","","",49,[[["dword"],["self"]],["bool"]]],[11,"eq","","",50,[[["dwdsc"],["self"]],["bool"]]],[11,"ne","","",50,[[["dwdsc"],["self"]],["bool"]]],[11,"eq","","",51,[[["dwidx"],["self"]],["bool"]]],[11,"ne","","",51,[[["dwidx"],["self"]],["bool"]]],[11,"eq","","",52,[[["self"],["dwdefaulted"]],["bool"]]],[11,"ne","","",52,[[["self"],["dwdefaulted"]],["bool"]]],[11,"eq","","",53,[[["self"],["dwlns"]],["bool"]]],[11,"ne","","",53,[[["self"],["dwlns"]],["bool"]]],[11,"eq","","",54,[[["dwlne"],["self"]],["bool"]]],[11,"ne","","",54,[[["dwlne"],["self"]],["bool"]]],[11,"eq","","",55,[[["self"],["dwlnct"]],["bool"]]],[11,"ne","","",55,[[["self"],["dwlnct"]],["bool"]]],[11,"eq","","",56,[[["self"],["dwmacro"]],["bool"]]],[11,"ne","","",56,[[["self"],["dwmacro"]],["bool"]]],[11,"eq","","",57,[[["dwrle"],["self"]],["bool"]]],[11,"ne","","",57,[[["dwrle"],["self"]],["bool"]]],[11,"eq","","",58,[[["dwop"],["self"]],["bool"]]],[11,"ne","","",58,[[["dwop"],["self"]],["bool"]]],[11,"eq","","",59,[[["self"],["dwehpe"]],["bool"]]],[11,"ne","","",59,[[["self"],["dwehpe"]],["bool"]]],[11,"eq","gimli","",27,[[["runtimeendian"],["self"]],["bool"]]],[11,"eq","","",231,[[["self"],["littleendian"]],["bool"]]],[11,"eq","","",230,[[["self"],["bigendian"]],["bool"]]],[11,"eq","gimli::read","",157,[[["self"],["debugframe"]],["bool"]]],[11,"ne","","",157,[[["self"],["debugframe"]],["bool"]]],[11,"eq","","",158,[[["self"],["ehframehdr"]],["bool"]]],[11,"ne","","",158,[[["self"],["ehframehdr"]],["bool"]]],[11,"eq","","",161,[[["ehframe"],["self"]],["bool"]]],[11,"ne","","",161,[[["ehframe"],["self"]],["bool"]]],[11,"eq","","",60,[[["self"],["baseaddresses"]],["bool"]]],[11,"ne","","",60,[[["self"],["baseaddresses"]],["bool"]]],[11,"eq","","",61,[[["sectionbaseaddresses"],["self"]],["bool"]]],[11,"ne","","",61,[[["sectionbaseaddresses"],["self"]],["bool"]]],[11,"eq","","",72,[[["cieorfde"],["self"]],["bool"]]],[11,"ne","","",72,[[["cieorfde"],["self"]],["bool"]]],[11,"eq","","",232,[[["augmentation"],["self"]],["bool"]]],[11,"ne","","",232,[[["augmentation"],["self"]],["bool"]]],[11,"eq","","",163,[[["commoninformationentry"],["self"]],["bool"]]],[11,"ne","","",163,[[["commoninformationentry"],["self"]],["bool"]]],[11,"eq","","",164,[[["self"],["partialframedescriptionentry"]],["bool"]]],[11,"ne","","",164,[[["self"],["partialframedescriptionentry"]],["bool"]]],[11,"eq","","",165,[[["self"],["framedescriptionentry"]],["bool"]]],[11,"ne","","",165,[[["self"],["framedescriptionentry"]],["bool"]]],[11,"eq","","",233,[[["unwindcontext"],["self"]],["bool"]]],[11,"eq","","",168,[[["unwindtablerow"],["self"]],["bool"]]],[11,"ne","","",168,[[["unwindtablerow"],["self"]],["bool"]]],[11,"eq","","",73,[[["self"],["cfarule"]],["bool"]]],[11,"ne","","",73,[[["self"],["cfarule"]],["bool"]]],[11,"eq","","",75,[[["self"],["registerrule"]],["bool"]]],[11,"ne","","",75,[[["self"],["registerrule"]],["bool"]]],[11,"eq","","",76,[[["self"],["callframeinstruction"]],["bool"]]],[11,"ne","","",76,[[["self"],["callframeinstruction"]],["bool"]]],[11,"eq","","",96,[[["self"],["pointer"]],["bool"]]],[11,"ne","","",96,[[["self"],["pointer"]],["bool"]]],[11,"eq","","",171,[[["self"],["endianslice"]],["bool"]]],[11,"ne","","",171,[[["self"],["endianslice"]],["bool"]]],[11,"eq","","",64,[[["readeroffsetid"],["self"]],["bool"]]],[11,"ne","","",64,[[["readeroffsetid"],["self"]],["bool"]]],[11,"eq","","",174,[[["abbreviation"],["self"]],["bool"]]],[11,"ne","","",174,[[["abbreviation"],["self"]],["bool"]]],[11,"eq","","",175,[[["self"],["attributespecification"]],["bool"]]],[11,"ne","","",175,[[["self"],["attributespecification"]],["bool"]]],[11,"eq","","",176,[[["self"],["arangeentry"]],["bool"]]],[11,"ne","","",176,[[["self"],["arangeentry"]],["bool"]]],[11,"eq","","",97,[[["self"],["lineinstruction"]],["bool"]]],[11,"ne","","",97,[[["self"],["lineinstruction"]],["bool"]]],[11,"eq","","",182,[[["linerow"],["self"]],["bool"]]],[11,"ne","","",182,[[["linerow"],["self"]],["bool"]]],[11,"eq","","",98,[[["self"],["columntype"]],["bool"]]],[11,"ne","","",98,[[["self"],["columntype"]],["bool"]]],[11,"eq","","",183,[[["self"],["lineprogramheader"]],["bool"]]],[11,"ne","","",183,[[["self"],["lineprogramheader"]],["bool"]]],[11,"eq","","",184,[[["self"],["incompletelineprogram"]],["bool"]]],[11,"ne","","",184,[[["self"],["incompletelineprogram"]],["bool"]]],[11,"eq","","",185,[[["completelineprogram"],["self"]],["bool"]]],[11,"ne","","",185,[[["completelineprogram"],["self"]],["bool"]]],[11,"eq","","",186,[[["fileentry"],["self"]],["bool"]]],[11,"ne","","",186,[[["fileentry"],["self"]],["bool"]]],[11,"eq","","",66,[[["self"],["fileentryformat"]],["bool"]]],[11,"ne","","",66,[[["self"],["fileentryformat"]],["bool"]]],[11,"eq","","",67,[[["self"],["locationlistentry"]],["bool"]]],[11,"ne","","",67,[[["self"],["locationlistentry"]],["bool"]]],[11,"eq","","",109,[[["self"],["diereference"]],["bool"]]],[11,"ne","","",109,[[["self"],["diereference"]],["bool"]]],[11,"eq","","",110,[[["self"],["operation"]],["bool"]]],[11,"ne","","",110,[[["self"],["operation"]],["bool"]]],[11,"eq","","",133,[[["self"],["location"]],["bool"]]],[11,"ne","","",133,[[["self"],["location"]],["bool"]]],[11,"eq","","",68,[[["piece"],["self"]],["bool"]]],[11,"ne","","",68,[[["piece"],["self"]],["bool"]]],[11,"eq","","",139,[[["self"],["evaluationresult"]],["bool"]]],[11,"ne","","",139,[[["self"],["evaluationresult"]],["bool"]]],[11,"eq","","",69,[[["expression"],["self"]],["bool"]]],[11,"ne","","",69,[[["expression"],["self"]],["bool"]]],[11,"eq","","",70,[[["self"],["range"]],["bool"]]],[11,"ne","","",70,[[["self"],["range"]],["bool"]]],[11,"eq","","",71,[[["unitoffset"],["self"]],["bool"]]],[11,"ne","","",71,[[["unitoffset"],["self"]],["bool"]]],[11,"eq","","",210,[[["self"],["compilationunitheader"]],["bool"]]],[11,"ne","","",210,[[["self"],["compilationunitheader"]],["bool"]]],[11,"eq","","",211,[[["self"],["unitheader"]],["bool"]]],[11,"ne","","",211,[[["self"],["unitheader"]],["bool"]]],[11,"eq","","",152,[[["self"],["attributevalue"]],["bool"]]],[11,"ne","","",152,[[["self"],["attributevalue"]],["bool"]]],[11,"eq","","",213,[[["self"],["attribute"]],["bool"]]],[11,"ne","","",213,[[["self"],["attribute"]],["bool"]]],[11,"eq","","",222,[[["self"],["typeunitheader"]],["bool"]]],[11,"ne","","",222,[[["self"],["typeunitheader"]],["bool"]]],[11,"eq","","",153,[[["self"],["valuetype"]],["bool"]]],[11,"eq","","",154,[[["value"],["self"]],["bool"]]],[11,"ne","","",154,[[["value"],["self"]],["bool"]]],[11,"eq","","",155,[[["self"],["error"]],["bool"]]],[11,"ne","","",155,[[["self"],["error"]],["bool"]]],[11,"cmp","gimli","",2,[[["self"],["register"]],["ordering"]]],[11,"cmp","","",6,[[["debuginfooffset"],["self"]],["ordering"]]],[11,"cmp","","",20,[[["self"],["debugtypesoffset"]],["ordering"]]],[11,"cmp","","",25,[[["self"],["unitsectionoffset"]],["ordering"]]],[11,"cmp","","",26,[[["self"],["sectionid"]],["ordering"]]],[11,"cmp","gimli::constants","",31,[[["dwut"],["self"]],["ordering"]]],[11,"cmp","","",32,[[["dwcfa"],["self"]],["ordering"]]],[11,"cmp","","",33,[[["dwchildren"],["self"]],["ordering"]]],[11,"cmp","","",34,[[["self"],["dwtag"]],["ordering"]]],[11,"cmp","","",35,[[["dwat"],["self"]],["ordering"]]],[11,"cmp","","",36,[[["self"],["dwform"]],["ordering"]]],[11,"cmp","","",37,[[["dwate"],["self"]],["ordering"]]],[11,"cmp","","",38,[[["self"],["dwlle"]],["ordering"]]],[11,"cmp","","",39,[[["dwds"],["self"]],["ordering"]]],[11,"cmp","","",40,[[["self"],["dwend"]],["ordering"]]],[11,"cmp","","",41,[[["dwaccess"],["self"]],["ordering"]]],[11,"cmp","","",42,[[["dwvis"],["self"]],["ordering"]]],[11,"cmp","","",43,[[["self"],["dwvirtuality"]],["ordering"]]],[11,"cmp","","",44,[[["dwlang"],["self"]],["ordering"]]],[11,"cmp","","",45,[[["self"],["dwaddr"]],["ordering"]]],[11,"cmp","","",46,[[["dwid"],["self"]],["ordering"]]],[11,"cmp","","",47,[[["self"],["dwcc"]],["ordering"]]],[11,"cmp","","",48,[[["dwinl"],["self"]],["ordering"]]],[11,"cmp","","",49,[[["dword"],["self"]],["ordering"]]],[11,"cmp","","",50,[[["dwdsc"],["self"]],["ordering"]]],[11,"cmp","","",51,[[["dwidx"],["self"]],["ordering"]]],[11,"cmp","","",52,[[["self"],["dwdefaulted"]],["ordering"]]],[11,"cmp","","",53,[[["self"],["dwlns"]],["ordering"]]],[11,"cmp","","",54,[[["dwlne"],["self"]],["ordering"]]],[11,"cmp","","",55,[[["self"],["dwlnct"]],["ordering"]]],[11,"cmp","","",56,[[["self"],["dwmacro"]],["ordering"]]],[11,"cmp","","",57,[[["dwrle"],["self"]],["ordering"]]],[11,"cmp","","",58,[[["dwop"],["self"]],["ordering"]]],[11,"cmp","","",59,[[["self"],["dwehpe"]],["ordering"]]],[11,"cmp","gimli::read","",176,[[["self"],["arangeentry"]],["ordering"]]],[11,"cmp","","",98,[[["self"],["columntype"]],["ordering"]]],[11,"cmp","","",71,[[["unitoffset"],["self"]],["ordering"]]],[11,"partial_cmp","gimli","",2,[[["self"],["register"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",2,[[["self"],["register"]],["bool"]]],[11,"le","","",2,[[["self"],["register"]],["bool"]]],[11,"gt","","",2,[[["self"],["register"]],["bool"]]],[11,"ge","","",2,[[["self"],["register"]],["bool"]]],[11,"partial_cmp","","",6,[[["debuginfooffset"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",6,[[["debuginfooffset"],["self"]],["bool"]]],[11,"le","","",6,[[["debuginfooffset"],["self"]],["bool"]]],[11,"gt","","",6,[[["debuginfooffset"],["self"]],["bool"]]],[11,"ge","","",6,[[["debuginfooffset"],["self"]],["bool"]]],[11,"partial_cmp","","",20,[[["self"],["debugtypesoffset"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",20,[[["self"],["debugtypesoffset"]],["bool"]]],[11,"le","","",20,[[["self"],["debugtypesoffset"]],["bool"]]],[11,"gt","","",20,[[["self"],["debugtypesoffset"]],["bool"]]],[11,"ge","","",20,[[["self"],["debugtypesoffset"]],["bool"]]],[11,"partial_cmp","","",25,[[["self"],["unitsectionoffset"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",25,[[["self"],["unitsectionoffset"]],["bool"]]],[11,"le","","",25,[[["self"],["unitsectionoffset"]],["bool"]]],[11,"gt","","",25,[[["self"],["unitsectionoffset"]],["bool"]]],[11,"ge","","",25,[[["self"],["unitsectionoffset"]],["bool"]]],[11,"partial_cmp","","",26,[[["self"],["sectionid"]],[["option",["ordering"]],["ordering"]]]],[11,"partial_cmp","gimli::constants","",31,[[["dwut"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",31,[[["dwut"],["self"]],["bool"]]],[11,"le","","",31,[[["dwut"],["self"]],["bool"]]],[11,"gt","","",31,[[["dwut"],["self"]],["bool"]]],[11,"ge","","",31,[[["dwut"],["self"]],["bool"]]],[11,"partial_cmp","","",32,[[["dwcfa"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",32,[[["dwcfa"],["self"]],["bool"]]],[11,"le","","",32,[[["dwcfa"],["self"]],["bool"]]],[11,"gt","","",32,[[["dwcfa"],["self"]],["bool"]]],[11,"ge","","",32,[[["dwcfa"],["self"]],["bool"]]],[11,"partial_cmp","","",33,[[["dwchildren"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",33,[[["dwchildren"],["self"]],["bool"]]],[11,"le","","",33,[[["dwchildren"],["self"]],["bool"]]],[11,"gt","","",33,[[["dwchildren"],["self"]],["bool"]]],[11,"ge","","",33,[[["dwchildren"],["self"]],["bool"]]],[11,"partial_cmp","","",34,[[["self"],["dwtag"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",34,[[["self"],["dwtag"]],["bool"]]],[11,"le","","",34,[[["self"],["dwtag"]],["bool"]]],[11,"gt","","",34,[[["self"],["dwtag"]],["bool"]]],[11,"ge","","",34,[[["self"],["dwtag"]],["bool"]]],[11,"partial_cmp","","",35,[[["dwat"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",35,[[["dwat"],["self"]],["bool"]]],[11,"le","","",35,[[["dwat"],["self"]],["bool"]]],[11,"gt","","",35,[[["dwat"],["self"]],["bool"]]],[11,"ge","","",35,[[["dwat"],["self"]],["bool"]]],[11,"partial_cmp","","",36,[[["self"],["dwform"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",36,[[["self"],["dwform"]],["bool"]]],[11,"le","","",36,[[["self"],["dwform"]],["bool"]]],[11,"gt","","",36,[[["self"],["dwform"]],["bool"]]],[11,"ge","","",36,[[["self"],["dwform"]],["bool"]]],[11,"partial_cmp","","",37,[[["dwate"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",37,[[["dwate"],["self"]],["bool"]]],[11,"le","","",37,[[["dwate"],["self"]],["bool"]]],[11,"gt","","",37,[[["dwate"],["self"]],["bool"]]],[11,"ge","","",37,[[["dwate"],["self"]],["bool"]]],[11,"partial_cmp","","",38,[[["self"],["dwlle"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",38,[[["self"],["dwlle"]],["bool"]]],[11,"le","","",38,[[["self"],["dwlle"]],["bool"]]],[11,"gt","","",38,[[["self"],["dwlle"]],["bool"]]],[11,"ge","","",38,[[["self"],["dwlle"]],["bool"]]],[11,"partial_cmp","","",39,[[["dwds"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",39,[[["dwds"],["self"]],["bool"]]],[11,"le","","",39,[[["dwds"],["self"]],["bool"]]],[11,"gt","","",39,[[["dwds"],["self"]],["bool"]]],[11,"ge","","",39,[[["dwds"],["self"]],["bool"]]],[11,"partial_cmp","","",40,[[["self"],["dwend"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",40,[[["self"],["dwend"]],["bool"]]],[11,"le","","",40,[[["self"],["dwend"]],["bool"]]],[11,"gt","","",40,[[["self"],["dwend"]],["bool"]]],[11,"ge","","",40,[[["self"],["dwend"]],["bool"]]],[11,"partial_cmp","","",41,[[["dwaccess"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",41,[[["dwaccess"],["self"]],["bool"]]],[11,"le","","",41,[[["dwaccess"],["self"]],["bool"]]],[11,"gt","","",41,[[["dwaccess"],["self"]],["bool"]]],[11,"ge","","",41,[[["dwaccess"],["self"]],["bool"]]],[11,"partial_cmp","","",42,[[["dwvis"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",42,[[["dwvis"],["self"]],["bool"]]],[11,"le","","",42,[[["dwvis"],["self"]],["bool"]]],[11,"gt","","",42,[[["dwvis"],["self"]],["bool"]]],[11,"ge","","",42,[[["dwvis"],["self"]],["bool"]]],[11,"partial_cmp","","",43,[[["self"],["dwvirtuality"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",43,[[["self"],["dwvirtuality"]],["bool"]]],[11,"le","","",43,[[["self"],["dwvirtuality"]],["bool"]]],[11,"gt","","",43,[[["self"],["dwvirtuality"]],["bool"]]],[11,"ge","","",43,[[["self"],["dwvirtuality"]],["bool"]]],[11,"partial_cmp","","",44,[[["dwlang"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",44,[[["dwlang"],["self"]],["bool"]]],[11,"le","","",44,[[["dwlang"],["self"]],["bool"]]],[11,"gt","","",44,[[["dwlang"],["self"]],["bool"]]],[11,"ge","","",44,[[["dwlang"],["self"]],["bool"]]],[11,"partial_cmp","","",45,[[["self"],["dwaddr"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",45,[[["self"],["dwaddr"]],["bool"]]],[11,"le","","",45,[[["self"],["dwaddr"]],["bool"]]],[11,"gt","","",45,[[["self"],["dwaddr"]],["bool"]]],[11,"ge","","",45,[[["self"],["dwaddr"]],["bool"]]],[11,"partial_cmp","","",46,[[["dwid"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",46,[[["dwid"],["self"]],["bool"]]],[11,"le","","",46,[[["dwid"],["self"]],["bool"]]],[11,"gt","","",46,[[["dwid"],["self"]],["bool"]]],[11,"ge","","",46,[[["dwid"],["self"]],["bool"]]],[11,"partial_cmp","","",47,[[["self"],["dwcc"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",47,[[["self"],["dwcc"]],["bool"]]],[11,"le","","",47,[[["self"],["dwcc"]],["bool"]]],[11,"gt","","",47,[[["self"],["dwcc"]],["bool"]]],[11,"ge","","",47,[[["self"],["dwcc"]],["bool"]]],[11,"partial_cmp","","",48,[[["dwinl"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",48,[[["dwinl"],["self"]],["bool"]]],[11,"le","","",48,[[["dwinl"],["self"]],["bool"]]],[11,"gt","","",48,[[["dwinl"],["self"]],["bool"]]],[11,"ge","","",48,[[["dwinl"],["self"]],["bool"]]],[11,"partial_cmp","","",49,[[["dword"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",49,[[["dword"],["self"]],["bool"]]],[11,"le","","",49,[[["dword"],["self"]],["bool"]]],[11,"gt","","",49,[[["dword"],["self"]],["bool"]]],[11,"ge","","",49,[[["dword"],["self"]],["bool"]]],[11,"partial_cmp","","",50,[[["dwdsc"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",50,[[["dwdsc"],["self"]],["bool"]]],[11,"le","","",50,[[["dwdsc"],["self"]],["bool"]]],[11,"gt","","",50,[[["dwdsc"],["self"]],["bool"]]],[11,"ge","","",50,[[["dwdsc"],["self"]],["bool"]]],[11,"partial_cmp","","",51,[[["dwidx"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",51,[[["dwidx"],["self"]],["bool"]]],[11,"le","","",51,[[["dwidx"],["self"]],["bool"]]],[11,"gt","","",51,[[["dwidx"],["self"]],["bool"]]],[11,"ge","","",51,[[["dwidx"],["self"]],["bool"]]],[11,"partial_cmp","","",52,[[["self"],["dwdefaulted"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",52,[[["self"],["dwdefaulted"]],["bool"]]],[11,"le","","",52,[[["self"],["dwdefaulted"]],["bool"]]],[11,"gt","","",52,[[["self"],["dwdefaulted"]],["bool"]]],[11,"ge","","",52,[[["self"],["dwdefaulted"]],["bool"]]],[11,"partial_cmp","","",53,[[["self"],["dwlns"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",53,[[["self"],["dwlns"]],["bool"]]],[11,"le","","",53,[[["self"],["dwlns"]],["bool"]]],[11,"gt","","",53,[[["self"],["dwlns"]],["bool"]]],[11,"ge","","",53,[[["self"],["dwlns"]],["bool"]]],[11,"partial_cmp","","",54,[[["dwlne"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",54,[[["dwlne"],["self"]],["bool"]]],[11,"le","","",54,[[["dwlne"],["self"]],["bool"]]],[11,"gt","","",54,[[["dwlne"],["self"]],["bool"]]],[11,"ge","","",54,[[["dwlne"],["self"]],["bool"]]],[11,"partial_cmp","","",55,[[["self"],["dwlnct"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",55,[[["self"],["dwlnct"]],["bool"]]],[11,"le","","",55,[[["self"],["dwlnct"]],["bool"]]],[11,"gt","","",55,[[["self"],["dwlnct"]],["bool"]]],[11,"ge","","",55,[[["self"],["dwlnct"]],["bool"]]],[11,"partial_cmp","","",56,[[["self"],["dwmacro"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",56,[[["self"],["dwmacro"]],["bool"]]],[11,"le","","",56,[[["self"],["dwmacro"]],["bool"]]],[11,"gt","","",56,[[["self"],["dwmacro"]],["bool"]]],[11,"ge","","",56,[[["self"],["dwmacro"]],["bool"]]],[11,"partial_cmp","","",57,[[["dwrle"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",57,[[["dwrle"],["self"]],["bool"]]],[11,"le","","",57,[[["dwrle"],["self"]],["bool"]]],[11,"gt","","",57,[[["dwrle"],["self"]],["bool"]]],[11,"ge","","",57,[[["dwrle"],["self"]],["bool"]]],[11,"partial_cmp","","",58,[[["dwop"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",58,[[["dwop"],["self"]],["bool"]]],[11,"le","","",58,[[["dwop"],["self"]],["bool"]]],[11,"gt","","",58,[[["dwop"],["self"]],["bool"]]],[11,"ge","","",58,[[["dwop"],["self"]],["bool"]]],[11,"partial_cmp","","",59,[[["self"],["dwehpe"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",59,[[["self"],["dwehpe"]],["bool"]]],[11,"le","","",59,[[["self"],["dwehpe"]],["bool"]]],[11,"gt","","",59,[[["self"],["dwehpe"]],["bool"]]],[11,"ge","","",59,[[["self"],["dwehpe"]],["bool"]]],[11,"partial_cmp","gimli::read","",176,[[["self"],["arangeentry"]],[["ordering"],["option",["ordering"]]]]],[11,"partial_cmp","","",98,[[["self"],["columntype"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",98,[[["self"],["columntype"]],["bool"]]],[11,"le","","",98,[[["self"],["columntype"]],["bool"]]],[11,"gt","","",98,[[["self"],["columntype"]],["bool"]]],[11,"ge","","",98,[[["self"],["columntype"]],["bool"]]],[11,"partial_cmp","","",71,[[["unitoffset"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",71,[[["unitoffset"],["self"]],["bool"]]],[11,"le","","",71,[[["unitoffset"],["self"]],["bool"]]],[11,"gt","","",71,[[["unitoffset"],["self"]],["bool"]]],[11,"ge","","",71,[[["unitoffset"],["self"]],["bool"]]],[11,"index","","",171,[[["self"],["usize"]]]],[11,"index","","",171,[[["rangefrom",["usize"]],["self"],["usize"]]]],[11,"hash","gimli","",24,[[["self"],["__h"]]]],[11,"hash","","",0,[[["self"],["__h"]]]],[11,"hash","","",1,[[["self"],["__h"]]]],[11,"hash","","",2,[[["self"],["__h"]]]],[11,"hash","","",3,[[["self"],["__h"]]]],[11,"hash","","",6,[[["self"],["__h"]]]],[11,"hash","","",9,[[["self"],["__h"]]]],[11,"hash","","",12,[[["self"],["__h"]]]],[11,"hash","","",13,[[["self"],["__h"]]]],[11,"hash","","",14,[[["self"],["__h"]]]],[11,"hash","","",20,[[["self"],["__h"]]]],[11,"hash","","",21,[[["self"],["__h"]]]],[11,"hash","","",22,[[["self"],["__h"]]]],[11,"hash","","",23,[[["self"],["__h"]]]],[11,"hash","","",25,[[["self"],["__h"]]]],[11,"hash","","",26,[[["self"],["__h"]]]],[11,"hash","gimli::constants","",31,[[["self"],["__h"]]]],[11,"hash","","",32,[[["self"],["__h"]]]],[11,"hash","","",33,[[["self"],["__h"]]]],[11,"hash","","",34,[[["self"],["__h"]]]],[11,"hash","","",35,[[["self"],["__h"]]]],[11,"hash","","",36,[[["self"],["__h"]]]],[11,"hash","","",37,[[["self"],["__h"]]]],[11,"hash","","",38,[[["self"],["__h"]]]],[11,"hash","","",39,[[["self"],["__h"]]]],[11,"hash","","",40,[[["self"],["__h"]]]],[11,"hash","","",41,[[["self"],["__h"]]]],[11,"hash","","",42,[[["self"],["__h"]]]],[11,"hash","","",43,[[["self"],["__h"]]]],[11,"hash","","",44,[[["self"],["__h"]]]],[11,"hash","","",45,[[["self"],["__h"]]]],[11,"hash","","",46,[[["self"],["__h"]]]],[11,"hash","","",47,[[["self"],["__h"]]]],[11,"hash","","",48,[[["self"],["__h"]]]],[11,"hash","","",49,[[["self"],["__h"]]]],[11,"hash","","",50,[[["self"],["__h"]]]],[11,"hash","","",51,[[["self"],["__h"]]]],[11,"hash","","",52,[[["self"],["__h"]]]],[11,"hash","","",53,[[["self"],["__h"]]]],[11,"hash","","",54,[[["self"],["__h"]]]],[11,"hash","","",55,[[["self"],["__h"]]]],[11,"hash","","",56,[[["self"],["__h"]]]],[11,"hash","","",57,[[["self"],["__h"]]]],[11,"hash","","",58,[[["self"],["__h"]]]],[11,"hash","","",59,[[["self"],["__h"]]]],[11,"hash","gimli","",27,[[["self"],["__h"]]]],[11,"hash","","",231,[[["self"],["__h"]]]],[11,"hash","","",230,[[["self"],["__h"]]]],[11,"hash","gimli::read","",171,[[["self"],["__h"]]]],[11,"hash","","",67,[[["self"],["__h"]]]],[11,"hash","","",69,[[["self"],["__h"]]]],[11,"hash","","",70,[[["self"],["__h"]]]],[11,"hash","","",71,[[["self"],["__h"]]]],[11,"next","","",234,[[["self"]],["option"]]],[11,"into","","",96,[[],["u64"]]],[11,"into","","",171,[[]]],[11,"clone","gimli","",24,[[["self"]],["format"]]],[11,"clone","","",0,[[["self"]],["encoding"]]],[11,"clone","","",1,[[["self"]],["lineencoding"]]],[11,"clone","","",2,[[["self"]],["register"]]],[11,"clone","","",3,[[["self"]],["debugabbrevoffset"]]],[11,"clone","","",4,[[["self"]],["debugaddrbase"]]],[11,"clone","","",5,[[["self"]],["debugaddrindex"]]],[11,"clone","","",6,[[["self"]],["debuginfooffset"]]],[11,"clone","","",7,[[["self"]],["debuglineoffset"]]],[11,"clone","","",8,[[["self"]],["debuglinestroffset"]]],[11,"clone","","",9,[[["self"]],["locationlistsoffset"]]],[11,"clone","","",10,[[["self"]],["debugloclistsbase"]]],[11,"clone","","",11,[[["self"]],["debugloclistsindex"]]],[11,"clone","","",12,[[["self"]],["debugmacinfooffset"]]],[11,"clone","","",13,[[["self"]],["debugmacrooffset"]]],[11,"clone","","",14,[[["self"]],["rangelistsoffset"]]],[11,"clone","","",15,[[["self"]],["debugrnglistsbase"]]],[11,"clone","","",16,[[["self"]],["debugrnglistsindex"]]],[11,"clone","","",17,[[["self"]],["debugstroffset"]]],[11,"clone","","",18,[[["self"]],["debugstroffsetsbase"]]],[11,"clone","","",19,[[["self"]],["debugstroffsetsindex"]]],[11,"clone","","",20,[[["self"]],["debugtypesoffset"]]],[11,"clone","","",21,[[["self"]],["debugtypesignature"]]],[11,"clone","","",22,[[["self"]],["debugframeoffset"]]],[11,"clone","","",23,[[["self"]],["ehframeoffset"]]],[11,"clone","","",25,[[["self"]],["unitsectionoffset"]]],[11,"clone","","",26,[[["self"]],["sectionid"]]],[11,"clone","","",28,[[["self"]],["arm"]]],[11,"clone","","",29,[[["self"]],["x86"]]],[11,"clone","","",30,[[["self"]],["x86_64"]]],[11,"clone","gimli::constants","",31,[[["self"]],["dwut"]]],[11,"clone","","",32,[[["self"]],["dwcfa"]]],[11,"clone","","",33,[[["self"]],["dwchildren"]]],[11,"clone","","",34,[[["self"]],["dwtag"]]],[11,"clone","","",35,[[["self"]],["dwat"]]],[11,"clone","","",36,[[["self"]],["dwform"]]],[11,"clone","","",37,[[["self"]],["dwate"]]],[11,"clone","","",38,[[["self"]],["dwlle"]]],[11,"clone","","",39,[[["self"]],["dwds"]]],[11,"clone","","",40,[[["self"]],["dwend"]]],[11,"clone","","",41,[[["self"]],["dwaccess"]]],[11,"clone","","",42,[[["self"]],["dwvis"]]],[11,"clone","","",43,[[["self"]],["dwvirtuality"]]],[11,"clone","","",44,[[["self"]],["dwlang"]]],[11,"clone","","",45,[[["self"]],["dwaddr"]]],[11,"clone","","",46,[[["self"]],["dwid"]]],[11,"clone","","",47,[[["self"]],["dwcc"]]],[11,"clone","","",48,[[["self"]],["dwinl"]]],[11,"clone","","",49,[[["self"]],["dword"]]],[11,"clone","","",50,[[["self"]],["dwdsc"]]],[11,"clone","","",51,[[["self"]],["dwidx"]]],[11,"clone","","",52,[[["self"]],["dwdefaulted"]]],[11,"clone","","",53,[[["self"]],["dwlns"]]],[11,"clone","","",54,[[["self"]],["dwlne"]]],[11,"clone","","",55,[[["self"]],["dwlnct"]]],[11,"clone","","",56,[[["self"]],["dwmacro"]]],[11,"clone","","",57,[[["self"]],["dwrle"]]],[11,"clone","","",58,[[["self"]],["dwop"]]],[11,"clone","","",59,[[["self"]],["dwehpe"]]],[11,"clone","gimli","",27,[[["self"]],["runtimeendian"]]],[11,"clone","","",231,[[["self"]],["littleendian"]]],[11,"clone","","",230,[[["self"]],["bigendian"]]],[11,"clone","gimli::read","",156,[[["self"]],["debugaddr"]]],[11,"clone","","",157,[[["self"]],["debugframe"]]],[11,"clone","","",158,[[["self"]],["ehframehdr"]]],[11,"clone","","",159,[[["self"]],["parsedehframehdr"]]],[11,"clone","","",160,[[["self"]],["ehhdrtable"]]],[11,"clone","","",161,[[["self"]],["ehframe"]]],[11,"clone","","",60,[[["self"]],["baseaddresses"]]],[11,"clone","","",61,[[["self"]],["sectionbaseaddresses"]]],[11,"clone","","",162,[[["self"]],["cfientriesiter"]]],[11,"clone","","",72,[[["self"]],["cieorfde"]]],[11,"clone","","",232,[[["self"]],["augmentation"]]],[11,"clone","","",163,[[["self"]],["commoninformationentry"]]],[11,"clone","","",164,[[["self"]],["partialframedescriptionentry"]]],[11,"clone","","",165,[[["self"]],["framedescriptionentry"]]],[11,"clone","","",166,[[["self"]],["uninitializedunwindcontext"]]],[11,"clone","","",233,[[["self"]],["unwindcontext"]]],[11,"clone","","",234,[[["self"]],["registerruleiter"]]],[11,"clone","","",168,[[["self"]],["unwindtablerow"]]],[11,"clone","","",73,[[["self"]],["cfarule"]]],[11,"clone","","",75,[[["self"]],["registerrule"]]],[11,"clone","","",76,[[["self"]],["callframeinstruction"]]],[11,"clone","","",169,[[["self"]],["callframeinstructioniter"]]],[11,"clone","","",96,[[["self"]],["pointer"]]],[11,"clone","","",171,[[["self"]],["endianslice"]]],[11,"clone","","",64,[[["self"]],["readeroffsetid"]]],[11,"clone","","",172,[[["self"]],["debugabbrev"]]],[11,"clone","","",173,[[["self"]],["abbreviations"]]],[11,"clone","","",174,[[["self"]],["abbreviation"]]],[11,"clone","","",175,[[["self"]],["attributespecification"]]],[11,"clone","","",176,[[["self"]],["arangeentry"]]],[11,"clone","","",177,[[["self"]],["debugaranges"]]],[11,"clone","","",178,[[["self"]],["arangeentryiter"]]],[11,"clone","","",179,[[["self"]],["debugline"]]],[11,"clone","","",180,[[["self"]],["linerows"]]],[11,"clone","","",97,[[["self"]],["lineinstruction"]]],[11,"clone","","",181,[[["self"]],["lineinstructions"]]],[11,"clone","","",182,[[["self"]],["linerow"]]],[11,"clone","","",98,[[["self"]],["columntype"]]],[11,"clone","","",65,[[["self"]],["linesequence"]]],[11,"clone","","",183,[[["self"]],["lineprogramheader"]]],[11,"clone","","",184,[[["self"]],["incompletelineprogram"]]],[11,"clone","","",185,[[["self"]],["completelineprogram"]]],[11,"clone","","",186,[[["self"]],["fileentry"]]],[11,"clone","","",66,[[["self"]],["fileentryformat"]]],[11,"clone","","",187,[[["self"]],["debugloc"]]],[11,"clone","","",188,[[["self"]],["debugloclists"]]],[11,"clone","","",189,[[["self"]],["locationlists"]]],[11,"clone","","",99,[[["self"]],["rawloclistentry"]]],[11,"clone","","",67,[[["self"]],["locationlistentry"]]],[11,"clone","","",109,[[["self"]],["diereference"]]],[11,"clone","","",110,[[["self"]],["operation"]]],[11,"clone","","",133,[[["self"]],["location"]]],[11,"clone","","",68,[[["self"]],["piece"]]],[11,"clone","","",69,[[["self"]],["expression"]]],[11,"clone","","",192,[[["self"]],["operationiter"]]],[11,"clone","","",194,[[["self"]],["pubnamesentry"]]],[11,"clone","","",195,[[["self"]],["debugpubnames"]]],[11,"clone","","",196,[[["self"]],["pubnamesentryiter"]]],[11,"clone","","",197,[[["self"]],["pubtypesentry"]]],[11,"clone","","",198,[[["self"]],["debugpubtypes"]]],[11,"clone","","",199,[[["self"]],["pubtypesentryiter"]]],[11,"clone","","",200,[[["self"]],["debugranges"]]],[11,"clone","","",201,[[["self"]],["debugrnglists"]]],[11,"clone","","",202,[[["self"]],["rangelists"]]],[11,"clone","","",143,[[["self"]],["rawrnglistentry"]]],[11,"clone","","",70,[[["self"]],["range"]]],[11,"clone","","",205,[[["self"]],["debugstr"]]],[11,"clone","","",206,[[["self"]],["debugstroffsets"]]],[11,"clone","","",207,[[["self"]],["debuglinestr"]]],[11,"clone","","",71,[[["self"]],["unitoffset"]]],[11,"clone","","",208,[[["self"]],["debuginfo"]]],[11,"clone","","",209,[[["self"]],["compilationunitheadersiter"]]],[11,"clone","","",210,[[["self"]],["compilationunitheader"]]],[11,"clone","","",211,[[["self"]],["unitheader"]]],[11,"clone","","",212,[[["self"]],["debugginginformationentry"]]],[11,"clone","","",152,[[["self"]],["attributevalue"]]],[11,"clone","","",213,[[["self"]],["attribute"]]],[11,"clone","","",214,[[["self"]],["attrsiter"]]],[11,"clone","","",215,[[["self"]],["entriesraw"]]],[11,"clone","","",216,[[["self"]],["entriescursor"]]],[11,"clone","","",217,[[["self"]],["entriestree"]]],[11,"clone","","",220,[[["self"]],["debugtypes"]]],[11,"clone","","",221,[[["self"]],["typeunitheadersiter"]]],[11,"clone","","",222,[[["self"]],["typeunitheader"]]],[11,"clone","","",153,[[["self"]],["valuetype"]]],[11,"clone","","",154,[[["self"]],["value"]]],[11,"clone","","",155,[[["self"]],["error"]]],[11,"default","gimli","",1,[[],["self"]]],[11,"default","","",27,[[],["runtimeendian"]]],[11,"default","","",231,[[],["littleendian"]]],[11,"default","","",230,[[],["bigendian"]]],[11,"default","gimli::read","",156,[[],["debugaddr"]]],[11,"default","","",60,[[],["baseaddresses"]]],[11,"default","","",61,[[],["sectionbaseaddresses"]]],[11,"default","","",232,[[],["augmentation"]]],[11,"default","","",166,[[],["self"]]],[11,"default","","",168,[[],["self"]]],[11,"default","","",73,[[],["self"]]],[11,"default","","",96,[[],["self"]]],[11,"default","","",62,[[],["dwarf"]]],[11,"default","","",170,[[],["self"]]],[11,"default","","",171,[[],["endianslice"]]],[11,"default","","",172,[[],["debugabbrev"]]],[11,"default","","",173,[[],["abbreviations"]]],[11,"default","","",179,[[],["debugline"]]],[11,"default","","",187,[[],["debugloc"]]],[11,"default","","",188,[[],["debugloclists"]]],[11,"default","","",189,[[],["locationlists"]]],[11,"default","","",200,[[],["debugranges"]]],[11,"default","","",201,[[],["debugrnglists"]]],[11,"default","","",202,[[],["rangelists"]]],[11,"default","","",205,[[],["debugstr"]]],[11,"default","","",206,[[],["debugstroffsets"]]],[11,"default","","",207,[[],["debuglinestr"]]],[11,"default","","",208,[[],["debuginfo"]]],[11,"default","","",220,[[],["debugtypes"]]],[11,"is_little_endian","gimli","Return true for little endian byte order.",229,[[],["bool"]]],[11,"read_u16","","Reads an unsigned 16 bit integer from `buf`.",229,[[],["u16"]]],[11,"read_u32","","Reads an unsigned 32 bit integer from `buf`.",229,[[],["u32"]]],[11,"read_u64","","Reads an unsigned 64 bit integer from `buf`.",229,[[],["u64"]]],[11,"read_uint","","Read an unsigned n-bytes integer u64.",229,[[["self"]],["u64"]]],[11,"read_i16","","Reads a signed 16 bit integer from `buf`.",229,[[],["i16"]]],[11,"read_i32","","Reads a signed 32 bit integer from `buf`.",229,[[],["i32"]]],[11,"read_i64","","Reads a signed 64 bit integer from `buf`.",229,[[],["i64"]]],[11,"read_f32","","Reads a 32 bit floating point number from `buf`.",229,[[],["f32"]]],[11,"read_f64","","Reads a 32 bit floating point number from `buf`.",229,[[],["f64"]]],[11,"write_u16","","Writes an unsigned 16 bit integer `n` to `buf`.",229,[[["u16"]]]],[11,"write_u32","","Writes an unsigned 32 bit integer `n` to `buf`.",229,[[["u32"]]]],[11,"write_u64","","Writes an unsigned 64 bit integer `n` to `buf`.",229,[[["u64"]]]],[11,"entries","gimli::read","Iterate over the `CommonInformationEntry`s and…",224,[[["self"],["baseaddresses"]],["cfientriesiter"]]],[11,"cie_from_offset","","Parse the `CommonInformationEntry` at the given offset.",224,[[["self"],["baseaddresses"]],[["result",["commoninformationentry"]],["commoninformationentry"]]]],[11,"partial_fde_from_offset","","Parse the `PartialFrameDescriptionEntry` at the given…",224,[[["self"],["baseaddresses"]],[["result",["partialframedescriptionentry"]],["partialframedescriptionentry"]]]],[11,"fde_from_offset","","Parse the `FrameDescriptionEntry` at the given offset.",224,[[["f"],["self"],["baseaddresses"]],[["framedescriptionentry"],["result",["framedescriptionentry"]]]]],[11,"fde_for_address","","Find the `FrameDescriptionEntry` for the given address.",224,[[["baseaddresses"],["f"],["u64"],["self"]],[["framedescriptionentry"],["result",["framedescriptionentry"]]]]],[11,"unwind_info_for_address","","Find the frame unwind information for the given address.",224,[[["baseaddresses"],["u64"],["f"],["self"],["uninitializedunwindcontext"]],[["unwindtablerow"],["result",["unwindtablerow"]]]]],[11,"read_u8_array","","Read a u8 array.",226,[[["self"]],["result"]]],[11,"is_empty","","Return true if the number of bytes remaining is zero.",226,[[["self"]],["bool"]]],[11,"read_u8","","Read a u8.",226,[[["self"]],[["result",["u8"]],["u8"]]]],[11,"read_i8","","Read an i8.",226,[[["self"]],[["i8"],["result",["i8"]]]]],[11,"read_u16","","Read a u16.",226,[[["self"]],[["u16"],["result",["u16"]]]]],[11,"read_i16","","Read an i16.",226,[[["self"]],[["result",["i16"]],["i16"]]]],[11,"read_u32","","Read a u32.",226,[[["self"]],[["u32"],["result",["u32"]]]]],[11,"read_i32","","Read an i32.",226,[[["self"]],[["result",["i32"]],["i32"]]]],[11,"read_u64","","Read a u64.",226,[[["self"]],[["result",["u64"]],["u64"]]]],[11,"read_i64","","Read an i64.",226,[[["self"]],[["result",["i64"]],["i64"]]]],[11,"read_f32","","Read a f32.",226,[[["self"]],[["f32"],["result",["f32"]]]]],[11,"read_f64","","Read a f64.",226,[[["self"]],[["result",["f64"]],["f64"]]]],[11,"read_uint","","Read an unsigned n-bytes integer u64.",226,[[["self"],["usize"]],[["result",["u64"]],["u64"]]]],[11,"read_null_terminated_slice","","Read a null-terminated slice, and return it (excluding the…",226,[[["self"]],["result"]]],[11,"read_uleb128","","Read an unsigned LEB128 encoded integer.",226,[[["self"]],[["result",["u64"]],["u64"]]]],[11,"read_uleb128_u16","","Read an unsigned LEB128 encoded u16.",226,[[["self"]],[["u16"],["result",["u16"]]]]],[11,"read_sleb128","","Read a signed LEB128 encoded integer.",226,[[["self"]],[["result",["i64"]],["i64"]]]],[11,"read_initial_length","","Read an initial length field.",226,[[["self"]],["result"]]],[11,"read_address","","Read an address-sized integer, and return it as a `u64`.",226,[[["self"],["u8"]],[["result",["u64"]],["u64"]]]],[11,"read_word","","Parse a word-sized integer according to the DWARF format.",226,[[["self"],["format"]],["result"]]],[11,"read_length","","Parse a word-sized section length according to the DWARF…",226,[[["self"],["format"]],["result"]]],[11,"read_offset","","Parse a word-sized section offset according to the DWARF…",226,[[["self"],["format"]],["result"]]],[11,"read_sized_offset","","Parse a section offset of the given size.",226,[[["self"],["u8"]],["result"]]]],"p":[[3,"Encoding"],[3,"LineEncoding"],[3,"Register"],[3,"DebugAbbrevOffset"],[3,"DebugAddrBase"],[3,"DebugAddrIndex"],[3,"DebugInfoOffset"],[3,"DebugLineOffset"],[3,"DebugLineStrOffset"],[3,"LocationListsOffset"],[3,"DebugLocListsBase"],[3,"DebugLocListsIndex"],[3,"DebugMacinfoOffset"],[3,"DebugMacroOffset"],[3,"RangeListsOffset"],[3,"DebugRngListsBase"],[3,"DebugRngListsIndex"],[3,"DebugStrOffset"],[3,"DebugStrOffsetsBase"],[3,"DebugStrOffsetsIndex"],[3,"DebugTypesOffset"],[3,"DebugTypeSignature"],[3,"DebugFrameOffset"],[3,"EhFrameOffset"],[4,"Format"],[4,"UnitSectionOffset"],[4,"SectionId"],[4,"RunTimeEndian"],[3,"Arm"],[3,"X86"],[3,"X86_64"],[3,"DwUt"],[3,"DwCfa"],[3,"DwChildren"],[3,"DwTag"],[3,"DwAt"],[3,"DwForm"],[3,"DwAte"],[3,"DwLle"],[3,"DwDs"],[3,"DwEnd"],[3,"DwAccess"],[3,"DwVis"],[3,"DwVirtuality"],[3,"DwLang"],[3,"DwAddr"],[3,"DwId"],[3,"DwCc"],[3,"DwInl"],[3,"DwOrd"],[3,"DwDsc"],[3,"DwIdx"],[3,"DwDefaulted"],[3,"DwLns"],[3,"DwLne"],[3,"DwLnct"],[3,"DwMacro"],[3,"DwRle"],[3,"DwOp"],[3,"DwEhPe"],[3,"BaseAddresses"],[3,"SectionBaseAddresses"],[3,"Dwarf"],[3,"Unit"],[3,"ReaderOffsetId"],[3,"LineSequence"],[3,"FileEntryFormat"],[3,"LocationListEntry"],[3,"Piece"],[3,"Expression"],[3,"Range"],[3,"UnitOffset"],[4,"CieOrFde"],[4,"CfaRule"],[13,"RegisterAndOffset"],[4,"RegisterRule"],[4,"CallFrameInstruction"],[13,"SetLoc"],[13,"AdvanceLoc"],[13,"DefCfa"],[13,"DefCfaSf"],[13,"DefCfaRegister"],[13,"DefCfaOffset"],[13,"DefCfaOffsetSf"],[13,"DefCfaExpression"],[13,"Undefined"],[13,"SameValue"],[13,"Offset"],[13,"OffsetExtendedSf"],[13,"ValOffset"],[13,"ValOffsetSf"],[13,"Register"],[13,"Expression"],[13,"ValExpression"],[13,"Restore"],[13,"ArgsSize"],[4,"Pointer"],[4,"LineInstruction"],[4,"ColumnType"],[4,"RawLocListEntry"],[13,"AddressOrOffsetPair"],[13,"BaseAddress"],[13,"BaseAddressx"],[13,"StartxEndx"],[13,"StartxLength"],[13,"OffsetPair"],[13,"DefaultLocation"],[13,"StartEnd"],[13,"StartLength"],[4,"DieReference"],[4,"Operation"],[13,"Deref"],[13,"Pick"],[13,"PlusConstant"],[13,"Bra"],[13,"Skip"],[13,"UnsignedConstant"],[13,"SignedConstant"],[13,"Register"],[13,"RegisterOffset"],[13,"FrameOffset"],[13,"Call"],[13,"Piece"],[13,"ImplicitValue"],[13,"ImplicitPointer"],[13,"EntryValue"],[13,"ParameterRef"],[13,"Address"],[13,"AddressIndex"],[13,"ConstantIndex"],[13,"TypedLiteral"],[13,"Convert"],[13,"Reinterpret"],[4,"Location"],[13,"Register"],[13,"Address"],[13,"Value"],[13,"Bytes"],[13,"ImplicitPointer"],[4,"EvaluationResult"],[13,"RequiresMemory"],[13,"RequiresRegister"],[13,"RequiresIndexedAddress"],[4,"RawRngListEntry"],[13,"AddressOrOffsetPair"],[13,"BaseAddress"],[13,"BaseAddressx"],[13,"StartxEndx"],[13,"StartxLength"],[13,"OffsetPair"],[13,"StartEnd"],[13,"StartLength"],[4,"AttributeValue"],[4,"ValueType"],[4,"Value"],[4,"Error"],[3,"DebugAddr"],[3,"DebugFrame"],[3,"EhFrameHdr"],[3,"ParsedEhFrameHdr"],[3,"EhHdrTable"],[3,"EhFrame"],[3,"CfiEntriesIter"],[3,"CommonInformationEntry"],[3,"PartialFrameDescriptionEntry"],[3,"FrameDescriptionEntry"],[3,"UninitializedUnwindContext"],[3,"UnwindTable"],[3,"UnwindTableRow"],[3,"CallFrameInstructionIter"],[3,"RangeIter"],[3,"EndianSlice"],[3,"DebugAbbrev"],[3,"Abbreviations"],[3,"Abbreviation"],[3,"AttributeSpecification"],[3,"ArangeEntry"],[3,"DebugAranges"],[3,"ArangeEntryIter"],[3,"DebugLine"],[3,"LineRows"],[3,"LineInstructions"],[3,"LineRow"],[3,"LineProgramHeader"],[3,"IncompleteLineProgram"],[3,"CompleteLineProgram"],[3,"FileEntry"],[3,"DebugLoc"],[3,"DebugLocLists"],[3,"LocationLists"],[3,"RawLocListIter"],[3,"LocListIter"],[3,"OperationIter"],[3,"Evaluation"],[3,"PubNamesEntry"],[3,"DebugPubNames"],[3,"PubNamesEntryIter"],[3,"PubTypesEntry"],[3,"DebugPubTypes"],[3,"PubTypesEntryIter"],[3,"DebugRanges"],[3,"DebugRngLists"],[3,"RangeLists"],[3,"RawRngListIter"],[3,"RngListIter"],[3,"DebugStr"],[3,"DebugStrOffsets"],[3,"DebugLineStr"],[3,"DebugInfo"],[3,"CompilationUnitHeadersIter"],[3,"CompilationUnitHeader"],[3,"UnitHeader"],[3,"DebuggingInformationEntry"],[3,"Attribute"],[3,"AttrsIter"],[3,"EntriesRaw"],[3,"EntriesCursor"],[3,"EntriesTree"],[3,"EntriesTreeNode"],[3,"EntriesTreeIter"],[3,"DebugTypes"],[3,"TypeUnitHeadersIter"],[3,"TypeUnitHeader"],[8,"UnwindOffset"],[8,"UnwindSection"],[8,"ReaderOffset"],[8,"Reader"],[8,"LineProgram"],[8,"Section"],[8,"Endianity"],[3,"BigEndian"],[3,"LittleEndian"],[3,"Augmentation"],[3,"UnwindContext"],[3,"RegisterRuleIter"]]};
searchIndex["hostname"] = {"doc":"A crate with utilities to get and set the system's host…","i":[[5,"get","hostname","Return the system hostname.",null,[[],[["result",["osstring"]],["osstring"]]]]],"p":[]};
searchIndex["idna"] = {"doc":"This Rust crate implements IDNA per the WHATWG URL Standard.","i":[[5,"domain_to_ascii","idna","The domain to ASCII algorithm.",null,[[["str"]],[["result",["string","errors"]],["errors"],["string"]]]],[5,"domain_to_unicode","","The domain to Unicode algorithm.",null,[[["str"]]]],[0,"punycode","","Punycode (RFC 3492) implementation.",null,null],[5,"decode_to_string","idna::punycode","Convert Punycode to an Unicode `String`.",null,[[["str"]],[["option",["string"]],["string"]]]],[5,"decode","","Convert Punycode to Unicode.",null,[[["str"]],[["option",["vec"]],["vec",["char"]]]]],[5,"encode_str","","Convert an Unicode `str` to Punycode.",null,[[["str"]],[["option",["string"]],["string"]]]],[5,"encode","","Convert Unicode to Punycode.",null,[[],[["option",["string"]],["string"]]]],[0,"uts46","idna","Unicode IDNA Compatibility Processing (Unicode Technical…",null,null],[3,"Flags","idna::uts46","",null,null],[12,"use_std3_ascii_rules","","",0,null],[12,"transitional_processing","","",0,null],[12,"verify_dns_length","","",0,null],[3,"Errors","","Errors recorded during UTS #46 processing.",null,null],[5,"to_ascii","","http://www.unicode.org/reports/tr46/#ToASCII",null,[[["str"],["flags"]],[["string"],["errors"],["result",["string","errors"]]]]],[5,"to_unicode","","http://www.unicode.org/reports/tr46/#ToUnicode",null,[[["str"],["flags"]]]],[7,"PUNYCODE_PREFIX","","",null,null],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"clone","","",0,[[["self"]],["flags"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]]],"p":[[3,"Flags"],[3,"Errors"]]};
searchIndex["itoa"] = {"doc":"This crate provides fast functions for printing integer…","i":[[3,"Buffer","itoa","A safe API for formatting integers to text.",null,null],[5,"fmt","","Write integer to an `fmt::Write`.",null,[[["integer"],["write"]],["result"]]],[8,"Integer","","An integer that can be formatted by `itoa::write` and…",null,null],[11,"new","","This is a cheap operation; you don't need to worry about…",0,[[],["buffer"]]],[11,"format","","Print an integer into this buffer and return a reference…",0,[[["integer"],["self"]],["str"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"into","","",0,[[],["u"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"clone","","",0,[[["self"]],["self"]]],[11,"default","","",0,[[],["buffer"]]]],"p":[[3,"Buffer"]]};
searchIndex["lazy_static"] = {"doc":"A macro for declaring lazily evaluated statics.","i":[[5,"initialize","lazy_static","Takes a shared reference to a lazy static and initializes…",null,[[["t"]]]],[8,"LazyStatic","","Support trait for enabling a few common operation on lazy…",null,null],[14,"lazy_static","","",null,null]],"p":[]};
searchIndex["libc"] = {"doc":"libc - Raw FFI bindings to platforms' system libraries","i":[[4,"c_void","libc","Equivalent to C's `void` type when used as a [pointer].",null,null],[3,"group","","",null,null],[12,"gr_name","","",0,null],[12,"gr_passwd","","",0,null],[12,"gr_gid","","",0,null],[12,"gr_mem","","",0,null],[3,"utimbuf","","",null,null],[12,"actime","","",1,null],[12,"modtime","","",1,null],[3,"timeval","","",null,null],[12,"tv_sec","","",2,null],[12,"tv_usec","","",2,null],[3,"timespec","","",null,null],[12,"tv_sec","","",3,null],[12,"tv_nsec","","",3,null],[3,"rlimit","","",null,null],[12,"rlim_cur","","",4,null],[12,"rlim_max","","",4,null],[3,"rusage","","",null,null],[12,"ru_utime","","",5,null],[12,"ru_stime","","",5,null],[12,"ru_maxrss","","",5,null],[12,"ru_ixrss","","",5,null],[12,"ru_idrss","","",5,null],[12,"ru_isrss","","",5,null],[12,"ru_minflt","","",5,null],[12,"ru_majflt","","",5,null],[12,"ru_nswap","","",5,null],[12,"ru_inblock","","",5,null],[12,"ru_oublock","","",5,null],[12,"ru_msgsnd","","",5,null],[12,"ru_msgrcv","","",5,null],[12,"ru_nsignals","","",5,null],[12,"ru_nvcsw","","",5,null],[12,"ru_nivcsw","","",5,null],[3,"ipv6_mreq","","",null,null],[12,"ipv6mr_multiaddr","","",6,null],[12,"ipv6mr_interface","","",6,null],[3,"hostent","","",null,null],[12,"h_name","","",7,null],[12,"h_aliases","","",7,null],[12,"h_addrtype","","",7,null],[12,"h_length","","",7,null],[12,"h_addr_list","","",7,null],[3,"iovec","","",null,null],[12,"iov_base","","",8,null],[12,"iov_len","","",8,null],[3,"pollfd","","",null,null],[12,"fd","","",9,null],[12,"events","","",9,null],[12,"revents","","",9,null],[3,"winsize","","",null,null],[12,"ws_row","","",10,null],[12,"ws_col","","",10,null],[12,"ws_xpixel","","",10,null],[12,"ws_ypixel","","",10,null],[3,"linger","","",null,null],[12,"l_onoff","","",11,null],[12,"l_linger","","",11,null],[3,"sigval","","",null,null],[12,"sival_ptr","","",12,null],[3,"itimerval","","",null,null],[12,"it_interval","","",13,null],[12,"it_value","","",13,null],[3,"tms","","",null,null],[12,"tms_utime","","",14,null],[12,"tms_stime","","",14,null],[12,"tms_cutime","","",14,null],[12,"tms_cstime","","",14,null],[3,"servent","","",null,null],[12,"s_name","","",15,null],[12,"s_aliases","","",15,null],[12,"s_port","","",15,null],[12,"s_proto","","",15,null],[3,"protoent","","",null,null],[12,"p_name","","",16,null],[12,"p_aliases","","",16,null],[12,"p_proto","","",16,null],[3,"in_addr","","",null,null],[12,"s_addr","","",17,null],[3,"ip_mreq","","",null,null],[12,"imr_multiaddr","","",18,null],[12,"imr_interface","","",18,null],[3,"ip_mreq_source","","",null,null],[12,"imr_multiaddr","","",19,null],[12,"imr_interface","","",19,null],[12,"imr_sourceaddr","","",19,null],[3,"sockaddr","","",null,null],[12,"sa_family","","",20,null],[12,"sa_data","","",20,null],[3,"sockaddr_in","","",null,null],[12,"sin_family","","",21,null],[12,"sin_port","","",21,null],[12,"sin_addr","","",21,null],[12,"sin_zero","","",21,null],[3,"sockaddr_in6","","",null,null],[12,"sin6_family","","",22,null],[12,"sin6_port","","",22,null],[12,"sin6_flowinfo","","",22,null],[12,"sin6_addr","","",22,null],[12,"sin6_scope_id","","",22,null],[3,"addrinfo","","",null,null],[12,"ai_flags","","",23,null],[12,"ai_family","","",23,null],[12,"ai_socktype","","",23,null],[12,"ai_protocol","","",23,null],[12,"ai_addrlen","","",23,null],[12,"ai_addr","","",23,null],[12,"ai_canonname","","",23,null],[12,"ai_next","","",23,null],[3,"sockaddr_ll","","",null,null],[12,"sll_family","","",24,null],[12,"sll_protocol","","",24,null],[12,"sll_ifindex","","",24,null],[12,"sll_hatype","","",24,null],[12,"sll_pkttype","","",24,null],[12,"sll_halen","","",24,null],[12,"sll_addr","","",24,null],[3,"fd_set","","",null,null],[3,"tm","","",null,null],[12,"tm_sec","","",25,null],[12,"tm_min","","",25,null],[12,"tm_hour","","",25,null],[12,"tm_mday","","",25,null],[12,"tm_mon","","",25,null],[12,"tm_year","","",25,null],[12,"tm_wday","","",25,null],[12,"tm_yday","","",25,null],[12,"tm_isdst","","",25,null],[12,"tm_gmtoff","","",25,null],[12,"tm_zone","","",25,null],[3,"sched_param","","",null,null],[12,"sched_priority","","",26,null],[3,"Dl_info","","",null,null],[12,"dli_fname","","",27,null],[12,"dli_fbase","","",27,null],[12,"dli_sname","","",27,null],[12,"dli_saddr","","",27,null],[3,"lconv","","",null,null],[12,"decimal_point","","",28,null],[12,"thousands_sep","","",28,null],[12,"grouping","","",28,null],[12,"int_curr_symbol","","",28,null],[12,"currency_symbol","","",28,null],[12,"mon_decimal_point","","",28,null],[12,"mon_thousands_sep","","",28,null],[12,"mon_grouping","","",28,null],[12,"positive_sign","","",28,null],[12,"negative_sign","","",28,null],[12,"int_frac_digits","","",28,null],[12,"frac_digits","","",28,null],[12,"p_cs_precedes","","",28,null],[12,"p_sep_by_space","","",28,null],[12,"n_cs_precedes","","",28,null],[12,"n_sep_by_space","","",28,null],[12,"p_sign_posn","","",28,null],[12,"n_sign_posn","","",28,null],[12,"int_p_cs_precedes","","",28,null],[12,"int_p_sep_by_space","","",28,null],[12,"int_n_cs_precedes","","",28,null],[12,"int_n_sep_by_space","","",28,null],[12,"int_p_sign_posn","","",28,null],[12,"int_n_sign_posn","","",28,null],[3,"in_pktinfo","","",null,null],[12,"ipi_ifindex","","",29,null],[12,"ipi_spec_dst","","",29,null],[12,"ipi_addr","","",29,null],[3,"ifaddrs","","",null,null],[12,"ifa_next","","",30,null],[12,"ifa_name","","",30,null],[12,"ifa_flags","","",30,null],[12,"ifa_addr","","",30,null],[12,"ifa_netmask","","",30,null],[12,"ifa_ifu","","",30,null],[12,"ifa_data","","",30,null],[3,"in6_rtmsg","","",null,null],[3,"arpreq","","",null,null],[12,"arp_pa","","",31,null],[12,"arp_ha","","",31,null],[12,"arp_flags","","",31,null],[12,"arp_netmask","","",31,null],[12,"arp_dev","","",31,null],[3,"arpreq_old","","",null,null],[12,"arp_pa","","",32,null],[12,"arp_ha","","",32,null],[12,"arp_flags","","",32,null],[12,"arp_netmask","","",32,null],[3,"arphdr","","",null,null],[12,"ar_hrd","","",33,null],[12,"ar_pro","","",33,null],[12,"ar_hln","","",33,null],[12,"ar_pln","","",33,null],[12,"ar_op","","",33,null],[3,"mmsghdr","","",null,null],[12,"msg_hdr","","",34,null],[12,"msg_len","","",34,null],[3,"epoll_event","","",null,null],[12,"events","","",35,null],[12,"u64","","",35,null],[3,"sockaddr_un","","",null,null],[12,"sun_family","","",36,null],[12,"sun_path","","",36,null],[3,"sockaddr_storage","","",null,null],[12,"ss_family","","",37,null],[3,"utsname","","",null,null],[12,"sysname","","",38,null],[12,"nodename","","",38,null],[12,"release","","",38,null],[12,"version","","",38,null],[12,"machine","","",38,null],[12,"domainname","","",38,null],[3,"sigevent","","",null,null],[12,"sigev_value","","",39,null],[12,"sigev_signo","","",39,null],[12,"sigev_notify","","",39,null],[12,"sigev_notify_thread_id","","",39,null],[3,"rlimit64","","",null,null],[12,"rlim_cur","","",40,null],[12,"rlim_max","","",40,null],[3,"glob_t","","",null,null],[12,"gl_pathc","","",41,null],[12,"gl_pathv","","",41,null],[12,"gl_offs","","",41,null],[12,"gl_flags","","",41,null],[3,"passwd","","",null,null],[12,"pw_name","","",42,null],[12,"pw_passwd","","",42,null],[12,"pw_uid","","",42,null],[12,"pw_gid","","",42,null],[12,"pw_gecos","","",42,null],[12,"pw_dir","","",42,null],[12,"pw_shell","","",42,null],[3,"spwd","","",null,null],[12,"sp_namp","","",43,null],[12,"sp_pwdp","","",43,null],[12,"sp_lstchg","","",43,null],[12,"sp_min","","",43,null],[12,"sp_max","","",43,null],[12,"sp_warn","","",43,null],[12,"sp_inact","","",43,null],[12,"sp_expire","","",43,null],[12,"sp_flag","","",43,null],[3,"dqblk","","",null,null],[12,"dqb_bhardlimit","","",44,null],[12,"dqb_bsoftlimit","","",44,null],[12,"dqb_curspace","","",44,null],[12,"dqb_ihardlimit","","",44,null],[12,"dqb_isoftlimit","","",44,null],[12,"dqb_curinodes","","",44,null],[12,"dqb_btime","","",44,null],[12,"dqb_itime","","",44,null],[12,"dqb_valid","","",44,null],[3,"signalfd_siginfo","","",null,null],[12,"ssi_signo","","",45,null],[12,"ssi_errno","","",45,null],[12,"ssi_code","","",45,null],[12,"ssi_pid","","",45,null],[12,"ssi_uid","","",45,null],[12,"ssi_fd","","",45,null],[12,"ssi_tid","","",45,null],[12,"ssi_band","","",45,null],[12,"ssi_overrun","","",45,null],[12,"ssi_trapno","","",45,null],[12,"ssi_status","","",45,null],[12,"ssi_int","","",45,null],[12,"ssi_ptr","","",45,null],[12,"ssi_utime","","",45,null],[12,"ssi_stime","","",45,null],[12,"ssi_addr","","",45,null],[12,"ssi_addr_lsb","","",45,null],[12,"ssi_syscall","","",45,null],[12,"ssi_call_addr","","",45,null],[12,"ssi_arch","","",45,null],[3,"itimerspec","","",null,null],[12,"it_interval","","",46,null],[12,"it_value","","",46,null],[3,"fsid_t","","",null,null],[3,"packet_mreq","","",null,null],[12,"mr_ifindex","","",47,null],[12,"mr_type","","",47,null],[12,"mr_alen","","",47,null],[12,"mr_address","","",47,null],[3,"cpu_set_t","","",null,null],[3,"if_nameindex","","",null,null],[12,"if_index","","",48,null],[12,"if_name","","",48,null],[3,"msginfo","","",null,null],[12,"msgpool","","",49,null],[12,"msgmap","","",49,null],[12,"msgmax","","",49,null],[12,"msgmnb","","",49,null],[12,"msgmni","","",49,null],[12,"msgssz","","",49,null],[12,"msgtql","","",49,null],[12,"msgseg","","",49,null],[3,"sembuf","","",null,null],[12,"sem_num","","",50,null],[12,"sem_op","","",50,null],[12,"sem_flg","","",50,null],[3,"input_event","","",null,null],[12,"time","","",51,null],[12,"type_","","",51,null],[12,"code","","",51,null],[12,"value","","",51,null],[3,"input_id","","",null,null],[12,"bustype","","",52,null],[12,"vendor","","",52,null],[12,"product","","",52,null],[12,"version","","",52,null],[3,"input_absinfo","","",null,null],[12,"value","","",53,null],[12,"minimum","","",53,null],[12,"maximum","","",53,null],[12,"fuzz","","",53,null],[12,"flat","","",53,null],[12,"resolution","","",53,null],[3,"input_keymap_entry","","",null,null],[12,"flags","","",54,null],[12,"len","","",54,null],[12,"index","","",54,null],[12,"keycode","","",54,null],[12,"scancode","","",54,null],[3,"input_mask","","",null,null],[12,"type_","","",55,null],[12,"codes_size","","",55,null],[12,"codes_ptr","","",55,null],[3,"ff_replay","","",null,null],[12,"length","","",56,null],[12,"delay","","",56,null],[3,"ff_trigger","","",null,null],[12,"button","","",57,null],[12,"interval","","",57,null],[3,"ff_envelope","","",null,null],[12,"attack_length","","",58,null],[12,"attack_level","","",58,null],[12,"fade_length","","",58,null],[12,"fade_level","","",58,null],[3,"ff_constant_effect","","",null,null],[12,"level","","",59,null],[12,"envelope","","",59,null],[3,"ff_ramp_effect","","",null,null],[12,"start_level","","",60,null],[12,"end_level","","",60,null],[12,"envelope","","",60,null],[3,"ff_condition_effect","","",null,null],[12,"right_saturation","","",61,null],[12,"left_saturation","","",61,null],[12,"right_coeff","","",61,null],[12,"left_coeff","","",61,null],[12,"deadband","","",61,null],[12,"center","","",61,null],[3,"ff_periodic_effect","","",null,null],[12,"waveform","","",62,null],[12,"period","","",62,null],[12,"magnitude","","",62,null],[12,"offset","","",62,null],[12,"phase","","",62,null],[12,"envelope","","",62,null],[12,"custom_len","","",62,null],[12,"custom_data","","",62,null],[3,"ff_rumble_effect","","",null,null],[12,"strong_magnitude","","",63,null],[12,"weak_magnitude","","",63,null],[3,"ff_effect","","",null,null],[12,"type_","","",64,null],[12,"id","","",64,null],[12,"direction","","",64,null],[12,"trigger","","",64,null],[12,"replay","","",64,null],[12,"u","","",64,null],[3,"dl_phdr_info","","",null,null],[12,"dlpi_addr","","",65,null],[12,"dlpi_name","","",65,null],[12,"dlpi_phdr","","",65,null],[12,"dlpi_phnum","","",65,null],[12,"dlpi_adds","","",65,null],[12,"dlpi_subs","","",65,null],[12,"dlpi_tls_modid","","",65,null],[12,"dlpi_tls_data","","",65,null],[3,"Elf32_Ehdr","","",null,null],[12,"e_ident","","",66,null],[12,"e_type","","",66,null],[12,"e_machine","","",66,null],[12,"e_version","","",66,null],[12,"e_entry","","",66,null],[12,"e_phoff","","",66,null],[12,"e_shoff","","",66,null],[12,"e_flags","","",66,null],[12,"e_ehsize","","",66,null],[12,"e_phentsize","","",66,null],[12,"e_phnum","","",66,null],[12,"e_shentsize","","",66,null],[12,"e_shnum","","",66,null],[12,"e_shstrndx","","",66,null],[3,"Elf64_Ehdr","","",null,null],[12,"e_ident","","",67,null],[12,"e_type","","",67,null],[12,"e_machine","","",67,null],[12,"e_version","","",67,null],[12,"e_entry","","",67,null],[12,"e_phoff","","",67,null],[12,"e_shoff","","",67,null],[12,"e_flags","","",67,null],[12,"e_ehsize","","",67,null],[12,"e_phentsize","","",67,null],[12,"e_phnum","","",67,null],[12,"e_shentsize","","",67,null],[12,"e_shnum","","",67,null],[12,"e_shstrndx","","",67,null],[3,"Elf32_Sym","","",null,null],[12,"st_name","","",68,null],[12,"st_value","","",68,null],[12,"st_size","","",68,null],[12,"st_info","","",68,null],[12,"st_other","","",68,null],[12,"st_shndx","","",68,null],[3,"Elf64_Sym","","",null,null],[12,"st_name","","",69,null],[12,"st_info","","",69,null],[12,"st_other","","",69,null],[12,"st_shndx","","",69,null],[12,"st_value","","",69,null],[12,"st_size","","",69,null],[3,"Elf32_Phdr","","",null,null],[12,"p_type","","",70,null],[12,"p_offset","","",70,null],[12,"p_vaddr","","",70,null],[12,"p_paddr","","",70,null],[12,"p_filesz","","",70,null],[12,"p_memsz","","",70,null],[12,"p_flags","","",70,null],[12,"p_align","","",70,null],[3,"Elf64_Phdr","","",null,null],[12,"p_type","","",71,null],[12,"p_flags","","",71,null],[12,"p_offset","","",71,null],[12,"p_vaddr","","",71,null],[12,"p_paddr","","",71,null],[12,"p_filesz","","",71,null],[12,"p_memsz","","",71,null],[12,"p_align","","",71,null],[3,"Elf32_Shdr","","",null,null],[12,"sh_name","","",72,null],[12,"sh_type","","",72,null],[12,"sh_flags","","",72,null],[12,"sh_addr","","",72,null],[12,"sh_offset","","",72,null],[12,"sh_size","","",72,null],[12,"sh_link","","",72,null],[12,"sh_info","","",72,null],[12,"sh_addralign","","",72,null],[12,"sh_entsize","","",72,null],[3,"Elf64_Shdr","","",null,null],[12,"sh_name","","",73,null],[12,"sh_type","","",73,null],[12,"sh_flags","","",73,null],[12,"sh_addr","","",73,null],[12,"sh_offset","","",73,null],[12,"sh_size","","",73,null],[12,"sh_link","","",73,null],[12,"sh_info","","",73,null],[12,"sh_addralign","","",73,null],[12,"sh_entsize","","",73,null],[3,"Elf32_Chdr","","",null,null],[12,"ch_type","","",74,null],[12,"ch_size","","",74,null],[12,"ch_addralign","","",74,null],[3,"Elf64_Chdr","","",null,null],[12,"ch_type","","",75,null],[12,"ch_reserved","","",75,null],[12,"ch_size","","",75,null],[12,"ch_addralign","","",75,null],[3,"ucred","","",null,null],[12,"pid","","",76,null],[12,"uid","","",76,null],[12,"gid","","",76,null],[3,"mntent","","",null,null],[12,"mnt_fsname","","",77,null],[12,"mnt_dir","","",77,null],[12,"mnt_type","","",77,null],[12,"mnt_opts","","",77,null],[12,"mnt_freq","","",77,null],[12,"mnt_passno","","",77,null],[3,"posix_spawn_file_actions_t","","",null,null],[3,"posix_spawnattr_t","","",null,null],[3,"genlmsghdr","","",null,null],[12,"cmd","","",78,null],[12,"version","","",78,null],[12,"reserved","","",78,null],[3,"in6_pktinfo","","",null,null],[12,"ipi6_addr","","",79,null],[12,"ipi6_ifindex","","",79,null],[3,"arpd_request","","",null,null],[12,"req","","",80,null],[12,"ip","","",80,null],[12,"dev","","",80,null],[12,"stamp","","",80,null],[12,"updated","","",80,null],[12,"ha","","",80,null],[3,"inotify_event","","",null,null],[12,"wd","","",81,null],[12,"mask","","",81,null],[12,"cookie","","",81,null],[12,"len","","",81,null],[3,"fanotify_response","","",null,null],[12,"fd","","",82,null],[12,"response","","",82,null],[3,"sockaddr_vm","","",null,null],[12,"svm_family","","",83,null],[12,"svm_reserved1","","",83,null],[12,"svm_port","","",83,null],[12,"svm_cid","","",83,null],[12,"svm_zero","","",83,null],[3,"regmatch_t","","",null,null],[12,"rm_so","","",84,null],[12,"rm_eo","","",84,null],[3,"sock_extended_err","","",null,null],[12,"ee_errno","","",85,null],[12,"ee_origin","","",85,null],[12,"ee_type","","",85,null],[12,"ee_code","","",85,null],[12,"ee_pad","","",85,null],[12,"ee_info","","",85,null],[12,"ee_data","","",85,null],[3,"sockaddr_nl","","",null,null],[12,"nl_family","","",86,null],[12,"nl_pid","","",86,null],[12,"nl_groups","","",86,null],[3,"dirent","","",null,null],[12,"d_ino","","",87,null],[12,"d_off","","",87,null],[12,"d_reclen","","",87,null],[12,"d_type","","",87,null],[12,"d_name","","",87,null],[3,"dirent64","","",null,null],[12,"d_ino","","",88,null],[12,"d_off","","",88,null],[12,"d_reclen","","",88,null],[12,"d_type","","",88,null],[12,"d_name","","",88,null],[3,"sockaddr_alg","","",null,null],[12,"salg_family","","",89,null],[12,"salg_type","","",89,null],[12,"salg_feat","","",89,null],[12,"salg_mask","","",89,null],[12,"salg_name","","",89,null],[3,"af_alg_iv","","",null,null],[12,"ivlen","","",90,null],[12,"iv","","",90,null],[3,"mq_attr","","",null,null],[12,"mq_flags","","",91,null],[12,"mq_maxmsg","","",91,null],[12,"mq_msgsize","","",91,null],[12,"mq_curmsgs","","",91,null],[3,"statx","","",null,null],[12,"stx_mask","","",92,null],[12,"stx_blksize","","",92,null],[12,"stx_attributes","","",92,null],[12,"stx_nlink","","",92,null],[12,"stx_uid","","",92,null],[12,"stx_gid","","",92,null],[12,"stx_mode","","",92,null],[12,"__statx_pad1","","",92,null],[12,"stx_ino","","",92,null],[12,"stx_size","","",92,null],[12,"stx_blocks","","",92,null],[12,"stx_attributes_mask","","",92,null],[12,"stx_atime","","",92,null],[12,"stx_btime","","",92,null],[12,"stx_ctime","","",92,null],[12,"stx_mtime","","",92,null],[12,"stx_rdev_major","","",92,null],[12,"stx_rdev_minor","","",92,null],[12,"stx_dev_major","","",92,null],[12,"stx_dev_minor","","",92,null],[12,"__statx_pad2","","",92,null],[3,"statx_timestamp","","",null,null],[12,"tv_sec","","",93,null],[12,"tv_nsec","","",93,null],[12,"__statx_timestamp_pad1","","",93,null],[3,"aiocb","","",null,null],[12,"aio_fildes","","",94,null],[12,"aio_lio_opcode","","",94,null],[12,"aio_reqprio","","",94,null],[12,"aio_buf","","",94,null],[12,"aio_nbytes","","",94,null],[12,"aio_sigevent","","",94,null],[12,"aio_offset","","",94,null],[3,"__exit_status","","",null,null],[12,"e_termination","","",95,null],[12,"e_exit","","",95,null],[3,"__timeval","","",null,null],[12,"tv_sec","","",96,null],[12,"tv_usec","","",96,null],[3,"glob64_t","","",null,null],[12,"gl_pathc","","",97,null],[12,"gl_pathv","","",97,null],[12,"gl_offs","","",97,null],[12,"gl_flags","","",97,null],[3,"msghdr","","",null,null],[12,"msg_name","","",98,null],[12,"msg_namelen","","",98,null],[12,"msg_iov","","",98,null],[12,"msg_iovlen","","",98,null],[12,"msg_control","","",98,null],[12,"msg_controllen","","",98,null],[12,"msg_flags","","",98,null],[3,"cmsghdr","","",null,null],[12,"cmsg_len","","",99,null],[12,"cmsg_level","","",99,null],[12,"cmsg_type","","",99,null],[3,"termios","","",null,null],[12,"c_iflag","","",100,null],[12,"c_oflag","","",100,null],[12,"c_cflag","","",100,null],[12,"c_lflag","","",100,null],[12,"c_line","","",100,null],[12,"c_cc","","",100,null],[12,"c_ispeed","","",100,null],[12,"c_ospeed","","",100,null],[3,"mallinfo","","",null,null],[12,"arena","","",101,null],[12,"ordblks","","",101,null],[12,"smblks","","",101,null],[12,"hblks","","",101,null],[12,"hblkhd","","",101,null],[12,"usmblks","","",101,null],[12,"fsmblks","","",101,null],[12,"uordblks","","",101,null],[12,"fordblks","","",101,null],[12,"keepcost","","",101,null],[3,"nlmsghdr","","",null,null],[12,"nlmsg_len","","",102,null],[12,"nlmsg_type","","",102,null],[12,"nlmsg_flags","","",102,null],[12,"nlmsg_seq","","",102,null],[12,"nlmsg_pid","","",102,null],[3,"nlmsgerr","","",null,null],[12,"error","","",103,null],[12,"msg","","",103,null],[3,"nl_pktinfo","","",null,null],[12,"group","","",104,null],[3,"nl_mmap_req","","",null,null],[12,"nm_block_size","","",105,null],[12,"nm_block_nr","","",105,null],[12,"nm_frame_size","","",105,null],[12,"nm_frame_nr","","",105,null],[3,"nl_mmap_hdr","","",null,null],[12,"nm_status","","",106,null],[12,"nm_len","","",106,null],[12,"nm_group","","",106,null],[12,"nm_pid","","",106,null],[12,"nm_uid","","",106,null],[12,"nm_gid","","",106,null],[3,"nlattr","","",null,null],[12,"nla_len","","",107,null],[12,"nla_type","","",107,null],[3,"rtentry","","",null,null],[12,"rt_pad1","","",108,null],[12,"rt_dst","","",108,null],[12,"rt_gateway","","",108,null],[12,"rt_genmask","","",108,null],[12,"rt_flags","","",108,null],[12,"rt_pad2","","",108,null],[12,"rt_pad3","","",108,null],[12,"rt_tos","","",108,null],[12,"rt_class","","",108,null],[12,"rt_pad4","","",108,null],[12,"rt_metric","","",108,null],[12,"rt_dev","","",108,null],[12,"rt_mtu","","",108,null],[12,"rt_window","","",108,null],[12,"rt_irtt","","",108,null],[3,"timex","","",null,null],[12,"modes","","",109,null],[12,"offset","","",109,null],[12,"freq","","",109,null],[12,"maxerror","","",109,null],[12,"esterror","","",109,null],[12,"status","","",109,null],[12,"constant","","",109,null],[12,"precision","","",109,null],[12,"tolerance","","",109,null],[12,"time","","",109,null],[12,"tick","","",109,null],[12,"ppsfreq","","",109,null],[12,"jitter","","",109,null],[12,"shift","","",109,null],[12,"stabil","","",109,null],[12,"jitcnt","","",109,null],[12,"calcnt","","",109,null],[12,"errcnt","","",109,null],[12,"stbcnt","","",109,null],[12,"tai","","",109,null],[12,"__unused1","","",109,null],[12,"__unused2","","",109,null],[12,"__unused3","","",109,null],[12,"__unused4","","",109,null],[12,"__unused5","","",109,null],[12,"__unused6","","",109,null],[12,"__unused7","","",109,null],[12,"__unused8","","",109,null],[12,"__unused9","","",109,null],[12,"__unused10","","",109,null],[12,"__unused11","","",109,null],[3,"ntptimeval","","",null,null],[12,"time","","",110,null],[12,"maxerror","","",110,null],[12,"esterror","","",110,null],[12,"tai","","",110,null],[12,"__glibc_reserved1","","",110,null],[12,"__glibc_reserved2","","",110,null],[12,"__glibc_reserved3","","",110,null],[12,"__glibc_reserved4","","",110,null],[3,"regex_t","","",null,null],[3,"utmpx","","",null,null],[12,"ut_type","","",111,null],[12,"ut_pid","","",111,null],[12,"ut_line","","",111,null],[12,"ut_id","","",111,null],[12,"ut_user","","",111,null],[12,"ut_host","","",111,null],[12,"ut_exit","","",111,null],[12,"ut_session","","",111,null],[12,"ut_tv","","",111,null],[12,"ut_addr_v6","","",111,null],[3,"sigset_t","","",null,null],[3,"sysinfo","","",null,null],[12,"uptime","","",112,null],[12,"loads","","",112,null],[12,"totalram","","",112,null],[12,"freeram","","",112,null],[12,"sharedram","","",112,null],[12,"bufferram","","",112,null],[12,"totalswap","","",112,null],[12,"freeswap","","",112,null],[12,"procs","","",112,null],[12,"pad","","",112,null],[12,"totalhigh","","",112,null],[12,"freehigh","","",112,null],[12,"mem_unit","","",112,null],[12,"_f","","",112,null],[3,"msqid_ds","","",null,null],[12,"msg_perm","","",113,null],[12,"msg_stime","","",113,null],[12,"msg_rtime","","",113,null],[12,"msg_ctime","","",113,null],[12,"msg_qnum","","",113,null],[12,"msg_qbytes","","",113,null],[12,"msg_lspid","","",113,null],[12,"msg_lrpid","","",113,null],[3,"sigaction","","",null,null],[12,"sa_sigaction","","",114,null],[12,"sa_mask","","",114,null],[12,"sa_flags","","",114,null],[12,"sa_restorer","","",114,null],[3,"statfs","","",null,null],[12,"f_type","","",115,null],[12,"f_bsize","","",115,null],[12,"f_blocks","","",115,null],[12,"f_bfree","","",115,null],[12,"f_bavail","","",115,null],[12,"f_files","","",115,null],[12,"f_ffree","","",115,null],[12,"f_fsid","","",115,null],[12,"f_namelen","","",115,null],[12,"f_frsize","","",115,null],[3,"flock","","",null,null],[12,"l_type","","",116,null],[12,"l_whence","","",116,null],[12,"l_start","","",116,null],[12,"l_len","","",116,null],[12,"l_pid","","",116,null],[3,"flock64","","",null,null],[12,"l_type","","",117,null],[12,"l_whence","","",117,null],[12,"l_start","","",117,null],[12,"l_len","","",117,null],[12,"l_pid","","",117,null],[3,"siginfo_t","","",null,null],[12,"si_signo","","",118,null],[12,"si_errno","","",118,null],[12,"si_code","","",118,null],[3,"stack_t","","",null,null],[12,"ss_sp","","",119,null],[12,"ss_flags","","",119,null],[12,"ss_size","","",119,null],[3,"stat","","",null,null],[12,"st_dev","","",120,null],[12,"st_ino","","",120,null],[12,"st_nlink","","",120,null],[12,"st_mode","","",120,null],[12,"st_uid","","",120,null],[12,"st_gid","","",120,null],[12,"st_rdev","","",120,null],[12,"st_size","","",120,null],[12,"st_blksize","","",120,null],[12,"st_blocks","","",120,null],[12,"st_atime","","",120,null],[12,"st_atime_nsec","","",120,null],[12,"st_mtime","","",120,null],[12,"st_mtime_nsec","","",120,null],[12,"st_ctime","","",120,null],[12,"st_ctime_nsec","","",120,null],[3,"stat64","","",null,null],[12,"st_dev","","",121,null],[12,"st_ino","","",121,null],[12,"st_nlink","","",121,null],[12,"st_mode","","",121,null],[12,"st_uid","","",121,null],[12,"st_gid","","",121,null],[12,"st_rdev","","",121,null],[12,"st_size","","",121,null],[12,"st_blksize","","",121,null],[12,"st_blocks","","",121,null],[12,"st_atime","","",121,null],[12,"st_atime_nsec","","",121,null],[12,"st_mtime","","",121,null],[12,"st_mtime_nsec","","",121,null],[12,"st_ctime","","",121,null],[12,"st_ctime_nsec","","",121,null],[3,"statfs64","","",null,null],[12,"f_type","","",122,null],[12,"f_bsize","","",122,null],[12,"f_blocks","","",122,null],[12,"f_bfree","","",122,null],[12,"f_bavail","","",122,null],[12,"f_files","","",122,null],[12,"f_ffree","","",122,null],[12,"f_fsid","","",122,null],[12,"f_namelen","","",122,null],[12,"f_frsize","","",122,null],[12,"f_flags","","",122,null],[12,"f_spare","","",122,null],[3,"statvfs64","","",null,null],[12,"f_bsize","","",123,null],[12,"f_frsize","","",123,null],[12,"f_blocks","","",123,null],[12,"f_bfree","","",123,null],[12,"f_bavail","","",123,null],[12,"f_files","","",123,null],[12,"f_ffree","","",123,null],[12,"f_favail","","",123,null],[12,"f_fsid","","",123,null],[12,"f_flag","","",123,null],[12,"f_namemax","","",123,null],[3,"pthread_attr_t","","",null,null],[3,"_libc_fpxreg","","",null,null],[12,"significand","","",124,null],[12,"exponent","","",124,null],[3,"_libc_xmmreg","","",null,null],[12,"element","","",125,null],[3,"_libc_fpstate","","",null,null],[12,"cwd","","",126,null],[12,"swd","","",126,null],[12,"ftw","","",126,null],[12,"fop","","",126,null],[12,"rip","","",126,null],[12,"rdp","","",126,null],[12,"mxcsr","","",126,null],[12,"mxcr_mask","","",126,null],[12,"_st","","",126,null],[12,"_xmm","","",126,null],[3,"user_regs_struct","","",null,null],[12,"r15","","",127,null],[12,"r14","","",127,null],[12,"r13","","",127,null],[12,"r12","","",127,null],[12,"rbp","","",127,null],[12,"rbx","","",127,null],[12,"r11","","",127,null],[12,"r10","","",127,null],[12,"r9","","",127,null],[12,"r8","","",127,null],[12,"rax","","",127,null],[12,"rcx","","",127,null],[12,"rdx","","",127,null],[12,"rsi","","",127,null],[12,"rdi","","",127,null],[12,"orig_rax","","",127,null],[12,"rip","","",127,null],[12,"cs","","",127,null],[12,"eflags","","",127,null],[12,"rsp","","",127,null],[12,"ss","","",127,null],[12,"fs_base","","",127,null],[12,"gs_base","","",127,null],[12,"ds","","",127,null],[12,"es","","",127,null],[12,"fs","","",127,null],[12,"gs","","",127,null],[3,"user","","",null,null],[12,"regs","","",128,null],[12,"u_fpvalid","","",128,null],[12,"i387","","",128,null],[12,"u_tsize","","",128,null],[12,"u_dsize","","",128,null],[12,"u_ssize","","",128,null],[12,"start_code","","",128,null],[12,"start_stack","","",128,null],[12,"signal","","",128,null],[12,"u_ar0","","",128,null],[12,"u_fpstate","","",128,null],[12,"magic","","",128,null],[12,"u_comm","","",128,null],[12,"u_debugreg","","",128,null],[3,"mcontext_t","","",null,null],[12,"gregs","","",129,null],[12,"fpregs","","",129,null],[3,"ipc_perm","","",null,null],[12,"__key","","",130,null],[12,"uid","","",130,null],[12,"gid","","",130,null],[12,"cuid","","",130,null],[12,"cgid","","",130,null],[12,"mode","","",130,null],[12,"__seq","","",130,null],[3,"shmid_ds","","",null,null],[12,"shm_perm","","",131,null],[12,"shm_segsz","","",131,null],[12,"shm_atime","","",131,null],[12,"shm_dtime","","",131,null],[12,"shm_ctime","","",131,null],[12,"shm_cpid","","",131,null],[12,"shm_lpid","","",131,null],[12,"shm_nattch","","",131,null],[3,"termios2","","",null,null],[12,"c_iflag","","",132,null],[12,"c_oflag","","",132,null],[12,"c_cflag","","",132,null],[12,"c_lflag","","",132,null],[12,"c_line","","",132,null],[12,"c_cc","","",132,null],[12,"c_ispeed","","",132,null],[12,"c_ospeed","","",132,null],[3,"ip_mreqn","","",null,null],[12,"imr_multiaddr","","",133,null],[12,"imr_address","","",133,null],[12,"imr_ifindex","","",133,null],[3,"user_fpregs_struct","","",null,null],[12,"cwd","","",134,null],[12,"swd","","",134,null],[12,"ftw","","",134,null],[12,"fop","","",134,null],[12,"rip","","",134,null],[12,"rdp","","",134,null],[12,"mxcsr","","",134,null],[12,"mxcr_mask","","",134,null],[12,"st_space","","",134,null],[12,"xmm_space","","",134,null],[3,"ucontext_t","","",null,null],[12,"uc_flags","","",135,null],[12,"uc_link","","",135,null],[12,"uc_stack","","",135,null],[12,"uc_mcontext","","",135,null],[12,"uc_sigmask","","",135,null],[3,"statvfs","","",null,null],[12,"f_bsize","","",136,null],[12,"f_frsize","","",136,null],[12,"f_blocks","","",136,null],[12,"f_bfree","","",136,null],[12,"f_bavail","","",136,null],[12,"f_files","","",136,null],[12,"f_ffree","","",136,null],[12,"f_favail","","",136,null],[12,"f_fsid","","",136,null],[12,"f_flag","","",136,null],[12,"f_namemax","","",136,null],[3,"max_align_t","","",null,null],[3,"sem_t","","",null,null],[3,"pthread_mutexattr_t","","",null,null],[3,"pthread_rwlockattr_t","","",null,null],[3,"pthread_condattr_t","","",null,null],[3,"fanotify_event_metadata","","",null,null],[12,"event_len","","",137,null],[12,"vers","","",137,null],[12,"reserved","","",137,null],[12,"metadata_len","","",137,null],[12,"mask","","",137,null],[12,"fd","","",137,null],[12,"pid","","",137,null],[3,"pthread_cond_t","","",null,null],[3,"pthread_mutex_t","","",null,null],[3,"pthread_rwlock_t","","",null,null],[3,"in6_addr","","",null,null],[12,"s6_addr","","",138,null],[4,"DIR","","",null,null],[4,"FILE","","",null,null],[4,"fpos_t","","",null,null],[4,"timezone","","",null,null],[4,"fpos64_t","","",null,null],[5,"CMSG_FIRSTHDR","","",null,[[]]],[5,"CMSG_DATA","","",null,[[]]],[5,"CMSG_SPACE","","",null,[[["c_uint"]],["c_uint"]]],[5,"CMSG_LEN","","",null,[[["c_uint"]],["c_uint"]]],[5,"FD_CLR","","",null,[[["c_int"]]]],[5,"FD_ISSET","","",null,[[["c_int"]],["bool"]]],[5,"FD_SET","","",null,[[["c_int"]]]],[5,"FD_ZERO","","",null,[[]]],[5,"WIFSTOPPED","","",null,[[["c_int"]],["bool"]]],[5,"WSTOPSIG","","",null,[[["c_int"]],["c_int"]]],[5,"WIFCONTINUED","","",null,[[["c_int"]],["bool"]]],[5,"WIFSIGNALED","","",null,[[["c_int"]],["bool"]]],[5,"WTERMSIG","","",null,[[["c_int"]],["c_int"]]],[5,"WIFEXITED","","",null,[[["c_int"]],["bool"]]],[5,"WEXITSTATUS","","",null,[[["c_int"]],["c_int"]]],[5,"WCOREDUMP","","",null,[[["c_int"]],["bool"]]],[5,"QCMD","","",null,[[["c_int"]],["c_int"]]],[5,"IPOPT_COPIED","","",null,[[["u8"]],["u8"]]],[5,"IPOPT_CLASS","","",null,[[["u8"]],["u8"]]],[5,"IPOPT_NUMBER","","",null,[[["u8"]],["u8"]]],[5,"IPTOS_ECN","","",null,[[["u8"]],["u8"]]],[5,"NLA_ALIGN","","",null,[[["c_int"]],["c_int"]]],[5,"CMSG_NXTHDR","","",null,[[]]],[5,"CPU_ALLOC_SIZE","","",null,[[["c_int"]],["size_t"]]],[5,"CPU_ZERO","","",null,[[["cpu_set_t"]]]],[5,"CPU_SET","","",null,[[["usize"],["cpu_set_t"]]]],[5,"CPU_CLR","","",null,[[["usize"],["cpu_set_t"]]]],[5,"CPU_ISSET","","",null,[[["cpu_set_t"],["usize"]],["bool"]]],[5,"CPU_COUNT_S","","",null,[[["cpu_set_t"],["usize"]],["c_int"]]],[5,"CPU_COUNT","","",null,[[["cpu_set_t"]],["c_int"]]],[5,"CPU_EQUAL","","",null,[[["cpu_set_t"]],["bool"]]],[5,"major","","",null,[[["dev_t"]],["c_uint"]]],[5,"minor","","",null,[[["dev_t"]],["c_uint"]]],[5,"makedev","","",null,[[["c_uint"]],["dev_t"]]],[5,"IPTOS_TOS","","",null,[[["u8"]],["u8"]]],[5,"IPTOS_PREC","","",null,[[["u8"]],["u8"]]],[5,"RT_TOS","","",null,[[["u8"]],["u8"]]],[5,"RT_ADDRCLASS","","",null,[[["u32"]],["u32"]]],[5,"RT_LOCALADDR","","",null,[[["u32"]],["bool"]]],[5,"SO_EE_OFFENDER","","",null,[[]]],[5,"isalnum","","",null,null],[5,"isalpha","","",null,null],[5,"iscntrl","","",null,null],[5,"isdigit","","",null,null],[5,"isgraph","","",null,null],[5,"islower","","",null,null],[5,"isprint","","",null,null],[5,"ispunct","","",null,null],[5,"isspace","","",null,null],[5,"isupper","","",null,null],[5,"isxdigit","","",null,null],[5,"isblank","","",null,null],[5,"tolower","","",null,null],[5,"toupper","","",null,null],[5,"qsort","","",null,null],[5,"bsearch","","",null,null],[5,"fopen","","",null,null],[5,"freopen","","",null,null],[5,"fflush","","",null,null],[5,"fclose","","",null,null],[5,"remove","","",null,null],[5,"rename","","",null,null],[5,"tmpfile","","",null,null],[5,"setvbuf","","",null,null],[5,"setbuf","","",null,null],[5,"getchar","","",null,null],[5,"putchar","","",null,null],[5,"fgetc","","",null,null],[5,"fgets","","",null,null],[5,"fputc","","",null,null],[5,"fputs","","",null,null],[5,"puts","","",null,null],[5,"ungetc","","",null,null],[5,"fread","","",null,null],[5,"fwrite","","",null,null],[5,"fseek","","",null,null],[5,"ftell","","",null,null],[5,"rewind","","",null,null],[5,"fgetpos","","",null,null],[5,"fsetpos","","",null,null],[5,"feof","","",null,null],[5,"ferror","","",null,null],[5,"perror","","",null,null],[5,"atoi","","",null,null],[5,"strtod","","",null,null],[5,"strtol","","",null,null],[5,"strtoul","","",null,null],[5,"calloc","","",null,null],[5,"malloc","","",null,null],[5,"realloc","","",null,null],[5,"free","","",null,null],[5,"abort","","",null,null],[5,"exit","","",null,null],[5,"_exit","","",null,null],[5,"atexit","","",null,null],[5,"system","","",null,null],[5,"getenv","","",null,null],[5,"strcpy","","",null,null],[5,"strncpy","","",null,null],[5,"strcat","","",null,null],[5,"strncat","","",null,null],[5,"strcmp","","",null,null],[5,"strncmp","","",null,null],[5,"strcoll","","",null,null],[5,"strchr","","",null,null],[5,"strrchr","","",null,null],[5,"strspn","","",null,null],[5,"strcspn","","",null,null],[5,"strdup","","",null,null],[5,"strndup","","",null,null],[5,"strpbrk","","",null,null],[5,"strstr","","",null,null],[5,"strcasecmp","","",null,null],[5,"strncasecmp","","",null,null],[5,"strlen","","",null,null],[5,"strnlen","","",null,null],[5,"strerror","","",null,null],[5,"strtok","","",null,null],[5,"strxfrm","","",null,null],[5,"strsignal","","",null,null],[5,"wcslen","","",null,null],[5,"wcstombs","","",null,null],[5,"memchr","","",null,null],[5,"wmemchr","","",null,null],[5,"memcmp","","",null,null],[5,"memcpy","","",null,null],[5,"memmove","","",null,null],[5,"memset","","",null,null],[5,"getpwnam","","",null,null],[5,"getpwuid","","",null,null],[5,"fprintf","","",null,null],[5,"printf","","",null,null],[5,"snprintf","","",null,null],[5,"sprintf","","",null,null],[5,"fscanf","","",null,null],[5,"scanf","","",null,null],[5,"sscanf","","",null,null],[5,"getchar_unlocked","","",null,null],[5,"putchar_unlocked","","",null,null],[5,"socket","","",null,null],[5,"connect","","",null,null],[5,"listen","","",null,null],[5,"accept","","",null,null],[5,"getpeername","","",null,null],[5,"getsockname","","",null,null],[5,"setsockopt","","",null,null],[5,"socketpair","","",null,null],[5,"sendto","","",null,null],[5,"shutdown","","",null,null],[5,"chmod","","",null,null],[5,"fchmod","","",null,null],[5,"fstat","","",null,null],[5,"mkdir","","",null,null],[5,"stat","","",null,null],[5,"pclose","","",null,null],[5,"fdopen","","",null,null],[5,"fileno","","",null,null],[5,"open","","",null,null],[5,"creat","","",null,null],[5,"fcntl","","",null,null],[5,"opendir","","",null,null],[5,"readdir","","",null,null],[5,"closedir","","",null,null],[5,"rewinddir","","",null,null],[5,"fchmodat","","",null,null],[5,"fchown","","",null,null],[5,"fchownat","","",null,null],[5,"fstatat","","",null,null],[5,"linkat","","",null,null],[5,"renameat","","",null,null],[5,"symlinkat","","",null,null],[5,"unlinkat","","",null,null],[5,"access","","",null,null],[5,"alarm","","",null,null],[5,"chdir","","",null,null],[5,"fchdir","","",null,null],[5,"chown","","",null,null],[5,"lchown","","",null,null],[5,"close","","",null,null],[5,"dup","","",null,null],[5,"dup2","","",null,null],[5,"execl","","",null,null],[5,"execle","","",null,null],[5,"execlp","","",null,null],[5,"execv","","",null,null],[5,"execve","","",null,null],[5,"execvp","","",null,null],[5,"fork","","",null,null],[5,"fpathconf","","",null,null],[5,"getcwd","","",null,null],[5,"getegid","","",null,null],[5,"geteuid","","",null,null],[5,"getgid","","",null,null],[5,"getgroups","","",null,null],[5,"getlogin","","",null,null],[5,"getopt","","",null,null],[5,"getpgid","","",null,null],[5,"getpgrp","","",null,null],[5,"getpid","","",null,null],[5,"getppid","","",null,null],[5,"getuid","","",null,null],[5,"isatty","","",null,null],[5,"link","","",null,null],[5,"lseek","","",null,null],[5,"pathconf","","",null,null],[5,"pipe","","",null,null],[5,"posix_memalign","","",null,null],[5,"read","","",null,null],[5,"rmdir","","",null,null],[5,"seteuid","","",null,null],[5,"setegid","","",null,null],[5,"setgid","","",null,null],[5,"setpgid","","",null,null],[5,"setsid","","",null,null],[5,"setuid","","",null,null],[5,"sleep","","",null,null],[5,"nanosleep","","",null,null],[5,"tcgetpgrp","","",null,null],[5,"tcsetpgrp","","",null,null],[5,"ttyname","","",null,null],[5,"ttyname_r","","",null,null],[5,"unlink","","",null,null],[5,"wait","","",null,null],[5,"waitpid","","",null,null],[5,"write","","",null,null],[5,"pread","","",null,null],[5,"pwrite","","",null,null],[5,"umask","","",null,null],[5,"utime","","",null,null],[5,"kill","","",null,null],[5,"killpg","","",null,null],[5,"mlock","","",null,null],[5,"munlock","","",null,null],[5,"mlockall","","",null,null],[5,"munlockall","","",null,null],[5,"mmap","","",null,null],[5,"munmap","","",null,null],[5,"if_nametoindex","","",null,null],[5,"if_indextoname","","",null,null],[5,"lstat","","",null,null],[5,"fsync","","",null,null],[5,"setenv","","",null,null],[5,"unsetenv","","",null,null],[5,"symlink","","",null,null],[5,"ftruncate","","",null,null],[5,"signal","","",null,null],[5,"getrusage","","",null,null],[5,"realpath","","",null,null],[5,"flock","","",null,null],[5,"times","","",null,null],[5,"pthread_self","","",null,null],[5,"pthread_join","","",null,null],[5,"pthread_exit","","",null,null],[5,"pthread_attr_init","","",null,null],[5,"pthread_attr_destroy","","",null,null],[5,"pthread_attr_setstacksize","","",null,null],[5,"pthread_attr_setdetachstate","","",null,null],[5,"pthread_detach","","",null,null],[5,"sched_yield","","",null,null],[5,"pthread_key_create","","",null,null],[5,"pthread_key_delete","","",null,null],[5,"pthread_getspecific","","",null,null],[5,"pthread_setspecific","","",null,null],[5,"pthread_mutex_init","","",null,null],[5,"pthread_mutex_destroy","","",null,null],[5,"pthread_mutex_lock","","",null,null],[5,"pthread_mutex_trylock","","",null,null],[5,"pthread_mutex_unlock","","",null,null],[5,"pthread_mutexattr_init","","",null,null],[5,"pthread_mutexattr_destroy","","",null,null],[5,"pthread_mutexattr_settype","","",null,null],[5,"pthread_cond_init","","",null,null],[5,"pthread_cond_wait","","",null,null],[5,"pthread_cond_timedwait","","",null,null],[5,"pthread_cond_signal","","",null,null],[5,"pthread_cond_broadcast","","",null,null],[5,"pthread_cond_destroy","","",null,null],[5,"pthread_condattr_init","","",null,null],[5,"pthread_condattr_destroy","","",null,null],[5,"pthread_rwlock_init","","",null,null],[5,"pthread_rwlock_destroy","","",null,null],[5,"pthread_rwlock_rdlock","","",null,null],[5,"pthread_rwlock_tryrdlock","","",null,null],[5,"pthread_rwlock_wrlock","","",null,null],[5,"pthread_rwlock_trywrlock","","",null,null],[5,"pthread_rwlock_unlock","","",null,null],[5,"pthread_rwlockattr_init","","",null,null],[5,"pthread_rwlockattr_destroy","","",null,null],[5,"getsockopt","","",null,null],[5,"raise","","",null,null],[5,"sigaction","","",null,null],[5,"utimes","","",null,null],[5,"dlopen","","",null,null],[5,"dlerror","","",null,null],[5,"dlsym","","",null,null],[5,"dlclose","","",null,null],[5,"dladdr","","",null,null],[5,"getaddrinfo","","",null,null],[5,"freeaddrinfo","","",null,null],[5,"gai_strerror","","",null,null],[5,"res_init","","",null,null],[5,"gmtime_r","","",null,null],[5,"localtime_r","","",null,null],[5,"mktime","","",null,null],[5,"time","","",null,null],[5,"gmtime","","",null,null],[5,"localtime","","",null,null],[5,"difftime","","",null,null],[5,"mknod","","",null,null],[5,"gethostname","","",null,null],[5,"getservbyname","","",null,null],[5,"getprotobyname","","",null,null],[5,"getprotobynumber","","",null,null],[5,"chroot","","",null,null],[5,"usleep","","",null,null],[5,"send","","",null,null],[5,"recv","","",null,null],[5,"putenv","","",null,null],[5,"poll","","",null,null],[5,"select","","",null,null],[5,"setlocale","","",null,null],[5,"localeconv","","",null,null],[5,"sem_wait","","",null,null],[5,"sem_trywait","","",null,null],[5,"sem_post","","",null,null],[5,"statvfs","","",null,null],[5,"fstatvfs","","",null,null],[5,"readlink","","",null,null],[5,"sigemptyset","","",null,null],[5,"sigaddset","","",null,null],[5,"sigfillset","","",null,null],[5,"sigdelset","","",null,null],[5,"sigismember","","",null,null],[5,"sigprocmask","","",null,null],[5,"sigpending","","",null,null],[5,"timegm","","",null,null],[5,"sysconf","","",null,null],[5,"mkfifo","","",null,null],[5,"pselect","","",null,null],[5,"fseeko","","",null,null],[5,"ftello","","",null,null],[5,"tcdrain","","",null,null],[5,"cfgetispeed","","",null,null],[5,"cfgetospeed","","",null,null],[5,"cfsetispeed","","",null,null],[5,"cfsetospeed","","",null,null],[5,"tcgetattr","","",null,null],[5,"tcsetattr","","",null,null],[5,"tcflow","","",null,null],[5,"tcflush","","",null,null],[5,"tcgetsid","","",null,null],[5,"tcsendbreak","","",null,null],[5,"mkstemp","","",null,null],[5,"mkdtemp","","",null,null],[5,"tmpnam","","",null,null],[5,"openlog","","",null,null],[5,"closelog","","",null,null],[5,"setlogmask","","",null,null],[5,"syslog","","",null,null],[5,"nice","","",null,null],[5,"grantpt","","",null,null],[5,"posix_openpt","","",null,null],[5,"ptsname","","",null,null],[5,"unlockpt","","",null,null],[5,"strcasestr","","",null,null],[5,"getline","","",null,null],[5,"lockf","","",null,null],[5,"getsid","","",null,null],[5,"truncate","","",null,null],[5,"pause","","",null,null],[5,"readlinkat","","",null,null],[5,"mkdirat","","",null,null],[5,"openat","","",null,null],[5,"fdopendir","","",null,null],[5,"readdir_r","","The 64-bit libc on Solaris and illumos only has readdir_r.…",null,null],[5,"cfmakeraw","","",null,null],[5,"cfsetspeed","","",null,null],[5,"sem_destroy","","",null,null],[5,"sem_init","","",null,null],[5,"fdatasync","","",null,null],[5,"mincore","","",null,null],[5,"clock_getres","","",null,null],[5,"clock_gettime","","",null,null],[5,"clock_settime","","",null,null],[5,"dirfd","","",null,null],[5,"pthread_getattr_np","","",null,null],[5,"pthread_attr_getstack","","",null,null],[5,"memalign","","",null,null],[5,"setgroups","","",null,null],[5,"pipe2","","",null,null],[5,"statfs","","",null,null],[5,"statfs64","","",null,null],[5,"fstatfs","","",null,null],[5,"fstatfs64","","",null,null],[5,"statvfs64","","",null,null],[5,"fstatvfs64","","",null,null],[5,"memrchr","","",null,null],[5,"posix_fadvise","","",null,null],[5,"futimens","","",null,null],[5,"utimensat","","",null,null],[5,"duplocale","","",null,null],[5,"freelocale","","",null,null],[5,"newlocale","","",null,null],[5,"uselocale","","",null,null],[5,"creat64","","",null,null],[5,"fstat64","","",null,null],[5,"fstatat64","","",null,null],[5,"ftruncate64","","",null,null],[5,"lseek64","","",null,null],[5,"lstat64","","",null,null],[5,"mmap64","","",null,null],[5,"open64","","",null,null],[5,"openat64","","",null,null],[5,"pread64","","",null,null],[5,"preadv64","","",null,null],[5,"pwrite64","","",null,null],[5,"pwritev64","","",null,null],[5,"readdir64","","",null,null],[5,"readdir64_r","","",null,null],[5,"stat64","","",null,null],[5,"truncate64","","",null,null],[5,"mknodat","","",null,null],[5,"pthread_condattr_getclock","","",null,null],[5,"pthread_condattr_setclock","","",null,null],[5,"pthread_condattr_setpshared","","",null,null],[5,"accept4","","",null,null],[5,"pthread_mutexattr_setpshared","","",null,null],[5,"pthread_rwlockattr_getpshared","","",null,null],[5,"pthread_rwlockattr_setpshared","","",null,null],[5,"ptsname_r","","",null,null],[5,"clearenv","","",null,null],[5,"waitid","","",null,null],[5,"setreuid","","",null,null],[5,"setregid","","",null,null],[5,"getresuid","","",null,null],[5,"getresgid","","",null,null],[5,"acct","","",null,null],[5,"brk","","",null,null],[5,"sbrk","","",null,null],[5,"vfork","","",null,null],[5,"setresgid","","",null,null],[5,"setresuid","","",null,null],[5,"wait4","","",null,null],[5,"openpty","","",null,null],[5,"forkpty","","",null,null],[5,"login_tty","","",null,null],[5,"execvpe","","",null,null],[5,"fexecve","","",null,null],[5,"getifaddrs","","",null,null],[5,"freeifaddrs","","",null,null],[5,"bind","","",null,null],[5,"writev","","",null,null],[5,"readv","","",null,null],[5,"sendmsg","","",null,null],[5,"recvmsg","","",null,null],[5,"uname","","",null,null],[5,"strerror_r","","",null,null],[5,"abs","","",null,null],[5,"atof","","",null,null],[5,"labs","","",null,null],[5,"rand","","",null,null],[5,"srand","","",null,null],[5,"aio_read","","",null,null],[5,"aio_write","","",null,null],[5,"aio_fsync","","",null,null],[5,"aio_error","","",null,null],[5,"aio_return","","",null,null],[5,"aio_suspend","","",null,null],[5,"aio_cancel","","",null,null],[5,"lio_listio","","",null,null],[5,"lutimes","","",null,null],[5,"setpwent","","",null,null],[5,"endpwent","","",null,null],[5,"getpwent","","",null,null],[5,"setgrent","","",null,null],[5,"endgrent","","",null,null],[5,"getgrent","","",null,null],[5,"setspent","","",null,null],[5,"endspent","","",null,null],[5,"getspent","","",null,null],[5,"getspnam","","",null,null],[5,"getspnam_r","","",null,null],[5,"shm_open","","",null,null],[5,"shmget","","",null,null],[5,"shmat","","",null,null],[5,"shmdt","","",null,null],[5,"shmctl","","",null,null],[5,"ftok","","",null,null],[5,"semget","","",null,null],[5,"semop","","",null,null],[5,"semctl","","",null,null],[5,"msgctl","","",null,null],[5,"msgget","","",null,null],[5,"msgrcv","","",null,null],[5,"msgsnd","","",null,null],[5,"mprotect","","",null,null],[5,"__errno_location","","",null,null],[5,"fopen64","","",null,null],[5,"freopen64","","",null,null],[5,"tmpfile64","","",null,null],[5,"fgetpos64","","",null,null],[5,"fsetpos64","","",null,null],[5,"fseeko64","","",null,null],[5,"ftello64","","",null,null],[5,"fallocate","","",null,null],[5,"fallocate64","","",null,null],[5,"posix_fallocate","","",null,null],[5,"posix_fallocate64","","",null,null],[5,"readahead","","",null,null],[5,"getxattr","","",null,null],[5,"lgetxattr","","",null,null],[5,"fgetxattr","","",null,null],[5,"setxattr","","",null,null],[5,"lsetxattr","","",null,null],[5,"fsetxattr","","",null,null],[5,"listxattr","","",null,null],[5,"llistxattr","","",null,null],[5,"flistxattr","","",null,null],[5,"removexattr","","",null,null],[5,"lremovexattr","","",null,null],[5,"fremovexattr","","",null,null],[5,"signalfd","","",null,null],[5,"timerfd_create","","",null,null],[5,"timerfd_gettime","","",null,null],[5,"timerfd_settime","","",null,null],[5,"pwritev","","",null,null],[5,"preadv","","",null,null],[5,"quotactl","","",null,null],[5,"mq_open","","",null,null],[5,"mq_close","","",null,null],[5,"mq_unlink","","",null,null],[5,"mq_receive","","",null,null],[5,"mq_timedreceive","","",null,null],[5,"mq_send","","",null,null],[5,"mq_timedsend","","",null,null],[5,"mq_getattr","","",null,null],[5,"mq_setattr","","",null,null],[5,"epoll_pwait","","",null,null],[5,"dup3","","",null,null],[5,"mkostemp","","",null,null],[5,"mkostemps","","",null,null],[5,"sigtimedwait","","",null,null],[5,"sigwaitinfo","","",null,null],[5,"nl_langinfo_l","","",null,null],[5,"getnameinfo","","",null,null],[5,"pthread_setschedprio","","",null,null],[5,"getloadavg","","",null,null],[5,"process_vm_readv","","",null,null],[5,"process_vm_writev","","",null,null],[5,"reboot","","",null,null],[5,"setfsgid","","",null,null],[5,"setfsuid","","",null,null],[5,"mkfifoat","","",null,null],[5,"if_nameindex","","",null,null],[5,"if_freenameindex","","",null,null],[5,"sync_file_range","","",null,null],[5,"mremap","","",null,null],[5,"glob","","",null,null],[5,"globfree","","",null,null],[5,"posix_madvise","","",null,null],[5,"shm_unlink","","",null,null],[5,"seekdir","","",null,null],[5,"telldir","","",null,null],[5,"madvise","","",null,null],[5,"msync","","",null,null],[5,"remap_file_pages","","",null,null],[5,"recvfrom","","",null,null],[5,"mkstemps","","",null,null],[5,"futimes","","",null,null],[5,"nl_langinfo","","",null,null],[5,"getdomainname","","",null,null],[5,"setdomainname","","",null,null],[5,"vhangup","","",null,null],[5,"sync","","",null,null],[5,"syscall","","",null,null],[5,"sched_getaffinity","","",null,null],[5,"sched_setaffinity","","",null,null],[5,"epoll_create","","",null,null],[5,"epoll_create1","","",null,null],[5,"epoll_wait","","",null,null],[5,"epoll_ctl","","",null,null],[5,"pthread_getschedparam","","",null,null],[5,"unshare","","",null,null],[5,"umount","","",null,null],[5,"sched_get_priority_max","","",null,null],[5,"tee","","",null,null],[5,"settimeofday","","",null,null],[5,"splice","","",null,null],[5,"eventfd","","",null,null],[5,"sched_rr_get_interval","","",null,null],[5,"sem_timedwait","","",null,null],[5,"sem_getvalue","","",null,null],[5,"sched_setparam","","",null,null],[5,"setns","","",null,null],[5,"swapoff","","",null,null],[5,"vmsplice","","",null,null],[5,"mount","","",null,null],[5,"personality","","",null,null],[5,"prctl","","",null,null],[5,"sched_getparam","","",null,null],[5,"ppoll","","",null,null],[5,"pthread_mutex_timedlock","","",null,null],[5,"clone","","",null,null],[5,"sched_getscheduler","","",null,null],[5,"clock_nanosleep","","",null,null],[5,"pthread_attr_getguardsize","","",null,null],[5,"sethostname","","",null,null],[5,"sched_get_priority_min","","",null,null],[5,"pthread_condattr_getpshared","","",null,null],[5,"sysinfo","","",null,null],[5,"umount2","","",null,null],[5,"pthread_setschedparam","","",null,null],[5,"swapon","","",null,null],[5,"sched_setscheduler","","",null,null],[5,"sendfile","","",null,null],[5,"sigsuspend","","",null,null],[5,"getgrgid_r","","",null,null],[5,"sigaltstack","","",null,null],[5,"sem_close","","",null,null],[5,"getdtablesize","","",null,null],[5,"getgrnam_r","","",null,null],[5,"initgroups","","",null,null],[5,"pthread_sigmask","","",null,null],[5,"sem_open","","",null,null],[5,"getgrnam","","",null,null],[5,"pthread_cancel","","",null,null],[5,"pthread_kill","","",null,null],[5,"sem_unlink","","",null,null],[5,"daemon","","",null,null],[5,"getpwnam_r","","",null,null],[5,"getpwuid_r","","",null,null],[5,"sigwait","","",null,null],[5,"pthread_atfork","","",null,null],[5,"getgrgid","","",null,null],[5,"getgrouplist","","",null,null],[5,"pthread_mutexattr_getpshared","","",null,null],[5,"popen","","",null,null],[5,"faccessat","","",null,null],[5,"pthread_create","","",null,null],[5,"dl_iterate_phdr","","",null,null],[5,"setmntent","","",null,null],[5,"getmntent","","",null,null],[5,"addmntent","","",null,null],[5,"endmntent","","",null,null],[5,"hasmntopt","","",null,null],[5,"posix_spawn","","",null,null],[5,"posix_spawnp","","",null,null],[5,"posix_spawnattr_init","","",null,null],[5,"posix_spawnattr_destroy","","",null,null],[5,"posix_spawnattr_getsigdefault","","",null,null],[5,"posix_spawnattr_setsigdefault","","",null,null],[5,"posix_spawnattr_getsigmask","","",null,null],[5,"posix_spawnattr_setsigmask","","",null,null],[5,"posix_spawnattr_getflags","","",null,null],[5,"posix_spawnattr_setflags","","",null,null],[5,"posix_spawnattr_getpgroup","","",null,null],[5,"posix_spawnattr_setpgroup","","",null,null],[5,"posix_spawnattr_getschedpolicy","","",null,null],[5,"posix_spawnattr_setschedpolicy","","",null,null],[5,"posix_spawnattr_getschedparam","","",null,null],[5,"posix_spawnattr_setschedparam","","",null,null],[5,"posix_spawn_file_actions_init","","",null,null],[5,"posix_spawn_file_actions_destroy","","",null,null],[5,"posix_spawn_file_actions_addopen","","",null,null],[5,"posix_spawn_file_actions_addclose","","",null,null],[5,"posix_spawn_file_actions_adddup2","","",null,null],[5,"fread_unlocked","","",null,null],[5,"inotify_rm_watch","","",null,null],[5,"inotify_init","","",null,null],[5,"inotify_init1","","",null,null],[5,"inotify_add_watch","","",null,null],[5,"fanotify_init","","",null,null],[5,"regcomp","","",null,null],[5,"regexec","","",null,null],[5,"regerror","","",null,null],[5,"regfree","","",null,null],[5,"fgetspent_r","","",null,null],[5,"sgetspent_r","","",null,null],[5,"getspent_r","","",null,null],[5,"qsort_r","","",null,null],[5,"sendmmsg","","",null,null],[5,"recvmmsg","","",null,null],[5,"getrlimit64","","",null,null],[5,"setrlimit64","","",null,null],[5,"getrlimit","","",null,null],[5,"setrlimit","","",null,null],[5,"prlimit","","",null,null],[5,"prlimit64","","",null,null],[5,"utmpname","","",null,null],[5,"utmpxname","","",null,null],[5,"getutxent","","",null,null],[5,"getutxid","","",null,null],[5,"getutxline","","",null,null],[5,"pututxline","","",null,null],[5,"setutxent","","",null,null],[5,"endutxent","","",null,null],[5,"getpt","","",null,null],[5,"mallopt","","",null,null],[5,"gettimeofday","","",null,null],[5,"statx","","",null,null],[5,"getrandom","","",null,null],[5,"memmem","","",null,null],[5,"getauxval","","",null,null],[5,"adjtimex","","",null,null],[5,"ntp_adjtime","","",null,null],[5,"ntp_gettime","","",null,null],[5,"copy_file_range","","",null,null],[5,"fanotify_mark","","",null,null],[5,"ioctl","","",null,null],[5,"backtrace","","",null,null],[5,"glob64","","",null,null],[5,"globfree64","","",null,null],[5,"ptrace","","",null,null],[5,"pthread_attr_getaffinity_np","","",null,null],[5,"pthread_attr_setaffinity_np","","",null,null],[5,"getpriority","","",null,null],[5,"setpriority","","",null,null],[5,"pthread_getaffinity_np","","",null,null],[5,"pthread_setaffinity_np","","",null,null],[5,"pthread_rwlockattr_getkind_np","","",null,null],[5,"pthread_rwlockattr_setkind_np","","",null,null],[5,"sched_getcpu","","",null,null],[5,"mallinfo","","",null,null],[5,"malloc_usable_size","","",null,null],[5,"getpwent_r","","",null,null],[5,"getgrent_r","","",null,null],[5,"pthread_getname_np","","",null,null],[5,"pthread_setname_np","","",null,null],[5,"dlmopen","","",null,null],[5,"dlinfo","","",null,null],[5,"getcontext","","",null,null],[5,"setcontext","","",null,null],[5,"makecontext","","",null,null],[5,"swapcontext","","",null,null],[5,"iopl","","",null,null],[5,"ioperm","","",null,null],[5,"sysctl","","",null,null],[11,"si_addr","","",118,[[["self"]]]],[11,"si_value","","",118,[[["self"]],["sigval"]]],[6,"int8_t","","",null,null],[6,"int16_t","","",null,null],[6,"int32_t","","",null,null],[6,"int64_t","","",null,null],[6,"uint8_t","","",null,null],[6,"uint16_t","","",null,null],[6,"uint32_t","","",null,null],[6,"uint64_t","","",null,null],[6,"c_schar","","",null,null],[6,"c_uchar","","",null,null],[6,"c_short","","",null,null],[6,"c_ushort","","",null,null],[6,"c_int","","",null,null],[6,"c_uint","","",null,null],[6,"c_float","","",null,null],[6,"c_double","","",null,null],[6,"c_longlong","","",null,null],[6,"c_ulonglong","","",null,null],[6,"intmax_t","","",null,null],[6,"uintmax_t","","",null,null],[6,"size_t","","",null,null],[6,"ptrdiff_t","","",null,null],[6,"intptr_t","","",null,null],[6,"uintptr_t","","",null,null],[6,"ssize_t","","",null,null],[6,"pid_t","","",null,null],[6,"uid_t","","",null,null],[6,"gid_t","","",null,null],[6,"in_addr_t","","",null,null],[6,"in_port_t","","",null,null],[6,"sighandler_t","","",null,null],[6,"cc_t","","",null,null],[6,"locale_t","","",null,null],[6,"sa_family_t","","",null,null],[6,"speed_t","","",null,null],[6,"tcflag_t","","",null,null],[6,"clockid_t","","",null,null],[6,"key_t","","",null,null],[6,"id_t","","",null,null],[6,"useconds_t","","",null,null],[6,"dev_t","","",null,null],[6,"socklen_t","","",null,null],[6,"mode_t","","",null,null],[6,"ino64_t","","",null,null],[6,"off64_t","","",null,null],[6,"blkcnt64_t","","",null,null],[6,"rlim64_t","","",null,null],[6,"mqd_t","","",null,null],[6,"nfds_t","","",null,null],[6,"nl_item","","",null,null],[6,"idtype_t","","",null,null],[6,"loff_t","","",null,null],[6,"pthread_key_t","","",null,null],[6,"__u8","","",null,null],[6,"__u16","","",null,null],[6,"__s16","","",null,null],[6,"__u32","","",null,null],[6,"__s32","","",null,null],[6,"Elf32_Half","","",null,null],[6,"Elf32_Word","","",null,null],[6,"Elf32_Off","","",null,null],[6,"Elf32_Addr","","",null,null],[6,"Elf64_Half","","",null,null],[6,"Elf64_Word","","",null,null],[6,"Elf64_Off","","",null,null],[6,"Elf64_Addr","","",null,null],[6,"Elf64_Xword","","",null,null],[6,"Elf64_Sxword","","",null,null],[6,"Elf32_Section","","",null,null],[6,"Elf64_Section","","",null,null],[6,"pthread_t","","",null,null],[6,"__priority_which_t","","",null,null],[6,"__rlimit_resource_t","","",null,null],[6,"Lmid_t","","",null,null],[6,"regoff_t","","",null,null],[6,"clock_t","","",null,null],[6,"time_t","","",null,null],[6,"ino_t","","",null,null],[6,"off_t","","",null,null],[6,"blkcnt_t","","",null,null],[6,"shmatt_t","","",null,null],[6,"msgqnum_t","","",null,null],[6,"msglen_t","","",null,null],[6,"fsblkcnt_t","","",null,null],[6,"fsfilcnt_t","","",null,null],[6,"rlim_t","","",null,null],[6,"__fsword_t","","",null,null],[6,"c_char","","",null,null],[6,"wchar_t","","",null,null],[6,"nlink_t","","",null,null],[6,"blksize_t","","",null,null],[6,"greg_t","","",null,null],[6,"suseconds_t","","",null,null],[6,"__u64","","",null,null],[6,"c_long","","",null,null],[6,"c_ulong","","",null,null],[17,"INT_MIN","","",null,null],[17,"INT_MAX","","",null,null],[17,"SIG_DFL","","",null,null],[17,"SIG_IGN","","",null,null],[17,"SIG_ERR","","",null,null],[17,"DT_UNKNOWN","","",null,null],[17,"DT_FIFO","","",null,null],[17,"DT_CHR","","",null,null],[17,"DT_DIR","","",null,null],[17,"DT_BLK","","",null,null],[17,"DT_REG","","",null,null],[17,"DT_LNK","","",null,null],[17,"DT_SOCK","","",null,null],[17,"FD_CLOEXEC","","",null,null],[17,"USRQUOTA","","",null,null],[17,"GRPQUOTA","","",null,null],[17,"SIGIOT","","",null,null],[17,"S_ISUID","","",null,null],[17,"S_ISGID","","",null,null],[17,"S_ISVTX","","",null,null],[17,"IF_NAMESIZE","","",null,null],[17,"IFNAMSIZ","","",null,null],[17,"LOG_EMERG","","",null,null],[17,"LOG_ALERT","","",null,null],[17,"LOG_CRIT","","",null,null],[17,"LOG_ERR","","",null,null],[17,"LOG_WARNING","","",null,null],[17,"LOG_NOTICE","","",null,null],[17,"LOG_INFO","","",null,null],[17,"LOG_DEBUG","","",null,null],[17,"LOG_KERN","","",null,null],[17,"LOG_USER","","",null,null],[17,"LOG_MAIL","","",null,null],[17,"LOG_DAEMON","","",null,null],[17,"LOG_AUTH","","",null,null],[17,"LOG_SYSLOG","","",null,null],[17,"LOG_LPR","","",null,null],[17,"LOG_NEWS","","",null,null],[17,"LOG_UUCP","","",null,null],[17,"LOG_LOCAL0","","",null,null],[17,"LOG_LOCAL1","","",null,null],[17,"LOG_LOCAL2","","",null,null],[17,"LOG_LOCAL3","","",null,null],[17,"LOG_LOCAL4","","",null,null],[17,"LOG_LOCAL5","","",null,null],[17,"LOG_LOCAL6","","",null,null],[17,"LOG_LOCAL7","","",null,null],[17,"LOG_PID","","",null,null],[17,"LOG_CONS","","",null,null],[17,"LOG_ODELAY","","",null,null],[17,"LOG_NDELAY","","",null,null],[17,"LOG_NOWAIT","","",null,null],[17,"LOG_PRIMASK","","",null,null],[17,"LOG_FACMASK","","",null,null],[17,"PRIO_MIN","","",null,null],[17,"PRIO_MAX","","",null,null],[17,"IPPROTO_ICMP","","",null,null],[17,"IPPROTO_ICMPV6","","",null,null],[17,"IPPROTO_TCP","","",null,null],[17,"IPPROTO_UDP","","",null,null],[17,"IPPROTO_IP","","",null,null],[17,"IPPROTO_IPV6","","",null,null],[17,"INADDR_LOOPBACK","","",null,null],[17,"INADDR_ANY","","",null,null],[17,"INADDR_BROADCAST","","",null,null],[17,"INADDR_NONE","","",null,null],[17,"ARPOP_REQUEST","","",null,null],[17,"ARPOP_REPLY","","",null,null],[17,"ATF_COM","","",null,null],[17,"ATF_PERM","","",null,null],[17,"ATF_PUBL","","",null,null],[17,"ATF_USETRAILERS","","",null,null],[17,"EXIT_FAILURE","","",null,null],[17,"EXIT_SUCCESS","","",null,null],[17,"RAND_MAX","","",null,null],[17,"EOF","","",null,null],[17,"SEEK_SET","","",null,null],[17,"SEEK_CUR","","",null,null],[17,"SEEK_END","","",null,null],[17,"_IOFBF","","",null,null],[17,"_IONBF","","",null,null],[17,"_IOLBF","","",null,null],[17,"F_DUPFD","","",null,null],[17,"F_GETFD","","",null,null],[17,"F_SETFD","","",null,null],[17,"F_GETFL","","",null,null],[17,"F_SETFL","","",null,null],[17,"F_SETLEASE","","",null,null],[17,"F_GETLEASE","","",null,null],[17,"F_NOTIFY","","",null,null],[17,"F_CANCELLK","","",null,null],[17,"F_DUPFD_CLOEXEC","","",null,null],[17,"F_SETPIPE_SZ","","",null,null],[17,"F_GETPIPE_SZ","","",null,null],[17,"F_ADD_SEALS","","",null,null],[17,"F_GET_SEALS","","",null,null],[17,"F_SEAL_SEAL","","",null,null],[17,"F_SEAL_SHRINK","","",null,null],[17,"F_SEAL_GROW","","",null,null],[17,"F_SEAL_WRITE","","",null,null],[17,"SIGTRAP","","",null,null],[17,"PTHREAD_CREATE_JOINABLE","","",null,null],[17,"PTHREAD_CREATE_DETACHED","","",null,null],[17,"CLOCK_REALTIME","","",null,null],[17,"CLOCK_MONOTONIC","","",null,null],[17,"CLOCK_PROCESS_CPUTIME_ID","","",null,null],[17,"CLOCK_THREAD_CPUTIME_ID","","",null,null],[17,"CLOCK_MONOTONIC_RAW","","",null,null],[17,"CLOCK_REALTIME_COARSE","","",null,null],[17,"CLOCK_MONOTONIC_COARSE","","",null,null],[17,"CLOCK_BOOTTIME","","",null,null],[17,"CLOCK_REALTIME_ALARM","","",null,null],[17,"CLOCK_BOOTTIME_ALARM","","",null,null],[17,"CLOCK_TAI","","",null,null],[17,"TIMER_ABSTIME","","",null,null],[17,"RUSAGE_SELF","","",null,null],[17,"O_RDONLY","","",null,null],[17,"O_WRONLY","","",null,null],[17,"O_RDWR","","",null,null],[17,"SOCK_CLOEXEC","","",null,null],[17,"S_IFIFO","","",null,null],[17,"S_IFCHR","","",null,null],[17,"S_IFBLK","","",null,null],[17,"S_IFDIR","","",null,null],[17,"S_IFREG","","",null,null],[17,"S_IFLNK","","",null,null],[17,"S_IFSOCK","","",null,null],[17,"S_IFMT","","",null,null],[17,"S_IRWXU","","",null,null],[17,"S_IXUSR","","",null,null],[17,"S_IWUSR","","",null,null],[17,"S_IRUSR","","",null,null],[17,"S_IRWXG","","",null,null],[17,"S_IXGRP","","",null,null],[17,"S_IWGRP","","",null,null],[17,"S_IRGRP","","",null,null],[17,"S_IRWXO","","",null,null],[17,"S_IXOTH","","",null,null],[17,"S_IWOTH","","",null,null],[17,"S_IROTH","","",null,null],[17,"F_OK","","",null,null],[17,"R_OK","","",null,null],[17,"W_OK","","",null,null],[17,"X_OK","","",null,null],[17,"STDIN_FILENO","","",null,null],[17,"STDOUT_FILENO","","",null,null],[17,"STDERR_FILENO","","",null,null],[17,"SIGHUP","","",null,null],[17,"SIGINT","","",null,null],[17,"SIGQUIT","","",null,null],[17,"SIGILL","","",null,null],[17,"SIGABRT","","",null,null],[17,"SIGFPE","","",null,null],[17,"SIGKILL","","",null,null],[17,"SIGSEGV","","",null,null],[17,"SIGPIPE","","",null,null],[17,"SIGALRM","","",null,null],[17,"SIGTERM","","",null,null],[17,"PROT_NONE","","",null,null],[17,"PROT_READ","","",null,null],[17,"PROT_WRITE","","",null,null],[17,"PROT_EXEC","","",null,null],[17,"LC_CTYPE","","",null,null],[17,"LC_NUMERIC","","",null,null],[17,"LC_TIME","","",null,null],[17,"LC_COLLATE","","",null,null],[17,"LC_MONETARY","","",null,null],[17,"LC_MESSAGES","","",null,null],[17,"LC_ALL","","",null,null],[17,"LC_CTYPE_MASK","","",null,null],[17,"LC_NUMERIC_MASK","","",null,null],[17,"LC_TIME_MASK","","",null,null],[17,"LC_COLLATE_MASK","","",null,null],[17,"LC_MONETARY_MASK","","",null,null],[17,"LC_MESSAGES_MASK","","",null,null],[17,"MAP_FILE","","",null,null],[17,"MAP_SHARED","","",null,null],[17,"MAP_PRIVATE","","",null,null],[17,"MAP_FIXED","","",null,null],[17,"MAP_FAILED","","",null,null],[17,"MS_ASYNC","","",null,null],[17,"MS_INVALIDATE","","",null,null],[17,"MS_SYNC","","",null,null],[17,"MS_RDONLY","","",null,null],[17,"MS_NOSUID","","",null,null],[17,"MS_NODEV","","",null,null],[17,"MS_NOEXEC","","",null,null],[17,"MS_SYNCHRONOUS","","",null,null],[17,"MS_REMOUNT","","",null,null],[17,"MS_MANDLOCK","","",null,null],[17,"MS_DIRSYNC","","",null,null],[17,"MS_NOATIME","","",null,null],[17,"MS_NODIRATIME","","",null,null],[17,"MS_BIND","","",null,null],[17,"MS_MOVE","","",null,null],[17,"MS_REC","","",null,null],[17,"MS_SILENT","","",null,null],[17,"MS_POSIXACL","","",null,null],[17,"MS_UNBINDABLE","","",null,null],[17,"MS_PRIVATE","","",null,null],[17,"MS_SLAVE","","",null,null],[17,"MS_SHARED","","",null,null],[17,"MS_RELATIME","","",null,null],[17,"MS_KERNMOUNT","","",null,null],[17,"MS_I_VERSION","","",null,null],[17,"MS_STRICTATIME","","",null,null],[17,"MS_ACTIVE","","",null,null],[17,"MS_MGC_VAL","","",null,null],[17,"MS_MGC_MSK","","",null,null],[17,"SCM_RIGHTS","","",null,null],[17,"SCM_CREDENTIALS","","",null,null],[17,"PROT_GROWSDOWN","","",null,null],[17,"PROT_GROWSUP","","",null,null],[17,"MAP_TYPE","","",null,null],[17,"MADV_NORMAL","","",null,null],[17,"MADV_RANDOM","","",null,null],[17,"MADV_SEQUENTIAL","","",null,null],[17,"MADV_WILLNEED","","",null,null],[17,"MADV_DONTNEED","","",null,null],[17,"MADV_FREE","","",null,null],[17,"MADV_REMOVE","","",null,null],[17,"MADV_DONTFORK","","",null,null],[17,"MADV_DOFORK","","",null,null],[17,"MADV_MERGEABLE","","",null,null],[17,"MADV_UNMERGEABLE","","",null,null],[17,"MADV_HUGEPAGE","","",null,null],[17,"MADV_NOHUGEPAGE","","",null,null],[17,"MADV_DONTDUMP","","",null,null],[17,"MADV_DODUMP","","",null,null],[17,"MADV_HWPOISON","","",null,null],[17,"IFF_UP","","",null,null],[17,"IFF_BROADCAST","","",null,null],[17,"IFF_DEBUG","","",null,null],[17,"IFF_LOOPBACK","","",null,null],[17,"IFF_POINTOPOINT","","",null,null],[17,"IFF_NOTRAILERS","","",null,null],[17,"IFF_RUNNING","","",null,null],[17,"IFF_NOARP","","",null,null],[17,"IFF_PROMISC","","",null,null],[17,"IFF_ALLMULTI","","",null,null],[17,"IFF_MASTER","","",null,null],[17,"IFF_SLAVE","","",null,null],[17,"IFF_MULTICAST","","",null,null],[17,"IFF_PORTSEL","","",null,null],[17,"IFF_AUTOMEDIA","","",null,null],[17,"IFF_DYNAMIC","","",null,null],[17,"SOL_IP","","",null,null],[17,"SOL_TCP","","",null,null],[17,"SOL_UDP","","",null,null],[17,"SOL_IPV6","","",null,null],[17,"SOL_ICMPV6","","",null,null],[17,"SOL_RAW","","",null,null],[17,"SOL_DECNET","","",null,null],[17,"SOL_X25","","",null,null],[17,"SOL_PACKET","","",null,null],[17,"SOL_ATM","","",null,null],[17,"SOL_AAL","","",null,null],[17,"SOL_IRDA","","",null,null],[17,"SOL_NETBEUI","","",null,null],[17,"SOL_LLC","","",null,null],[17,"SOL_DCCP","","",null,null],[17,"SOL_NETLINK","","",null,null],[17,"SOL_TIPC","","",null,null],[17,"SOL_BLUETOOTH","","",null,null],[17,"SOL_ALG","","",null,null],[17,"AF_UNSPEC","","",null,null],[17,"AF_UNIX","","",null,null],[17,"AF_LOCAL","","",null,null],[17,"AF_INET","","",null,null],[17,"AF_AX25","","",null,null],[17,"AF_IPX","","",null,null],[17,"AF_APPLETALK","","",null,null],[17,"AF_NETROM","","",null,null],[17,"AF_BRIDGE","","",null,null],[17,"AF_ATMPVC","","",null,null],[17,"AF_X25","","",null,null],[17,"AF_INET6","","",null,null],[17,"AF_ROSE","","",null,null],[17,"AF_DECnet","","",null,null],[17,"AF_NETBEUI","","",null,null],[17,"AF_SECURITY","","",null,null],[17,"AF_KEY","","",null,null],[17,"AF_NETLINK","","",null,null],[17,"AF_ROUTE","","",null,null],[17,"AF_PACKET","","",null,null],[17,"AF_ASH","","",null,null],[17,"AF_ECONET","","",null,null],[17,"AF_ATMSVC","","",null,null],[17,"AF_RDS","","",null,null],[17,"AF_SNA","","",null,null],[17,"AF_IRDA","","",null,null],[17,"AF_PPPOX","","",null,null],[17,"AF_WANPIPE","","",null,null],[17,"AF_LLC","","",null,null],[17,"AF_CAN","","",null,null],[17,"AF_TIPC","","",null,null],[17,"AF_BLUETOOTH","","",null,null],[17,"AF_IUCV","","",null,null],[17,"AF_RXRPC","","",null,null],[17,"AF_ISDN","","",null,null],[17,"AF_PHONET","","",null,null],[17,"AF_IEEE802154","","",null,null],[17,"AF_CAIF","","",null,null],[17,"AF_ALG","","",null,null],[17,"PF_UNSPEC","","",null,null],[17,"PF_UNIX","","",null,null],[17,"PF_LOCAL","","",null,null],[17,"PF_INET","","",null,null],[17,"PF_AX25","","",null,null],[17,"PF_IPX","","",null,null],[17,"PF_APPLETALK","","",null,null],[17,"PF_NETROM","","",null,null],[17,"PF_BRIDGE","","",null,null],[17,"PF_ATMPVC","","",null,null],[17,"PF_X25","","",null,null],[17,"PF_INET6","","",null,null],[17,"PF_ROSE","","",null,null],[17,"PF_DECnet","","",null,null],[17,"PF_NETBEUI","","",null,null],[17,"PF_SECURITY","","",null,null],[17,"PF_KEY","","",null,null],[17,"PF_NETLINK","","",null,null],[17,"PF_ROUTE","","",null,null],[17,"PF_PACKET","","",null,null],[17,"PF_ASH","","",null,null],[17,"PF_ECONET","","",null,null],[17,"PF_ATMSVC","","",null,null],[17,"PF_RDS","","",null,null],[17,"PF_SNA","","",null,null],[17,"PF_IRDA","","",null,null],[17,"PF_PPPOX","","",null,null],[17,"PF_WANPIPE","","",null,null],[17,"PF_LLC","","",null,null],[17,"PF_CAN","","",null,null],[17,"PF_TIPC","","",null,null],[17,"PF_BLUETOOTH","","",null,null],[17,"PF_IUCV","","",null,null],[17,"PF_RXRPC","","",null,null],[17,"PF_ISDN","","",null,null],[17,"PF_PHONET","","",null,null],[17,"PF_IEEE802154","","",null,null],[17,"PF_CAIF","","",null,null],[17,"PF_ALG","","",null,null],[17,"SOMAXCONN","","",null,null],[17,"MSG_OOB","","",null,null],[17,"MSG_PEEK","","",null,null],[17,"MSG_DONTROUTE","","",null,null],[17,"MSG_CTRUNC","","",null,null],[17,"MSG_TRUNC","","",null,null],[17,"MSG_DONTWAIT","","",null,null],[17,"MSG_EOR","","",null,null],[17,"MSG_WAITALL","","",null,null],[17,"MSG_FIN","","",null,null],[17,"MSG_SYN","","",null,null],[17,"MSG_CONFIRM","","",null,null],[17,"MSG_RST","","",null,null],[17,"MSG_ERRQUEUE","","",null,null],[17,"MSG_NOSIGNAL","","",null,null],[17,"MSG_MORE","","",null,null],[17,"MSG_WAITFORONE","","",null,null],[17,"MSG_FASTOPEN","","",null,null],[17,"MSG_CMSG_CLOEXEC","","",null,null],[17,"SCM_TIMESTAMP","","",null,null],[17,"SOCK_RAW","","",null,null],[17,"SOCK_RDM","","",null,null],[17,"IP_MULTICAST_IF","","",null,null],[17,"IP_MULTICAST_TTL","","",null,null],[17,"IP_MULTICAST_LOOP","","",null,null],[17,"IP_TOS","","",null,null],[17,"IP_TTL","","",null,null],[17,"IP_HDRINCL","","",null,null],[17,"IP_PKTINFO","","",null,null],[17,"IP_MTU_DISCOVER","","",null,null],[17,"IP_RECVTOS","","",null,null],[17,"IP_RECVERR","","",null,null],[17,"IP_ADD_MEMBERSHIP","","",null,null],[17,"IP_DROP_MEMBERSHIP","","",null,null],[17,"IP_ADD_SOURCE_MEMBERSHIP","","",null,null],[17,"IP_DROP_SOURCE_MEMBERSHIP","","",null,null],[17,"IP_TRANSPARENT","","",null,null],[17,"IPV6_ADDRFORM","","",null,null],[17,"IPV6_2292PKTINFO","","",null,null],[17,"IPV6_2292HOPOPTS","","",null,null],[17,"IPV6_2292DSTOPTS","","",null,null],[17,"IPV6_2292RTHDR","","",null,null],[17,"IPV6_2292PKTOPTIONS","","",null,null],[17,"IPV6_CHECKSUM","","",null,null],[17,"IPV6_2292HOPLIMIT","","",null,null],[17,"IPV6_NEXTHOP","","",null,null],[17,"IPV6_UNICAST_HOPS","","",null,null],[17,"IPV6_MULTICAST_IF","","",null,null],[17,"IPV6_MULTICAST_HOPS","","",null,null],[17,"IPV6_MULTICAST_LOOP","","",null,null],[17,"IPV6_ADD_MEMBERSHIP","","",null,null],[17,"IPV6_DROP_MEMBERSHIP","","",null,null],[17,"IPV6_ROUTER_ALERT","","",null,null],[17,"IPV6_MTU_DISCOVER","","",null,null],[17,"IPV6_MTU","","",null,null],[17,"IPV6_RECVERR","","",null,null],[17,"IPV6_V6ONLY","","",null,null],[17,"IPV6_JOIN_ANYCAST","","",null,null],[17,"IPV6_LEAVE_ANYCAST","","",null,null],[17,"IPV6_RECVPKTINFO","","",null,null],[17,"IPV6_PKTINFO","","",null,null],[17,"IPV6_HOPLIMIT","","",null,null],[17,"IPV6_RECVTCLASS","","",null,null],[17,"IPV6_TCLASS","","",null,null],[17,"IP_PMTUDISC_DONT","","",null,null],[17,"IP_PMTUDISC_WANT","","",null,null],[17,"IP_PMTUDISC_DO","","",null,null],[17,"IP_PMTUDISC_PROBE","","",null,null],[17,"TCP_NODELAY","","",null,null],[17,"TCP_MAXSEG","","",null,null],[17,"TCP_CORK","","",null,null],[17,"TCP_KEEPIDLE","","",null,null],[17,"TCP_KEEPINTVL","","",null,null],[17,"TCP_KEEPCNT","","",null,null],[17,"TCP_SYNCNT","","",null,null],[17,"TCP_LINGER2","","",null,null],[17,"TCP_DEFER_ACCEPT","","",null,null],[17,"TCP_WINDOW_CLAMP","","",null,null],[17,"TCP_INFO","","",null,null],[17,"TCP_QUICKACK","","",null,null],[17,"TCP_CONGESTION","","",null,null],[17,"SO_DEBUG","","",null,null],[17,"SHUT_RD","","",null,null],[17,"SHUT_WR","","",null,null],[17,"SHUT_RDWR","","",null,null],[17,"LOCK_SH","","",null,null],[17,"LOCK_EX","","",null,null],[17,"LOCK_NB","","",null,null],[17,"LOCK_UN","","",null,null],[17,"SS_ONSTACK","","",null,null],[17,"SS_DISABLE","","",null,null],[17,"PATH_MAX","","",null,null],[17,"FD_SETSIZE","","",null,null],[17,"EPOLLIN","","",null,null],[17,"EPOLLPRI","","",null,null],[17,"EPOLLOUT","","",null,null],[17,"EPOLLRDNORM","","",null,null],[17,"EPOLLRDBAND","","",null,null],[17,"EPOLLWRNORM","","",null,null],[17,"EPOLLWRBAND","","",null,null],[17,"EPOLLMSG","","",null,null],[17,"EPOLLERR","","",null,null],[17,"EPOLLHUP","","",null,null],[17,"EPOLLET","","",null,null],[17,"EPOLL_CTL_ADD","","",null,null],[17,"EPOLL_CTL_MOD","","",null,null],[17,"EPOLL_CTL_DEL","","",null,null],[17,"MNT_DETACH","","",null,null],[17,"MNT_EXPIRE","","",null,null],[17,"Q_GETFMT","","",null,null],[17,"Q_GETINFO","","",null,null],[17,"Q_SETINFO","","",null,null],[17,"QIF_BLIMITS","","",null,null],[17,"QIF_SPACE","","",null,null],[17,"QIF_ILIMITS","","",null,null],[17,"QIF_INODES","","",null,null],[17,"QIF_BTIME","","",null,null],[17,"QIF_ITIME","","",null,null],[17,"QIF_LIMITS","","",null,null],[17,"QIF_USAGE","","",null,null],[17,"QIF_TIMES","","",null,null],[17,"QIF_ALL","","",null,null],[17,"MNT_FORCE","","",null,null],[17,"Q_SYNC","","",null,null],[17,"Q_QUOTAON","","",null,null],[17,"Q_QUOTAOFF","","",null,null],[17,"Q_GETQUOTA","","",null,null],[17,"Q_SETQUOTA","","",null,null],[17,"TCIOFF","","",null,null],[17,"TCION","","",null,null],[17,"TCOOFF","","",null,null],[17,"TCOON","","",null,null],[17,"TCIFLUSH","","",null,null],[17,"TCOFLUSH","","",null,null],[17,"TCIOFLUSH","","",null,null],[17,"NL0","","",null,null],[17,"NL1","","",null,null],[17,"TAB0","","",null,null],[17,"CR0","","",null,null],[17,"FF0","","",null,null],[17,"BS0","","",null,null],[17,"VT0","","",null,null],[17,"VERASE","","",null,null],[17,"VKILL","","",null,null],[17,"VINTR","","",null,null],[17,"VQUIT","","",null,null],[17,"VLNEXT","","",null,null],[17,"IGNBRK","","",null,null],[17,"BRKINT","","",null,null],[17,"IGNPAR","","",null,null],[17,"PARMRK","","",null,null],[17,"INPCK","","",null,null],[17,"ISTRIP","","",null,null],[17,"INLCR","","",null,null],[17,"IGNCR","","",null,null],[17,"ICRNL","","",null,null],[17,"IXANY","","",null,null],[17,"IMAXBEL","","",null,null],[17,"OPOST","","",null,null],[17,"CS5","","",null,null],[17,"CRTSCTS","","",null,null],[17,"ECHO","","",null,null],[17,"OCRNL","","",null,null],[17,"ONOCR","","",null,null],[17,"ONLRET","","",null,null],[17,"OFILL","","",null,null],[17,"OFDEL","","",null,null],[17,"CLONE_VM","","",null,null],[17,"CLONE_FS","","",null,null],[17,"CLONE_FILES","","",null,null],[17,"CLONE_SIGHAND","","",null,null],[17,"CLONE_PTRACE","","",null,null],[17,"CLONE_VFORK","","",null,null],[17,"CLONE_PARENT","","",null,null],[17,"CLONE_THREAD","","",null,null],[17,"CLONE_NEWNS","","",null,null],[17,"CLONE_SYSVSEM","","",null,null],[17,"CLONE_SETTLS","","",null,null],[17,"CLONE_PARENT_SETTID","","",null,null],[17,"CLONE_CHILD_CLEARTID","","",null,null],[17,"CLONE_DETACHED","","",null,null],[17,"CLONE_UNTRACED","","",null,null],[17,"CLONE_CHILD_SETTID","","",null,null],[17,"CLONE_NEWUTS","","",null,null],[17,"CLONE_NEWIPC","","",null,null],[17,"CLONE_NEWUSER","","",null,null],[17,"CLONE_NEWPID","","",null,null],[17,"CLONE_NEWNET","","",null,null],[17,"CLONE_IO","","",null,null],[17,"CLONE_NEWCGROUP","","",null,null],[17,"WNOHANG","","",null,null],[17,"WUNTRACED","","",null,null],[17,"WSTOPPED","","",null,null],[17,"WEXITED","","",null,null],[17,"WCONTINUED","","",null,null],[17,"WNOWAIT","","",null,null],[17,"PTRACE_O_TRACESYSGOOD","","",null,null],[17,"PTRACE_O_TRACEFORK","","",null,null],[17,"PTRACE_O_TRACEVFORK","","",null,null],[17,"PTRACE_O_TRACECLONE","","",null,null],[17,"PTRACE_O_TRACEEXEC","","",null,null],[17,"PTRACE_O_TRACEVFORKDONE","","",null,null],[17,"PTRACE_O_TRACEEXIT","","",null,null],[17,"PTRACE_O_TRACESECCOMP","","",null,null],[17,"PTRACE_O_EXITKILL","","",null,null],[17,"PTRACE_O_SUSPEND_SECCOMP","","",null,null],[17,"PTRACE_O_MASK","","",null,null],[17,"PTRACE_EVENT_FORK","","",null,null],[17,"PTRACE_EVENT_VFORK","","",null,null],[17,"PTRACE_EVENT_CLONE","","",null,null],[17,"PTRACE_EVENT_EXEC","","",null,null],[17,"PTRACE_EVENT_VFORK_DONE","","",null,null],[17,"PTRACE_EVENT_EXIT","","",null,null],[17,"PTRACE_EVENT_SECCOMP","","",null,null],[17,"__WNOTHREAD","","",null,null],[17,"__WALL","","",null,null],[17,"__WCLONE","","",null,null],[17,"SPLICE_F_MOVE","","",null,null],[17,"SPLICE_F_NONBLOCK","","",null,null],[17,"SPLICE_F_MORE","","",null,null],[17,"SPLICE_F_GIFT","","",null,null],[17,"RTLD_LOCAL","","",null,null],[17,"RTLD_LAZY","","",null,null],[17,"POSIX_FADV_NORMAL","","",null,null],[17,"POSIX_FADV_RANDOM","","",null,null],[17,"POSIX_FADV_SEQUENTIAL","","",null,null],[17,"POSIX_FADV_WILLNEED","","",null,null],[17,"AT_FDCWD","","",null,null],[17,"AT_SYMLINK_NOFOLLOW","","",null,null],[17,"AT_REMOVEDIR","","",null,null],[17,"AT_SYMLINK_FOLLOW","","",null,null],[17,"AT_NO_AUTOMOUNT","","",null,null],[17,"AT_EMPTY_PATH","","",null,null],[17,"LOG_CRON","","",null,null],[17,"LOG_AUTHPRIV","","",null,null],[17,"LOG_FTP","","",null,null],[17,"LOG_PERROR","","",null,null],[17,"PIPE_BUF","","",null,null],[17,"SI_LOAD_SHIFT","","",null,null],[17,"SIGEV_SIGNAL","","",null,null],[17,"SIGEV_NONE","","",null,null],[17,"SIGEV_THREAD","","",null,null],[17,"P_ALL","","",null,null],[17,"P_PID","","",null,null],[17,"P_PGID","","",null,null],[17,"UTIME_OMIT","","",null,null],[17,"UTIME_NOW","","",null,null],[17,"POLLIN","","",null,null],[17,"POLLPRI","","",null,null],[17,"POLLOUT","","",null,null],[17,"POLLERR","","",null,null],[17,"POLLHUP","","",null,null],[17,"POLLNVAL","","",null,null],[17,"POLLRDNORM","","",null,null],[17,"POLLRDBAND","","",null,null],[17,"IPTOS_LOWDELAY","","",null,null],[17,"IPTOS_THROUGHPUT","","",null,null],[17,"IPTOS_RELIABILITY","","",null,null],[17,"IPTOS_MINCOST","","",null,null],[17,"IPTOS_PREC_NETCONTROL","","",null,null],[17,"IPTOS_PREC_INTERNETCONTROL","","",null,null],[17,"IPTOS_PREC_CRITIC_ECP","","",null,null],[17,"IPTOS_PREC_FLASHOVERRIDE","","",null,null],[17,"IPTOS_PREC_FLASH","","",null,null],[17,"IPTOS_PREC_IMMEDIATE","","",null,null],[17,"IPTOS_PREC_PRIORITY","","",null,null],[17,"IPTOS_PREC_ROUTINE","","",null,null],[17,"IPTOS_ECN_MASK","","",null,null],[17,"IPTOS_ECN_ECT1","","",null,null],[17,"IPTOS_ECN_ECT0","","",null,null],[17,"IPTOS_ECN_CE","","",null,null],[17,"IPOPT_COPY","","",null,null],[17,"IPOPT_CLASS_MASK","","",null,null],[17,"IPOPT_NUMBER_MASK","","",null,null],[17,"IPOPT_CONTROL","","",null,null],[17,"IPOPT_RESERVED1","","",null,null],[17,"IPOPT_MEASUREMENT","","",null,null],[17,"IPOPT_RESERVED2","","",null,null],[17,"IPOPT_END","","",null,null],[17,"IPOPT_NOOP","","",null,null],[17,"IPOPT_SEC","","",null,null],[17,"IPOPT_LSRR","","",null,null],[17,"IPOPT_TIMESTAMP","","",null,null],[17,"IPOPT_RR","","",null,null],[17,"IPOPT_SID","","",null,null],[17,"IPOPT_SSRR","","",null,null],[17,"IPOPT_RA","","",null,null],[17,"IPVERSION","","",null,null],[17,"MAXTTL","","",null,null],[17,"IPDEFTTL","","",null,null],[17,"IPOPT_OPTVAL","","",null,null],[17,"IPOPT_OLEN","","",null,null],[17,"IPOPT_OFFSET","","",null,null],[17,"IPOPT_MINOFF","","",null,null],[17,"MAX_IPOPTLEN","","",null,null],[17,"IPOPT_NOP","","",null,null],[17,"IPOPT_EOL","","",null,null],[17,"IPOPT_TS","","",null,null],[17,"IPOPT_TS_TSONLY","","",null,null],[17,"IPOPT_TS_TSANDADDR","","",null,null],[17,"IPOPT_TS_PRESPEC","","",null,null],[17,"ARPOP_RREQUEST","","",null,null],[17,"ARPOP_RREPLY","","",null,null],[17,"ARPOP_InREQUEST","","",null,null],[17,"ARPOP_InREPLY","","",null,null],[17,"ARPOP_NAK","","",null,null],[17,"ATF_NETMASK","","",null,null],[17,"ATF_DONTPUB","","",null,null],[17,"ARPHRD_NETROM","","",null,null],[17,"ARPHRD_ETHER","","",null,null],[17,"ARPHRD_EETHER","","",null,null],[17,"ARPHRD_AX25","","",null,null],[17,"ARPHRD_PRONET","","",null,null],[17,"ARPHRD_CHAOS","","",null,null],[17,"ARPHRD_IEEE802","","",null,null],[17,"ARPHRD_ARCNET","","",null,null],[17,"ARPHRD_APPLETLK","","",null,null],[17,"ARPHRD_DLCI","","",null,null],[17,"ARPHRD_ATM","","",null,null],[17,"ARPHRD_METRICOM","","",null,null],[17,"ARPHRD_IEEE1394","","",null,null],[17,"ARPHRD_EUI64","","",null,null],[17,"ARPHRD_INFINIBAND","","",null,null],[17,"ARPHRD_SLIP","","",null,null],[17,"ARPHRD_CSLIP","","",null,null],[17,"ARPHRD_SLIP6","","",null,null],[17,"ARPHRD_CSLIP6","","",null,null],[17,"ARPHRD_RSRVD","","",null,null],[17,"ARPHRD_ADAPT","","",null,null],[17,"ARPHRD_ROSE","","",null,null],[17,"ARPHRD_X25","","",null,null],[17,"ARPHRD_HWX25","","",null,null],[17,"ARPHRD_PPP","","",null,null],[17,"ARPHRD_CISCO","","",null,null],[17,"ARPHRD_HDLC","","",null,null],[17,"ARPHRD_LAPB","","",null,null],[17,"ARPHRD_DDCMP","","",null,null],[17,"ARPHRD_RAWHDLC","","",null,null],[17,"ARPHRD_TUNNEL","","",null,null],[17,"ARPHRD_TUNNEL6","","",null,null],[17,"ARPHRD_FRAD","","",null,null],[17,"ARPHRD_SKIP","","",null,null],[17,"ARPHRD_LOOPBACK","","",null,null],[17,"ARPHRD_LOCALTLK","","",null,null],[17,"ARPHRD_FDDI","","",null,null],[17,"ARPHRD_BIF","","",null,null],[17,"ARPHRD_SIT","","",null,null],[17,"ARPHRD_IPDDP","","",null,null],[17,"ARPHRD_IPGRE","","",null,null],[17,"ARPHRD_PIMREG","","",null,null],[17,"ARPHRD_HIPPI","","",null,null],[17,"ARPHRD_ASH","","",null,null],[17,"ARPHRD_ECONET","","",null,null],[17,"ARPHRD_IRDA","","",null,null],[17,"ARPHRD_FCPP","","",null,null],[17,"ARPHRD_FCAL","","",null,null],[17,"ARPHRD_FCPL","","",null,null],[17,"ARPHRD_FCFABRIC","","",null,null],[17,"ARPHRD_IEEE802_TR","","",null,null],[17,"ARPHRD_IEEE80211","","",null,null],[17,"ARPHRD_IEEE80211_PRISM","","",null,null],[17,"ARPHRD_IEEE80211_RADIOTAP","","",null,null],[17,"ARPHRD_IEEE802154","","",null,null],[17,"ARPHRD_VOID","","",null,null],[17,"ARPHRD_NONE","","",null,null],[17,"ABDAY_1","","",null,null],[17,"ABDAY_2","","",null,null],[17,"ABDAY_3","","",null,null],[17,"ABDAY_4","","",null,null],[17,"ABDAY_5","","",null,null],[17,"ABDAY_6","","",null,null],[17,"ABDAY_7","","",null,null],[17,"DAY_1","","",null,null],[17,"DAY_2","","",null,null],[17,"DAY_3","","",null,null],[17,"DAY_4","","",null,null],[17,"DAY_5","","",null,null],[17,"DAY_6","","",null,null],[17,"DAY_7","","",null,null],[17,"ABMON_1","","",null,null],[17,"ABMON_2","","",null,null],[17,"ABMON_3","","",null,null],[17,"ABMON_4","","",null,null],[17,"ABMON_5","","",null,null],[17,"ABMON_6","","",null,null],[17,"ABMON_7","","",null,null],[17,"ABMON_8","","",null,null],[17,"ABMON_9","","",null,null],[17,"ABMON_10","","",null,null],[17,"ABMON_11","","",null,null],[17,"ABMON_12","","",null,null],[17,"MON_1","","",null,null],[17,"MON_2","","",null,null],[17,"MON_3","","",null,null],[17,"MON_4","","",null,null],[17,"MON_5","","",null,null],[17,"MON_6","","",null,null],[17,"MON_7","","",null,null],[17,"MON_8","","",null,null],[17,"MON_9","","",null,null],[17,"MON_10","","",null,null],[17,"MON_11","","",null,null],[17,"MON_12","","",null,null],[17,"AM_STR","","",null,null],[17,"PM_STR","","",null,null],[17,"D_T_FMT","","",null,null],[17,"D_FMT","","",null,null],[17,"T_FMT","","",null,null],[17,"T_FMT_AMPM","","",null,null],[17,"ERA","","",null,null],[17,"ERA_D_FMT","","",null,null],[17,"ALT_DIGITS","","",null,null],[17,"ERA_D_T_FMT","","",null,null],[17,"ERA_T_FMT","","",null,null],[17,"CODESET","","",null,null],[17,"CRNCYSTR","","",null,null],[17,"RUSAGE_THREAD","","",null,null],[17,"RUSAGE_CHILDREN","","",null,null],[17,"RADIXCHAR","","",null,null],[17,"THOUSEP","","",null,null],[17,"YESEXPR","","",null,null],[17,"NOEXPR","","",null,null],[17,"YESSTR","","",null,null],[17,"NOSTR","","",null,null],[17,"FILENAME_MAX","","",null,null],[17,"L_tmpnam","","",null,null],[17,"_PC_LINK_MAX","","",null,null],[17,"_PC_MAX_CANON","","",null,null],[17,"_PC_MAX_INPUT","","",null,null],[17,"_PC_NAME_MAX","","",null,null],[17,"_PC_PATH_MAX","","",null,null],[17,"_PC_PIPE_BUF","","",null,null],[17,"_PC_CHOWN_RESTRICTED","","",null,null],[17,"_PC_NO_TRUNC","","",null,null],[17,"_PC_VDISABLE","","",null,null],[17,"_PC_SYNC_IO","","",null,null],[17,"_PC_ASYNC_IO","","",null,null],[17,"_PC_PRIO_IO","","",null,null],[17,"_PC_SOCK_MAXBUF","","",null,null],[17,"_PC_FILESIZEBITS","","",null,null],[17,"_PC_REC_INCR_XFER_SIZE","","",null,null],[17,"_PC_REC_MAX_XFER_SIZE","","",null,null],[17,"_PC_REC_MIN_XFER_SIZE","","",null,null],[17,"_PC_REC_XFER_ALIGN","","",null,null],[17,"_PC_ALLOC_SIZE_MIN","","",null,null],[17,"_PC_SYMLINK_MAX","","",null,null],[17,"_PC_2_SYMLINKS","","",null,null],[17,"MS_NOUSER","","",null,null],[17,"_SC_ARG_MAX","","",null,null],[17,"_SC_CHILD_MAX","","",null,null],[17,"_SC_CLK_TCK","","",null,null],[17,"_SC_NGROUPS_MAX","","",null,null],[17,"_SC_OPEN_MAX","","",null,null],[17,"_SC_STREAM_MAX","","",null,null],[17,"_SC_TZNAME_MAX","","",null,null],[17,"_SC_JOB_CONTROL","","",null,null],[17,"_SC_SAVED_IDS","","",null,null],[17,"_SC_REALTIME_SIGNALS","","",null,null],[17,"_SC_PRIORITY_SCHEDULING","","",null,null],[17,"_SC_TIMERS","","",null,null],[17,"_SC_ASYNCHRONOUS_IO","","",null,null],[17,"_SC_PRIORITIZED_IO","","",null,null],[17,"_SC_SYNCHRONIZED_IO","","",null,null],[17,"_SC_FSYNC","","",null,null],[17,"_SC_MAPPED_FILES","","",null,null],[17,"_SC_MEMLOCK","","",null,null],[17,"_SC_MEMLOCK_RANGE","","",null,null],[17,"_SC_MEMORY_PROTECTION","","",null,null],[17,"_SC_MESSAGE_PASSING","","",null,null],[17,"_SC_SEMAPHORES","","",null,null],[17,"_SC_SHARED_MEMORY_OBJECTS","","",null,null],[17,"_SC_AIO_LISTIO_MAX","","",null,null],[17,"_SC_AIO_MAX","","",null,null],[17,"_SC_AIO_PRIO_DELTA_MAX","","",null,null],[17,"_SC_DELAYTIMER_MAX","","",null,null],[17,"_SC_MQ_OPEN_MAX","","",null,null],[17,"_SC_MQ_PRIO_MAX","","",null,null],[17,"_SC_VERSION","","",null,null],[17,"_SC_PAGESIZE","","",null,null],[17,"_SC_PAGE_SIZE","","",null,null],[17,"_SC_RTSIG_MAX","","",null,null],[17,"_SC_SEM_NSEMS_MAX","","",null,null],[17,"_SC_SEM_VALUE_MAX","","",null,null],[17,"_SC_SIGQUEUE_MAX","","",null,null],[17,"_SC_TIMER_MAX","","",null,null],[17,"_SC_BC_BASE_MAX","","",null,null],[17,"_SC_BC_DIM_MAX","","",null,null],[17,"_SC_BC_SCALE_MAX","","",null,null],[17,"_SC_BC_STRING_MAX","","",null,null],[17,"_SC_COLL_WEIGHTS_MAX","","",null,null],[17,"_SC_EXPR_NEST_MAX","","",null,null],[17,"_SC_LINE_MAX","","",null,null],[17,"_SC_RE_DUP_MAX","","",null,null],[17,"_SC_2_VERSION","","",null,null],[17,"_SC_2_C_BIND","","",null,null],[17,"_SC_2_C_DEV","","",null,null],[17,"_SC_2_FORT_DEV","","",null,null],[17,"_SC_2_FORT_RUN","","",null,null],[17,"_SC_2_SW_DEV","","",null,null],[17,"_SC_2_LOCALEDEF","","",null,null],[17,"_SC_UIO_MAXIOV","","",null,null],[17,"_SC_IOV_MAX","","",null,null],[17,"_SC_THREADS","","",null,null],[17,"_SC_THREAD_SAFE_FUNCTIONS","","",null,null],[17,"_SC_GETGR_R_SIZE_MAX","","",null,null],[17,"_SC_GETPW_R_SIZE_MAX","","",null,null],[17,"_SC_LOGIN_NAME_MAX","","",null,null],[17,"_SC_TTY_NAME_MAX","","",null,null],[17,"_SC_THREAD_DESTRUCTOR_ITERATIONS","","",null,null],[17,"_SC_THREAD_KEYS_MAX","","",null,null],[17,"_SC_THREAD_STACK_MIN","","",null,null],[17,"_SC_THREAD_THREADS_MAX","","",null,null],[17,"_SC_THREAD_ATTR_STACKADDR","","",null,null],[17,"_SC_THREAD_ATTR_STACKSIZE","","",null,null],[17,"_SC_THREAD_PRIORITY_SCHEDULING","","",null,null],[17,"_SC_THREAD_PRIO_INHERIT","","",null,null],[17,"_SC_THREAD_PRIO_PROTECT","","",null,null],[17,"_SC_THREAD_PROCESS_SHARED","","",null,null],[17,"_SC_NPROCESSORS_CONF","","",null,null],[17,"_SC_NPROCESSORS_ONLN","","",null,null],[17,"_SC_PHYS_PAGES","","",null,null],[17,"_SC_AVPHYS_PAGES","","",null,null],[17,"_SC_ATEXIT_MAX","","",null,null],[17,"_SC_PASS_MAX","","",null,null],[17,"_SC_XOPEN_VERSION","","",null,null],[17,"_SC_XOPEN_XCU_VERSION","","",null,null],[17,"_SC_XOPEN_UNIX","","",null,null],[17,"_SC_XOPEN_CRYPT","","",null,null],[17,"_SC_XOPEN_ENH_I18N","","",null,null],[17,"_SC_XOPEN_SHM","","",null,null],[17,"_SC_2_CHAR_TERM","","",null,null],[17,"_SC_2_UPE","","",null,null],[17,"_SC_XOPEN_XPG2","","",null,null],[17,"_SC_XOPEN_XPG3","","",null,null],[17,"_SC_XOPEN_XPG4","","",null,null],[17,"_SC_NZERO","","",null,null],[17,"_SC_XBS5_ILP32_OFF32","","",null,null],[17,"_SC_XBS5_ILP32_OFFBIG","","",null,null],[17,"_SC_XBS5_LP64_OFF64","","",null,null],[17,"_SC_XBS5_LPBIG_OFFBIG","","",null,null],[17,"_SC_XOPEN_LEGACY","","",null,null],[17,"_SC_XOPEN_REALTIME","","",null,null],[17,"_SC_XOPEN_REALTIME_THREADS","","",null,null],[17,"_SC_ADVISORY_INFO","","",null,null],[17,"_SC_BARRIERS","","",null,null],[17,"_SC_CLOCK_SELECTION","","",null,null],[17,"_SC_CPUTIME","","",null,null],[17,"_SC_THREAD_CPUTIME","","",null,null],[17,"_SC_MONOTONIC_CLOCK","","",null,null],[17,"_SC_READER_WRITER_LOCKS","","",null,null],[17,"_SC_SPIN_LOCKS","","",null,null],[17,"_SC_REGEXP","","",null,null],[17,"_SC_SHELL","","",null,null],[17,"_SC_SPAWN","","",null,null],[17,"_SC_SPORADIC_SERVER","","",null,null],[17,"_SC_THREAD_SPORADIC_SERVER","","",null,null],[17,"_SC_TIMEOUTS","","",null,null],[17,"_SC_TYPED_MEMORY_OBJECTS","","",null,null],[17,"_SC_2_PBS","","",null,null],[17,"_SC_2_PBS_ACCOUNTING","","",null,null],[17,"_SC_2_PBS_LOCATE","","",null,null],[17,"_SC_2_PBS_MESSAGE","","",null,null],[17,"_SC_2_PBS_TRACK","","",null,null],[17,"_SC_SYMLOOP_MAX","","",null,null],[17,"_SC_STREAMS","","",null,null],[17,"_SC_2_PBS_CHECKPOINT","","",null,null],[17,"_SC_V6_ILP32_OFF32","","",null,null],[17,"_SC_V6_ILP32_OFFBIG","","",null,null],[17,"_SC_V6_LP64_OFF64","","",null,null],[17,"_SC_V6_LPBIG_OFFBIG","","",null,null],[17,"_SC_HOST_NAME_MAX","","",null,null],[17,"_SC_TRACE","","",null,null],[17,"_SC_TRACE_EVENT_FILTER","","",null,null],[17,"_SC_TRACE_INHERIT","","",null,null],[17,"_SC_TRACE_LOG","","",null,null],[17,"_SC_IPV6","","",null,null],[17,"_SC_RAW_SOCKETS","","",null,null],[17,"_SC_V7_ILP32_OFF32","","",null,null],[17,"_SC_V7_ILP32_OFFBIG","","",null,null],[17,"_SC_V7_LP64_OFF64","","",null,null],[17,"_SC_V7_LPBIG_OFFBIG","","",null,null],[17,"_SC_SS_REPL_MAX","","",null,null],[17,"_SC_TRACE_EVENT_NAME_MAX","","",null,null],[17,"_SC_TRACE_NAME_MAX","","",null,null],[17,"_SC_TRACE_SYS_MAX","","",null,null],[17,"_SC_TRACE_USER_EVENT_MAX","","",null,null],[17,"_SC_XOPEN_STREAMS","","",null,null],[17,"_SC_THREAD_ROBUST_PRIO_INHERIT","","",null,null],[17,"_SC_THREAD_ROBUST_PRIO_PROTECT","","",null,null],[17,"RLIM_SAVED_MAX","","",null,null],[17,"RLIM_SAVED_CUR","","",null,null],[17,"GLOB_ERR","","",null,null],[17,"GLOB_MARK","","",null,null],[17,"GLOB_NOSORT","","",null,null],[17,"GLOB_DOOFFS","","",null,null],[17,"GLOB_NOCHECK","","",null,null],[17,"GLOB_APPEND","","",null,null],[17,"GLOB_NOESCAPE","","",null,null],[17,"GLOB_NOSPACE","","",null,null],[17,"GLOB_ABORTED","","",null,null],[17,"GLOB_NOMATCH","","",null,null],[17,"POSIX_MADV_NORMAL","","",null,null],[17,"POSIX_MADV_RANDOM","","",null,null],[17,"POSIX_MADV_SEQUENTIAL","","",null,null],[17,"POSIX_MADV_WILLNEED","","",null,null],[17,"S_IEXEC","","",null,null],[17,"S_IWRITE","","",null,null],[17,"S_IREAD","","",null,null],[17,"F_LOCK","","",null,null],[17,"F_TEST","","",null,null],[17,"F_TLOCK","","",null,null],[17,"F_ULOCK","","",null,null],[17,"F_SEAL_FUTURE_WRITE","","",null,null],[17,"IFF_LOWER_UP","","",null,null],[17,"IFF_DORMANT","","",null,null],[17,"IFF_ECHO","","",null,null],[17,"IFA_UNSPEC","","",null,null],[17,"IFA_ADDRESS","","",null,null],[17,"IFA_LOCAL","","",null,null],[17,"IFA_LABEL","","",null,null],[17,"IFA_BROADCAST","","",null,null],[17,"IFA_ANYCAST","","",null,null],[17,"IFA_CACHEINFO","","",null,null],[17,"IFA_MULTICAST","","",null,null],[17,"IFA_F_SECONDARY","","",null,null],[17,"IFA_F_TEMPORARY","","",null,null],[17,"IFA_F_NODAD","","",null,null],[17,"IFA_F_OPTIMISTIC","","",null,null],[17,"IFA_F_DADFAILED","","",null,null],[17,"IFA_F_HOMEADDRESS","","",null,null],[17,"IFA_F_DEPRECATED","","",null,null],[17,"IFA_F_TENTATIVE","","",null,null],[17,"IFA_F_PERMANENT","","",null,null],[17,"IFLA_UNSPEC","","",null,null],[17,"IFLA_ADDRESS","","",null,null],[17,"IFLA_BROADCAST","","",null,null],[17,"IFLA_IFNAME","","",null,null],[17,"IFLA_MTU","","",null,null],[17,"IFLA_LINK","","",null,null],[17,"IFLA_QDISC","","",null,null],[17,"IFLA_STATS","","",null,null],[17,"IFLA_COST","","",null,null],[17,"IFLA_PRIORITY","","",null,null],[17,"IFLA_MASTER","","",null,null],[17,"IFLA_WIRELESS","","",null,null],[17,"IFLA_PROTINFO","","",null,null],[17,"IFLA_TXQLEN","","",null,null],[17,"IFLA_MAP","","",null,null],[17,"IFLA_WEIGHT","","",null,null],[17,"IFLA_OPERSTATE","","",null,null],[17,"IFLA_LINKMODE","","",null,null],[17,"IFLA_LINKINFO","","",null,null],[17,"IFLA_NET_NS_PID","","",null,null],[17,"IFLA_IFALIAS","","",null,null],[17,"IFLA_NUM_VF","","",null,null],[17,"IFLA_VFINFO_LIST","","",null,null],[17,"IFLA_STATS64","","",null,null],[17,"IFLA_VF_PORTS","","",null,null],[17,"IFLA_PORT_SELF","","",null,null],[17,"IFLA_AF_SPEC","","",null,null],[17,"IFLA_GROUP","","",null,null],[17,"IFLA_NET_NS_FD","","",null,null],[17,"IFLA_EXT_MASK","","",null,null],[17,"IFLA_PROMISCUITY","","",null,null],[17,"IFLA_NUM_TX_QUEUES","","",null,null],[17,"IFLA_NUM_RX_QUEUES","","",null,null],[17,"IFLA_CARRIER","","",null,null],[17,"IFLA_PHYS_PORT_ID","","",null,null],[17,"IFLA_CARRIER_CHANGES","","",null,null],[17,"IFLA_PHYS_SWITCH_ID","","",null,null],[17,"IFLA_LINK_NETNSID","","",null,null],[17,"IFLA_PHYS_PORT_NAME","","",null,null],[17,"IFLA_PROTO_DOWN","","",null,null],[17,"IFLA_INFO_UNSPEC","","",null,null],[17,"IFLA_INFO_KIND","","",null,null],[17,"IFLA_INFO_DATA","","",null,null],[17,"IFLA_INFO_XSTATS","","",null,null],[17,"IFLA_INFO_SLAVE_KIND","","",null,null],[17,"IFLA_INFO_SLAVE_DATA","","",null,null],[17,"IFF_TUN","","",null,null],[17,"IFF_TAP","","",null,null],[17,"IFF_NO_PI","","",null,null],[17,"TUN_READQ_SIZE","","",null,null],[17,"TUN_TUN_DEV","","",null,null],[17,"TUN_TAP_DEV","","",null,null],[17,"TUN_TYPE_MASK","","",null,null],[17,"IFF_ONE_QUEUE","","",null,null],[17,"IFF_VNET_HDR","","",null,null],[17,"IFF_TUN_EXCL","","",null,null],[17,"IFF_MULTI_QUEUE","","",null,null],[17,"IFF_ATTACH_QUEUE","","",null,null],[17,"IFF_DETACH_QUEUE","","",null,null],[17,"IFF_PERSIST","","",null,null],[17,"IFF_NOFILTER","","",null,null],[17,"ST_RDONLY","","",null,null],[17,"ST_NOSUID","","",null,null],[17,"ST_NODEV","","",null,null],[17,"ST_NOEXEC","","",null,null],[17,"ST_SYNCHRONOUS","","",null,null],[17,"ST_MANDLOCK","","",null,null],[17,"ST_WRITE","","",null,null],[17,"ST_APPEND","","",null,null],[17,"ST_IMMUTABLE","","",null,null],[17,"ST_NOATIME","","",null,null],[17,"ST_NODIRATIME","","",null,null],[17,"RTLD_NEXT","","",null,null],[17,"RTLD_DEFAULT","","",null,null],[17,"RTLD_NODELETE","","",null,null],[17,"RTLD_NOW","","",null,null],[17,"AT_EACCESS","","",null,null],[17,"TCP_MD5SIG","","",null,null],[17,"PTHREAD_MUTEX_INITIALIZER","","",null,null],[17,"PTHREAD_COND_INITIALIZER","","",null,null],[17,"PTHREAD_RWLOCK_INITIALIZER","","",null,null],[17,"PTHREAD_MUTEX_NORMAL","","",null,null],[17,"PTHREAD_MUTEX_RECURSIVE","","",null,null],[17,"PTHREAD_MUTEX_ERRORCHECK","","",null,null],[17,"PTHREAD_MUTEX_DEFAULT","","",null,null],[17,"PTHREAD_PROCESS_PRIVATE","","",null,null],[17,"PTHREAD_PROCESS_SHARED","","",null,null],[17,"__SIZEOF_PTHREAD_COND_T","","",null,null],[17,"RENAME_NOREPLACE","","",null,null],[17,"RENAME_EXCHANGE","","",null,null],[17,"RENAME_WHITEOUT","","",null,null],[17,"SCHED_OTHER","","",null,null],[17,"SCHED_FIFO","","",null,null],[17,"SCHED_RR","","",null,null],[17,"SCHED_BATCH","","",null,null],[17,"SCHED_IDLE","","",null,null],[17,"SCHED_RESET_ON_FORK","","",null,null],[17,"IPPROTO_HOPOPTS","","Hop-by-hop option header",null,null],[17,"IPPROTO_IGMP","","group mgmt protocol",null,null],[17,"IPPROTO_IPIP","","for compatibility",null,null],[17,"IPPROTO_EGP","","exterior gateway protocol",null,null],[17,"IPPROTO_PUP","","pup",null,null],[17,"IPPROTO_IDP","","xns idp",null,null],[17,"IPPROTO_TP","","tp-4 w/ class negotiation",null,null],[17,"IPPROTO_DCCP","","DCCP",null,null],[17,"IPPROTO_ROUTING","","IP6 routing header",null,null],[17,"IPPROTO_FRAGMENT","","IP6 fragmentation header",null,null],[17,"IPPROTO_RSVP","","resource reservation",null,null],[17,"IPPROTO_GRE","","General Routing Encap.",null,null],[17,"IPPROTO_ESP","","IP6 Encap Sec. Payload",null,null],[17,"IPPROTO_AH","","IP6 Auth Header",null,null],[17,"IPPROTO_NONE","","IP6 no next header",null,null],[17,"IPPROTO_DSTOPTS","","IP6 destination option",null,null],[17,"IPPROTO_MTP","","",null,null],[17,"IPPROTO_BEETPH","","",null,null],[17,"IPPROTO_ENCAP","","encapsulation header",null,null],[17,"IPPROTO_PIM","","Protocol indep. multicast",null,null],[17,"IPPROTO_COMP","","IP Payload Comp. Protocol",null,null],[17,"IPPROTO_SCTP","","SCTP",null,null],[17,"IPPROTO_MH","","",null,null],[17,"IPPROTO_UDPLITE","","",null,null],[17,"IPPROTO_MPLS","","",null,null],[17,"IPPROTO_RAW","","raw IP packet",null,null],[17,"IPPROTO_MAX","","",null,null],[17,"IP_MSFILTER","","",null,null],[17,"MCAST_JOIN_GROUP","","",null,null],[17,"MCAST_BLOCK_SOURCE","","",null,null],[17,"MCAST_UNBLOCK_SOURCE","","",null,null],[17,"MCAST_LEAVE_GROUP","","",null,null],[17,"MCAST_JOIN_SOURCE_GROUP","","",null,null],[17,"MCAST_LEAVE_SOURCE_GROUP","","",null,null],[17,"MCAST_MSFILTER","","",null,null],[17,"IP_MULTICAST_ALL","","",null,null],[17,"IP_UNICAST_IF","","",null,null],[17,"AF_IB","","",null,null],[17,"AF_MPLS","","",null,null],[17,"AF_NFC","","",null,null],[17,"AF_VSOCK","","",null,null],[17,"AF_XDP","","",null,null],[17,"PF_IB","","",null,null],[17,"PF_MPLS","","",null,null],[17,"PF_NFC","","",null,null],[17,"PF_VSOCK","","",null,null],[17,"PF_XDP","","",null,null],[17,"IPC_PRIVATE","","",null,null],[17,"IPC_CREAT","","",null,null],[17,"IPC_EXCL","","",null,null],[17,"IPC_NOWAIT","","",null,null],[17,"IPC_RMID","","",null,null],[17,"IPC_SET","","",null,null],[17,"IPC_STAT","","",null,null],[17,"IPC_INFO","","",null,null],[17,"MSG_STAT","","",null,null],[17,"MSG_INFO","","",null,null],[17,"MSG_NOERROR","","",null,null],[17,"MSG_EXCEPT","","",null,null],[17,"MSG_COPY","","",null,null],[17,"SHM_R","","",null,null],[17,"SHM_W","","",null,null],[17,"SHM_RDONLY","","",null,null],[17,"SHM_RND","","",null,null],[17,"SHM_REMAP","","",null,null],[17,"SHM_EXEC","","",null,null],[17,"SHM_LOCK","","",null,null],[17,"SHM_UNLOCK","","",null,null],[17,"SHM_HUGETLB","","",null,null],[17,"SHM_NORESERVE","","",null,null],[17,"EPOLLRDHUP","","",null,null],[17,"EPOLLEXCLUSIVE","","",null,null],[17,"EPOLLONESHOT","","",null,null],[17,"QFMT_VFS_OLD","","",null,null],[17,"QFMT_VFS_V0","","",null,null],[17,"QFMT_VFS_V1","","",null,null],[17,"EFD_SEMAPHORE","","",null,null],[17,"LOG_NFACILITIES","","",null,null],[17,"SEM_FAILED","","",null,null],[17,"RB_AUTOBOOT","","",null,null],[17,"RB_HALT_SYSTEM","","",null,null],[17,"RB_ENABLE_CAD","","",null,null],[17,"RB_DISABLE_CAD","","",null,null],[17,"RB_POWER_OFF","","",null,null],[17,"RB_SW_SUSPEND","","",null,null],[17,"RB_KEXEC","","",null,null],[17,"AI_PASSIVE","","",null,null],[17,"AI_CANONNAME","","",null,null],[17,"AI_NUMERICHOST","","",null,null],[17,"AI_V4MAPPED","","",null,null],[17,"AI_ALL","","",null,null],[17,"AI_ADDRCONFIG","","",null,null],[17,"AI_NUMERICSERV","","",null,null],[17,"EAI_BADFLAGS","","",null,null],[17,"EAI_NONAME","","",null,null],[17,"EAI_AGAIN","","",null,null],[17,"EAI_FAIL","","",null,null],[17,"EAI_NODATA","","",null,null],[17,"EAI_FAMILY","","",null,null],[17,"EAI_SOCKTYPE","","",null,null],[17,"EAI_SERVICE","","",null,null],[17,"EAI_MEMORY","","",null,null],[17,"EAI_SYSTEM","","",null,null],[17,"EAI_OVERFLOW","","",null,null],[17,"NI_NUMERICHOST","","",null,null],[17,"NI_NUMERICSERV","","",null,null],[17,"NI_NOFQDN","","",null,null],[17,"NI_NAMEREQD","","",null,null],[17,"NI_DGRAM","","",null,null],[17,"SYNC_FILE_RANGE_WAIT_BEFORE","","",null,null],[17,"SYNC_FILE_RANGE_WRITE","","",null,null],[17,"SYNC_FILE_RANGE_WAIT_AFTER","","",null,null],[17,"AIO_CANCELED","","",null,null],[17,"AIO_NOTCANCELED","","",null,null],[17,"AIO_ALLDONE","","",null,null],[17,"LIO_READ","","",null,null],[17,"LIO_WRITE","","",null,null],[17,"LIO_NOP","","",null,null],[17,"LIO_WAIT","","",null,null],[17,"LIO_NOWAIT","","",null,null],[17,"MREMAP_MAYMOVE","","",null,null],[17,"MREMAP_FIXED","","",null,null],[17,"PR_SET_PDEATHSIG","","",null,null],[17,"PR_GET_PDEATHSIG","","",null,null],[17,"PR_GET_DUMPABLE","","",null,null],[17,"PR_SET_DUMPABLE","","",null,null],[17,"PR_GET_UNALIGN","","",null,null],[17,"PR_SET_UNALIGN","","",null,null],[17,"PR_UNALIGN_NOPRINT","","",null,null],[17,"PR_UNALIGN_SIGBUS","","",null,null],[17,"PR_GET_KEEPCAPS","","",null,null],[17,"PR_SET_KEEPCAPS","","",null,null],[17,"PR_GET_FPEMU","","",null,null],[17,"PR_SET_FPEMU","","",null,null],[17,"PR_FPEMU_NOPRINT","","",null,null],[17,"PR_FPEMU_SIGFPE","","",null,null],[17,"PR_GET_FPEXC","","",null,null],[17,"PR_SET_FPEXC","","",null,null],[17,"PR_FP_EXC_SW_ENABLE","","",null,null],[17,"PR_FP_EXC_DIV","","",null,null],[17,"PR_FP_EXC_OVF","","",null,null],[17,"PR_FP_EXC_UND","","",null,null],[17,"PR_FP_EXC_RES","","",null,null],[17,"PR_FP_EXC_INV","","",null,null],[17,"PR_FP_EXC_DISABLED","","",null,null],[17,"PR_FP_EXC_NONRECOV","","",null,null],[17,"PR_FP_EXC_ASYNC","","",null,null],[17,"PR_FP_EXC_PRECISE","","",null,null],[17,"PR_GET_TIMING","","",null,null],[17,"PR_SET_TIMING","","",null,null],[17,"PR_TIMING_STATISTICAL","","",null,null],[17,"PR_TIMING_TIMESTAMP","","",null,null],[17,"PR_SET_NAME","","",null,null],[17,"PR_GET_NAME","","",null,null],[17,"PR_GET_ENDIAN","","",null,null],[17,"PR_SET_ENDIAN","","",null,null],[17,"PR_ENDIAN_BIG","","",null,null],[17,"PR_ENDIAN_LITTLE","","",null,null],[17,"PR_ENDIAN_PPC_LITTLE","","",null,null],[17,"PR_GET_SECCOMP","","",null,null],[17,"PR_SET_SECCOMP","","",null,null],[17,"PR_CAPBSET_READ","","",null,null],[17,"PR_CAPBSET_DROP","","",null,null],[17,"PR_GET_TSC","","",null,null],[17,"PR_SET_TSC","","",null,null],[17,"PR_TSC_ENABLE","","",null,null],[17,"PR_TSC_SIGSEGV","","",null,null],[17,"PR_GET_SECUREBITS","","",null,null],[17,"PR_SET_SECUREBITS","","",null,null],[17,"PR_SET_TIMERSLACK","","",null,null],[17,"PR_GET_TIMERSLACK","","",null,null],[17,"PR_TASK_PERF_EVENTS_DISABLE","","",null,null],[17,"PR_TASK_PERF_EVENTS_ENABLE","","",null,null],[17,"PR_MCE_KILL","","",null,null],[17,"PR_MCE_KILL_CLEAR","","",null,null],[17,"PR_MCE_KILL_SET","","",null,null],[17,"PR_MCE_KILL_LATE","","",null,null],[17,"PR_MCE_KILL_EARLY","","",null,null],[17,"PR_MCE_KILL_DEFAULT","","",null,null],[17,"PR_MCE_KILL_GET","","",null,null],[17,"PR_SET_MM","","",null,null],[17,"PR_SET_MM_START_CODE","","",null,null],[17,"PR_SET_MM_END_CODE","","",null,null],[17,"PR_SET_MM_START_DATA","","",null,null],[17,"PR_SET_MM_END_DATA","","",null,null],[17,"PR_SET_MM_START_STACK","","",null,null],[17,"PR_SET_MM_START_BRK","","",null,null],[17,"PR_SET_MM_BRK","","",null,null],[17,"PR_SET_MM_ARG_START","","",null,null],[17,"PR_SET_MM_ARG_END","","",null,null],[17,"PR_SET_MM_ENV_START","","",null,null],[17,"PR_SET_MM_ENV_END","","",null,null],[17,"PR_SET_MM_AUXV","","",null,null],[17,"PR_SET_MM_EXE_FILE","","",null,null],[17,"PR_SET_MM_MAP","","",null,null],[17,"PR_SET_MM_MAP_SIZE","","",null,null],[17,"PR_SET_PTRACER","","",null,null],[17,"PR_SET_CHILD_SUBREAPER","","",null,null],[17,"PR_GET_CHILD_SUBREAPER","","",null,null],[17,"PR_SET_NO_NEW_PRIVS","","",null,null],[17,"PR_GET_NO_NEW_PRIVS","","",null,null],[17,"PR_GET_TID_ADDRESS","","",null,null],[17,"PR_SET_THP_DISABLE","","",null,null],[17,"PR_GET_THP_DISABLE","","",null,null],[17,"PR_MPX_ENABLE_MANAGEMENT","","",null,null],[17,"PR_MPX_DISABLE_MANAGEMENT","","",null,null],[17,"PR_SET_FP_MODE","","",null,null],[17,"PR_GET_FP_MODE","","",null,null],[17,"PR_FP_MODE_FR","","",null,null],[17,"PR_FP_MODE_FRE","","",null,null],[17,"PR_CAP_AMBIENT","","",null,null],[17,"PR_CAP_AMBIENT_IS_SET","","",null,null],[17,"PR_CAP_AMBIENT_RAISE","","",null,null],[17,"PR_CAP_AMBIENT_LOWER","","",null,null],[17,"PR_CAP_AMBIENT_CLEAR_ALL","","",null,null],[17,"GRND_NONBLOCK","","",null,null],[17,"GRND_RANDOM","","",null,null],[17,"SECCOMP_MODE_DISABLED","","",null,null],[17,"SECCOMP_MODE_STRICT","","",null,null],[17,"SECCOMP_MODE_FILTER","","",null,null],[17,"ITIMER_REAL","","",null,null],[17,"ITIMER_VIRTUAL","","",null,null],[17,"ITIMER_PROF","","",null,null],[17,"TFD_CLOEXEC","","",null,null],[17,"TFD_NONBLOCK","","",null,null],[17,"TFD_TIMER_ABSTIME","","",null,null],[17,"XATTR_CREATE","","",null,null],[17,"XATTR_REPLACE","","",null,null],[17,"_POSIX_VDISABLE","","",null,null],[17,"FALLOC_FL_KEEP_SIZE","","",null,null],[17,"FALLOC_FL_PUNCH_HOLE","","",null,null],[17,"FALLOC_FL_COLLAPSE_RANGE","","",null,null],[17,"FALLOC_FL_ZERO_RANGE","","",null,null],[17,"FALLOC_FL_INSERT_RANGE","","",null,null],[17,"FALLOC_FL_UNSHARE_RANGE","","",null,null],[17,"ENOATTR","","",null,null],[17,"SO_ORIGINAL_DST","","",null,null],[17,"IP_ORIGDSTADDR","","",null,null],[17,"IP_RECVORIGDSTADDR","","",null,null],[17,"IPV6_FLOWINFO","","",null,null],[17,"IPV6_ORIGDSTADDR","","",null,null],[17,"IPV6_RECVORIGDSTADDR","","",null,null],[17,"IPV6_FLOWLABEL_MGR","","",null,null],[17,"IPV6_FLOWINFO_SEND","","",null,null],[17,"IPV6_FLOWINFO_FLOWLABEL","","",null,null],[17,"IPV6_FLOWINFO_PRIORITY","","",null,null],[17,"IUTF8","","",null,null],[17,"CMSPAR","","",null,null],[17,"MFD_CLOEXEC","","",null,null],[17,"MFD_ALLOW_SEALING","","",null,null],[17,"MFD_HUGETLB","","",null,null],[17,"PT_NULL","","",null,null],[17,"PT_LOAD","","",null,null],[17,"PT_DYNAMIC","","",null,null],[17,"PT_INTERP","","",null,null],[17,"PT_NOTE","","",null,null],[17,"PT_SHLIB","","",null,null],[17,"PT_PHDR","","",null,null],[17,"PT_TLS","","",null,null],[17,"PT_NUM","","",null,null],[17,"PT_LOOS","","",null,null],[17,"PT_GNU_EH_FRAME","","",null,null],[17,"PT_GNU_STACK","","",null,null],[17,"PT_GNU_RELRO","","",null,null],[17,"ETH_ALEN","","",null,null],[17,"ETH_HLEN","","",null,null],[17,"ETH_ZLEN","","",null,null],[17,"ETH_DATA_LEN","","",null,null],[17,"ETH_FRAME_LEN","","",null,null],[17,"ETH_FCS_LEN","","",null,null],[17,"ETH_P_LOOP","","",null,null],[17,"ETH_P_PUP","","",null,null],[17,"ETH_P_PUPAT","","",null,null],[17,"ETH_P_IP","","",null,null],[17,"ETH_P_X25","","",null,null],[17,"ETH_P_ARP","","",null,null],[17,"ETH_P_BPQ","","",null,null],[17,"ETH_P_IEEEPUP","","",null,null],[17,"ETH_P_IEEEPUPAT","","",null,null],[17,"ETH_P_BATMAN","","",null,null],[17,"ETH_P_DEC","","",null,null],[17,"ETH_P_DNA_DL","","",null,null],[17,"ETH_P_DNA_RC","","",null,null],[17,"ETH_P_DNA_RT","","",null,null],[17,"ETH_P_LAT","","",null,null],[17,"ETH_P_DIAG","","",null,null],[17,"ETH_P_CUST","","",null,null],[17,"ETH_P_SCA","","",null,null],[17,"ETH_P_TEB","","",null,null],[17,"ETH_P_RARP","","",null,null],[17,"ETH_P_ATALK","","",null,null],[17,"ETH_P_AARP","","",null,null],[17,"ETH_P_8021Q","","",null,null],[17,"ETH_P_IPX","","",null,null],[17,"ETH_P_IPV6","","",null,null],[17,"ETH_P_PAUSE","","",null,null],[17,"ETH_P_SLOW","","",null,null],[17,"ETH_P_WCCP","","",null,null],[17,"ETH_P_MPLS_UC","","",null,null],[17,"ETH_P_MPLS_MC","","",null,null],[17,"ETH_P_ATMMPOA","","",null,null],[17,"ETH_P_PPP_DISC","","",null,null],[17,"ETH_P_PPP_SES","","",null,null],[17,"ETH_P_LINK_CTL","","",null,null],[17,"ETH_P_ATMFATE","","",null,null],[17,"ETH_P_PAE","","",null,null],[17,"ETH_P_AOE","","",null,null],[17,"ETH_P_8021AD","","",null,null],[17,"ETH_P_802_EX1","","",null,null],[17,"ETH_P_TIPC","","",null,null],[17,"ETH_P_MACSEC","","",null,null],[17,"ETH_P_8021AH","","",null,null],[17,"ETH_P_MVRP","","",null,null],[17,"ETH_P_1588","","",null,null],[17,"ETH_P_PRP","","",null,null],[17,"ETH_P_FCOE","","",null,null],[17,"ETH_P_TDLS","","",null,null],[17,"ETH_P_FIP","","",null,null],[17,"ETH_P_80221","","",null,null],[17,"ETH_P_LOOPBACK","","",null,null],[17,"ETH_P_QINQ1","","",null,null],[17,"ETH_P_QINQ2","","",null,null],[17,"ETH_P_QINQ3","","",null,null],[17,"ETH_P_EDSA","","",null,null],[17,"ETH_P_AF_IUCV","","",null,null],[17,"ETH_P_802_3_MIN","","",null,null],[17,"ETH_P_802_3","","",null,null],[17,"ETH_P_AX25","","",null,null],[17,"ETH_P_ALL","","",null,null],[17,"ETH_P_802_2","","",null,null],[17,"ETH_P_SNAP","","",null,null],[17,"ETH_P_DDCMP","","",null,null],[17,"ETH_P_WAN_PPP","","",null,null],[17,"ETH_P_PPP_MP","","",null,null],[17,"ETH_P_LOCALTALK","","",null,null],[17,"ETH_P_CANFD","","",null,null],[17,"ETH_P_PPPTALK","","",null,null],[17,"ETH_P_TR_802_2","","",null,null],[17,"ETH_P_MOBITEX","","",null,null],[17,"ETH_P_CONTROL","","",null,null],[17,"ETH_P_IRDA","","",null,null],[17,"ETH_P_ECONET","","",null,null],[17,"ETH_P_HDLC","","",null,null],[17,"ETH_P_ARCNET","","",null,null],[17,"ETH_P_DSA","","",null,null],[17,"ETH_P_TRAILER","","",null,null],[17,"ETH_P_PHONET","","",null,null],[17,"ETH_P_IEEE802154","","",null,null],[17,"ETH_P_CAIF","","",null,null],[17,"POSIX_SPAWN_RESETIDS","","",null,null],[17,"POSIX_SPAWN_SETPGROUP","","",null,null],[17,"POSIX_SPAWN_SETSIGDEF","","",null,null],[17,"POSIX_SPAWN_SETSIGMASK","","",null,null],[17,"POSIX_SPAWN_SETSCHEDPARAM","","",null,null],[17,"POSIX_SPAWN_SETSCHEDULER","","",null,null],[17,"NLMSG_NOOP","","",null,null],[17,"NLMSG_ERROR","","",null,null],[17,"NLMSG_DONE","","",null,null],[17,"NLMSG_OVERRUN","","",null,null],[17,"NLMSG_MIN_TYPE","","",null,null],[17,"NFNLGRP_NONE","","",null,null],[17,"NFNLGRP_CONNTRACK_NEW","","",null,null],[17,"NFNLGRP_CONNTRACK_UPDATE","","",null,null],[17,"NFNLGRP_CONNTRACK_DESTROY","","",null,null],[17,"NFNLGRP_CONNTRACK_EXP_NEW","","",null,null],[17,"NFNLGRP_CONNTRACK_EXP_UPDATE","","",null,null],[17,"NFNLGRP_CONNTRACK_EXP_DESTROY","","",null,null],[17,"NFNLGRP_NFTABLES","","",null,null],[17,"NFNLGRP_ACCT_QUOTA","","",null,null],[17,"NFNETLINK_V0","","",null,null],[17,"NFNL_SUBSYS_NONE","","",null,null],[17,"NFNL_SUBSYS_CTNETLINK","","",null,null],[17,"NFNL_SUBSYS_CTNETLINK_EXP","","",null,null],[17,"NFNL_SUBSYS_QUEUE","","",null,null],[17,"NFNL_SUBSYS_ULOG","","",null,null],[17,"NFNL_SUBSYS_OSF","","",null,null],[17,"NFNL_SUBSYS_IPSET","","",null,null],[17,"NFNL_SUBSYS_ACCT","","",null,null],[17,"NFNL_SUBSYS_CTNETLINK_TIMEOUT","","",null,null],[17,"NFNL_SUBSYS_CTHELPER","","",null,null],[17,"NFNL_SUBSYS_NFTABLES","","",null,null],[17,"NFNL_SUBSYS_NFT_COMPAT","","",null,null],[17,"NFNL_SUBSYS_COUNT","","",null,null],[17,"NFNL_MSG_BATCH_BEGIN","","",null,null],[17,"NFNL_MSG_BATCH_END","","",null,null],[17,"NFULNL_MSG_PACKET","","",null,null],[17,"NFULNL_MSG_CONFIG","","",null,null],[17,"NFULA_UNSPEC","","",null,null],[17,"NFULA_PACKET_HDR","","",null,null],[17,"NFULA_MARK","","",null,null],[17,"NFULA_TIMESTAMP","","",null,null],[17,"NFULA_IFINDEX_INDEV","","",null,null],[17,"NFULA_IFINDEX_OUTDEV","","",null,null],[17,"NFULA_IFINDEX_PHYSINDEV","","",null,null],[17,"NFULA_IFINDEX_PHYSOUTDEV","","",null,null],[17,"NFULA_HWADDR","","",null,null],[17,"NFULA_PAYLOAD","","",null,null],[17,"NFULA_PREFIX","","",null,null],[17,"NFULA_UID","","",null,null],[17,"NFULA_SEQ","","",null,null],[17,"NFULA_SEQ_GLOBAL","","",null,null],[17,"NFULA_GID","","",null,null],[17,"NFULA_HWTYPE","","",null,null],[17,"NFULA_HWHEADER","","",null,null],[17,"NFULA_HWLEN","","",null,null],[17,"NFULA_CT","","",null,null],[17,"NFULA_CT_INFO","","",null,null],[17,"NFULNL_CFG_CMD_NONE","","",null,null],[17,"NFULNL_CFG_CMD_BIND","","",null,null],[17,"NFULNL_CFG_CMD_UNBIND","","",null,null],[17,"NFULNL_CFG_CMD_PF_BIND","","",null,null],[17,"NFULNL_CFG_CMD_PF_UNBIND","","",null,null],[17,"NFULA_CFG_UNSPEC","","",null,null],[17,"NFULA_CFG_CMD","","",null,null],[17,"NFULA_CFG_MODE","","",null,null],[17,"NFULA_CFG_NLBUFSIZ","","",null,null],[17,"NFULA_CFG_TIMEOUT","","",null,null],[17,"NFULA_CFG_QTHRESH","","",null,null],[17,"NFULA_CFG_FLAGS","","",null,null],[17,"NFULNL_COPY_NONE","","",null,null],[17,"NFULNL_COPY_META","","",null,null],[17,"NFULNL_COPY_PACKET","","",null,null],[17,"NFULNL_CFG_F_SEQ","","",null,null],[17,"NFULNL_CFG_F_SEQ_GLOBAL","","",null,null],[17,"NFULNL_CFG_F_CONNTRACK","","",null,null],[17,"NFQNL_MSG_PACKET","","",null,null],[17,"NFQNL_MSG_VERDICT","","",null,null],[17,"NFQNL_MSG_CONFIG","","",null,null],[17,"NFQNL_MSG_VERDICT_BATCH","","",null,null],[17,"NFQA_UNSPEC","","",null,null],[17,"NFQA_PACKET_HDR","","",null,null],[17,"NFQA_VERDICT_HDR","","",null,null],[17,"NFQA_MARK","","",null,null],[17,"NFQA_TIMESTAMP","","",null,null],[17,"NFQA_IFINDEX_INDEV","","",null,null],[17,"NFQA_IFINDEX_OUTDEV","","",null,null],[17,"NFQA_IFINDEX_PHYSINDEV","","",null,null],[17,"NFQA_IFINDEX_PHYSOUTDEV","","",null,null],[17,"NFQA_HWADDR","","",null,null],[17,"NFQA_PAYLOAD","","",null,null],[17,"NFQA_CT","","",null,null],[17,"NFQA_CT_INFO","","",null,null],[17,"NFQA_CAP_LEN","","",null,null],[17,"NFQA_SKB_INFO","","",null,null],[17,"NFQA_EXP","","",null,null],[17,"NFQA_UID","","",null,null],[17,"NFQA_GID","","",null,null],[17,"NFQA_SECCTX","","",null,null],[17,"NFQNL_CFG_CMD_NONE","","",null,null],[17,"NFQNL_CFG_CMD_BIND","","",null,null],[17,"NFQNL_CFG_CMD_UNBIND","","",null,null],[17,"NFQNL_CFG_CMD_PF_BIND","","",null,null],[17,"NFQNL_CFG_CMD_PF_UNBIND","","",null,null],[17,"NFQNL_COPY_NONE","","",null,null],[17,"NFQNL_COPY_META","","",null,null],[17,"NFQNL_COPY_PACKET","","",null,null],[17,"NFQA_CFG_UNSPEC","","",null,null],[17,"NFQA_CFG_CMD","","",null,null],[17,"NFQA_CFG_PARAMS","","",null,null],[17,"NFQA_CFG_QUEUE_MAXLEN","","",null,null],[17,"NFQA_CFG_MASK","","",null,null],[17,"NFQA_CFG_FLAGS","","",null,null],[17,"NFQA_CFG_F_FAIL_OPEN","","",null,null],[17,"NFQA_CFG_F_CONNTRACK","","",null,null],[17,"NFQA_CFG_F_GSO","","",null,null],[17,"NFQA_CFG_F_UID_GID","","",null,null],[17,"NFQA_CFG_F_SECCTX","","",null,null],[17,"NFQA_CFG_F_MAX","","",null,null],[17,"NFQA_SKB_CSUMNOTREADY","","",null,null],[17,"NFQA_SKB_GSO","","",null,null],[17,"NFQA_SKB_CSUM_NOTVERIFIED","","",null,null],[17,"GENL_NAMSIZ","","",null,null],[17,"GENL_MIN_ID","","",null,null],[17,"GENL_MAX_ID","","",null,null],[17,"GENL_ADMIN_PERM","","",null,null],[17,"GENL_CMD_CAP_DO","","",null,null],[17,"GENL_CMD_CAP_DUMP","","",null,null],[17,"GENL_CMD_CAP_HASPOL","","",null,null],[17,"GENL_ID_CTRL","","",null,null],[17,"CTRL_CMD_UNSPEC","","",null,null],[17,"CTRL_CMD_NEWFAMILY","","",null,null],[17,"CTRL_CMD_DELFAMILY","","",null,null],[17,"CTRL_CMD_GETFAMILY","","",null,null],[17,"CTRL_CMD_NEWOPS","","",null,null],[17,"CTRL_CMD_DELOPS","","",null,null],[17,"CTRL_CMD_GETOPS","","",null,null],[17,"CTRL_CMD_NEWMCAST_GRP","","",null,null],[17,"CTRL_CMD_DELMCAST_GRP","","",null,null],[17,"CTRL_CMD_GETMCAST_GRP","","",null,null],[17,"CTRL_ATTR_UNSPEC","","",null,null],[17,"CTRL_ATTR_FAMILY_ID","","",null,null],[17,"CTRL_ATTR_FAMILY_NAME","","",null,null],[17,"CTRL_ATTR_VERSION","","",null,null],[17,"CTRL_ATTR_HDRSIZE","","",null,null],[17,"CTRL_ATTR_MAXATTR","","",null,null],[17,"CTRL_ATTR_OPS","","",null,null],[17,"CTRL_ATTR_MCAST_GROUPS","","",null,null],[17,"CTRL_ATTR_OP_UNSPEC","","",null,null],[17,"CTRL_ATTR_OP_ID","","",null,null],[17,"CTRL_ATTR_OP_FLAGS","","",null,null],[17,"CTRL_ATTR_MCAST_GRP_UNSPEC","","",null,null],[17,"CTRL_ATTR_MCAST_GRP_NAME","","",null,null],[17,"CTRL_ATTR_MCAST_GRP_ID","","",null,null],[17,"PACKET_ADD_MEMBERSHIP","","",null,null],[17,"PACKET_DROP_MEMBERSHIP","","",null,null],[17,"PACKET_MR_MULTICAST","","",null,null],[17,"PACKET_MR_PROMISC","","",null,null],[17,"PACKET_MR_ALLMULTI","","",null,null],[17,"PACKET_MR_UNICAST","","",null,null],[17,"NF_DROP","","",null,null],[17,"NF_ACCEPT","","",null,null],[17,"NF_STOLEN","","",null,null],[17,"NF_QUEUE","","",null,null],[17,"NF_REPEAT","","",null,null],[17,"NF_STOP","","",null,null],[17,"NF_MAX_VERDICT","","",null,null],[17,"NF_VERDICT_MASK","","",null,null],[17,"NF_VERDICT_FLAG_QUEUE_BYPASS","","",null,null],[17,"NF_VERDICT_QMASK","","",null,null],[17,"NF_VERDICT_QBITS","","",null,null],[17,"NF_VERDICT_BITS","","",null,null],[17,"NF_INET_PRE_ROUTING","","",null,null],[17,"NF_INET_LOCAL_IN","","",null,null],[17,"NF_INET_FORWARD","","",null,null],[17,"NF_INET_LOCAL_OUT","","",null,null],[17,"NF_INET_POST_ROUTING","","",null,null],[17,"NF_INET_NUMHOOKS","","",null,null],[17,"NFPROTO_UNSPEC","","",null,null],[17,"NFPROTO_IPV4","","",null,null],[17,"NFPROTO_ARP","","",null,null],[17,"NFPROTO_BRIDGE","","",null,null],[17,"NFPROTO_IPV6","","",null,null],[17,"NFPROTO_DECNET","","",null,null],[17,"NFPROTO_NUMPROTO","","",null,null],[17,"NF_IP_PRE_ROUTING","","",null,null],[17,"NF_IP_LOCAL_IN","","",null,null],[17,"NF_IP_FORWARD","","",null,null],[17,"NF_IP_LOCAL_OUT","","",null,null],[17,"NF_IP_POST_ROUTING","","",null,null],[17,"NF_IP_NUMHOOKS","","",null,null],[17,"NF_IP_PRI_FIRST","","",null,null],[17,"NF_IP_PRI_CONNTRACK_DEFRAG","","",null,null],[17,"NF_IP_PRI_RAW","","",null,null],[17,"NF_IP_PRI_SELINUX_FIRST","","",null,null],[17,"NF_IP_PRI_CONNTRACK","","",null,null],[17,"NF_IP_PRI_MANGLE","","",null,null],[17,"NF_IP_PRI_NAT_DST","","",null,null],[17,"NF_IP_PRI_FILTER","","",null,null],[17,"NF_IP_PRI_SECURITY","","",null,null],[17,"NF_IP_PRI_NAT_SRC","","",null,null],[17,"NF_IP_PRI_SELINUX_LAST","","",null,null],[17,"NF_IP_PRI_CONNTRACK_HELPER","","",null,null],[17,"NF_IP_PRI_CONNTRACK_CONFIRM","","",null,null],[17,"NF_IP_PRI_LAST","","",null,null],[17,"NF_IP6_PRE_ROUTING","","",null,null],[17,"NF_IP6_LOCAL_IN","","",null,null],[17,"NF_IP6_FORWARD","","",null,null],[17,"NF_IP6_LOCAL_OUT","","",null,null],[17,"NF_IP6_POST_ROUTING","","",null,null],[17,"NF_IP6_NUMHOOKS","","",null,null],[17,"NF_IP6_PRI_FIRST","","",null,null],[17,"NF_IP6_PRI_CONNTRACK_DEFRAG","","",null,null],[17,"NF_IP6_PRI_RAW","","",null,null],[17,"NF_IP6_PRI_SELINUX_FIRST","","",null,null],[17,"NF_IP6_PRI_CONNTRACK","","",null,null],[17,"NF_IP6_PRI_MANGLE","","",null,null],[17,"NF_IP6_PRI_NAT_DST","","",null,null],[17,"NF_IP6_PRI_FILTER","","",null,null],[17,"NF_IP6_PRI_SECURITY","","",null,null],[17,"NF_IP6_PRI_NAT_SRC","","",null,null],[17,"NF_IP6_PRI_SELINUX_LAST","","",null,null],[17,"NF_IP6_PRI_CONNTRACK_HELPER","","",null,null],[17,"NF_IP6_PRI_LAST","","",null,null],[17,"IP6T_SO_ORIGINAL_DST","","",null,null],[17,"SIOCADDRT","","",null,null],[17,"SIOCDELRT","","",null,null],[17,"SIOCGIFNAME","","",null,null],[17,"SIOCSIFLINK","","",null,null],[17,"SIOCGIFCONF","","",null,null],[17,"SIOCGIFFLAGS","","",null,null],[17,"SIOCSIFFLAGS","","",null,null],[17,"SIOCGIFADDR","","",null,null],[17,"SIOCSIFADDR","","",null,null],[17,"SIOCGIFDSTADDR","","",null,null],[17,"SIOCSIFDSTADDR","","",null,null],[17,"SIOCGIFBRDADDR","","",null,null],[17,"SIOCSIFBRDADDR","","",null,null],[17,"SIOCGIFNETMASK","","",null,null],[17,"SIOCSIFNETMASK","","",null,null],[17,"SIOCGIFMETRIC","","",null,null],[17,"SIOCSIFMETRIC","","",null,null],[17,"SIOCGIFMEM","","",null,null],[17,"SIOCSIFMEM","","",null,null],[17,"SIOCGIFMTU","","",null,null],[17,"SIOCSIFMTU","","",null,null],[17,"SIOCSIFHWADDR","","",null,null],[17,"SIOCGIFENCAP","","",null,null],[17,"SIOCSIFENCAP","","",null,null],[17,"SIOCGIFHWADDR","","",null,null],[17,"SIOCGIFSLAVE","","",null,null],[17,"SIOCSIFSLAVE","","",null,null],[17,"SIOCADDMULTI","","",null,null],[17,"SIOCDELMULTI","","",null,null],[17,"SIOCDARP","","",null,null],[17,"SIOCGARP","","",null,null],[17,"SIOCSARP","","",null,null],[17,"SIOCDRARP","","",null,null],[17,"SIOCGRARP","","",null,null],[17,"SIOCSRARP","","",null,null],[17,"SIOCGIFMAP","","",null,null],[17,"SIOCSIFMAP","","",null,null],[17,"IPTOS_TOS_MASK","","",null,null],[17,"IPTOS_PREC_MASK","","",null,null],[17,"IPTOS_ECN_NOT_ECT","","",null,null],[17,"RTF_UP","","",null,null],[17,"RTF_GATEWAY","","",null,null],[17,"RTF_HOST","","",null,null],[17,"RTF_REINSTATE","","",null,null],[17,"RTF_DYNAMIC","","",null,null],[17,"RTF_MODIFIED","","",null,null],[17,"RTF_MTU","","",null,null],[17,"RTF_MSS","","",null,null],[17,"RTF_WINDOW","","",null,null],[17,"RTF_IRTT","","",null,null],[17,"RTF_REJECT","","",null,null],[17,"RTF_STATIC","","",null,null],[17,"RTF_XRESOLVE","","",null,null],[17,"RTF_NOFORWARD","","",null,null],[17,"RTF_THROW","","",null,null],[17,"RTF_NOPMTUDISC","","",null,null],[17,"RTF_DEFAULT","","",null,null],[17,"RTF_ALLONLINK","","",null,null],[17,"RTF_ADDRCONF","","",null,null],[17,"RTF_LINKRT","","",null,null],[17,"RTF_NONEXTHOP","","",null,null],[17,"RTF_CACHE","","",null,null],[17,"RTF_FLOW","","",null,null],[17,"RTF_POLICY","","",null,null],[17,"RTCF_VALVE","","",null,null],[17,"RTCF_MASQ","","",null,null],[17,"RTCF_NAT","","",null,null],[17,"RTCF_DOREDIRECT","","",null,null],[17,"RTCF_LOG","","",null,null],[17,"RTCF_DIRECTSRC","","",null,null],[17,"RTF_LOCAL","","",null,null],[17,"RTF_INTERFACE","","",null,null],[17,"RTF_MULTICAST","","",null,null],[17,"RTF_BROADCAST","","",null,null],[17,"RTF_NAT","","",null,null],[17,"RTF_ADDRCLASSMASK","","",null,null],[17,"RT_CLASS_UNSPEC","","",null,null],[17,"RT_CLASS_DEFAULT","","",null,null],[17,"RT_CLASS_MAIN","","",null,null],[17,"RT_CLASS_LOCAL","","",null,null],[17,"RT_CLASS_MAX","","",null,null],[17,"NUD_NONE","","",null,null],[17,"NUD_INCOMPLETE","","",null,null],[17,"NUD_REACHABLE","","",null,null],[17,"NUD_STALE","","",null,null],[17,"NUD_DELAY","","",null,null],[17,"NUD_PROBE","","",null,null],[17,"NUD_FAILED","","",null,null],[17,"NUD_NOARP","","",null,null],[17,"NUD_PERMANENT","","",null,null],[17,"NTF_USE","","",null,null],[17,"NTF_SELF","","",null,null],[17,"NTF_MASTER","","",null,null],[17,"NTF_PROXY","","",null,null],[17,"NTF_ROUTER","","",null,null],[17,"NDA_UNSPEC","","",null,null],[17,"NDA_DST","","",null,null],[17,"NDA_LLADDR","","",null,null],[17,"NDA_CACHEINFO","","",null,null],[17,"NDA_PROBES","","",null,null],[17,"NDA_VLAN","","",null,null],[17,"NDA_PORT","","",null,null],[17,"NDA_VNI","","",null,null],[17,"NDA_IFINDEX","","",null,null],[17,"NLA_ALIGNTO","","",null,null],[17,"NETLINK_ROUTE","","",null,null],[17,"NETLINK_UNUSED","","",null,null],[17,"NETLINK_USERSOCK","","",null,null],[17,"NETLINK_FIREWALL","","",null,null],[17,"NETLINK_SOCK_DIAG","","",null,null],[17,"NETLINK_NFLOG","","",null,null],[17,"NETLINK_XFRM","","",null,null],[17,"NETLINK_SELINUX","","",null,null],[17,"NETLINK_ISCSI","","",null,null],[17,"NETLINK_AUDIT","","",null,null],[17,"NETLINK_FIB_LOOKUP","","",null,null],[17,"NETLINK_CONNECTOR","","",null,null],[17,"NETLINK_NETFILTER","","",null,null],[17,"NETLINK_IP6_FW","","",null,null],[17,"NETLINK_DNRTMSG","","",null,null],[17,"NETLINK_KOBJECT_UEVENT","","",null,null],[17,"NETLINK_GENERIC","","",null,null],[17,"NETLINK_SCSITRANSPORT","","",null,null],[17,"NETLINK_ECRYPTFS","","",null,null],[17,"NETLINK_RDMA","","",null,null],[17,"NETLINK_CRYPTO","","",null,null],[17,"NETLINK_INET_DIAG","","",null,null],[17,"NLM_F_REQUEST","","",null,null],[17,"NLM_F_MULTI","","",null,null],[17,"NLM_F_ACK","","",null,null],[17,"NLM_F_ECHO","","",null,null],[17,"NLM_F_DUMP_INTR","","",null,null],[17,"NLM_F_DUMP_FILTERED","","",null,null],[17,"NLM_F_ROOT","","",null,null],[17,"NLM_F_MATCH","","",null,null],[17,"NLM_F_ATOMIC","","",null,null],[17,"NLM_F_DUMP","","",null,null],[17,"NLM_F_REPLACE","","",null,null],[17,"NLM_F_EXCL","","",null,null],[17,"NLM_F_CREATE","","",null,null],[17,"NLM_F_APPEND","","",null,null],[17,"NETLINK_ADD_MEMBERSHIP","","",null,null],[17,"NETLINK_DROP_MEMBERSHIP","","",null,null],[17,"NETLINK_PKTINFO","","",null,null],[17,"NETLINK_BROADCAST_ERROR","","",null,null],[17,"NETLINK_NO_ENOBUFS","","",null,null],[17,"NETLINK_RX_RING","","",null,null],[17,"NETLINK_TX_RING","","",null,null],[17,"NETLINK_LISTEN_ALL_NSID","","",null,null],[17,"NETLINK_LIST_MEMBERSHIPS","","",null,null],[17,"NETLINK_CAP_ACK","","",null,null],[17,"NLA_F_NESTED","","",null,null],[17,"NLA_F_NET_BYTEORDER","","",null,null],[17,"NLA_TYPE_MASK","","",null,null],[17,"TCA_UNSPEC","","",null,null],[17,"TCA_KIND","","",null,null],[17,"TCA_OPTIONS","","",null,null],[17,"TCA_STATS","","",null,null],[17,"TCA_XSTATS","","",null,null],[17,"TCA_RATE","","",null,null],[17,"TCA_FCNT","","",null,null],[17,"TCA_STATS2","","",null,null],[17,"TCA_STAB","","",null,null],[17,"RTM_NEWLINK","","",null,null],[17,"RTM_DELLINK","","",null,null],[17,"RTM_GETLINK","","",null,null],[17,"RTM_SETLINK","","",null,null],[17,"RTM_NEWADDR","","",null,null],[17,"RTM_DELADDR","","",null,null],[17,"RTM_GETADDR","","",null,null],[17,"RTM_NEWROUTE","","",null,null],[17,"RTM_DELROUTE","","",null,null],[17,"RTM_GETROUTE","","",null,null],[17,"RTM_NEWNEIGH","","",null,null],[17,"RTM_DELNEIGH","","",null,null],[17,"RTM_GETNEIGH","","",null,null],[17,"RTM_NEWRULE","","",null,null],[17,"RTM_DELRULE","","",null,null],[17,"RTM_GETRULE","","",null,null],[17,"RTM_NEWQDISC","","",null,null],[17,"RTM_DELQDISC","","",null,null],[17,"RTM_GETQDISC","","",null,null],[17,"RTM_NEWTCLASS","","",null,null],[17,"RTM_DELTCLASS","","",null,null],[17,"RTM_GETTCLASS","","",null,null],[17,"RTM_NEWTFILTER","","",null,null],[17,"RTM_DELTFILTER","","",null,null],[17,"RTM_GETTFILTER","","",null,null],[17,"RTM_NEWACTION","","",null,null],[17,"RTM_DELACTION","","",null,null],[17,"RTM_GETACTION","","",null,null],[17,"RTM_NEWPREFIX","","",null,null],[17,"RTM_GETMULTICAST","","",null,null],[17,"RTM_GETANYCAST","","",null,null],[17,"RTM_NEWNEIGHTBL","","",null,null],[17,"RTM_GETNEIGHTBL","","",null,null],[17,"RTM_SETNEIGHTBL","","",null,null],[17,"RTM_NEWNDUSEROPT","","",null,null],[17,"RTM_NEWADDRLABEL","","",null,null],[17,"RTM_DELADDRLABEL","","",null,null],[17,"RTM_GETADDRLABEL","","",null,null],[17,"RTM_GETDCB","","",null,null],[17,"RTM_SETDCB","","",null,null],[17,"RTM_NEWNETCONF","","",null,null],[17,"RTM_GETNETCONF","","",null,null],[17,"RTM_NEWMDB","","",null,null],[17,"RTM_DELMDB","","",null,null],[17,"RTM_GETMDB","","",null,null],[17,"RTM_NEWNSID","","",null,null],[17,"RTM_DELNSID","","",null,null],[17,"RTM_GETNSID","","",null,null],[17,"RTM_F_NOTIFY","","",null,null],[17,"RTM_F_CLONED","","",null,null],[17,"RTM_F_EQUALIZE","","",null,null],[17,"RTM_F_PREFIX","","",null,null],[17,"RTA_UNSPEC","","",null,null],[17,"RTA_DST","","",null,null],[17,"RTA_SRC","","",null,null],[17,"RTA_IIF","","",null,null],[17,"RTA_OIF","","",null,null],[17,"RTA_GATEWAY","","",null,null],[17,"RTA_PRIORITY","","",null,null],[17,"RTA_PREFSRC","","",null,null],[17,"RTA_METRICS","","",null,null],[17,"RTA_MULTIPATH","","",null,null],[17,"RTA_PROTOINFO","","",null,null],[17,"RTA_FLOW","","",null,null],[17,"RTA_CACHEINFO","","",null,null],[17,"RTA_SESSION","","",null,null],[17,"RTA_MP_ALGO","","",null,null],[17,"RTA_TABLE","","",null,null],[17,"RTA_MARK","","",null,null],[17,"RTA_MFC_STATS","","",null,null],[17,"RTN_UNSPEC","","",null,null],[17,"RTN_UNICAST","","",null,null],[17,"RTN_LOCAL","","",null,null],[17,"RTN_BROADCAST","","",null,null],[17,"RTN_ANYCAST","","",null,null],[17,"RTN_MULTICAST","","",null,null],[17,"RTN_BLACKHOLE","","",null,null],[17,"RTN_UNREACHABLE","","",null,null],[17,"RTN_PROHIBIT","","",null,null],[17,"RTN_THROW","","",null,null],[17,"RTN_NAT","","",null,null],[17,"RTN_XRESOLVE","","",null,null],[17,"RTPROT_UNSPEC","","",null,null],[17,"RTPROT_REDIRECT","","",null,null],[17,"RTPROT_KERNEL","","",null,null],[17,"RTPROT_BOOT","","",null,null],[17,"RTPROT_STATIC","","",null,null],[17,"RT_SCOPE_UNIVERSE","","",null,null],[17,"RT_SCOPE_SITE","","",null,null],[17,"RT_SCOPE_LINK","","",null,null],[17,"RT_SCOPE_HOST","","",null,null],[17,"RT_SCOPE_NOWHERE","","",null,null],[17,"RT_TABLE_UNSPEC","","",null,null],[17,"RT_TABLE_COMPAT","","",null,null],[17,"RT_TABLE_DEFAULT","","",null,null],[17,"RT_TABLE_MAIN","","",null,null],[17,"RT_TABLE_LOCAL","","",null,null],[17,"RTMSG_OVERRUN","","",null,null],[17,"RTMSG_NEWDEVICE","","",null,null],[17,"RTMSG_DELDEVICE","","",null,null],[17,"RTMSG_NEWROUTE","","",null,null],[17,"RTMSG_DELROUTE","","",null,null],[17,"RTMSG_NEWRULE","","",null,null],[17,"RTMSG_DELRULE","","",null,null],[17,"RTMSG_CONTROL","","",null,null],[17,"RTMSG_AR_FAILED","","",null,null],[17,"MAX_ADDR_LEN","","",null,null],[17,"ARPD_UPDATE","","",null,null],[17,"ARPD_LOOKUP","","",null,null],[17,"ARPD_FLUSH","","",null,null],[17,"ATF_MAGIC","","",null,null],[17,"SO_TIMESTAMPING","","",null,null],[17,"SCM_TIMESTAMPING","","",null,null],[17,"MODULE_INIT_IGNORE_MODVERSIONS","","",null,null],[17,"MODULE_INIT_IGNORE_VERMAGIC","","",null,null],[17,"SOF_TIMESTAMPING_TX_HARDWARE","","",null,null],[17,"SOF_TIMESTAMPING_TX_SOFTWARE","","",null,null],[17,"SOF_TIMESTAMPING_RX_HARDWARE","","",null,null],[17,"SOF_TIMESTAMPING_RX_SOFTWARE","","",null,null],[17,"SOF_TIMESTAMPING_SOFTWARE","","",null,null],[17,"SOF_TIMESTAMPING_SYS_HARDWARE","","",null,null],[17,"SOF_TIMESTAMPING_RAW_HARDWARE","","",null,null],[17,"ALG_SET_KEY","","",null,null],[17,"ALG_SET_IV","","",null,null],[17,"ALG_SET_OP","","",null,null],[17,"ALG_SET_AEAD_ASSOCLEN","","",null,null],[17,"ALG_SET_AEAD_AUTHSIZE","","",null,null],[17,"ALG_OP_DECRYPT","","",null,null],[17,"ALG_OP_ENCRYPT","","",null,null],[17,"UDP_CORK","","",null,null],[17,"UDP_ENCAP","","",null,null],[17,"UDP_NO_CHECK6_TX","","",null,null],[17,"UDP_NO_CHECK6_RX","","",null,null],[17,"UDP_SEGMENT","","",null,null],[17,"UDP_GRO","","",null,null],[17,"MAP_SHARED_VALIDATE","","",null,null],[17,"MAP_FIXED_NOREPLACE","","",null,null],[17,"VMADDR_CID_ANY","","",null,null],[17,"VMADDR_CID_HYPERVISOR","","",null,null],[17,"VMADDR_CID_RESERVED","","",null,null],[17,"VMADDR_CID_HOST","","",null,null],[17,"VMADDR_PORT_ANY","","",null,null],[17,"IN_ACCESS","","",null,null],[17,"IN_MODIFY","","",null,null],[17,"IN_ATTRIB","","",null,null],[17,"IN_CLOSE_WRITE","","",null,null],[17,"IN_CLOSE_NOWRITE","","",null,null],[17,"IN_CLOSE","","",null,null],[17,"IN_OPEN","","",null,null],[17,"IN_MOVED_FROM","","",null,null],[17,"IN_MOVED_TO","","",null,null],[17,"IN_MOVE","","",null,null],[17,"IN_CREATE","","",null,null],[17,"IN_DELETE","","",null,null],[17,"IN_DELETE_SELF","","",null,null],[17,"IN_MOVE_SELF","","",null,null],[17,"IN_UNMOUNT","","",null,null],[17,"IN_Q_OVERFLOW","","",null,null],[17,"IN_IGNORED","","",null,null],[17,"IN_ONLYDIR","","",null,null],[17,"IN_DONT_FOLLOW","","",null,null],[17,"KEY_SPEC_THREAD_KEYRING","","",null,null],[17,"KEY_SPEC_PROCESS_KEYRING","","",null,null],[17,"KEY_SPEC_SESSION_KEYRING","","",null,null],[17,"KEY_SPEC_USER_KEYRING","","",null,null],[17,"KEY_SPEC_USER_SESSION_KEYRING","","",null,null],[17,"KEY_SPEC_GROUP_KEYRING","","",null,null],[17,"KEY_SPEC_REQKEY_AUTH_KEY","","",null,null],[17,"KEY_SPEC_REQUESTOR_KEYRING","","",null,null],[17,"KEY_REQKEY_DEFL_NO_CHANGE","","",null,null],[17,"KEY_REQKEY_DEFL_DEFAULT","","",null,null],[17,"KEY_REQKEY_DEFL_THREAD_KEYRING","","",null,null],[17,"KEY_REQKEY_DEFL_PROCESS_KEYRING","","",null,null],[17,"KEY_REQKEY_DEFL_SESSION_KEYRING","","",null,null],[17,"KEY_REQKEY_DEFL_USER_KEYRING","","",null,null],[17,"KEY_REQKEY_DEFL_USER_SESSION_KEYRING","","",null,null],[17,"KEY_REQKEY_DEFL_GROUP_KEYRING","","",null,null],[17,"KEY_REQKEY_DEFL_REQUESTOR_KEYRING","","",null,null],[17,"KEYCTL_GET_KEYRING_ID","","",null,null],[17,"KEYCTL_JOIN_SESSION_KEYRING","","",null,null],[17,"KEYCTL_UPDATE","","",null,null],[17,"KEYCTL_REVOKE","","",null,null],[17,"KEYCTL_CHOWN","","",null,null],[17,"KEYCTL_SETPERM","","",null,null],[17,"KEYCTL_DESCRIBE","","",null,null],[17,"KEYCTL_CLEAR","","",null,null],[17,"KEYCTL_LINK","","",null,null],[17,"KEYCTL_UNLINK","","",null,null],[17,"KEYCTL_SEARCH","","",null,null],[17,"KEYCTL_READ","","",null,null],[17,"KEYCTL_INSTANTIATE","","",null,null],[17,"KEYCTL_NEGATE","","",null,null],[17,"KEYCTL_SET_REQKEY_KEYRING","","",null,null],[17,"KEYCTL_SET_TIMEOUT","","",null,null],[17,"KEYCTL_ASSUME_AUTHORITY","","",null,null],[17,"KEYCTL_GET_SECURITY","","",null,null],[17,"KEYCTL_SESSION_TO_PARENT","","",null,null],[17,"KEYCTL_REJECT","","",null,null],[17,"KEYCTL_INSTANTIATE_IOV","","",null,null],[17,"KEYCTL_INVALIDATE","","",null,null],[17,"KEYCTL_GET_PERSISTENT","","",null,null],[17,"IN_ISDIR","","",null,null],[17,"IN_ONESHOT","","",null,null],[17,"IN_ALL_EVENTS","","",null,null],[17,"IN_CLOEXEC","","",null,null],[17,"IN_NONBLOCK","","",null,null],[17,"FAN_ACCESS","","",null,null],[17,"FAN_MODIFY","","",null,null],[17,"FAN_CLOSE_WRITE","","",null,null],[17,"FAN_CLOSE_NOWRITE","","",null,null],[17,"FAN_OPEN","","",null,null],[17,"FAN_Q_OVERFLOW","","",null,null],[17,"FAN_OPEN_PERM","","",null,null],[17,"FAN_ACCESS_PERM","","",null,null],[17,"FAN_ONDIR","","",null,null],[17,"FAN_EVENT_ON_CHILD","","",null,null],[17,"FAN_CLOSE","","",null,null],[17,"FAN_CLOEXEC","","",null,null],[17,"FAN_NONBLOCK","","",null,null],[17,"FAN_CLASS_NOTIF","","",null,null],[17,"FAN_CLASS_CONTENT","","",null,null],[17,"FAN_CLASS_PRE_CONTENT","","",null,null],[17,"FAN_UNLIMITED_QUEUE","","",null,null],[17,"FAN_UNLIMITED_MARKS","","",null,null],[17,"FAN_MARK_ADD","","",null,null],[17,"FAN_MARK_REMOVE","","",null,null],[17,"FAN_MARK_DONT_FOLLOW","","",null,null],[17,"FAN_MARK_ONLYDIR","","",null,null],[17,"FAN_MARK_INODE","","",null,null],[17,"FAN_MARK_MOUNT","","",null,null],[17,"FAN_MARK_FILESYSTEM","","",null,null],[17,"FAN_MARK_IGNORED_MASK","","",null,null],[17,"FAN_MARK_IGNORED_SURV_MODIFY","","",null,null],[17,"FAN_MARK_FLUSH","","",null,null],[17,"FANOTIFY_METADATA_VERSION","","",null,null],[17,"FAN_ALLOW","","",null,null],[17,"FAN_DENY","","",null,null],[17,"FAN_NOFD","","",null,null],[17,"FUTEX_WAIT","","",null,null],[17,"FUTEX_WAKE","","",null,null],[17,"FUTEX_FD","","",null,null],[17,"FUTEX_REQUEUE","","",null,null],[17,"FUTEX_CMP_REQUEUE","","",null,null],[17,"FUTEX_WAKE_OP","","",null,null],[17,"FUTEX_LOCK_PI","","",null,null],[17,"FUTEX_UNLOCK_PI","","",null,null],[17,"FUTEX_TRYLOCK_PI","","",null,null],[17,"FUTEX_WAIT_BITSET","","",null,null],[17,"FUTEX_WAKE_BITSET","","",null,null],[17,"FUTEX_WAIT_REQUEUE_PI","","",null,null],[17,"FUTEX_CMP_REQUEUE_PI","","",null,null],[17,"FUTEX_PRIVATE_FLAG","","",null,null],[17,"FUTEX_CLOCK_REALTIME","","",null,null],[17,"FUTEX_CMD_MASK","","",null,null],[17,"LINUX_REBOOT_MAGIC1","","",null,null],[17,"LINUX_REBOOT_MAGIC2","","",null,null],[17,"LINUX_REBOOT_MAGIC2A","","",null,null],[17,"LINUX_REBOOT_MAGIC2B","","",null,null],[17,"LINUX_REBOOT_MAGIC2C","","",null,null],[17,"LINUX_REBOOT_CMD_RESTART","","",null,null],[17,"LINUX_REBOOT_CMD_HALT","","",null,null],[17,"LINUX_REBOOT_CMD_CAD_ON","","",null,null],[17,"LINUX_REBOOT_CMD_CAD_OFF","","",null,null],[17,"LINUX_REBOOT_CMD_POWER_OFF","","",null,null],[17,"LINUX_REBOOT_CMD_RESTART2","","",null,null],[17,"LINUX_REBOOT_CMD_SW_SUSPEND","","",null,null],[17,"LINUX_REBOOT_CMD_KEXEC","","",null,null],[17,"REG_EXTENDED","","",null,null],[17,"REG_ICASE","","",null,null],[17,"REG_NEWLINE","","",null,null],[17,"REG_NOSUB","","",null,null],[17,"REG_NOTBOL","","",null,null],[17,"REG_NOTEOL","","",null,null],[17,"REG_ENOSYS","","",null,null],[17,"REG_NOMATCH","","",null,null],[17,"REG_BADPAT","","",null,null],[17,"REG_ECOLLATE","","",null,null],[17,"REG_ECTYPE","","",null,null],[17,"REG_EESCAPE","","",null,null],[17,"REG_ESUBREG","","",null,null],[17,"REG_EBRACK","","",null,null],[17,"REG_EPAREN","","",null,null],[17,"REG_EBRACE","","",null,null],[17,"REG_BADBR","","",null,null],[17,"REG_ERANGE","","",null,null],[17,"REG_ESPACE","","",null,null],[17,"REG_BADRPT","","",null,null],[17,"SO_EE_ORIGIN_NONE","","",null,null],[17,"SO_EE_ORIGIN_LOCAL","","",null,null],[17,"SO_EE_ORIGIN_ICMP","","",null,null],[17,"SO_EE_ORIGIN_ICMP6","","",null,null],[17,"SO_EE_ORIGIN_TXSTATUS","","",null,null],[17,"SO_EE_ORIGIN_TIMESTAMPING","","",null,null],[17,"EPERM","","",null,null],[17,"ENOENT","","",null,null],[17,"ESRCH","","",null,null],[17,"EINTR","","",null,null],[17,"EIO","","",null,null],[17,"ENXIO","","",null,null],[17,"E2BIG","","",null,null],[17,"ENOEXEC","","",null,null],[17,"EBADF","","",null,null],[17,"ECHILD","","",null,null],[17,"EAGAIN","","",null,null],[17,"ENOMEM","","",null,null],[17,"EACCES","","",null,null],[17,"EFAULT","","",null,null],[17,"ENOTBLK","","",null,null],[17,"EBUSY","","",null,null],[17,"EEXIST","","",null,null],[17,"EXDEV","","",null,null],[17,"ENODEV","","",null,null],[17,"ENOTDIR","","",null,null],[17,"EISDIR","","",null,null],[17,"EINVAL","","",null,null],[17,"ENFILE","","",null,null],[17,"EMFILE","","",null,null],[17,"ENOTTY","","",null,null],[17,"ETXTBSY","","",null,null],[17,"EFBIG","","",null,null],[17,"ENOSPC","","",null,null],[17,"ESPIPE","","",null,null],[17,"EROFS","","",null,null],[17,"EMLINK","","",null,null],[17,"EPIPE","","",null,null],[17,"EDOM","","",null,null],[17,"ERANGE","","",null,null],[17,"EWOULDBLOCK","","",null,null],[17,"HUGETLB_FLAG_ENCODE_SHIFT","","",null,null],[17,"HUGETLB_FLAG_ENCODE_MASK","","",null,null],[17,"HUGETLB_FLAG_ENCODE_64KB","","",null,null],[17,"HUGETLB_FLAG_ENCODE_512KB","","",null,null],[17,"HUGETLB_FLAG_ENCODE_1MB","","",null,null],[17,"HUGETLB_FLAG_ENCODE_2MB","","",null,null],[17,"HUGETLB_FLAG_ENCODE_8MB","","",null,null],[17,"HUGETLB_FLAG_ENCODE_16MB","","",null,null],[17,"HUGETLB_FLAG_ENCODE_32MB","","",null,null],[17,"HUGETLB_FLAG_ENCODE_256MB","","",null,null],[17,"HUGETLB_FLAG_ENCODE_512MB","","",null,null],[17,"HUGETLB_FLAG_ENCODE_1GB","","",null,null],[17,"HUGETLB_FLAG_ENCODE_2GB","","",null,null],[17,"HUGETLB_FLAG_ENCODE_16GB","","",null,null],[17,"MAP_HUGE_SHIFT","","",null,null],[17,"MAP_HUGE_MASK","","",null,null],[17,"MAP_HUGE_64KB","","",null,null],[17,"MAP_HUGE_512KB","","",null,null],[17,"MAP_HUGE_1MB","","",null,null],[17,"MAP_HUGE_2MB","","",null,null],[17,"MAP_HUGE_8MB","","",null,null],[17,"MAP_HUGE_16MB","","",null,null],[17,"MAP_HUGE_32MB","","",null,null],[17,"MAP_HUGE_256MB","","",null,null],[17,"MAP_HUGE_512MB","","",null,null],[17,"MAP_HUGE_1GB","","",null,null],[17,"MAP_HUGE_2GB","","",null,null],[17,"MAP_HUGE_16GB","","",null,null],[17,"RLIMIT_CPU","","",null,null],[17,"RLIMIT_FSIZE","","",null,null],[17,"RLIMIT_DATA","","",null,null],[17,"RLIMIT_STACK","","",null,null],[17,"RLIMIT_CORE","","",null,null],[17,"RLIMIT_LOCKS","","",null,null],[17,"RLIMIT_SIGPENDING","","",null,null],[17,"RLIMIT_MSGQUEUE","","",null,null],[17,"RLIMIT_NICE","","",null,null],[17,"RLIMIT_RTPRIO","","",null,null],[17,"RLIMIT_RTTIME","","",null,null],[17,"RLIMIT_NLIMITS","","",null,null],[17,"PRIO_PROCESS","","",null,null],[17,"PRIO_PGRP","","",null,null],[17,"PRIO_USER","","",null,null],[17,"MS_RMT_MASK","","",null,null],[17,"__UT_LINESIZE","","",null,null],[17,"__UT_NAMESIZE","","",null,null],[17,"__UT_HOSTSIZE","","",null,null],[17,"EMPTY","","",null,null],[17,"RUN_LVL","","",null,null],[17,"BOOT_TIME","","",null,null],[17,"NEW_TIME","","",null,null],[17,"OLD_TIME","","",null,null],[17,"INIT_PROCESS","","",null,null],[17,"LOGIN_PROCESS","","",null,null],[17,"USER_PROCESS","","",null,null],[17,"DEAD_PROCESS","","",null,null],[17,"ACCOUNTING","","",null,null],[17,"LM_ID_BASE","","",null,null],[17,"LM_ID_NEWLM","","",null,null],[17,"RTLD_DI_LMID","","",null,null],[17,"RTLD_DI_LINKMAP","","",null,null],[17,"RTLD_DI_CONFIGADDR","","",null,null],[17,"RTLD_DI_SERINFO","","",null,null],[17,"RTLD_DI_SERINFOSIZE","","",null,null],[17,"RTLD_DI_ORIGIN","","",null,null],[17,"RTLD_DI_PROFILENAME","","",null,null],[17,"RTLD_DI_PROFILEOUT","","",null,null],[17,"RTLD_DI_TLS_MODID","","",null,null],[17,"RTLD_DI_TLS_DATA","","",null,null],[17,"SOCK_NONBLOCK","","",null,null],[17,"SOL_RXRPC","","",null,null],[17,"SOL_PPPOL2TP","","",null,null],[17,"SOL_PNPIPE","","",null,null],[17,"SOL_RDS","","",null,null],[17,"SOL_IUCV","","",null,null],[17,"SOL_CAIF","","",null,null],[17,"SOL_NFC","","",null,null],[17,"SOL_XDP","","",null,null],[17,"MSG_TRYHARD","","",null,null],[17,"LC_PAPER","","",null,null],[17,"LC_NAME","","",null,null],[17,"LC_ADDRESS","","",null,null],[17,"LC_TELEPHONE","","",null,null],[17,"LC_MEASUREMENT","","",null,null],[17,"LC_IDENTIFICATION","","",null,null],[17,"LC_PAPER_MASK","","",null,null],[17,"LC_NAME_MASK","","",null,null],[17,"LC_ADDRESS_MASK","","",null,null],[17,"LC_TELEPHONE_MASK","","",null,null],[17,"LC_MEASUREMENT_MASK","","",null,null],[17,"LC_IDENTIFICATION_MASK","","",null,null],[17,"LC_ALL_MASK","","",null,null],[17,"ENOTSUP","","",null,null],[17,"SOCK_SEQPACKET","","",null,null],[17,"SOCK_DCCP","","",null,null],[17,"SOCK_PACKET","","",null,null],[17,"TCP_COOKIE_TRANSACTIONS","","",null,null],[17,"TCP_THIN_LINEAR_TIMEOUTS","","",null,null],[17,"TCP_THIN_DUPACK","","",null,null],[17,"TCP_USER_TIMEOUT","","",null,null],[17,"TCP_REPAIR","","",null,null],[17,"TCP_REPAIR_QUEUE","","",null,null],[17,"TCP_QUEUE_SEQ","","",null,null],[17,"TCP_REPAIR_OPTIONS","","",null,null],[17,"TCP_FASTOPEN","","",null,null],[17,"TCP_TIMESTAMP","","",null,null],[17,"TCP_FASTOPEN_CONNECT","","",null,null],[17,"DCCP_SOCKOPT_PACKET_SIZE","","",null,null],[17,"DCCP_SOCKOPT_SERVICE","","",null,null],[17,"DCCP_SOCKOPT_CHANGE_L","","",null,null],[17,"DCCP_SOCKOPT_CHANGE_R","","",null,null],[17,"DCCP_SOCKOPT_GET_CUR_MPS","","",null,null],[17,"DCCP_SOCKOPT_SERVER_TIMEWAIT","","",null,null],[17,"DCCP_SOCKOPT_SEND_CSCOV","","",null,null],[17,"DCCP_SOCKOPT_RECV_CSCOV","","",null,null],[17,"DCCP_SOCKOPT_AVAILABLE_CCIDS","","",null,null],[17,"DCCP_SOCKOPT_CCID","","",null,null],[17,"DCCP_SOCKOPT_TX_CCID","","",null,null],[17,"DCCP_SOCKOPT_RX_CCID","","",null,null],[17,"DCCP_SOCKOPT_QPOLICY_ID","","",null,null],[17,"DCCP_SOCKOPT_QPOLICY_TXQLEN","","",null,null],[17,"DCCP_SOCKOPT_CCID_RX_INFO","","",null,null],[17,"DCCP_SOCKOPT_CCID_TX_INFO","","",null,null],[17,"DCCP_SERVICE_LIST_MAX_LEN","","maximum number of services provided on the same listening…",null,null],[17,"SIGEV_THREAD_ID","","",null,null],[17,"BUFSIZ","","",null,null],[17,"TMP_MAX","","",null,null],[17,"FOPEN_MAX","","",null,null],[17,"POSIX_MADV_DONTNEED","","",null,null],[17,"_SC_EQUIV_CLASS_MAX","","",null,null],[17,"_SC_CHARCLASS_NAME_MAX","","",null,null],[17,"_SC_PII","","",null,null],[17,"_SC_PII_XTI","","",null,null],[17,"_SC_PII_SOCKET","","",null,null],[17,"_SC_PII_INTERNET","","",null,null],[17,"_SC_PII_OSI","","",null,null],[17,"_SC_POLL","","",null,null],[17,"_SC_SELECT","","",null,null],[17,"_SC_PII_INTERNET_STREAM","","",null,null],[17,"_SC_PII_INTERNET_DGRAM","","",null,null],[17,"_SC_PII_OSI_COTS","","",null,null],[17,"_SC_PII_OSI_CLTS","","",null,null],[17,"_SC_PII_OSI_M","","",null,null],[17,"_SC_T_IOV_MAX","","",null,null],[17,"_SC_2_C_VERSION","","",null,null],[17,"_SC_CHAR_BIT","","",null,null],[17,"_SC_CHAR_MAX","","",null,null],[17,"_SC_CHAR_MIN","","",null,null],[17,"_SC_INT_MAX","","",null,null],[17,"_SC_INT_MIN","","",null,null],[17,"_SC_LONG_BIT","","",null,null],[17,"_SC_WORD_BIT","","",null,null],[17,"_SC_MB_LEN_MAX","","",null,null],[17,"_SC_SSIZE_MAX","","",null,null],[17,"_SC_SCHAR_MAX","","",null,null],[17,"_SC_SCHAR_MIN","","",null,null],[17,"_SC_SHRT_MAX","","",null,null],[17,"_SC_SHRT_MIN","","",null,null],[17,"_SC_UCHAR_MAX","","",null,null],[17,"_SC_UINT_MAX","","",null,null],[17,"_SC_ULONG_MAX","","",null,null],[17,"_SC_USHRT_MAX","","",null,null],[17,"_SC_NL_ARGMAX","","",null,null],[17,"_SC_NL_LANGMAX","","",null,null],[17,"_SC_NL_MSGMAX","","",null,null],[17,"_SC_NL_NMAX","","",null,null],[17,"_SC_NL_SETMAX","","",null,null],[17,"_SC_NL_TEXTMAX","","",null,null],[17,"_SC_BASE","","",null,null],[17,"_SC_C_LANG_SUPPORT","","",null,null],[17,"_SC_C_LANG_SUPPORT_R","","",null,null],[17,"_SC_DEVICE_IO","","",null,null],[17,"_SC_DEVICE_SPECIFIC","","",null,null],[17,"_SC_DEVICE_SPECIFIC_R","","",null,null],[17,"_SC_FD_MGMT","","",null,null],[17,"_SC_FIFO","","",null,null],[17,"_SC_PIPE","","",null,null],[17,"_SC_FILE_ATTRIBUTES","","",null,null],[17,"_SC_FILE_LOCKING","","",null,null],[17,"_SC_FILE_SYSTEM","","",null,null],[17,"_SC_MULTI_PROCESS","","",null,null],[17,"_SC_SINGLE_PROCESS","","",null,null],[17,"_SC_NETWORKING","","",null,null],[17,"_SC_REGEX_VERSION","","",null,null],[17,"_SC_SIGNALS","","",null,null],[17,"_SC_SYSTEM_DATABASE","","",null,null],[17,"_SC_SYSTEM_DATABASE_R","","",null,null],[17,"_SC_USER_GROUPS","","",null,null],[17,"_SC_USER_GROUPS_R","","",null,null],[17,"_SC_LEVEL1_ICACHE_SIZE","","",null,null],[17,"_SC_LEVEL1_ICACHE_ASSOC","","",null,null],[17,"_SC_LEVEL1_ICACHE_LINESIZE","","",null,null],[17,"_SC_LEVEL1_DCACHE_SIZE","","",null,null],[17,"_SC_LEVEL1_DCACHE_ASSOC","","",null,null],[17,"_SC_LEVEL1_DCACHE_LINESIZE","","",null,null],[17,"_SC_LEVEL2_CACHE_SIZE","","",null,null],[17,"_SC_LEVEL2_CACHE_ASSOC","","",null,null],[17,"_SC_LEVEL2_CACHE_LINESIZE","","",null,null],[17,"_SC_LEVEL3_CACHE_SIZE","","",null,null],[17,"_SC_LEVEL3_CACHE_ASSOC","","",null,null],[17,"_SC_LEVEL3_CACHE_LINESIZE","","",null,null],[17,"_SC_LEVEL4_CACHE_SIZE","","",null,null],[17,"_SC_LEVEL4_CACHE_ASSOC","","",null,null],[17,"_SC_LEVEL4_CACHE_LINESIZE","","",null,null],[17,"O_ACCMODE","","",null,null],[17,"ST_RELATIME","","",null,null],[17,"NI_MAXHOST","","",null,null],[17,"ADFS_SUPER_MAGIC","","",null,null],[17,"AFFS_SUPER_MAGIC","","",null,null],[17,"CODA_SUPER_MAGIC","","",null,null],[17,"CRAMFS_MAGIC","","",null,null],[17,"EFS_SUPER_MAGIC","","",null,null],[17,"EXT2_SUPER_MAGIC","","",null,null],[17,"EXT3_SUPER_MAGIC","","",null,null],[17,"EXT4_SUPER_MAGIC","","",null,null],[17,"HPFS_SUPER_MAGIC","","",null,null],[17,"HUGETLBFS_MAGIC","","",null,null],[17,"ISOFS_SUPER_MAGIC","","",null,null],[17,"JFFS2_SUPER_MAGIC","","",null,null],[17,"MINIX_SUPER_MAGIC","","",null,null],[17,"MINIX_SUPER_MAGIC2","","",null,null],[17,"MINIX2_SUPER_MAGIC","","",null,null],[17,"MINIX2_SUPER_MAGIC2","","",null,null],[17,"MSDOS_SUPER_MAGIC","","",null,null],[17,"NCP_SUPER_MAGIC","","",null,null],[17,"NFS_SUPER_MAGIC","","",null,null],[17,"OPENPROM_SUPER_MAGIC","","",null,null],[17,"PROC_SUPER_MAGIC","","",null,null],[17,"QNX4_SUPER_MAGIC","","",null,null],[17,"REISERFS_SUPER_MAGIC","","",null,null],[17,"SMB_SUPER_MAGIC","","",null,null],[17,"TMPFS_MAGIC","","",null,null],[17,"USBDEVICE_SUPER_MAGIC","","",null,null],[17,"CGROUP_SUPER_MAGIC","","",null,null],[17,"CGROUP2_SUPER_MAGIC","","",null,null],[17,"CPU_SETSIZE","","",null,null],[17,"PTRACE_TRACEME","","",null,null],[17,"PTRACE_PEEKTEXT","","",null,null],[17,"PTRACE_PEEKDATA","","",null,null],[17,"PTRACE_PEEKUSER","","",null,null],[17,"PTRACE_POKETEXT","","",null,null],[17,"PTRACE_POKEDATA","","",null,null],[17,"PTRACE_POKEUSER","","",null,null],[17,"PTRACE_CONT","","",null,null],[17,"PTRACE_KILL","","",null,null],[17,"PTRACE_SINGLESTEP","","",null,null],[17,"PTRACE_ATTACH","","",null,null],[17,"PTRACE_SYSCALL","","",null,null],[17,"PTRACE_SETOPTIONS","","",null,null],[17,"PTRACE_GETEVENTMSG","","",null,null],[17,"PTRACE_GETSIGINFO","","",null,null],[17,"PTRACE_SETSIGINFO","","",null,null],[17,"PTRACE_GETREGSET","","",null,null],[17,"PTRACE_SETREGSET","","",null,null],[17,"PTRACE_SEIZE","","",null,null],[17,"PTRACE_INTERRUPT","","",null,null],[17,"PTRACE_LISTEN","","",null,null],[17,"PTRACE_PEEKSIGINFO","","",null,null],[17,"EPOLLWAKEUP","","",null,null],[17,"SEEK_DATA","","",null,null],[17,"SEEK_HOLE","","",null,null],[17,"TCA_PAD","","",null,null],[17,"TCA_DUMP_INVISIBLE","","",null,null],[17,"TCA_CHAIN","","",null,null],[17,"TCA_HW_OFFLOAD","","",null,null],[17,"RTM_DELNETCONF","","",null,null],[17,"RTM_NEWSTATS","","",null,null],[17,"RTM_GETSTATS","","",null,null],[17,"RTM_NEWCACHEREPORT","","",null,null],[17,"RTM_F_LOOKUP_TABLE","","",null,null],[17,"RTM_F_FIB_MATCH","","",null,null],[17,"RTA_VIA","","",null,null],[17,"RTA_NEWDST","","",null,null],[17,"RTA_PREF","","",null,null],[17,"RTA_ENCAP_TYPE","","",null,null],[17,"RTA_ENCAP","","",null,null],[17,"RTA_EXPIRES","","",null,null],[17,"RTA_PAD","","",null,null],[17,"RTA_UID","","",null,null],[17,"RTA_TTL_PROPAGATE","","",null,null],[17,"NTF_EXT_LEARNED","","",null,null],[17,"NTF_OFFLOADED","","",null,null],[17,"NDA_MASTER","","",null,null],[17,"NDA_LINK_NETNSID","","",null,null],[17,"NDA_SRC_VNI","","",null,null],[17,"IFA_FLAGS","","",null,null],[17,"IFA_F_MANAGETEMPADDR","","",null,null],[17,"IFA_F_NOPREFIXROUTE","","",null,null],[17,"IFA_F_MCAUTOJOIN","","",null,null],[17,"IFA_F_STABLE_PRIVACY","","",null,null],[17,"MAX_LINKS","","",null,null],[17,"GENL_UNS_ADMIN_PERM","","",null,null],[17,"GENL_ID_VFS_DQUOT","","",null,null],[17,"GENL_ID_PMCRAID","","",null,null],[17,"TIOCM_LE","","",null,null],[17,"TIOCM_DTR","","",null,null],[17,"TIOCM_RTS","","",null,null],[17,"TIOCM_CD","","",null,null],[17,"TIOCM_RI","","",null,null],[17,"NF_NETDEV_INGRESS","","",null,null],[17,"NF_NETDEV_NUMHOOKS","","",null,null],[17,"NFPROTO_INET","","",null,null],[17,"NFPROTO_NETDEV","","",null,null],[17,"KEYCTL_DH_COMPUTE","","",null,null],[17,"KEYCTL_PKEY_QUERY","","",null,null],[17,"KEYCTL_PKEY_ENCRYPT","","",null,null],[17,"KEYCTL_PKEY_DECRYPT","","",null,null],[17,"KEYCTL_PKEY_SIGN","","",null,null],[17,"KEYCTL_PKEY_VERIFY","","",null,null],[17,"KEYCTL_RESTRICT_KEYRING","","",null,null],[17,"KEYCTL_SUPPORTS_ENCRYPT","","",null,null],[17,"KEYCTL_SUPPORTS_DECRYPT","","",null,null],[17,"KEYCTL_SUPPORTS_SIGN","","",null,null],[17,"KEYCTL_SUPPORTS_VERIFY","","",null,null],[17,"KEYCTL_MOVE","","",null,null],[17,"KEYCTL_CAPABILITIES","","",null,null],[17,"KEYCTL_CAPS0_CAPABILITIES","","",null,null],[17,"KEYCTL_CAPS0_PERSISTENT_KEYRINGS","","",null,null],[17,"KEYCTL_CAPS0_DIFFIE_HELLMAN","","",null,null],[17,"KEYCTL_CAPS0_PUBLIC_KEY","","",null,null],[17,"KEYCTL_CAPS0_BIG_KEY","","",null,null],[17,"KEYCTL_CAPS0_INVALIDATE","","",null,null],[17,"KEYCTL_CAPS0_RESTRICT_KEYRING","","",null,null],[17,"KEYCTL_CAPS0_MOVE","","",null,null],[17,"KEYCTL_CAPS1_NS_KEYRING_NAME","","",null,null],[17,"KEYCTL_CAPS1_NS_KEY_TAG","","",null,null],[17,"NFT_TABLE_MAXNAMELEN","","",null,null],[17,"NFT_CHAIN_MAXNAMELEN","","",null,null],[17,"NFT_SET_MAXNAMELEN","","",null,null],[17,"NFT_OBJ_MAXNAMELEN","","",null,null],[17,"NFT_USERDATA_MAXLEN","","",null,null],[17,"NFT_REG_VERDICT","","",null,null],[17,"NFT_REG_1","","",null,null],[17,"NFT_REG_2","","",null,null],[17,"NFT_REG_3","","",null,null],[17,"NFT_REG_4","","",null,null],[17,"__NFT_REG_MAX","","",null,null],[17,"NFT_REG32_00","","",null,null],[17,"NFT_REG32_01","","",null,null],[17,"NFT_REG32_02","","",null,null],[17,"NFT_REG32_03","","",null,null],[17,"NFT_REG32_04","","",null,null],[17,"NFT_REG32_05","","",null,null],[17,"NFT_REG32_06","","",null,null],[17,"NFT_REG32_07","","",null,null],[17,"NFT_REG32_08","","",null,null],[17,"NFT_REG32_09","","",null,null],[17,"NFT_REG32_10","","",null,null],[17,"NFT_REG32_11","","",null,null],[17,"NFT_REG32_12","","",null,null],[17,"NFT_REG32_13","","",null,null],[17,"NFT_REG32_14","","",null,null],[17,"NFT_REG32_15","","",null,null],[17,"NFT_REG_SIZE","","",null,null],[17,"NFT_REG32_SIZE","","",null,null],[17,"NFT_CONTINUE","","",null,null],[17,"NFT_BREAK","","",null,null],[17,"NFT_JUMP","","",null,null],[17,"NFT_GOTO","","",null,null],[17,"NFT_RETURN","","",null,null],[17,"NFT_MSG_NEWTABLE","","",null,null],[17,"NFT_MSG_GETTABLE","","",null,null],[17,"NFT_MSG_DELTABLE","","",null,null],[17,"NFT_MSG_NEWCHAIN","","",null,null],[17,"NFT_MSG_GETCHAIN","","",null,null],[17,"NFT_MSG_DELCHAIN","","",null,null],[17,"NFT_MSG_NEWRULE","","",null,null],[17,"NFT_MSG_GETRULE","","",null,null],[17,"NFT_MSG_DELRULE","","",null,null],[17,"NFT_MSG_NEWSET","","",null,null],[17,"NFT_MSG_GETSET","","",null,null],[17,"NFT_MSG_DELSET","","",null,null],[17,"NFT_MSG_NEWSETELEM","","",null,null],[17,"NFT_MSG_GETSETELEM","","",null,null],[17,"NFT_MSG_DELSETELEM","","",null,null],[17,"NFT_MSG_NEWGEN","","",null,null],[17,"NFT_MSG_GETGEN","","",null,null],[17,"NFT_MSG_TRACE","","",null,null],[17,"NFT_MSG_NEWOBJ","","",null,null],[17,"NFT_MSG_GETOBJ","","",null,null],[17,"NFT_MSG_DELOBJ","","",null,null],[17,"NFT_MSG_GETOBJ_RESET","","",null,null],[17,"NFT_MSG_MAX","","",null,null],[17,"NFT_SET_ANONYMOUS","","",null,null],[17,"NFT_SET_CONSTANT","","",null,null],[17,"NFT_SET_INTERVAL","","",null,null],[17,"NFT_SET_MAP","","",null,null],[17,"NFT_SET_TIMEOUT","","",null,null],[17,"NFT_SET_EVAL","","",null,null],[17,"NFT_SET_POL_PERFORMANCE","","",null,null],[17,"NFT_SET_POL_MEMORY","","",null,null],[17,"NFT_SET_ELEM_INTERVAL_END","","",null,null],[17,"NFT_DATA_VALUE","","",null,null],[17,"NFT_DATA_VERDICT","","",null,null],[17,"NFT_DATA_RESERVED_MASK","","",null,null],[17,"NFT_DATA_VALUE_MAXLEN","","",null,null],[17,"NFT_BYTEORDER_NTOH","","",null,null],[17,"NFT_BYTEORDER_HTON","","",null,null],[17,"NFT_CMP_EQ","","",null,null],[17,"NFT_CMP_NEQ","","",null,null],[17,"NFT_CMP_LT","","",null,null],[17,"NFT_CMP_LTE","","",null,null],[17,"NFT_CMP_GT","","",null,null],[17,"NFT_CMP_GTE","","",null,null],[17,"NFT_RANGE_EQ","","",null,null],[17,"NFT_RANGE_NEQ","","",null,null],[17,"NFT_LOOKUP_F_INV","","",null,null],[17,"NFT_DYNSET_OP_ADD","","",null,null],[17,"NFT_DYNSET_OP_UPDATE","","",null,null],[17,"NFT_DYNSET_F_INV","","",null,null],[17,"NFT_PAYLOAD_LL_HEADER","","",null,null],[17,"NFT_PAYLOAD_NETWORK_HEADER","","",null,null],[17,"NFT_PAYLOAD_TRANSPORT_HEADER","","",null,null],[17,"NFT_PAYLOAD_CSUM_NONE","","",null,null],[17,"NFT_PAYLOAD_CSUM_INET","","",null,null],[17,"NFT_META_LEN","","",null,null],[17,"NFT_META_PROTOCOL","","",null,null],[17,"NFT_META_PRIORITY","","",null,null],[17,"NFT_META_MARK","","",null,null],[17,"NFT_META_IIF","","",null,null],[17,"NFT_META_OIF","","",null,null],[17,"NFT_META_IIFNAME","","",null,null],[17,"NFT_META_OIFNAME","","",null,null],[17,"NFT_META_IIFTYPE","","",null,null],[17,"NFT_META_OIFTYPE","","",null,null],[17,"NFT_META_SKUID","","",null,null],[17,"NFT_META_SKGID","","",null,null],[17,"NFT_META_NFTRACE","","",null,null],[17,"NFT_META_RTCLASSID","","",null,null],[17,"NFT_META_SECMARK","","",null,null],[17,"NFT_META_NFPROTO","","",null,null],[17,"NFT_META_L4PROTO","","",null,null],[17,"NFT_META_BRI_IIFNAME","","",null,null],[17,"NFT_META_BRI_OIFNAME","","",null,null],[17,"NFT_META_PKTTYPE","","",null,null],[17,"NFT_META_CPU","","",null,null],[17,"NFT_META_IIFGROUP","","",null,null],[17,"NFT_META_OIFGROUP","","",null,null],[17,"NFT_META_CGROUP","","",null,null],[17,"NFT_META_PRANDOM","","",null,null],[17,"NFT_CT_STATE","","",null,null],[17,"NFT_CT_DIRECTION","","",null,null],[17,"NFT_CT_STATUS","","",null,null],[17,"NFT_CT_MARK","","",null,null],[17,"NFT_CT_SECMARK","","",null,null],[17,"NFT_CT_EXPIRATION","","",null,null],[17,"NFT_CT_HELPER","","",null,null],[17,"NFT_CT_L3PROTOCOL","","",null,null],[17,"NFT_CT_SRC","","",null,null],[17,"NFT_CT_DST","","",null,null],[17,"NFT_CT_PROTOCOL","","",null,null],[17,"NFT_CT_PROTO_SRC","","",null,null],[17,"NFT_CT_PROTO_DST","","",null,null],[17,"NFT_CT_LABELS","","",null,null],[17,"NFT_CT_PKTS","","",null,null],[17,"NFT_CT_BYTES","","",null,null],[17,"NFT_LIMIT_PKTS","","",null,null],[17,"NFT_LIMIT_PKT_BYTES","","",null,null],[17,"NFT_LIMIT_F_INV","","",null,null],[17,"NFT_QUEUE_FLAG_BYPASS","","",null,null],[17,"NFT_QUEUE_FLAG_CPU_FANOUT","","",null,null],[17,"NFT_QUEUE_FLAG_MASK","","",null,null],[17,"NFT_QUOTA_F_INV","","",null,null],[17,"NFT_REJECT_ICMP_UNREACH","","",null,null],[17,"NFT_REJECT_TCP_RST","","",null,null],[17,"NFT_REJECT_ICMPX_UNREACH","","",null,null],[17,"NFT_REJECT_ICMPX_NO_ROUTE","","",null,null],[17,"NFT_REJECT_ICMPX_PORT_UNREACH","","",null,null],[17,"NFT_REJECT_ICMPX_HOST_UNREACH","","",null,null],[17,"NFT_REJECT_ICMPX_ADMIN_PROHIBITED","","",null,null],[17,"NFT_NAT_SNAT","","",null,null],[17,"NFT_NAT_DNAT","","",null,null],[17,"NFT_TRACETYPE_UNSPEC","","",null,null],[17,"NFT_TRACETYPE_POLICY","","",null,null],[17,"NFT_TRACETYPE_RETURN","","",null,null],[17,"NFT_TRACETYPE_RULE","","",null,null],[17,"NFT_NG_INCREMENTAL","","",null,null],[17,"NFT_NG_RANDOM","","",null,null],[17,"M_MXFAST","","",null,null],[17,"M_NLBLKS","","",null,null],[17,"M_GRAIN","","",null,null],[17,"M_KEEP","","",null,null],[17,"M_TRIM_THRESHOLD","","",null,null],[17,"M_TOP_PAD","","",null,null],[17,"M_MMAP_THRESHOLD","","",null,null],[17,"M_MMAP_MAX","","",null,null],[17,"M_CHECK_ACTION","","",null,null],[17,"M_PERTURB","","",null,null],[17,"M_ARENA_TEST","","",null,null],[17,"M_ARENA_MAX","","",null,null],[17,"AT_STATX_SYNC_TYPE","","",null,null],[17,"AT_STATX_SYNC_AS_STAT","","",null,null],[17,"AT_STATX_FORCE_SYNC","","",null,null],[17,"AT_STATX_DONT_SYNC","","",null,null],[17,"STATX_TYPE","","",null,null],[17,"STATX_MODE","","",null,null],[17,"STATX_NLINK","","",null,null],[17,"STATX_UID","","",null,null],[17,"STATX_GID","","",null,null],[17,"STATX_ATIME","","",null,null],[17,"STATX_MTIME","","",null,null],[17,"STATX_CTIME","","",null,null],[17,"STATX_INO","","",null,null],[17,"STATX_SIZE","","",null,null],[17,"STATX_BLOCKS","","",null,null],[17,"STATX_BASIC_STATS","","",null,null],[17,"STATX_BTIME","","",null,null],[17,"STATX_ALL","","",null,null],[17,"STATX__RESERVED","","",null,null],[17,"STATX_ATTR_COMPRESSED","","",null,null],[17,"STATX_ATTR_IMMUTABLE","","",null,null],[17,"STATX_ATTR_APPEND","","",null,null],[17,"STATX_ATTR_NODUMP","","",null,null],[17,"STATX_ATTR_ENCRYPTED","","",null,null],[17,"STATX_ATTR_AUTOMOUNT","","",null,null],[17,"AT_NULL","","",null,null],[17,"AT_IGNORE","","",null,null],[17,"AT_EXECFD","","",null,null],[17,"AT_PHDR","","",null,null],[17,"AT_PHENT","","",null,null],[17,"AT_PHNUM","","",null,null],[17,"AT_PAGESZ","","",null,null],[17,"AT_BASE","","",null,null],[17,"AT_FLAGS","","",null,null],[17,"AT_ENTRY","","",null,null],[17,"AT_NOTELF","","",null,null],[17,"AT_UID","","",null,null],[17,"AT_EUID","","",null,null],[17,"AT_GID","","",null,null],[17,"AT_EGID","","",null,null],[17,"AT_PLATFORM","","",null,null],[17,"AT_HWCAP","","",null,null],[17,"AT_CLKTCK","","",null,null],[17,"AT_SECURE","","",null,null],[17,"AT_BASE_PLATFORM","","",null,null],[17,"AT_RANDOM","","",null,null],[17,"AT_HWCAP2","","",null,null],[17,"AT_EXECFN","","",null,null],[17,"ADJ_OFFSET","","",null,null],[17,"ADJ_FREQUENCY","","",null,null],[17,"ADJ_MAXERROR","","",null,null],[17,"ADJ_ESTERROR","","",null,null],[17,"ADJ_STATUS","","",null,null],[17,"ADJ_TIMECONST","","",null,null],[17,"ADJ_TAI","","",null,null],[17,"ADJ_SETOFFSET","","",null,null],[17,"ADJ_MICRO","","",null,null],[17,"ADJ_NANO","","",null,null],[17,"ADJ_TICK","","",null,null],[17,"ADJ_OFFSET_SINGLESHOT","","",null,null],[17,"ADJ_OFFSET_SS_READ","","",null,null],[17,"MOD_OFFSET","","",null,null],[17,"MOD_FREQUENCY","","",null,null],[17,"MOD_MAXERROR","","",null,null],[17,"MOD_ESTERROR","","",null,null],[17,"MOD_STATUS","","",null,null],[17,"MOD_TIMECONST","","",null,null],[17,"MOD_CLKB","","",null,null],[17,"MOD_CLKA","","",null,null],[17,"MOD_TAI","","",null,null],[17,"MOD_MICRO","","",null,null],[17,"MOD_NANO","","",null,null],[17,"STA_PLL","","",null,null],[17,"STA_PPSFREQ","","",null,null],[17,"STA_PPSTIME","","",null,null],[17,"STA_FLL","","",null,null],[17,"STA_INS","","",null,null],[17,"STA_DEL","","",null,null],[17,"STA_UNSYNC","","",null,null],[17,"STA_FREQHOLD","","",null,null],[17,"STA_PPSSIGNAL","","",null,null],[17,"STA_PPSJITTER","","",null,null],[17,"STA_PPSWANDER","","",null,null],[17,"STA_PPSERROR","","",null,null],[17,"STA_CLOCKERR","","",null,null],[17,"STA_NANO","","",null,null],[17,"STA_MODE","","",null,null],[17,"STA_CLK","","",null,null],[17,"STA_RONLY","","",null,null],[17,"NTP_API","","",null,null],[17,"TIME_OK","","",null,null],[17,"TIME_INS","","",null,null],[17,"TIME_DEL","","",null,null],[17,"TIME_OOP","","",null,null],[17,"TIME_WAIT","","",null,null],[17,"TIME_ERROR","","",null,null],[17,"TIME_BAD","","",null,null],[17,"MAXTC","","",null,null],[17,"PTHREAD_STACK_MIN","","",null,null],[17,"PTHREAD_MUTEX_ADAPTIVE_NP","","",null,null],[17,"REG_STARTEND","","",null,null],[17,"REG_EEND","","",null,null],[17,"REG_ESIZE","","",null,null],[17,"REG_ERPAREN","","",null,null],[17,"RLIM_INFINITY","","",null,null],[17,"__SIZEOF_PTHREAD_RWLOCKATTR_T","","",null,null],[17,"O_LARGEFILE","","",null,null],[17,"POSIX_FADV_DONTNEED","","",null,null],[17,"POSIX_FADV_NOREUSE","","",null,null],[17,"VEOF","","",null,null],[17,"RTLD_DEEPBIND","","",null,null],[17,"RTLD_GLOBAL","","",null,null],[17,"RTLD_NOLOAD","","",null,null],[17,"TIOCGSOFTCAR","","",null,null],[17,"TIOCSSOFTCAR","","",null,null],[17,"TIOCGRS485","","",null,null],[17,"TIOCSRS485","","",null,null],[17,"RLIMIT_RSS","","",null,null],[17,"RLIMIT_AS","","",null,null],[17,"RLIMIT_MEMLOCK","","",null,null],[17,"RLIMIT_NOFILE","","",null,null],[17,"RLIMIT_NPROC","","",null,null],[17,"O_APPEND","","",null,null],[17,"O_CREAT","","",null,null],[17,"O_EXCL","","",null,null],[17,"O_NOCTTY","","",null,null],[17,"O_NONBLOCK","","",null,null],[17,"O_SYNC","","",null,null],[17,"O_RSYNC","","",null,null],[17,"O_DSYNC","","",null,null],[17,"O_FSYNC","","",null,null],[17,"O_NOATIME","","",null,null],[17,"O_PATH","","",null,null],[17,"O_TMPFILE","","",null,null],[17,"MADV_SOFT_OFFLINE","","",null,null],[17,"MAP_GROWSDOWN","","",null,null],[17,"EDEADLK","","",null,null],[17,"ENAMETOOLONG","","",null,null],[17,"ENOLCK","","",null,null],[17,"ENOSYS","","",null,null],[17,"ENOTEMPTY","","",null,null],[17,"ELOOP","","",null,null],[17,"ENOMSG","","",null,null],[17,"EIDRM","","",null,null],[17,"ECHRNG","","",null,null],[17,"EL2NSYNC","","",null,null],[17,"EL3HLT","","",null,null],[17,"EL3RST","","",null,null],[17,"ELNRNG","","",null,null],[17,"EUNATCH","","",null,null],[17,"ENOCSI","","",null,null],[17,"EL2HLT","","",null,null],[17,"EBADE","","",null,null],[17,"EBADR","","",null,null],[17,"EXFULL","","",null,null],[17,"ENOANO","","",null,null],[17,"EBADRQC","","",null,null],[17,"EBADSLT","","",null,null],[17,"EMULTIHOP","","",null,null],[17,"EOVERFLOW","","",null,null],[17,"ENOTUNIQ","","",null,null],[17,"EBADFD","","",null,null],[17,"EBADMSG","","",null,null],[17,"EREMCHG","","",null,null],[17,"ELIBACC","","",null,null],[17,"ELIBBAD","","",null,null],[17,"ELIBSCN","","",null,null],[17,"ELIBMAX","","",null,null],[17,"ELIBEXEC","","",null,null],[17,"EILSEQ","","",null,null],[17,"ERESTART","","",null,null],[17,"ESTRPIPE","","",null,null],[17,"EUSERS","","",null,null],[17,"ENOTSOCK","","",null,null],[17,"EDESTADDRREQ","","",null,null],[17,"EMSGSIZE","","",null,null],[17,"EPROTOTYPE","","",null,null],[17,"ENOPROTOOPT","","",null,null],[17,"EPROTONOSUPPORT","","",null,null],[17,"ESOCKTNOSUPPORT","","",null,null],[17,"EOPNOTSUPP","","",null,null],[17,"EPFNOSUPPORT","","",null,null],[17,"EAFNOSUPPORT","","",null,null],[17,"EADDRINUSE","","",null,null],[17,"EADDRNOTAVAIL","","",null,null],[17,"ENETDOWN","","",null,null],[17,"ENETUNREACH","","",null,null],[17,"ENETRESET","","",null,null],[17,"ECONNABORTED","","",null,null],[17,"ECONNRESET","","",null,null],[17,"ENOBUFS","","",null,null],[17,"EISCONN","","",null,null],[17,"ENOTCONN","","",null,null],[17,"ESHUTDOWN","","",null,null],[17,"ETOOMANYREFS","","",null,null],[17,"ETIMEDOUT","","",null,null],[17,"ECONNREFUSED","","",null,null],[17,"EHOSTDOWN","","",null,null],[17,"EHOSTUNREACH","","",null,null],[17,"EALREADY","","",null,null],[17,"EINPROGRESS","","",null,null],[17,"ESTALE","","",null,null],[17,"EDQUOT","","",null,null],[17,"ENOMEDIUM","","",null,null],[17,"EMEDIUMTYPE","","",null,null],[17,"ECANCELED","","",null,null],[17,"ENOKEY","","",null,null],[17,"EKEYEXPIRED","","",null,null],[17,"EKEYREVOKED","","",null,null],[17,"EKEYREJECTED","","",null,null],[17,"EOWNERDEAD","","",null,null],[17,"ENOTRECOVERABLE","","",null,null],[17,"EHWPOISON","","",null,null],[17,"ERFKILL","","",null,null],[17,"SOL_SOCKET","","",null,null],[17,"SO_REUSEADDR","","",null,null],[17,"SO_TYPE","","",null,null],[17,"SO_ERROR","","",null,null],[17,"SO_DONTROUTE","","",null,null],[17,"SO_BROADCAST","","",null,null],[17,"SO_SNDBUF","","",null,null],[17,"SO_RCVBUF","","",null,null],[17,"SO_SNDBUFFORCE","","",null,null],[17,"SO_RCVBUFFORCE","","",null,null],[17,"SO_KEEPALIVE","","",null,null],[17,"SO_OOBINLINE","","",null,null],[17,"SO_NO_CHECK","","",null,null],[17,"SO_PRIORITY","","",null,null],[17,"SO_LINGER","","",null,null],[17,"SO_BSDCOMPAT","","",null,null],[17,"SO_REUSEPORT","","",null,null],[17,"SO_PASSCRED","","",null,null],[17,"SO_PEERCRED","","",null,null],[17,"SO_RCVLOWAT","","",null,null],[17,"SO_SNDLOWAT","","",null,null],[17,"SO_RCVTIMEO","","",null,null],[17,"SO_SNDTIMEO","","",null,null],[17,"SO_SECURITY_AUTHENTICATION","","",null,null],[17,"SO_SECURITY_ENCRYPTION_TRANSPORT","","",null,null],[17,"SO_SECURITY_ENCRYPTION_NETWORK","","",null,null],[17,"SO_BINDTODEVICE","","",null,null],[17,"SO_ATTACH_FILTER","","",null,null],[17,"SO_DETACH_FILTER","","",null,null],[17,"SO_GET_FILTER","","",null,null],[17,"SO_PEERNAME","","",null,null],[17,"SO_TIMESTAMP","","",null,null],[17,"SO_ACCEPTCONN","","",null,null],[17,"SO_PEERSEC","","",null,null],[17,"SO_PASSSEC","","",null,null],[17,"SO_TIMESTAMPNS","","",null,null],[17,"SCM_TIMESTAMPNS","","",null,null],[17,"SO_MARK","","",null,null],[17,"SO_PROTOCOL","","",null,null],[17,"SO_DOMAIN","","",null,null],[17,"SO_RXQ_OVFL","","",null,null],[17,"SO_WIFI_STATUS","","",null,null],[17,"SCM_WIFI_STATUS","","",null,null],[17,"SO_PEEK_OFF","","",null,null],[17,"SO_NOFCS","","",null,null],[17,"SO_LOCK_FILTER","","",null,null],[17,"SO_SELECT_ERR_QUEUE","","",null,null],[17,"SO_BUSY_POLL","","",null,null],[17,"SO_MAX_PACING_RATE","","",null,null],[17,"SO_BPF_EXTENSIONS","","",null,null],[17,"SO_INCOMING_CPU","","",null,null],[17,"SO_ATTACH_BPF","","",null,null],[17,"SO_DETACH_BPF","","",null,null],[17,"SOCK_STREAM","","",null,null],[17,"SOCK_DGRAM","","",null,null],[17,"SA_ONSTACK","","",null,null],[17,"SA_SIGINFO","","",null,null],[17,"SA_NOCLDWAIT","","",null,null],[17,"SIGTTIN","","",null,null],[17,"SIGTTOU","","",null,null],[17,"SIGXCPU","","",null,null],[17,"SIGXFSZ","","",null,null],[17,"SIGVTALRM","","",null,null],[17,"SIGPROF","","",null,null],[17,"SIGWINCH","","",null,null],[17,"SIGCHLD","","",null,null],[17,"SIGBUS","","",null,null],[17,"SIGUSR1","","",null,null],[17,"SIGUSR2","","",null,null],[17,"SIGCONT","","",null,null],[17,"SIGSTOP","","",null,null],[17,"SIGTSTP","","",null,null],[17,"SIGURG","","",null,null],[17,"SIGIO","","",null,null],[17,"SIGSYS","","",null,null],[17,"SIGSTKFLT","","",null,null],[17,"SIGUNUSED","","",null,null],[17,"SIGPOLL","","",null,null],[17,"SIGPWR","","",null,null],[17,"SIG_SETMASK","","",null,null],[17,"SIG_BLOCK","","",null,null],[17,"SIG_UNBLOCK","","",null,null],[17,"POLLWRNORM","","",null,null],[17,"POLLWRBAND","","",null,null],[17,"O_ASYNC","","",null,null],[17,"O_NDELAY","","",null,null],[17,"PTRACE_DETACH","","",null,null],[17,"EFD_NONBLOCK","","",null,null],[17,"F_GETLK","","",null,null],[17,"F_GETOWN","","",null,null],[17,"F_SETOWN","","",null,null],[17,"F_SETLK","","",null,null],[17,"F_SETLKW","","",null,null],[17,"F_OFD_GETLK","","",null,null],[17,"F_OFD_SETLK","","",null,null],[17,"F_OFD_SETLKW","","",null,null],[17,"F_RDLCK","","",null,null],[17,"F_WRLCK","","",null,null],[17,"F_UNLCK","","",null,null],[17,"SFD_NONBLOCK","","",null,null],[17,"TCSANOW","","",null,null],[17,"TCSADRAIN","","",null,null],[17,"TCSAFLUSH","","",null,null],[17,"TIOCLINUX","","",null,null],[17,"TIOCGSERIAL","","",null,null],[17,"TIOCEXCL","","",null,null],[17,"TIOCNXCL","","",null,null],[17,"TIOCSCTTY","","",null,null],[17,"TIOCSTI","","",null,null],[17,"TIOCMGET","","",null,null],[17,"TIOCMBIS","","",null,null],[17,"TIOCMBIC","","",null,null],[17,"TIOCMSET","","",null,null],[17,"TIOCCONS","","",null,null],[17,"TIOCM_ST","","",null,null],[17,"TIOCM_SR","","",null,null],[17,"TIOCM_CTS","","",null,null],[17,"TIOCM_CAR","","",null,null],[17,"TIOCM_RNG","","",null,null],[17,"TIOCM_DSR","","",null,null],[17,"SFD_CLOEXEC","","",null,null],[17,"NCCS","","",null,null],[17,"O_TRUNC","","",null,null],[17,"O_CLOEXEC","","",null,null],[17,"EBFONT","","",null,null],[17,"ENOSTR","","",null,null],[17,"ENODATA","","",null,null],[17,"ETIME","","",null,null],[17,"ENOSR","","",null,null],[17,"ENONET","","",null,null],[17,"ENOPKG","","",null,null],[17,"EREMOTE","","",null,null],[17,"ENOLINK","","",null,null],[17,"EADV","","",null,null],[17,"ESRMNT","","",null,null],[17,"ECOMM","","",null,null],[17,"EPROTO","","",null,null],[17,"EDOTDOT","","",null,null],[17,"SA_NODEFER","","",null,null],[17,"SA_RESETHAND","","",null,null],[17,"SA_RESTART","","",null,null],[17,"SA_NOCLDSTOP","","",null,null],[17,"EPOLL_CLOEXEC","","",null,null],[17,"EFD_CLOEXEC","","",null,null],[17,"__SIZEOF_PTHREAD_CONDATTR_T","","",null,null],[17,"__SIZEOF_PTHREAD_MUTEXATTR_T","","",null,null],[17,"O_DIRECT","","",null,null],[17,"O_DIRECTORY","","",null,null],[17,"O_NOFOLLOW","","",null,null],[17,"MAP_HUGETLB","","",null,null],[17,"MAP_LOCKED","","",null,null],[17,"MAP_NORESERVE","","",null,null],[17,"MAP_32BIT","","",null,null],[17,"MAP_ANON","","",null,null],[17,"MAP_ANONYMOUS","","",null,null],[17,"MAP_DENYWRITE","","",null,null],[17,"MAP_EXECUTABLE","","",null,null],[17,"MAP_POPULATE","","",null,null],[17,"MAP_NONBLOCK","","",null,null],[17,"MAP_STACK","","",null,null],[17,"MAP_SYNC","","",null,null],[17,"EDEADLOCK","","",null,null],[17,"EUCLEAN","","",null,null],[17,"ENOTNAM","","",null,null],[17,"ENAVAIL","","",null,null],[17,"EISNAM","","",null,null],[17,"EREMOTEIO","","",null,null],[17,"FIOCLEX","","",null,null],[17,"FIONCLEX","","",null,null],[17,"FIONBIO","","",null,null],[17,"PTRACE_GETFPREGS","","",null,null],[17,"PTRACE_SETFPREGS","","",null,null],[17,"PTRACE_GETFPXREGS","","",null,null],[17,"PTRACE_SETFPXREGS","","",null,null],[17,"PTRACE_GETREGS","","",null,null],[17,"PTRACE_SETREGS","","",null,null],[17,"PTRACE_PEEKSIGINFO_SHARED","","",null,null],[17,"PTRACE_SYSEMU","","",null,null],[17,"PTRACE_SYSEMU_SINGLESTEP","","",null,null],[17,"MCL_CURRENT","","",null,null],[17,"MCL_FUTURE","","",null,null],[17,"SIGSTKSZ","","",null,null],[17,"MINSIGSTKSZ","","",null,null],[17,"CBAUD","","",null,null],[17,"TAB1","","",null,null],[17,"TAB2","","",null,null],[17,"TAB3","","",null,null],[17,"CR1","","",null,null],[17,"CR2","","",null,null],[17,"CR3","","",null,null],[17,"FF1","","",null,null],[17,"BS1","","",null,null],[17,"VT1","","",null,null],[17,"VWERASE","","",null,null],[17,"VREPRINT","","",null,null],[17,"VSUSP","","",null,null],[17,"VSTART","","",null,null],[17,"VSTOP","","",null,null],[17,"VDISCARD","","",null,null],[17,"VTIME","","",null,null],[17,"IXON","","",null,null],[17,"IXOFF","","",null,null],[17,"ONLCR","","",null,null],[17,"CSIZE","","",null,null],[17,"CS6","","",null,null],[17,"CS7","","",null,null],[17,"CS8","","",null,null],[17,"CSTOPB","","",null,null],[17,"CREAD","","",null,null],[17,"PARENB","","",null,null],[17,"PARODD","","",null,null],[17,"HUPCL","","",null,null],[17,"CLOCAL","","",null,null],[17,"ECHOKE","","",null,null],[17,"ECHOE","","",null,null],[17,"ECHOK","","",null,null],[17,"ECHONL","","",null,null],[17,"ECHOPRT","","",null,null],[17,"ECHOCTL","","",null,null],[17,"ISIG","","",null,null],[17,"ICANON","","",null,null],[17,"PENDIN","","",null,null],[17,"NOFLSH","","",null,null],[17,"CIBAUD","","",null,null],[17,"CBAUDEX","","",null,null],[17,"VSWTC","","",null,null],[17,"OLCUC","","",null,null],[17,"NLDLY","","",null,null],[17,"CRDLY","","",null,null],[17,"TABDLY","","",null,null],[17,"BSDLY","","",null,null],[17,"FFDLY","","",null,null],[17,"VTDLY","","",null,null],[17,"XTABS","","",null,null],[17,"B0","","",null,null],[17,"B50","","",null,null],[17,"B75","","",null,null],[17,"B110","","",null,null],[17,"B134","","",null,null],[17,"B150","","",null,null],[17,"B200","","",null,null],[17,"B300","","",null,null],[17,"B600","","",null,null],[17,"B1200","","",null,null],[17,"B1800","","",null,null],[17,"B2400","","",null,null],[17,"B4800","","",null,null],[17,"B9600","","",null,null],[17,"B19200","","",null,null],[17,"B38400","","",null,null],[17,"EXTA","","",null,null],[17,"EXTB","","",null,null],[17,"BOTHER","","",null,null],[17,"B57600","","",null,null],[17,"B115200","","",null,null],[17,"B230400","","",null,null],[17,"B460800","","",null,null],[17,"B500000","","",null,null],[17,"B576000","","",null,null],[17,"B921600","","",null,null],[17,"B1000000","","",null,null],[17,"B1152000","","",null,null],[17,"B1500000","","",null,null],[17,"B2000000","","",null,null],[17,"B2500000","","",null,null],[17,"B3000000","","",null,null],[17,"B3500000","","",null,null],[17,"B4000000","","",null,null],[17,"VEOL","","",null,null],[17,"VEOL2","","",null,null],[17,"VMIN","","",null,null],[17,"IEXTEN","","",null,null],[17,"TOSTOP","","",null,null],[17,"FLUSHO","","",null,null],[17,"EXTPROC","","",null,null],[17,"TCGETS","","",null,null],[17,"TCSETS","","",null,null],[17,"TCSETSW","","",null,null],[17,"TCSETSF","","",null,null],[17,"TCGETA","","",null,null],[17,"TCSETA","","",null,null],[17,"TCSETAW","","",null,null],[17,"TCSETAF","","",null,null],[17,"TCSBRK","","",null,null],[17,"TCXONC","","",null,null],[17,"TCFLSH","","",null,null],[17,"TIOCINQ","","",null,null],[17,"TIOCGPGRP","","",null,null],[17,"TIOCSPGRP","","",null,null],[17,"TIOCOUTQ","","",null,null],[17,"TIOCGWINSZ","","",null,null],[17,"TIOCSWINSZ","","",null,null],[17,"FIONREAD","","",null,null],[17,"TIOCSBRK","","",null,null],[17,"TIOCCBRK","","",null,null],[17,"R15","","",null,null],[17,"R14","","",null,null],[17,"R13","","",null,null],[17,"R12","","",null,null],[17,"RBP","","",null,null],[17,"RBX","","",null,null],[17,"R11","","",null,null],[17,"R10","","",null,null],[17,"R9","","",null,null],[17,"R8","","",null,null],[17,"RAX","","",null,null],[17,"RCX","","",null,null],[17,"RDX","","",null,null],[17,"RSI","","",null,null],[17,"RDI","","",null,null],[17,"ORIG_RAX","","",null,null],[17,"RIP","","",null,null],[17,"CS","","",null,null],[17,"EFLAGS","","",null,null],[17,"RSP","","",null,null],[17,"SS","","",null,null],[17,"FS_BASE","","",null,null],[17,"GS_BASE","","",null,null],[17,"DS","","",null,null],[17,"ES","","",null,null],[17,"FS","","",null,null],[17,"GS","","",null,null],[17,"REG_R8","","",null,null],[17,"REG_R9","","",null,null],[17,"REG_R10","","",null,null],[17,"REG_R11","","",null,null],[17,"REG_R12","","",null,null],[17,"REG_R13","","",null,null],[17,"REG_R14","","",null,null],[17,"REG_R15","","",null,null],[17,"REG_RDI","","",null,null],[17,"REG_RSI","","",null,null],[17,"REG_RBP","","",null,null],[17,"REG_RBX","","",null,null],[17,"REG_RDX","","",null,null],[17,"REG_RAX","","",null,null],[17,"REG_RCX","","",null,null],[17,"REG_RSP","","",null,null],[17,"REG_RIP","","",null,null],[17,"REG_EFL","","",null,null],[17,"REG_CSGSFS","","",null,null],[17,"REG_ERR","","",null,null],[17,"REG_TRAPNO","","",null,null],[17,"REG_OLDMASK","","",null,null],[17,"REG_CR2","","",null,null],[17,"__SIZEOF_PTHREAD_MUTEX_T","","",null,null],[17,"__SIZEOF_PTHREAD_RWLOCK_T","","",null,null],[17,"PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP","","",null,null],[17,"PTHREAD_ERRORCHECK_MUTEX_INITIALIZER_NP","","",null,null],[17,"PTHREAD_ADAPTIVE_MUTEX_INITIALIZER_NP","","",null,null],[17,"SYS_read","","",null,null],[17,"SYS_write","","",null,null],[17,"SYS_open","","",null,null],[17,"SYS_close","","",null,null],[17,"SYS_stat","","",null,null],[17,"SYS_fstat","","",null,null],[17,"SYS_lstat","","",null,null],[17,"SYS_poll","","",null,null],[17,"SYS_lseek","","",null,null],[17,"SYS_mmap","","",null,null],[17,"SYS_mprotect","","",null,null],[17,"SYS_munmap","","",null,null],[17,"SYS_brk","","",null,null],[17,"SYS_rt_sigaction","","",null,null],[17,"SYS_rt_sigprocmask","","",null,null],[17,"SYS_rt_sigreturn","","",null,null],[17,"SYS_ioctl","","",null,null],[17,"SYS_pread64","","",null,null],[17,"SYS_pwrite64","","",null,null],[17,"SYS_readv","","",null,null],[17,"SYS_writev","","",null,null],[17,"SYS_access","","",null,null],[17,"SYS_pipe","","",null,null],[17,"SYS_select","","",null,null],[17,"SYS_sched_yield","","",null,null],[17,"SYS_mremap","","",null,null],[17,"SYS_msync","","",null,null],[17,"SYS_mincore","","",null,null],[17,"SYS_madvise","","",null,null],[17,"SYS_shmget","","",null,null],[17,"SYS_shmat","","",null,null],[17,"SYS_shmctl","","",null,null],[17,"SYS_dup","","",null,null],[17,"SYS_dup2","","",null,null],[17,"SYS_pause","","",null,null],[17,"SYS_nanosleep","","",null,null],[17,"SYS_getitimer","","",null,null],[17,"SYS_alarm","","",null,null],[17,"SYS_setitimer","","",null,null],[17,"SYS_getpid","","",null,null],[17,"SYS_sendfile","","",null,null],[17,"SYS_socket","","",null,null],[17,"SYS_connect","","",null,null],[17,"SYS_accept","","",null,null],[17,"SYS_sendto","","",null,null],[17,"SYS_recvfrom","","",null,null],[17,"SYS_sendmsg","","",null,null],[17,"SYS_recvmsg","","",null,null],[17,"SYS_shutdown","","",null,null],[17,"SYS_bind","","",null,null],[17,"SYS_listen","","",null,null],[17,"SYS_getsockname","","",null,null],[17,"SYS_getpeername","","",null,null],[17,"SYS_socketpair","","",null,null],[17,"SYS_setsockopt","","",null,null],[17,"SYS_getsockopt","","",null,null],[17,"SYS_clone","","",null,null],[17,"SYS_fork","","",null,null],[17,"SYS_vfork","","",null,null],[17,"SYS_execve","","",null,null],[17,"SYS_exit","","",null,null],[17,"SYS_wait4","","",null,null],[17,"SYS_kill","","",null,null],[17,"SYS_uname","","",null,null],[17,"SYS_semget","","",null,null],[17,"SYS_semop","","",null,null],[17,"SYS_semctl","","",null,null],[17,"SYS_shmdt","","",null,null],[17,"SYS_msgget","","",null,null],[17,"SYS_msgsnd","","",null,null],[17,"SYS_msgrcv","","",null,null],[17,"SYS_msgctl","","",null,null],[17,"SYS_fcntl","","",null,null],[17,"SYS_flock","","",null,null],[17,"SYS_fsync","","",null,null],[17,"SYS_fdatasync","","",null,null],[17,"SYS_truncate","","",null,null],[17,"SYS_ftruncate","","",null,null],[17,"SYS_getdents","","",null,null],[17,"SYS_getcwd","","",null,null],[17,"SYS_chdir","","",null,null],[17,"SYS_fchdir","","",null,null],[17,"SYS_rename","","",null,null],[17,"SYS_mkdir","","",null,null],[17,"SYS_rmdir","","",null,null],[17,"SYS_creat","","",null,null],[17,"SYS_link","","",null,null],[17,"SYS_unlink","","",null,null],[17,"SYS_symlink","","",null,null],[17,"SYS_readlink","","",null,null],[17,"SYS_chmod","","",null,null],[17,"SYS_fchmod","","",null,null],[17,"SYS_chown","","",null,null],[17,"SYS_fchown","","",null,null],[17,"SYS_lchown","","",null,null],[17,"SYS_umask","","",null,null],[17,"SYS_gettimeofday","","",null,null],[17,"SYS_getrlimit","","",null,null],[17,"SYS_getrusage","","",null,null],[17,"SYS_sysinfo","","",null,null],[17,"SYS_times","","",null,null],[17,"SYS_ptrace","","",null,null],[17,"SYS_getuid","","",null,null],[17,"SYS_syslog","","",null,null],[17,"SYS_getgid","","",null,null],[17,"SYS_setuid","","",null,null],[17,"SYS_setgid","","",null,null],[17,"SYS_geteuid","","",null,null],[17,"SYS_getegid","","",null,null],[17,"SYS_setpgid","","",null,null],[17,"SYS_getppid","","",null,null],[17,"SYS_getpgrp","","",null,null],[17,"SYS_setsid","","",null,null],[17,"SYS_setreuid","","",null,null],[17,"SYS_setregid","","",null,null],[17,"SYS_getgroups","","",null,null],[17,"SYS_setgroups","","",null,null],[17,"SYS_setresuid","","",null,null],[17,"SYS_getresuid","","",null,null],[17,"SYS_setresgid","","",null,null],[17,"SYS_getresgid","","",null,null],[17,"SYS_getpgid","","",null,null],[17,"SYS_setfsuid","","",null,null],[17,"SYS_setfsgid","","",null,null],[17,"SYS_getsid","","",null,null],[17,"SYS_capget","","",null,null],[17,"SYS_capset","","",null,null],[17,"SYS_rt_sigpending","","",null,null],[17,"SYS_rt_sigtimedwait","","",null,null],[17,"SYS_rt_sigqueueinfo","","",null,null],[17,"SYS_rt_sigsuspend","","",null,null],[17,"SYS_sigaltstack","","",null,null],[17,"SYS_utime","","",null,null],[17,"SYS_mknod","","",null,null],[17,"SYS_uselib","","",null,null],[17,"SYS_personality","","",null,null],[17,"SYS_ustat","","",null,null],[17,"SYS_statfs","","",null,null],[17,"SYS_fstatfs","","",null,null],[17,"SYS_sysfs","","",null,null],[17,"SYS_getpriority","","",null,null],[17,"SYS_setpriority","","",null,null],[17,"SYS_sched_setparam","","",null,null],[17,"SYS_sched_getparam","","",null,null],[17,"SYS_sched_setscheduler","","",null,null],[17,"SYS_sched_getscheduler","","",null,null],[17,"SYS_sched_get_priority_max","","",null,null],[17,"SYS_sched_get_priority_min","","",null,null],[17,"SYS_sched_rr_get_interval","","",null,null],[17,"SYS_mlock","","",null,null],[17,"SYS_munlock","","",null,null],[17,"SYS_mlockall","","",null,null],[17,"SYS_munlockall","","",null,null],[17,"SYS_vhangup","","",null,null],[17,"SYS_modify_ldt","","",null,null],[17,"SYS_pivot_root","","",null,null],[17,"SYS__sysctl","","",null,null],[17,"SYS_prctl","","",null,null],[17,"SYS_arch_prctl","","",null,null],[17,"SYS_adjtimex","","",null,null],[17,"SYS_setrlimit","","",null,null],[17,"SYS_chroot","","",null,null],[17,"SYS_sync","","",null,null],[17,"SYS_acct","","",null,null],[17,"SYS_settimeofday","","",null,null],[17,"SYS_mount","","",null,null],[17,"SYS_umount2","","",null,null],[17,"SYS_swapon","","",null,null],[17,"SYS_swapoff","","",null,null],[17,"SYS_reboot","","",null,null],[17,"SYS_sethostname","","",null,null],[17,"SYS_setdomainname","","",null,null],[17,"SYS_iopl","","",null,null],[17,"SYS_ioperm","","",null,null],[17,"SYS_create_module","","",null,null],[17,"SYS_init_module","","",null,null],[17,"SYS_delete_module","","",null,null],[17,"SYS_get_kernel_syms","","",null,null],[17,"SYS_query_module","","",null,null],[17,"SYS_quotactl","","",null,null],[17,"SYS_nfsservctl","","",null,null],[17,"SYS_getpmsg","","",null,null],[17,"SYS_putpmsg","","",null,null],[17,"SYS_afs_syscall","","",null,null],[17,"SYS_tuxcall","","",null,null],[17,"SYS_security","","",null,null],[17,"SYS_gettid","","",null,null],[17,"SYS_readahead","","",null,null],[17,"SYS_setxattr","","",null,null],[17,"SYS_lsetxattr","","",null,null],[17,"SYS_fsetxattr","","",null,null],[17,"SYS_getxattr","","",null,null],[17,"SYS_lgetxattr","","",null,null],[17,"SYS_fgetxattr","","",null,null],[17,"SYS_listxattr","","",null,null],[17,"SYS_llistxattr","","",null,null],[17,"SYS_flistxattr","","",null,null],[17,"SYS_removexattr","","",null,null],[17,"SYS_lremovexattr","","",null,null],[17,"SYS_fremovexattr","","",null,null],[17,"SYS_tkill","","",null,null],[17,"SYS_time","","",null,null],[17,"SYS_futex","","",null,null],[17,"SYS_sched_setaffinity","","",null,null],[17,"SYS_sched_getaffinity","","",null,null],[17,"SYS_set_thread_area","","",null,null],[17,"SYS_io_setup","","",null,null],[17,"SYS_io_destroy","","",null,null],[17,"SYS_io_getevents","","",null,null],[17,"SYS_io_submit","","",null,null],[17,"SYS_io_cancel","","",null,null],[17,"SYS_get_thread_area","","",null,null],[17,"SYS_lookup_dcookie","","",null,null],[17,"SYS_epoll_create","","",null,null],[17,"SYS_epoll_ctl_old","","",null,null],[17,"SYS_epoll_wait_old","","",null,null],[17,"SYS_remap_file_pages","","",null,null],[17,"SYS_getdents64","","",null,null],[17,"SYS_set_tid_address","","",null,null],[17,"SYS_restart_syscall","","",null,null],[17,"SYS_semtimedop","","",null,null],[17,"SYS_fadvise64","","",null,null],[17,"SYS_timer_create","","",null,null],[17,"SYS_timer_settime","","",null,null],[17,"SYS_timer_gettime","","",null,null],[17,"SYS_timer_getoverrun","","",null,null],[17,"SYS_timer_delete","","",null,null],[17,"SYS_clock_settime","","",null,null],[17,"SYS_clock_gettime","","",null,null],[17,"SYS_clock_getres","","",null,null],[17,"SYS_clock_nanosleep","","",null,null],[17,"SYS_exit_group","","",null,null],[17,"SYS_epoll_wait","","",null,null],[17,"SYS_epoll_ctl","","",null,null],[17,"SYS_tgkill","","",null,null],[17,"SYS_utimes","","",null,null],[17,"SYS_vserver","","",null,null],[17,"SYS_mbind","","",null,null],[17,"SYS_set_mempolicy","","",null,null],[17,"SYS_get_mempolicy","","",null,null],[17,"SYS_mq_open","","",null,null],[17,"SYS_mq_unlink","","",null,null],[17,"SYS_mq_timedsend","","",null,null],[17,"SYS_mq_timedreceive","","",null,null],[17,"SYS_mq_notify","","",null,null],[17,"SYS_mq_getsetattr","","",null,null],[17,"SYS_kexec_load","","",null,null],[17,"SYS_waitid","","",null,null],[17,"SYS_add_key","","",null,null],[17,"SYS_request_key","","",null,null],[17,"SYS_keyctl","","",null,null],[17,"SYS_ioprio_set","","",null,null],[17,"SYS_ioprio_get","","",null,null],[17,"SYS_inotify_init","","",null,null],[17,"SYS_inotify_add_watch","","",null,null],[17,"SYS_inotify_rm_watch","","",null,null],[17,"SYS_migrate_pages","","",null,null],[17,"SYS_openat","","",null,null],[17,"SYS_mkdirat","","",null,null],[17,"SYS_mknodat","","",null,null],[17,"SYS_fchownat","","",null,null],[17,"SYS_futimesat","","",null,null],[17,"SYS_newfstatat","","",null,null],[17,"SYS_unlinkat","","",null,null],[17,"SYS_renameat","","",null,null],[17,"SYS_linkat","","",null,null],[17,"SYS_symlinkat","","",null,null],[17,"SYS_readlinkat","","",null,null],[17,"SYS_fchmodat","","",null,null],[17,"SYS_faccessat","","",null,null],[17,"SYS_pselect6","","",null,null],[17,"SYS_ppoll","","",null,null],[17,"SYS_unshare","","",null,null],[17,"SYS_set_robust_list","","",null,null],[17,"SYS_get_robust_list","","",null,null],[17,"SYS_splice","","",null,null],[17,"SYS_tee","","",null,null],[17,"SYS_sync_file_range","","",null,null],[17,"SYS_vmsplice","","",null,null],[17,"SYS_move_pages","","",null,null],[17,"SYS_utimensat","","",null,null],[17,"SYS_epoll_pwait","","",null,null],[17,"SYS_signalfd","","",null,null],[17,"SYS_timerfd_create","","",null,null],[17,"SYS_eventfd","","",null,null],[17,"SYS_fallocate","","",null,null],[17,"SYS_timerfd_settime","","",null,null],[17,"SYS_timerfd_gettime","","",null,null],[17,"SYS_accept4","","",null,null],[17,"SYS_signalfd4","","",null,null],[17,"SYS_eventfd2","","",null,null],[17,"SYS_epoll_create1","","",null,null],[17,"SYS_dup3","","",null,null],[17,"SYS_pipe2","","",null,null],[17,"SYS_inotify_init1","","",null,null],[17,"SYS_preadv","","",null,null],[17,"SYS_pwritev","","",null,null],[17,"SYS_rt_tgsigqueueinfo","","",null,null],[17,"SYS_perf_event_open","","",null,null],[17,"SYS_recvmmsg","","",null,null],[17,"SYS_fanotify_init","","",null,null],[17,"SYS_fanotify_mark","","",null,null],[17,"SYS_prlimit64","","",null,null],[17,"SYS_name_to_handle_at","","",null,null],[17,"SYS_open_by_handle_at","","",null,null],[17,"SYS_clock_adjtime","","",null,null],[17,"SYS_syncfs","","",null,null],[17,"SYS_sendmmsg","","",null,null],[17,"SYS_setns","","",null,null],[17,"SYS_getcpu","","",null,null],[17,"SYS_process_vm_readv","","",null,null],[17,"SYS_process_vm_writev","","",null,null],[17,"SYS_kcmp","","",null,null],[17,"SYS_finit_module","","",null,null],[17,"SYS_sched_setattr","","",null,null],[17,"SYS_sched_getattr","","",null,null],[17,"SYS_renameat2","","",null,null],[17,"SYS_seccomp","","",null,null],[17,"SYS_getrandom","","",null,null],[17,"SYS_memfd_create","","",null,null],[17,"SYS_kexec_file_load","","",null,null],[17,"SYS_bpf","","",null,null],[17,"SYS_execveat","","",null,null],[17,"SYS_userfaultfd","","",null,null],[17,"SYS_membarrier","","",null,null],[17,"SYS_mlock2","","",null,null],[17,"SYS_copy_file_range","","",null,null],[17,"SYS_preadv2","","",null,null],[17,"SYS_pwritev2","","",null,null],[17,"SYS_pkey_mprotect","","",null,null],[17,"SYS_pkey_alloc","","",null,null],[17,"SYS_pkey_free","","",null,null],[17,"SYS_statx","","",null,null],[11,"from","","",139,[[["t"]],["t"]]],[11,"try_from","","",139,[[["u"]],["result"]]],[11,"into","","",139,[[],["u"]]],[11,"try_into","","",139,[[],["result"]]],[11,"borrow","","",139,[[["self"]],["t"]]],[11,"borrow_mut","","",139,[[["self"]],["t"]]],[11,"type_id","","",139,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"into","","",0,[[],["u"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"into","","",1,[[],["u"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"into","","",2,[[],["u"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"into","","",3,[[],["u"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"into","","",4,[[],["u"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"into","","",5,[[],["u"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"into","","",6,[[],["u"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"into","","",7,[[],["u"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"into","","",8,[[],["u"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"into","","",9,[[],["u"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"into","","",10,[[],["u"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"into","","",11,[[],["u"]]],[11,"try_into","","",11,[[],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"type_id","","",11,[[["self"]],["typeid"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"into","","",12,[[],["u"]]],[11,"try_into","","",12,[[],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"type_id","","",12,[[["self"]],["typeid"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"into","","",13,[[],["u"]]],[11,"try_into","","",13,[[],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"type_id","","",13,[[["self"]],["typeid"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"into","","",14,[[],["u"]]],[11,"try_into","","",14,[[],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"type_id","","",14,[[["self"]],["typeid"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"into","","",15,[[],["u"]]],[11,"try_into","","",15,[[],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"type_id","","",15,[[["self"]],["typeid"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"into","","",16,[[],["u"]]],[11,"try_into","","",16,[[],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"type_id","","",16,[[["self"]],["typeid"]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"into","","",17,[[],["u"]]],[11,"try_into","","",17,[[],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"type_id","","",17,[[["self"]],["typeid"]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"into","","",18,[[],["u"]]],[11,"try_into","","",18,[[],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"type_id","","",18,[[["self"]],["typeid"]]],[11,"from","","",19,[[["t"]],["t"]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"into","","",19,[[],["u"]]],[11,"try_into","","",19,[[],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"type_id","","",19,[[["self"]],["typeid"]]],[11,"from","","",20,[[["t"]],["t"]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"into","","",20,[[],["u"]]],[11,"try_into","","",20,[[],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"type_id","","",20,[[["self"]],["typeid"]]],[11,"from","","",21,[[["t"]],["t"]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"into","","",21,[[],["u"]]],[11,"try_into","","",21,[[],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"type_id","","",21,[[["self"]],["typeid"]]],[11,"from","","",22,[[["t"]],["t"]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"into","","",22,[[],["u"]]],[11,"try_into","","",22,[[],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"type_id","","",22,[[["self"]],["typeid"]]],[11,"from","","",23,[[["t"]],["t"]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"into","","",23,[[],["u"]]],[11,"try_into","","",23,[[],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"type_id","","",23,[[["self"]],["typeid"]]],[11,"from","","",24,[[["t"]],["t"]]],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"into","","",24,[[],["u"]]],[11,"try_into","","",24,[[],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"type_id","","",24,[[["self"]],["typeid"]]],[11,"from","","",140,[[["t"]],["t"]]],[11,"try_from","","",140,[[["u"]],["result"]]],[11,"into","","",140,[[],["u"]]],[11,"try_into","","",140,[[],["result"]]],[11,"borrow","","",140,[[["self"]],["t"]]],[11,"borrow_mut","","",140,[[["self"]],["t"]]],[11,"type_id","","",140,[[["self"]],["typeid"]]],[11,"from","","",25,[[["t"]],["t"]]],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"into","","",25,[[],["u"]]],[11,"try_into","","",25,[[],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"type_id","","",25,[[["self"]],["typeid"]]],[11,"from","","",26,[[["t"]],["t"]]],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"into","","",26,[[],["u"]]],[11,"try_into","","",26,[[],["result"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"type_id","","",26,[[["self"]],["typeid"]]],[11,"from","","",27,[[["t"]],["t"]]],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"into","","",27,[[],["u"]]],[11,"try_into","","",27,[[],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"type_id","","",27,[[["self"]],["typeid"]]],[11,"from","","",28,[[["t"]],["t"]]],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"into","","",28,[[],["u"]]],[11,"try_into","","",28,[[],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"type_id","","",28,[[["self"]],["typeid"]]],[11,"from","","",29,[[["t"]],["t"]]],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"into","","",29,[[],["u"]]],[11,"try_into","","",29,[[],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"type_id","","",29,[[["self"]],["typeid"]]],[11,"from","","",30,[[["t"]],["t"]]],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"into","","",30,[[],["u"]]],[11,"try_into","","",30,[[],["result"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"type_id","","",30,[[["self"]],["typeid"]]],[11,"from","","",141,[[["t"]],["t"]]],[11,"try_from","","",141,[[["u"]],["result"]]],[11,"into","","",141,[[],["u"]]],[11,"try_into","","",141,[[],["result"]]],[11,"borrow","","",141,[[["self"]],["t"]]],[11,"borrow_mut","","",141,[[["self"]],["t"]]],[11,"type_id","","",141,[[["self"]],["typeid"]]],[11,"from","","",31,[[["t"]],["t"]]],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"into","","",31,[[],["u"]]],[11,"try_into","","",31,[[],["result"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"type_id","","",31,[[["self"]],["typeid"]]],[11,"from","","",32,[[["t"]],["t"]]],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"into","","",32,[[],["u"]]],[11,"try_into","","",32,[[],["result"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"type_id","","",32,[[["self"]],["typeid"]]],[11,"from","","",33,[[["t"]],["t"]]],[11,"try_from","","",33,[[["u"]],["result"]]],[11,"into","","",33,[[],["u"]]],[11,"try_into","","",33,[[],["result"]]],[11,"borrow","","",33,[[["self"]],["t"]]],[11,"borrow_mut","","",33,[[["self"]],["t"]]],[11,"type_id","","",33,[[["self"]],["typeid"]]],[11,"from","","",34,[[["t"]],["t"]]],[11,"try_from","","",34,[[["u"]],["result"]]],[11,"into","","",34,[[],["u"]]],[11,"try_into","","",34,[[],["result"]]],[11,"borrow","","",34,[[["self"]],["t"]]],[11,"borrow_mut","","",34,[[["self"]],["t"]]],[11,"type_id","","",34,[[["self"]],["typeid"]]],[11,"from","","",35,[[["t"]],["t"]]],[11,"try_from","","",35,[[["u"]],["result"]]],[11,"into","","",35,[[],["u"]]],[11,"try_into","","",35,[[],["result"]]],[11,"borrow","","",35,[[["self"]],["t"]]],[11,"borrow_mut","","",35,[[["self"]],["t"]]],[11,"type_id","","",35,[[["self"]],["typeid"]]],[11,"from","","",36,[[["t"]],["t"]]],[11,"try_from","","",36,[[["u"]],["result"]]],[11,"into","","",36,[[],["u"]]],[11,"try_into","","",36,[[],["result"]]],[11,"borrow","","",36,[[["self"]],["t"]]],[11,"borrow_mut","","",36,[[["self"]],["t"]]],[11,"type_id","","",36,[[["self"]],["typeid"]]],[11,"from","","",37,[[["t"]],["t"]]],[11,"try_from","","",37,[[["u"]],["result"]]],[11,"into","","",37,[[],["u"]]],[11,"try_into","","",37,[[],["result"]]],[11,"borrow","","",37,[[["self"]],["t"]]],[11,"borrow_mut","","",37,[[["self"]],["t"]]],[11,"type_id","","",37,[[["self"]],["typeid"]]],[11,"from","","",38,[[["t"]],["t"]]],[11,"try_from","","",38,[[["u"]],["result"]]],[11,"into","","",38,[[],["u"]]],[11,"try_into","","",38,[[],["result"]]],[11,"borrow","","",38,[[["self"]],["t"]]],[11,"borrow_mut","","",38,[[["self"]],["t"]]],[11,"type_id","","",38,[[["self"]],["typeid"]]],[11,"from","","",39,[[["t"]],["t"]]],[11,"try_from","","",39,[[["u"]],["result"]]],[11,"into","","",39,[[],["u"]]],[11,"try_into","","",39,[[],["result"]]],[11,"borrow","","",39,[[["self"]],["t"]]],[11,"borrow_mut","","",39,[[["self"]],["t"]]],[11,"type_id","","",39,[[["self"]],["typeid"]]],[11,"from","","",40,[[["t"]],["t"]]],[11,"try_from","","",40,[[["u"]],["result"]]],[11,"into","","",40,[[],["u"]]],[11,"try_into","","",40,[[],["result"]]],[11,"borrow","","",40,[[["self"]],["t"]]],[11,"borrow_mut","","",40,[[["self"]],["t"]]],[11,"type_id","","",40,[[["self"]],["typeid"]]],[11,"from","","",41,[[["t"]],["t"]]],[11,"try_from","","",41,[[["u"]],["result"]]],[11,"into","","",41,[[],["u"]]],[11,"try_into","","",41,[[],["result"]]],[11,"borrow","","",41,[[["self"]],["t"]]],[11,"borrow_mut","","",41,[[["self"]],["t"]]],[11,"type_id","","",41,[[["self"]],["typeid"]]],[11,"from","","",42,[[["t"]],["t"]]],[11,"try_from","","",42,[[["u"]],["result"]]],[11,"into","","",42,[[],["u"]]],[11,"try_into","","",42,[[],["result"]]],[11,"borrow","","",42,[[["self"]],["t"]]],[11,"borrow_mut","","",42,[[["self"]],["t"]]],[11,"type_id","","",42,[[["self"]],["typeid"]]],[11,"from","","",43,[[["t"]],["t"]]],[11,"try_from","","",43,[[["u"]],["result"]]],[11,"into","","",43,[[],["u"]]],[11,"try_into","","",43,[[],["result"]]],[11,"borrow","","",43,[[["self"]],["t"]]],[11,"borrow_mut","","",43,[[["self"]],["t"]]],[11,"type_id","","",43,[[["self"]],["typeid"]]],[11,"from","","",44,[[["t"]],["t"]]],[11,"try_from","","",44,[[["u"]],["result"]]],[11,"into","","",44,[[],["u"]]],[11,"try_into","","",44,[[],["result"]]],[11,"borrow","","",44,[[["self"]],["t"]]],[11,"borrow_mut","","",44,[[["self"]],["t"]]],[11,"type_id","","",44,[[["self"]],["typeid"]]],[11,"from","","",45,[[["t"]],["t"]]],[11,"try_from","","",45,[[["u"]],["result"]]],[11,"into","","",45,[[],["u"]]],[11,"try_into","","",45,[[],["result"]]],[11,"borrow","","",45,[[["self"]],["t"]]],[11,"borrow_mut","","",45,[[["self"]],["t"]]],[11,"type_id","","",45,[[["self"]],["typeid"]]],[11,"from","","",46,[[["t"]],["t"]]],[11,"try_from","","",46,[[["u"]],["result"]]],[11,"into","","",46,[[],["u"]]],[11,"try_into","","",46,[[],["result"]]],[11,"borrow","","",46,[[["self"]],["t"]]],[11,"borrow_mut","","",46,[[["self"]],["t"]]],[11,"type_id","","",46,[[["self"]],["typeid"]]],[11,"from","","",142,[[["t"]],["t"]]],[11,"try_from","","",142,[[["u"]],["result"]]],[11,"into","","",142,[[],["u"]]],[11,"try_into","","",142,[[],["result"]]],[11,"borrow","","",142,[[["self"]],["t"]]],[11,"borrow_mut","","",142,[[["self"]],["t"]]],[11,"type_id","","",142,[[["self"]],["typeid"]]],[11,"from","","",47,[[["t"]],["t"]]],[11,"try_from","","",47,[[["u"]],["result"]]],[11,"into","","",47,[[],["u"]]],[11,"try_into","","",47,[[],["result"]]],[11,"borrow","","",47,[[["self"]],["t"]]],[11,"borrow_mut","","",47,[[["self"]],["t"]]],[11,"type_id","","",47,[[["self"]],["typeid"]]],[11,"from","","",143,[[["t"]],["t"]]],[11,"try_from","","",143,[[["u"]],["result"]]],[11,"into","","",143,[[],["u"]]],[11,"try_into","","",143,[[],["result"]]],[11,"borrow","","",143,[[["self"]],["t"]]],[11,"borrow_mut","","",143,[[["self"]],["t"]]],[11,"type_id","","",143,[[["self"]],["typeid"]]],[11,"from","","",48,[[["t"]],["t"]]],[11,"try_from","","",48,[[["u"]],["result"]]],[11,"into","","",48,[[],["u"]]],[11,"try_into","","",48,[[],["result"]]],[11,"borrow","","",48,[[["self"]],["t"]]],[11,"borrow_mut","","",48,[[["self"]],["t"]]],[11,"type_id","","",48,[[["self"]],["typeid"]]],[11,"from","","",49,[[["t"]],["t"]]],[11,"try_from","","",49,[[["u"]],["result"]]],[11,"into","","",49,[[],["u"]]],[11,"try_into","","",49,[[],["result"]]],[11,"borrow","","",49,[[["self"]],["t"]]],[11,"borrow_mut","","",49,[[["self"]],["t"]]],[11,"type_id","","",49,[[["self"]],["typeid"]]],[11,"from","","",50,[[["t"]],["t"]]],[11,"try_from","","",50,[[["u"]],["result"]]],[11,"into","","",50,[[],["u"]]],[11,"try_into","","",50,[[],["result"]]],[11,"borrow","","",50,[[["self"]],["t"]]],[11,"borrow_mut","","",50,[[["self"]],["t"]]],[11,"type_id","","",50,[[["self"]],["typeid"]]],[11,"from","","",51,[[["t"]],["t"]]],[11,"try_from","","",51,[[["u"]],["result"]]],[11,"into","","",51,[[],["u"]]],[11,"try_into","","",51,[[],["result"]]],[11,"borrow","","",51,[[["self"]],["t"]]],[11,"borrow_mut","","",51,[[["self"]],["t"]]],[11,"type_id","","",51,[[["self"]],["typeid"]]],[11,"from","","",52,[[["t"]],["t"]]],[11,"try_from","","",52,[[["u"]],["result"]]],[11,"into","","",52,[[],["u"]]],[11,"try_into","","",52,[[],["result"]]],[11,"borrow","","",52,[[["self"]],["t"]]],[11,"borrow_mut","","",52,[[["self"]],["t"]]],[11,"type_id","","",52,[[["self"]],["typeid"]]],[11,"from","","",53,[[["t"]],["t"]]],[11,"try_from","","",53,[[["u"]],["result"]]],[11,"into","","",53,[[],["u"]]],[11,"try_into","","",53,[[],["result"]]],[11,"borrow","","",53,[[["self"]],["t"]]],[11,"borrow_mut","","",53,[[["self"]],["t"]]],[11,"type_id","","",53,[[["self"]],["typeid"]]],[11,"from","","",54,[[["t"]],["t"]]],[11,"try_from","","",54,[[["u"]],["result"]]],[11,"into","","",54,[[],["u"]]],[11,"try_into","","",54,[[],["result"]]],[11,"borrow","","",54,[[["self"]],["t"]]],[11,"borrow_mut","","",54,[[["self"]],["t"]]],[11,"type_id","","",54,[[["self"]],["typeid"]]],[11,"from","","",55,[[["t"]],["t"]]],[11,"try_from","","",55,[[["u"]],["result"]]],[11,"into","","",55,[[],["u"]]],[11,"try_into","","",55,[[],["result"]]],[11,"borrow","","",55,[[["self"]],["t"]]],[11,"borrow_mut","","",55,[[["self"]],["t"]]],[11,"type_id","","",55,[[["self"]],["typeid"]]],[11,"from","","",56,[[["t"]],["t"]]],[11,"try_from","","",56,[[["u"]],["result"]]],[11,"into","","",56,[[],["u"]]],[11,"try_into","","",56,[[],["result"]]],[11,"borrow","","",56,[[["self"]],["t"]]],[11,"borrow_mut","","",56,[[["self"]],["t"]]],[11,"type_id","","",56,[[["self"]],["typeid"]]],[11,"from","","",57,[[["t"]],["t"]]],[11,"try_from","","",57,[[["u"]],["result"]]],[11,"into","","",57,[[],["u"]]],[11,"try_into","","",57,[[],["result"]]],[11,"borrow","","",57,[[["self"]],["t"]]],[11,"borrow_mut","","",57,[[["self"]],["t"]]],[11,"type_id","","",57,[[["self"]],["typeid"]]],[11,"from","","",58,[[["t"]],["t"]]],[11,"try_from","","",58,[[["u"]],["result"]]],[11,"into","","",58,[[],["u"]]],[11,"try_into","","",58,[[],["result"]]],[11,"borrow","","",58,[[["self"]],["t"]]],[11,"borrow_mut","","",58,[[["self"]],["t"]]],[11,"type_id","","",58,[[["self"]],["typeid"]]],[11,"from","","",59,[[["t"]],["t"]]],[11,"try_from","","",59,[[["u"]],["result"]]],[11,"into","","",59,[[],["u"]]],[11,"try_into","","",59,[[],["result"]]],[11,"borrow","","",59,[[["self"]],["t"]]],[11,"borrow_mut","","",59,[[["self"]],["t"]]],[11,"type_id","","",59,[[["self"]],["typeid"]]],[11,"from","","",60,[[["t"]],["t"]]],[11,"try_from","","",60,[[["u"]],["result"]]],[11,"into","","",60,[[],["u"]]],[11,"try_into","","",60,[[],["result"]]],[11,"borrow","","",60,[[["self"]],["t"]]],[11,"borrow_mut","","",60,[[["self"]],["t"]]],[11,"type_id","","",60,[[["self"]],["typeid"]]],[11,"from","","",61,[[["t"]],["t"]]],[11,"try_from","","",61,[[["u"]],["result"]]],[11,"into","","",61,[[],["u"]]],[11,"try_into","","",61,[[],["result"]]],[11,"borrow","","",61,[[["self"]],["t"]]],[11,"borrow_mut","","",61,[[["self"]],["t"]]],[11,"type_id","","",61,[[["self"]],["typeid"]]],[11,"from","","",62,[[["t"]],["t"]]],[11,"try_from","","",62,[[["u"]],["result"]]],[11,"into","","",62,[[],["u"]]],[11,"try_into","","",62,[[],["result"]]],[11,"borrow","","",62,[[["self"]],["t"]]],[11,"borrow_mut","","",62,[[["self"]],["t"]]],[11,"type_id","","",62,[[["self"]],["typeid"]]],[11,"from","","",63,[[["t"]],["t"]]],[11,"try_from","","",63,[[["u"]],["result"]]],[11,"into","","",63,[[],["u"]]],[11,"try_into","","",63,[[],["result"]]],[11,"borrow","","",63,[[["self"]],["t"]]],[11,"borrow_mut","","",63,[[["self"]],["t"]]],[11,"type_id","","",63,[[["self"]],["typeid"]]],[11,"from","","",64,[[["t"]],["t"]]],[11,"try_from","","",64,[[["u"]],["result"]]],[11,"into","","",64,[[],["u"]]],[11,"try_into","","",64,[[],["result"]]],[11,"borrow","","",64,[[["self"]],["t"]]],[11,"borrow_mut","","",64,[[["self"]],["t"]]],[11,"type_id","","",64,[[["self"]],["typeid"]]],[11,"from","","",65,[[["t"]],["t"]]],[11,"try_from","","",65,[[["u"]],["result"]]],[11,"into","","",65,[[],["u"]]],[11,"try_into","","",65,[[],["result"]]],[11,"borrow","","",65,[[["self"]],["t"]]],[11,"borrow_mut","","",65,[[["self"]],["t"]]],[11,"type_id","","",65,[[["self"]],["typeid"]]],[11,"from","","",66,[[["t"]],["t"]]],[11,"try_from","","",66,[[["u"]],["result"]]],[11,"into","","",66,[[],["u"]]],[11,"try_into","","",66,[[],["result"]]],[11,"borrow","","",66,[[["self"]],["t"]]],[11,"borrow_mut","","",66,[[["self"]],["t"]]],[11,"type_id","","",66,[[["self"]],["typeid"]]],[11,"from","","",67,[[["t"]],["t"]]],[11,"try_from","","",67,[[["u"]],["result"]]],[11,"into","","",67,[[],["u"]]],[11,"try_into","","",67,[[],["result"]]],[11,"borrow","","",67,[[["self"]],["t"]]],[11,"borrow_mut","","",67,[[["self"]],["t"]]],[11,"type_id","","",67,[[["self"]],["typeid"]]],[11,"from","","",68,[[["t"]],["t"]]],[11,"try_from","","",68,[[["u"]],["result"]]],[11,"into","","",68,[[],["u"]]],[11,"try_into","","",68,[[],["result"]]],[11,"borrow","","",68,[[["self"]],["t"]]],[11,"borrow_mut","","",68,[[["self"]],["t"]]],[11,"type_id","","",68,[[["self"]],["typeid"]]],[11,"from","","",69,[[["t"]],["t"]]],[11,"try_from","","",69,[[["u"]],["result"]]],[11,"into","","",69,[[],["u"]]],[11,"try_into","","",69,[[],["result"]]],[11,"borrow","","",69,[[["self"]],["t"]]],[11,"borrow_mut","","",69,[[["self"]],["t"]]],[11,"type_id","","",69,[[["self"]],["typeid"]]],[11,"from","","",70,[[["t"]],["t"]]],[11,"try_from","","",70,[[["u"]],["result"]]],[11,"into","","",70,[[],["u"]]],[11,"try_into","","",70,[[],["result"]]],[11,"borrow","","",70,[[["self"]],["t"]]],[11,"borrow_mut","","",70,[[["self"]],["t"]]],[11,"type_id","","",70,[[["self"]],["typeid"]]],[11,"from","","",71,[[["t"]],["t"]]],[11,"try_from","","",71,[[["u"]],["result"]]],[11,"into","","",71,[[],["u"]]],[11,"try_into","","",71,[[],["result"]]],[11,"borrow","","",71,[[["self"]],["t"]]],[11,"borrow_mut","","",71,[[["self"]],["t"]]],[11,"type_id","","",71,[[["self"]],["typeid"]]],[11,"from","","",72,[[["t"]],["t"]]],[11,"try_from","","",72,[[["u"]],["result"]]],[11,"into","","",72,[[],["u"]]],[11,"try_into","","",72,[[],["result"]]],[11,"borrow","","",72,[[["self"]],["t"]]],[11,"borrow_mut","","",72,[[["self"]],["t"]]],[11,"type_id","","",72,[[["self"]],["typeid"]]],[11,"from","","",73,[[["t"]],["t"]]],[11,"try_from","","",73,[[["u"]],["result"]]],[11,"into","","",73,[[],["u"]]],[11,"try_into","","",73,[[],["result"]]],[11,"borrow","","",73,[[["self"]],["t"]]],[11,"borrow_mut","","",73,[[["self"]],["t"]]],[11,"type_id","","",73,[[["self"]],["typeid"]]],[11,"from","","",74,[[["t"]],["t"]]],[11,"try_from","","",74,[[["u"]],["result"]]],[11,"into","","",74,[[],["u"]]],[11,"try_into","","",74,[[],["result"]]],[11,"borrow","","",74,[[["self"]],["t"]]],[11,"borrow_mut","","",74,[[["self"]],["t"]]],[11,"type_id","","",74,[[["self"]],["typeid"]]],[11,"from","","",75,[[["t"]],["t"]]],[11,"try_from","","",75,[[["u"]],["result"]]],[11,"into","","",75,[[],["u"]]],[11,"try_into","","",75,[[],["result"]]],[11,"borrow","","",75,[[["self"]],["t"]]],[11,"borrow_mut","","",75,[[["self"]],["t"]]],[11,"type_id","","",75,[[["self"]],["typeid"]]],[11,"from","","",76,[[["t"]],["t"]]],[11,"try_from","","",76,[[["u"]],["result"]]],[11,"into","","",76,[[],["u"]]],[11,"try_into","","",76,[[],["result"]]],[11,"borrow","","",76,[[["self"]],["t"]]],[11,"borrow_mut","","",76,[[["self"]],["t"]]],[11,"type_id","","",76,[[["self"]],["typeid"]]],[11,"from","","",77,[[["t"]],["t"]]],[11,"try_from","","",77,[[["u"]],["result"]]],[11,"into","","",77,[[],["u"]]],[11,"try_into","","",77,[[],["result"]]],[11,"borrow","","",77,[[["self"]],["t"]]],[11,"borrow_mut","","",77,[[["self"]],["t"]]],[11,"type_id","","",77,[[["self"]],["typeid"]]],[11,"from","","",144,[[["t"]],["t"]]],[11,"try_from","","",144,[[["u"]],["result"]]],[11,"into","","",144,[[],["u"]]],[11,"try_into","","",144,[[],["result"]]],[11,"borrow","","",144,[[["self"]],["t"]]],[11,"borrow_mut","","",144,[[["self"]],["t"]]],[11,"type_id","","",144,[[["self"]],["typeid"]]],[11,"from","","",145,[[["t"]],["t"]]],[11,"try_from","","",145,[[["u"]],["result"]]],[11,"into","","",145,[[],["u"]]],[11,"try_into","","",145,[[],["result"]]],[11,"borrow","","",145,[[["self"]],["t"]]],[11,"borrow_mut","","",145,[[["self"]],["t"]]],[11,"type_id","","",145,[[["self"]],["typeid"]]],[11,"from","","",78,[[["t"]],["t"]]],[11,"try_from","","",78,[[["u"]],["result"]]],[11,"into","","",78,[[],["u"]]],[11,"try_into","","",78,[[],["result"]]],[11,"borrow","","",78,[[["self"]],["t"]]],[11,"borrow_mut","","",78,[[["self"]],["t"]]],[11,"type_id","","",78,[[["self"]],["typeid"]]],[11,"from","","",79,[[["t"]],["t"]]],[11,"try_from","","",79,[[["u"]],["result"]]],[11,"into","","",79,[[],["u"]]],[11,"try_into","","",79,[[],["result"]]],[11,"borrow","","",79,[[["self"]],["t"]]],[11,"borrow_mut","","",79,[[["self"]],["t"]]],[11,"type_id","","",79,[[["self"]],["typeid"]]],[11,"from","","",80,[[["t"]],["t"]]],[11,"try_from","","",80,[[["u"]],["result"]]],[11,"into","","",80,[[],["u"]]],[11,"try_into","","",80,[[],["result"]]],[11,"borrow","","",80,[[["self"]],["t"]]],[11,"borrow_mut","","",80,[[["self"]],["t"]]],[11,"type_id","","",80,[[["self"]],["typeid"]]],[11,"from","","",81,[[["t"]],["t"]]],[11,"try_from","","",81,[[["u"]],["result"]]],[11,"into","","",81,[[],["u"]]],[11,"try_into","","",81,[[],["result"]]],[11,"borrow","","",81,[[["self"]],["t"]]],[11,"borrow_mut","","",81,[[["self"]],["t"]]],[11,"type_id","","",81,[[["self"]],["typeid"]]],[11,"from","","",82,[[["t"]],["t"]]],[11,"try_from","","",82,[[["u"]],["result"]]],[11,"into","","",82,[[],["u"]]],[11,"try_into","","",82,[[],["result"]]],[11,"borrow","","",82,[[["self"]],["t"]]],[11,"borrow_mut","","",82,[[["self"]],["t"]]],[11,"type_id","","",82,[[["self"]],["typeid"]]],[11,"from","","",83,[[["t"]],["t"]]],[11,"try_from","","",83,[[["u"]],["result"]]],[11,"into","","",83,[[],["u"]]],[11,"try_into","","",83,[[],["result"]]],[11,"borrow","","",83,[[["self"]],["t"]]],[11,"borrow_mut","","",83,[[["self"]],["t"]]],[11,"type_id","","",83,[[["self"]],["typeid"]]],[11,"from","","",84,[[["t"]],["t"]]],[11,"try_from","","",84,[[["u"]],["result"]]],[11,"into","","",84,[[],["u"]]],[11,"try_into","","",84,[[],["result"]]],[11,"borrow","","",84,[[["self"]],["t"]]],[11,"borrow_mut","","",84,[[["self"]],["t"]]],[11,"type_id","","",84,[[["self"]],["typeid"]]],[11,"from","","",85,[[["t"]],["t"]]],[11,"try_from","","",85,[[["u"]],["result"]]],[11,"into","","",85,[[],["u"]]],[11,"try_into","","",85,[[],["result"]]],[11,"borrow","","",85,[[["self"]],["t"]]],[11,"borrow_mut","","",85,[[["self"]],["t"]]],[11,"type_id","","",85,[[["self"]],["typeid"]]],[11,"from","","",86,[[["t"]],["t"]]],[11,"try_from","","",86,[[["u"]],["result"]]],[11,"into","","",86,[[],["u"]]],[11,"try_into","","",86,[[],["result"]]],[11,"borrow","","",86,[[["self"]],["t"]]],[11,"borrow_mut","","",86,[[["self"]],["t"]]],[11,"type_id","","",86,[[["self"]],["typeid"]]],[11,"from","","",87,[[["t"]],["t"]]],[11,"try_from","","",87,[[["u"]],["result"]]],[11,"into","","",87,[[],["u"]]],[11,"try_into","","",87,[[],["result"]]],[11,"borrow","","",87,[[["self"]],["t"]]],[11,"borrow_mut","","",87,[[["self"]],["t"]]],[11,"type_id","","",87,[[["self"]],["typeid"]]],[11,"from","","",88,[[["t"]],["t"]]],[11,"try_from","","",88,[[["u"]],["result"]]],[11,"into","","",88,[[],["u"]]],[11,"try_into","","",88,[[],["result"]]],[11,"borrow","","",88,[[["self"]],["t"]]],[11,"borrow_mut","","",88,[[["self"]],["t"]]],[11,"type_id","","",88,[[["self"]],["typeid"]]],[11,"from","","",89,[[["t"]],["t"]]],[11,"try_from","","",89,[[["u"]],["result"]]],[11,"into","","",89,[[],["u"]]],[11,"try_into","","",89,[[],["result"]]],[11,"borrow","","",89,[[["self"]],["t"]]],[11,"borrow_mut","","",89,[[["self"]],["t"]]],[11,"type_id","","",89,[[["self"]],["typeid"]]],[11,"from","","",90,[[["t"]],["t"]]],[11,"try_from","","",90,[[["u"]],["result"]]],[11,"into","","",90,[[],["u"]]],[11,"try_into","","",90,[[],["result"]]],[11,"borrow","","",90,[[["self"]],["t"]]],[11,"borrow_mut","","",90,[[["self"]],["t"]]],[11,"type_id","","",90,[[["self"]],["typeid"]]],[11,"from","","",91,[[["t"]],["t"]]],[11,"try_from","","",91,[[["u"]],["result"]]],[11,"into","","",91,[[],["u"]]],[11,"try_into","","",91,[[],["result"]]],[11,"borrow","","",91,[[["self"]],["t"]]],[11,"borrow_mut","","",91,[[["self"]],["t"]]],[11,"type_id","","",91,[[["self"]],["typeid"]]],[11,"from","","",92,[[["t"]],["t"]]],[11,"try_from","","",92,[[["u"]],["result"]]],[11,"into","","",92,[[],["u"]]],[11,"try_into","","",92,[[],["result"]]],[11,"borrow","","",92,[[["self"]],["t"]]],[11,"borrow_mut","","",92,[[["self"]],["t"]]],[11,"type_id","","",92,[[["self"]],["typeid"]]],[11,"from","","",93,[[["t"]],["t"]]],[11,"try_from","","",93,[[["u"]],["result"]]],[11,"into","","",93,[[],["u"]]],[11,"try_into","","",93,[[],["result"]]],[11,"borrow","","",93,[[["self"]],["t"]]],[11,"borrow_mut","","",93,[[["self"]],["t"]]],[11,"type_id","","",93,[[["self"]],["typeid"]]],[11,"from","","",94,[[["t"]],["t"]]],[11,"try_from","","",94,[[["u"]],["result"]]],[11,"into","","",94,[[],["u"]]],[11,"try_into","","",94,[[],["result"]]],[11,"borrow","","",94,[[["self"]],["t"]]],[11,"borrow_mut","","",94,[[["self"]],["t"]]],[11,"type_id","","",94,[[["self"]],["typeid"]]],[11,"from","","",95,[[["t"]],["t"]]],[11,"try_from","","",95,[[["u"]],["result"]]],[11,"into","","",95,[[],["u"]]],[11,"try_into","","",95,[[],["result"]]],[11,"borrow","","",95,[[["self"]],["t"]]],[11,"borrow_mut","","",95,[[["self"]],["t"]]],[11,"type_id","","",95,[[["self"]],["typeid"]]],[11,"from","","",96,[[["t"]],["t"]]],[11,"try_from","","",96,[[["u"]],["result"]]],[11,"into","","",96,[[],["u"]]],[11,"try_into","","",96,[[],["result"]]],[11,"borrow","","",96,[[["self"]],["t"]]],[11,"borrow_mut","","",96,[[["self"]],["t"]]],[11,"type_id","","",96,[[["self"]],["typeid"]]],[11,"from","","",97,[[["t"]],["t"]]],[11,"try_from","","",97,[[["u"]],["result"]]],[11,"into","","",97,[[],["u"]]],[11,"try_into","","",97,[[],["result"]]],[11,"borrow","","",97,[[["self"]],["t"]]],[11,"borrow_mut","","",97,[[["self"]],["t"]]],[11,"type_id","","",97,[[["self"]],["typeid"]]],[11,"from","","",98,[[["t"]],["t"]]],[11,"try_from","","",98,[[["u"]],["result"]]],[11,"into","","",98,[[],["u"]]],[11,"try_into","","",98,[[],["result"]]],[11,"borrow","","",98,[[["self"]],["t"]]],[11,"borrow_mut","","",98,[[["self"]],["t"]]],[11,"type_id","","",98,[[["self"]],["typeid"]]],[11,"from","","",99,[[["t"]],["t"]]],[11,"try_from","","",99,[[["u"]],["result"]]],[11,"into","","",99,[[],["u"]]],[11,"try_into","","",99,[[],["result"]]],[11,"borrow","","",99,[[["self"]],["t"]]],[11,"borrow_mut","","",99,[[["self"]],["t"]]],[11,"type_id","","",99,[[["self"]],["typeid"]]],[11,"from","","",100,[[["t"]],["t"]]],[11,"try_from","","",100,[[["u"]],["result"]]],[11,"into","","",100,[[],["u"]]],[11,"try_into","","",100,[[],["result"]]],[11,"borrow","","",100,[[["self"]],["t"]]],[11,"borrow_mut","","",100,[[["self"]],["t"]]],[11,"type_id","","",100,[[["self"]],["typeid"]]],[11,"from","","",101,[[["t"]],["t"]]],[11,"try_from","","",101,[[["u"]],["result"]]],[11,"into","","",101,[[],["u"]]],[11,"try_into","","",101,[[],["result"]]],[11,"borrow","","",101,[[["self"]],["t"]]],[11,"borrow_mut","","",101,[[["self"]],["t"]]],[11,"type_id","","",101,[[["self"]],["typeid"]]],[11,"from","","",102,[[["t"]],["t"]]],[11,"try_from","","",102,[[["u"]],["result"]]],[11,"into","","",102,[[],["u"]]],[11,"try_into","","",102,[[],["result"]]],[11,"borrow","","",102,[[["self"]],["t"]]],[11,"borrow_mut","","",102,[[["self"]],["t"]]],[11,"type_id","","",102,[[["self"]],["typeid"]]],[11,"from","","",103,[[["t"]],["t"]]],[11,"try_from","","",103,[[["u"]],["result"]]],[11,"into","","",103,[[],["u"]]],[11,"try_into","","",103,[[],["result"]]],[11,"borrow","","",103,[[["self"]],["t"]]],[11,"borrow_mut","","",103,[[["self"]],["t"]]],[11,"type_id","","",103,[[["self"]],["typeid"]]],[11,"from","","",104,[[["t"]],["t"]]],[11,"try_from","","",104,[[["u"]],["result"]]],[11,"into","","",104,[[],["u"]]],[11,"try_into","","",104,[[],["result"]]],[11,"borrow","","",104,[[["self"]],["t"]]],[11,"borrow_mut","","",104,[[["self"]],["t"]]],[11,"type_id","","",104,[[["self"]],["typeid"]]],[11,"from","","",105,[[["t"]],["t"]]],[11,"try_from","","",105,[[["u"]],["result"]]],[11,"into","","",105,[[],["u"]]],[11,"try_into","","",105,[[],["result"]]],[11,"borrow","","",105,[[["self"]],["t"]]],[11,"borrow_mut","","",105,[[["self"]],["t"]]],[11,"type_id","","",105,[[["self"]],["typeid"]]],[11,"from","","",106,[[["t"]],["t"]]],[11,"try_from","","",106,[[["u"]],["result"]]],[11,"into","","",106,[[],["u"]]],[11,"try_into","","",106,[[],["result"]]],[11,"borrow","","",106,[[["self"]],["t"]]],[11,"borrow_mut","","",106,[[["self"]],["t"]]],[11,"type_id","","",106,[[["self"]],["typeid"]]],[11,"from","","",107,[[["t"]],["t"]]],[11,"try_from","","",107,[[["u"]],["result"]]],[11,"into","","",107,[[],["u"]]],[11,"try_into","","",107,[[],["result"]]],[11,"borrow","","",107,[[["self"]],["t"]]],[11,"borrow_mut","","",107,[[["self"]],["t"]]],[11,"type_id","","",107,[[["self"]],["typeid"]]],[11,"from","","",108,[[["t"]],["t"]]],[11,"try_from","","",108,[[["u"]],["result"]]],[11,"into","","",108,[[],["u"]]],[11,"try_into","","",108,[[],["result"]]],[11,"borrow","","",108,[[["self"]],["t"]]],[11,"borrow_mut","","",108,[[["self"]],["t"]]],[11,"type_id","","",108,[[["self"]],["typeid"]]],[11,"from","","",109,[[["t"]],["t"]]],[11,"try_from","","",109,[[["u"]],["result"]]],[11,"into","","",109,[[],["u"]]],[11,"try_into","","",109,[[],["result"]]],[11,"borrow","","",109,[[["self"]],["t"]]],[11,"borrow_mut","","",109,[[["self"]],["t"]]],[11,"type_id","","",109,[[["self"]],["typeid"]]],[11,"from","","",110,[[["t"]],["t"]]],[11,"try_from","","",110,[[["u"]],["result"]]],[11,"into","","",110,[[],["u"]]],[11,"try_into","","",110,[[],["result"]]],[11,"borrow","","",110,[[["self"]],["t"]]],[11,"borrow_mut","","",110,[[["self"]],["t"]]],[11,"type_id","","",110,[[["self"]],["typeid"]]],[11,"from","","",146,[[["t"]],["t"]]],[11,"try_from","","",146,[[["u"]],["result"]]],[11,"into","","",146,[[],["u"]]],[11,"try_into","","",146,[[],["result"]]],[11,"borrow","","",146,[[["self"]],["t"]]],[11,"borrow_mut","","",146,[[["self"]],["t"]]],[11,"type_id","","",146,[[["self"]],["typeid"]]],[11,"from","","",111,[[["t"]],["t"]]],[11,"try_from","","",111,[[["u"]],["result"]]],[11,"into","","",111,[[],["u"]]],[11,"try_into","","",111,[[],["result"]]],[11,"borrow","","",111,[[["self"]],["t"]]],[11,"borrow_mut","","",111,[[["self"]],["t"]]],[11,"type_id","","",111,[[["self"]],["typeid"]]],[11,"from","","",147,[[["t"]],["t"]]],[11,"try_from","","",147,[[["u"]],["result"]]],[11,"into","","",147,[[],["u"]]],[11,"try_into","","",147,[[],["result"]]],[11,"borrow","","",147,[[["self"]],["t"]]],[11,"borrow_mut","","",147,[[["self"]],["t"]]],[11,"type_id","","",147,[[["self"]],["typeid"]]],[11,"from","","",112,[[["t"]],["t"]]],[11,"try_from","","",112,[[["u"]],["result"]]],[11,"into","","",112,[[],["u"]]],[11,"try_into","","",112,[[],["result"]]],[11,"borrow","","",112,[[["self"]],["t"]]],[11,"borrow_mut","","",112,[[["self"]],["t"]]],[11,"type_id","","",112,[[["self"]],["typeid"]]],[11,"from","","",113,[[["t"]],["t"]]],[11,"try_from","","",113,[[["u"]],["result"]]],[11,"into","","",113,[[],["u"]]],[11,"try_into","","",113,[[],["result"]]],[11,"borrow","","",113,[[["self"]],["t"]]],[11,"borrow_mut","","",113,[[["self"]],["t"]]],[11,"type_id","","",113,[[["self"]],["typeid"]]],[11,"from","","",114,[[["t"]],["t"]]],[11,"try_from","","",114,[[["u"]],["result"]]],[11,"into","","",114,[[],["u"]]],[11,"try_into","","",114,[[],["result"]]],[11,"borrow","","",114,[[["self"]],["t"]]],[11,"borrow_mut","","",114,[[["self"]],["t"]]],[11,"type_id","","",114,[[["self"]],["typeid"]]],[11,"from","","",115,[[["t"]],["t"]]],[11,"try_from","","",115,[[["u"]],["result"]]],[11,"into","","",115,[[],["u"]]],[11,"try_into","","",115,[[],["result"]]],[11,"borrow","","",115,[[["self"]],["t"]]],[11,"borrow_mut","","",115,[[["self"]],["t"]]],[11,"type_id","","",115,[[["self"]],["typeid"]]],[11,"from","","",116,[[["t"]],["t"]]],[11,"try_from","","",116,[[["u"]],["result"]]],[11,"into","","",116,[[],["u"]]],[11,"try_into","","",116,[[],["result"]]],[11,"borrow","","",116,[[["self"]],["t"]]],[11,"borrow_mut","","",116,[[["self"]],["t"]]],[11,"type_id","","",116,[[["self"]],["typeid"]]],[11,"from","","",117,[[["t"]],["t"]]],[11,"try_from","","",117,[[["u"]],["result"]]],[11,"into","","",117,[[],["u"]]],[11,"try_into","","",117,[[],["result"]]],[11,"borrow","","",117,[[["self"]],["t"]]],[11,"borrow_mut","","",117,[[["self"]],["t"]]],[11,"type_id","","",117,[[["self"]],["typeid"]]],[11,"from","","",118,[[["t"]],["t"]]],[11,"try_from","","",118,[[["u"]],["result"]]],[11,"into","","",118,[[],["u"]]],[11,"try_into","","",118,[[],["result"]]],[11,"borrow","","",118,[[["self"]],["t"]]],[11,"borrow_mut","","",118,[[["self"]],["t"]]],[11,"type_id","","",118,[[["self"]],["typeid"]]],[11,"from","","",119,[[["t"]],["t"]]],[11,"try_from","","",119,[[["u"]],["result"]]],[11,"into","","",119,[[],["u"]]],[11,"try_into","","",119,[[],["result"]]],[11,"borrow","","",119,[[["self"]],["t"]]],[11,"borrow_mut","","",119,[[["self"]],["t"]]],[11,"type_id","","",119,[[["self"]],["typeid"]]],[11,"from","","",120,[[["t"]],["t"]]],[11,"try_from","","",120,[[["u"]],["result"]]],[11,"into","","",120,[[],["u"]]],[11,"try_into","","",120,[[],["result"]]],[11,"borrow","","",120,[[["self"]],["t"]]],[11,"borrow_mut","","",120,[[["self"]],["t"]]],[11,"type_id","","",120,[[["self"]],["typeid"]]],[11,"from","","",121,[[["t"]],["t"]]],[11,"try_from","","",121,[[["u"]],["result"]]],[11,"into","","",121,[[],["u"]]],[11,"try_into","","",121,[[],["result"]]],[11,"borrow","","",121,[[["self"]],["t"]]],[11,"borrow_mut","","",121,[[["self"]],["t"]]],[11,"type_id","","",121,[[["self"]],["typeid"]]],[11,"from","","",122,[[["t"]],["t"]]],[11,"try_from","","",122,[[["u"]],["result"]]],[11,"into","","",122,[[],["u"]]],[11,"try_into","","",122,[[],["result"]]],[11,"borrow","","",122,[[["self"]],["t"]]],[11,"borrow_mut","","",122,[[["self"]],["t"]]],[11,"type_id","","",122,[[["self"]],["typeid"]]],[11,"from","","",123,[[["t"]],["t"]]],[11,"try_from","","",123,[[["u"]],["result"]]],[11,"into","","",123,[[],["u"]]],[11,"try_into","","",123,[[],["result"]]],[11,"borrow","","",123,[[["self"]],["t"]]],[11,"borrow_mut","","",123,[[["self"]],["t"]]],[11,"type_id","","",123,[[["self"]],["typeid"]]],[11,"from","","",148,[[["t"]],["t"]]],[11,"try_from","","",148,[[["u"]],["result"]]],[11,"into","","",148,[[],["u"]]],[11,"try_into","","",148,[[],["result"]]],[11,"borrow","","",148,[[["self"]],["t"]]],[11,"borrow_mut","","",148,[[["self"]],["t"]]],[11,"type_id","","",148,[[["self"]],["typeid"]]],[11,"from","","",124,[[["t"]],["t"]]],[11,"try_from","","",124,[[["u"]],["result"]]],[11,"into","","",124,[[],["u"]]],[11,"try_into","","",124,[[],["result"]]],[11,"borrow","","",124,[[["self"]],["t"]]],[11,"borrow_mut","","",124,[[["self"]],["t"]]],[11,"type_id","","",124,[[["self"]],["typeid"]]],[11,"from","","",125,[[["t"]],["t"]]],[11,"try_from","","",125,[[["u"]],["result"]]],[11,"into","","",125,[[],["u"]]],[11,"try_into","","",125,[[],["result"]]],[11,"borrow","","",125,[[["self"]],["t"]]],[11,"borrow_mut","","",125,[[["self"]],["t"]]],[11,"type_id","","",125,[[["self"]],["typeid"]]],[11,"from","","",126,[[["t"]],["t"]]],[11,"try_from","","",126,[[["u"]],["result"]]],[11,"into","","",126,[[],["u"]]],[11,"try_into","","",126,[[],["result"]]],[11,"borrow","","",126,[[["self"]],["t"]]],[11,"borrow_mut","","",126,[[["self"]],["t"]]],[11,"type_id","","",126,[[["self"]],["typeid"]]],[11,"from","","",127,[[["t"]],["t"]]],[11,"try_from","","",127,[[["u"]],["result"]]],[11,"into","","",127,[[],["u"]]],[11,"try_into","","",127,[[],["result"]]],[11,"borrow","","",127,[[["self"]],["t"]]],[11,"borrow_mut","","",127,[[["self"]],["t"]]],[11,"type_id","","",127,[[["self"]],["typeid"]]],[11,"from","","",128,[[["t"]],["t"]]],[11,"try_from","","",128,[[["u"]],["result"]]],[11,"into","","",128,[[],["u"]]],[11,"try_into","","",128,[[],["result"]]],[11,"borrow","","",128,[[["self"]],["t"]]],[11,"borrow_mut","","",128,[[["self"]],["t"]]],[11,"type_id","","",128,[[["self"]],["typeid"]]],[11,"from","","",129,[[["t"]],["t"]]],[11,"try_from","","",129,[[["u"]],["result"]]],[11,"into","","",129,[[],["u"]]],[11,"try_into","","",129,[[],["result"]]],[11,"borrow","","",129,[[["self"]],["t"]]],[11,"borrow_mut","","",129,[[["self"]],["t"]]],[11,"type_id","","",129,[[["self"]],["typeid"]]],[11,"from","","",130,[[["t"]],["t"]]],[11,"try_from","","",130,[[["u"]],["result"]]],[11,"into","","",130,[[],["u"]]],[11,"try_into","","",130,[[],["result"]]],[11,"borrow","","",130,[[["self"]],["t"]]],[11,"borrow_mut","","",130,[[["self"]],["t"]]],[11,"type_id","","",130,[[["self"]],["typeid"]]],[11,"from","","",131,[[["t"]],["t"]]],[11,"try_from","","",131,[[["u"]],["result"]]],[11,"into","","",131,[[],["u"]]],[11,"try_into","","",131,[[],["result"]]],[11,"borrow","","",131,[[["self"]],["t"]]],[11,"borrow_mut","","",131,[[["self"]],["t"]]],[11,"type_id","","",131,[[["self"]],["typeid"]]],[11,"from","","",132,[[["t"]],["t"]]],[11,"try_from","","",132,[[["u"]],["result"]]],[11,"into","","",132,[[],["u"]]],[11,"try_into","","",132,[[],["result"]]],[11,"borrow","","",132,[[["self"]],["t"]]],[11,"borrow_mut","","",132,[[["self"]],["t"]]],[11,"type_id","","",132,[[["self"]],["typeid"]]],[11,"from","","",133,[[["t"]],["t"]]],[11,"try_from","","",133,[[["u"]],["result"]]],[11,"into","","",133,[[],["u"]]],[11,"try_into","","",133,[[],["result"]]],[11,"borrow","","",133,[[["self"]],["t"]]],[11,"borrow_mut","","",133,[[["self"]],["t"]]],[11,"type_id","","",133,[[["self"]],["typeid"]]],[11,"from","","",134,[[["t"]],["t"]]],[11,"try_from","","",134,[[["u"]],["result"]]],[11,"into","","",134,[[],["u"]]],[11,"try_into","","",134,[[],["result"]]],[11,"borrow","","",134,[[["self"]],["t"]]],[11,"borrow_mut","","",134,[[["self"]],["t"]]],[11,"type_id","","",134,[[["self"]],["typeid"]]],[11,"from","","",135,[[["t"]],["t"]]],[11,"try_from","","",135,[[["u"]],["result"]]],[11,"into","","",135,[[],["u"]]],[11,"try_into","","",135,[[],["result"]]],[11,"borrow","","",135,[[["self"]],["t"]]],[11,"borrow_mut","","",135,[[["self"]],["t"]]],[11,"type_id","","",135,[[["self"]],["typeid"]]],[11,"from","","",136,[[["t"]],["t"]]],[11,"try_from","","",136,[[["u"]],["result"]]],[11,"into","","",136,[[],["u"]]],[11,"try_into","","",136,[[],["result"]]],[11,"borrow","","",136,[[["self"]],["t"]]],[11,"borrow_mut","","",136,[[["self"]],["t"]]],[11,"type_id","","",136,[[["self"]],["typeid"]]],[11,"from","","",149,[[["t"]],["t"]]],[11,"try_from","","",149,[[["u"]],["result"]]],[11,"into","","",149,[[],["u"]]],[11,"try_into","","",149,[[],["result"]]],[11,"borrow","","",149,[[["self"]],["t"]]],[11,"borrow_mut","","",149,[[["self"]],["t"]]],[11,"type_id","","",149,[[["self"]],["typeid"]]],[11,"from","","",150,[[["t"]],["t"]]],[11,"try_from","","",150,[[["u"]],["result"]]],[11,"into","","",150,[[],["u"]]],[11,"try_into","","",150,[[],["result"]]],[11,"borrow","","",150,[[["self"]],["t"]]],[11,"borrow_mut","","",150,[[["self"]],["t"]]],[11,"type_id","","",150,[[["self"]],["typeid"]]],[11,"from","","",151,[[["t"]],["t"]]],[11,"try_from","","",151,[[["u"]],["result"]]],[11,"into","","",151,[[],["u"]]],[11,"try_into","","",151,[[],["result"]]],[11,"borrow","","",151,[[["self"]],["t"]]],[11,"borrow_mut","","",151,[[["self"]],["t"]]],[11,"type_id","","",151,[[["self"]],["typeid"]]],[11,"from","","",152,[[["t"]],["t"]]],[11,"try_from","","",152,[[["u"]],["result"]]],[11,"into","","",152,[[],["u"]]],[11,"try_into","","",152,[[],["result"]]],[11,"borrow","","",152,[[["self"]],["t"]]],[11,"borrow_mut","","",152,[[["self"]],["t"]]],[11,"type_id","","",152,[[["self"]],["typeid"]]],[11,"from","","",153,[[["t"]],["t"]]],[11,"try_from","","",153,[[["u"]],["result"]]],[11,"into","","",153,[[],["u"]]],[11,"try_into","","",153,[[],["result"]]],[11,"borrow","","",153,[[["self"]],["t"]]],[11,"borrow_mut","","",153,[[["self"]],["t"]]],[11,"type_id","","",153,[[["self"]],["typeid"]]],[11,"from","","",137,[[["t"]],["t"]]],[11,"try_from","","",137,[[["u"]],["result"]]],[11,"into","","",137,[[],["u"]]],[11,"try_into","","",137,[[],["result"]]],[11,"borrow","","",137,[[["self"]],["t"]]],[11,"borrow_mut","","",137,[[["self"]],["t"]]],[11,"type_id","","",137,[[["self"]],["typeid"]]],[11,"from","","",154,[[["t"]],["t"]]],[11,"try_from","","",154,[[["u"]],["result"]]],[11,"into","","",154,[[],["u"]]],[11,"try_into","","",154,[[],["result"]]],[11,"borrow","","",154,[[["self"]],["t"]]],[11,"borrow_mut","","",154,[[["self"]],["t"]]],[11,"type_id","","",154,[[["self"]],["typeid"]]],[11,"from","","",155,[[["t"]],["t"]]],[11,"try_from","","",155,[[["u"]],["result"]]],[11,"into","","",155,[[],["u"]]],[11,"try_into","","",155,[[],["result"]]],[11,"borrow","","",155,[[["self"]],["t"]]],[11,"borrow_mut","","",155,[[["self"]],["t"]]],[11,"type_id","","",155,[[["self"]],["typeid"]]],[11,"from","","",156,[[["t"]],["t"]]],[11,"try_from","","",156,[[["u"]],["result"]]],[11,"into","","",156,[[],["u"]]],[11,"try_into","","",156,[[],["result"]]],[11,"borrow","","",156,[[["self"]],["t"]]],[11,"borrow_mut","","",156,[[["self"]],["t"]]],[11,"type_id","","",156,[[["self"]],["typeid"]]],[11,"from","","",138,[[["t"]],["t"]]],[11,"try_from","","",138,[[["u"]],["result"]]],[11,"into","","",138,[[],["u"]]],[11,"try_into","","",138,[[],["result"]]],[11,"borrow","","",138,[[["self"]],["t"]]],[11,"borrow_mut","","",138,[[["self"]],["t"]]],[11,"type_id","","",138,[[["self"]],["typeid"]]],[11,"from","","",157,[[["t"]],["t"]]],[11,"try_from","","",157,[[["u"]],["result"]]],[11,"into","","",157,[[],["u"]]],[11,"try_into","","",157,[[],["result"]]],[11,"borrow","","",157,[[["self"]],["t"]]],[11,"borrow_mut","","",157,[[["self"]],["t"]]],[11,"type_id","","",157,[[["self"]],["typeid"]]],[11,"from","","",158,[[["t"]],["t"]]],[11,"try_from","","",158,[[["u"]],["result"]]],[11,"into","","",158,[[],["u"]]],[11,"try_into","","",158,[[],["result"]]],[11,"borrow","","",158,[[["self"]],["t"]]],[11,"borrow_mut","","",158,[[["self"]],["t"]]],[11,"type_id","","",158,[[["self"]],["typeid"]]],[11,"from","","",159,[[["t"]],["t"]]],[11,"try_from","","",159,[[["u"]],["result"]]],[11,"into","","",159,[[],["u"]]],[11,"try_into","","",159,[[],["result"]]],[11,"borrow","","",159,[[["self"]],["t"]]],[11,"borrow_mut","","",159,[[["self"]],["t"]]],[11,"type_id","","",159,[[["self"]],["typeid"]]],[11,"from","","",160,[[["t"]],["t"]]],[11,"try_from","","",160,[[["u"]],["result"]]],[11,"into","","",160,[[],["u"]]],[11,"try_into","","",160,[[],["result"]]],[11,"borrow","","",160,[[["self"]],["t"]]],[11,"borrow_mut","","",160,[[["self"]],["t"]]],[11,"type_id","","",160,[[["self"]],["typeid"]]],[11,"from","","",161,[[["t"]],["t"]]],[11,"try_from","","",161,[[["u"]],["result"]]],[11,"into","","",161,[[],["u"]]],[11,"try_into","","",161,[[],["result"]]],[11,"borrow","","",161,[[["self"]],["t"]]],[11,"borrow_mut","","",161,[[["self"]],["t"]]],[11,"type_id","","",161,[[["self"]],["typeid"]]],[11,"fmt","","",139,[[["formatter"],["self"]],[["result",["error"]],["error"]]]],[11,"clone","","",157,[[["self"]],["dir"]]],[11,"clone","","",0,[[["self"]],["group"]]],[11,"clone","","",1,[[["self"]],["utimbuf"]]],[11,"clone","","",2,[[["self"]],["timeval"]]],[11,"clone","","",3,[[["self"]],["timespec"]]],[11,"clone","","",4,[[["self"]],["rlimit"]]],[11,"clone","","",5,[[["self"]],["rusage"]]],[11,"clone","","",6,[[["self"]],["ipv6_mreq"]]],[11,"clone","","",7,[[["self"]],["hostent"]]],[11,"clone","","",8,[[["self"]],["iovec"]]],[11,"clone","","",9,[[["self"]],["pollfd"]]],[11,"clone","","",10,[[["self"]],["winsize"]]],[11,"clone","","",11,[[["self"]],["linger"]]],[11,"clone","","",12,[[["self"]],["sigval"]]],[11,"clone","","",13,[[["self"]],["itimerval"]]],[11,"clone","","",14,[[["self"]],["tms"]]],[11,"clone","","",15,[[["self"]],["servent"]]],[11,"clone","","",16,[[["self"]],["protoent"]]],[11,"clone","","",158,[[["self"]],["file"]]],[11,"clone","","",159,[[["self"]],["fpos_t"]]],[11,"clone","","",160,[[["self"]],["timezone"]]],[11,"clone","","",17,[[["self"]],["in_addr"]]],[11,"clone","","",18,[[["self"]],["ip_mreq"]]],[11,"clone","","",19,[[["self"]],["ip_mreq_source"]]],[11,"clone","","",20,[[["self"]],["sockaddr"]]],[11,"clone","","",21,[[["self"]],["sockaddr_in"]]],[11,"clone","","",22,[[["self"]],["sockaddr_in6"]]],[11,"clone","","",23,[[["self"]],["addrinfo"]]],[11,"clone","","",24,[[["self"]],["sockaddr_ll"]]],[11,"clone","","",140,[[["self"]],["fd_set"]]],[11,"clone","","",25,[[["self"]],["tm"]]],[11,"clone","","",26,[[["self"]],["sched_param"]]],[11,"clone","","",27,[[["self"]],["dl_info"]]],[11,"clone","","",28,[[["self"]],["lconv"]]],[11,"clone","","",29,[[["self"]],["in_pktinfo"]]],[11,"clone","","",30,[[["self"]],["ifaddrs"]]],[11,"clone","","",141,[[["self"]],["in6_rtmsg"]]],[11,"clone","","",31,[[["self"]],["arpreq"]]],[11,"clone","","",32,[[["self"]],["arpreq_old"]]],[11,"clone","","",33,[[["self"]],["arphdr"]]],[11,"clone","","",34,[[["self"]],["mmsghdr"]]],[11,"clone","","",35,[[["self"]],["epoll_event"]]],[11,"clone","","",36,[[["self"]],["sockaddr_un"]]],[11,"clone","","",37,[[["self"]],["sockaddr_storage"]]],[11,"clone","","",38,[[["self"]],["utsname"]]],[11,"clone","","",39,[[["self"]],["sigevent"]]],[11,"clone","","",161,[[["self"]],["fpos64_t"]]],[11,"clone","","",40,[[["self"]],["rlimit64"]]],[11,"clone","","",41,[[["self"]],["glob_t"]]],[11,"clone","","",42,[[["self"]],["passwd"]]],[11,"clone","","",43,[[["self"]],["spwd"]]],[11,"clone","","",44,[[["self"]],["dqblk"]]],[11,"clone","","",45,[[["self"]],["signalfd_siginfo"]]],[11,"clone","","",46,[[["self"]],["itimerspec"]]],[11,"clone","","",142,[[["self"]],["fsid_t"]]],[11,"clone","","",47,[[["self"]],["packet_mreq"]]],[11,"clone","","",143,[[["self"]],["cpu_set_t"]]],[11,"clone","","",48,[[["self"]],["if_nameindex"]]],[11,"clone","","",49,[[["self"]],["msginfo"]]],[11,"clone","","",50,[[["self"]],["sembuf"]]],[11,"clone","","",51,[[["self"]],["input_event"]]],[11,"clone","","",52,[[["self"]],["input_id"]]],[11,"clone","","",53,[[["self"]],["input_absinfo"]]],[11,"clone","","",54,[[["self"]],["input_keymap_entry"]]],[11,"clone","","",55,[[["self"]],["input_mask"]]],[11,"clone","","",56,[[["self"]],["ff_replay"]]],[11,"clone","","",57,[[["self"]],["ff_trigger"]]],[11,"clone","","",58,[[["self"]],["ff_envelope"]]],[11,"clone","","",59,[[["self"]],["ff_constant_effect"]]],[11,"clone","","",60,[[["self"]],["ff_ramp_effect"]]],[11,"clone","","",61,[[["self"]],["ff_condition_effect"]]],[11,"clone","","",62,[[["self"]],["ff_periodic_effect"]]],[11,"clone","","",63,[[["self"]],["ff_rumble_effect"]]],[11,"clone","","",64,[[["self"]],["ff_effect"]]],[11,"clone","","",65,[[["self"]],["dl_phdr_info"]]],[11,"clone","","",66,[[["self"]],["elf32_ehdr"]]],[11,"clone","","",67,[[["self"]],["elf64_ehdr"]]],[11,"clone","","",68,[[["self"]],["elf32_sym"]]],[11,"clone","","",69,[[["self"]],["elf64_sym"]]],[11,"clone","","",70,[[["self"]],["elf32_phdr"]]],[11,"clone","","",71,[[["self"]],["elf64_phdr"]]],[11,"clone","","",72,[[["self"]],["elf32_shdr"]]],[11,"clone","","",73,[[["self"]],["elf64_shdr"]]],[11,"clone","","",74,[[["self"]],["elf32_chdr"]]],[11,"clone","","",75,[[["self"]],["elf64_chdr"]]],[11,"clone","","",76,[[["self"]],["ucred"]]],[11,"clone","","",77,[[["self"]],["mntent"]]],[11,"clone","","",144,[[["self"]],["posix_spawn_file_actions_t"]]],[11,"clone","","",145,[[["self"]],["posix_spawnattr_t"]]],[11,"clone","","",78,[[["self"]],["genlmsghdr"]]],[11,"clone","","",79,[[["self"]],["in6_pktinfo"]]],[11,"clone","","",80,[[["self"]],["arpd_request"]]],[11,"clone","","",81,[[["self"]],["inotify_event"]]],[11,"clone","","",82,[[["self"]],["fanotify_response"]]],[11,"clone","","",83,[[["self"]],["sockaddr_vm"]]],[11,"clone","","",84,[[["self"]],["regmatch_t"]]],[11,"clone","","",85,[[["self"]],["sock_extended_err"]]],[11,"clone","","",86,[[["self"]],["sockaddr_nl"]]],[11,"clone","","",87,[[["self"]],["dirent"]]],[11,"clone","","",88,[[["self"]],["dirent64"]]],[11,"clone","","",89,[[["self"]],["sockaddr_alg"]]],[11,"clone","","",90,[[["self"]],["af_alg_iv"]]],[11,"clone","","",91,[[["self"]],["mq_attr"]]],[11,"clone","","",92,[[["self"]],["statx"]]],[11,"clone","","",93,[[["self"]],["statx_timestamp"]]],[11,"clone","","",94,[[["self"]],["aiocb"]]],[11,"clone","","",95,[[["self"]],["__exit_status"]]],[11,"clone","","",96,[[["self"]],["__timeval"]]],[11,"clone","","",97,[[["self"]],["glob64_t"]]],[11,"clone","","",98,[[["self"]],["msghdr"]]],[11,"clone","","",99,[[["self"]],["cmsghdr"]]],[11,"clone","","",100,[[["self"]],["termios"]]],[11,"clone","","",101,[[["self"]],["mallinfo"]]],[11,"clone","","",102,[[["self"]],["nlmsghdr"]]],[11,"clone","","",103,[[["self"]],["nlmsgerr"]]],[11,"clone","","",104,[[["self"]],["nl_pktinfo"]]],[11,"clone","","",105,[[["self"]],["nl_mmap_req"]]],[11,"clone","","",106,[[["self"]],["nl_mmap_hdr"]]],[11,"clone","","",107,[[["self"]],["nlattr"]]],[11,"clone","","",108,[[["self"]],["rtentry"]]],[11,"clone","","",109,[[["self"]],["timex"]]],[11,"clone","","",110,[[["self"]],["ntptimeval"]]],[11,"clone","","",146,[[["self"]],["regex_t"]]],[11,"clone","","",111,[[["self"]],["utmpx"]]],[11,"clone","","",147,[[["self"]],["sigset_t"]]],[11,"clone","","",112,[[["self"]],["sysinfo"]]],[11,"clone","","",113,[[["self"]],["msqid_ds"]]],[11,"clone","","",114,[[["self"]],["sigaction"]]],[11,"clone","","",115,[[["self"]],["statfs"]]],[11,"clone","","",116,[[["self"]],["flock"]]],[11,"clone","","",117,[[["self"]],["flock64"]]],[11,"clone","","",118,[[["self"]],["siginfo_t"]]],[11,"clone","","",119,[[["self"]],["stack_t"]]],[11,"clone","","",120,[[["self"]],["stat"]]],[11,"clone","","",121,[[["self"]],["stat64"]]],[11,"clone","","",122,[[["self"]],["statfs64"]]],[11,"clone","","",123,[[["self"]],["statvfs64"]]],[11,"clone","","",148,[[["self"]],["pthread_attr_t"]]],[11,"clone","","",124,[[["self"]],["_libc_fpxreg"]]],[11,"clone","","",125,[[["self"]],["_libc_xmmreg"]]],[11,"clone","","",126,[[["self"]],["_libc_fpstate"]]],[11,"clone","","",127,[[["self"]],["user_regs_struct"]]],[11,"clone","","",128,[[["self"]],["user"]]],[11,"clone","","",129,[[["self"]],["mcontext_t"]]],[11,"clone","","",130,[[["self"]],["ipc_perm"]]],[11,"clone","","",131,[[["self"]],["shmid_ds"]]],[11,"clone","","",132,[[["self"]],["termios2"]]],[11,"clone","","",133,[[["self"]],["ip_mreqn"]]],[11,"clone","","",134,[[["self"]],["user_fpregs_struct"]]],[11,"clone","","",135,[[["self"]],["ucontext_t"]]],[11,"clone","","",136,[[["self"]],["statvfs"]]],[11,"clone","","",149,[[["self"]],["max_align_t"]]],[11,"clone","","",150,[[["self"]],["sem_t"]]],[11,"clone","","",151,[[["self"]],["pthread_mutexattr_t"]]],[11,"clone","","",152,[[["self"]],["pthread_rwlockattr_t"]]],[11,"clone","","",153,[[["self"]],["pthread_condattr_t"]]],[11,"clone","","",137,[[["self"]],["fanotify_event_metadata"]]],[11,"clone","","",154,[[["self"]],["pthread_cond_t"]]],[11,"clone","","",155,[[["self"]],["pthread_mutex_t"]]],[11,"clone","","",156,[[["self"]],["pthread_rwlock_t"]]],[11,"clone","","",138,[[["self"]],["in6_addr"]]]],"p":[[3,"group"],[3,"utimbuf"],[3,"timeval"],[3,"timespec"],[3,"rlimit"],[3,"rusage"],[3,"ipv6_mreq"],[3,"hostent"],[3,"iovec"],[3,"pollfd"],[3,"winsize"],[3,"linger"],[3,"sigval"],[3,"itimerval"],[3,"tms"],[3,"servent"],[3,"protoent"],[3,"in_addr"],[3,"ip_mreq"],[3,"ip_mreq_source"],[3,"sockaddr"],[3,"sockaddr_in"],[3,"sockaddr_in6"],[3,"addrinfo"],[3,"sockaddr_ll"],[3,"tm"],[3,"sched_param"],[3,"Dl_info"],[3,"lconv"],[3,"in_pktinfo"],[3,"ifaddrs"],[3,"arpreq"],[3,"arpreq_old"],[3,"arphdr"],[3,"mmsghdr"],[3,"epoll_event"],[3,"sockaddr_un"],[3,"sockaddr_storage"],[3,"utsname"],[3,"sigevent"],[3,"rlimit64"],[3,"glob_t"],[3,"passwd"],[3,"spwd"],[3,"dqblk"],[3,"signalfd_siginfo"],[3,"itimerspec"],[3,"packet_mreq"],[3,"if_nameindex"],[3,"msginfo"],[3,"sembuf"],[3,"input_event"],[3,"input_id"],[3,"input_absinfo"],[3,"input_keymap_entry"],[3,"input_mask"],[3,"ff_replay"],[3,"ff_trigger"],[3,"ff_envelope"],[3,"ff_constant_effect"],[3,"ff_ramp_effect"],[3,"ff_condition_effect"],[3,"ff_periodic_effect"],[3,"ff_rumble_effect"],[3,"ff_effect"],[3,"dl_phdr_info"],[3,"Elf32_Ehdr"],[3,"Elf64_Ehdr"],[3,"Elf32_Sym"],[3,"Elf64_Sym"],[3,"Elf32_Phdr"],[3,"Elf64_Phdr"],[3,"Elf32_Shdr"],[3,"Elf64_Shdr"],[3,"Elf32_Chdr"],[3,"Elf64_Chdr"],[3,"ucred"],[3,"mntent"],[3,"genlmsghdr"],[3,"in6_pktinfo"],[3,"arpd_request"],[3,"inotify_event"],[3,"fanotify_response"],[3,"sockaddr_vm"],[3,"regmatch_t"],[3,"sock_extended_err"],[3,"sockaddr_nl"],[3,"dirent"],[3,"dirent64"],[3,"sockaddr_alg"],[3,"af_alg_iv"],[3,"mq_attr"],[3,"statx"],[3,"statx_timestamp"],[3,"aiocb"],[3,"__exit_status"],[3,"__timeval"],[3,"glob64_t"],[3,"msghdr"],[3,"cmsghdr"],[3,"termios"],[3,"mallinfo"],[3,"nlmsghdr"],[3,"nlmsgerr"],[3,"nl_pktinfo"],[3,"nl_mmap_req"],[3,"nl_mmap_hdr"],[3,"nlattr"],[3,"rtentry"],[3,"timex"],[3,"ntptimeval"],[3,"utmpx"],[3,"sysinfo"],[3,"msqid_ds"],[3,"sigaction"],[3,"statfs"],[3,"flock"],[3,"flock64"],[3,"siginfo_t"],[3,"stack_t"],[3,"stat"],[3,"stat64"],[3,"statfs64"],[3,"statvfs64"],[3,"_libc_fpxreg"],[3,"_libc_xmmreg"],[3,"_libc_fpstate"],[3,"user_regs_struct"],[3,"user"],[3,"mcontext_t"],[3,"ipc_perm"],[3,"shmid_ds"],[3,"termios2"],[3,"ip_mreqn"],[3,"user_fpregs_struct"],[3,"ucontext_t"],[3,"statvfs"],[3,"fanotify_event_metadata"],[3,"in6_addr"],[4,"c_void"],[3,"fd_set"],[3,"in6_rtmsg"],[3,"fsid_t"],[3,"cpu_set_t"],[3,"posix_spawn_file_actions_t"],[3,"posix_spawnattr_t"],[3,"regex_t"],[3,"sigset_t"],[3,"pthread_attr_t"],[3,"max_align_t"],[3,"sem_t"],[3,"pthread_mutexattr_t"],[3,"pthread_rwlockattr_t"],[3,"pthread_condattr_t"],[3,"pthread_cond_t"],[3,"pthread_mutex_t"],[3,"pthread_rwlock_t"],[4,"DIR"],[4,"FILE"],[4,"fpos_t"],[4,"timezone"],[4,"fpos64_t"]]};
searchIndex["linked_hash_map"] = {"doc":"A `HashMap` wrapper that holds key-value pairs in…","i":[[3,"LinkedHashMap","linked_hash_map","A linked hash map.",null,null],[3,"Iter","","An insertion-order iterator over a `LinkedHashMap`'s…",null,null],[3,"IterMut","","An insertion-order iterator over a `LinkedHashMap`'s…",null,null],[3,"IntoIter","","A consuming insertion-order iterator over a…",null,null],[3,"Entries","","An insertion-order iterator over a `LinkedHashMap`'s…",null,null],[3,"Keys","","An insertion-order iterator over a `LinkedHashMap`'s keys.",null,null],[3,"Values","","An insertion-order iterator over a `LinkedHashMap`'s values.",null,null],[3,"OccupiedEntry","","A view into a single occupied location in a `LinkedHashMap`.",null,null],[3,"VacantEntry","","A view into a single empty location in a `LinkedHashMap`.",null,null],[4,"Entry","","A view into a single location in a map, which may be…",null,null],[13,"Occupied","","An occupied Entry.",0,null],[13,"Vacant","","A vacant Entry.",0,null],[11,"new","","Creates a linked hash map.",1,[[],["self"]]],[11,"with_capacity","","Creates an empty linked hash map with the given initial…",1,[[["usize"]],["self"]]],[11,"with_hasher","","Creates an empty linked hash map with the given initial…",1,[[["s"]],["self"]]],[11,"with_capacity_and_hasher","","Creates an empty linked hash map with the given initial…",1,[[["s"],["usize"]],["self"]]],[11,"reserve","","Reserves capacity for at least `additional` more elements…",1,[[["self"],["usize"]]]],[11,"shrink_to_fit","","Shrinks the capacity of the map as much as possible. It…",1,[[["self"]]]],[11,"entry","","Gets the given key's corresponding entry in the map for…",1,[[["self"],["k"]],["entry"]]],[11,"entries","","Returns an iterator visiting all entries in insertion…",1,[[["self"]],["entries"]]],[11,"insert","","Inserts a key-value pair into the map. If the key already…",1,[[["self"],["k"],["v"]],["option"]]],[11,"contains_key","","Checks if the map contains the given key.",1,[[["self"],["q"]],["bool"]]],[11,"get","","Returns the value corresponding to the key in the map.",1,[[["self"],["q"]],[["option"],["v"]]]],[11,"get_mut","","Returns the mutable reference corresponding to the key in…",1,[[["self"],["q"]],[["option"],["v"]]]],[11,"get_refresh","","Returns the value corresponding to the key in the map.",1,[[["self"],["q"]],[["option"],["v"]]]],[11,"remove","","Removes and returns the value corresponding to the key…",1,[[["self"],["q"]],["option"]]],[11,"capacity","","Returns the maximum number of key-value pairs the map can…",1,[[["self"]],["usize"]]],[11,"pop_front","","Removes the first entry.",1,[[["self"]],["option"]]],[11,"front","","Gets the first entry.",1,[[["self"]],["option"]]],[11,"pop_back","","Removes the last entry.",1,[[["self"]],["option"]]],[11,"back","","Gets the last entry.",1,[[["self"]],["option"]]],[11,"len","","Returns the number of key-value pairs in the map.",1,[[["self"]],["usize"]]],[11,"is_empty","","Returns whether the map is currently empty.",1,[[["self"]],["bool"]]],[11,"hasher","","Returns a reference to the map's hasher.",1,[[["self"]],["s"]]],[11,"clear","","Clears the map of all key-value pairs.",1,[[["self"]]]],[11,"iter","","Returns a double-ended iterator visiting all key-value…",1,[[["self"]],["iter"]]],[11,"iter_mut","","Returns a double-ended iterator visiting all key-value…",1,[[["self"]],["itermut"]]],[11,"keys","","Returns a double-ended iterator visiting all key in order…",1,[[["self"]],["keys"]]],[11,"values","","Returns a double-ended iterator visiting all values in…",1,[[["self"]],["values"]]],[11,"key","","Returns the entry key",0,[[["self"]],["k"]]],[11,"or_insert","","Ensures a value is in the entry by inserting the default…",0,[[["v"]],["v"]]],[11,"or_insert_with","","Ensures a value is in the entry by inserting the result of…",0,[[["fnonce"]],["v"]]],[11,"key","","Gets a reference to the entry key",2,[[["self"]],["k"]]],[11,"get","","Gets a reference to the value in the entry.",2,[[["self"]],["v"]]],[11,"get_mut","","Gets a mutable reference to the value in the entry.",2,[[["self"]],["v"]]],[11,"into_mut","","Converts the OccupiedEntry into a mutable reference to the…",2,[[],["v"]]],[11,"insert","","Sets the value of the entry, and returns the entry's old…",2,[[["self"],["v"]],["v"]]],[11,"remove","","Takes the value out of the entry, and returns it",2,[[],["v"]]],[11,"key","","Gets a reference to the entry key",3,[[["self"]],["k"]]],[11,"insert","","Sets the value of the entry with the VacantEntry's key,…",3,[[["v"]],["v"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"into_iter","","",1,[[],["i"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"into_iter","","",4,[[],["i"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,[[["self"],["t"]]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"into_iter","","",5,[[],["i"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"into_iter","","",6,[[],["i"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,[[["self"],["t"]]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"into_iter","","",7,[[],["i"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"into_iter","","",8,[[],["i"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,[[["self"],["t"]]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[],["u"]]],[11,"into_iter","","",9,[[],["i"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,[[["self"],["t"]]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"drop","","",1,[[["self"]]]],[11,"drop","","",6,[[["self"]]]],[11,"next_back","","",4,[[["self"]],["option"]]],[11,"next_back","","",5,[[["self"]],["option"]]],[11,"next_back","","",6,[[["self"]],["option"]]],[11,"next_back","","",8,[[["self"]],[["option"],["k"]]]],[11,"next_back","","",9,[[["self"]],[["option"],["v"]]]],[11,"len","","",4,[[["self"]],["usize"]]],[11,"len","","",5,[[["self"]],["usize"]]],[11,"len","","",6,[[["self"]],["usize"]]],[11,"len","","",8,[[["self"]],["usize"]]],[11,"len","","",9,[[["self"]],["usize"]]],[11,"extend","","",1,[[["self"],["intoiterator"]]]],[11,"extend","","",1,[[["self"],["intoiterator"]]]],[11,"into_iter","","",1,[[],["intoiter"]]],[11,"next","","",4,[[["self"]],["option"]]],[11,"size_hint","","",4,[[["self"]]]],[11,"next","","",5,[[["self"]],["option"]]],[11,"size_hint","","",5,[[["self"]]]],[11,"next","","",6,[[["self"]],["option"]]],[11,"size_hint","","",6,[[["self"]]]],[11,"next","","",7,[[["self"]],[["option",["occupiedentry"]],["occupiedentry"]]]],[11,"size_hint","","",7,[[["self"]]]],[11,"next","","",8,[[["self"]],[["option"],["k"]]]],[11,"size_hint","","",8,[[["self"]]]],[11,"next","","",9,[[["self"]],[["option"],["v"]]]],[11,"size_hint","","",9,[[["self"]]]],[11,"clone","","",1,[[["self"]],["self"]]],[11,"clone","","",4,[[["self"]],["self"]]],[11,"clone","","",6,[[["self"]],["self"]]],[11,"clone","","",8,[[["self"]],["self"]]],[11,"clone","","",9,[[["self"]],["self"]]],[11,"default","","",1,[[],["self"]]],[11,"cmp","","",1,[[["self"]],["ordering"]]],[11,"eq","","",1,[[["self"]],["bool"]]],[11,"partial_cmp","","",1,[[["self"]],[["ordering"],["option",["ordering"]]]]],[11,"lt","","",1,[[["self"]],["bool"]]],[11,"le","","",1,[[["self"]],["bool"]]],[11,"ge","","",1,[[["self"]],["bool"]]],[11,"gt","","",1,[[["self"]],["bool"]]],[11,"fmt","","Returns a string that lists the key-value pairs in…",1,[[["formatter"],["self"]],["result"]]],[11,"index","","",1,[[["self"],["q"]],["v"]]],[11,"index_mut","","",1,[[["self"],["q"]],["v"]]],[11,"hash","","",1,[[["self"],["h"]]]],[11,"from_iter","","",1,[[["intoiterator"]],["self"]]]],"p":[[4,"Entry"],[3,"LinkedHashMap"],[3,"OccupiedEntry"],[3,"VacantEntry"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"Entries"],[3,"Keys"],[3,"Values"]]};
searchIndex["linked_hash_set"] = {"doc":"A linked hash set implementation based on the…","i":[[3,"LinkedHashSet","linked_hash_set","A linked hash set implemented as a…",null,null],[3,"Iter","","An iterator over the items of a `LinkedHashSet`.",null,null],[3,"IntoIter","","An owning iterator over the items of a `LinkedHashSet`.",null,null],[3,"Intersection","","A lazy iterator producing elements in the intersection of…",null,null],[3,"Difference","","A lazy iterator producing elements in the difference of…",null,null],[3,"SymmetricDifference","","A lazy iterator producing elements in the symmetric…",null,null],[3,"Union","","A lazy iterator producing elements in the union of…",null,null],[11,"new","","Creates an empty `LinkedHashSet`.",0,[[],[["randomstate"],["linkedhashset",["randomstate"]]]]],[11,"with_capacity","","Creates an empty `LinkedHashSet` with the specified…",0,[[["usize"]],[["randomstate"],["linkedhashset",["randomstate"]]]]],[11,"with_hasher","","Creates a new empty hash set which will use the given…",0,[[["s"]],["linkedhashset"]]],[11,"with_capacity_and_hasher","","Creates an empty `LinkedHashSet` with with the specified…",0,[[["s"],["usize"]],["linkedhashset"]]],[11,"hasher","","Returns a reference to the set's `BuildHasher`.",0,[[["self"]],["s"]]],[11,"capacity","","Returns the number of elements the set can hold without…",0,[[["self"]],["usize"]]],[11,"reserve","","Reserves capacity for at least `additional` more elements…",0,[[["self"],["usize"]]]],[11,"shrink_to_fit","","Shrinks the capacity of the set as much as possible. It…",0,[[["self"]]]],[11,"iter","","An iterator visiting all elements in insertion order. The…",0,[[["self"]],["iter"]]],[11,"difference","","Visits the values representing the difference, i.e. the…",0,[[["self"],["linkedhashset"]],["difference"]]],[11,"symmetric_difference","","Visits the values representing the symmetric difference,…",0,[[["self"],["linkedhashset"]],["symmetricdifference"]]],[11,"intersection","","Visits the values representing the intersection, i.e. the…",0,[[["self"],["linkedhashset"]],["intersection"]]],[11,"union","","Visits the values representing the union, i.e. all the…",0,[[["self"],["linkedhashset"]],["union"]]],[11,"len","","Returns the number of elements in the set.",0,[[["self"]],["usize"]]],[11,"is_empty","","Returns true if the set contains no elements.",0,[[["self"]],["bool"]]],[11,"clear","","Clears the set, removing all values.",0,[[["self"]]]],[11,"contains","","Returns `true` if the set contains a value.",0,[[["self"],["q"]],["bool"]]],[11,"refresh","","If already present, moves a value to the end of the…",0,[[["self"],["q"]],["bool"]]],[11,"is_disjoint","","Returns `true` if `self` has no elements in common with…",0,[[["linkedhashset"],["self"]],["bool"]]],[11,"is_subset","","Returns `true` if the set is a subset of another, i.e.…",0,[[["linkedhashset"],["self"]],["bool"]]],[11,"is_superset","","Returns `true` if the set is a superset of another, i.e.…",0,[[["linkedhashset"],["self"]],["bool"]]],[11,"insert","","Adds a value to the set.",0,[[["self"],["t"]],["bool"]]],[11,"insert_if_absent","","Adds a value to the set, if not already present. The…",0,[[["self"],["t"]],["bool"]]],[11,"remove","","Removes a value from the set. Returns `true` if the value…",0,[[["self"],["q"]],["bool"]]],[11,"front","","Gets the first entry.",0,[[["self"]],[["t"],["option"]]]],[11,"pop_front","","Removes the first entry.",0,[[["self"]],["option"]]],[11,"back","","Gets the last entry.",0,[[["self"]],[["t"],["option"]]]],[11,"pop_back","","Removes the last entry.",0,[[["self"]],["option"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"into_iter","","",0,[[],["i"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"into_iter","","",1,[[],["i"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"into_iter","","",2,[[],["i"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"into_iter","","",3,[[],["i"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"into_iter","","",4,[[],["i"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,[[["self"],["t"]]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"into_iter","","",5,[[],["i"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,[[["self"],["t"]]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"into_iter","","",6,[[],["i"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,[[["self"],["t"]]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"next_back","","",1,[[["self"]],[["option"],["t"]]]],[11,"next_back","","",2,[[["self"]],["option"]]],[11,"len","","",1,[[["self"]],["usize"]]],[11,"len","","",2,[[["self"]],["usize"]]],[11,"extend","","",0,[[["self"],["intoiterator"]]]],[11,"extend","","",0,[[["intoiterator"],["self"]]]],[11,"into_iter","","Creates a consuming iterator, that is, one that moves each…",0,[[],["intoiter"]]],[11,"next","","",1,[[["self"]],[["option"],["k"]]]],[11,"size_hint","","",1,[[["self"]]]],[11,"next","","",2,[[["self"]],["option"]]],[11,"size_hint","","",2,[[["self"]]]],[11,"next","","",3,[[["self"]],[["option"],["t"]]]],[11,"size_hint","","",3,[[["self"]]]],[11,"next","","",4,[[["self"]],[["option"],["t"]]]],[11,"size_hint","","",4,[[["self"]]]],[11,"next","","",5,[[["self"]],[["option"],["t"]]]],[11,"size_hint","","",5,[[["self"]]]],[11,"next","","",6,[[["self"]],[["option"],["t"]]]],[11,"size_hint","","",6,[[["self"]]]],[11,"clone","","",0,[[["self"]],["self"]]],[11,"clone","","",1,[[["self"]],["iter"]]],[11,"clone","","",3,[[["self"]],["intersection"]]],[11,"clone","","",4,[[["self"]],["difference"]]],[11,"clone","","",5,[[["self"]],["symmetricdifference"]]],[11,"clone","","",6,[[["self"]],["union"]]],[11,"default","","Creates an empty `LinkedHashSet<T, S>` with the `Default`…",0,[[],["linkedhashset"]]],[11,"eq","","",0,[[["linkedhashset"],["self"]],["bool"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",6,[[["formatter"],["self"]],["result"]]],[11,"hash","","",0,[[["self"],["h"]]]],[11,"from_iter","","",0,[[["intoiterator"]],["linkedhashset"]]]],"p":[[3,"LinkedHashSet"],[3,"Iter"],[3,"IntoIter"],[3,"Intersection"],[3,"Difference"],[3,"SymmetricDifference"],[3,"Union"]]};
searchIndex["log"] = {"doc":"A lightweight logging facade.","i":[[3,"LogRecord","log","The \"payload\" of a log message.",null,null],[3,"LogMetadata","","Metadata about a log message.",null,null],[3,"LogLocation","","The location of a log message.",null,null],[3,"MaxLogLevelFilter","","A token providing read and write access to the global…",null,null],[3,"SetLoggerError","","The type returned by `set_logger` if `set_logger` has…",null,null],[3,"ShutdownLoggerError","","The type returned by `shutdown_logger_raw` if…",null,null],[4,"LogLevel","","An enum representing the available verbosity levels of the…",null,null],[13,"Error","","The \"error\" level.",0,null],[13,"Warn","","The \"warn\" level.",0,null],[13,"Info","","The \"info\" level.",0,null],[13,"Debug","","The \"debug\" level.",0,null],[13,"Trace","","The \"trace\" level.",0,null],[4,"LogLevelFilter","","An enum representing the available verbosity level filters…",null,null],[13,"Off","","A level lower than all log levels.",1,null],[13,"Error","","Corresponds to the `Error` log level.",1,null],[13,"Warn","","Corresponds to the `Warn` log level.",1,null],[13,"Info","","Corresponds to the `Info` log level.",1,null],[13,"Debug","","Corresponds to the `Debug` log level.",1,null],[13,"Trace","","Corresponds to the `Trace` log level.",1,null],[5,"max_log_level","","Returns the current maximum log level.",null,[[],["loglevelfilter"]]],[5,"set_logger","","Sets the global logger.",null,[[["m"]],[["setloggererror"],["result",["setloggererror"]]]]],[5,"set_logger_raw","","Sets the global logger from a raw pointer.",null,[[["m"]],[["setloggererror"],["result",["setloggererror"]]]]],[5,"shutdown_logger","","Shuts down the global logger.",null,[[],[["box",["log"]],["result",["box","shutdownloggererror"]],["shutdownloggererror"]]]],[5,"shutdown_logger_raw","","Shuts down the global logger.",null,[[],[["shutdownloggererror"],["result",["shutdownloggererror"]]]]],[8,"Log","","A trait encapsulating the operations required of a logger",null,null],[10,"enabled","","Determines if a log message with the specified metadata…",2,[[["self"],["logmetadata"]],["bool"]]],[10,"log","","Logs the `LogRecord`.",2,[[["self"],["logrecord"]]]],[11,"max","","Returns the most verbose logging level.",0,[[],["loglevel"]]],[11,"to_log_level_filter","","Converts the `LogLevel` to the equivalent `LogLevelFilter`.",0,[[["self"]],["loglevelfilter"]]],[11,"max","","Returns the most verbose logging level filter.",1,[[],["loglevelfilter"]]],[11,"to_log_level","","Converts `self` to the equivalent `LogLevel`.",1,[[["self"]],[["loglevel"],["option",["loglevel"]]]]],[11,"args","","The message body.",3,[[["self"]],["arguments"]]],[11,"metadata","","Metadata about the log directive.",3,[[["self"]],["logmetadata"]]],[11,"location","","The location of the log directive.",3,[[["self"]],["loglocation"]]],[11,"level","","The verbosity level of the message.",3,[[["self"]],["loglevel"]]],[11,"target","","The name of the target of the directive.",3,[[["self"]],["str"]]],[11,"level","","The verbosity level of the message.",4,[[["self"]],["loglevel"]]],[11,"target","","The name of the target of the directive.",4,[[["self"]],["str"]]],[11,"module_path","","The module path of the message.",5,[[["self"]],["str"]]],[11,"file","","The source file containing the message.",5,[[["self"]],["str"]]],[11,"line","","The line containing the message.",5,[[["self"]],["u32"]]],[11,"get","","Gets the current maximum log level filter.",6,[[["self"]],["loglevelfilter"]]],[11,"set","","Sets the maximum log level.",6,[[["loglevelfilter"],["self"]]]],[14,"log","","The standard logging macro.",null,null],[14,"error","","Logs a message at the error level.",null,null],[14,"warn","","Logs a message at the warn level.",null,null],[14,"info","","Logs a message at the info level.",null,null],[14,"debug","","Logs a message at the debug level.",null,null],[14,"trace","","Logs a message at the trace level.",null,null],[14,"log_enabled","","Determines if a message logged at the specified level in…",null,null],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,[[["self"],["t"]]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"to_string","","",7,[[["self"]],["string"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"to_string","","",8,[[["self"]],["string"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"to_string","","",1,[[["self"]],["string"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"clone","","",0,[[["self"]],["loglevel"]]],[11,"clone","","",1,[[["self"]],["loglevelfilter"]]],[11,"clone","","",5,[[["self"]],["loglocation"]]],[11,"cmp","","",0,[[["loglevel"],["self"]],["ordering"]]],[11,"cmp","","",1,[[["self"],["loglevelfilter"]],["ordering"]]],[11,"eq","","",0,[[["loglevel"],["self"]],["bool"]]],[11,"eq","","",0,[[["self"],["loglevelfilter"]],["bool"]]],[11,"eq","","",1,[[["self"],["loglevelfilter"]],["bool"]]],[11,"eq","","",1,[[["loglevel"],["self"]],["bool"]]],[11,"partial_cmp","","",0,[[["loglevel"],["self"]],[["ordering"],["option",["ordering"]]]]],[11,"partial_cmp","","",0,[[["self"],["loglevelfilter"]],[["ordering"],["option",["ordering"]]]]],[11,"partial_cmp","","",1,[[["self"],["loglevelfilter"]],[["ordering"],["option",["ordering"]]]]],[11,"partial_cmp","","",1,[[["loglevel"],["self"]],[["ordering"],["option",["ordering"]]]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",6,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",7,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",8,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",7,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",8,[[["formatter"],["self"]],["result"]]],[11,"from_str","","",0,[[["str"]],[["loglevel"],["result",["loglevel"]]]]],[11,"from_str","","",1,[[["str"]],[["result",["loglevelfilter"]],["loglevelfilter"]]]],[11,"description","","",7,[[["self"]],["str"]]],[11,"description","","",8,[[["self"]],["str"]]]],"p":[[4,"LogLevel"],[4,"LogLevelFilter"],[8,"Log"],[3,"LogRecord"],[3,"LogMetadata"],[3,"LogLocation"],[3,"MaxLogLevelFilter"],[3,"SetLoggerError"],[3,"ShutdownLoggerError"]]};
searchIndex["lut"] = {"doc":"lut (lookup tables for every one)","i":[[3,"EmptyFlag","lut","",null,null],[3,"NoFlagsSet","","",null,null],[3,"Any","","",null,null],[3,"All","","",null,null],[11,"mask","","",0,[[]]],[11,"new","","",0,[[["flag"]],["self"]]],[11,"empty","","",0,[[],["self"]]],[11,"from_mask","","",0,[[],["self"]]],[11,"mask","","",1,[[]]],[11,"new","","",1,[[["flag"]],["self"]]],[11,"empty","","",1,[[],["self"]]],[11,"from_mask","","",1,[[],["self"]]],[0,"media_type_chars","","a lookup table for parsing/validating Media Types (also…",null,null],[3,"CText","lut::media_type_chars","CText",null,null],[3,"ObsNoWsCtl","","ObsNoWsCtl",null,null],[3,"HttpToken","","Rfc7230Token",null,null],[3,"Token","","Token (Mime)",null,null],[3,"RestrictedToken","","Restricted Token",null,null],[3,"QText","","QText",null,null],[3,"DQuoteOrEscape","","The characters mainly needing escaping i.e. '\"' and '\\'",null,null],[3,"Ws","","Ws  (\\t and \\r)",null,null],[3,"MediaTypeChars","","",null,null],[3,"QTextWs","","",null,null],[3,"ObsQText","","",null,null],[3,"ObsQTextWs","","",null,null],[3,"VChar","","",null,null],[3,"VCharWs","","",null,null],[8,"TableValue","lut","",null,null],[18,"MAX_FLAG_COUNT","","",2,null],[18,"ZERO","","",2,null],[8,"ConstFlagCount","","",null,null],[18,"FLAG_COUNT","","",3,null],[8,"Table","","",null,null],[16,"Value","","",4,null],[11,"mask","","",4,[[["flag"]]]],[10,"len","","",4,[[],["usize"]]],[10,"lookup","","",4,[[["usize"]]]],[10,"check_at","","",4,[[["usize"],["access"]],["bool"]]],[11,"unbound_check_at","","",4,[[["usize"],["access"]],["bool"]]],[8,"Flag","","",null,null],[18,"BIT_MASK","","",5,null],[8,"Access","","",null,null],[10,"check","","",6,[[["self"]],["bool"]]],[14,"new_table","","Example",null,null],[14,"merge_tables","","Example",null,null],[14,"accessor_all","","",null,null],[14,"accessor_any","","",null,null],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,[[["self"],["t"]]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,[[["self"],["t"]]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","lut::media_type_chars","",9,[[["t"]],["t"]]],[11,"into","","",9,[[],["u"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,[[["self"],["t"]]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[],["u"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,[[["self"],["t"]]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[],["u"]]],[11,"to_owned","","",11,[[["self"]],["t"]]],[11,"clone_into","","",11,[[["self"],["t"]]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"try_into","","",11,[[],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"type_id","","",11,[[["self"]],["typeid"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[],["u"]]],[11,"to_owned","","",12,[[["self"]],["t"]]],[11,"clone_into","","",12,[[["self"],["t"]]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"try_into","","",12,[[],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"type_id","","",12,[[["self"]],["typeid"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"into","","",13,[[],["u"]]],[11,"to_owned","","",13,[[["self"]],["t"]]],[11,"clone_into","","",13,[[["self"],["t"]]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"try_into","","",13,[[],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"type_id","","",13,[[["self"]],["typeid"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"into","","",14,[[],["u"]]],[11,"to_owned","","",14,[[["self"]],["t"]]],[11,"clone_into","","",14,[[["self"],["t"]]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"try_into","","",14,[[],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"type_id","","",14,[[["self"]],["typeid"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"into","","",15,[[],["u"]]],[11,"to_owned","","",15,[[["self"]],["t"]]],[11,"clone_into","","",15,[[["self"],["t"]]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"try_into","","",15,[[],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"type_id","","",15,[[["self"]],["typeid"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"into","","",16,[[],["u"]]],[11,"to_owned","","",16,[[["self"]],["t"]]],[11,"clone_into","","",16,[[["self"],["t"]]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"try_into","","",16,[[],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"type_id","","",16,[[["self"]],["typeid"]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"into","","",17,[[],["u"]]],[11,"to_owned","","",17,[[["self"]],["t"]]],[11,"clone_into","","",17,[[["self"],["t"]]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"try_into","","",17,[[],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"type_id","","",17,[[["self"]],["typeid"]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"into","","",18,[[],["u"]]],[11,"to_owned","","",18,[[["self"]],["t"]]],[11,"clone_into","","",18,[[["self"],["t"]]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"try_into","","",18,[[],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"type_id","","",18,[[["self"]],["typeid"]]],[11,"from","","",19,[[["t"]],["t"]]],[11,"into","","",19,[[],["u"]]],[11,"to_owned","","",19,[[["self"]],["t"]]],[11,"clone_into","","",19,[[["self"],["t"]]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"try_into","","",19,[[],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"type_id","","",19,[[["self"]],["typeid"]]],[11,"from","","",20,[[["t"]],["t"]]],[11,"into","","",20,[[],["u"]]],[11,"to_owned","","",20,[[["self"]],["t"]]],[11,"clone_into","","",20,[[["self"],["t"]]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"try_into","","",20,[[],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"type_id","","",20,[[["self"]],["typeid"]]],[11,"from","","",21,[[["t"]],["t"]]],[11,"into","","",21,[[],["u"]]],[11,"to_owned","","",21,[[["self"]],["t"]]],[11,"clone_into","","",21,[[["self"],["t"]]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"try_into","","",21,[[],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"type_id","","",21,[[["self"]],["typeid"]]],[11,"from","","",22,[[["t"]],["t"]]],[11,"into","","",22,[[],["u"]]],[11,"to_owned","","",22,[[["self"]],["t"]]],[11,"clone_into","","",22,[[["self"],["t"]]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"try_into","","",22,[[],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"type_id","","",22,[[["self"]],["typeid"]]],[11,"len","","",17,[[],["usize"]]],[11,"lookup","","",17,[[["usize"]]]],[11,"check_at","","",17,[[["usize"],["access"]],["bool"]]],[11,"check_flag_at","","",17,[[["usize"]],["bool"]]],[11,"check","lut","",7,[[["self"]],["bool"]]],[11,"check","","",8,[[["self"]],["bool"]]],[11,"check","","",0,[[["self"]],["bool"]]],[11,"check","","",1,[[["self"]],["bool"]]],[11,"check","lut::media_type_chars","",9,[[["self"]],["bool"]]],[11,"check","","",10,[[["self"]],["bool"]]],[11,"check","","",11,[[["self"]],["bool"]]],[11,"check","","",12,[[["self"]],["bool"]]],[11,"check","","",13,[[["self"]],["bool"]]],[11,"check","","",14,[[["self"]],["bool"]]],[11,"check","","",15,[[["self"]],["bool"]]],[11,"check","","",16,[[["self"]],["bool"]]],[11,"check","","",18,[[["self"]],["bool"]]],[11,"check","","",19,[[["self"]],["bool"]]],[11,"check","","",20,[[["self"]],["bool"]]],[11,"check","","",21,[[["self"]],["bool"]]],[11,"check","","",22,[[["self"]],["bool"]]],[11,"into","","",9,[[],["all"]]],[11,"into","","",9,[[],["any"]]],[11,"into","","",10,[[],["all"]]],[11,"into","","",10,[[],["any"]]],[11,"into","","",11,[[],["all"]]],[11,"into","","",11,[[],["any"]]],[11,"into","","",12,[[],["all"]]],[11,"into","","",12,[[],["any"]]],[11,"into","","",13,[[],["all"]]],[11,"into","","",13,[[],["any"]]],[11,"into","","",14,[[],["all"]]],[11,"into","","",14,[[],["any"]]],[11,"into","","",15,[[],["all"]]],[11,"into","","",15,[[],["any"]]],[11,"into","","",16,[[],["all"]]],[11,"into","","",16,[[],["any"]]],[11,"clone","lut","",7,[[["self"]],["emptyflag"]]],[11,"clone","","",8,[[["self"]],["noflagsset"]]],[11,"clone","","",0,[[["self"]],["any"]]],[11,"clone","","",1,[[["self"]],["all"]]],[11,"clone","lut::media_type_chars","",9,[[["self"]],["ctext"]]],[11,"clone","","",10,[[["self"]],["obsnowsctl"]]],[11,"clone","","",11,[[["self"]],["httptoken"]]],[11,"clone","","",12,[[["self"]],["token"]]],[11,"clone","","",13,[[["self"]],["restrictedtoken"]]],[11,"clone","","",14,[[["self"]],["qtext"]]],[11,"clone","","",15,[[["self"]],["dquoteorescape"]]],[11,"clone","","",16,[[["self"]],["ws"]]],[11,"clone","","",17,[[["self"]],["mediatypechars"]]],[11,"clone","","",18,[[["self"]],["qtextws"]]],[11,"clone","","",19,[[["self"]],["obsqtext"]]],[11,"clone","","",20,[[["self"]],["obsqtextws"]]],[11,"clone","","",21,[[["self"]],["vchar"]]],[11,"clone","","",22,[[["self"]],["vcharws"]]],[11,"default","","",9,[[],["self"]]],[11,"default","","",10,[[],["self"]]],[11,"default","","",11,[[],["self"]]],[11,"default","","",12,[[],["self"]]],[11,"default","","",13,[[],["self"]]],[11,"default","","",14,[[],["self"]]],[11,"default","","",15,[[],["self"]]],[11,"default","","",16,[[],["self"]]],[11,"default","","",18,[[],["self"]]],[11,"default","","",19,[[],["self"]]],[11,"default","","",20,[[],["self"]]],[11,"default","","",21,[[],["self"]]],[11,"default","","",22,[[],["self"]]],[11,"eq","lut","",0,[[["any"],["self"]],["bool"]]],[11,"ne","","",0,[[["any"],["self"]],["bool"]]],[11,"eq","","",1,[[["self"],["all"]],["bool"]]],[11,"ne","","",1,[[["self"],["all"]],["bool"]]],[11,"fmt","","",7,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",8,[[["formatter"],["self"]],["result"]]],[11,"fmt","lut::media_type_chars","",9,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",10,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",11,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",12,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",13,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",14,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",15,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",16,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",17,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",18,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",19,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",20,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",21,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",22,[[["formatter"],["self"]],["result"]]],[11,"bitand","lut","",1,[[["i"]],["self"]]],[11,"bitor","","",0,[[["i"]],["self"]]],[11,"bitand_assign","","",1,[[["self"],["i"]]]],[11,"bitor_assign","","",0,[[["self"],["i"]]]],[11,"hash","","",0,[[["self"],["__h"]]]],[11,"hash","","",1,[[["self"],["__h"]]]],[18,"MAX_FLAG_COUNT","","",2,null],[18,"ZERO","","",2,null],[18,"FLAG_COUNT","","",3,null],[11,"mask","","",4,[[["flag"]]]],[11,"unbound_check_at","","",4,[[["usize"],["access"]],["bool"]]],[18,"BIT_MASK","","",5,null]],"p":[[3,"Any"],[3,"All"],[8,"TableValue"],[8,"ConstFlagCount"],[8,"Table"],[8,"Flag"],[8,"Access"],[3,"EmptyFlag"],[3,"NoFlagsSet"],[3,"CText"],[3,"ObsNoWsCtl"],[3,"HttpToken"],[3,"Token"],[3,"RestrictedToken"],[3,"QText"],[3,"DQuoteOrEscape"],[3,"Ws"],[3,"MediaTypeChars"],[3,"QTextWs"],[3,"ObsQText"],[3,"ObsQTextWs"],[3,"VChar"],[3,"VCharWs"]]};
searchIndex["mail_core"] = {"doc":"Provides the core mail type `Mail` for the `mail` crate.…","i":[[3,"IRI","mail_core","A minimal IRI (International Resource Identifier)…",null,null],[3,"Source","","POD containing the IRI which should be used to laod a…",null,null],[12,"iri","","A International Resource Identifier pointing to a source…",0,null],[12,"use_media_type","","Allows specifying how the media type detection is done.",0,null],[12,"use_file_name","","Allows providing a explicit name overriding any inferred…",0,null],[3,"Metadata","","POD type containing FileMeta, Content-Type and Content-Id",null,null],[12,"file_meta","","File meta like file name or file read time.",1,null],[12,"media_type","","The media type of the data.",1,null],[12,"content_id","","The content id associated with the data.",1,null],[3,"Data","","A type containing some data and metadata for it.",null,null],[3,"EncData","","`EncData` is like `Data` but the buffer contains transfer…",null,null],[3,"ResourceContainerLoadingFuture","","",null,null],[3,"Mail","","A type representing a Mail.",null,null],[3,"MailFuture","","A future resolving to an encodable mail.",null,null],[3,"EncodableMail","","a mail with all contained futures resolved, so that it can…",null,null],[4,"UseMediaType","","Specifies how the content type should be handled when…",null,null],[13,"Auto","","Sniff content type if no content type was given from any…",2,null],[13,"Default","","Use this content type if no content type was given from…",2,null],[4,"TransferEncodingHint","","Hint to change how data should be transfer encoded.",null,null],[13,"UseBase64","","Use Base64 encoding.",3,null],[13,"UseQuotedPrintable","","Use Quoted-Printable encoding.",3,null],[13,"NoHint","","No hint for transfer encoding.",3,null],[4,"Resource","","A enum specifying a \"resource\" for a mail.",null,null],[13,"Source","","Provide a source which specify what data to use.",4,null],[13,"Data","","Provide the data used for the mail bodies content.",4,null],[13,"EncData","","Provides a already transfer encoded version of the `Data`…",4,null],[4,"MailBody","","A type which either represents a single body, or multiple…",null,null],[13,"SingleBody","","",5,null],[12,"body","mail_core::MailBody","",6,null],[13,"MultipleBodies","mail_core","",5,null],[12,"bodies","mail_core::MailBody","",7,null],[12,"hidden_text","","This is part of the standard! But we won't make it public…",7,null],[11,"from_parts","mail_core","Create a new IRI from a scheme part and a tail part.",8,[[["str"]],[["result",["invalidirischeme"]],["invalidirischeme"]]]],[11,"new","","crates a new a IRI",8,[[["i"]],[["result",["invalidirischeme"]],["invalidirischeme"]]]],[11,"with_tail","","Creates a new IRI with the same schema but a different tail.",8,[[["str"],["self"]],["self"]]],[11,"scheme","","The scheme part of the uri excluding the `:` seperator.",8,[[["self"]],["str"]]],[11,"tail","","the scheme specific part of the uri",8,[[["self"]],["str"]]],[11,"as_str","","returns the underlying string representation",8,[[["self"]],["str"]]],[0,"error","","Module containing all custom errors produced by this crate.",null,null],[3,"ResourceLoadingError","mail_core::error","The loading of an Resource failed.",null,null],[4,"ResourceError","","Error caused by failing to load an `Resource`",null,null],[13,"Loading","","The loading on itself failed.",9,null],[13,"Encoding","","The encoding of the resource failed.",9,null],[4,"ResourceLoadingErrorKind","","Reasons why the loading of an `Resource` can fail.",null,null],[13,"NotFound","","The resource wasn't found.",10,null],[13,"LoadingFailed","","The act of loading it failed (e.g. because of an I/0-Error)",10,null],[13,"MediaTypeDetectionFailed","","",10,null],[4,"OtherValidationError","","",null,null],[13,"ContentTypeHeaderGiven","","Non-multipart mail headers derive the Content-Type header…",11,null],[13,"ContentTransferEncodingHeaderGiven","","`Content-Transfer-Encoding` headers are always…",11,null],[13,"SingleMultipartMixup","","A non \"multipart\" media type was given as content type for…",11,null],[13,"InsertSinglepartContentTypeHeader","","Inserting a `Conent-Type` header into a singlepart body is…",11,null],[13,"MissingContentTypeHeader","","A multipart mail requires a `Content-Type` header to be…",11,null],[13,"NoFrom","","A mail (top level, not in multipart) requires a `From`…",11,null],[4,"MailError","","General Error combining most other error wrt. mail…",null,null],[13,"Encoding","","Encoding the mail failed.",12,null],[13,"Type","","Different implementations for the same header where mixed…",12,null],[13,"Component","","Creating a mail header body (component) failed.",12,null],[13,"Validation","","The mail has some invalid header or header combinations.",12,null],[13,"ResourceLoading","","Loading an resource failed.",12,null],[4,"ResourceNotUnloadableError","","Error returned when trying to unload and `Resource` and it…",null,null],[13,"InUse","","The resource can not be unloaded because its in use.",13,null],[13,"NoSource","","The resource can not be unloaded because it doesn't has a…",13,null],[11,"kind","","The kind of error which caused the loading to fail.",14,[[["self"]],["resourceloadingerrorkind"]]],[11,"source_iri","","The source IRI which was used when failing to load the…",14,[[["self"]],[["option",["iri"]],["iri"]]]],[11,"with_source_iri_or_else","","Sets the source IRI if not already set and returns self.",14,[[["f"]],["self"]]],[0,"utils","mail_core","Utilities.",null,null],[3,"Enabled","mail_core::utils","Struct implementing `ConstSwitch` with `ENABLED = true`.",null,null],[3,"Disabled","","Struct implementing `ConstSwitch` with `ENABLED = false`.",null,null],[5,"now","","Returns the current data time.",null,[[],[["utc"],["datetime",["utc"]]]]],[6,"SendBoxFuture","","Type alias for an boxed future which is Send + 'static.",null,null],[8,"ConstSwitch","","Trait to allow const `bool` values in generics.",null,null],[18,"ENABLED","","",15,null],[0,"mime","mail_core","Module containing some utilities for MIME usage/creation.",null,null],[5,"create_structured_random_boundary","mail_core::mime","Generate a boundary from a counter, \"=_^\" and a random…",null,[[["usize"]],["string"]]],[0,"context","mail_core","Provides the context needed for building/encoding mails.",null,null],[3,"CompositeContext","mail_core::context","The `CompositeContext` is the simplest way to get an…",null,null],[4,"MaybeEncData","","Represents Data which might already have been transfer…",null,null],[13,"Data","","The data is returned normally.",16,null],[13,"EncData","","The data is returned in a already transfer encoded variant.",16,null],[5,"default_impl_for_load_transfer_encoded_resource","","Provides the default impl for the…",null,[[["resource"]],[["resourceloadingerror"],["sendboxfuture",["encdata","resourceloadingerror"]],["encdata"]]]],[8,"Context","","This library needs a context for creating/encoding mails.",null,null],[10,"load_resource","","Loads and transfer encodes a `Data` instance.",17,[[["source"],["self"]],[["resourceloadingerror"],["sendboxfuture",["maybeencdata","resourceloadingerror"]],["maybeencdata"]]]],[11,"load_transfer_encoded_resource","","Loads and Transfer encodes a `Resource` instance.",17,[[["self"],["resource"]],[["resourceloadingerror"],["sendboxfuture",["encdata","resourceloadingerror"]],["encdata"]]]],[10,"generate_message_id","","generate a unique content id",17,[[["self"]],["messageid"]]],[10,"generate_content_id","","generate a unique content id",17,[[["self"]],["contentid"]]],[10,"offload","","offloads the execution of the future `fut` to somewhere…",17,[[["self"],["f"]],["sendboxfuture"]]],[11,"offload_fn","","offloads the execution of the function `func` to somewhere…",17,[[["fn"],["self"]],["sendboxfuture"]]],[8,"ResourceLoaderComponent","","Trait needed to be implemented for providing the resource…",null,null],[10,"load_resource","","Calls to `Context::load_resource` will be forwarded to…",18,[[["source"],["self"]],[["resourceloadingerror"],["sendboxfuture",["maybeencdata","resourceloadingerror"]],["maybeencdata"]]]],[11,"load_transfer_encoded_resource","","Calls to `Context::transfer_encode_resource` will be…",18,[[["self"],["resource"]],[["resourceloadingerror"],["sendboxfuture",["encdata","resourceloadingerror"]],["encdata"]]]],[8,"OffloaderComponent","","Trait needed to be implemented for providing the…",null,null],[10,"offload","","Calls to `Context::offload` and `Context::offload_fn` will…",19,[[["self"],["f"]],["sendboxfuture"]]],[8,"MailIdGenComponent","","Trait needed to be implemented for providing the id…",null,null],[10,"generate_message_id","","Calls to `Context::generate_message_id` will be forwarded…",20,[[["self"]],["messageid"]]],[10,"generate_content_id","","Calls to `Context::generate_content_id` will be forwarded…",20,[[["self"]],["contentid"]]],[11,"to_resource","","",16,[[],["resource"]]],[11,"encode","","",16,[[]]],[11,"new","","Create a new context from the given components.",21,[[["o"],["m"],["r"]],["self"]]],[11,"resource_loader","","Returns a reference to the resource loader component.",21,[[["self"]],["r"]]],[11,"offloader","","Returns a reference to the offloader component.",21,[[["self"]],["o"]]],[11,"id_gen","","Returns a reference to the id generation component.",21,[[["self"]],["m"]]],[11,"new","mail_core","Create a new data instance.",22,[[],["self"]]],[11,"plain_text","","",22,[[["contentid"]],["data"]]],[11,"buffer","","Access the raw data buffer of this instance.",22,[[["self"]],["arc"]]],[11,"metadata","","Access the metadata.",22,[[["self"]],["arc"]]],[11,"file_meta","","Access the file meta metadata.Fn",22,[[["self"]],["filemeta"]]],[11,"media_type","","Access the content type.",22,[[["self"]],["mediatype"]]],[11,"content_id","","Access the content id.",22,[[["self"]],["contentid"]]],[11,"transfer_encode","","Transfer encode the given data.",22,[[["transferencodinghint"],["self"]],["encdata"]]],[11,"transfer_encoded_buffer","","Access the raw transfer encoded data.",23,[[["self"]],["arc"]]],[11,"metadata","","Access the metadata.",23,[[["self"]],["arc"]]],[11,"file_meta","","Access the file meta metadata.Fn",23,[[["self"]],["filemeta"]]],[11,"media_type","","Access the content type.",23,[[["self"]],["mediatype"]]],[11,"encoding","","Access the transfer encoding used to encode the buffer.",23,[[["self"]],["transferencoding"]]],[11,"content_id","","Access the content id.",23,[[["self"]],["contentid"]]],[11,"load_container","","",4,[[["co"]],["resourcecontainerloadingfuture"]]],[11,"start_loading","","",24,[[["co"]],["self"]]],[11,"plain_text","","Creates a new text `Resource` with `text/plain;…",4,[[],["resource"]]],[11,"content_id","","Return the content id, if there is any.",4,[[["self"]],[["contentid"],["option",["contentid"]]]]],[11,"plain_text","","Create a new plain text mail.",25,[[],["self"]]],[11,"has_multipart_body","","Returns true if the body of the mail is a multipart body.",25,[[["self"]],["bool"]]],[11,"new_multipart_mail","","Create a new multipart mail with given content type and…",25,[[["vec",["mail"]],["mail"],["mediatype"]],["self"]]],[11,"new_singlepart_mail","","Create a new non-multipart mail for given `Resource` as…",25,[[["resource"]],["self"]]],[11,"insert_header","","Inserts a new header into the header map.",25,[[["self"],["header"]]]],[11,"insert_headers","","Inserts all headers into the inner header map.",25,[[["headermap"],["self"]]]],[11,"headers","","Returns a reference to the currently set headers.",25,[[["self"]],["headermap"]]],[11,"headers_mut","","Return a mutable reference to the currently set headers.",25,[[["self"]],["headermap"]]],[11,"body","","Returns a reference to the body/bodies.",25,[[["self"]],["mailbody"]]],[11,"body_mut","","Return a mutable reference to the body/bodies.",25,[[["self"]],["mailbody"]]],[11,"generally_validate_mail","","Validate the mail.",25,[[["self"]],[["mailerror"],["result",["mailerror"]]]]],[11,"into_encodable_mail","","Turns the mail into a future with resolves to an…",25,[[["context"]],[["context"],["mailfuture"]]]],[11,"is_multipart","","Returns `true` if it's an multipart body.",5,[[["self"]],["bool"]]],[11,"encode","","Encode the mail using the given encoding buffer.",26,[[["self"],["encodingbuffer"]],[["mailerror"],["result",["mailerror"]]]]],[11,"encode_into_bytes","","A wrapper for `encode` which will create a buffer, enocde…",26,[[["mailtype"],["self"]],[["mailerror"],["vec",["u8"]],["result",["vec","mailerror"]]]]],[0,"compose","","This module provides utilities for composing multipart…",null,null],[3,"BodyPart","mail_core::compose","Parts used to create a mail body (in a multipart mail).",null,null],[12,"resource","","A body created by a template.",27,null],[12,"inline_embeddings","","A number of embeddings which should be displayed inline.",27,null],[12,"attachments","","A number of embeddings which should be treated as…",27,null],[3,"MailParts","","Parts which can be used to compose a multipart mail.",null,null],[12,"alternative_bodies","","A vector of alternative bodies",28,null],[12,"inline_embeddings","","A number of embeddings which should be displayed inline.",28,null],[12,"attachments","","A number of embeddings which should be treated as…",28,null],[11,"compose","","Create a `Mail` instance based on this `MailParts` instance.",28,[[],["mail"]]],[11,"create_mail","","Creates a `Mail` instance from this `BodyPart` instance.",27,[[["vec"]],["mail"]]],[11,"create_mail","mail_core","Create a `Mail` instance representing this `Resource`.",4,[[],["mail"]]],[11,"create_mail_with_disposition","","",4,[[["dispositionkind"]],["mail"]]],[11,"wrap_with_mixed","","Create a `multipart/mixed` `Mail` instance containing this…",25,[[["vec",["mail"]],["mail"]],["mail"]]],[11,"wrap_with_alternatives","","Create a `multipart/alternative` `Mail` instance…",25,[[["vec",["mail"]],["mail"]],["mail"]]],[11,"wrap_with_related","","Creates a `multipart/related` `Mail` instance containing…",25,[[["vec",["mail"]],["mail"]],["mail"]]],[0,"default_impl","","This module provides an number of default implementations…",null,null],[3,"FsResourceLoader","mail_core::default_impl","By setting SchemeValidation to Disabled the…",null,null],[3,"HashedIdGen","","a id gen implementation using hash-ing to generate part of…",null,null],[5,"simple_cpu_pool","","Create a `futures_cpupool::CpuPool` with default parameters.",null,[[],["cpupool"]]],[5,"load_data","","",null,[[["string"],["pathbuf"],["option",["string"]],["f"],["usemediatype"]],[["sendboxfuture",["resourceloadingerror"]],["resourceloadingerror"]]]],[11,"new","","create a new file system based FileLoader, which will…",29,[[["pathbuf"],["into",["pathbuf"]]],["self"]]],[11,"new_with_scheme","","",29,[[["pathbuf"],["into",["pathbuf"]],["str"]],["self"]]],[11,"with_cwd_root","","",29,[[],[["result",["error"]],["error"]]]],[11,"root","","",29,[[["self"]],["path"]]],[11,"scheme","","",29,[[["self"]],["str"]]],[11,"does_validate_scheme","","",29,[[["self"]],["bool"]]],[11,"iri_has_compatible_scheme","","",29,[[["self"],["iri"]],["bool"]]],[11,"new","","create a new id gen from a `Domain` and a unique part.",30,[[["softasciistring"],["domain"]],[["encodingerror"],["result",["encodingerror"]]]]],[0,"simple_context","","This module provides a type alias and constructor function…",null,null],[4,"ContextSetupError","mail_core::default_impl::simple_context","Error returned when creating a \"simple_context\" fails.",null,null],[13,"ReadingEnv","","Reading the env variables failed.",31,null],[13,"PunyCodingDomain","","Punny encoding a non us-ascii domain failed.",31,null],[5,"new","","create a new CompositeContext<FsResourceLoader, CpuPool,…",null,[[["softasciistring"],["domain"]],[["result",["context","contextsetuperror"]],["context"],["contextsetuperror"]]]],[6,"Context","","Type Alias for a the type returned by `simple_context::new`.",null,null],[8,"ContainedResourcesAccess","mail_core","",null,null],[16,"Key","","",32,null],[10,"visit_resources","","Visit all resources.",32,[[["self"]]]],[10,"access_resource_mut","","Return a mut ref for a resource based on given key.",32,[[["self"]],["r"]]],[10,"access_resource","","Return a ref for a resource base on given key.",32,[[["self"]],["r"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,[[["self"],["t"]]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"try_into","","",8,[[],[["componentcreationerror"],["result",["componentcreationerror"]]]]],[11,"try_from","","",8,[[["t"]],[["componentcreationerror"],["result",["componentcreationerror"]]]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"try_into","","",0,[[],[["componentcreationerror"],["result",["componentcreationerror"]]]]],[11,"try_from","","",0,[[["t"]],[["componentcreationerror"],["result",["componentcreationerror"]]]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"try_into","","",1,[[],[["componentcreationerror"],["result",["componentcreationerror"]]]]],[11,"try_from","","",1,[[["t"]],[["componentcreationerror"],["result",["componentcreationerror"]]]]],[11,"from","","",22,[[["t"]],["t"]]],[11,"into","","",22,[[],["u"]]],[11,"to_owned","","",22,[[["self"]],["t"]]],[11,"clone_into","","",22,[[["self"],["t"]]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"try_into","","",22,[[],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"type_id","","",22,[[["self"]],["typeid"]]],[11,"try_into","","",22,[[],[["componentcreationerror"],["result",["componentcreationerror"]]]]],[11,"try_from","","",22,[[["t"]],[["componentcreationerror"],["result",["componentcreationerror"]]]]],[11,"from","","",23,[[["t"]],["t"]]],[11,"into","","",23,[[],["u"]]],[11,"to_owned","","",23,[[["self"]],["t"]]],[11,"clone_into","","",23,[[["self"],["t"]]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"try_into","","",23,[[],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"type_id","","",23,[[["self"]],["typeid"]]],[11,"try_into","","",23,[[],[["componentcreationerror"],["result",["componentcreationerror"]]]]],[11,"try_from","","",23,[[["t"]],[["componentcreationerror"],["result",["componentcreationerror"]]]]],[11,"from","","",24,[[["t"]],["t"]]],[11,"into","","",24,[[],["u"]]],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"try_into","","",24,[[],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"type_id","","",24,[[["self"]],["typeid"]]],[11,"into_future","","",24,[[],["f"]]],[11,"try_into","","",24,[[],[["componentcreationerror"],["result",["componentcreationerror"]]]]],[11,"try_from","","",24,[[["t"]],[["componentcreationerror"],["result",["componentcreationerror"]]]]],[11,"from","","",25,[[["t"]],["t"]]],[11,"into","","",25,[[],["u"]]],[11,"to_owned","","",25,[[["self"]],["t"]]],[11,"clone_into","","",25,[[["self"],["t"]]]],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"try_into","","",25,[[],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"type_id","","",25,[[["self"]],["typeid"]]],[11,"try_into","","",25,[[],[["componentcreationerror"],["result",["componentcreationerror"]]]]],[11,"try_from","","",25,[[["t"]],[["componentcreationerror"],["result",["componentcreationerror"]]]]],[11,"from","","",33,[[["t"]],["t"]]],[11,"into","","",33,[[],["u"]]],[11,"try_from","","",33,[[["u"]],["result"]]],[11,"try_into","","",33,[[],["result"]]],[11,"borrow","","",33,[[["self"]],["t"]]],[11,"borrow_mut","","",33,[[["self"]],["t"]]],[11,"type_id","","",33,[[["self"]],["typeid"]]],[11,"into_future","","",33,[[],["f"]]],[11,"try_into","","",33,[[],[["componentcreationerror"],["result",["componentcreationerror"]]]]],[11,"try_from","","",33,[[["t"]],[["componentcreationerror"],["result",["componentcreationerror"]]]]],[11,"from","","",26,[[["t"]],["t"]]],[11,"into","","",26,[[],["u"]]],[11,"to_owned","","",26,[[["self"]],["t"]]],[11,"clone_into","","",26,[[["self"],["t"]]]],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"try_into","","",26,[[],["result"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"type_id","","",26,[[["self"]],["typeid"]]],[11,"try_into","","",26,[[],[["componentcreationerror"],["result",["componentcreationerror"]]]]],[11,"try_from","","",26,[[["t"]],[["componentcreationerror"],["result",["componentcreationerror"]]]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"try_into","","",2,[[],[["componentcreationerror"],["result",["componentcreationerror"]]]]],[11,"try_from","","",2,[[["t"]],[["componentcreationerror"],["result",["componentcreationerror"]]]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"try_into","","",3,[[],[["componentcreationerror"],["result",["componentcreationerror"]]]]],[11,"try_from","","",3,[[["t"]],[["componentcreationerror"],["result",["componentcreationerror"]]]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,[[["self"],["t"]]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"try_into","","",4,[[],[["componentcreationerror"],["result",["componentcreationerror"]]]]],[11,"try_from","","",4,[[["t"]],[["componentcreationerror"],["result",["componentcreationerror"]]]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,[[["self"],["t"]]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"try_into","","",5,[[],[["componentcreationerror"],["result",["componentcreationerror"]]]]],[11,"try_from","","",5,[[["t"]],[["componentcreationerror"],["result",["componentcreationerror"]]]]],[11,"from","mail_core::error","",14,[[["t"]],["t"]]],[11,"into","","",14,[[],["u"]]],[11,"to_string","","",14,[[["self"]],["string"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"try_into","","",14,[[],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"type_id","","",14,[[["self"]],["typeid"]]],[11,"as_fail","","",14,[[["self"]],["fail"]]],[11,"try_into","","",14,[[],[["componentcreationerror"],["result",["componentcreationerror"]]]]],[11,"try_from","","",14,[[["t"]],[["componentcreationerror"],["result",["componentcreationerror"]]]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[],["u"]]],[11,"to_string","","",9,[[["self"]],["string"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"as_fail","","",9,[[["self"]],["fail"]]],[11,"try_into","","",9,[[],[["componentcreationerror"],["result",["componentcreationerror"]]]]],[11,"try_from","","",9,[[["t"]],[["componentcreationerror"],["result",["componentcreationerror"]]]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[],["u"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,[[["self"],["t"]]]],[11,"to_string","","",10,[[["self"]],["string"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"as_fail","","",10,[[["self"]],["fail"]]],[11,"try_into","","",10,[[],[["componentcreationerror"],["result",["componentcreationerror"]]]]],[11,"try_from","","",10,[[["t"]],[["componentcreationerror"],["result",["componentcreationerror"]]]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[],["u"]]],[11,"to_string","","",11,[[["self"]],["string"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"try_into","","",11,[[],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"type_id","","",11,[[["self"]],["typeid"]]],[11,"as_fail","","",11,[[["self"]],["fail"]]],[11,"try_into","","",11,[[],[["componentcreationerror"],["result",["componentcreationerror"]]]]],[11,"try_from","","",11,[[["t"]],[["componentcreationerror"],["result",["componentcreationerror"]]]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[],["u"]]],[11,"to_string","","",12,[[["self"]],["string"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"try_into","","",12,[[],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"type_id","","",12,[[["self"]],["typeid"]]],[11,"as_fail","","",12,[[["self"]],["fail"]]],[11,"try_into","","",12,[[],[["componentcreationerror"],["result",["componentcreationerror"]]]]],[11,"try_from","","",12,[[["t"]],[["componentcreationerror"],["result",["componentcreationerror"]]]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"into","","",13,[[],["u"]]],[11,"to_owned","","",13,[[["self"]],["t"]]],[11,"clone_into","","",13,[[["self"],["t"]]]],[11,"to_string","","",13,[[["self"]],["string"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"try_into","","",13,[[],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"type_id","","",13,[[["self"]],["typeid"]]],[11,"as_fail","","",13,[[["self"]],["fail"]]],[11,"try_into","","",13,[[],[["componentcreationerror"],["result",["componentcreationerror"]]]]],[11,"try_from","","",13,[[["t"]],[["componentcreationerror"],["result",["componentcreationerror"]]]]],[11,"from","mail_core::utils","",34,[[["t"]],["t"]]],[11,"into","","",34,[[],["u"]]],[11,"to_owned","","",34,[[["self"]],["t"]]],[11,"clone_into","","",34,[[["self"],["t"]]]],[11,"try_from","","",34,[[["u"]],["result"]]],[11,"try_into","","",34,[[],["result"]]],[11,"borrow","","",34,[[["self"]],["t"]]],[11,"borrow_mut","","",34,[[["self"]],["t"]]],[11,"type_id","","",34,[[["self"]],["typeid"]]],[11,"try_into","","",34,[[],[["componentcreationerror"],["result",["componentcreationerror"]]]]],[11,"try_from","","",34,[[["t"]],[["componentcreationerror"],["result",["componentcreationerror"]]]]],[11,"from","","",35,[[["t"]],["t"]]],[11,"into","","",35,[[],["u"]]],[11,"to_owned","","",35,[[["self"]],["t"]]],[11,"clone_into","","",35,[[["self"],["t"]]]],[11,"try_from","","",35,[[["u"]],["result"]]],[11,"try_into","","",35,[[],["result"]]],[11,"borrow","","",35,[[["self"]],["t"]]],[11,"borrow_mut","","",35,[[["self"]],["t"]]],[11,"type_id","","",35,[[["self"]],["typeid"]]],[11,"try_into","","",35,[[],[["componentcreationerror"],["result",["componentcreationerror"]]]]],[11,"try_from","","",35,[[["t"]],[["componentcreationerror"],["result",["componentcreationerror"]]]]],[11,"load_resource","mail_core::context","",21,[[["self"],["source"]],[["box",["future"]],["future"]]]],[11,"load_transfer_encoded_resource","","",21,[[["self"],["resource"]],[["future"],["box",["future"]]]]],[11,"offload","","",21,[[["self"],["f"]],[["future"],["box",["future"]]]]],[11,"generate_message_id","","",21,[[["self"]],["messageid"]]],[11,"generate_content_id","","",21,[[["self"]],["messageid"]]],[11,"from","","",21,[[["t"]],["t"]]],[11,"into","","",21,[[],["u"]]],[11,"to_owned","","",21,[[["self"]],["t"]]],[11,"clone_into","","",21,[[["self"],["t"]]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"try_into","","",21,[[],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"type_id","","",21,[[["self"]],["typeid"]]],[11,"try_into","","",21,[[],[["componentcreationerror"],["result",["componentcreationerror"]]]]],[11,"try_from","","",21,[[["t"]],[["componentcreationerror"],["result",["componentcreationerror"]]]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"into","","",16,[[],["u"]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"try_into","","",16,[[],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"type_id","","",16,[[["self"]],["typeid"]]],[11,"try_into","","",16,[[],[["componentcreationerror"],["result",["componentcreationerror"]]]]],[11,"try_from","","",16,[[["t"]],[["componentcreationerror"],["result",["componentcreationerror"]]]]],[11,"from","mail_core::compose","",27,[[["t"]],["t"]]],[11,"into","","",27,[[],["u"]]],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"try_into","","",27,[[],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"type_id","","",27,[[["self"]],["typeid"]]],[11,"try_into","","",27,[[],[["componentcreationerror"],["result",["componentcreationerror"]]]]],[11,"try_from","","",27,[[["t"]],[["componentcreationerror"],["result",["componentcreationerror"]]]]],[11,"from","","",28,[[["t"]],["t"]]],[11,"into","","",28,[[],["u"]]],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"try_into","","",28,[[],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"type_id","","",28,[[["self"]],["typeid"]]],[11,"try_into","","",28,[[],[["componentcreationerror"],["result",["componentcreationerror"]]]]],[11,"try_from","","",28,[[["t"]],[["componentcreationerror"],["result",["componentcreationerror"]]]]],[11,"load_resource","mail_core::default_impl","",29,[[["self"],["source"]],[["box",["future"]],["future"]]]],[11,"load_transfer_encoded_resource","","",29,[[["self"],["resource"]],[["future"],["box",["future"]]]]],[11,"from","","",29,[[["t"]],["t"]]],[11,"into","","",29,[[],["u"]]],[11,"to_owned","","",29,[[["self"]],["t"]]],[11,"clone_into","","",29,[[["self"],["t"]]]],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"try_into","","",29,[[],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"type_id","","",29,[[["self"]],["typeid"]]],[11,"try_into","","",29,[[],[["componentcreationerror"],["result",["componentcreationerror"]]]]],[11,"try_from","","",29,[[["t"]],[["componentcreationerror"],["result",["componentcreationerror"]]]]],[11,"generate_message_id","","",30,[[["self"]],["messageid"]]],[11,"generate_content_id","","",30,[[["self"]],["messageid"]]],[11,"from","","",30,[[["t"]],["t"]]],[11,"into","","",30,[[],["u"]]],[11,"to_owned","","",30,[[["self"]],["t"]]],[11,"clone_into","","",30,[[["self"],["t"]]]],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"try_into","","",30,[[],["result"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"type_id","","",30,[[["self"]],["typeid"]]],[11,"try_into","","",30,[[],[["componentcreationerror"],["result",["componentcreationerror"]]]]],[11,"try_from","","",30,[[["t"]],[["componentcreationerror"],["result",["componentcreationerror"]]]]],[11,"from","mail_core::default_impl::simple_context","",31,[[["t"]],["t"]]],[11,"into","","",31,[[],["u"]]],[11,"to_string","","",31,[[["self"]],["string"]]],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"try_into","","",31,[[],["result"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"type_id","","",31,[[["self"]],["typeid"]]],[11,"as_fail","","",31,[[["self"]],["fail"]]],[11,"try_into","","",31,[[],[["componentcreationerror"],["result",["componentcreationerror"]]]]],[11,"try_from","","",31,[[["t"]],[["componentcreationerror"],["result",["componentcreationerror"]]]]],[11,"load_resource","mail_core::context","",21,[[["source"],["self"]],[["resourceloadingerror"],["sendboxfuture",["maybeencdata","resourceloadingerror"]],["maybeencdata"]]]],[11,"load_transfer_encoded_resource","","",21,[[["self"],["resource"]],[["resourceloadingerror"],["sendboxfuture",["encdata","resourceloadingerror"]],["encdata"]]]],[11,"offload","","",21,[[["self"],["f"]],["sendboxfuture"]]],[11,"generate_content_id","","",21,[[["self"]],["contentid"]]],[11,"generate_message_id","","",21,[[["self"]],["messageid"]]],[11,"load_resource","mail_core::default_impl","",29,[[["source"],["self"]],[["resourceloadingerror"],["sendboxfuture",["maybeencdata","resourceloadingerror"]],["maybeencdata"]]]],[11,"generate_message_id","","",30,[[["self"]],["messageid"]]],[11,"generate_content_id","","",30,[[["self"]],["contentid"]]],[11,"from","mail_core::error","",9,[[["encodingerror"]],["self"]]],[11,"from","","",9,[[["resourceloadingerror"]],["self"]]],[11,"from","","",14,[[["resourceloadingerrorkind"]],["self"]]],[11,"from","","",14,[[["context",["resourceloadingerrorkind"]],["resourceloadingerrorkind"]],["self"]]],[11,"from","","",14,[[],["self"]]],[11,"from","","",14,[[],["self"]]],[11,"from","","",14,[[],["self"]]],[11,"from","","",14,[[],["self"]]],[11,"from","","",14,[[["error"]],["self"]]],[11,"from","","",12,[[["othervalidationerror"]],["self"]]],[11,"from","","",12,[[["buildinvalidationerror"]],["self"]]],[11,"from","","",12,[[["headertypeerror"]],["self"]]],[11,"from","","",12,[[["encodingerror"]],["self"]]],[11,"from","","",12,[[["headervalidationerror"]],["self"]]],[11,"from","","",12,[[["resourceloadingerror"]],["self"]]],[11,"from","","",12,[[["resourceerror"]],["self"]]],[11,"from","","",12,[[["componentcreationerror"]],["self"]]],[11,"into","mail_core","",8,[[],["string"]]],[11,"into","","",26,[[],["mail"]]],[11,"clone","","",8,[[["self"]],["iri"]]],[11,"clone","mail_core::error","",10,[[["self"]],["resourceloadingerrorkind"]]],[11,"clone","","",13,[[["self"]],["resourcenotunloadableerror"]]],[11,"clone","mail_core::utils","",34,[[["self"]],["enabled"]]],[11,"clone","","",35,[[["self"]],["disabled"]]],[11,"clone","mail_core::context","",21,[[["self"]],["self"]]],[11,"clone","mail_core","",0,[[["self"]],["source"]]],[11,"clone","","",2,[[["self"]],["usemediatype"]]],[11,"clone","","",1,[[["self"]],["metadata"]]],[11,"clone","","",22,[[["self"]],["data"]]],[11,"clone","","",23,[[["self"]],["encdata"]]],[11,"clone","","",4,[[["self"]],["resource"]]],[11,"clone","","",25,[[["self"]],["mail"]]],[11,"clone","","",5,[[["self"]],["mailbody"]]],[11,"clone","","",26,[[["self"]],["encodablemail"]]],[11,"clone","mail_core::default_impl","",29,[[["self"]],["fsresourceloader"]]],[11,"clone","","",30,[[["self"]],["hashedidgen"]]],[11,"default","mail_core","",2,[[],["self"]]],[11,"default","","",3,[[],["self"]]],[11,"default","mail_core::default_impl","",29,[[],["fsresourceloader"]]],[11,"cmp","mail_core","",8,[[["self"],["iri"]],["ordering"]]],[11,"eq","","",8,[[["self"],["iri"]],["bool"]]],[11,"ne","","",8,[[["self"],["iri"]],["bool"]]],[11,"eq","mail_core::error","",10,[[["resourceloadingerrorkind"],["self"]],["bool"]]],[11,"eq","mail_core","",3,[[["transferencodinghint"],["self"]],["bool"]]],[11,"eq","mail_core::default_impl","",29,[[["self"],["fsresourceloader"]],["bool"]]],[11,"ne","","",29,[[["self"],["fsresourceloader"]],["bool"]]],[11,"partial_cmp","mail_core","",8,[[["self"],["iri"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",8,[[["self"],["iri"]],["bool"]]],[11,"le","","",8,[[["self"],["iri"]],["bool"]]],[11,"gt","","",8,[[["self"],["iri"]],["bool"]]],[11,"ge","","",8,[[["self"],["iri"]],["bool"]]],[11,"deref","","",1,[[["self"]]]],[11,"deref","","",26,[[["self"]]]],[11,"deref_mut","","",1,[[["self"]]]],[11,"fmt","","",8,[[["formatter"],["self"]],["result"]]],[11,"fmt","mail_core::error","",9,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",10,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",14,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",11,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",12,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",13,[[["formatter"],["self"]],["result"]]],[11,"fmt","mail_core::utils","",34,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",35,[[["formatter"],["self"]],["result"]]],[11,"fmt","mail_core::context","",21,[[["formatter"],["self"]],["result"]]],[11,"fmt","mail_core","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",22,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",23,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",25,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",26,[[["formatter"],["self"]],["result"]]],[11,"fmt","mail_core::compose","",27,[[["formatter"],["self"]],["result"]]],[11,"fmt","mail_core::default_impl","",29,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",30,[[["formatter"],["self"]],["result"]]],[11,"fmt","mail_core::default_impl::simple_context","",31,[[["formatter"],["self"]],["result"]]],[11,"fmt","mail_core::error","",9,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",10,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",14,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",11,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",12,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",13,[[["self"],["formatter"]],["result"]]],[11,"fmt","mail_core::default_impl::simple_context","",31,[[["self"],["formatter"]],["result"]]],[11,"hash","mail_core","",8,[[["self"],["__h"]]]],[11,"hash","mail_core::error","",10,[[["self"],["__h"]]]],[11,"from_str","mail_core","",8,[[["str"]],["result"]]],[11,"name","mail_core::error","",9,[[["self"]],[["str"],["option",["str"]]]]],[11,"cause","","",9,[[["self"]],[["option",["fail"]],["fail"]]]],[11,"backtrace","","",9,[[["self"]],[["backtrace"],["option",["backtrace"]]]]],[11,"name","","",10,[[["self"]],[["str"],["option",["str"]]]]],[11,"cause","","",10,[[["self"]],[["option",["fail"]],["fail"]]]],[11,"backtrace","","",10,[[["self"]],[["backtrace"],["option",["backtrace"]]]]],[11,"cause","","",14,[[["self"]],[["fail"],["option",["fail"]]]]],[11,"backtrace","","",14,[[["self"]],[["option",["backtrace"]],["backtrace"]]]],[11,"name","","",11,[[["self"]],[["str"],["option",["str"]]]]],[11,"cause","","",11,[[["self"]],[["option",["fail"]],["fail"]]]],[11,"backtrace","","",11,[[["self"]],[["backtrace"],["option",["backtrace"]]]]],[11,"name","","",12,[[["self"]],[["str"],["option",["str"]]]]],[11,"cause","","",12,[[["self"]],[["option",["fail"]],["fail"]]]],[11,"backtrace","","",12,[[["self"]],[["backtrace"],["option",["backtrace"]]]]],[11,"name","","",13,[[["self"]],[["str"],["option",["str"]]]]],[11,"cause","","",13,[[["self"]],[["option",["fail"]],["fail"]]]],[11,"backtrace","","",13,[[["self"]],[["backtrace"],["option",["backtrace"]]]]],[11,"name","mail_core::default_impl::simple_context","",31,[[["self"]],[["str"],["option",["str"]]]]],[11,"cause","","",31,[[["self"]],[["option",["fail"]],["fail"]]]],[11,"backtrace","","",31,[[["self"]],[["backtrace"],["option",["backtrace"]]]]],[11,"poll","mail_core","",24,[[["self"]],["poll"]]],[11,"poll","","",33,[[["self"]],["poll"]]]],"p":[[3,"Source"],[3,"Metadata"],[4,"UseMediaType"],[4,"TransferEncodingHint"],[4,"Resource"],[4,"MailBody"],[13,"SingleBody"],[13,"MultipleBodies"],[3,"IRI"],[4,"ResourceError"],[4,"ResourceLoadingErrorKind"],[4,"OtherValidationError"],[4,"MailError"],[4,"ResourceNotUnloadableError"],[3,"ResourceLoadingError"],[8,"ConstSwitch"],[4,"MaybeEncData"],[8,"Context"],[8,"ResourceLoaderComponent"],[8,"OffloaderComponent"],[8,"MailIdGenComponent"],[3,"CompositeContext"],[3,"Data"],[3,"EncData"],[3,"ResourceContainerLoadingFuture"],[3,"Mail"],[3,"EncodableMail"],[3,"BodyPart"],[3,"MailParts"],[3,"FsResourceLoader"],[3,"HashedIdGen"],[4,"ContextSetupError"],[8,"ContainedResourcesAccess"],[3,"MailFuture"],[3,"Enabled"],[3,"Disabled"]]};
searchIndex["mail_headers"] = {"doc":"This crate provides header specific functionality for the…","i":[[3,"_SoftAsciiStr","mail_headers","A `str` wrapper adding a \"is us-ascii\" soft constraint.",null,null],[3,"HeaderName","","Note: Normally you will never have the need to create a…",null,null],[3,"InvalidHeaderName","","",null,null],[3,"Header","","",null,null],[11,"new","","Be aware, that this library only accepts header names with…",0,[[["softasciistr"]],[["result",["invalidheadername"]],["invalidheadername"]]]],[11,"from_ascii_unchecked","","",0,[[["b"]],["headername"]]],[11,"as_ascii_str","","",0,[[["self"]],["softasciistr"]]],[11,"as_str","","",0,[[["self"]],["str"]]],[0,"error","","module contains the (new) errors emitted by this crate",null,null],[3,"HeaderTypeError","mail_headers::error","This error can occur if different implementations for the…",null,null],[3,"ComponentCreationError","","Creating a (header field) component from the given data…",null,null],[4,"HeaderValidationError","","A validator specified in a header definition failed.",null,null],[13,"BuildIn","","",1,null],[13,"Custom","","",1,null],[4,"BuildInValidationError","","The build-in error variants (error kinds) which can be…",null,null],[13,"MaxOneInconsistency","","This error is returned by `use_contextual_validators` if…",2,null],[12,"header_name","mail_headers::error::BuildInValidationError","",3,null],[13,"MoreThenOne","mail_headers::error","",2,null],[12,"header_name","mail_headers::error::BuildInValidationError","",4,null],[13,"MultiMailboxFromWithoutSender","mail_headers::error","",2,null],[13,"ResentDateFieldMissing","","",2,null],[13,"MultiMailboxResentFromWithoutResentSender","","",2,null],[4,"ChainTail","","Helper type which is either a `Backtrace` or an full…",null,null],[13,"Backtrace","","",5,null],[13,"Error","","",5,null],[11,"new","","",6,[[["headername"]],["self"]]],[11,"new_with_backtrace","","",6,[[["headername"],["backtrace"]],["self"]]],[11,"from_parent","","create a new `ComponentCreationError` based on a different…",7,[[["str"],["p"]],["self"]]],[11,"new","","creates a new `ComponentCreationError` based on the…",7,[[["str"]],["self"]]],[11,"new_with_str","","creates a new `ComponentCreationError` based on the…",7,[[["str"],["i"]],["self"]]],[11,"str_context","","",7,[[["self"]],[["str"],["option",["str"]]]]],[11,"set_str_context","","",7,[[["self"],["i"]]]],[11,"with_str_context","","",7,[[["i"]],["self"]]],[11,"new","mail_headers","",8,[[],["header"]]],[11,"body","","",8,[[["self"]]]],[11,"body_mut","","",8,[[["self"]]]],[0,"data","","A number of little helper types, which contain text.",null,null],[3,"Input","mail_headers::data","a Input is similar to Item a container data container used…",null,null],[12,"0","","",9,null],[4,"InnerAscii","","InnerAscii is string data container which can contain…",null,null],[13,"Owned","","",10,null],[13,"Shared","","",10,null],[4,"InnerUtf8","","InnerUtf8 is string data container which can contain…",null,null],[13,"Owned","","",11,null],[13,"Shared","","",11,null],[4,"SimpleItem","","",null,null],[13,"Ascii","","specifies that the Item is valid Ascii, nothing more",12,null],[13,"Utf8","","specifies that the Item is valid Utf8, nothing more",12,null],[11,"into_shared","","converts this container into on which uses underlying…",10,[[],["self"]]],[11,"into_shared","","converts this container into on which uses underlying…",11,[[],["self"]]],[11,"new","","",10,[[["softasciistring"],["into",["softasciistring"]]],["self"]]],[11,"new","","",11,[[["into",["string"]],["string"]],["self"]]],[11,"as_str","","",10,[[["self"]],["str"]]],[11,"as_str","","",11,[[["self"]],["str"]]],[11,"into_shared","","",9,[[],["self"]]],[11,"into_ascii_item","","",9,[[],[["input"],["stdresult",["innerascii","input"]],["innerascii"]]]],[11,"into_ascii_item_unchecked","","",9,[[],["innerascii"]]],[11,"into_utf8_item","","",9,[[],["innerutf8"]]],[11,"as_str","","",12,[[["self"]],["str"]]],[11,"is_ascii","","",12,[[["self"]],["bool"]]],[11,"from_utf8_input","","",12,[[["input"]],["self"]]],[11,"from_utf8","","",12,[[["string"]],["self"]]],[0,"map","mail_headers","Module containing the `HeaderMap`.",null,null],[3,"HeaderMap","mail_headers::map","A header map is a collection representing a number of mail…",null,null],[3,"TypedBodies","","Iterator over all boxed bodies for a given header name…",null,null],[3,"TypedBodiesMut","","Iterator over all boxed bodies for a given header name…",null,null],[5,"check_header_count_max_one","","",null,[[["headername"],["headermap"]],[["headervalidationerror"],["result",["headervalidationerror"]]]]],[6,"IntoIter","","",null,null],[6,"HeaderMapValidator","","The type of an validator used to check more complex header…",null,null],[6,"Iter","","",null,null],[6,"IterMut","","",null,null],[6,"Values","","",null,null],[6,"ValuesMut","","",null,null],[6,"UntypedBodies","","Iterator over all boxed bodies for a given header name",null,null],[6,"UntypedBodiesMut","","",null,null],[11,"new","","create a new empty header map",13,[[],["self"]]],[11,"len","","returns the number of headers in this map",13,[[["self"]],["usize"]]],[11,"clear","","clears the header map",13,[[["self"]]]],[11,"values","","Iterate over all `HeaderObj` added to the map.",13,[[["self"]],["values"]]],[11,"values_mut","","Iterate with mut refs over all `HeaderObj` added to the map.",13,[[["self"]],["valuesmut"]]],[11,"use_contextual_validators","","call each unique contextual validator exactly once with…",13,[[["self"]],[["headervalidationerror"],["result",["headervalidationerror"]]]]],[11,"contains","","Returns true if this map contains a header with the given…",13,[[["hasheadername"],["self"]],["bool"]]],[11,"get_single","","Returns the single header associated with the given header…",13,[[["self"],["h"]],[["result",["header","headertypeerror"]],["option",["result"]]]]],[11,"_get_single","","A variation of `get_single` which doesn't require passing…",13,[[["self"]],[["result",["header","headertypeerror"]],["option",["result"]]]]],[11,"get_single_mut","","Returns a a mutable reference to the header associated…",13,[[["self"],["h"]],[["option",["result"]],["result",["header","headertypeerror"]]]]],[11,"_get_single_mut","","Returns a a mutable reference to the header associated…",13,[[["self"]],[["option",["result"]],["result",["header","headertypeerror"]]]]],[11,"get_untyped","","Returns all header bodies for a given header name, without…",13,[[["hasheadername"],["self"]],["untypedbodies"]]],[11,"get_untyped_mut","","Returns all header bodies for a given header name, without…",13,[[["self"],["hasheadername"]],["untypedbodiesmut"]]],[11,"get","","Returns all header bodies for a given header",13,[[["self"],["h"]],["typedbodies"]]],[11,"_get","","Returns all header bodies for a given header",13,[[["self"]],["typedbodies"]]],[11,"get_mut","","Returns all header bodies for a given header",13,[[["self"],["h"]],["typedbodiesmut"]]],[11,"_get_mut","","Returns all header bodies for a given header",13,[[["self"]],["typedbodiesmut"]]],[11,"insert","","Inserts the given header into the map either replacing or…",13,[[["self"],["header"]]]],[11,"insert_all","","Insert all given headers in order into this header map.",13,[[["self"],["headermap"]]]],[11,"remove","","Remove all headers with the given header name.",13,[[["self"],["hasheadername"]],["bool"]]],[11,"iter","","iterate over all (header name, boxed body) pairs in this map",13,[[["self"]],["iter"]]],[0,"header_components","mail_headers","This modules contains all components provided by this…",null,null],[3,"FileMeta","mail_headers::header_components","A struct representing common file metadata.",null,null],[12,"file_name","","The file name.",14,null],[12,"creation_date","","The creation date of the file (in utc).",14,null],[12,"modification_date","","The last modification date of the file (in utc).",14,null],[12,"read_date","","The date time the file was read, i.e. placed in the mail…",14,null],[12,"size","","The size the file should have.",14,null],[3,"DateTime","","A DateTime header component wrapping…",null,null],[3,"Email","","an email of the form `local-part@domain` corresponds to…",null,null],[12,"local_part","","",15,null],[12,"domain","","",15,null],[3,"Domain","","",null,null],[3,"LocalPart","","",null,null],[3,"Mailbox","","",null,null],[12,"display_name","","",16,null],[12,"email","","",16,null],[3,"NoDisplayName","","",null,null],[3,"MailboxList","","",null,null],[12,"0","","",17,null],[3,"OptMailboxList","","",null,null],[12,"0","","",18,null],[3,"Unstructured","","",null,null],[3,"MessageId","","Implementation Details",null,null],[3,"MessageIdList","","",null,null],[12,"0","","",19,null],[3,"FWS","","",null,null],[3,"MediaType","","",null,null],[3,"Path","","",null,null],[12,"0","","",20,null],[3,"Phrase","","Represent a \"phrase\" as it for example is used in the…",null,null],[12,"0","","The \"words\" the phrase consist of. Be aware that this are…",21,null],[3,"PhraseList","","",null,null],[12,"0","","",22,null],[3,"Disposition","","Disposition Component mainly used for the…",null,null],[3,"RawUnstructured","","A unstructured header field implementation which validates…",null,null],[4,"TransferEncoding","","The TransferEnecoding header component mainly used by the…",null,null],[13,"_7Bit","","",23,null],[13,"_8Bit","","",23,null],[13,"Binary","","",23,null],[13,"QuotedPrintable","","",23,null],[13,"Base64","","",23,null],[4,"CFWS","","",null,null],[13,"SingleFws","","",24,null],[4,"ReceivedToken","","",null,null],[13,"Word","","",25,null],[13,"Address","","",25,null],[13,"Domain","","",25,null],[4,"DispositionKind","","Represents what kind of disposition is used…",null,null],[13,"Inline","","Display the body \"inline\".",26,null],[13,"Attachment","","Display the body as an attachment to of the mail.",26,null],[0,"utils","","",null,null],[0,"text_partition","mail_headers::header_components::utils","",null,null],[3,"PartitionError","mail_headers::header_components::utils::text_partition","",null,null],[4,"Partition","","",null,null],[13,"SPACE","","",27,null],[13,"VCHAR","","",27,null],[5,"partition","","",null,[[["str"]],[["vec",["partition"]],["partitionerror"],["result",["vec","partitionerror"]]]]],[11,"replace_empty_fields_with","mail_headers::header_components","Replaces all fields which are `None` with the value of the…",14,[[["self"],["self"]]]],[11,"now","","create a new DateTime of the current Time",28,[[],["datetime"]]],[11,"new","","create a new DateTime from a `chrono::DateTime<TimeZone>`…",28,[[["datetime"],["timezone"]],["datetime"]]],[11,"check_if_internationalized","","",15,[[["self"]],["bool"]]],[11,"new","","",15,[[["input"],["headertryinto",["input"]]],[["result",["componentcreationerror"]],["componentcreationerror"]]]],[11,"check_if_internationalized","","",29,[[["self"]],["bool"]]],[11,"from_unchecked","","creates a domain from a string without checking for validity",30,[[["string"]],["self"]]],[11,"as_str","","",30,[[["self"]],["str"]]],[11,"into_ascii_string","","",30,[[],[["result",["softasciistring","encodingerror"]],["encodingerror"],["softasciistring"]]]],[11,"to_ascii_string","","",30,[[["self"]],[["cow",["softasciistr"]],["encodingerror"],["result",["cow","encodingerror"]]]]],[11,"auto_gen_name","","",16,[[["self"],["f"]],[["result",["componentcreationerror"]],["componentcreationerror"]]]],[11,"with_default_name","","",16,[[["f"]],[["mailbox"],["componentcreationerror"],["result",["mailbox","componentcreationerror"]]]]],[11,"from_single","","",17,[[["mailbox"]],["self"]]],[11,"repr","","",23,[[["self"]],["softasciistr"]]],[11,"from_unchecked","","creates a message id from a string without checking for…",31,[[["string"]],["self"]]],[11,"new","","",31,[[["softasciistr"]],[["result",["componentcreationerror"]],["componentcreationerror"]]]],[11,"as_str","","",31,[[["self"]],["str"]]],[11,"parse","","",32,[[["str"]],[["result",["componentcreationerror"]],["componentcreationerror"]]]],[11,"new","","",32,[[["t"],["st"]],[["result",["componentcreationerror"]],["componentcreationerror"]]]],[11,"new_with_params","","",32,[[["i"],["t"],["st"]],[["result",["componentcreationerror"]],["componentcreationerror"]]]],[11,"remove_param","","",32,[[["self"],["n"]],["bool"]]],[11,"set_param","","",32,[[["v"],["self"],["n"]]]],[0,"word","","",null,null],[3,"Word","mail_headers::header_components::word","A ward as in the mail grammar (RFC 5322).",null,null],[12,"left_padding","","",33,null],[12,"input","","",33,null],[12,"right_padding","","",33,null],[5,"do_encode_word","","As word has to be differently encoded, depending on the…",null,[[["encodedwordcontext"],["word"],["option",["encodedwordcontext"]],["encodingwriter"]],[["encodingerror"],["result",["encodingerror"]]]]],[11,"pad_left","","",33,[[["self"],["cfws"]]]],[11,"pad_right","","",33,[[["self"],["cfws"]]]],[11,"new","mail_headers::header_components","Creates a `Phrase` instance from some arbitrary input.",21,[[["input"],["headertryinto",["input"]]],[["result",["componentcreationerror"]],["componentcreationerror"]]]],[11,"inline","","Create a inline disposition with default parameters.",34,[[],["self"]]],[11,"attachment","","Create a attachment disposition with default parameters.",34,[[],["self"]]],[11,"new","","Create a new disposition with given parameters.",34,[[["filemeta"],["dispositionkind"]],["self"]]],[11,"kind","","Return which kind of disposition this represents.",34,[[["self"]],["dispositionkind"]]],[11,"file_meta","","Returns the parameters associated with the disposition.",34,[[["self"]],["filemeta"]]],[11,"file_meta_mut","","Returns a mutable reference to the parameters associated…",34,[[["self"]],["filemeta"]]],[11,"as_str","","",35,[[["self"]],["str"]]],[6,"ContentId","","",null,null],[6,"ContentIdList","","",null,null],[6,"ContentType","","",null,null],[0,"headers","mail_headers","",null,null],[3,"Date","mail_headers::headers","(rfc5322)",null,null],[3,"_From","","(rfc5322)",null,null],[3,"Sender","","(rfc5322)",null,null],[3,"ReplyTo","","(rfc5322)",null,null],[3,"_To","","(rfc5322)",null,null],[3,"Cc","","(rfc5322)",null,null],[3,"Bcc","","(rfc5322)",null,null],[3,"MessageId","","(rfc5322)",null,null],[3,"InReplyTo","","(rfc5322)",null,null],[3,"References","","(rfc5322)",null,null],[3,"Subject","","(rfc5322)",null,null],[3,"Comments","","(rfc5322)",null,null],[3,"Keywords","","(rfc5322)",null,null],[3,"ResentDate","","(rfc5322)",null,null],[3,"ResentFrom","","(rfc5322)",null,null],[3,"ResentSender","","(rfc5322)",null,null],[3,"ResentTo","","(rfc5322)",null,null],[3,"ResentCc","","(rfc5322)",null,null],[3,"ResentBcc","","(rfc5322)",null,null],[3,"ResentMsgId","","(rfc5322)",null,null],[3,"ReturnPath","","(rfc5322)",null,null],[3,"Received","","(rfc5322)",null,null],[3,"ContentType","","(rfc2045)",null,null],[3,"ContentId","","(rfc2045)",null,null],[3,"ContentTransferEncoding","","The transfer encoding used to (transfer) encode the body…",null,null],[3,"ContentDescription","","A description of the content of the body (rfc2045)",null,null],[3,"ContentDisposition","","Defines the disposition of a multipart part it is used on…",null,null],[6,"HeaderObj","mail_headers","Type alias for HeaderObjTrait's trait object.",null,null],[8,"HasHeaderName","","a utility trait allowing us to use type hint structs in…",null,null],[10,"get_name","","",36,[[["self"]],["headername"]]],[8,"HeaderKind","","Trait representing a mail header.",null,null],[16,"Component","","the component representing the header-field, e.g.…",37,null],[10,"name","","a method returning the header name",37,[[],["headername"]]],[18,"VALIDATOR","","A function which is meant to be called with a reference to…",37,null],[18,"MAX_ONE","","I true this will assure that the header is at most one…",37,null],[11,"auto_body","","Creates a `Header` instance automatically converting given…",37,[[["h"]],[["result",["header","componentcreationerror"]],["header"],["componentcreationerror"]]]],[11,"body","","Creates a `Header` instance for this header kind with…",37,[[],["header"]]],[8,"MaxOneMarker","","",null,null],[8,"HeaderObjTrait","","",null,null],[10,"name","","",38,[[["self"]],["headername"]]],[10,"is_max_one","","",38,[[["self"]],["bool"]]],[10,"validator","","",38,[[["self"]],[["headermapvalidator"],["option",["headermapvalidator"]]]]],[10,"encode","","",38,[[["self"],["encodingwriter"]],[["encodingerror"],["result",["encodingerror"]]]]],[10,"boxed_clone","","",38,[[["self"]],[["box",["headerobj"]],["headerobj"]]]],[8,"HeaderObjTraitBoxExt","","",null,null],[10,"downcast","","",39,[[],[["result",["box"]],["box",["header"]]]]],[8,"HeaderTryFrom","","Workaround for `TryFrom`,`TryInto` not being stable.",null,null],[10,"try_from","","",40,[[["t"]],[["result",["componentcreationerror"]],["componentcreationerror"]]]],[8,"HeaderTryInto","","Workaround for `TryFrom`,`TryInto` not being stable.",null,null],[10,"try_into","","",41,[[],[["result",["componentcreationerror"]],["componentcreationerror"]]]],[14,"def_headers","","Defines a new header types with given type name, filed…",null,null],[14,"headers","","Create a header map from a list of header's with ther fields",null,null],[11,"to_owned","","",42,[[["self"]],["t"]]],[11,"clone_into","","",42,[[["self"],["t"]]]],[11,"to_string","","",42,[[["self"]],["string"]]],[11,"borrow","","",42,[[["self"]],["t"]]],[11,"borrow_mut","","",42,[[["self"]],["t"]]],[11,"type_id","","",42,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",43,[[["t"]],["t"]]],[11,"into","","",43,[[],["u"]]],[11,"to_owned","","",43,[[["self"]],["t"]]],[11,"clone_into","","",43,[[["self"],["t"]]]],[11,"to_string","","",43,[[["self"]],["string"]]],[11,"try_from","","",43,[[["u"]],["result"]]],[11,"try_into","","",43,[[],["result"]]],[11,"borrow","","",43,[[["self"]],["t"]]],[11,"borrow_mut","","",43,[[["self"]],["t"]]],[11,"type_id","","",43,[[["self"]],["typeid"]]],[11,"as_fail","","",43,[[["self"]],["fail"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,[[["self"],["t"]]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"from","mail_headers::error","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"to_string","","",6,[[["self"]],["string"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"as_fail","","",6,[[["self"]],["fail"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"to_string","","",7,[[["self"]],["string"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"as_fail","","",7,[[["self"]],["fail"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_string","","",1,[[["self"]],["string"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"as_fail","","",1,[[["self"]],["fail"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"to_string","","",2,[[["self"]],["string"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"as_fail","","",2,[[["self"]],["fail"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"from","mail_headers::data","",9,[[["t"]],["t"]]],[11,"into","","",9,[[],["u"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,[[["self"],["t"]]]],[11,"to_string","","",9,[[["self"]],["string"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[],["u"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,[[["self"],["t"]]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[],["u"]]],[11,"to_owned","","",11,[[["self"]],["t"]]],[11,"clone_into","","",11,[[["self"],["t"]]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"try_into","","",11,[[],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"type_id","","",11,[[["self"]],["typeid"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[],["u"]]],[11,"to_owned","","",12,[[["self"]],["t"]]],[11,"clone_into","","",12,[[["self"],["t"]]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"try_into","","",12,[[],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"type_id","","",12,[[["self"]],["typeid"]]],[11,"from","mail_headers::map","",13,[[["t"]],["t"]]],[11,"into","","",13,[[],["u"]]],[11,"into_iter","","",13,[[],["i"]]],[11,"to_owned","","",13,[[["self"]],["t"]]],[11,"clone_into","","",13,[[["self"],["t"]]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"try_into","","",13,[[],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"type_id","","",13,[[["self"]],["typeid"]]],[11,"from","","",44,[[["t"]],["t"]]],[11,"into","","",44,[[],["u"]]],[11,"into_iter","","",44,[[],["i"]]],[11,"to_owned","","",44,[[["self"]],["t"]]],[11,"clone_into","","",44,[[["self"],["t"]]]],[11,"try_from","","",44,[[["u"]],["result"]]],[11,"try_into","","",44,[[],["result"]]],[11,"borrow","","",44,[[["self"]],["t"]]],[11,"borrow_mut","","",44,[[["self"]],["t"]]],[11,"type_id","","",44,[[["self"]],["typeid"]]],[11,"from","","",45,[[["t"]],["t"]]],[11,"into","","",45,[[],["u"]]],[11,"into_iter","","",45,[[],["i"]]],[11,"try_from","","",45,[[["u"]],["result"]]],[11,"try_into","","",45,[[],["result"]]],[11,"borrow","","",45,[[["self"]],["t"]]],[11,"borrow_mut","","",45,[[["self"]],["t"]]],[11,"type_id","","",45,[[["self"]],["typeid"]]],[11,"from","mail_headers::header_components","",14,[[["t"]],["t"]]],[11,"into","","",14,[[],["u"]]],[11,"to_owned","","",14,[[["self"]],["t"]]],[11,"clone_into","","",14,[[["self"],["t"]]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"try_into","","",14,[[],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"type_id","","",14,[[["self"]],["typeid"]]],[11,"from","","",28,[[["t"]],["t"]]],[11,"into","","",28,[[],["u"]]],[11,"to_owned","","",28,[[["self"]],["t"]]],[11,"clone_into","","",28,[[["self"],["t"]]]],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"try_into","","",28,[[],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"type_id","","",28,[[["self"]],["typeid"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"into","","",15,[[],["u"]]],[11,"to_owned","","",15,[[["self"]],["t"]]],[11,"clone_into","","",15,[[["self"],["t"]]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"try_into","","",15,[[],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"type_id","","",15,[[["self"]],["typeid"]]],[11,"from","","",30,[[["t"]],["t"]]],[11,"into","","",30,[[],["u"]]],[11,"to_owned","","",30,[[["self"]],["t"]]],[11,"clone_into","","",30,[[["self"],["t"]]]],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"try_into","","",30,[[],["result"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"type_id","","",30,[[["self"]],["typeid"]]],[11,"from","","",29,[[["t"]],["t"]]],[11,"into","","",29,[[],["u"]]],[11,"to_owned","","",29,[[["self"]],["t"]]],[11,"clone_into","","",29,[[["self"],["t"]]]],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"try_into","","",29,[[],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"type_id","","",29,[[["self"]],["typeid"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"into","","",16,[[],["u"]]],[11,"to_owned","","",16,[[["self"]],["t"]]],[11,"clone_into","","",16,[[["self"],["t"]]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"try_into","","",16,[[],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"type_id","","",16,[[["self"]],["typeid"]]],[11,"from","","",46,[[["t"]],["t"]]],[11,"into","","",46,[[],["u"]]],[11,"try_from","","",46,[[["u"]],["result"]]],[11,"try_into","","",46,[[],["result"]]],[11,"borrow","","",46,[[["self"]],["t"]]],[11,"borrow_mut","","",46,[[["self"]],["t"]]],[11,"type_id","","",46,[[["self"]],["typeid"]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"into","","",17,[[],["u"]]],[11,"into_iter","","",17,[[],["i"]]],[11,"to_owned","","",17,[[["self"]],["t"]]],[11,"clone_into","","",17,[[["self"],["t"]]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"try_into","","",17,[[],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"type_id","","",17,[[["self"]],["typeid"]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"into","","",18,[[],["u"]]],[11,"to_owned","","",18,[[["self"]],["t"]]],[11,"clone_into","","",18,[[["self"],["t"]]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"try_into","","",18,[[],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"type_id","","",18,[[["self"]],["typeid"]]],[11,"from","","",47,[[["t"]],["t"]]],[11,"into","","",47,[[],["u"]]],[11,"to_owned","","",47,[[["self"]],["t"]]],[11,"clone_into","","",47,[[["self"],["t"]]]],[11,"to_string","","",47,[[["self"]],["string"]]],[11,"try_from","","",47,[[["u"]],["result"]]],[11,"try_into","","",47,[[],["result"]]],[11,"borrow","","",47,[[["self"]],["t"]]],[11,"borrow_mut","","",47,[[["self"]],["t"]]],[11,"type_id","","",47,[[["self"]],["typeid"]]],[11,"from","","",31,[[["t"]],["t"]]],[11,"into","","",31,[[],["u"]]],[11,"to_owned","","",31,[[["self"]],["t"]]],[11,"clone_into","","",31,[[["self"],["t"]]]],[11,"to_string","","",31,[[["self"]],["string"]]],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"try_into","","",31,[[],["result"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"type_id","","",31,[[["self"]],["typeid"]]],[11,"from","","",19,[[["t"]],["t"]]],[11,"into","","",19,[[],["u"]]],[11,"to_owned","","",19,[[["self"]],["t"]]],[11,"clone_into","","",19,[[["self"],["t"]]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"try_into","","",19,[[],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"type_id","","",19,[[["self"]],["typeid"]]],[11,"from","","",48,[[["t"]],["t"]]],[11,"into","","",48,[[],["u"]]],[11,"to_owned","","",48,[[["self"]],["t"]]],[11,"clone_into","","",48,[[["self"],["t"]]]],[11,"try_from","","",48,[[["u"]],["result"]]],[11,"try_into","","",48,[[],["result"]]],[11,"borrow","","",48,[[["self"]],["t"]]],[11,"borrow_mut","","",48,[[["self"]],["t"]]],[11,"type_id","","",48,[[["self"]],["typeid"]]],[11,"from","","",32,[[["t"]],["t"]]],[11,"into","","",32,[[],["u"]]],[11,"to_owned","","",32,[[["self"]],["t"]]],[11,"clone_into","","",32,[[["self"],["t"]]]],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"try_into","","",32,[[],["result"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"type_id","","",32,[[["self"]],["typeid"]]],[11,"from","","",20,[[["t"]],["t"]]],[11,"into","","",20,[[],["u"]]],[11,"to_owned","","",20,[[["self"]],["t"]]],[11,"clone_into","","",20,[[["self"],["t"]]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"try_into","","",20,[[],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"type_id","","",20,[[["self"]],["typeid"]]],[11,"from","","",21,[[["t"]],["t"]]],[11,"into","","",21,[[],["u"]]],[11,"to_owned","","",21,[[["self"]],["t"]]],[11,"clone_into","","",21,[[["self"],["t"]]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"try_into","","",21,[[],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"type_id","","",21,[[["self"]],["typeid"]]],[11,"from","","",22,[[["t"]],["t"]]],[11,"into","","",22,[[],["u"]]],[11,"into_iter","","",22,[[],["i"]]],[11,"to_owned","","",22,[[["self"]],["t"]]],[11,"clone_into","","",22,[[["self"],["t"]]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"try_into","","",22,[[],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"type_id","","",22,[[["self"]],["typeid"]]],[11,"from","","",34,[[["t"]],["t"]]],[11,"into","","",34,[[],["u"]]],[11,"to_owned","","",34,[[["self"]],["t"]]],[11,"clone_into","","",34,[[["self"],["t"]]]],[11,"try_from","","",34,[[["u"]],["result"]]],[11,"try_into","","",34,[[],["result"]]],[11,"borrow","","",34,[[["self"]],["t"]]],[11,"borrow_mut","","",34,[[["self"]],["t"]]],[11,"type_id","","",34,[[["self"]],["typeid"]]],[11,"from","","",35,[[["t"]],["t"]]],[11,"into","","",35,[[],["u"]]],[11,"to_owned","","",35,[[["self"]],["t"]]],[11,"clone_into","","",35,[[["self"],["t"]]]],[11,"try_from","","",35,[[["u"]],["result"]]],[11,"try_into","","",35,[[],["result"]]],[11,"borrow","","",35,[[["self"]],["t"]]],[11,"borrow_mut","","",35,[[["self"]],["t"]]],[11,"type_id","","",35,[[["self"]],["typeid"]]],[11,"from","","",23,[[["t"]],["t"]]],[11,"into","","",23,[[],["u"]]],[11,"to_owned","","",23,[[["self"]],["t"]]],[11,"clone_into","","",23,[[["self"],["t"]]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"try_into","","",23,[[],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"type_id","","",23,[[["self"]],["typeid"]]],[11,"from","","",24,[[["t"]],["t"]]],[11,"into","","",24,[[],["u"]]],[11,"to_owned","","",24,[[["self"]],["t"]]],[11,"clone_into","","",24,[[["self"],["t"]]]],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"try_into","","",24,[[],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"type_id","","",24,[[["self"]],["typeid"]]],[11,"from","","",25,[[["t"]],["t"]]],[11,"into","","",25,[[],["u"]]],[11,"to_owned","","",25,[[["self"]],["t"]]],[11,"clone_into","","",25,[[["self"],["t"]]]],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"try_into","","",25,[[],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"type_id","","",25,[[["self"]],["typeid"]]],[11,"from","","",26,[[["t"]],["t"]]],[11,"into","","",26,[[],["u"]]],[11,"to_owned","","",26,[[["self"]],["t"]]],[11,"clone_into","","",26,[[["self"],["t"]]]],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"try_into","","",26,[[],["result"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"type_id","","",26,[[["self"]],["typeid"]]],[11,"from","mail_headers::header_components::utils::text_partition","",49,[[["t"]],["t"]]],[11,"into","","",49,[[],["u"]]],[11,"to_owned","","",49,[[["self"]],["t"]]],[11,"clone_into","","",49,[[["self"],["t"]]]],[11,"to_string","","",49,[[["self"]],["string"]]],[11,"try_from","","",49,[[["u"]],["result"]]],[11,"try_into","","",49,[[],["result"]]],[11,"borrow","","",49,[[["self"]],["t"]]],[11,"borrow_mut","","",49,[[["self"]],["t"]]],[11,"type_id","","",49,[[["self"]],["typeid"]]],[11,"as_fail","","",49,[[["self"]],["fail"]]],[11,"from","","",27,[[["t"]],["t"]]],[11,"into","","",27,[[],["u"]]],[11,"to_owned","","",27,[[["self"]],["t"]]],[11,"clone_into","","",27,[[["self"],["t"]]]],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"try_into","","",27,[[],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"type_id","","",27,[[["self"]],["typeid"]]],[11,"from","mail_headers::header_components::word","",33,[[["t"]],["t"]]],[11,"into","","",33,[[],["u"]]],[11,"to_owned","","",33,[[["self"]],["t"]]],[11,"clone_into","","",33,[[["self"],["t"]]]],[11,"try_from","","",33,[[["u"]],["result"]]],[11,"try_into","","",33,[[],["result"]]],[11,"borrow","","",33,[[["self"]],["t"]]],[11,"borrow_mut","","",33,[[["self"]],["t"]]],[11,"type_id","","",33,[[["self"]],["typeid"]]],[11,"from","mail_headers::headers","",50,[[["t"]],["t"]]],[11,"into","","",50,[[],["u"]]],[11,"to_owned","","",50,[[["self"]],["t"]]],[11,"clone_into","","",50,[[["self"],["t"]]]],[11,"try_from","","",50,[[["u"]],["result"]]],[11,"try_into","","",50,[[],["result"]]],[11,"borrow","","",50,[[["self"]],["t"]]],[11,"borrow_mut","","",50,[[["self"]],["t"]]],[11,"type_id","","",50,[[["self"]],["typeid"]]],[11,"from","","",51,[[["t"]],["t"]]],[11,"into","","",51,[[],["u"]]],[11,"to_owned","","",51,[[["self"]],["t"]]],[11,"clone_into","","",51,[[["self"],["t"]]]],[11,"try_from","","",51,[[["u"]],["result"]]],[11,"try_into","","",51,[[],["result"]]],[11,"borrow","","",51,[[["self"]],["t"]]],[11,"borrow_mut","","",51,[[["self"]],["t"]]],[11,"type_id","","",51,[[["self"]],["typeid"]]],[11,"from","","",52,[[["t"]],["t"]]],[11,"into","","",52,[[],["u"]]],[11,"to_owned","","",52,[[["self"]],["t"]]],[11,"clone_into","","",52,[[["self"],["t"]]]],[11,"try_from","","",52,[[["u"]],["result"]]],[11,"try_into","","",52,[[],["result"]]],[11,"borrow","","",52,[[["self"]],["t"]]],[11,"borrow_mut","","",52,[[["self"]],["t"]]],[11,"type_id","","",52,[[["self"]],["typeid"]]],[11,"from","","",53,[[["t"]],["t"]]],[11,"into","","",53,[[],["u"]]],[11,"to_owned","","",53,[[["self"]],["t"]]],[11,"clone_into","","",53,[[["self"],["t"]]]],[11,"try_from","","",53,[[["u"]],["result"]]],[11,"try_into","","",53,[[],["result"]]],[11,"borrow","","",53,[[["self"]],["t"]]],[11,"borrow_mut","","",53,[[["self"]],["t"]]],[11,"type_id","","",53,[[["self"]],["typeid"]]],[11,"from","","",54,[[["t"]],["t"]]],[11,"into","","",54,[[],["u"]]],[11,"to_owned","","",54,[[["self"]],["t"]]],[11,"clone_into","","",54,[[["self"],["t"]]]],[11,"try_from","","",54,[[["u"]],["result"]]],[11,"try_into","","",54,[[],["result"]]],[11,"borrow","","",54,[[["self"]],["t"]]],[11,"borrow_mut","","",54,[[["self"]],["t"]]],[11,"type_id","","",54,[[["self"]],["typeid"]]],[11,"from","","",55,[[["t"]],["t"]]],[11,"into","","",55,[[],["u"]]],[11,"to_owned","","",55,[[["self"]],["t"]]],[11,"clone_into","","",55,[[["self"],["t"]]]],[11,"try_from","","",55,[[["u"]],["result"]]],[11,"try_into","","",55,[[],["result"]]],[11,"borrow","","",55,[[["self"]],["t"]]],[11,"borrow_mut","","",55,[[["self"]],["t"]]],[11,"type_id","","",55,[[["self"]],["typeid"]]],[11,"from","","",56,[[["t"]],["t"]]],[11,"into","","",56,[[],["u"]]],[11,"to_owned","","",56,[[["self"]],["t"]]],[11,"clone_into","","",56,[[["self"],["t"]]]],[11,"try_from","","",56,[[["u"]],["result"]]],[11,"try_into","","",56,[[],["result"]]],[11,"borrow","","",56,[[["self"]],["t"]]],[11,"borrow_mut","","",56,[[["self"]],["t"]]],[11,"type_id","","",56,[[["self"]],["typeid"]]],[11,"from","","",57,[[["t"]],["t"]]],[11,"into","","",57,[[],["u"]]],[11,"to_owned","","",57,[[["self"]],["t"]]],[11,"clone_into","","",57,[[["self"],["t"]]]],[11,"try_from","","",57,[[["u"]],["result"]]],[11,"try_into","","",57,[[],["result"]]],[11,"borrow","","",57,[[["self"]],["t"]]],[11,"borrow_mut","","",57,[[["self"]],["t"]]],[11,"type_id","","",57,[[["self"]],["typeid"]]],[11,"from","","",58,[[["t"]],["t"]]],[11,"into","","",58,[[],["u"]]],[11,"to_owned","","",58,[[["self"]],["t"]]],[11,"clone_into","","",58,[[["self"],["t"]]]],[11,"try_from","","",58,[[["u"]],["result"]]],[11,"try_into","","",58,[[],["result"]]],[11,"borrow","","",58,[[["self"]],["t"]]],[11,"borrow_mut","","",58,[[["self"]],["t"]]],[11,"type_id","","",58,[[["self"]],["typeid"]]],[11,"from","","",59,[[["t"]],["t"]]],[11,"into","","",59,[[],["u"]]],[11,"to_owned","","",59,[[["self"]],["t"]]],[11,"clone_into","","",59,[[["self"],["t"]]]],[11,"try_from","","",59,[[["u"]],["result"]]],[11,"try_into","","",59,[[],["result"]]],[11,"borrow","","",59,[[["self"]],["t"]]],[11,"borrow_mut","","",59,[[["self"]],["t"]]],[11,"type_id","","",59,[[["self"]],["typeid"]]],[11,"from","","",60,[[["t"]],["t"]]],[11,"into","","",60,[[],["u"]]],[11,"to_owned","","",60,[[["self"]],["t"]]],[11,"clone_into","","",60,[[["self"],["t"]]]],[11,"try_from","","",60,[[["u"]],["result"]]],[11,"try_into","","",60,[[],["result"]]],[11,"borrow","","",60,[[["self"]],["t"]]],[11,"borrow_mut","","",60,[[["self"]],["t"]]],[11,"type_id","","",60,[[["self"]],["typeid"]]],[11,"from","","",61,[[["t"]],["t"]]],[11,"into","","",61,[[],["u"]]],[11,"to_owned","","",61,[[["self"]],["t"]]],[11,"clone_into","","",61,[[["self"],["t"]]]],[11,"try_from","","",61,[[["u"]],["result"]]],[11,"try_into","","",61,[[],["result"]]],[11,"borrow","","",61,[[["self"]],["t"]]],[11,"borrow_mut","","",61,[[["self"]],["t"]]],[11,"type_id","","",61,[[["self"]],["typeid"]]],[11,"from","","",62,[[["t"]],["t"]]],[11,"into","","",62,[[],["u"]]],[11,"to_owned","","",62,[[["self"]],["t"]]],[11,"clone_into","","",62,[[["self"],["t"]]]],[11,"try_from","","",62,[[["u"]],["result"]]],[11,"try_into","","",62,[[],["result"]]],[11,"borrow","","",62,[[["self"]],["t"]]],[11,"borrow_mut","","",62,[[["self"]],["t"]]],[11,"type_id","","",62,[[["self"]],["typeid"]]],[11,"from","","",63,[[["t"]],["t"]]],[11,"into","","",63,[[],["u"]]],[11,"to_owned","","",63,[[["self"]],["t"]]],[11,"clone_into","","",63,[[["self"],["t"]]]],[11,"try_from","","",63,[[["u"]],["result"]]],[11,"try_into","","",63,[[],["result"]]],[11,"borrow","","",63,[[["self"]],["t"]]],[11,"borrow_mut","","",63,[[["self"]],["t"]]],[11,"type_id","","",63,[[["self"]],["typeid"]]],[11,"from","","",64,[[["t"]],["t"]]],[11,"into","","",64,[[],["u"]]],[11,"to_owned","","",64,[[["self"]],["t"]]],[11,"clone_into","","",64,[[["self"],["t"]]]],[11,"try_from","","",64,[[["u"]],["result"]]],[11,"try_into","","",64,[[],["result"]]],[11,"borrow","","",64,[[["self"]],["t"]]],[11,"borrow_mut","","",64,[[["self"]],["t"]]],[11,"type_id","","",64,[[["self"]],["typeid"]]],[11,"from","","",65,[[["t"]],["t"]]],[11,"into","","",65,[[],["u"]]],[11,"to_owned","","",65,[[["self"]],["t"]]],[11,"clone_into","","",65,[[["self"],["t"]]]],[11,"try_from","","",65,[[["u"]],["result"]]],[11,"try_into","","",65,[[],["result"]]],[11,"borrow","","",65,[[["self"]],["t"]]],[11,"borrow_mut","","",65,[[["self"]],["t"]]],[11,"type_id","","",65,[[["self"]],["typeid"]]],[11,"from","","",66,[[["t"]],["t"]]],[11,"into","","",66,[[],["u"]]],[11,"to_owned","","",66,[[["self"]],["t"]]],[11,"clone_into","","",66,[[["self"],["t"]]]],[11,"try_from","","",66,[[["u"]],["result"]]],[11,"try_into","","",66,[[],["result"]]],[11,"borrow","","",66,[[["self"]],["t"]]],[11,"borrow_mut","","",66,[[["self"]],["t"]]],[11,"type_id","","",66,[[["self"]],["typeid"]]],[11,"from","","",67,[[["t"]],["t"]]],[11,"into","","",67,[[],["u"]]],[11,"to_owned","","",67,[[["self"]],["t"]]],[11,"clone_into","","",67,[[["self"],["t"]]]],[11,"try_from","","",67,[[["u"]],["result"]]],[11,"try_into","","",67,[[],["result"]]],[11,"borrow","","",67,[[["self"]],["t"]]],[11,"borrow_mut","","",67,[[["self"]],["t"]]],[11,"type_id","","",67,[[["self"]],["typeid"]]],[11,"from","","",68,[[["t"]],["t"]]],[11,"into","","",68,[[],["u"]]],[11,"to_owned","","",68,[[["self"]],["t"]]],[11,"clone_into","","",68,[[["self"],["t"]]]],[11,"try_from","","",68,[[["u"]],["result"]]],[11,"try_into","","",68,[[],["result"]]],[11,"borrow","","",68,[[["self"]],["t"]]],[11,"borrow_mut","","",68,[[["self"]],["t"]]],[11,"type_id","","",68,[[["self"]],["typeid"]]],[11,"from","","",69,[[["t"]],["t"]]],[11,"into","","",69,[[],["u"]]],[11,"to_owned","","",69,[[["self"]],["t"]]],[11,"clone_into","","",69,[[["self"],["t"]]]],[11,"try_from","","",69,[[["u"]],["result"]]],[11,"try_into","","",69,[[],["result"]]],[11,"borrow","","",69,[[["self"]],["t"]]],[11,"borrow_mut","","",69,[[["self"]],["t"]]],[11,"type_id","","",69,[[["self"]],["typeid"]]],[11,"from","","",70,[[["t"]],["t"]]],[11,"into","","",70,[[],["u"]]],[11,"to_owned","","",70,[[["self"]],["t"]]],[11,"clone_into","","",70,[[["self"],["t"]]]],[11,"try_from","","",70,[[["u"]],["result"]]],[11,"try_into","","",70,[[],["result"]]],[11,"borrow","","",70,[[["self"]],["t"]]],[11,"borrow_mut","","",70,[[["self"]],["t"]]],[11,"type_id","","",70,[[["self"]],["typeid"]]],[11,"from","","",71,[[["t"]],["t"]]],[11,"into","","",71,[[],["u"]]],[11,"to_owned","","",71,[[["self"]],["t"]]],[11,"clone_into","","",71,[[["self"],["t"]]]],[11,"try_from","","",71,[[["u"]],["result"]]],[11,"try_into","","",71,[[],["result"]]],[11,"borrow","","",71,[[["self"]],["t"]]],[11,"borrow_mut","","",71,[[["self"]],["t"]]],[11,"type_id","","",71,[[["self"]],["typeid"]]],[11,"from","","",72,[[["t"]],["t"]]],[11,"into","","",72,[[],["u"]]],[11,"to_owned","","",72,[[["self"]],["t"]]],[11,"clone_into","","",72,[[["self"],["t"]]]],[11,"try_from","","",72,[[["u"]],["result"]]],[11,"try_into","","",72,[[],["result"]]],[11,"borrow","","",72,[[["self"]],["t"]]],[11,"borrow_mut","","",72,[[["self"]],["t"]]],[11,"type_id","","",72,[[["self"]],["typeid"]]],[11,"from","","",73,[[["t"]],["t"]]],[11,"into","","",73,[[],["u"]]],[11,"to_owned","","",73,[[["self"]],["t"]]],[11,"clone_into","","",73,[[["self"],["t"]]]],[11,"try_from","","",73,[[["u"]],["result"]]],[11,"try_into","","",73,[[],["result"]]],[11,"borrow","","",73,[[["self"]],["t"]]],[11,"borrow_mut","","",73,[[["self"]],["t"]]],[11,"type_id","","",73,[[["self"]],["typeid"]]],[11,"from","","",74,[[["t"]],["t"]]],[11,"into","","",74,[[],["u"]]],[11,"to_owned","","",74,[[["self"]],["t"]]],[11,"clone_into","","",74,[[["self"],["t"]]]],[11,"try_from","","",74,[[["u"]],["result"]]],[11,"try_into","","",74,[[],["result"]]],[11,"borrow","","",74,[[["self"]],["t"]]],[11,"borrow_mut","","",74,[[["self"]],["t"]]],[11,"type_id","","",74,[[["self"]],["typeid"]]],[11,"from","","",75,[[["t"]],["t"]]],[11,"into","","",75,[[],["u"]]],[11,"to_owned","","",75,[[["self"]],["t"]]],[11,"clone_into","","",75,[[["self"],["t"]]]],[11,"try_from","","",75,[[["u"]],["result"]]],[11,"try_into","","",75,[[],["result"]]],[11,"borrow","","",75,[[["self"]],["t"]]],[11,"borrow_mut","","",75,[[["self"]],["t"]]],[11,"type_id","","",75,[[["self"]],["typeid"]]],[11,"from","","",76,[[["t"]],["t"]]],[11,"into","","",76,[[],["u"]]],[11,"to_owned","","",76,[[["self"]],["t"]]],[11,"clone_into","","",76,[[["self"],["t"]]]],[11,"try_from","","",76,[[["u"]],["result"]]],[11,"try_into","","",76,[[],["result"]]],[11,"borrow","","",76,[[["self"]],["t"]]],[11,"borrow_mut","","",76,[[["self"]],["t"]]],[11,"type_id","","",76,[[["self"]],["typeid"]]],[11,"hash","mail_headers","",42,[[["self"],["__h"]]]],[11,"eq","","",42,[[["self"],["cow"]],["bool"]]],[11,"eq","","",42,[[["osstr"],["self"]],["bool"]]],[11,"eq","","",42,[[["softasciistr"],["self"]],["bool"]]],[11,"ne","","",42,[[["softasciistr"],["self"]],["bool"]]],[11,"eq","","",42,[[["self"],["cow"]],["bool"]]],[11,"eq","","",42,[[["str"],["self"]],["bool"]]],[11,"eq","","",42,[[["self"],["string"]],["bool"]]],[11,"eq","","",42,[[["self"],["osstring"]],["bool"]]],[11,"eq","","",42,[[["softasciistring"],["self"]],["bool"]]],[11,"index","","",42,[[["rangefrom",["usize"]],["self"],["usize"]]]],[11,"index","","",42,[[["range",["usize"]],["self"],["usize"]]]],[11,"index","","",42,[[["rangeto",["usize"]],["self"],["usize"]]]],[11,"index","","",42,[[["rangefull"],["self"]]]],[11,"partial_cmp","","",42,[[["softasciistr"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",42,[[["softasciistr"],["self"]],["bool"]]],[11,"le","","",42,[[["softasciistr"],["self"]],["bool"]]],[11,"gt","","",42,[[["softasciistr"],["self"]],["bool"]]],[11,"ge","","",42,[[["softasciistr"],["self"]],["bool"]]],[11,"fmt","","",42,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",42,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"cmp","","",42,[[["softasciistr"],["self"]],["ordering"]]],[11,"as_ref","","",42,[[["self"]],["str"]]],[11,"as_ref","","",42,[[["self"]],["osstr"]]],[11,"as_ref","","",42,[[["self"]]]],[11,"as_ref","","",42,[[["self"]],["path"]]],[11,"as_ref","","",42,[[["self"]],["softasciistr"]]],[11,"to_owned","","",42,[[["self"]],["softasciistring"]]],[11,"to_socket_addrs","","",42,[[["self"]],[["intoiter",["socketaddr"]],["result",["intoiter","error"]],["error"]]]],[11,"get_name","","",0,[[["self"]],["headername"]]],[11,"get_name","","",8,[[["self"]],["headername"]]],[11,"get_name","","",77,[[["self"]],["headername"]]],[11,"name","mail_headers::headers","",50,[[],["headername"]]],[11,"name","","",51,[[],["headername"]]],[11,"name","","",52,[[],["headername"]]],[11,"name","","",53,[[],["headername"]]],[11,"name","","",54,[[],["headername"]]],[11,"name","","",55,[[],["headername"]]],[11,"name","","",56,[[],["headername"]]],[11,"name","","",57,[[],["headername"]]],[11,"name","","",58,[[],["headername"]]],[11,"name","","",59,[[],["headername"]]],[11,"name","","",60,[[],["headername"]]],[11,"name","","",61,[[],["headername"]]],[11,"name","","",62,[[],["headername"]]],[11,"name","","",63,[[],["headername"]]],[11,"name","","",64,[[],["headername"]]],[11,"name","","",65,[[],["headername"]]],[11,"name","","",66,[[],["headername"]]],[11,"name","","",67,[[],["headername"]]],[11,"name","","",68,[[],["headername"]]],[11,"name","","",69,[[],["headername"]]],[11,"name","","",70,[[],["headername"]]],[11,"name","","",71,[[],["headername"]]],[11,"name","","",72,[[],["headername"]]],[11,"name","","",73,[[],["headername"]]],[11,"name","","",74,[[],["headername"]]],[11,"name","","",75,[[],["headername"]]],[11,"name","","",76,[[],["headername"]]],[11,"name","mail_headers","",8,[[["self"]],["headername"]]],[11,"is_max_one","","",8,[[["self"]],["bool"]]],[11,"validator","","",8,[[["self"]],[["headermapvalidator"],["option",["headermapvalidator"]]]]],[11,"encode","","",8,[[["self"],["encodingwriter"]],[["encodingerror"],["result",["encodingerror"]]]]],[11,"boxed_clone","","",8,[[["self"]],[["box",["headerobj"]],["headerobj"]]]],[11,"try_from","mail_headers::data","",9,[[["str"]],[["result",["componentcreationerror"]],["componentcreationerror"]]]],[11,"try_from","","",9,[[["string"]],[["result",["componentcreationerror"]],["componentcreationerror"]]]],[11,"try_from","mail_headers::header_components","",28,[[["datetime"]],[["result",["componentcreationerror"]],["componentcreationerror"]]]],[11,"try_from","","",15,[[["str"]],[["result",["componentcreationerror"]],["componentcreationerror"]]]],[11,"try_from","","",15,[[["string"]],[["result",["componentcreationerror"]],["componentcreationerror"]]]],[11,"try_from","","",15,[[["input"]],[["result",["componentcreationerror"]],["componentcreationerror"]]]],[11,"try_from","","",29,[[["t"]],[["result",["componentcreationerror"]],["componentcreationerror"]]]],[11,"try_from","","",30,[[["t"]],[["result",["componentcreationerror"]],["componentcreationerror"]]]],[11,"try_from","","",16,[[["e"]],[["result",["componentcreationerror"]],["componentcreationerror"]]]],[11,"try_from","","",16,[[],[["result",["componentcreationerror"]],["componentcreationerror"]]]],[11,"try_from","","",16,[[],[["result",["componentcreationerror"]],["componentcreationerror"]]]],[11,"try_from","","",16,[[],[["result",["componentcreationerror"]],["componentcreationerror"]]]],[11,"try_from","","",17,[[["vec"]],[["result",["componentcreationerror"]],["componentcreationerror"]]]],[11,"try_from","","",18,[[],[["result",["componentcreationerror"]],["componentcreationerror"]]]],[11,"try_from","","",17,[[],[["result",["componentcreationerror"]],["componentcreationerror"]]]],[11,"try_from","","",18,[[],[["result",["componentcreationerror"]],["componentcreationerror"]]]],[11,"try_from","","",17,[[],[["result",["componentcreationerror"]],["componentcreationerror"]]]],[11,"try_from","","",18,[[],[["result",["componentcreationerror"]],["componentcreationerror"]]]],[11,"try_from","","",17,[[],[["result",["componentcreationerror"]],["componentcreationerror"]]]],[11,"try_from","","",18,[[],[["result",["componentcreationerror"]],["componentcreationerror"]]]],[11,"try_from","","",17,[[],[["result",["componentcreationerror"]],["componentcreationerror"]]]],[11,"try_from","","",18,[[],[["result",["componentcreationerror"]],["componentcreationerror"]]]],[11,"try_from","","",17,[[],[["result",["componentcreationerror"]],["componentcreationerror"]]]],[11,"try_from","","",18,[[],[["result",["componentcreationerror"]],["componentcreationerror"]]]],[11,"try_from","","",17,[[],[["result",["componentcreationerror"]],["componentcreationerror"]]]],[11,"try_from","","",18,[[],[["result",["componentcreationerror"]],["componentcreationerror"]]]],[11,"try_from","","",17,[[],[["result",["componentcreationerror"]],["componentcreationerror"]]]],[11,"try_from","","",18,[[],[["result",["componentcreationerror"]],["componentcreationerror"]]]],[11,"try_from","","",17,[[],[["result",["componentcreationerror"]],["componentcreationerror"]]]],[11,"try_from","","",18,[[],[["result",["componentcreationerror"]],["componentcreationerror"]]]],[11,"try_from","","",17,[[],[["result",["componentcreationerror"]],["componentcreationerror"]]]],[11,"try_from","","",18,[[],[["result",["componentcreationerror"]],["componentcreationerror"]]]],[11,"try_from","","",17,[[],[["result",["componentcreationerror"]],["componentcreationerror"]]]],[11,"try_from","","",18,[[],[["result",["componentcreationerror"]],["componentcreationerror"]]]],[11,"try_from","","",17,[[],[["result",["componentcreationerror"]],["componentcreationerror"]]]],[11,"try_from","","",18,[[],[["result",["componentcreationerror"]],["componentcreationerror"]]]],[11,"try_from","","",17,[[],[["result",["componentcreationerror"]],["componentcreationerror"]]]],[11,"try_from","","",18,[[],[["result",["componentcreationerror"]],["componentcreationerror"]]]],[11,"try_from","","",17,[[],[["result",["componentcreationerror"]],["componentcreationerror"]]]],[11,"try_from","","",18,[[],[["result",["componentcreationerror"]],["componentcreationerror"]]]],[11,"try_from","","",17,[[],[["result",["componentcreationerror"]],["componentcreationerror"]]]],[11,"try_from","","",18,[[],[["result",["componentcreationerror"]],["componentcreationerror"]]]],[11,"try_from","","",17,[[],[["result",["componentcreationerror"]],["componentcreationerror"]]]],[11,"try_from","","",18,[[],[["result",["componentcreationerror"]],["componentcreationerror"]]]],[11,"try_from","","",17,[[],[["result",["componentcreationerror"]],["componentcreationerror"]]]],[11,"try_from","","",18,[[],[["result",["componentcreationerror"]],["componentcreationerror"]]]],[11,"try_from","","",17,[[],[["result",["componentcreationerror"]],["componentcreationerror"]]]],[11,"try_from","","",18,[[],[["result",["componentcreationerror"]],["componentcreationerror"]]]],[11,"try_from","","",17,[[],[["result",["componentcreationerror"]],["componentcreationerror"]]]],[11,"try_from","","",18,[[],[["result",["componentcreationerror"]],["componentcreationerror"]]]],[11,"try_from","","",17,[[],[["result",["componentcreationerror"]],["componentcreationerror"]]]],[11,"try_from","","",18,[[],[["result",["componentcreationerror"]],["componentcreationerror"]]]],[11,"try_from","","",17,[[],[["result",["componentcreationerror"]],["componentcreationerror"]]]],[11,"try_from","","",18,[[],[["result",["componentcreationerror"]],["componentcreationerror"]]]],[11,"try_from","","",17,[[],[["result",["componentcreationerror"]],["componentcreationerror"]]]],[11,"try_from","","",18,[[],[["result",["componentcreationerror"]],["componentcreationerror"]]]],[11,"try_from","","",17,[[],[["result",["componentcreationerror"]],["componentcreationerror"]]]],[11,"try_from","","",18,[[],[["result",["componentcreationerror"]],["componentcreationerror"]]]],[11,"try_from","","",17,[[],[["result",["componentcreationerror"]],["componentcreationerror"]]]],[11,"try_from","","",18,[[],[["result",["componentcreationerror"]],["componentcreationerror"]]]],[11,"try_from","","",17,[[],[["result",["componentcreationerror"]],["componentcreationerror"]]]],[11,"try_from","","",18,[[],[["result",["componentcreationerror"]],["componentcreationerror"]]]],[11,"try_from","","",17,[[],[["result",["componentcreationerror"]],["componentcreationerror"]]]],[11,"try_from","","",18,[[],[["result",["componentcreationerror"]],["componentcreationerror"]]]],[11,"try_from","","",17,[[],[["result",["componentcreationerror"]],["componentcreationerror"]]]],[11,"try_from","","",18,[[],[["result",["componentcreationerror"]],["componentcreationerror"]]]],[11,"try_from","","",17,[[],[["result",["componentcreationerror"]],["componentcreationerror"]]]],[11,"try_from","","",18,[[],[["result",["componentcreationerror"]],["componentcreationerror"]]]],[11,"try_from","","",17,[[],[["result",["componentcreationerror"]],["componentcreationerror"]]]],[11,"try_from","","",18,[[],[["result",["componentcreationerror"]],["componentcreationerror"]]]],[11,"try_from","","",17,[[],[["result",["componentcreationerror"]],["componentcreationerror"]]]],[11,"try_from","","",18,[[],[["result",["componentcreationerror"]],["componentcreationerror"]]]],[11,"try_from","","",17,[[],[["result",["componentcreationerror"]],["componentcreationerror"]]]],[11,"try_from","","",18,[[],[["result",["componentcreationerror"]],["componentcreationerror"]]]],[11,"try_from","","",17,[[],[["result",["componentcreationerror"]],["componentcreationerror"]]]],[11,"try_from","","",18,[[],[["result",["componentcreationerror"]],["componentcreationerror"]]]],[11,"try_from","","",17,[[],[["result",["componentcreationerror"]],["componentcreationerror"]]]],[11,"try_from","","",18,[[],[["result",["componentcreationerror"]],["componentcreationerror"]]]],[11,"try_from","","",17,[[],[["result",["componentcreationerror"]],["componentcreationerror"]]]],[11,"try_from","","",18,[[],[["result",["componentcreationerror"]],["componentcreationerror"]]]],[11,"try_from","","",17,[[],[["result",["componentcreationerror"]],["componentcreationerror"]]]],[11,"try_from","","",18,[[],[["result",["componentcreationerror"]],["componentcreationerror"]]]],[11,"try_from","","",17,[[],[["result",["componentcreationerror"]],["componentcreationerror"]]]],[11,"try_from","","",18,[[],[["result",["componentcreationerror"]],["componentcreationerror"]]]],[11,"try_from","","",17,[[],[["result",["componentcreationerror"]],["componentcreationerror"]]]],[11,"try_from","","",18,[[],[["result",["componentcreationerror"]],["componentcreationerror"]]]],[11,"try_from","","",17,[[],[["result",["componentcreationerror"]],["componentcreationerror"]]]],[11,"try_from","","",18,[[],[["result",["componentcreationerror"]],["componentcreationerror"]]]],[11,"try_from","","",17,[[],[["result",["componentcreationerror"]],["componentcreationerror"]]]],[11,"try_from","","",18,[[],[["result",["componentcreationerror"]],["componentcreationerror"]]]],[11,"try_from","","",17,[[],[["result",["componentcreationerror"]],["componentcreationerror"]]]],[11,"try_from","","",18,[[],[["result",["componentcreationerror"]],["componentcreationerror"]]]],[11,"try_from","","",17,[[],[["result",["componentcreationerror"]],["componentcreationerror"]]]],[11,"try_from","","",18,[[],[["result",["componentcreationerror"]],["componentcreationerror"]]]],[11,"try_from","","",17,[[],[["result",["componentcreationerror"]],["componentcreationerror"]]]],[11,"try_from","","",18,[[],[["result",["componentcreationerror"]],["componentcreationerror"]]]],[11,"try_from","","",17,[[],[["result",["componentcreationerror"]],["componentcreationerror"]]]],[11,"try_from","","",18,[[],[["result",["componentcreationerror"]],["componentcreationerror"]]]],[11,"try_from","","",17,[[],[["result",["componentcreationerror"]],["componentcreationerror"]]]],[11,"try_from","","",18,[[],[["result",["componentcreationerror"]],["componentcreationerror"]]]],[11,"try_from","","",17,[[],[["result",["componentcreationerror"]],["componentcreationerror"]]]],[11,"try_from","","",18,[[],[["result",["componentcreationerror"]],["componentcreationerror"]]]],[11,"try_from","","",17,[[],[["result",["componentcreationerror"]],["componentcreationerror"]]]],[11,"try_from","","",18,[[],[["result",["componentcreationerror"]],["componentcreationerror"]]]],[11,"try_from","","",17,[[],[["result",["componentcreationerror"]],["componentcreationerror"]]]],[11,"try_from","","",18,[[],[["result",["componentcreationerror"]],["componentcreationerror"]]]],[11,"try_from","","",17,[[],[["result",["componentcreationerror"]],["componentcreationerror"]]]],[11,"try_from","","",18,[[],[["result",["componentcreationerror"]],["componentcreationerror"]]]],[11,"try_from","","",17,[[],[["result",["componentcreationerror"]],["componentcreationerror"]]]],[11,"try_from","","",18,[[],[["result",["componentcreationerror"]],["componentcreationerror"]]]],[11,"try_from","","",17,[[],[["result",["componentcreationerror"]],["componentcreationerror"]]]],[11,"try_from","","",18,[[],[["result",["componentcreationerror"]],["componentcreationerror"]]]],[11,"try_from","","",17,[[],[["result",["componentcreationerror"]],["componentcreationerror"]]]],[11,"try_from","","",18,[[],[["result",["componentcreationerror"]],["componentcreationerror"]]]],[11,"try_from","","",17,[[],[["result",["componentcreationerror"]],["componentcreationerror"]]]],[11,"try_from","","",18,[[],[["result",["componentcreationerror"]],["componentcreationerror"]]]],[11,"try_from","","",17,[[],[["result",["componentcreationerror"]],["componentcreationerror"]]]],[11,"try_from","","",18,[[],[["result",["componentcreationerror"]],["componentcreationerror"]]]],[11,"try_from","","",17,[[],[["result",["componentcreationerror"]],["componentcreationerror"]]]],[11,"try_from","","",18,[[],[["result",["componentcreationerror"]],["componentcreationerror"]]]],[11,"try_from","","",17,[[],[["result",["componentcreationerror"]],["componentcreationerror"]]]],[11,"try_from","","",18,[[],[["result",["componentcreationerror"]],["componentcreationerror"]]]],[11,"try_from","","",17,[[],[["result",["componentcreationerror"]],["componentcreationerror"]]]],[11,"try_from","","",18,[[],[["result",["componentcreationerror"]],["componentcreationerror"]]]],[11,"try_from","","",17,[[],[["result",["componentcreationerror"]],["componentcreationerror"]]]],[11,"try_from","","",18,[[],[["result",["componentcreationerror"]],["componentcreationerror"]]]],[11,"try_from","","",17,[[],[["result",["componentcreationerror"]],["componentcreationerror"]]]],[11,"try_from","","",18,[[],[["result",["componentcreationerror"]],["componentcreationerror"]]]],[11,"try_from","","",17,[[],[["result",["componentcreationerror"]],["componentcreationerror"]]]],[11,"try_from","","",18,[[],[["result",["componentcreationerror"]],["componentcreationerror"]]]],[11,"try_from","","",17,[[],[["result",["componentcreationerror"]],["componentcreationerror"]]]],[11,"try_from","","",18,[[],[["result",["componentcreationerror"]],["componentcreationerror"]]]],[11,"try_from","","",17,[[],[["result",["componentcreationerror"]],["componentcreationerror"]]]],[11,"try_from","","",18,[[],[["result",["componentcreationerror"]],["componentcreationerror"]]]],[11,"try_from","","",17,[[],[["result",["componentcreationerror"]],["componentcreationerror"]]]],[11,"try_from","","",18,[[],[["result",["componentcreationerror"]],["componentcreationerror"]]]],[11,"try_from","","",17,[[],[["result",["componentcreationerror"]],["componentcreationerror"]]]],[11,"try_from","","",18,[[],[["result",["componentcreationerror"]],["componentcreationerror"]]]],[11,"try_from","","",17,[[],[["result",["componentcreationerror"]],["componentcreationerror"]]]],[11,"try_from","","",18,[[],[["result",["componentcreationerror"]],["componentcreationerror"]]]],[11,"try_from","","",17,[[],[["result",["componentcreationerror"]],["componentcreationerror"]]]],[11,"try_from","","",18,[[],[["result",["componentcreationerror"]],["componentcreationerror"]]]],[11,"try_from","","",18,[[["vec"]],[["result",["componentcreationerror"]],["componentcreationerror"]]]],[11,"try_from","","",47,[[["t"]],[["result",["componentcreationerror"]],["componentcreationerror"]]]],[11,"try_from","","",31,[[["t"]],[["result",["componentcreationerror"]],["componentcreationerror"]]]],[11,"try_from","","",32,[[["mimespec",["ascii","modern"]],["_mediatype",["mimespec"]]],[["result",["componentcreationerror"]],["componentcreationerror"]]]],[11,"try_from","","",32,[[["_mediatype",["mimespec"]],["mimespec",["internationalized","modern"]]],[["result",["componentcreationerror"]],["componentcreationerror"]]]],[11,"try_from","","",32,[[["str"]],[["result",["componentcreationerror"]],["componentcreationerror"]]]],[11,"try_from","","",20,[[["option",["email"]],["email"]],[["result",["componentcreationerror"]],["componentcreationerror"]]]],[11,"try_from","","",20,[[["t"]],[["result",["componentcreationerror"]],["componentcreationerror"]]]],[11,"try_from","mail_headers::header_components::word","",33,[[["t"]],[["result",["componentcreationerror"]],["componentcreationerror"]]]],[11,"try_from","mail_headers::header_components","",21,[[["str"]],[["result",["componentcreationerror"]],["componentcreationerror"]]]],[11,"try_from","","",21,[[["string"]],[["result",["componentcreationerror"]],["componentcreationerror"]]]],[11,"try_from","","",21,[[["input"]],[["result",["componentcreationerror"]],["componentcreationerror"]]]],[11,"try_from","","",22,[[["t"]],[["result",["componentcreationerror"]],["componentcreationerror"]]]],[11,"try_from","","",22,[[["vec"]],[["result",["componentcreationerror"]],["componentcreationerror"]]]],[11,"try_from","","",22,[[],[["result",["componentcreationerror"]],["componentcreationerror"]]]],[11,"try_from","","",22,[[],[["result",["componentcreationerror"]],["componentcreationerror"]]]],[11,"try_from","","",22,[[],[["result",["componentcreationerror"]],["componentcreationerror"]]]],[11,"try_from","","",22,[[],[["result",["componentcreationerror"]],["componentcreationerror"]]]],[11,"try_from","","",22,[[],[["result",["componentcreationerror"]],["componentcreationerror"]]]],[11,"try_from","","",22,[[],[["result",["componentcreationerror"]],["componentcreationerror"]]]],[11,"try_from","","",22,[[],[["result",["componentcreationerror"]],["componentcreationerror"]]]],[11,"try_from","","",22,[[],[["result",["componentcreationerror"]],["componentcreationerror"]]]],[11,"try_from","","",22,[[],[["result",["componentcreationerror"]],["componentcreationerror"]]]],[11,"try_from","","",22,[[],[["result",["componentcreationerror"]],["componentcreationerror"]]]],[11,"try_from","","",22,[[],[["result",["componentcreationerror"]],["componentcreationerror"]]]],[11,"try_from","","",22,[[],[["result",["componentcreationerror"]],["componentcreationerror"]]]],[11,"try_from","","",22,[[],[["result",["componentcreationerror"]],["componentcreationerror"]]]],[11,"try_from","","",22,[[],[["result",["componentcreationerror"]],["componentcreationerror"]]]],[11,"try_from","","",22,[[],[["result",["componentcreationerror"]],["componentcreationerror"]]]],[11,"try_from","","",22,[[],[["result",["componentcreationerror"]],["componentcreationerror"]]]],[11,"try_from","","",22,[[],[["result",["componentcreationerror"]],["componentcreationerror"]]]],[11,"try_from","","",22,[[],[["result",["componentcreationerror"]],["componentcreationerror"]]]],[11,"try_from","","",22,[[],[["result",["componentcreationerror"]],["componentcreationerror"]]]],[11,"try_from","","",22,[[],[["result",["componentcreationerror"]],["componentcreationerror"]]]],[11,"try_from","","",22,[[],[["result",["componentcreationerror"]],["componentcreationerror"]]]],[11,"try_from","","",22,[[],[["result",["componentcreationerror"]],["componentcreationerror"]]]],[11,"try_from","","",22,[[],[["result",["componentcreationerror"]],["componentcreationerror"]]]],[11,"try_from","","",22,[[],[["result",["componentcreationerror"]],["componentcreationerror"]]]],[11,"try_from","","",22,[[],[["result",["componentcreationerror"]],["componentcreationerror"]]]],[11,"try_from","","",22,[[],[["result",["componentcreationerror"]],["componentcreationerror"]]]],[11,"try_from","","",22,[[],[["result",["componentcreationerror"]],["componentcreationerror"]]]],[11,"try_from","","",22,[[],[["result",["componentcreationerror"]],["componentcreationerror"]]]],[11,"try_from","","",22,[[],[["result",["componentcreationerror"]],["componentcreationerror"]]]],[11,"try_from","","",22,[[],[["result",["componentcreationerror"]],["componentcreationerror"]]]],[11,"try_from","","",22,[[],[["result",["componentcreationerror"]],["componentcreationerror"]]]],[11,"try_from","","",22,[[],[["result",["componentcreationerror"]],["componentcreationerror"]]]],[11,"try_from","","",34,[[["str"]],[["result",["componentcreationerror"]],["componentcreationerror"]]]],[11,"try_from","","",35,[[["t"]],[["result",["componentcreationerror"]],["componentcreationerror"]]]],[11,"as_ref","mail_headers::data","",10,[[["self"]],["str"]]],[11,"as_ref","","",11,[[["self"]],["str"]]],[11,"as_ref","mail_headers::header_components","",35,[[["self"]],["str"]]],[11,"from","mail_headers::error","",1,[[["buildinvalidationerror"]],["self"]]],[11,"from","","",1,[[["context",["buildinvalidationerror"]],["buildinvalidationerror"]],["self"]]],[11,"from","mail_headers::data","",10,[[["softasciistring"]],["self"]]],[11,"from","","",11,[[["string"]],["self"]]],[11,"from","","",9,[[["str"]],["self"]]],[11,"from","","",9,[[["string"]],["self"]]],[11,"from","","",12,[[["str"]],["self"]]],[11,"from","","",12,[[["string"]],["self"]]],[11,"from","","",12,[[["softasciistring"]],["self"]]],[11,"from","","",12,[[["input"]],["self"]]],[11,"from","mail_headers::map","",44,[[["untypedbodies"]],["self"]]],[11,"from","","",45,[[["untypedbodiesmut"]],["self"]]],[11,"from","mail_headers::header_components","",28,[[["datetime"]],["self"]]],[11,"from","","",16,[[["email"]],["self"]]],[11,"from","","",16,[[],["self"]]],[11,"from","","",32,[[["mimespec",["ascii","modern"]],["_mediatype",["mimespec"]]],["self"]]],[11,"from","","",32,[[["_mediatype",["mimespec"]],["mimespec",["internationalized","modern"]]],["self"]]],[11,"from","","",35,[[["t"]],["self"]]],[11,"into","mail_headers::data","",10,[[],["softasciistring"]]],[11,"into","","",11,[[],["string"]]],[11,"into","","",9,[[],["string"]]],[11,"into","","",12,[[],["string"]]],[11,"into","mail_headers::header_components","",28,[[],[["utc"],["datetime",["utc"]]]]],[11,"into","","",32,[[],["anymediatype"]]],[11,"into","","",32,[[],[["_mediatype",["mimespec"]],["mimespec",["internationalized","modern"]]]]],[11,"into","","",35,[[],["input"]]],[11,"into","","",35,[[],["string"]]],[11,"len","mail_headers::map","",44,[[["self"]],["usize"]]],[11,"len","","",45,[[["self"]],["usize"]]],[11,"into_iter","","",13,[[]]],[11,"into_iter","mail_headers::header_components","",17,[[]]],[11,"into_iter","","",22,[[]]],[11,"next","mail_headers::map","",44,[[["self"]],["option"]]],[11,"size_hint","","",44,[[["self"]]]],[11,"next","","",45,[[["self"]],["option"]]],[11,"size_hint","","",45,[[["self"]]]],[11,"clone","mail_headers","",0,[[["self"]],["headername"]]],[11,"clone","","",43,[[["self"]],["invalidheadername"]]],[11,"clone","mail_headers::error","",2,[[["self"]],["buildinvalidationerror"]]],[11,"clone","mail_headers","",8,[[["self"]],["header"]]],[11,"clone","mail_headers::data","",10,[[["self"]],["innerascii"]]],[11,"clone","","",11,[[["self"]],["innerutf8"]]],[11,"clone","","",9,[[["self"]],["input"]]],[11,"clone","","",12,[[["self"]],["simpleitem"]]],[11,"clone","mail_headers::map","",13,[[["self"]],["headermap"]]],[11,"clone","","",44,[[["self"]],["self"]]],[11,"clone","mail_headers::header_components::utils::text_partition","",49,[[["self"]],["partitionerror"]]],[11,"clone","","",27,[[["self"]],["partition"]]],[11,"clone","mail_headers::header_components","",14,[[["self"]],["filemeta"]]],[11,"clone","","",28,[[["self"]],["datetime"]]],[11,"clone","","",15,[[["self"]],["email"]]],[11,"clone","","",29,[[["self"]],["localpart"]]],[11,"clone","","",30,[[["self"]],["domain"]]],[11,"clone","","",16,[[["self"]],["mailbox"]]],[11,"clone","","",18,[[["self"]],["optmailboxlist"]]],[11,"clone","","",17,[[["self"]],["mailboxlist"]]],[11,"clone","","",23,[[["self"]],["transferencoding"]]],[11,"clone","","",47,[[["self"]],["unstructured"]]],[11,"clone","","",31,[[["self"]],["messageid"]]],[11,"clone","","",19,[[["self"]],["messageidlist"]]],[11,"clone","","",48,[[["self"]],["fws"]]],[11,"clone","","",24,[[["self"]],["cfws"]]],[11,"clone","","",32,[[["self"]],["mediatype"]]],[11,"clone","","",20,[[["self"]],["path"]]],[11,"clone","","",25,[[["self"]],["receivedtoken"]]],[11,"clone","mail_headers::header_components::word","",33,[[["self"]],["word"]]],[11,"clone","mail_headers::header_components","",21,[[["self"]],["phrase"]]],[11,"clone","","",22,[[["self"]],["phraselist"]]],[11,"clone","","",34,[[["self"]],["disposition"]]],[11,"clone","","",26,[[["self"]],["dispositionkind"]]],[11,"clone","","",35,[[["self"]],["rawunstructured"]]],[11,"clone","mail_headers::headers","",50,[[["self"]],["date"]]],[11,"clone","","",51,[[["self"]],["_from"]]],[11,"clone","","",52,[[["self"]],["sender"]]],[11,"clone","","",53,[[["self"]],["replyto"]]],[11,"clone","","",54,[[["self"]],["_to"]]],[11,"clone","","",55,[[["self"]],["cc"]]],[11,"clone","","",56,[[["self"]],["bcc"]]],[11,"clone","","",57,[[["self"]],["messageid"]]],[11,"clone","","",58,[[["self"]],["inreplyto"]]],[11,"clone","","",59,[[["self"]],["references"]]],[11,"clone","","",60,[[["self"]],["subject"]]],[11,"clone","","",61,[[["self"]],["comments"]]],[11,"clone","","",62,[[["self"]],["keywords"]]],[11,"clone","","",63,[[["self"]],["resentdate"]]],[11,"clone","","",64,[[["self"]],["resentfrom"]]],[11,"clone","","",65,[[["self"]],["resentsender"]]],[11,"clone","","",66,[[["self"]],["resentto"]]],[11,"clone","","",67,[[["self"]],["resentcc"]]],[11,"clone","","",68,[[["self"]],["resentbcc"]]],[11,"clone","","",69,[[["self"]],["resentmsgid"]]],[11,"clone","","",70,[[["self"]],["returnpath"]]],[11,"clone","","",71,[[["self"]],["received"]]],[11,"clone","","",72,[[["self"]],["contenttype"]]],[11,"clone","","",73,[[["self"]],["contentid"]]],[11,"clone","","",74,[[["self"]],["contenttransferencoding"]]],[11,"clone","","",75,[[["self"]],["contentdescription"]]],[11,"clone","","",76,[[["self"]],["contentdisposition"]]],[11,"default","mail_headers::map","",13,[[],["self"]]],[11,"default","mail_headers::header_components","",14,[[],["filemeta"]]],[11,"default","mail_headers::headers","",50,[[],["date"]]],[11,"default","","",51,[[],["_from"]]],[11,"default","","",52,[[],["sender"]]],[11,"default","","",53,[[],["replyto"]]],[11,"default","","",54,[[],["_to"]]],[11,"default","","",55,[[],["cc"]]],[11,"default","","",56,[[],["bcc"]]],[11,"default","","",57,[[],["messageid"]]],[11,"default","","",58,[[],["inreplyto"]]],[11,"default","","",59,[[],["references"]]],[11,"default","","",60,[[],["subject"]]],[11,"default","","",61,[[],["comments"]]],[11,"default","","",62,[[],["keywords"]]],[11,"default","","",63,[[],["resentdate"]]],[11,"default","","",64,[[],["resentfrom"]]],[11,"default","","",65,[[],["resentsender"]]],[11,"default","","",66,[[],["resentto"]]],[11,"default","","",67,[[],["resentcc"]]],[11,"default","","",68,[[],["resentbcc"]]],[11,"default","","",69,[[],["resentmsgid"]]],[11,"default","","",70,[[],["returnpath"]]],[11,"default","","",71,[[],["received"]]],[11,"default","","",72,[[],["contenttype"]]],[11,"default","","",73,[[],["contentid"]]],[11,"default","","",74,[[],["contenttransferencoding"]]],[11,"default","","",75,[[],["contentdescription"]]],[11,"default","","",76,[[],["contentdisposition"]]],[11,"eq","mail_headers","",0,[[["self"],["headername"]],["bool"]]],[11,"ne","","",0,[[["self"],["headername"]],["bool"]]],[11,"eq","","",0,[[["str"],["self"]],["bool"]]],[11,"eq","","",0,[[["softasciistr"],["self"]],["bool"]]],[11,"eq","mail_headers::error","",2,[[["self"],["buildinvalidationerror"]],["bool"]]],[11,"ne","","",2,[[["self"],["buildinvalidationerror"]],["bool"]]],[11,"eq","mail_headers::data","",10,[[["innerascii"],["self"]],["bool"]]],[11,"eq","","",11,[[["self"],["innerutf8"]],["bool"]]],[11,"eq","","",9,[[["self"],["input"]],["bool"]]],[11,"ne","","",9,[[["self"],["input"]],["bool"]]],[11,"eq","","",12,[[["self"],["simpleitem"]],["bool"]]],[11,"ne","","",12,[[["self"],["simpleitem"]],["bool"]]],[11,"eq","mail_headers::header_components::utils::text_partition","",49,[[["partitionerror"],["self"]],["bool"]]],[11,"eq","mail_headers::header_components","",14,[[["filemeta"],["self"]],["bool"]]],[11,"ne","","",14,[[["filemeta"],["self"]],["bool"]]],[11,"eq","","",28,[[["datetime"],["self"]],["bool"]]],[11,"ne","","",28,[[["datetime"],["self"]],["bool"]]],[11,"eq","","",15,[[["email"],["self"]],["bool"]]],[11,"ne","","",15,[[["email"],["self"]],["bool"]]],[11,"eq","","",29,[[["self"],["localpart"]],["bool"]]],[11,"ne","","",29,[[["self"],["localpart"]],["bool"]]],[11,"eq","","",30,[[["domain"],["self"]],["bool"]]],[11,"ne","","",30,[[["domain"],["self"]],["bool"]]],[11,"eq","","",16,[[["mailbox"],["self"]],["bool"]]],[11,"ne","","",16,[[["mailbox"],["self"]],["bool"]]],[11,"eq","","",18,[[["self"],["optmailboxlist"]],["bool"]]],[11,"ne","","",18,[[["self"],["optmailboxlist"]],["bool"]]],[11,"eq","","",17,[[["mailboxlist"],["self"]],["bool"]]],[11,"ne","","",17,[[["mailboxlist"],["self"]],["bool"]]],[11,"eq","","",23,[[["self"],["transferencoding"]],["bool"]]],[11,"eq","","",47,[[["self"],["unstructured"]],["bool"]]],[11,"ne","","",47,[[["self"],["unstructured"]],["bool"]]],[11,"eq","","",31,[[["self"],["messageid"]],["bool"]]],[11,"ne","","",31,[[["self"],["messageid"]],["bool"]]],[11,"eq","","",48,[[["fws"],["self"]],["bool"]]],[11,"eq","","",24,[[["self"],["cfws"]],["bool"]]],[11,"ne","","",24,[[["self"],["cfws"]],["bool"]]],[11,"eq","","",20,[[["path"],["self"]],["bool"]]],[11,"ne","","",20,[[["path"],["self"]],["bool"]]],[11,"eq","","",25,[[["receivedtoken"],["self"]],["bool"]]],[11,"ne","","",25,[[["receivedtoken"],["self"]],["bool"]]],[11,"eq","mail_headers::header_components::word","",33,[[["self"],["word"]],["bool"]]],[11,"ne","","",33,[[["self"],["word"]],["bool"]]],[11,"eq","mail_headers::header_components","",21,[[["self"],["phrase"]],["bool"]]],[11,"ne","","",21,[[["self"],["phrase"]],["bool"]]],[11,"eq","","",22,[[["phraselist"],["self"]],["bool"]]],[11,"ne","","",22,[[["phraselist"],["self"]],["bool"]]],[11,"eq","","",34,[[["self"],["disposition"]],["bool"]]],[11,"ne","","",34,[[["self"],["disposition"]],["bool"]]],[11,"eq","","",26,[[["dispositionkind"],["self"]],["bool"]]],[11,"eq","","",35,[[["rawunstructured"],["self"]],["bool"]]],[11,"ne","","",35,[[["rawunstructured"],["self"]],["bool"]]],[11,"deref","mail_headers","",8,[[["self"]]]],[11,"deref","mail_headers::data","",10,[[["self"]],["softasciistr"]]],[11,"deref","","",11,[[["self"]],["str"]]],[11,"deref","","",9,[[["self"]]]],[11,"deref","","",12,[[["self"]],["str"]]],[11,"deref","mail_headers::header_components","",28,[[["self"]]]],[11,"deref","","",29,[[["self"]]]],[11,"deref","","",30,[[["self"]]]],[11,"deref","","",18,[[["self"]]]],[11,"deref","","",17,[[["self"]]]],[11,"deref","","",47,[[["self"]]]],[11,"deref","","",19,[[["self"]]]],[11,"deref","","",32,[[["self"]]]],[11,"deref_mut","mail_headers","",8,[[["self"]]]],[11,"deref_mut","mail_headers::data","",9,[[["self"]]]],[11,"deref_mut","mail_headers::header_components","",18,[[["self"]]]],[11,"deref_mut","","",17,[[["self"]]]],[11,"deref_mut","","",47,[[["self"]]]],[11,"deref_mut","","",19,[[["self"]]]],[11,"fmt","mail_headers","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",43,[[["formatter"],["self"]],["result"]]],[11,"fmt","mail_headers::error","",6,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",7,[[["formatter"],["self"]],["result"]]],[11,"fmt","mail_headers","",8,[[["formatter"],["self"]],["result"]]],[11,"fmt","mail_headers::data","",10,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",11,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",9,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",12,[[["formatter"],["self"]],["result"]]],[11,"fmt","mail_headers::map","",13,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",44,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",45,[[["formatter"],["self"]],["result"]]],[11,"fmt","mail_headers::header_components::utils::text_partition","",49,[[["formatter"],["self"]],["result"]]],[11,"fmt","mail_headers::header_components","",14,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",28,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",15,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",29,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",30,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",16,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",18,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",17,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",23,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",47,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",31,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",19,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",48,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",24,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",32,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",20,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",25,[[["formatter"],["self"]],["result"]]],[11,"fmt","mail_headers::header_components::word","",33,[[["formatter"],["self"]],["result"]]],[11,"fmt","mail_headers::header_components","",21,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",22,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",34,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",26,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",35,[[["formatter"],["self"]],["result"]]],[11,"fmt","mail_headers","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",43,[[["self"],["formatter"]],["result"]]],[11,"fmt","mail_headers::error","",6,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",7,[[["formatter"],["self"]],["result"]]],[11,"fmt","mail_headers::data","",9,[[["formatter"],["self"]],["result"]]],[11,"fmt","mail_headers::header_components::utils::text_partition","",49,[[["self"],["formatter"]],["result"]]],[11,"fmt","mail_headers::header_components","",47,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",31,[[["formatter"],["self"]],["result"]]],[11,"hash","mail_headers","",0,[[["self"],["__h"]]]],[11,"hash","mail_headers::error","",2,[[["self"],["__h"]]]],[11,"hash","mail_headers::data","",10,[[["self"],["__h"]]]],[11,"hash","","",11,[[["self"],["__h"]]]],[11,"hash","","",9,[[["self"],["__h"]]]],[11,"hash","","",12,[[["self"],["__h"]]]],[11,"hash","mail_headers::header_components::utils::text_partition","",49,[[["self"],["__h"]]]],[11,"hash","mail_headers::header_components","",14,[[["self"],["__h"]]]],[11,"hash","","",28,[[["self"],["__h"]]]],[11,"hash","","",15,[[["self"],["__h"]]]],[11,"hash","","",29,[[["self"],["__h"]]]],[11,"hash","","",30,[[["self"],["__h"]]]],[11,"hash","","",16,[[["self"],["__h"]]]],[11,"hash","","",18,[[["self"],["__h"]]]],[11,"hash","","",17,[[["self"],["__h"]]]],[11,"hash","","",23,[[["self"],["__h"]]]],[11,"hash","","",47,[[["self"],["__h"]]]],[11,"hash","","",31,[[["self"],["__h"]]]],[11,"hash","","",48,[[["self"],["__h"]]]],[11,"hash","","",24,[[["self"],["__h"]]]],[11,"hash","","",20,[[["self"],["__h"]]]],[11,"hash","","",25,[[["self"],["__h"]]]],[11,"hash","mail_headers::header_components::word","",33,[[["self"],["__h"]]]],[11,"hash","mail_headers::header_components","",21,[[["self"],["__h"]]]],[11,"hash","","",22,[[["self"],["__h"]]]],[11,"hash","","",34,[[["self"],["__h"]]]],[11,"hash","","",26,[[["self"],["__h"]]]],[11,"hash","","",35,[[["self"],["__h"]]]],[11,"from_str","","",30,[[["str"]],["result"]]],[11,"from_str","","",32,[[["str"]],["result"]]],[11,"name","mail_headers","",43,[[["self"]],[["str"],["option",["str"]]]]],[11,"cause","","",43,[[["self"]],[["fail"],["option",["fail"]]]]],[11,"backtrace","","",43,[[["self"]],[["backtrace"],["option",["backtrace"]]]]],[11,"name","mail_headers::error","",6,[[["self"]],[["str"],["option",["str"]]]]],[11,"cause","","",6,[[["self"]],[["fail"],["option",["fail"]]]]],[11,"backtrace","","",6,[[["self"]],[["backtrace"],["option",["backtrace"]]]]],[11,"name","","",1,[[["self"]],[["str"],["option",["str"]]]]],[11,"cause","","",1,[[["self"]],[["fail"],["option",["fail"]]]]],[11,"backtrace","","",1,[[["self"]],[["backtrace"],["option",["backtrace"]]]]],[11,"name","","",2,[[["self"]],[["str"],["option",["str"]]]]],[11,"cause","","",2,[[["self"]],[["fail"],["option",["fail"]]]]],[11,"backtrace","","",2,[[["self"]],[["backtrace"],["option",["backtrace"]]]]],[11,"cause","","",7,[[["self"]],[["option",["fail"]],["fail"]]]],[11,"backtrace","","",7,[[["self"]],[["option",["backtrace"]],["backtrace"]]]],[11,"name","mail_headers::header_components::utils::text_partition","",49,[[["self"]],[["str"],["option",["str"]]]]],[11,"cause","","",49,[[["self"]],[["fail"],["option",["fail"]]]]],[11,"backtrace","","",49,[[["self"]],[["backtrace"],["option",["backtrace"]]]]],[11,"encode","mail_headers::header_components","",28,[[["self"],["encodingwriter"]],[["encodingerror"],["result",["encodingerror"]]]]],[11,"boxed_clone","","",28,[[["self"]],[["box",["encodableinheader"]],["encodableinheader"]]]],[11,"encode","","",15,[[["self"],["encodingwriter"]],[["encodingerror"],["result",["encodingerror"]]]]],[11,"boxed_clone","","",15,[[["self"]],[["box",["encodableinheader"]],["encodableinheader"]]]],[11,"encode","","",29,[[["self"],["encodingwriter"]],[["encodingerror"],["result",["encodingerror"]]]]],[11,"boxed_clone","","",29,[[["self"]],[["box",["encodableinheader"]],["encodableinheader"]]]],[11,"encode","","",30,[[["self"],["encodingwriter"]],[["encodingerror"],["result",["encodingerror"]]]]],[11,"boxed_clone","","",30,[[["self"]],[["box",["encodableinheader"]],["encodableinheader"]]]],[11,"encode","","",16,[[["self"],["encodingwriter"]],[["encodingerror"],["result",["encodingerror"]]]]],[11,"boxed_clone","","",16,[[["self"]],[["box",["encodableinheader"]],["encodableinheader"]]]],[11,"encode","","",18,[[["self"],["encodingwriter"]],[["encodingerror"],["result",["encodingerror"]]]]],[11,"boxed_clone","","",18,[[["self"]],[["box",["encodableinheader"]],["encodableinheader"]]]],[11,"encode","","",17,[[["self"],["encodingwriter"]],[["encodingerror"],["result",["encodingerror"]]]]],[11,"boxed_clone","","",17,[[["self"]],[["box",["encodableinheader"]],["encodableinheader"]]]],[11,"encode","","",23,[[["self"],["encodingwriter"]],[["encodingerror"],["result",["encodingerror"]]]]],[11,"boxed_clone","","",23,[[["self"]],[["box",["encodableinheader"]],["encodableinheader"]]]],[11,"encode","","",47,[[["self"],["encodingwriter"]],[["encodingerror"],["result",["encodingerror"]]]]],[11,"boxed_clone","","",47,[[["self"]],[["box",["encodableinheader"]],["encodableinheader"]]]],[11,"encode","","",31,[[["self"],["encodingwriter"]],[["encodingerror"],["result",["encodingerror"]]]]],[11,"boxed_clone","","",31,[[["self"]],[["box",["encodableinheader"]],["encodableinheader"]]]],[11,"encode","","",19,[[["self"],["encodingwriter"]],[["encodingerror"],["result",["encodingerror"]]]]],[11,"boxed_clone","","",19,[[["self"]],[["box",["encodableinheader"]],["encodableinheader"]]]],[11,"encode","","",24,[[["self"],["encodingwriter"]],[["encodingerror"],["result",["encodingerror"]]]]],[11,"boxed_clone","","",24,[[["self"]],[["box",["encodableinheader"]],["encodableinheader"]]]],[11,"encode","","",32,[[["self"],["encodingwriter"]],[["encodingerror"],["result",["encodingerror"]]]]],[11,"boxed_clone","","",32,[[["self"]],[["box",["encodableinheader"]],["encodableinheader"]]]],[11,"encode","","",20,[[["self"],["encodingwriter"]],[["encodingerror"],["result",["encodingerror"]]]]],[11,"boxed_clone","","",20,[[["self"]],[["box",["encodableinheader"]],["encodableinheader"]]]],[11,"encode","","",25,[[["self"],["encodingwriter"]],[["encodingerror"],["result",["encodingerror"]]]]],[11,"boxed_clone","","",25,[[["self"]],[["box",["encodableinheader"]],["encodableinheader"]]]],[11,"encode","","",21,[[["self"],["encodingwriter"]],[["encodingerror"],["result",["encodingerror"]]]]],[11,"boxed_clone","","",21,[[["self"]],[["box",["encodableinheader"]],["encodableinheader"]]]],[11,"encode","","",22,[[["self"],["encodingwriter"]],[["encodingerror"],["result",["encodingerror"]]]]],[11,"boxed_clone","","",22,[[["self"]],[["box",["encodableinheader"]],["encodableinheader"]]]],[11,"encode","","",34,[[["self"],["encodingwriter"]],[["encodingerror"],["result",["encodingerror"]]]]],[11,"boxed_clone","","",34,[[["self"]],[["box",["encodableinheader"]],["encodableinheader"]]]],[11,"encode","","",35,[[["self"],["encodingwriter"]],[["encodingerror"],["result",["encodingerror"]]]]],[11,"boxed_clone","","",35,[[["self"]],[["box",["encodableinheader"]],["encodableinheader"]]]],[11,"from_unchecked","mail_headers","",42,[[["str"]],["softasciistr"]]],[11,"from_str_unchecked","","",42,[[["str"]],["softasciistr"]]],[11,"from_unchecked_mut","","",42,[[["str"]],["softasciistr"]]],[11,"from_str","","",42,[[["str"]],[["fromsourceerror",["str"]],["result",["softasciistr","fromsourceerror"]],["softasciistr"]]]],[11,"revalidate_soft_constraint","","reruns checks if the \"is us-ascii\" soft constraint is…",42,[[["self"]],[["fromsourceerror",["str"]],["result",["softasciistr","fromsourceerror"]],["softasciistr"]]]],[11,"as_str","","",42,[[["self"]],["str"]]],[11,"into_soft_ascii_string","","",42,[[["box",["softasciistr"]],["softasciistr"]],["softasciistring"]]],[11,"from_boxed_str","","",42,[[["box",["str"]],["str"]],[["softasciistr"],["box",["softasciistr"]]]]],[11,"into_boxed_str","","",42,[[["box",["softasciistr"]],["softasciistr"]],[["box",["str"]],["str"]]]],[11,"lines","","",42,[[["self"]],["softasciilines"]]],[11,"split_whitespace","","",42,[[["self"]],["softasciisplitwhitespace"]]],[11,"char_indices","","",42,[[["self"]],["softasciicharindices"]]],[11,"chars","","",42,[[["self"]],["softasciichars"]]],[11,"split_at","","",42,[[["self"],["usize"]]]],[11,"slice_unchecked","","",42,[[["self"],["usize"]],["softasciistr"]]],[11,"get_unchecked","","Proxy of [`std::str::get_unchecked`].",42,[[["i"],["self"]],["softasciistr"]]],[11,"inner_str_mut","","returns a mutable `str` reference to the inner buffer",42,[[["self"]],["str"]]],[11,"parse","","",42,[[["self"]],["result"]]],[11,"to_lowercase","","",42,[[["self"]],["softasciistring"]]],[11,"to_uppercase","","",42,[[["self"]],["softasciistring"]]],[11,"repeat","","",42,[[["self"],["usize"]],["softasciistring"]]],[11,"trim_right","","",42,[[["self"]],["softasciistr"]]],[11,"trim_left","","",42,[[["self"]],["softasciistr"]]],[11,"trim_end","","",42,[[["self"]],["softasciistr"]]],[11,"trim_start","","",42,[[["self"]],["softasciistr"]]],[11,"trim","","",42,[[["self"]],["softasciistr"]]],[11,"len","","",42,[[["self"]],["usize"]]],[11,"is_empty","","",42,[[["self"]],["bool"]]],[11,"is_char_boundary","","",42,[[["self"],["usize"]],["bool"]]],[11,"as_ptr","","",42,[[["self"]]]],[11,"encode_utf16","","",42,[[["self"]],["encodeutf16"]]],[11,"is_ascii","","",42,[[["self"]],["bool"]]],[11,"as_bytes","","",42,[[["self"]]]],[18,"VALIDATOR","","A function which is meant to be called with a reference to…",37,null],[18,"MAX_ONE","","I true this will assure that the header is at most one…",37,null],[11,"auto_body","","Creates a `Header` instance automatically converting given…",37,[[["h"]],[["result",["header","componentcreationerror"]],["header"],["componentcreationerror"]]]],[11,"body","","Creates a `Header` instance for this header kind with…",37,[[],["header"]]],[11,"is","","",38,[[["self"]],["bool"]]],[11,"downcast_ref","","",38,[[["self"]],[["option",["header"]],["header"]]]],[11,"downcast_mut","","",38,[[["self"]],[["option",["header"]],["header"]]]],[11,"is","","",77,[[["self"]],["bool"]]],[11,"downcast_ref","","",77,[[["self"]],[["option",["header"]],["header"]]]],[11,"downcast_mut","","",77,[[["self"]],[["option",["header"]],["header"]]]]],"p":[[3,"HeaderName"],[4,"HeaderValidationError"],[4,"BuildInValidationError"],[13,"MaxOneInconsistency"],[13,"MoreThenOne"],[4,"ChainTail"],[3,"HeaderTypeError"],[3,"ComponentCreationError"],[3,"Header"],[3,"Input"],[4,"InnerAscii"],[4,"InnerUtf8"],[4,"SimpleItem"],[3,"HeaderMap"],[3,"FileMeta"],[3,"Email"],[3,"Mailbox"],[3,"MailboxList"],[3,"OptMailboxList"],[3,"MessageIdList"],[3,"Path"],[3,"Phrase"],[3,"PhraseList"],[4,"TransferEncoding"],[4,"CFWS"],[4,"ReceivedToken"],[4,"DispositionKind"],[4,"Partition"],[3,"DateTime"],[3,"LocalPart"],[3,"Domain"],[3,"MessageId"],[3,"MediaType"],[3,"Word"],[3,"Disposition"],[3,"RawUnstructured"],[8,"HasHeaderName"],[8,"HeaderKind"],[8,"HeaderObjTrait"],[8,"HeaderObjTraitBoxExt"],[8,"HeaderTryFrom"],[8,"HeaderTryInto"],[3,"_SoftAsciiStr"],[3,"InvalidHeaderName"],[3,"TypedBodies"],[3,"TypedBodiesMut"],[3,"NoDisplayName"],[3,"Unstructured"],[3,"FWS"],[3,"PartitionError"],[3,"Date"],[3,"_From"],[3,"Sender"],[3,"ReplyTo"],[3,"_To"],[3,"Cc"],[3,"Bcc"],[3,"MessageId"],[3,"InReplyTo"],[3,"References"],[3,"Subject"],[3,"Comments"],[3,"Keywords"],[3,"ResentDate"],[3,"ResentFrom"],[3,"ResentSender"],[3,"ResentTo"],[3,"ResentCc"],[3,"ResentBcc"],[3,"ResentMsgId"],[3,"ReturnPath"],[3,"Received"],[3,"ContentType"],[3,"ContentId"],[3,"ContentTransferEncoding"],[3,"ContentDescription"],[3,"ContentDisposition"],[6,"HeaderObj"]]};
searchIndex["mail_internals"] = {"doc":"Provides some internal functionality for the `mail` crate.","i":[[4,"MailType","mail_internals","Specifies what kind of mail we want to create.",null,null],[13,"Ascii","","A 7-bit us-ascii mail.",0,null],[13,"Mime8BitEnabled","","A us-ascii mail, but the body can contain 8bit values.",0,null],[13,"Internationalized","","A internationalized mail.",0,null],[0,"utils","","Some more general utilities.",null,null],[3,"DebugIterableOpaque","mail_internals::utils","Helper for implementing debug for an iterable think where…",null,null],[5,"uneraser_ref","","Used to undo type erasure in a generic context, roughly…",null,[[["got"]],[["option"],["exp"]]]],[5,"is_utf8_continuation_byte","","returns true if this a not first byte from a multi byte…",null,[[["u8"]],["bool"]]],[5,"vec_insert_bytes","","Faster insertion of byte slices into a byte vector.",null,[[["vec"],["usize"]]]],[11,"new","","",1,[[["i"]],["self"]]],[11,"is_internationalized","mail_internals","Returns true if the self is equal to `Internationalized`",0,[[["self"]],["bool"]]],[11,"supports_8bit_bodies","","Returns true if self is either `Internationalized` or…",0,[[["self"]],["bool"]]],[0,"error","","Module containing the `EncodingError`.",null,null],[3,"EncodingError","mail_internals::error","A general error appearing when encoding failed in some way.",null,null],[4,"EncodingErrorKind","","A general error appearing when encoding failed in some way.",null,null],[13,"InvalidTextEncoding","","",2,null],[12,"expected_encoding","mail_internals::error::EncodingErrorKind","",3,null],[12,"got_encoding","","",3,null],[13,"HardLineLengthLimitBreached","mail_internals::error","",2,null],[13,"NotEncodable","","",2,null],[12,"encoding","mail_internals::error::EncodingErrorKind","",4,null],[13,"Malformed","mail_internals::error","",2,null],[13,"AccessingMailBodyFailed","","",2,null],[13,"Other","","",2,null],[12,"kind","mail_internals::error::EncodingErrorKind","",5,null],[4,"Place","mail_internals::error","",null,null],[13,"Header","","",6,null],[12,"name","mail_internals::error::Place","",7,null],[13,"Body","mail_internals::error","",6,null],[17,"UNKNOWN","","",null,null],[17,"UTF_8","","",null,null],[17,"US_ASCII","","",null,null],[11,"kind","","Return the error kind.",8,[[["self"]],["encodingerrorkind"]]],[11,"mail_type","","Return the mail type used when the error appeared.",8,[[["self"]],[["mailtype"],["option",["mailtype"]]]]],[11,"str_context","","Returns the str_context associated with the error.",8,[[["self"]],[["str"],["option",["str"]]]]],[11,"set_str_context","","Sets the str context.",8,[[["self"],["i"]]]],[11,"with_str_context","","Returns a version of self which has a str context like the…",8,[[["i"]],["self"]]],[11,"with_place_or_else","","Adds a place (context) to self if there isn't one and…",8,[[["f"]],["self"]]],[11,"with_mail_type_or_else","","Adds a mail type (context) to self if there isn't one and…",8,[[["f"]],["self"]]],[0,"grammar","mail_internals","This module contains a number of helper functions for…",null,null],[5,"is_ftext","mail_internals::grammar","ftext as defined by RFC 5322",null,[[["char"]],["bool"]]],[5,"is_ws","","WS as defined by RFC 5234",null,[[["char"]],["bool"]]],[5,"is_space","","True if `ch` is `' '`",null,[[["char"]],["bool"]]],[5,"is_ascii","","True if `ch` is us-ascii (i.e. <128)",null,[[["char"]],["bool"]]],[5,"is_ascii_vchar","","True if `ch` is ascii and \"visible\"/\"printable\".",null,[[["char"]],["bool"]]],[5,"is_vchar","","VCHAR as defined by RFC 5243",null,[[["char"],["mailtype"]],["bool"]]],[5,"is_quotable","","can be quoted in a quoted string (internalized) based on…",null,[[["char"],["mailtype"]],["bool"]]],[5,"is_any_whitespace","","any whitespace (char::is_whitespace)",null,[[["char"]],["bool"]]],[5,"is_ctext","","ctext as defined by RFC 5322",null,[[["char"],["mailtype"]],["bool"]]],[5,"is_special","","check if a char is a especial (based on RFC 5322)",null,[[["char"]],["bool"]]],[5,"is_tspecial","","check if a char is an tspecial (based on RFC 2045)",null,[[["char"]],["bool"]]],[5,"is_atext","","atext as defined by RFC 5322",null,[[["char"],["mailtype"]],["bool"]]],[5,"is_dtext","","dtext as defined by RFC 5322",null,[[["char"],["mailtype"]],["bool"]]],[5,"is_qtext","","qtext as defined by RFC 5322",null,[[["char"],["mailtype"]],["bool"]]],[5,"is_ctl","","Chack if it is a CTL char (based on RFC 822).",null,[[["char"]],["bool"]]],[5,"is_token_char","","Check if a char is an token char (based on RFC 2045).",null,[[["char"]],["bool"]]],[5,"is_especial","","Check if a char is especial (based on RFC ...).",null,[[["char"]],["bool"]]],[5,"is_token","","Check if a string is an token (based on RFC ...).",null,[[["str"]],["bool"]]],[5,"is_quoted_string","","True if the given string is a quoted string.",null,[[["str"],["mailtype"]],["bool"]]],[0,"encoded_word","","Grammar parts for encoded words (based on RFC 2047).",null,null],[4,"EncodedWordContext","mail_internals::grammar::encoded_word","Represents the place at which the encoded word appears.",null,null],[13,"Phrase","","",9,null],[13,"Text","","",9,null],[13,"Comment","","",9,null],[5,"is_encoded_word","","Returns true if the given word is a encoded word.",null,[[["str"],["mailtype"],["encodedwordcontext"]],["bool"]]],[5,"try_parse_encoded_word_parts","","Tries to parse the given string as an encoded word.",null,[[["str"],["mailtype"],["encodedwordcontext"]],[["encodingerror"],["result",["encodingerror"]]]]],[17,"MAX_ECW_LEN","","maximal length of an encoded word",null,null],[17,"ECW_SEP_OVERHEAD","","The syntax overhead from \"framing\" an encoded word.",null,null],[0,"encoder","mail_internals","This module provides the encoding buffer.",null,null],[3,"EncodeFn","mail_internals::encoder","A wrapper for an function making it implement…",null,null],[3,"EncodeClosure","","A wrapper for an closure making it implement…",null,null],[3,"EncodingBuffer","","EncodingBuffer for a Mail providing a buffer for encodable…",null,null],[3,"EncodingWriter","","A handle providing method to write to the underlying…",null,null],[4,"ConditionalWriteResult","","",null,null],[13,"Ok","","",10,null],[13,"ConditionFailure","","",10,null],[13,"GeneralFailure","","",10,null],[11,"new","","",11,[[],["self"]]],[11,"new","","",12,[[["fn"]],["self"]]],[17,"LINE_LEN_SOFT_LIMIT","","as specified in RFC 5322 not including CRLF",null,null],[17,"LINE_LEN_HARD_LIMIT","","as specified in RFC 5322 (mail) + RFC 5321 (smtp) not…",null,null],[17,"NEWLINE","","",null,null],[17,"NEWLINE_WITH_SPACE","","",null,null],[8,"EncodableInHeader","","Trait Implemented by \"components\" used in header field…",null,null],[10,"encode","","",13,[[["self"],["encodingwriter"]],[["result",["encodingerror"]],["encodingerror"]]]],[10,"boxed_clone","","",13,[[["self"]],[["encodableinheader"],["box",["encodableinheader"]]]]],[8,"EncodableInHeaderBoxExt","","",null,null],[10,"downcast","","",14,[[],[["stdresult",["box"]],["box"]]]],[11,"new","","Create a new buffer only allowing input compatible with a…",15,[[["mailtype"]],["self"]]],[11,"mail_type","","Returns the mail type for which the buffer was created.",15,[[["self"]],["mailtype"]]],[11,"writer","","returns a new EncodingWriter which contains a mutable…",15,[[["self"]],["encodingwriter"]]],[11,"write_header_line","","calls the provided function with a EncodingWriter cleaning…",15,[[["fn"],["self"]],[["result",["encodingerror"]],["encodingerror"]]]],[11,"write_blank_line","","",15,[[["self"]]]],[11,"write_body_unchecked","","writes a body to the internal buffer, without verifying…",15,[[["self"]]]],[11,"as_str","","Error",15,[[["self"]],[["str"],["encodingerror"],["result",["str","encodingerror"]]]]],[11,"to_string","","Converts the internal buffer into an utf-8 string if…",15,[[["self"]],[["encodingerror"],["result",["string","encodingerror"]],["string"]]]],[11,"to_string_lossy","","Lossy conversion of the internal buffer to an string.",15,[[["self"]],[["str"],["cow",["str"]]]]],[11,"as_slice","","Return a slice view to the underlying buffer.",15,[[["self"]]]],[11,"has_unfinished_parts","","Returns true if this type thinks we are in the process of…",16,[[["self"]],["bool"]]],[11,"mail_type","","Returns the associated mail type.",16,[[["self"]],["mailtype"]]],[11,"line_has_content","","Returns true if the current line has content, i.e. any non…",16,[[["self"]],["bool"]]],[11,"current_line_byte_length","","Returns the length of the current line in bytes.",16,[[["self"]],["usize"]]],[11,"mark_fws_pos","","marks the current position a a place where a soft line…",16,[[["self"]]]],[11,"write_char","","writes a ascii char to the underlying buffer",16,[[["self"],["softasciichar"]],[["result",["encodingerror"]],["encodingerror"]]]],[11,"write_str","","writes a ascii str to the underlying buffer",16,[[["self"],["softasciistr"]],[["result",["encodingerror"]],["encodingerror"]]]],[11,"write_if_utf8","","writes a utf8 str into a buffer for an internationalized…",16,[[["str"],["self"]],["conditionalwriteresult"]]],[11,"write_utf8","","",16,[[["str"],["self"]],[["result",["encodingerror"]],["encodingerror"]]]],[11,"write_if_atext","","Writes a str assumed to be atext if it is atext given the…",16,[[["str"],["self"]],["conditionalwriteresult"]]],[11,"write_if","","passes the input `s` to the condition evaluation function…",16,[[["str"],["fn"],["self"]],["conditionalwriteresult"]]],[11,"write_str_unchecked","","writes a string to the encoder without checking if it is…",16,[[["str"],["self"]],[["result",["encodingerror"]],["encodingerror"]]]],[11,"commit_partial_header","","like finish_header, but won't start a new line",16,[[["self"]]]],[11,"finish_header","","finishes the writing of a header",16,[[["self"]]]],[11,"undo_header","","undoes all writes to the internal buffer since the last…",16,[[["self"]]]],[11,"write_fws","","calls mark_fws_pos and then writes a space",16,[[["self"]]]],[11,"handle_condition_failure","","",10,[[["fn"]],[["result",["encodingerror"]],["encodingerror"]]]],[0,"bind","mail_internals","This module contains bindings to a number of external…",null,null],[0,"encoded_word","mail_internals::bind","",null,null],[3,"VecWriter","mail_internals::bind::encoded_word","",null,null],[3,"WriterWrapper","","",null,null],[4,"EncodedWordEncoding","","",null,null],[13,"Base64","","",17,null],[13,"QuotedPrintable","","",17,null],[11,"new","","",18,[[["softasciistr"],["encoding"]],["self"]]],[11,"data","","",18,[[["self"]]]],[11,"new_with_charset","","",19,[[["encodingwriter"],["softasciistr"],["encoding"]],["self"]]],[11,"new","","",19,[[["encodingwriter"],["encoding"]],["self"]]],[8,"EncodedWordWriter","","",null,null],[10,"write_char","","",20,[[["self"],["softasciichar"]]]],[10,"write_charset","","",20,[[["self"]]]],[10,"encoding","","",20,[[["self"]],["encodedwordencoding"]]],[10,"write_ecw_seperator","","",20,[[["self"]]]],[10,"max_payload_len","","Returns the maximal length of the paylod/encoded data",20,[[["self"]],["usize"]]],[11,"write_ecw_start","","",20,[[["self"]]]],[11,"write_ecw_end","","",20,[[["self"]]]],[11,"start_next_encoded_word","","",20,[[["self"]]]],[11,"write_str","","",20,[[["self"],["softasciistr"]]]],[11,"acronym","","returns the acronym for the given encoding used in a…",17,[[["self"]],["softasciistr"]]],[11,"encode","","encodes a given utf8 string",17,[[["o"],["self"],["r"]]]],[0,"base64","mail_internals::bind","",null,null],[5,"normal_encode","mail_internals::bind::base64","",null,[[["asref"]],["softasciistring"]]],[5,"normal_decode","","",null,[[["asref"]],[["result",["vec","encodingerror"]],["vec",["u8"]],["encodingerror"]]]],[5,"encoded_word_encode","","Note for now this only supports utf8/ascii input, as we…",null,[[["str"],["asref",["str"]],["o"]]]],[5,"encoded_word_decode","","",null,[[["asref"]],[["result",["vec","encodingerror"]],["vec",["u8"]],["encodingerror"]]]],[0,"quoted_string","mail_internals::bind","",null,null],[3,"UnquotedTokenValidator","mail_internals::bind::quoted_string","a type providing a `WithoutQuotingValidator` for token…",null,null],[3,"MailQsSpec","","A Quoted String specification in context of Mail (rfc5322)",null,null],[3,"InternationalizedMailQsSpec","","A Quoted String specification in context of Mail (rfc5322)",null,null],[3,"UnquotedATextValidator","","",null,null],[3,"UnquotedDotAtomTextValidator","","",null,null],[11,"new","","",21,[[["mailtype"]],["self"]]],[11,"new","","",22,[[["mailtype"]],["self"]]],[0,"quoted_printable","mail_internals::bind","",null,null],[5,"normal_encode","mail_internals::bind::quoted_printable","a quoted printable encoding suitable for content transfer…",null,[[["asref"]],["softasciistring"]]],[5,"normal_decode","","a quoted printable decoding suitable for content transfer…",null,[[["asref"]],[["result",["vec","encodingerror"]],["vec",["u8"]],["encodingerror"]]]],[5,"encoded_word_decode","","a quoted printable decoding suitable for decoding a quoted…",null,[[["asref"]],[["result",["vec","encodingerror"]],["vec",["u8"]],["encodingerror"]]]],[5,"encoded_word_encode_utf8","","Simple wrapper around ecoded_word_encode for utf8 strings…",null,[[["str"],["o"]]]],[5,"encoded_word_encode","","Quoted Printable encoding for Encoded Words in MIME-Headers",null,[[["i"],["o"]]]],[0,"idna","mail_internals::bind","",null,null],[5,"puny_code_domain","mail_internals::bind::idna","uses puny code on given domain to return a ascii…",null,[[["str"],["asref",["str"]]],[["softasciistring"],["result",["softasciistring","encodingerror"]],["encodingerror"]]]],[0,"mime","mail_internals::bind","",null,null],[5,"percent_encode_param_value","mail_internals::bind::mime","percent encodes a byte sequence so that it can be used in…",null,[[["r"]],[["cow",["softasciistr"]],["softasciistr"]]]],[14,"ec_bail","mail_internals","Macro for easier returning an `EncodingError`.",null,null],[14,"enc_func","","Generate a think implementing `EncodableInHeader` from an…",null,null],[14,"enc_closure","","Generate a think implementing `EncodableInHeader` from an…",null,null],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","mail_internals::utils","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","mail_internals::error","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"to_string","","",8,[[["self"]],["string"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"as_fail","","",8,[[["self"]],["fail"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"to_string","","",2,[[["self"]],["string"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"as_fail","","",2,[[["self"]],["fail"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"from","mail_internals::grammar::encoded_word","",9,[[["t"]],["t"]]],[11,"into","","",9,[[],["u"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,[[["self"],["t"]]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"from","mail_internals::encoder","",11,[[["t"]],["t"]]],[11,"into","","",11,[[],["u"]]],[11,"to_owned","","",11,[[["self"]],["t"]]],[11,"clone_into","","",11,[[["self"],["t"]]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"try_into","","",11,[[],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"type_id","","",11,[[["self"]],["typeid"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[],["u"]]],[11,"to_owned","","",12,[[["self"]],["t"]]],[11,"clone_into","","",12,[[["self"],["t"]]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"try_into","","",12,[[],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"type_id","","",12,[[["self"]],["typeid"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"into","","",15,[[],["u"]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"try_into","","",15,[[],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"type_id","","",15,[[["self"]],["typeid"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"into","","",16,[[],["u"]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"try_into","","",16,[[],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"type_id","","",16,[[["self"]],["typeid"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[],["u"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"from","mail_internals::bind::encoded_word","",18,[[["t"]],["t"]]],[11,"into","","",18,[[],["u"]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"try_into","","",18,[[],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"type_id","","",18,[[["self"]],["typeid"]]],[11,"from","","",19,[[["t"]],["t"]]],[11,"into","","",19,[[],["u"]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"try_into","","",19,[[],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"type_id","","",19,[[["self"]],["typeid"]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"into","","",17,[[],["u"]]],[11,"to_owned","","",17,[[["self"]],["t"]]],[11,"clone_into","","",17,[[["self"],["t"]]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"try_into","","",17,[[],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"type_id","","",17,[[["self"]],["typeid"]]],[11,"from","mail_internals::bind::quoted_string","",23,[[["t"]],["t"]]],[11,"into","","",23,[[],["u"]]],[11,"to_owned","","",23,[[["self"]],["t"]]],[11,"clone_into","","",23,[[["self"],["t"]]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"try_into","","",23,[[],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"type_id","","",23,[[["self"]],["typeid"]]],[11,"from","","",24,[[["t"]],["t"]]],[11,"into","","",24,[[],["u"]]],[11,"to_owned","","",24,[[["self"]],["t"]]],[11,"clone_into","","",24,[[["self"],["t"]]]],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"try_into","","",24,[[],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"type_id","","",24,[[["self"]],["typeid"]]],[11,"from","","",25,[[["t"]],["t"]]],[11,"into","","",25,[[],["u"]]],[11,"to_owned","","",25,[[["self"]],["t"]]],[11,"clone_into","","",25,[[["self"],["t"]]]],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"try_into","","",25,[[],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"type_id","","",25,[[["self"]],["typeid"]]],[11,"from","","",21,[[["t"]],["t"]]],[11,"into","","",21,[[],["u"]]],[11,"to_owned","","",21,[[["self"]],["t"]]],[11,"clone_into","","",21,[[["self"],["t"]]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"try_into","","",21,[[],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"type_id","","",21,[[["self"]],["typeid"]]],[11,"from","","",22,[[["t"]],["t"]]],[11,"into","","",22,[[],["u"]]],[11,"to_owned","","",22,[[["self"]],["t"]]],[11,"clone_into","","",22,[[["self"],["t"]]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"try_into","","",22,[[],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"type_id","","",22,[[["self"]],["typeid"]]],[11,"next","","",23,[[["self"],["partialcodepoint"]],["bool"]]],[11,"end","","",23,[[["self"]],["bool"]]],[11,"fmt","","",23,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"clone","","",23,[[["self"]],["mimetokenvalidator"]]],[11,"hash","","",23,[[["self"],["__h"]]]],[11,"eq","","",23,[[["self"],["mimetokenvalidator"]],["bool"]]],[11,"default","","",23,[[],["mimetokenvalidator"]]],[11,"encode","mail_internals::encoder","",11,[[["self"],["encodingwriter"]],[["result",["encodingerror"]],["encodingerror"]]]],[11,"boxed_clone","","",11,[[["self"]],[["encodableinheader"],["box",["encodableinheader"]]]]],[11,"encode","","",12,[[["self"],["encodingwriter"]],[["result",["encodingerror"]],["encodingerror"]]]],[11,"boxed_clone","","",12,[[["self"]],[["encodableinheader"],["box",["encodableinheader"]]]]],[11,"encoding","mail_internals::bind::encoded_word","",18,[[["self"]],["encoding"]]],[11,"write_char","","",18,[[["self"],["softasciichar"]]]],[11,"write_charset","","",18,[[["self"]]]],[11,"write_ecw_seperator","","",18,[[["self"]]]],[11,"max_payload_len","","",18,[[["self"]],["usize"]]],[11,"encoding","","",19,[[["self"]],["encoding"]]],[11,"write_charset","","",19,[[["self"]]]],[11,"write_ecw_seperator","","",19,[[["self"]]]],[11,"write_char","","",19,[[["self"],["softasciichar"]]]],[11,"max_payload_len","","",19,[[["self"]],["usize"]]],[11,"from","mail_internals::error","",8,[[["encodingerrorkind"]],["self"]]],[11,"from","","",8,[[["context",["encodingerrorkind"]],["encodingerrorkind"]],["self"]]],[11,"from","","",8,[[],["self"]]],[11,"from","","",8,[[],["self"]]],[11,"from","mail_internals::encoder","",10,[[["result",["encodingerror"]],["encodingerror"]],["self"]]],[11,"into","","",15,[[],[["vec",["u8"]],["u8"]]]],[11,"into","","",15,[[]]],[11,"into","mail_internals::bind::encoded_word","",18,[[],[["softasciistring"],["vec1",["softasciistring"]]]]],[11,"clone","mail_internals","",0,[[["self"]],["mailtype"]]],[11,"clone","mail_internals::error","",2,[[["self"]],["encodingerrorkind"]]],[11,"clone","mail_internals::grammar::encoded_word","",9,[[["self"]],["encodedwordcontext"]]],[11,"clone","mail_internals::encoder","",11,[[["self"]],["encodefn"]]],[11,"clone","","",12,[[["self"]],["self"]]],[11,"clone","mail_internals::bind::encoded_word","",17,[[["self"]],["encodedwordencoding"]]],[11,"clone","mail_internals::bind::quoted_string","",24,[[["self"]],["mailqsspec"]]],[11,"clone","","",25,[[["self"]],["internationalizedmailqsspec"]]],[11,"clone","","",21,[[["self"]],["unquotedatextvalidator"]]],[11,"clone","","",22,[[["self"]],["unquoteddotatomtextvalidator"]]],[11,"default","","",24,[[],["mailqsspec"]]],[11,"default","","",25,[[],["internationalizedmailqsspec"]]],[11,"eq","mail_internals","",0,[[["mailtype"],["self"]],["bool"]]],[11,"eq","mail_internals::error","",2,[[["self"],["encodingerrorkind"]],["bool"]]],[11,"ne","","",2,[[["self"],["encodingerrorkind"]],["bool"]]],[11,"eq","mail_internals::grammar::encoded_word","",9,[[["self"],["encodedwordcontext"]],["bool"]]],[11,"eq","mail_internals::bind::encoded_word","",17,[[["encodedwordencoding"],["self"]],["bool"]]],[11,"eq","mail_internals::bind::quoted_string","",21,[[["unquotedatextvalidator"],["self"]],["bool"]]],[11,"ne","","",21,[[["unquotedatextvalidator"],["self"]],["bool"]]],[11,"eq","","",22,[[["self"],["unquoteddotatomtextvalidator"]],["bool"]]],[11,"ne","","",22,[[["self"],["unquoteddotatomtextvalidator"]],["bool"]]],[11,"fmt","mail_internals::utils","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","mail_internals","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","mail_internals::error","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",8,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",6,[[["formatter"],["self"]],["result"]]],[11,"fmt","mail_internals::grammar::encoded_word","",9,[[["formatter"],["self"]],["result"]]],[11,"fmt","mail_internals::encoder","",11,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",12,[[["formatter"],["self"]],["result"]]],[11,"fmt","mail_internals::bind::encoded_word","",17,[[["formatter"],["self"]],["result"]]],[11,"fmt","mail_internals::bind::quoted_string","",24,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",25,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",21,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",22,[[["formatter"],["self"]],["result"]]],[11,"fmt","mail_internals::error","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",8,[[["formatter"],["self"]],["result"]]],[11,"hash","mail_internals","",0,[[["self"],["__h"]]]],[11,"hash","mail_internals::error","",2,[[["self"],["__h"]]]],[11,"hash","mail_internals::grammar::encoded_word","",9,[[["self"],["__h"]]]],[11,"hash","mail_internals::bind::encoded_word","",17,[[["self"],["__h"]]]],[11,"hash","mail_internals::bind::quoted_string","",21,[[["self"],["__h"]]]],[11,"hash","","",22,[[["self"],["__h"]]]],[11,"name","mail_internals::error","",2,[[["self"]],[["str"],["option",["str"]]]]],[11,"cause","","",2,[[["self"]],[["option",["fail"]],["fail"]]]],[11,"backtrace","","",2,[[["self"]],[["option",["backtrace"]],["backtrace"]]]],[11,"cause","","",8,[[["self"]],[["option",["fail"]],["fail"]]]],[11,"backtrace","","",8,[[["self"]],[["backtrace"],["option",["backtrace"]]]]],[11,"next","mail_internals::bind::quoted_string","",21,[[["self"],["partialcodepoint"]],["bool"]]],[11,"next","","",22,[[["self"],["partialcodepoint"]],["bool"]]],[11,"end","","",22,[[["self"]],["bool"]]],[11,"is","mail_internals::encoder","",13,[[["self"]],["bool"]]],[11,"downcast_ref","","",13,[[["self"]],[["t"],["option"]]]],[11,"downcast_mut","","",13,[[["self"]],[["option"],["t"]]]],[11,"new","mail_internals::bind::quoted_string","create a new MimeTokenValidator",23,[[],["mimetokenvalidator"]]]],"p":[[4,"MailType"],[3,"DebugIterableOpaque"],[4,"EncodingErrorKind"],[13,"InvalidTextEncoding"],[13,"NotEncodable"],[13,"Other"],[4,"Place"],[13,"Header"],[3,"EncodingError"],[4,"EncodedWordContext"],[4,"ConditionalWriteResult"],[3,"EncodeFn"],[3,"EncodeClosure"],[8,"EncodableInHeader"],[8,"EncodableInHeaderBoxExt"],[3,"EncodingBuffer"],[3,"EncodingWriter"],[4,"EncodedWordEncoding"],[3,"VecWriter"],[3,"WriterWrapper"],[8,"EncodedWordWriter"],[3,"UnquotedATextValidator"],[3,"UnquotedDotAtomTextValidator"],[3,"UnquotedTokenValidator"],[3,"MailQsSpec"],[3,"InternationalizedMailQsSpec"]]};
searchIndex["mailparse"] = {"doc":"","i":[[3,"GroupInfo","mailparse","A representation of a group address. It has a name and a…",null,null],[12,"group_name","","",0,null],[12,"addrs","","",0,null],[3,"MailAddrList","","A simple wrapper around `Vec<MailAddr>`. This is primarily…",null,null],[3,"SingleInfo","","A representation of a single mailbox. Each mailbox has a…",null,null],[12,"display_name","","",1,null],[12,"addr","","",1,null],[3,"MessageIdList","","A simple wrapper around `Vec<String>`. This is primarily…",null,null],[3,"MailHeader","","A struct that represents a single header in the message.…",null,null],[3,"ParsedContentType","","A struct to hold a more structured representation of the…",null,null],[12,"mimetype","","The type of the data, for example \"text/plain\" or…",2,null],[12,"charset","","The charset used to decode the raw byte data, for example…",2,null],[12,"params","","The additional params of Content-Type, e.g. filename and…",2,null],[3,"ParsedContentDisposition","","A struct to hold a more structured representation of the…",null,null],[12,"disposition","","The disposition type of the Content-Disposition header. If…",3,null],[12,"params","","The additional params of Content-Disposition, e.g.…",3,null],[3,"ParsedMail","","Struct that holds the structured representation of the…",null,null],[12,"headers","","The headers for the message (or message subpart).",4,null],[12,"ctype","","The Content-Type information for the message (or message…",4,null],[12,"subparts","","The subparts of this message or subpart. This vector is…",4,null],[4,"MailAddr","","An abstraction over the two different kinds of top-level…",null,null],[13,"Group","","",5,null],[13,"Single","","",5,null],[4,"MailParseError","","An error type that represents the different kinds of…",null,null],[13,"QuotedPrintableDecodeError","","Data that was specified as being in the quoted-printable…",6,null],[13,"Base64DecodeError","","Data that was specified as being in the base64…",6,null],[13,"EncodingError","","An error occurred when converting the raw byte data to…",6,null],[13,"Generic","","Some other error occurred while parsing the message; the…",6,null],[4,"DispositionType","","The possible disposition types in a Content-Disposition…",null,null],[13,"Inline","","Default value, indicating the content is to be displayed…",7,null],[13,"Attachment","","A disposition indicating the content is not meant for…",7,null],[13,"FormData","","A disposition indicating the content contains a form…",7,null],[13,"Extension","","Extension type to hold any disposition not explicitly…",7,null],[5,"addrparse","","Convert an address field from an email header into a…",null,[[["str"]],[["mailparseerror"],["result",["mailaddrlist","mailparseerror"]],["mailaddrlist"]]]],[5,"addrparse_header","","Take a `MailHeader` that contains addresses in the value…",null,[[["mailheader"]],[["mailparseerror"],["result",["mailaddrlist","mailparseerror"]],["mailaddrlist"]]]],[5,"dateparse","","Convert a date field from an email header into a UNIX…",null,[[["str"]],[["i64"],["mailparseerror"],["result",["i64","mailparseerror"]]]]],[5,"msgidparse","","Parse an email header into a structured type holding a…",null,[[["str"]],[["messageidlist"],["mailparseerror"],["result",["messageidlist","mailparseerror"]]]]],[5,"parse_header","","Parse a single header from the raw data given. This…",null,[[],[["result",["mailparseerror"]],["mailparseerror"]]]],[5,"parse_headers","","Parses all the headers from the raw data given. This…",null,[[],[["result",["mailparseerror"]],["mailparseerror"]]]],[5,"parse_content_type","","Helper method to parse a header value as a Content-Type…",null,[[["str"]],["parsedcontenttype"]]],[5,"parse_content_disposition","","Helper method to parse a header value as a…",null,[[["str"]],["parsedcontentdisposition"]]],[5,"parse_mail","","The main mail-parsing entry point. This function takes the…",null,[[],[["result",["parsedmail","mailparseerror"]],["mailparseerror"],["parsedmail"]]]],[11,"count_addrs","","Count the number of `SingleInfo` instances in this list of…",8,[[["self"]],["usize"]]],[11,"extract_single_info","","Convenience function to check if this list of addresses…",8,[[],[["option",["singleinfo"]],["singleinfo"]]]],[11,"into_inner","","Consumes the `MailAddrList`, returning the wrapped value.",8,[[],[["mailaddr"],["vec",["mailaddr"]]]]],[0,"body","","",null,null],[3,"EncodedBody","mailparse::body","Struct that holds the encoded body representation of the…",null,null],[3,"TextBody","","Struct that holds the textual body representation of the…",null,null],[3,"BinaryBody","","Struct that holds a binary body representation of the…",null,null],[4,"Body","","Represents the body of an email (or mail subpart)",null,null],[13,"Base64","","A body with 'base64' Content-Transfer-Encoding.",9,null],[13,"QuotedPrintable","","A body with 'quoted-printable' Content-Transfer-Encoding.",9,null],[13,"SevenBit","","A body with '7bit' Content-Transfer-Encoding.",9,null],[13,"EightBit","","A body with '8bit' Content-Transfer-Encoding.",9,null],[13,"Binary","","A body with 'binary' Content-Transfer-Encoding.",9,null],[11,"new","","",9,[[["parsedcontenttype"],["option"]],["body"]]],[11,"get_content_type","","Get the body Content-Type",10,[[["self"]],["parsedcontenttype"]]],[11,"get_raw","","Get the raw body of the message exactly as it is written…",10,[[["self"]]]],[11,"get_decoded","","Get the decoded body of the message (or message subpart).",10,[[["self"]],[["mailparseerror"],["vec",["u8"]],["result",["vec","mailparseerror"]]]]],[11,"get_decoded_as_string","","Get the body of the message as a Rust string. This…",10,[[["self"]],[["mailparseerror"],["result",["string","mailparseerror"]],["string"]]]],[11,"get_content_type","","Get the body Content-Type",11,[[["self"]],["parsedcontenttype"]]],[11,"get_raw","","Get the raw body of the message exactly as it is written…",11,[[["self"]]]],[11,"get_as_string","","Get the body of the message as a Rust string. This…",11,[[["self"]],[["mailparseerror"],["result",["string","mailparseerror"]],["string"]]]],[11,"get_content_type","","Get the body Content-Type",12,[[["self"]],["parsedcontenttype"]]],[11,"get_raw","","Get the raw body of the message exactly as it is written…",12,[[["self"]]]],[8,"MailHeaderMap","mailparse","A trait that is implemented by the [MailHeader] slice.…",null,null],[10,"get_first_value","","Look through the list of headers and return the value of…",13,[[["str"],["self"]],[["option",["string"]],["string"]]]],[10,"get_first_header","","Similar to `get_first_value`, except it returns a…",13,[[["str"],["self"]],[["option",["mailheader"]],["mailheader"]]]],[10,"get_all_values","","Look through the list of headers and return the values of…",13,[[["str"],["self"]],[["vec",["string"]],["string"]]]],[10,"get_all_headers","","Similar to `get_all_values`, except it returns references…",13,[[["str"],["self"]],[["vec",["mailheader"]],["mailheader"]]]],[11,"get_key","","Get the name of the header. Note that header names are…",14,[[["self"]],["string"]]],[11,"get_key_ref","","Get the name of the header, borrowing if it's ASCII-only.…",14,[[["self"]],[["str"],["cow",["str"]]]]],[11,"get_value","","Get the value of the header. Any sequences of newlines…",14,[[["self"]],["string"]]],[11,"get_body","","Get the body of the message as a Rust string. This…",4,[[["self"]],[["mailparseerror"],["result",["string","mailparseerror"]],["string"]]]],[11,"get_body_raw","","Get the body of the message as a Rust Vec. This function…",4,[[["self"]],[["mailparseerror"],["vec",["u8"]],["result",["vec","mailparseerror"]]]]],[11,"get_body_encoded","","Get the body of the message. This function returns…",4,[[["self"]],["body"]]],[11,"get_content_disposition","","Returns a struct containing a parsed representation of the…",4,[[["self"]],["parsedcontentdisposition"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,[[["self"],["t"]]]],[11,"to_string","","",8,[[["self"]],["string"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"to_string","","",1,[[["self"]],["string"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"into","","",15,[[],["u"]]],[11,"to_owned","","",15,[[["self"]],["t"]]],[11,"clone_into","","",15,[[["self"],["t"]]]],[11,"to_string","","",15,[[["self"]],["string"]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"try_into","","",15,[[],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"type_id","","",15,[[["self"]],["typeid"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"into","","",14,[[],["u"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"try_into","","",14,[[],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"type_id","","",14,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,[[["self"],["t"]]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"to_string","","",6,[[["self"]],["string"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,[[["self"],["t"]]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"from","mailparse::body","",10,[[["t"]],["t"]]],[11,"into","","",10,[[],["u"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[],["u"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"try_into","","",11,[[],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"type_id","","",11,[[["self"]],["typeid"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[],["u"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"try_into","","",12,[[],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"type_id","","",12,[[["self"]],["typeid"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[],["u"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"from","mailparse","",8,[[["mailaddr"],["vec",["mailaddr"]]],["self"]]],[11,"from","","",6,[[["quotedprintableerror"]],["mailparseerror"]]],[11,"from","","",6,[[["decodeerror"]],["mailparseerror"]]],[11,"from","","",6,[[["str"],["cow",["str"]]],["mailparseerror"]]],[11,"clone","","",1,[[["self"]],["singleinfo"]]],[11,"clone","","",0,[[["self"]],["groupinfo"]]],[11,"clone","","",5,[[["self"]],["mailaddr"]]],[11,"clone","","",8,[[["self"]],["mailaddrlist"]]],[11,"clone","","",15,[[["self"]],["messageidlist"]]],[11,"clone","","",7,[[["self"]],["dispositiontype"]]],[11,"default","","",2,[[],["self"]]],[11,"default","","",7,[[],["self"]]],[11,"default","","",3,[[],["parsedcontentdisposition"]]],[11,"eq","","",1,[[["self"],["singleinfo"]],["bool"]]],[11,"ne","","",1,[[["self"],["singleinfo"]],["bool"]]],[11,"eq","","",0,[[["groupinfo"],["self"]],["bool"]]],[11,"ne","","",0,[[["groupinfo"],["self"]],["bool"]]],[11,"eq","","",5,[[["self"],["mailaddr"]],["bool"]]],[11,"ne","","",5,[[["self"],["mailaddr"]],["bool"]]],[11,"eq","","",8,[[["self"],["mailaddrlist"]],["bool"]]],[11,"ne","","",8,[[["self"],["mailaddrlist"]],["bool"]]],[11,"eq","","",15,[[["messageidlist"],["self"]],["bool"]]],[11,"ne","","",15,[[["messageidlist"],["self"]],["bool"]]],[11,"eq","","",7,[[["self"],["dispositiontype"]],["bool"]]],[11,"ne","","",7,[[["self"],["dispositiontype"]],["bool"]]],[11,"deref","","",8,[[["self"]],["vec"]]],[11,"deref","","",15,[[["self"]],["vec"]]],[11,"deref_mut","","",8,[[["self"]],["vec"]]],[11,"deref_mut","","",15,[[["self"]],["vec"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",8,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",15,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",6,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",14,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",7,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",8,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",15,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",6,[[["formatter"],["self"]],["result"]]],[11,"description","","",6,[[["self"]],["str"]]],[11,"cause","","",6,[[["self"]],[["error"],["option",["error"]]]]],[11,"source","","",6,[[["self"]],[["error"],["option",["error"]]]]]],"p":[[3,"GroupInfo"],[3,"SingleInfo"],[3,"ParsedContentType"],[3,"ParsedContentDisposition"],[3,"ParsedMail"],[4,"MailAddr"],[4,"MailParseError"],[4,"DispositionType"],[3,"MailAddrList"],[4,"Body"],[3,"EncodedBody"],[3,"TextBody"],[3,"BinaryBody"],[8,"MailHeaderMap"],[3,"MailHeader"],[3,"MessageIdList"]]};
searchIndex["match_cfg"] = {"doc":"A convenience macro to ergonomically define an item…","i":[[14,"match_cfg","match_cfg","The macro provided by this crate, `match_cfg`, is similar…",null,null]],"p":[]};
searchIndex["matches"] = {"doc":"","i":[[14,"matches","matches","Check if an expression matches a refutable pattern.",null,null],[14,"assert_matches","","Assert that an expression matches a refutable pattern.",null,null],[14,"debug_assert_matches","","Assert that an expression matches a refutable pattern…",null,null]],"p":[]};
searchIndex["media_type"] = {"doc":"Media TYpe","i":[[8,"AsciiCaseInsensitiveEq","media_type","Analogous to PartialEq, but with ascii case insensitive…",null,null],[10,"eq_ignore_ascii_case","","compares this instance with other with a ascii case…",0,[[["rhs"],["self"]],["bool"]]],[3,"Name","","A name section of a `Mime`.",null,null],[3,"Value","","A parameter value section of a `Mime`.",null,null],[3,"MediaType","","",null,null],[3,"AnyMediaType","","",null,null],[3,"Params","","",null,null],[3,"ParamIndices","","",null,null],[12,"start","","",1,null],[12,"eq_idx","","",1,null],[12,"end","","",1,null],[5,"push_params_to_buffer","","Push all parameters formatted to the output buffer",null,[[["string"],["i"]],[["result",["vec","error"]],["vec",["paramindices"]],["error"]]]],[0,"error","","",null,null],[3,"ParserErrorRef","media_type::error","",null,null],[3,"Error","","",null,null],[4,"ExpectedChar","","",null,null],[13,"Char","","",2,null],[13,"CharClass","","",2,null],[4,"ErrorKind","","",null,null],[13,"QuotedParamValue","","",3,null],[12,"pos","media_type::error::ErrorKind","",4,null],[12,"cause","","",4,null],[13,"UnquotedParamValue","media_type::error","",3,null],[12,"pos","media_type::error::ErrorKind","",5,null],[12,"cause","","",5,null],[13,"UnexpectedChar","media_type::error","",3,null],[12,"pos","media_type::error::ErrorKind","",6,null],[12,"expected","","",6,null],[13,"UnexpectedEof","media_type::error","",3,null],[13,"IllegalCrNlSeq","","",3,null],[12,"pos","media_type::error::ErrorKind","",7,null],[11,"with_input","media_type::error","",3,[[["str"]],["parsererrorref"]]],[11,"new","","",8,[[["errorkind"],["str"]],["self"]]],[11,"input","","",8,[[["self"]],["str"]]],[11,"kind","","",8,[[["self"]],["errorkind"]]],[11,"to_owned","","",8,[[["self"]],["error"]]],[11,"new","","",9,[[["errorkind"],["into",["string"]],["string"]],["self"]]],[11,"input","","",9,[[["self"]],["str"]]],[11,"kind","","",9,[[["self"]],["errorkind"]]],[11,"as_ref","","",9,[[["self"]],["parsererrorref"]]],[11,"as_str","media_type","Get the value of this `Name` as a string.",10,[[["self"]],["str"]]],[11,"as_str_repr","","Returns the underlying representation.",11,[[["self"]],["str"]]],[11,"to_content","","Returns the content of this instance.",11,[[["self"]],[["str"],["cow",["str"]]]]],[11,"is_quoted","","",11,[[["self"]],["bool"]]],[0,"spec","","",null,null],[3,"MimeSpec","media_type::spec","",null,null],[3,"HttpSpec","","",null,null],[3,"StrictSpec","","",null,null],[3,"AnySpec","","Note",null,null],[3,"Obs","","",null,null],[3,"Modern","","",null,null],[3,"Ascii","","",null,null],[3,"Internationalized","","",null,null],[8,"Spec","","",null,null],[16,"PercentEncodeSet","","",12,null],[16,"UnquotedValue","","",12,null],[10,"parse_token","","",12,[[["str"]],[["parsererrorref"],["result",["usize","parsererrorref"]],["usize"]]]],[10,"parse_space","","",12,[[["str"]],[["parsererrorref"],["result",["usize","parsererrorref"]],["usize"]]]],[11,"validate_token","","",12,[[["str"]],[["result",["parsererrorref"]],["parsererrorref"]]]],[11,"parse_unquoted_value","","",12,[[["str"]],[["parsererrorref"],["result",["usize","parsererrorref"]],["usize"]]]],[11,"parse_quoted_string","","",12,[[["str"]],[["parsererrorref"],["result",["usize","parsererrorref"]],["usize"]]]],[8,"ObsNormalSwitch","","",null,null],[8,"InternationalizedSwitch","","",null,null],[11,"parse","media_type","",13,[[["str"]],[["result",["parsererrorref"]],["parsererrorref"]]]],[11,"validate","","",13,[[["str"]],["bool"]]],[11,"new","","",13,[[["t"],["st"]],[["result",["error"]],["error"]]]],[11,"new_with_params","","",13,[[["pi"],["t"],["st"]],[["result",["error"]],["error"]]]],[11,"remove_param","","removes the first param equal to `name`, returns true if a…",13,[[["self"],["n"]],["bool"]]],[11,"set_param","","set a given parameter to a give value, overriding the old…",13,[[["v"],["self"],["n"]]]],[11,"type_","","",14,[[["self"]],["name"]]],[11,"subtype","","",14,[[["self"]],["name"]]],[11,"full_type","","",14,[[["self"]],["name"]]],[11,"get_param","","",14,[[["self"],["n"]],[["option",["value"]],["value"]]]],[11,"params","","",14,[[["self"]],["params"]]],[11,"as_str_repr","","",14,[[["self"]],["str"]]],[11,"has_utf8_charset","","",14,[[["self"]],["bool"]]],[11,"is_multipart","","",14,[[["self"]],["bool"]]],[7,"UTF_8","","",null,null],[7,"UTF8","","",null,null],[17,"APPLICATION","","",null,null],[17,"AUDIO","","",null,null],[17,"FONT","","",null,null],[17,"IMAGE","","",null,null],[17,"MESSAGE","","",null,null],[17,"MODEL","","",null,null],[17,"MULTIPART","","",null,null],[17,"TEXT","","",null,null],[17,"VIDEO","","",null,null],[17,"PLAIN","","",null,null],[17,"JAVASCRIPT","","",null,null],[17,"PNG","","",null,null],[17,"SVG_XML","","",null,null],[17,"OCTET_STREAM","","",null,null],[17,"RELATED","","",null,null],[17,"MIXED","","",null,null],[17,"ALTERNATIVE","","",null,null],[17,"CHARSET","","",null,null],[17,"BOUNDARY","","",null,null],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[],["u"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,[[["self"],["t"]]]],[11,"to_string","","",10,[[["self"]],["string"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[],["u"]]],[11,"to_owned","","",11,[[["self"]],["t"]]],[11,"clone_into","","",11,[[["self"],["t"]]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"try_into","","",11,[[],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"type_id","","",11,[[["self"]],["typeid"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"into","","",13,[[],["u"]]],[11,"to_owned","","",13,[[["self"]],["t"]]],[11,"clone_into","","",13,[[["self"],["t"]]]],[11,"to_string","","",13,[[["self"]],["string"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"try_into","","",13,[[],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"type_id","","",13,[[["self"]],["typeid"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"into","","",14,[[],["u"]]],[11,"to_owned","","",14,[[["self"]],["t"]]],[11,"clone_into","","",14,[[["self"],["t"]]]],[11,"to_string","","",14,[[["self"]],["string"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"try_into","","",14,[[],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"type_id","","",14,[[["self"]],["typeid"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"into","","",15,[[],["u"]]],[11,"into_iter","","",15,[[],["i"]]],[11,"to_owned","","",15,[[["self"]],["t"]]],[11,"clone_into","","",15,[[["self"],["t"]]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"try_into","","",15,[[],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"type_id","","",15,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","media_type::error","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,[[["self"],["t"]]]],[11,"to_string","","",8,[[["self"]],["string"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[],["u"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,[[["self"],["t"]]]],[11,"to_string","","",9,[[["self"]],["string"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"to_string","","",2,[[["self"]],["string"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","media_type::spec","",16,[[["t"]],["t"]]],[11,"into","","",16,[[],["u"]]],[11,"to_owned","","",16,[[["self"]],["t"]]],[11,"clone_into","","",16,[[["self"],["t"]]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"try_into","","",16,[[],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"type_id","","",16,[[["self"]],["typeid"]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"into","","",17,[[],["u"]]],[11,"to_owned","","",17,[[["self"]],["t"]]],[11,"clone_into","","",17,[[["self"],["t"]]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"try_into","","",17,[[],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"type_id","","",17,[[["self"]],["typeid"]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"into","","",18,[[],["u"]]],[11,"to_owned","","",18,[[["self"]],["t"]]],[11,"clone_into","","",18,[[["self"],["t"]]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"try_into","","",18,[[],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"type_id","","",18,[[["self"]],["typeid"]]],[11,"from","","",19,[[["t"]],["t"]]],[11,"into","","",19,[[],["u"]]],[11,"to_owned","","",19,[[["self"]],["t"]]],[11,"clone_into","","",19,[[["self"],["t"]]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"try_into","","",19,[[],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"type_id","","",19,[[["self"]],["typeid"]]],[11,"from","","",20,[[["t"]],["t"]]],[11,"into","","",20,[[],["u"]]],[11,"to_owned","","",20,[[["self"]],["t"]]],[11,"clone_into","","",20,[[["self"],["t"]]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"try_into","","",20,[[],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"type_id","","",20,[[["self"]],["typeid"]]],[11,"from","","",21,[[["t"]],["t"]]],[11,"into","","",21,[[],["u"]]],[11,"to_owned","","",21,[[["self"]],["t"]]],[11,"clone_into","","",21,[[["self"],["t"]]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"try_into","","",21,[[],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"type_id","","",21,[[["self"]],["typeid"]]],[11,"from","","",22,[[["t"]],["t"]]],[11,"into","","",22,[[],["u"]]],[11,"to_owned","","",22,[[["self"]],["t"]]],[11,"clone_into","","",22,[[["self"],["t"]]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"try_into","","",22,[[],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"type_id","","",22,[[["self"]],["typeid"]]],[11,"from","","",23,[[["t"]],["t"]]],[11,"into","","",23,[[],["u"]]],[11,"to_owned","","",23,[[["self"]],["t"]]],[11,"clone_into","","",23,[[["self"],["t"]]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"try_into","","",23,[[],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"type_id","","",23,[[["self"]],["typeid"]]],[11,"parse_token","","",18,[[["str"]],[["parsererrorref"],["result",["usize","parsererrorref"]],["usize"]]]],[11,"parse_space","","",18,[[["str"]],[["parsererrorref"],["result",["usize","parsererrorref"]],["usize"]]]],[11,"parse_token","","",19,[[["str"]],[["parsererrorref"],["result",["usize","parsererrorref"]],["usize"]]]],[11,"parse_space","","",19,[[["str"]],[["parsererrorref"],["result",["usize","parsererrorref"]],["usize"]]]],[11,"parse_token","","",17,[[["str"]],[["parsererrorref"],["result",["usize","parsererrorref"]],["usize"]]]],[11,"parse_space","","",17,[[["str"]],[["parsererrorref"],["result",["usize","parsererrorref"]],["usize"]]]],[11,"parse_token","","",16,[[["str"]],[["parsererrorref"],["result",["usize","parsererrorref"]],["usize"]]]],[11,"parse_space","","",16,[[["str"]],[["parsererrorref"],["result",["usize","parsererrorref"]],["usize"]]]],[11,"as_ref","media_type","",10,[[["self"]],["str"]]],[11,"from","media_type::error","",9,[[["parsererrorref"]],["self"]]],[11,"from","media_type::spec","",16,[[["mimespec",["ascii","obs"]],["ascii"],["obs"]],[["obs"],["mimespec",["internationalized","obs"]],["internationalized"]]]],[11,"from","","",16,[[["mimespec",["ascii","modern"]],["ascii"],["modern"]],[["mimespec",["internationalized","modern"]],["modern"],["internationalized"]]]],[11,"from","","",16,[[["mimespec",["ascii","modern"]],["ascii"],["modern"]],[["mimespec",["ascii","obs"]],["ascii"],["obs"]]]],[11,"from","","",16,[[["mimespec",["ascii","modern"]],["ascii"],["modern"]],[["obs"],["mimespec",["internationalized","obs"]],["internationalized"]]]],[11,"from","","",16,[[["mimespec",["internationalized","modern"]],["internationalized"],["modern"]],[["obs"],["mimespec",["internationalized","obs"]],["internationalized"]]]],[11,"from","","",17,[[["httpspec",["modern"]],["modern"]],[["httpspec",["obs"]],["obs"]]]],[11,"from","","",17,[[["strictspec"]],[["modern"],["httpspec",["modern"]]]]],[11,"from","","",17,[[["strictspec"]],[["httpspec",["obs"]],["obs"]]]],[11,"from","","",16,[[["strictspec"]],[["mimespec",["ascii","obs"]],["ascii"],["obs"]]]],[11,"from","","",16,[[["strictspec"]],[["modern"],["ascii"],["mimespec",["ascii","modern"]]]]],[11,"from","","",16,[[["strictspec"]],[["obs"],["mimespec",["internationalized","obs"]],["internationalized"]]]],[11,"from","","",16,[[["strictspec"]],[["mimespec",["internationalized","modern"]],["modern"],["internationalized"]]]],[11,"from","","",19,[[["strictspec"]],["anyspec"]]],[11,"from","","",19,[[["httpspec",["modern"]],["modern"]],["anyspec"]]],[11,"from","","",19,[[["httpspec",["obs"]],["obs"]],["anyspec"]]],[11,"from","","",19,[[["mimespec",["ascii","obs"]],["ascii"],["obs"]],["anyspec"]]],[11,"from","","",19,[[["mimespec",["ascii","modern"]],["ascii"],["modern"]],["anyspec"]]],[11,"from","","",19,[[["internationalized"],["mimespec",["internationalized","obs"]],["obs"]],["anyspec"]]],[11,"from","","",19,[[["mimespec",["internationalized","modern"]],["internationalized"],["modern"]],["anyspec"]]],[11,"from","media_type","",13,[[["mimespec",["ascii","obs"]],["mediatype",["mimespec"]]],[["mediatype",["mimespec"]],["mimespec",["internationalized","obs"]]]]],[11,"from","","",13,[[["mediatype",["mimespec"]],["mimespec",["ascii","modern"]]],[["mimespec",["ascii","obs"]],["mediatype",["mimespec"]]]]],[11,"from","","",13,[[["mediatype",["mimespec"]],["mimespec",["ascii","modern"]]],[["mediatype",["mimespec"]],["mimespec",["internationalized","obs"]]]]],[11,"from","","",13,[[["mediatype",["mimespec"]],["mimespec",["ascii","modern"]]],[["mimespec",["internationalized","modern"]],["mediatype",["mimespec"]]]]],[11,"from","","",13,[[["mimespec",["internationalized","modern"]],["mediatype",["mimespec"]]],[["mediatype",["mimespec"]],["mimespec",["internationalized","obs"]]]]],[11,"from","","",13,[[["mediatype",["httpspec"]],["httpspec",["modern"]]],[["httpspec",["obs"]],["mediatype",["httpspec"]]]]],[11,"from","","",13,[[["mediatype",["strictspec"]],["strictspec"]],[["mediatype",["httpspec"]],["httpspec",["modern"]]]]],[11,"from","","",13,[[["mediatype",["strictspec"]],["strictspec"]],[["httpspec",["obs"]],["mediatype",["httpspec"]]]]],[11,"from","","",13,[[["mediatype",["strictspec"]],["strictspec"]],[["mimespec",["ascii","obs"]],["mediatype",["mimespec"]]]]],[11,"from","","",13,[[["mediatype",["strictspec"]],["strictspec"]],[["mediatype",["mimespec"]],["mimespec",["ascii","modern"]]]]],[11,"from","","",13,[[["mediatype",["strictspec"]],["strictspec"]],[["mediatype",["mimespec"]],["mimespec",["internationalized","obs"]]]]],[11,"from","","",13,[[["mediatype",["strictspec"]],["strictspec"]],[["mimespec",["internationalized","modern"]],["mediatype",["mimespec"]]]]],[11,"from","","",13,[[["mediatype",["strictspec"]],["strictspec"]],[["mediatype",["anyspec"]],["anyspec"]]]],[11,"from","","",13,[[["mediatype",["httpspec"]],["httpspec",["modern"]]],[["mediatype",["anyspec"]],["anyspec"]]]],[11,"from","","",13,[[["httpspec",["obs"]],["mediatype",["httpspec"]]],[["mediatype",["anyspec"]],["anyspec"]]]],[11,"from","","",13,[[["mimespec",["ascii","obs"]],["mediatype",["mimespec"]]],[["mediatype",["anyspec"]],["anyspec"]]]],[11,"from","","",13,[[["mediatype",["mimespec"]],["mimespec",["ascii","modern"]]],[["mediatype",["anyspec"]],["anyspec"]]]],[11,"from","","",13,[[["mediatype",["mimespec"]],["mimespec",["internationalized","obs"]]],[["mediatype",["anyspec"]],["anyspec"]]]],[11,"from","","",13,[[["mimespec",["internationalized","modern"]],["mediatype",["mimespec"]]],[["mediatype",["anyspec"]],["anyspec"]]]],[11,"into","","",13,[[],["anymediatype"]]],[11,"len","","",15,[[["self"]],["usize"]]],[11,"next","","",15,[[["self"]],["option"]]],[11,"size_hint","","",15,[[["self"]]]],[11,"clone","media_type::error","",2,[[["self"]],["expectedchar"]]],[11,"clone","","",3,[[["self"]],["errorkind"]]],[11,"clone","","",8,[[["self"]],["parsererrorref"]]],[11,"clone","","",9,[[["self"]],["error"]]],[11,"clone","media_type","",10,[[["self"]],["name"]]],[11,"clone","","",11,[[["self"]],["value"]]],[11,"clone","media_type::spec","",16,[[["self"]],["mimespec"]]],[11,"clone","","",17,[[["self"]],["httpspec"]]],[11,"clone","","",18,[[["self"]],["strictspec"]]],[11,"clone","","",19,[[["self"]],["anyspec"]]],[11,"clone","","",20,[[["self"]],["obs"]]],[11,"clone","","",21,[[["self"]],["modern"]]],[11,"clone","","",22,[[["self"]],["ascii"]]],[11,"clone","","",23,[[["self"]],["internationalized"]]],[11,"clone","media_type","",1,[[["self"]],["paramindices"]]],[11,"clone","","",13,[[["self"]],["mediatype"]]],[11,"clone","","",14,[[["self"]],["anymediatype"]]],[11,"clone","","",15,[[["self"]],["params"]]],[11,"default","media_type::spec","",16,[[],["mimespec"]]],[11,"default","","",17,[[],["httpspec"]]],[11,"default","","",18,[[],["strictspec"]]],[11,"default","","",19,[[],["anyspec"]]],[11,"default","","",20,[[],["obs"]]],[11,"default","","",21,[[],["modern"]]],[11,"default","","",22,[[],["ascii"]]],[11,"default","","",23,[[],["internationalized"]]],[11,"cmp","media_type","",10,[[["self"],["name"]],["ordering"]]],[11,"eq","media_type::error","",2,[[["self"],["expectedchar"]],["bool"]]],[11,"ne","","",2,[[["self"],["expectedchar"]],["bool"]]],[11,"eq","","",3,[[["self"],["errorkind"]],["bool"]]],[11,"ne","","",3,[[["self"],["errorkind"]],["bool"]]],[11,"eq","","",8,[[["self"],["parsererrorref"]],["bool"]]],[11,"ne","","",8,[[["self"],["parsererrorref"]],["bool"]]],[11,"eq","","",9,[[["error"],["self"]],["bool"]]],[11,"ne","","",9,[[["error"],["self"]],["bool"]]],[11,"eq","media_type","",10,[[["self"],["name"]],["bool"]]],[11,"ne","","",10,[[["self"],["name"]],["bool"]]],[11,"eq","","",10,[[["str"],["self"]],["bool"]]],[11,"eq","","",10,[[["str"],["self"]],["bool"]]],[11,"eq","","",11,[[["value"],["self"]],["bool"]]],[11,"eq","","",11,[[["str"],["self"]],["bool"]]],[11,"eq","","",11,[[["str"],["self"]],["bool"]]],[11,"eq","","",1,[[["paramindices"],["self"]],["bool"]]],[11,"ne","","",1,[[["paramindices"],["self"]],["bool"]]],[11,"eq","","",13,[[["self"],["mediatype"]],["bool"]]],[11,"eq","","",14,[[["self"],["anymediatype"]],["bool"]]],[11,"partial_cmp","","",10,[[["self"],["name"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",10,[[["self"],["name"]],["bool"]]],[11,"le","","",10,[[["self"],["name"]],["bool"]]],[11,"gt","","",10,[[["self"],["name"]],["bool"]]],[11,"ge","","",10,[[["self"],["name"]],["bool"]]],[11,"deref","","",10,[[["self"]],["str"]]],[11,"deref","","",13,[[["self"]]]],[11,"deref_mut","","",13,[[["self"]]]],[11,"fmt","media_type::error","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",8,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",9,[[["formatter"],["self"]],["result"]]],[11,"fmt","media_type","",10,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",11,[[["formatter"],["self"]],["result"]]],[11,"fmt","media_type::spec","",16,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",17,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",18,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",19,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",20,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",21,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",22,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",23,[[["formatter"],["self"]],["result"]]],[11,"fmt","media_type","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",13,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",14,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",15,[[["formatter"],["self"]],["result"]]],[11,"fmt","media_type::error","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",8,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",9,[[["formatter"],["self"]],["result"]]],[11,"fmt","media_type","",10,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",13,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",14,[[["formatter"],["self"]],["result"]]],[11,"hash","media_type::error","",2,[[["self"],["__h"]]]],[11,"hash","","",3,[[["self"],["__h"]]]],[11,"hash","","",8,[[["self"],["__h"]]]],[11,"hash","","",9,[[["self"],["__h"]]]],[11,"hash","media_type","",10,[[["self"],["__h"]]]],[11,"hash","","",11,[[["self"],["__h"]]]],[11,"description","media_type::error","",8,[[["self"]],["str"]]],[11,"cause","","",8,[[["self"]],[["stderror"],["option",["stderror"]]]]],[11,"description","","",9,[[["self"]],["str"]]],[11,"cause","","",9,[[["self"]],[["stderror"],["option",["stderror"]]]]],[11,"eq_ignore_ascii_case","media_type","",11,[[["value"],["self"]],["bool"]]],[11,"eq_ignore_ascii_case","","",11,[[["str"],["self"]],["bool"]]],[11,"eq_ignore_ascii_case","","",11,[[["str"],["self"]],["bool"]]]],"p":[[8,"AsciiCaseInsensitiveEq"],[3,"ParamIndices"],[4,"ExpectedChar"],[4,"ErrorKind"],[13,"QuotedParamValue"],[13,"UnquotedParamValue"],[13,"UnexpectedChar"],[13,"IllegalCrNlSeq"],[3,"ParserErrorRef"],[3,"Error"],[3,"Name"],[3,"Value"],[8,"Spec"],[3,"MediaType"],[3,"AnyMediaType"],[3,"Params"],[3,"MimeSpec"],[3,"HttpSpec"],[3,"StrictSpec"],[3,"AnySpec"],[3,"Obs"],[3,"Modern"],[3,"Ascii"],[3,"Internationalized"]]};
searchIndex["media_type_impl_utils"] = {"doc":"provides a number of utilities for writing media-type…","i":[[0,"lookup_tables","media_type_impl_utils","lut lookup tables for parsing media types",null,null],[3,"CText","media_type_impl_utils::lookup_tables","CText characters",null,null],[3,"ObsNoWsCtl","","ObsNoWsCtl characters of the `obs-` part of the mime…",null,null],[3,"HttpToken","","HttToken character allowed in a token given the grammar…",null,null],[3,"Token","","Token (Mime) characters allowed in a token given the…",null,null],[3,"RestrictedToken","","Restricted Token, character allowed in a token wrt. to…",null,null],[3,"QText","","QText characters, i.e. characters which can appear in a…",null,null],[3,"DQuoteOrEscape","","The characters mainly needing escaping (just `'\"'` and…",null,null],[3,"Ws","","Ws  (just `'\\t'` and `'\\r'`)",null,null],[3,"MediaTypeChars","","MediaTypeChars is a lookup table for a number of character…",null,null],[3,"QTextWs","","QText or Ws chars",null,null],[3,"ObsQText","","QText incl. obs-parts of the mime grammar",null,null],[3,"ObsQTextWs","","QText incl. obs-parts (mime) or ws",null,null],[3,"VChar","","VChar printable us-ascii chars (i.e. `'!' <= ch && ch <=…",null,null],[3,"VCharWs","","VChar or Ws (i.e. `(' ' <= ch && ch <= '~') || ch == '\\t'`)",null,null],[0,"quoted_string","media_type_impl_utils","impl of traits from the quoted-string crate for parsing…",null,null],[3,"AnyParsingImpl","media_type_impl_utils::quoted_string","a type providing a \"catch-all\" `ParsingImpl` impl.",null,null],[3,"NormalParsingImpl","","A type providing the standart `ParsingImpl` impl.",null,null],[3,"StrictParsingImpl","","A type providing a strict `ParsingImpl`.",null,null],[3,"AnyQuoting","","a type providing a \"catch-all\" `QuotingClassifier` impl",null,null],[3,"NormalQuoting","","a type providing a \"catch-all\" impl for `QuotingClassifier`",null,null],[3,"NormalUtf8Quoting","","a variation or `NormalUtf8Quoting` treating all…",null,null],[3,"StrictTokenValidator","","a type providing a strict `WithoutQuotingValidator` impl",null,null],[3,"HttpObsParsingImpl","","a zero-sized type to provide a `ParsingImpl` for media…",null,null],[3,"HttpTokenValidator","","a zero-sized type to provide a `WithoutQuotingValidator`…",null,null],[3,"MimeTokenValidator","","a type providing a `WithoutQuotingValidator` for token…",null,null],[3,"MimeObsQuoting","","a type providing a `QuotingClassifier` impl wrt. the obs…",null,null],[3,"MimeObsUtf8Quoting","","a type providing a `QuotingClassifier` impl wrt. the…",null,null],[3,"MimeObsParsing","","a type providing a `ParsingImpl`/`MimeParsingExt` impl…",null,null],[3,"MimeObsParsingUtf8","","a type providing a `ParsingImpl`/`MimeParsingExt` impl…",null,null],[3,"MimeParsing","","a type providing a `ParsingImpl`/`MimeParsingExt` impl…",null,null],[3,"MimeParsingUtf8","","a type providing a `ParsingImpl`/`MimeParsingExt` impl…",null,null],[4,"FWSState","","A enum to represent the sate in a quoted string parser for…",null,null],[13,"HitCr","","the state after the first `'\\r'`",0,null],[13,"HitNl","","the state after `\"\\r\\n\"`",0,null],[13,"HadFws","","the state after `\"\\r\\n \"` or `\"\\r\\n\\t\"` + any number of ws…",0,null],[11,"new","","create a new HttpTokenValidator",1,[[],["self"]]],[11,"new","","create a new MimeTokenValidator",2,[[],["self"]]],[8,"MimeParsingExt","","This is an extension trait for implementing MediaType…",null,null],[18,"ALLOW_UTF8","","is true if utf8 is allowed",3,null],[18,"OBS","","is true if the `obs-` part of the grammar is supported",3,null],[10,"custom_state","","crate the custom state based on the `FWSState` state and…",3,[[["fwsstate"],["bool"]]]],[11,"handle_normal_state","","default impl. to handle the normal state of the `State`…",3,[[["partialcodepoint"]],[["result",["coreerror"]],["coreerror"]]]],[11,"advance","","default implementation for handing FWSState state…",0,[[["partialcodepoint"]],[["result",["coreerror"]],["coreerror"]]]],[0,"percent_encoding","media_type_impl_utils","impl of EncodingSet's for encoding parameter values if…",null,null],[3,"HttpPercentEncodeSet","media_type_impl_utils::percent_encoding","a percent-encoding EncodeSet for Http tokens",null,null],[3,"MimePercentEncodeSet","","a percent-encoding EncodeSet for Mime tokens",null,null],[11,"from","media_type_impl_utils::lookup_tables","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,[[["self"],["t"]]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,[[["self"],["t"]]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,[[["self"],["t"]]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,[[["self"],["t"]]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,[[["self"],["t"]]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[],["u"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,[[["self"],["t"]]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[],["u"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,[[["self"],["t"]]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[],["u"]]],[11,"to_owned","","",11,[[["self"]],["t"]]],[11,"clone_into","","",11,[[["self"],["t"]]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"try_into","","",11,[[],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"type_id","","",11,[[["self"]],["typeid"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[],["u"]]],[11,"to_owned","","",12,[[["self"]],["t"]]],[11,"clone_into","","",12,[[["self"],["t"]]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"try_into","","",12,[[],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"type_id","","",12,[[["self"]],["typeid"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"into","","",13,[[],["u"]]],[11,"to_owned","","",13,[[["self"]],["t"]]],[11,"clone_into","","",13,[[["self"],["t"]]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"try_into","","",13,[[],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"type_id","","",13,[[["self"]],["typeid"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"into","","",14,[[],["u"]]],[11,"to_owned","","",14,[[["self"]],["t"]]],[11,"clone_into","","",14,[[["self"],["t"]]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"try_into","","",14,[[],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"type_id","","",14,[[["self"]],["typeid"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"into","","",15,[[],["u"]]],[11,"to_owned","","",15,[[["self"]],["t"]]],[11,"clone_into","","",15,[[["self"],["t"]]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"try_into","","",15,[[],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"type_id","","",15,[[["self"]],["typeid"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"into","","",16,[[],["u"]]],[11,"to_owned","","",16,[[["self"]],["t"]]],[11,"clone_into","","",16,[[["self"],["t"]]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"try_into","","",16,[[],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"type_id","","",16,[[["self"]],["typeid"]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"into","","",17,[[],["u"]]],[11,"to_owned","","",17,[[["self"]],["t"]]],[11,"clone_into","","",17,[[["self"],["t"]]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"try_into","","",17,[[],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"type_id","","",17,[[["self"]],["typeid"]]],[11,"from","media_type_impl_utils::quoted_string","",18,[[["t"]],["t"]]],[11,"into","","",18,[[],["u"]]],[11,"to_owned","","",18,[[["self"]],["t"]]],[11,"clone_into","","",18,[[["self"],["t"]]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"try_into","","",18,[[],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"type_id","","",18,[[["self"]],["typeid"]]],[11,"from","","",19,[[["t"]],["t"]]],[11,"into","","",19,[[],["u"]]],[11,"to_owned","","",19,[[["self"]],["t"]]],[11,"clone_into","","",19,[[["self"],["t"]]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"try_into","","",19,[[],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"type_id","","",19,[[["self"]],["typeid"]]],[11,"from","","",20,[[["t"]],["t"]]],[11,"into","","",20,[[],["u"]]],[11,"to_owned","","",20,[[["self"]],["t"]]],[11,"clone_into","","",20,[[["self"],["t"]]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"try_into","","",20,[[],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"type_id","","",20,[[["self"]],["typeid"]]],[11,"from","","",21,[[["t"]],["t"]]],[11,"into","","",21,[[],["u"]]],[11,"to_owned","","",21,[[["self"]],["t"]]],[11,"clone_into","","",21,[[["self"],["t"]]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"try_into","","",21,[[],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"type_id","","",21,[[["self"]],["typeid"]]],[11,"from","","",22,[[["t"]],["t"]]],[11,"into","","",22,[[],["u"]]],[11,"to_owned","","",22,[[["self"]],["t"]]],[11,"clone_into","","",22,[[["self"],["t"]]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"try_into","","",22,[[],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"type_id","","",22,[[["self"]],["typeid"]]],[11,"from","","",23,[[["t"]],["t"]]],[11,"into","","",23,[[],["u"]]],[11,"to_owned","","",23,[[["self"]],["t"]]],[11,"clone_into","","",23,[[["self"],["t"]]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"try_into","","",23,[[],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"type_id","","",23,[[["self"]],["typeid"]]],[11,"from","","",24,[[["t"]],["t"]]],[11,"into","","",24,[[],["u"]]],[11,"to_owned","","",24,[[["self"]],["t"]]],[11,"clone_into","","",24,[[["self"],["t"]]]],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"try_into","","",24,[[],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"type_id","","",24,[[["self"]],["typeid"]]],[11,"from","","",25,[[["t"]],["t"]]],[11,"into","","",25,[[],["u"]]],[11,"to_owned","","",25,[[["self"]],["t"]]],[11,"clone_into","","",25,[[["self"],["t"]]]],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"try_into","","",25,[[],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"type_id","","",25,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",26,[[["t"]],["t"]]],[11,"into","","",26,[[],["u"]]],[11,"to_owned","","",26,[[["self"]],["t"]]],[11,"clone_into","","",26,[[["self"],["t"]]]],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"try_into","","",26,[[],["result"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"type_id","","",26,[[["self"]],["typeid"]]],[11,"from","","",27,[[["t"]],["t"]]],[11,"into","","",27,[[],["u"]]],[11,"to_owned","","",27,[[["self"]],["t"]]],[11,"clone_into","","",27,[[["self"],["t"]]]],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"try_into","","",27,[[],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"type_id","","",27,[[["self"]],["typeid"]]],[11,"from","","",28,[[["t"]],["t"]]],[11,"into","","",28,[[],["u"]]],[11,"to_owned","","",28,[[["self"]],["t"]]],[11,"clone_into","","",28,[[["self"],["t"]]]],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"try_into","","",28,[[],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"type_id","","",28,[[["self"]],["typeid"]]],[11,"from","","",29,[[["t"]],["t"]]],[11,"into","","",29,[[],["u"]]],[11,"to_owned","","",29,[[["self"]],["t"]]],[11,"clone_into","","",29,[[["self"],["t"]]]],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"try_into","","",29,[[],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"type_id","","",29,[[["self"]],["typeid"]]],[11,"from","","",30,[[["t"]],["t"]]],[11,"into","","",30,[[],["u"]]],[11,"to_owned","","",30,[[["self"]],["t"]]],[11,"clone_into","","",30,[[["self"],["t"]]]],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"try_into","","",30,[[],["result"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"type_id","","",30,[[["self"]],["typeid"]]],[11,"from","","",31,[[["t"]],["t"]]],[11,"into","","",31,[[],["u"]]],[11,"to_owned","","",31,[[["self"]],["t"]]],[11,"clone_into","","",31,[[["self"],["t"]]]],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"try_into","","",31,[[],["result"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"type_id","","",31,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","media_type_impl_utils::percent_encoding","",32,[[["t"]],["t"]]],[11,"into","","",32,[[],["u"]]],[11,"to_owned","","",32,[[["self"]],["t"]]],[11,"clone_into","","",32,[[["self"],["t"]]]],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"try_into","","",32,[[],["result"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"type_id","","",32,[[["self"]],["typeid"]]],[11,"from","","",33,[[["t"]],["t"]]],[11,"into","","",33,[[],["u"]]],[11,"to_owned","","",33,[[["self"]],["t"]]],[11,"clone_into","","",33,[[["self"],["t"]]]],[11,"try_from","","",33,[[["u"]],["result"]]],[11,"try_into","","",33,[[],["result"]]],[11,"borrow","","",33,[[["self"]],["t"]]],[11,"borrow_mut","","",33,[[["self"]],["t"]]],[11,"type_id","","",33,[[["self"]],["typeid"]]],[11,"custom_state","media_type_impl_utils::quoted_string","",28,[[["fwsstate"],["bool"]]]],[11,"custom_state","","",29,[[["fwsstate"],["bool"]]]],[11,"custom_state","","",30,[[["fwsstate"],["bool"]]]],[11,"custom_state","","",31,[[["fwsstate"],["bool"]]]],[11,"into","media_type_impl_utils::lookup_tables","",4,[[],["all"]]],[11,"into","","",4,[[],["any"]]],[11,"into","","",5,[[],["all"]]],[11,"into","","",5,[[],["any"]]],[11,"into","","",6,[[],["all"]]],[11,"into","","",6,[[],["any"]]],[11,"into","","",7,[[],["all"]]],[11,"into","","",7,[[],["any"]]],[11,"into","","",8,[[],["all"]]],[11,"into","","",8,[[],["any"]]],[11,"into","","",9,[[],["all"]]],[11,"into","","",9,[[],["any"]]],[11,"into","","",10,[[],["all"]]],[11,"into","","",10,[[],["any"]]],[11,"into","","",11,[[],["all"]]],[11,"into","","",11,[[],["any"]]],[11,"clone","","",4,[[["self"]],["ctext"]]],[11,"clone","","",5,[[["self"]],["obsnowsctl"]]],[11,"clone","","",6,[[["self"]],["httptoken"]]],[11,"clone","","",7,[[["self"]],["token"]]],[11,"clone","","",8,[[["self"]],["restrictedtoken"]]],[11,"clone","","",9,[[["self"]],["qtext"]]],[11,"clone","","",10,[[["self"]],["dquoteorescape"]]],[11,"clone","","",11,[[["self"]],["ws"]]],[11,"clone","","",12,[[["self"]],["mediatypechars"]]],[11,"clone","","",13,[[["self"]],["qtextws"]]],[11,"clone","","",14,[[["self"]],["obsqtext"]]],[11,"clone","","",15,[[["self"]],["obsqtextws"]]],[11,"clone","","",16,[[["self"]],["vchar"]]],[11,"clone","","",17,[[["self"]],["vcharws"]]],[11,"clone","media_type_impl_utils::quoted_string","",18,[[["self"]],["anyparsingimpl"]]],[11,"clone","","",19,[[["self"]],["normalparsingimpl"]]],[11,"clone","","",20,[[["self"]],["strictparsingimpl"]]],[11,"clone","","",21,[[["self"]],["anyquoting"]]],[11,"clone","","",22,[[["self"]],["normalquoting"]]],[11,"clone","","",23,[[["self"]],["normalutf8quoting"]]],[11,"clone","","",24,[[["self"]],["stricttokenvalidator"]]],[11,"clone","","",25,[[["self"]],["httpobsparsingimpl"]]],[11,"clone","","",1,[[["self"]],["httptokenvalidator"]]],[11,"clone","","",2,[[["self"]],["mimetokenvalidator"]]],[11,"clone","","",26,[[["self"]],["mimeobsquoting"]]],[11,"clone","","",27,[[["self"]],["mimeobsutf8quoting"]]],[11,"clone","","",28,[[["self"]],["mimeobsparsing"]]],[11,"clone","","",29,[[["self"]],["mimeobsparsingutf8"]]],[11,"clone","","",30,[[["self"]],["mimeparsing"]]],[11,"clone","","",31,[[["self"]],["mimeparsingutf8"]]],[11,"clone","","",0,[[["self"]],["fwsstate"]]],[11,"clone","media_type_impl_utils::percent_encoding","",32,[[["self"]],["httppercentencodeset"]]],[11,"clone","","",33,[[["self"]],["mimepercentencodeset"]]],[11,"default","media_type_impl_utils::lookup_tables","",4,[[],["self"]]],[11,"default","","",5,[[],["self"]]],[11,"default","","",6,[[],["self"]]],[11,"default","","",7,[[],["self"]]],[11,"default","","",8,[[],["self"]]],[11,"default","","",9,[[],["self"]]],[11,"default","","",10,[[],["self"]]],[11,"default","","",11,[[],["self"]]],[11,"default","","",13,[[],["self"]]],[11,"default","","",14,[[],["self"]]],[11,"default","","",15,[[],["self"]]],[11,"default","","",16,[[],["self"]]],[11,"default","","",17,[[],["self"]]],[11,"default","media_type_impl_utils::quoted_string","",18,[[],["anyparsingimpl"]]],[11,"default","","",19,[[],["normalparsingimpl"]]],[11,"default","","",20,[[],["strictparsingimpl"]]],[11,"default","","",21,[[],["anyquoting"]]],[11,"default","","",22,[[],["normalquoting"]]],[11,"default","","",23,[[],["normalutf8quoting"]]],[11,"default","","",24,[[],["stricttokenvalidator"]]],[11,"default","","",25,[[],["httpobsparsingimpl"]]],[11,"default","","",1,[[],["httptokenvalidator"]]],[11,"default","","",2,[[],["mimetokenvalidator"]]],[11,"default","","",26,[[],["mimeobsquoting"]]],[11,"default","","",27,[[],["mimeobsutf8quoting"]]],[11,"default","media_type_impl_utils::percent_encoding","",32,[[],["httppercentencodeset"]]],[11,"default","","",33,[[],["mimepercentencodeset"]]],[11,"eq","media_type_impl_utils::quoted_string","",18,[[["self"],["anyparsingimpl"]],["bool"]]],[11,"eq","","",19,[[["self"],["normalparsingimpl"]],["bool"]]],[11,"eq","","",20,[[["self"],["strictparsingimpl"]],["bool"]]],[11,"eq","","",21,[[["self"],["anyquoting"]],["bool"]]],[11,"eq","","",22,[[["self"],["normalquoting"]],["bool"]]],[11,"eq","","",23,[[["self"],["normalutf8quoting"]],["bool"]]],[11,"eq","","",24,[[["self"],["stricttokenvalidator"]],["bool"]]],[11,"ne","","",24,[[["self"],["stricttokenvalidator"]],["bool"]]],[11,"eq","","",25,[[["httpobsparsingimpl"],["self"]],["bool"]]],[11,"eq","","",1,[[["httptokenvalidator"],["self"]],["bool"]]],[11,"eq","","",2,[[["self"],["mimetokenvalidator"]],["bool"]]],[11,"eq","","",26,[[["self"],["mimeobsquoting"]],["bool"]]],[11,"eq","","",27,[[["mimeobsutf8quoting"],["self"]],["bool"]]],[11,"eq","","",28,[[["mimeobsparsing"],["self"]],["bool"]]],[11,"ne","","",28,[[["mimeobsparsing"],["self"]],["bool"]]],[11,"eq","","",29,[[["mimeobsparsingutf8"],["self"]],["bool"]]],[11,"ne","","",29,[[["mimeobsparsingutf8"],["self"]],["bool"]]],[11,"eq","","",30,[[["mimeparsing"],["self"]],["bool"]]],[11,"ne","","",30,[[["mimeparsing"],["self"]],["bool"]]],[11,"eq","","",31,[[["mimeparsingutf8"],["self"]],["bool"]]],[11,"ne","","",31,[[["mimeparsingutf8"],["self"]],["bool"]]],[11,"eq","","",0,[[["self"],["fwsstate"]],["bool"]]],[11,"eq","media_type_impl_utils::percent_encoding","",32,[[["self"],["httppercentencodeset"]],["bool"]]],[11,"eq","","",33,[[["self"],["mimepercentencodeset"]],["bool"]]],[11,"fmt","media_type_impl_utils::lookup_tables","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",6,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",7,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",8,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",9,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",10,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",11,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",12,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",13,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",14,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",15,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",16,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",17,[[["formatter"],["self"]],["result"]]],[11,"fmt","media_type_impl_utils::quoted_string","",18,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",19,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",20,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",21,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",22,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",23,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",24,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",25,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",26,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",27,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",28,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",29,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",30,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",31,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","media_type_impl_utils::percent_encoding","",32,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",33,[[["formatter"],["self"]],["result"]]],[11,"hash","media_type_impl_utils::quoted_string","",18,[[["self"],["__h"]]]],[11,"hash","","",19,[[["self"],["__h"]]]],[11,"hash","","",20,[[["self"],["__h"]]]],[11,"hash","","",21,[[["self"],["__h"]]]],[11,"hash","","",22,[[["self"],["__h"]]]],[11,"hash","","",23,[[["self"],["__h"]]]],[11,"hash","","",24,[[["self"],["__h"]]]],[11,"hash","","",25,[[["self"],["__h"]]]],[11,"hash","","",1,[[["self"],["__h"]]]],[11,"hash","","",2,[[["self"],["__h"]]]],[11,"hash","","",26,[[["self"],["__h"]]]],[11,"hash","","",27,[[["self"],["__h"]]]],[11,"hash","","",28,[[["self"],["__h"]]]],[11,"hash","","",29,[[["self"],["__h"]]]],[11,"hash","","",30,[[["self"],["__h"]]]],[11,"hash","","",31,[[["self"],["__h"]]]],[11,"hash","","",0,[[["self"],["__h"]]]],[11,"hash","media_type_impl_utils::percent_encoding","",32,[[["self"],["__h"]]]],[11,"hash","","",33,[[["self"],["__h"]]]],[11,"len","media_type_impl_utils::lookup_tables","",12,[[],["usize"]]],[11,"lookup","","",12,[[["usize"]]]],[11,"check_at","","",12,[[["access"],["usize"]],["bool"]]],[11,"check_flag_at","","",12,[[["usize"]],["bool"]]],[11,"check","","",4,[[["self"]],["bool"]]],[11,"check","","",5,[[["self"]],["bool"]]],[11,"check","","",6,[[["self"]],["bool"]]],[11,"check","","",7,[[["self"]],["bool"]]],[11,"check","","",8,[[["self"]],["bool"]]],[11,"check","","",9,[[["self"]],["bool"]]],[11,"check","","",10,[[["self"]],["bool"]]],[11,"check","","",11,[[["self"]],["bool"]]],[11,"check","","",13,[[["self"]],["bool"]]],[11,"check","","",14,[[["self"]],["bool"]]],[11,"check","","",15,[[["self"]],["bool"]]],[11,"check","","",16,[[["self"]],["bool"]]],[11,"check","","",17,[[["self"]],["bool"]]],[11,"classify_for_quoting","media_type_impl_utils::quoted_string","",21,[[["partialcodepoint"]],["quotingclass"]]],[11,"classify_for_quoting","","",22,[[["partialcodepoint"]],["quotingclass"]]],[11,"classify_for_quoting","","",23,[[["partialcodepoint"]],["quotingclass"]]],[11,"classify_for_quoting","","",26,[[["partialcodepoint"]],["quotingclass"]]],[11,"classify_for_quoting","","",27,[[["partialcodepoint"]],["quotingclass"]]],[11,"next","","",24,[[["self"],["partialcodepoint"]],["bool"]]],[11,"end","","",24,[[["self"]],["bool"]]],[11,"next","","",1,[[["self"],["partialcodepoint"]],["bool"]]],[11,"end","","",1,[[["self"]],["bool"]]],[11,"next","","",2,[[["self"],["partialcodepoint"]],["bool"]]],[11,"end","","",2,[[["self"]],["bool"]]],[11,"can_be_quoted","","",18,[[["partialcodepoint"]],["bool"]]],[11,"handle_normal_state","","",18,[[["partialcodepoint"]],[["result",["coreerror"]],["coreerror"]]]],[11,"can_be_quoted","","any VChar or Ws character can be used",19,[[["partialcodepoint"]],["bool"]]],[11,"handle_normal_state","","any QText or Ws character advances the normal state…",19,[[["partialcodepoint"]],[["result",["coreerror"]],["coreerror"]]]],[11,"can_be_quoted","","only allow `'\"'` and `'\\\\'`",20,[[["partialcodepoint"]],["bool"]]],[11,"handle_normal_state","","any qtext or ws is ok, others are invalid",20,[[["partialcodepoint"]],[["result",["coreerror"]],["coreerror"]]]],[11,"can_be_quoted","","any qtext, ws and non-us-ascii char can be quoted",25,[[["partialcodepoint"]],["bool"]]],[11,"handle_normal_state","","any qtext, ws and non-us-ascii char can appear without…",25,[[["partialcodepoint"]],[["result",["coreerror"]],["coreerror"]]]],[11,"can_be_quoted","","",28,[[["partialcodepoint"]],["bool"]]],[11,"handle_normal_state","","",28,[[["partialcodepoint"]],[["result",["coreerror"]],["coreerror"]]]],[11,"advance","","",28,[[["self"],["partialcodepoint"]],[["result",["coreerror"]],["coreerror"]]]],[11,"can_be_quoted","","",29,[[["partialcodepoint"]],["bool"]]],[11,"handle_normal_state","","",29,[[["partialcodepoint"]],[["result",["coreerror"]],["coreerror"]]]],[11,"advance","","",29,[[["self"],["partialcodepoint"]],[["result",["coreerror"]],["coreerror"]]]],[11,"can_be_quoted","","",30,[[["partialcodepoint"]],["bool"]]],[11,"handle_normal_state","","",30,[[["partialcodepoint"]],[["result",["coreerror"]],["coreerror"]]]],[11,"advance","","",30,[[["self"],["partialcodepoint"]],[["result",["coreerror"]],["coreerror"]]]],[11,"can_be_quoted","","",31,[[["partialcodepoint"]],["bool"]]],[11,"handle_normal_state","","",31,[[["partialcodepoint"]],[["result",["coreerror"]],["coreerror"]]]],[11,"advance","","",31,[[["self"],["partialcodepoint"]],[["result",["coreerror"]],["coreerror"]]]],[11,"contains","media_type_impl_utils::percent_encoding","",32,[[["self"],["u8"]],["bool"]]],[11,"contains","","",33,[[["self"],["u8"]],["bool"]]]],"p":[[4,"FWSState"],[3,"HttpTokenValidator"],[3,"MimeTokenValidator"],[8,"MimeParsingExt"],[3,"CText"],[3,"ObsNoWsCtl"],[3,"HttpToken"],[3,"Token"],[3,"RestrictedToken"],[3,"QText"],[3,"DQuoteOrEscape"],[3,"Ws"],[3,"MediaTypeChars"],[3,"QTextWs"],[3,"ObsQText"],[3,"ObsQTextWs"],[3,"VChar"],[3,"VCharWs"],[3,"AnyParsingImpl"],[3,"NormalParsingImpl"],[3,"StrictParsingImpl"],[3,"AnyQuoting"],[3,"NormalQuoting"],[3,"NormalUtf8Quoting"],[3,"StrictTokenValidator"],[3,"HttpObsParsingImpl"],[3,"MimeObsQuoting"],[3,"MimeObsUtf8Quoting"],[3,"MimeObsParsing"],[3,"MimeObsParsingUtf8"],[3,"MimeParsing"],[3,"MimeParsingUtf8"],[3,"HttpPercentEncodeSet"],[3,"MimePercentEncodeSet"]]};
searchIndex["memchr"] = {"doc":"This crate defines two functions, `memchr` and `memrchr`,…","i":[[3,"Memchr","memchr","An iterator for memchr",null,null],[3,"Memchr2","","An iterator for Memchr2",null,null],[3,"Memchr3","","An iterator for Memchr3",null,null],[5,"memchr","","A safe interface to `memchr`.",null,[[["u8"]],[["usize"],["option",["usize"]]]]],[5,"memrchr","","A safe interface to `memrchr`.",null,[[["u8"]],[["usize"],["option",["usize"]]]]],[5,"memchr2","","Like `memchr`, but searches for two bytes instead of one.",null,[[["u8"]],[["usize"],["option",["usize"]]]]],[5,"memchr3","","Like `memchr`, but searches for three bytes instead of one.",null,[[["u8"]],[["usize"],["option",["usize"]]]]],[11,"new","","Creates a new iterator that yields all positions of needle…",0,[[["u8"]],["memchr"]]],[11,"new","","Creates a new iterator that yields all positions of needle…",1,[[["u8"]],["memchr2"]]],[11,"new","","Create a new Memchr2 that's initalized to zero with a…",2,[[["u8"]],["memchr3"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"into_iter","","",0,[[],["i"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"into_iter","","",1,[[],["i"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"into_iter","","",2,[[],["i"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"next_back","","",0,[[["self"]],["option"]]],[11,"next","","",0,[[["self"]],[["usize"],["option",["usize"]]]]],[11,"next","","",1,[[["self"]],[["usize"],["option",["usize"]]]]],[11,"next","","",2,[[["self"]],[["usize"],["option",["usize"]]]]]],"p":[[3,"Memchr"],[3,"Memchr2"],[3,"Memchr3"]]};
searchIndex["memmap"] = {"doc":"A cross-platform Rust API for memory mapped buffers.","i":[[3,"MmapOptions","memmap","A memory map builder, providing advanced options and flags…",null,null],[3,"Mmap","","An immutable memory mapped buffer.",null,null],[3,"MmapMut","","A mutable memory mapped buffer.",null,null],[11,"new","","Creates a new set of options for configuring and creating…",0,[[],["mmapoptions"]]],[11,"offset","","Configures the memory map to start at byte `offset` from…",0,[[["self"],["u64"]],["self"]]],[11,"len","","Configures the created memory mapped buffer to be `len`…",0,[[["self"],["usize"]],["self"]]],[11,"stack","","Configures the anonymous memory map to be suitable for a…",0,[[["self"]],["self"]]],[11,"map","","Creates a read-only memory map backed by a file.",0,[[["self"],["file"]],[["result",["mmap"]],["mmap"]]]],[11,"map_exec","","Creates a readable and executable memory map backed by a…",0,[[["self"],["file"]],[["result",["mmap"]],["mmap"]]]],[11,"map_mut","","Creates a writeable memory map backed by a file.",0,[[["self"],["file"]],[["result",["mmapmut"]],["mmapmut"]]]],[11,"map_copy","","Creates a copy-on-write memory map backed by a file.",0,[[["self"],["file"]],[["result",["mmapmut"]],["mmapmut"]]]],[11,"map_anon","","Creates an anonymous memory map.",0,[[["self"]],[["result",["mmapmut"]],["mmapmut"]]]],[11,"map","","Creates a read-only memory map backed by a file.",1,[[["file"]],[["result",["mmap"]],["mmap"]]]],[11,"make_mut","","Transition the memory map to be writable.",1,[[],[["result",["mmapmut"]],["mmapmut"]]]],[11,"map_mut","","Creates a writeable memory map backed by a file.",2,[[["file"]],[["result",["mmapmut"]],["mmapmut"]]]],[11,"map_anon","","Creates an anonymous memory map.",2,[[["usize"]],[["result",["mmapmut"]],["mmapmut"]]]],[11,"flush","","Flushes outstanding memory map modifications to disk.",2,[[["self"]],["result"]]],[11,"flush_async","","Asynchronously flushes outstanding memory map…",2,[[["self"]],["result"]]],[11,"flush_range","","Flushes outstanding memory map modifications in the range…",2,[[["self"],["usize"]],["result"]]],[11,"flush_async_range","","Asynchronously flushes outstanding memory map…",2,[[["self"],["usize"]],["result"]]],[11,"make_read_only","","Returns an immutable version of this memory mapped buffer.",2,[[],[["result",["mmap"]],["mmap"]]]],[11,"make_exec","","Transition the memory map to be readable and executable.",2,[[],[["result",["mmap"]],["mmap"]]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"as_mut","","",2,[[["self"]]]],[11,"as_ref","","",1,[[["self"]]]],[11,"as_ref","","",2,[[["self"]]]],[11,"clone","","",0,[[["self"]],["mmapoptions"]]],[11,"default","","",0,[[],["mmapoptions"]]],[11,"deref","","",1,[[["self"]]]],[11,"deref","","",2,[[["self"]]]],[11,"deref_mut","","",2,[[["self"]]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]]],"p":[[3,"MmapOptions"],[3,"Mmap"],[3,"MmapMut"]]};
searchIndex["mime"] = {"doc":"Mime","i":[[3,"Mime","mime","A parsed mime or media type.",null,null],[3,"Name","","A section of a `Mime`.",null,null],[3,"FromStrError","","An error when parsing a `Mime` from a string.",null,null],[3,"Params","","An iterator over the parameters of a MIME.",null,null],[17,"STAR","","",null,null],[17,"TEXT","","text",null,null],[17,"IMAGE","","image",null,null],[17,"AUDIO","","audio",null,null],[17,"VIDEO","","video",null,null],[17,"APPLICATION","","application",null,null],[17,"MULTIPART","","multipart",null,null],[17,"MESSAGE","","message",null,null],[17,"MODEL","","model",null,null],[17,"FONT","","font",null,null],[17,"PLAIN","","plain",null,null],[17,"HTML","","html",null,null],[17,"XML","","xml",null,null],[17,"JAVASCRIPT","","javascript",null,null],[17,"CSS","","css",null,null],[17,"CSV","","csv",null,null],[17,"EVENT_STREAM","","event-stream",null,null],[17,"VCARD","","vcard",null,null],[17,"JSON","","json",null,null],[17,"WWW_FORM_URLENCODED","","x-www-form-urlencoded",null,null],[17,"MSGPACK","","msgpack",null,null],[17,"OCTET_STREAM","","octet-stream",null,null],[17,"PDF","","pdf",null,null],[17,"WOFF","","woff",null,null],[17,"WOFF2","","woff2",null,null],[17,"FORM_DATA","","form-data",null,null],[17,"BMP","","bmp",null,null],[17,"GIF","","gif",null,null],[17,"JPEG","","jpeg",null,null],[17,"PNG","","png",null,null],[17,"SVG","","svg",null,null],[17,"BASIC","","basic",null,null],[17,"MPEG","","mpeg",null,null],[17,"MP4","","mp4",null,null],[17,"OGG","","ogg",null,null],[17,"CHARSET","","charset",null,null],[17,"BOUNDARY","","boundary",null,null],[17,"UTF_8","","utf-8",null,null],[17,"STAR_STAR","","`*/*`",null,null],[17,"TEXT_STAR","","`text/*`",null,null],[17,"TEXT_PLAIN","","`text/plain`",null,null],[17,"TEXT_PLAIN_UTF_8","","`text/plain; charset=utf-8`",null,null],[17,"TEXT_HTML","","`text/html`",null,null],[17,"TEXT_HTML_UTF_8","","`text/html; charset=utf-8`",null,null],[17,"TEXT_CSS","","`text/css`",null,null],[17,"TEXT_CSS_UTF_8","","`text/css; charset=utf-8`",null,null],[17,"TEXT_JAVASCRIPT","","`text/javascript`",null,null],[17,"TEXT_XML","","`text/xml`",null,null],[17,"TEXT_EVENT_STREAM","","`text/event-stream`",null,null],[17,"TEXT_CSV","","`text/csv`",null,null],[17,"TEXT_CSV_UTF_8","","`text/csv; charset=utf-8`",null,null],[17,"TEXT_TAB_SEPARATED_VALUES","","`text/tab-separated-values`",null,null],[17,"TEXT_TAB_SEPARATED_VALUES_UTF_8","","`text/tab-separated-values; charset=utf-8`",null,null],[17,"TEXT_VCARD","","`text/vcard`",null,null],[17,"IMAGE_STAR","","`image/*`",null,null],[17,"IMAGE_JPEG","","`image/jpeg`",null,null],[17,"IMAGE_GIF","","`image/gif`",null,null],[17,"IMAGE_PNG","","`image/png`",null,null],[17,"IMAGE_BMP","","`image/bmp`",null,null],[17,"IMAGE_SVG","","`image/svg+xml`",null,null],[17,"FONT_WOFF","","`font/woff`",null,null],[17,"FONT_WOFF2","","`font/woff2`",null,null],[17,"APPLICATION_JSON","","`application/json`",null,null],[17,"APPLICATION_JAVASCRIPT","","`application/javascript`",null,null],[17,"APPLICATION_JAVASCRIPT_UTF_8","","`application/javascript; charset=utf-8`",null,null],[17,"APPLICATION_WWW_FORM_URLENCODED","","`application/x-www-form-urlencoded`",null,null],[17,"APPLICATION_OCTET_STREAM","","`application/octet-stream`",null,null],[17,"APPLICATION_MSGPACK","","`application/msgpack`",null,null],[17,"APPLICATION_PDF","","`application/pdf`",null,null],[17,"MULTIPART_FORM_DATA","","`multipart/form-data`",null,null],[11,"type_","","Get the top level media type for this `Mime`.",0,[[["self"]],["name"]]],[11,"subtype","","Get the subtype of this `Mime`.",0,[[["self"]],["name"]]],[11,"suffix","","Get an optional +suffix for this `Mime`.",0,[[["self"]],[["name"],["option",["name"]]]]],[11,"get_param","","Look up a parameter by name.",0,[[["self"],["n"]],[["name"],["option",["name"]]]]],[11,"params","","Returns an iterator over the parameters.",0,[[["self"]],["params"]]],[11,"essence_str","","Return a `&str` of the Mime's [\"essence\"][essence].",0,[[["self"]],["str"]]],[11,"as_str","","Get the value of this `Name` as a string.",1,[[["self"]],["str"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"to_string","","",1,[[["self"]],["string"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_string","","",2,[[["self"]],["string"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"into_iter","","",3,[[],["i"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"as_ref","","",0,[[["self"]],["str"]]],[11,"as_ref","","",1,[[["self"]],["str"]]],[11,"next","","",3,[[["self"]],["option"]]],[11,"size_hint","","",3,[[["self"]]]],[11,"clone","","",0,[[["self"]],["mime"]]],[11,"clone","","",1,[[["self"]],["name"]]],[11,"cmp","","",1,[[["self"],["name"]],["ordering"]]],[11,"cmp","","",0,[[["self"],["mime"]],["ordering"]]],[11,"eq","","",1,[[["self"],["name"]],["bool"]]],[11,"ne","","",1,[[["self"],["name"]],["bool"]]],[11,"eq","","",0,[[["self"],["mime"]],["bool"]]],[11,"eq","","",0,[[["str"],["self"]],["bool"]]],[11,"eq","","",1,[[["str"],["self"]],["bool"]]],[11,"partial_cmp","","",1,[[["self"],["name"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",1,[[["self"],["name"]],["bool"]]],[11,"le","","",1,[[["self"],["name"]],["bool"]]],[11,"gt","","",1,[[["self"],["name"]],["bool"]]],[11,"ge","","",1,[[["self"],["name"]],["bool"]]],[11,"partial_cmp","","",0,[[["self"],["mime"]],[["ordering"],["option",["ordering"]]]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"hash","","",1,[[["self"],["__h"]]]],[11,"hash","","",0,[[["self"],["t"]]]],[11,"from_str","","",0,[[["str"]],[["result",["mime"]],["mime"]]]],[11,"description","","",2,[[["self"]],["str"]]]],"p":[[3,"Mime"],[3,"Name"],[3,"FromStrError"],[3,"Params"]]};
searchIndex["nom"] = {"doc":"nom, eating data byte by byte","i":[[3,"ProducerRepeat","nom","ProducerRepeat takes a single value, and generates it at…",null,null],[3,"MemProducer","","A MemProducer generates values from an in memory byte buffer",null,null],[3,"FileProducer","","",null,null],[3,"MapConsumer","","MapConsumer takes a function S -> T and applies it on a…",null,null],[3,"ChainConsumer","","ChainConsumer takes a consumer C1 R -> S, and a consumer…",null,null],[4,"ErrorKind","","indicates which parser returned an error",null,null],[13,"Custom","","",0,null],[13,"Tag","","",0,null],[13,"MapRes","","",0,null],[13,"MapOpt","","",0,null],[13,"Alt","","",0,null],[13,"IsNot","","",0,null],[13,"IsA","","",0,null],[13,"SeparatedList","","",0,null],[13,"SeparatedNonEmptyList","","",0,null],[13,"Many0","","",0,null],[13,"Many1","","",0,null],[13,"ManyTill","","",0,null],[13,"Count","","",0,null],[13,"TakeUntilAndConsume","","",0,null],[13,"TakeUntil","","",0,null],[13,"TakeUntilEitherAndConsume","","",0,null],[13,"TakeUntilEither","","",0,null],[13,"LengthValue","","",0,null],[13,"TagClosure","","",0,null],[13,"Alpha","","",0,null],[13,"Digit","","",0,null],[13,"HexDigit","","",0,null],[13,"OctDigit","","",0,null],[13,"AlphaNumeric","","",0,null],[13,"Space","","",0,null],[13,"MultiSpace","","",0,null],[13,"LengthValueFn","","",0,null],[13,"Eof","","",0,null],[13,"ExprOpt","","",0,null],[13,"ExprRes","","",0,null],[13,"CondReduce","","",0,null],[13,"Switch","","",0,null],[13,"TagBits","","",0,null],[13,"OneOf","","",0,null],[13,"NoneOf","","",0,null],[13,"Char","","",0,null],[13,"CrLf","","",0,null],[13,"RegexpMatch","","",0,null],[13,"RegexpMatches","","",0,null],[13,"RegexpFind","","",0,null],[13,"RegexpCapture","","",0,null],[13,"RegexpCaptures","","",0,null],[13,"TakeWhile1","","",0,null],[13,"Complete","","",0,null],[13,"Fix","","",0,null],[13,"Escaped","","",0,null],[13,"EscapedTransform","","",0,null],[13,"TagStr","","",0,null],[13,"IsNotStr","","",0,null],[13,"IsAStr","","",0,null],[13,"TakeWhile1Str","","",0,null],[13,"NonEmpty","","",0,null],[13,"ManyMN","","",0,null],[13,"TakeUntilAndConsumeStr","","",0,null],[13,"TakeUntilStr","","",0,null],[13,"Not","","",0,null],[13,"Permutation","","",0,null],[13,"Verify","","",0,null],[13,"TakeTill1","","",0,null],[4,"CompareResult","","indicates wether a comparison was successful, an error, or…",null,null],[13,"Ok","","",1,null],[13,"Incomplete","","",1,null],[13,"Error","","",1,null],[4,"Needed","","Contains information on needed data if a parser returned…",null,null],[13,"Unknown","","needs more data, but we do not know how much",2,null],[13,"Size","","contains the required data size",2,null],[4,"IResult","","Holds the result of parsing functions",null,null],[13,"Done","","indicates a correct parsing, the first field containing…",3,null],[13,"Error","","contains a Err, an enum that can indicate an error code, a…",3,null],[13,"Incomplete","","Incomplete contains a Needed, an enum than can represent a…",3,null],[4,"IError","","This is the same as IResult, but without Done",null,null],[13,"Error","","",4,null],[13,"Incomplete","","",4,null],[4,"Endianness","","Configurable endianness",null,null],[13,"Big","","",5,null],[13,"Little","","",5,null],[4,"Input","","",null,null],[13,"Element","","",6,null],[13,"Empty","","",6,null],[13,"Eof","","",6,null],[4,"ConsumerState","","Stores a consumer's current computation state",null,null],[13,"Done","","A value of type O has been produced",7,null],[13,"Error","","An error of type E has been encountered",7,null],[13,"Continue","","Continue applying, and pass a message of type M to the…",7,null],[4,"Move","","",null,null],[13,"Consume","","indcates how much data was consumed",8,null],[13,"Seek","","indicates where in the input the consumer must seek",8,null],[13,"Await","","indicates more data is needed",8,null],[4,"FileProducerState","","",null,null],[13,"Normal","","",9,null],[13,"Error","","",9,null],[13,"Eof","","",9,null],[5,"slice_to_offsets","","",null,[[]]],[5,"code_from_offset","","",null,[[["usize"]],[["u32"],["option",["u32"]]]]],[5,"reset_color","","",null,[[["vec"]]]],[5,"write_color","","",null,[[["vec"],["u8"]]]],[5,"print_codes","","",null,[[["u8"],["u32"],["str"],["hashmap",["u32","str"]],["hashmap",["u32","u8"]]],["string"]]],[5,"error_to_u32","","",null,[[["errorkind"]],["u32"]]],[5,"tag_cl","","",null,[[],[["fn"],["box",["fn"]]]]],[5,"print","","",null,[[["debug"]],[["debug"],["iresult"]]]],[5,"begin","","",null,[[],["iresult"]]],[5,"crlf","","",null,[[["t"]],["iresult"]]],[5,"not_line_ending","","",null,[[["t"]],["iresult"]]],[5,"line_ending","","Recognizes an end of line (both '\\n' and '\\r\\n')",null,[[["t"]],["iresult"]]],[5,"eol","","",null,[[["t"]],["iresult"]]],[5,"is_alphabetic","","Tests if byte is ASCII alphabetic: A-Z, a-z",null,[[["u8"]],["bool"]]],[5,"is_digit","","Tests if byte is ASCII digit: 0-9",null,[[["u8"]],["bool"]]],[5,"is_hex_digit","","Tests if byte is ASCII hex digit: 0-9, A-F, a-f",null,[[["u8"]],["bool"]]],[5,"is_oct_digit","","Tests if byte is ASCII octal digit: 0-7",null,[[["u8"]],["bool"]]],[5,"is_alphanumeric","","Tests if byte is ASCII alphanumeric: A-Z, a-z, 0-9",null,[[["u8"]],["bool"]]],[5,"is_space","","Tests if byte is ASCII space or tab",null,[[["u8"]],["bool"]]],[5,"alpha","","Recognizes one or more lowercase and uppercase alphabetic…",null,[[["t"]],["iresult"]]],[5,"digit","","Recognizes one or more numerical characters: 0-9",null,[[["t"]],["iresult"]]],[5,"hex_digit","","Recognizes one or more hexadecimal numerical characters:…",null,[[["t"]],["iresult"]]],[5,"oct_digit","","Recognizes one or more octal characters: 0-7",null,[[["t"]],["iresult"]]],[5,"alphanumeric","","Recognizes one or more numerical and alphabetic…",null,[[["t"]],["iresult"]]],[5,"space","","Recognizes one or more spaces and tabs",null,[[["t"]],["iresult"]]],[5,"multispace","","Recognizes one or more spaces, tabs, carriage returns and…",null,[[["t"]],["iresult"]]],[5,"sized_buffer","","",null,[[],["iresult"]]],[5,"be_u8","","Recognizes an unsigned 1 byte integer (equivalent to…",null,[[],[["iresult",["u8"]],["u8"]]]],[5,"be_u16","","Recognizes big endian unsigned 2 bytes integer",null,[[],[["u16"],["iresult",["u16"]]]]],[5,"be_u24","","Recognizes big endian unsigned 3 byte integer",null,[[],[["iresult",["u32"]],["u32"]]]],[5,"be_u32","","Recognizes big endian unsigned 4 bytes integer",null,[[],[["iresult",["u32"]],["u32"]]]],[5,"be_u64","","Recognizes big endian unsigned 8 bytes integer",null,[[],[["iresult",["u64"]],["u64"]]]],[5,"be_i8","","Recognizes a signed 1 byte integer (equivalent to take!(1)",null,[[],[["i8"],["iresult",["i8"]]]]],[5,"be_i16","","Recognizes big endian signed 2 bytes integer",null,[[],[["i16"],["iresult",["i16"]]]]],[5,"be_i24","","Recognizes big endian signed 3 bytes integer",null,[[],[["iresult",["i32"]],["i32"]]]],[5,"be_i32","","Recognizes big endian signed 4 bytes integer",null,[[],[["iresult",["i32"]],["i32"]]]],[5,"be_i64","","Recognizes big endian signed 8 bytes integer",null,[[],[["i64"],["iresult",["i64"]]]]],[5,"le_u8","","Recognizes an unsigned 1 byte integer (equivalent to…",null,[[],[["iresult",["u8"]],["u8"]]]],[5,"le_u16","","Recognizes little endian unsigned 2 bytes integer",null,[[],[["u16"],["iresult",["u16"]]]]],[5,"le_u24","","Recognizes little endian unsigned 3 byte integer",null,[[],[["iresult",["u32"]],["u32"]]]],[5,"le_u32","","Recognizes little endian unsigned 4 bytes integer",null,[[],[["iresult",["u32"]],["u32"]]]],[5,"le_u64","","Recognizes little endian unsigned 8 bytes integer",null,[[],[["iresult",["u64"]],["u64"]]]],[5,"le_i8","","Recognizes a signed 1 byte integer (equivalent to take!(1)",null,[[],[["i8"],["iresult",["i8"]]]]],[5,"le_i16","","Recognizes little endian signed 2 bytes integer",null,[[],[["i16"],["iresult",["i16"]]]]],[5,"le_i24","","Recognizes little endian signed 3 bytes integer",null,[[],[["iresult",["i32"]],["i32"]]]],[5,"le_i32","","Recognizes little endian signed 4 bytes integer",null,[[],[["iresult",["i32"]],["i32"]]]],[5,"le_i64","","Recognizes little endian signed 8 bytes integer",null,[[],[["i64"],["iresult",["i64"]]]]],[5,"be_f32","","Recognizes big endian 4 bytes floating point number",null,[[],[["iresult",["f32"]],["f32"]]]],[5,"be_f64","","Recognizes big endian 8 bytes floating point number",null,[[],[["iresult",["f64"]],["f64"]]]],[5,"le_f32","","Recognizes little endian 4 bytes floating point number",null,[[],[["iresult",["f32"]],["f32"]]]],[5,"le_f64","","Recognizes little endian 8 bytes floating point number",null,[[],[["iresult",["f64"]],["f64"]]]],[5,"hex_u32","","Recognizes a hex-encoded integer",null,[[],[["iresult",["u32"]],["u32"]]]],[5,"non_empty","","Recognizes non empty buffers",null,[[["t"]],["iresult"]]],[5,"rest","","Return the remaining input.",null,[[],["iresult"]]],[5,"rest_s","","Return the remaining input, for strings.",null,[[["str"]],[["iresult",["str","str"]],["str"]]]],[5,"float","","Recognizes floating point number in a byte string and…",null,[[],[["iresult",["f32"]],["f32"]]]],[5,"float_s","","Recognizes floating point number in a string and returns a…",null,[[["str"]],[["str"],["iresult",["str","f32"]],["f32"]]]],[5,"double","","Recognizes floating point number in a byte string and…",null,[[],[["iresult",["f64"]],["f64"]]]],[5,"double_s","","Recognizes floating point number in a string and returns a…",null,[[["str"]],[["str"],["iresult",["str","f64"]],["f64"]]]],[5,"newline","","Matches a newline character '\\n'",null,[[],[["u32"],["iresult",["char","u32"]],["char"]]]],[5,"tab","","Matches a tab character '\\t'",null,[[],[["u32"],["iresult",["char","u32"]],["char"]]]],[5,"anychar","","",null,[[["t"]],[["char"],["iresult",["char"]]]]],[5,"shift","","",null,[[["usize"]]]],[11,"description","","",0,[[["self"]],["str"]]],[11,"into_error_kind","","Convert Err into an ErrorKind.",0,[[],["errorkind"]]],[0,"simple_errors","","Error management",null,null],[6,"Err","nom::simple_errors","",null,null],[11,"map_err","nom","Maps a `IResult<I, O, E>` to `IResult<I, O, N>` by appling…",3,[[["f"]],["iresult"]]],[11,"unwrap_err","","Unwrap the contained `Error(E)` value, or panic if the…",3,[[],["err"]]],[11,"to_full_result","","Convert the IResult to a std::result::Result",3,[[],[["result",["ierror"]],["ierror"]]]],[11,"to_result","","Convert the IResult to a std::result::Result, or panic if…",3,[[],[["result",["err"]],["err"]]]],[11,"is_known","","",2,[[["self"]],["bool"]]],[11,"map","","Maps a `Needed` to `Needed` by appling a function to a…",2,[[["fnonce"]],["needed"]]],[11,"is_done","","",3,[[["self"]],["bool"]]],[11,"is_err","","",3,[[["self"]],["bool"]]],[11,"is_incomplete","","",3,[[["self"]],["bool"]]],[11,"or","","",3,[[["iresult"]],["iresult"]]],[11,"map","","Maps a `IResult<I, O, E>` to `IResult<I, N, E>` by appling…",3,[[["fnonce"]],["iresult"]]],[11,"map_inc","","Maps a `IResult<I, O, E>` to `IResult<I, O, E>` by appling…",3,[[["f"]],["iresult"]]],[11,"unwrap","","Unwrap the contained `Done(I, O)` value, or panic if the…",3,[[]]],[11,"unwrap_or","","Unwrap the contained `Done(I, O)` value or a default if…",3,[[]]],[11,"unwrap_inc","","Unwrap the contained `Incomplete(n)` value, or panic if…",3,[[],["needed"]]],[0,"methods","","Method macro combinators",null,null],[0,"bits","","Bit level parsers and combinators",null,null],[0,"whitespace","","Support for whitespace delimited formats",null,null],[5,"sp","nom::whitespace","",null,[[["t"]],["iresult"]]],[11,"map","nom","",7,[[["self"],["f"]],["consumerstate"]]],[11,"flat_map","","",7,[[["self"],["f"]],["consumerstate"]]],[11,"new","","",10,[[["usize"]],["memproducer"]]],[11,"new","","",11,[[["str"],["usize"]],[["result",["fileproducer"]],["fileproducer"]]]],[11,"state","","",11,[[["self"]],["fileproducerstate"]]],[11,"refill","","",11,[[["self"]],[["usize"],["option",["usize"]]]]],[11,"resize","","Resize the internal buffer, copy the data to the new one…",11,[[["self"],["usize"]],["usize"]]],[11,"new","","",12,[[["c"],["f"]],["mapconsumer"]]],[11,"new","","",13,[[["c1"],["c2"]],["chainconsumer"]]],[8,"Offset","","useful functions to calculate the offset between slices…",null,null],[10,"offset","","offset between the first byte of self and the first byte…",14,[[["self"]],["usize"]]],[8,"HexDisplay","","",null,null],[10,"to_hex","","Converts the value of `self` to a hex dump, returning the…",15,[[["self"],["usize"]],["string"]]],[10,"to_hex_from","","Converts the value of `self` to a hex dump beginning at…",15,[[["self"],["usize"]],["string"]]],[8,"AsBytes","","",null,null],[10,"as_bytes","","",16,[[["self"]]]],[8,"InputLength","","abstract method to calculate the input length",null,null],[10,"input_len","","calculates the input length, as indicated by its name, and…",17,[[["self"]],["usize"]]],[8,"AsChar","","transforms common types to a char for basic token parsing",null,null],[10,"as_char","","makes a char from self",18,[[],["char"]]],[10,"is_alpha","","tests that self is an alphabetic character",18,[[],["bool"]]],[10,"is_alphanum","","tests that self is an alphabetic character or a decimal…",18,[[],["bool"]]],[10,"is_dec_digit","","tests that self is a decimal digit",18,[[],["bool"]]],[10,"is_hex_digit","","tests that self is an hex digit",18,[[],["bool"]]],[10,"is_oct_digit","","tests that self is an octal digit",18,[[],["bool"]]],[10,"len","","gets the len in bytes for self",18,[[],["usize"]]],[8,"InputIter","","abstracts common iteration operations on the input type",null,null],[16,"Item","","",19,null],[16,"RawItem","","",19,null],[16,"Iter","","",19,null],[16,"IterElem","","",19,null],[10,"iter_indices","","returns an iterator over the elements and their byte offsets",19,[[["self"]]]],[10,"iter_elements","","returns an iterator over the elements",19,[[["self"]]]],[10,"position","","finds the byte position of the element",19,[[["self"],["p"]],[["usize"],["option",["usize"]]]]],[10,"slice_index","","get the byte offset from the element's position in the…",19,[[["self"],["usize"]],[["usize"],["option",["usize"]]]]],[8,"InputTake","","abstracts slicing operations",null,null],[10,"take","","returns a slice of `count` bytes",20,[[["self"],["usize"]],[["option"],["self"]]]],[10,"take_split","","split the stream at the `count` byte offset",20,[[["self"],["usize"]],["option"]]],[8,"Compare","","abstracts comparison operations",null,null],[10,"compare","","compares self to another value for equality",21,[[["self"],["t"]],["compareresult"]]],[10,"compare_no_case","","compares self to another value for equality independently…",21,[[["self"],["t"]],["compareresult"]]],[8,"FindToken","","look for self in the given input stream",null,null],[10,"find_token","","",22,[[["self"],["t"]],["bool"]]],[8,"FindSubstring","","look for a substring in self",null,null],[10,"find_substring","","",23,[[["self"],["t"]],[["usize"],["option",["usize"]]]]],[8,"ParseTo","","used to integrate str's parse() method",null,null],[10,"parse_to","","",24,[[["self"]],["option"]]],[8,"Slice","","slicing operations using ranges",null,null],[10,"slice","","",25,[[["self"],["r"]],["self"]]],[8,"GetInput","","",null,null],[10,"remaining_input","","",26,[[["self"]],["option"]]],[8,"GetOutput","","",null,null],[10,"output","","",27,[[["self"]],["option"]]],[8,"Consumer","","The Consumer trait wraps a computation and its state",null,null],[10,"handle","","implement handle for the current computation, returning…",28,[[["self"],["input"]],["consumerstate"]]],[10,"state","","returns the current state",28,[[["self"]],["consumerstate"]]],[8,"Producer","","The producer wraps a data source, like file or network,…",null,null],[10,"apply","","Applies a consumer once on the produced data, and return…",29,[[["self"],["consumer"]],["consumerstate"]]],[11,"run","","Applies a consumer once on the produced data, and returns…",29,[[["self"],["consumer"]],[["option"],["o"]]]],[14,"compiler_error","","",null,null],[14,"dbg","","Prints a message if the parser fails",null,null],[14,"dbg_dmp","","Prints a message and the input if the parser fails",null,null],[14,"fix_error","","translate parser result from IResult<I,O,u32> to…",null,null],[14,"flat_map","","`flat_map!(R -> IResult<R,S>, S -> IResult<S,T>) => R ->…",null,null],[14,"error_code","","creates a parse error from a `nom::ErrorKind`",null,null],[14,"error_node","","creates a parse error from a `nom::ErrorKind` and the next…",null,null],[14,"error_position","","creates a parse error from a `nom::ErrorKind` and the…",null,null],[14,"error_node_position","","creates a parse error from a `nom::ErrorKind`, the…",null,null],[14,"closure","","Wraps a parser in a closure",null,null],[14,"named","","Makes a function from a parser combination",null,null],[14,"named_args","","Makes a function from a parser combination with arguments.",null,null],[14,"named_attr","","Makes a function from a parser combination, with attributes",null,null],[14,"call","","Used to wrap common expressions and function as macros",null,null],[14,"apply","","emulate function currying: `apply!(my_function, arg1,…",null,null],[14,"return_error","","Prevents backtracking if the child parser fails",null,null],[14,"add_return_error","","Add an error if the child parser fails",null,null],[14,"complete","","replaces a `Incomplete` returned by the child parser with…",null,null],[14,"try_parse","","A bit like `std::try!`, this macro will return the…",null,null],[14,"map","","`map!(I -> IResult<I,O>, O -> P) => I -> IResult<I, P>`…",null,null],[14,"map_res","","`map_res!(I -> IResult<I,O>, O -> Result<P>) => I ->…",null,null],[14,"map_opt","","`map_opt!(I -> IResult<I,O>, O -> Option<P>) => I ->…",null,null],[14,"parse_to","","`parse_to!(O) => I -> IResult<I, O>` uses the `parse`…",null,null],[14,"verify","","`verify!(I -> IResult<I,O>, O -> bool) => I -> IResult<I,…",null,null],[14,"value","","`value!(T, R -> IResult<R, S> ) => R -> IResult<R, T>`",null,null],[14,"expr_res","","`expr_res!(Result<E,O>) => I -> IResult<I, O>` evaluate an…",null,null],[14,"expr_opt","","`expr_opt!(Option<O>) => I -> IResult<I, O>` evaluate an…",null,null],[14,"opt","","`opt!(I -> IResult<I,O>) => I -> IResult<I, Option<O>>`…",null,null],[14,"opt_res","","`opt_res!(I -> IResult<I,O>) => I -> IResult<I,…",null,null],[14,"cond_with_error","","`cond_with_error!(bool, I -> IResult<I,O>) => I ->…",null,null],[14,"cond","","`cond!(bool, I -> IResult<I,O>) => I -> IResult<I,…",null,null],[14,"cond_reduce","","`cond_reduce!(bool, I -> IResult<I,O>) => I -> IResult<I,…",null,null],[14,"peek","","`peek!(I -> IResult<I,O>) => I -> IResult<I, O>` returns a…",null,null],[14,"not","","`not!(I -> IResult<I,O>) => I -> IResult<I, O>` returns a…",null,null],[14,"tap","","`tap!(name: I -> IResult<I,O> => { block }) => I ->…",null,null],[14,"eof","","`eof!()` returns its input if it is at the end of input data",null,null],[14,"recognize","","`recognize!(I -> IResult<I, O> ) => I -> IResult<I, I>` if…",null,null],[14,"alt","","Try a list of parsers and return the result of the first…",null,null],[14,"alt_complete","","Is equivalent to the `alt!` combinator, except that it…",null,null],[14,"switch","","`switch!(I -> IResult<I,P>, P => I -> IResult<I,O> | ... |…",null,null],[14,"permutation","","`permutation!(I -> IResult<I,A>, I -> IResult<I,B>, ... I…",null,null],[14,"tuple","","`tuple!(I->IResult<I,A>, I->IResult<I,B>, ...…",null,null],[14,"pair","","`pair!(I -> IResult<I,O>, I -> IResult<I,P>) => I ->…",null,null],[14,"separated_pair","","`separated_pair!(I -> IResult<I,O>, I -> IResult<I, T>, I…",null,null],[14,"preceded","","`preceded!(I -> IResult<I,T>, I -> IResult<I,O>) => I ->…",null,null],[14,"terminated","","`terminated!(I -> IResult<I,O>, I -> IResult<I,T>) => I ->…",null,null],[14,"delimited","","`delimited!(I -> IResult<I,T>, I -> IResult<I,O>, I ->…",null,null],[14,"do_parse","","`do_parse!(I->IResult<I,A> >> I->IResult<I,B> >> ...…",null,null],[14,"separated_list","","`separated_list!(I -> IResult<I,T>, I -> IResult<I,O>) =>…",null,null],[14,"separated_nonempty_list","","`separated_nonempty_list!(I -> IResult<I,T>, I ->…",null,null],[14,"separated_list_complete","","`separated_list_complete!(I -> IResult<I,T>, I ->…",null,null],[14,"separated_nonempty_list_complete","","`separated_nonempty_list_complete!(I -> IResult<I,T>, I ->…",null,null],[14,"many0","","`many0!(I -> IResult<I,O>) => I -> IResult<I, Vec<O>>`…",null,null],[14,"many1","","`many1!(I -> IResult<I,O>) => I -> IResult<I, Vec<O>>`…",null,null],[14,"many_till","","`many_till!(I -> IResult<I,O>, I -> IResult<I,P>) => I ->…",null,null],[14,"many_m_n","","`many_m_n!(usize, usize, I -> IResult<I,O>) => I ->…",null,null],[14,"count","","`count!(I -> IResult<I,O>, nb) => I -> IResult<I, Vec<O>>`…",null,null],[14,"count_fixed","","`count_fixed!(O, I -> IResult<I,O>, nb) => I -> IResult<I,…",null,null],[14,"length_count","","`length_count!(I -> IResult<I, nb>, I -> IResult<I,O>) =>…",null,null],[14,"length_data","","`length_data!(I -> IResult<I, nb>) => O`",null,null],[14,"length_value","","`length_value!(I -> IResult<I, nb>, I -> IResult<I,O>) =>…",null,null],[14,"fold_many0","","`fold_many0!(I -> IResult<I,O>, R, Fn(R, O) -> R) => I ->…",null,null],[14,"fold_many1","","`fold_many1!(I -> IResult<I,O>, R, Fn(R, O) -> R) => I ->…",null,null],[14,"fold_many_m_n","","`fold_many_m_n!(usize, usize, I -> IResult<I,O>, R, Fn(R,…",null,null],[14,"method","","Makes a method from a parser combination",null,null],[14,"call_m","","Used to called methods then move self back into self",null,null],[14,"apply_m","","emulate function currying for method calls on structs…",null,null],[14,"tag","","`tag!(&[T]: nom::AsBytes) => &[T] -> IResult<&[T], &[T]>`…",null,null],[14,"tag_no_case","","`tag_no_case!(&[T]) => &[T] -> IResult<&[T], &[T]>`…",null,null],[14,"is_not","","`is_not!(&[T:AsBytes]) => &[T] -> IResult<&[T], &[T]>`…",null,null],[14,"is_a","","`is_a!(&[T]) => &[T] -> IResult<&[T], &[T]>` returns the…",null,null],[14,"escaped","","`escaped!(&[T] -> IResult<&[T], &[T]>, T, &[T] ->…",null,null],[14,"escaped_transform","","`escaped_transform!(&[T] -> IResult<&[T], &[T]>, T, &[T]…",null,null],[14,"take_while","","`take_while!(T -> bool) => &[T] -> IResult<&[T], &[T]>`…",null,null],[14,"take_while1","","`take_while1!(T -> bool) => &[T] -> IResult<&[T], &[T]>`…",null,null],[14,"take_till","","`take_till!(T -> bool) => &[T] -> IResult<&[T], &[T]>`…",null,null],[14,"take_till1","","`take_till1!(T -> bool) => &[T] -> IResult<&[T], &[T]>`…",null,null],[14,"take","","`take!(nb) => &[T] -> IResult<&[T], &[T]>` generates a…",null,null],[14,"take_str","","`take_str!(nb) => &[T] -> IResult<&[T], &str>` same as…",null,null],[14,"take_until_and_consume","","`take_until_and_consume!(tag) => &[T] -> IResult<&[T],…",null,null],[14,"take_until_and_consume1","","`take_until_and_consume1!(tag) => &[T] -> IResult<&[T],…",null,null],[14,"take_until","","`take_until!(tag) => &[T] -> IResult<&[T], &[T]>` consumes…",null,null],[14,"take_until1","","`take_until1!(tag) => &[T] -> IResult<&[T], &[T]>`…",null,null],[14,"take_until_either_and_consume","","`take_until_either_and_consume!(tag) => &[T] ->…",null,null],[14,"take_until_either","","`take_until_either!(tag) => &[T] -> IResult<&[T], &[T]>`",null,null],[14,"length_bytes","","`length_bytes!(&[T] -> IResult<&[T], nb>) => &[T] ->…",null,null],[14,"bits","","`bits!( parser ) => ( &[u8], (&[u8], usize) ->…",null,null],[14,"bytes","","Counterpart to bits, `bytes!( parser ) => ( (&[u8],…",null,null],[14,"take_bits","","`take_bits!(type, nb) => ( (&[T], usize), U, usize) ->…",null,null],[14,"tag_bits","","matches an integer pattern to a bitstream. The number of…",null,null],[14,"u16","","if the parameter is nom::Endianness::Big, parse a big…",null,null],[14,"u32","","if the parameter is nom::Endianness::Big, parse a big…",null,null],[14,"u64","","if the parameter is nom::Endianness::Big, parse a big…",null,null],[14,"i16","","if the parameter is nom::Endianness::Big, parse a big…",null,null],[14,"i32","","if the parameter is nom::Endianness::Big, parse a big…",null,null],[14,"i64","","if the parameter is nom::Endianness::Big, parse a big…",null,null],[14,"one_of","","matches one of the provided characters",null,null],[14,"none_of","","matches anything but the provided characters",null,null],[14,"char","","matches one character: `char!(char) => &[u8] ->…",null,null],[14,"wrap_sep","","",null,null],[14,"eat_separator","","helper macros to build a separator parser",null,null],[14,"sep","","sep is the parser rewriting macro for whitespace separated…",null,null],[14,"ws","","`ws!(I -> IResult<I,O>) => I -> IResult<I, O>`",null,null],[14,"consumer_from_parser","","",null,null],[14,"tag_s","","`tag_s!(&str) => &str -> IResult<&str, &str>` declares a…",null,null],[14,"tag_no_case_s","","`tag_no_case_s!(&str) => &str -> IResult<&str, &str>`…",null,null],[14,"take_s","","`take_s!(nb) => &str -> IResult<&str, &str>` generates a…",null,null],[14,"is_not_s","","`is_not_s!(&str) => &str -> IResult<&str, &str>` returns…",null,null],[14,"is_a_s","","`is_a_s!(&str) => &str -> IResult<&str, &str>` returns the…",null,null],[14,"take_while_s","","`take_while_s!(char -> bool) => &str -> IResult<&str,…",null,null],[14,"take_while1_s","","`take_while1_s!(char -> bool) => &str -> IResult<&str,…",null,null],[14,"take_till_s","","`take_till_s!(char -> bool) => &str -> IResult<&str,…",null,null],[14,"take_till1_s","","`take_till1_s!(char -> bool) => &str -> IResult<&str,…",null,null],[14,"take_until_and_consume_s","","`take_until_and_consume_s!(&str) => &str -> IResult<&str,…",null,null],[14,"take_until_s","","`take_until_s!(&str) => &str -> IResult<&str, &str>`…",null,null],[11,"from","","",30,[[["t"]],["t"]]],[11,"into","","",30,[[],["u"]]],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"try_into","","",30,[[],["result"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"type_id","","",30,[[["self"]],["typeid"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[],["u"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[],["u"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"try_into","","",11,[[],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"type_id","","",11,[[["self"]],["typeid"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[],["u"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"try_into","","",12,[[],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"type_id","","",12,[[["self"]],["typeid"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"into","","",13,[[],["u"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"try_into","","",13,[[],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"type_id","","",13,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,[[["self"],["t"]]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,[[["self"],["t"]]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,[[["self"],["t"]]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,[[["self"],["t"]]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,[[["self"],["t"]]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[],["u"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,[[["self"],["t"]]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"remaining_input","","",3,[[["self"]],["option"]]],[11,"remaining_input","","",3,[[["self"]],["option"]]],[11,"remaining_input","","",3,[[["self"]],[["str"],["option",["str"]]]]],[11,"output","","",3,[[["self"]],["option"]]],[11,"output","","",3,[[["self"]],["option"]]],[11,"output","","",3,[[["self"]],[["str"],["option",["str"]]]]],[11,"handle","","",12,[[["input"],["self"]],["consumerstate"]]],[11,"state","","",12,[[["self"]],["consumerstate"]]],[11,"handle","","",13,[[["input"],["self"]],["consumerstate"]]],[11,"state","","",13,[[["self"]],["consumerstate"]]],[11,"apply","","",30,[[["self"],["consumer"]],["consumerstate"]]],[11,"apply","","",10,[[["self"],["consumer"]],["consumerstate"]]],[11,"apply","","",11,[[["self"],["consumer"]],["consumerstate"]]],[11,"clone","","",0,[[["self"]],["errorkind"]]],[11,"clone","","",2,[[["self"]],["needed"]]],[11,"clone","","",3,[[["self"]],["iresult"]]],[11,"clone","","",4,[[["self"]],["ierror"]]],[11,"clone","","",5,[[["self"]],["endianness"]]],[11,"clone","","",6,[[["self"]],["input"]]],[11,"clone","","",7,[[["self"]],["consumerstate"]]],[11,"clone","","",8,[[["self"]],["move"]]],[11,"clone","","",9,[[["self"]],["fileproducerstate"]]],[11,"eq","","",0,[[["errorkind"],["self"]],["bool"]]],[11,"ne","","",0,[[["errorkind"],["self"]],["bool"]]],[11,"eq","","",1,[[["compareresult"],["self"]],["bool"]]],[11,"eq","","",2,[[["self"],["needed"]],["bool"]]],[11,"ne","","",2,[[["self"],["needed"]],["bool"]]],[11,"eq","","",3,[[["iresult"],["self"]],["bool"]]],[11,"ne","","",3,[[["iresult"],["self"]],["bool"]]],[11,"eq","","",4,[[["self"],["ierror"]],["bool"]]],[11,"ne","","",4,[[["self"],["ierror"]],["bool"]]],[11,"eq","","",5,[[["endianness"],["self"]],["bool"]]],[11,"eq","","",8,[[["self"],["move"]],["bool"]]],[11,"ne","","",8,[[["self"],["move"]],["bool"]]],[11,"eq","","",9,[[["self"],["fileproducerstate"]],["bool"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",6,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",7,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",8,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",9,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",11,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",31,[[["formatter"],["self"]],["result"]]],[11,"hash","","",0,[[["self"],["__h"]]]],[11,"description","","",31,[[["self"]],["str"]]],[11,"run","","Applies a consumer once on the produced data, and returns…",29,[[["self"],["consumer"]],[["option"],["o"]]]]],"p":[[4,"ErrorKind"],[4,"CompareResult"],[4,"Needed"],[4,"IResult"],[4,"IError"],[4,"Endianness"],[4,"Input"],[4,"ConsumerState"],[4,"Move"],[4,"FileProducerState"],[3,"MemProducer"],[3,"FileProducer"],[3,"MapConsumer"],[3,"ChainConsumer"],[8,"Offset"],[8,"HexDisplay"],[8,"AsBytes"],[8,"InputLength"],[8,"AsChar"],[8,"InputIter"],[8,"InputTake"],[8,"Compare"],[8,"FindToken"],[8,"FindSubstring"],[8,"ParseTo"],[8,"Slice"],[8,"GetInput"],[8,"GetOutput"],[8,"Consumer"],[8,"Producer"],[3,"ProducerRepeat"],[6,"Err"]]};
searchIndex["num_cpus"] = {"doc":"A crate with utilities to determine the number of CPUs…","i":[[5,"get","num_cpus","Returns the number of available CPUs of the current system.",null,[[],["usize"]]],[5,"get_physical","","Returns the number of physical cores of the current system.",null,[[],["usize"]]]],"p":[]};
searchIndex["num_integer"] = {"doc":"Integer trait and functions.","i":[[3,"ExtendedGcd","num_integer","Greatest common divisor and Bézout coefficients",null,null],[12,"gcd","","",0,null],[12,"x","","",0,null],[12,"y","","",0,null],[3,"IterBinomial","","An iterator over binomial coefficients.",null,null],[5,"cbrt","","Returns the truncated principal cube root of an integer --…",null,[[["roots"]],["roots"]]],[5,"nth_root","","Returns the truncated principal `n`th root of an integer…",null,[[["u32"],["roots"]],["roots"]]],[5,"sqrt","","Returns the truncated principal square root of an integer…",null,[[["roots"]],["roots"]]],[5,"div_rem","","Simultaneous integer division and modulus",null,[[["integer"]]]],[5,"div_floor","","Floored integer division",null,[[["integer"]],["integer"]]],[5,"mod_floor","","Floored integer modulus",null,[[["integer"]],["integer"]]],[5,"div_mod_floor","","Simultaneous floored integer division and modulus",null,[[["integer"]]]],[5,"div_ceil","","Ceiled integer division",null,[[["integer"]],["integer"]]],[5,"gcd","","Calculates the Greatest Common Divisor (GCD) of the number…",null,[[["integer"]],["integer"]]],[5,"lcm","","Calculates the Lowest Common Multiple (LCM) of the number…",null,[[["integer"]],["integer"]]],[5,"gcd_lcm","","Calculates the Greatest Common Divisor (GCD) and Lowest…",null,[[["integer"]]]],[5,"binomial","","Calculate the binomial coefficient.",null,[[["integer"],["clone"]],[["integer"],["clone"]]]],[5,"multinomial","","Calculate the multinomial coefficient.",null,[[],[["integer"],["clone"]]]],[8,"Roots","","Provides methods to compute an integer's square root, cube…",null,null],[10,"nth_root","","Returns the truncated principal `n`th root of an integer…",1,[[["u32"],["self"]],["self"]]],[11,"sqrt","","Returns the truncated principal square root of an integer…",1,[[["self"]],["self"]]],[11,"cbrt","","Returns the truncated principal cube root of an integer --…",1,[[["self"]],["self"]]],[8,"Integer","","",null,null],[10,"div_floor","","Floored integer division.",2,[[["self"]],["self"]]],[10,"mod_floor","","Floored integer modulo, satisfying:",2,[[["self"]],["self"]]],[11,"div_ceil","","Ceiled integer division.",2,[[["self"]],["self"]]],[10,"gcd","","Greatest Common Divisor (GCD).",2,[[["self"]],["self"]]],[10,"lcm","","Lowest Common Multiple (LCM).",2,[[["self"]],["self"]]],[11,"gcd_lcm","","Greatest Common Divisor (GCD) and Lowest Common Multiple…",2,[[["self"]]]],[11,"extended_gcd","","Greatest common divisor and Bézout coefficients.",2,[[["self"]],["extendedgcd"]]],[11,"extended_gcd_lcm","","Greatest common divisor, least common multiple, and Bézout…",2,[[["self"]]]],[10,"divides","","Deprecated, use `is_multiple_of` instead.",2,[[["self"]],["bool"]]],[10,"is_multiple_of","","Returns `true` if `self` is a multiple of `other`.",2,[[["self"]],["bool"]]],[10,"is_even","","Returns `true` if the number is even.",2,[[["self"]],["bool"]]],[10,"is_odd","","Returns `true` if the number is odd.",2,[[["self"]],["bool"]]],[10,"div_rem","","Simultaneous truncated integer division and modulus.…",2,[[["self"]]]],[11,"div_mod_floor","","Simultaneous floored integer division and modulus. Returns…",2,[[["self"]]]],[11,"next_multiple_of","","Rounds up to nearest multiple of argument.",2,[[["self"]],["self"]]],[11,"prev_multiple_of","","Rounds down to nearest multiple of argument.",2,[[["self"]],["self"]]],[11,"new","","For a given n, iterate over all binomial coefficients…",3,[[["t"]],["iterbinomial"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"into","","",0,[[],["u"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into_iter","","",3,[[],["i"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"into","","",3,[[],["u"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"eq","","",0,[[["self"],["extendedgcd"]],["bool"]]],[11,"ne","","",0,[[["self"],["extendedgcd"]],["bool"]]],[11,"next","","",3,[[["self"]],["option"]]],[11,"clone","","",0,[[["self"]],["extendedgcd"]]],[11,"sqrt","","Returns the truncated principal square root of an integer…",1,[[["self"]],["self"]]],[11,"cbrt","","Returns the truncated principal cube root of an integer --…",1,[[["self"]],["self"]]]],"p":[[3,"ExtendedGcd"],[8,"Roots"],[8,"Integer"],[3,"IterBinomial"]]};
searchIndex["num_traits"] = {"doc":"Numeric traits for generic mathematics","i":[[3,"ParseFloatError","num_traits","",null,null],[12,"kind","","",0,null],[4,"FloatErrorKind","","",null,null],[13,"Empty","","",1,null],[13,"Invalid","","",1,null],[5,"clamp","","A value bounded by a minimum and a maximum",null,[[["partialord"]],["partialord"]]],[5,"clamp_min","","A value bounded by a minimum value",null,[[["partialord"]],["partialord"]]],[5,"clamp_max","","A value bounded by a maximum value",null,[[["partialord"]],["partialord"]]],[0,"bounds","","",null,null],[8,"Bounded","num_traits::bounds","Numbers which have upper and lower bounds",null,null],[10,"min_value","","returns the smallest finite number this type can represent",2,[[],["self"]]],[10,"max_value","","returns the largest finite number this type can represent",2,[[],["self"]]],[0,"cast","num_traits","",null,null],[5,"cast","num_traits::cast","Cast from one machine scalar to another.",null,[[["numcast"]],[["option"],["numcast"]]]],[8,"ToPrimitive","","A generic trait for converting a value to a number.",null,null],[11,"to_isize","","Converts the value of `self` to an `isize`. If the value…",3,[[["self"]],[["isize"],["option",["isize"]]]]],[11,"to_i8","","Converts the value of `self` to an `i8`. If the value…",3,[[["self"]],[["option",["i8"]],["i8"]]]],[11,"to_i16","","Converts the value of `self` to an `i16`. If the value…",3,[[["self"]],[["option",["i16"]],["i16"]]]],[11,"to_i32","","Converts the value of `self` to an `i32`. If the value…",3,[[["self"]],[["i32"],["option",["i32"]]]]],[10,"to_i64","","Converts the value of `self` to an `i64`. If the value…",3,[[["self"]],[["i64"],["option",["i64"]]]]],[11,"to_i128","","Converts the value of `self` to an `i128`. If the value…",3,[[["self"]],[["option",["i128"]],["i128"]]]],[11,"to_usize","","Converts the value of `self` to a `usize`. If the value…",3,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"to_u8","","Converts the value of `self` to a `u8`. If the value…",3,[[["self"]],[["option",["u8"]],["u8"]]]],[11,"to_u16","","Converts the value of `self` to a `u16`. If the value…",3,[[["self"]],[["option",["u16"]],["u16"]]]],[11,"to_u32","","Converts the value of `self` to a `u32`. If the value…",3,[[["self"]],[["u32"],["option",["u32"]]]]],[10,"to_u64","","Converts the value of `self` to a `u64`. If the value…",3,[[["self"]],[["option",["u64"]],["u64"]]]],[11,"to_u128","","Converts the value of `self` to a `u128`. If the value…",3,[[["self"]],[["u128"],["option",["u128"]]]]],[11,"to_f32","","Converts the value of `self` to an `f32`. If the value…",3,[[["self"]],[["option",["f32"]],["f32"]]]],[11,"to_f64","","Converts the value of `self` to an `f64`. If the value…",3,[[["self"]],[["option",["f64"]],["f64"]]]],[8,"FromPrimitive","","A generic trait for converting a number to a value.",null,null],[11,"from_isize","","Converts an `isize` to return an optional value of this…",4,[[["isize"]],["option"]]],[11,"from_i8","","Converts an `i8` to return an optional value of this type.…",4,[[["i8"]],["option"]]],[11,"from_i16","","Converts an `i16` to return an optional value of this…",4,[[["i16"]],["option"]]],[11,"from_i32","","Converts an `i32` to return an optional value of this…",4,[[["i32"]],["option"]]],[10,"from_i64","","Converts an `i64` to return an optional value of this…",4,[[["i64"]],["option"]]],[11,"from_i128","","Converts an `i128` to return an optional value of this…",4,[[["i128"]],["option"]]],[11,"from_usize","","Converts a `usize` to return an optional value of this…",4,[[["usize"]],["option"]]],[11,"from_u8","","Converts an `u8` to return an optional value of this type.…",4,[[["u8"]],["option"]]],[11,"from_u16","","Converts an `u16` to return an optional value of this…",4,[[["u16"]],["option"]]],[11,"from_u32","","Converts an `u32` to return an optional value of this…",4,[[["u32"]],["option"]]],[10,"from_u64","","Converts an `u64` to return an optional value of this…",4,[[["u64"]],["option"]]],[11,"from_u128","","Converts an `u128` to return an optional value of this…",4,[[["u128"]],["option"]]],[11,"from_f32","","Converts a `f32` to return an optional value of this type.…",4,[[["f32"]],["option"]]],[11,"from_f64","","Converts a `f64` to return an optional value of this type.…",4,[[["f64"]],["option"]]],[8,"NumCast","","An interface for casting between machine scalars.",null,null],[10,"from","","Creates a number from another value that can be converted…",5,[[["toprimitive"]],["option"]]],[8,"AsPrimitive","","A generic interface for casting between machine scalars…",null,null],[10,"as_","","Convert a value to another, using the `as` operator.",6,[[],["t"]]],[0,"float","num_traits","",null,null],[8,"FloatCore","num_traits::float","Generic trait for floating point numbers that works with…",null,null],[10,"infinity","","Returns positive infinity.",7,[[],["self"]]],[10,"neg_infinity","","Returns negative infinity.",7,[[],["self"]]],[10,"nan","","Returns NaN.",7,[[],["self"]]],[10,"neg_zero","","Returns `-0.0`.",7,[[],["self"]]],[10,"min_value","","Returns the smallest finite value that this type can…",7,[[],["self"]]],[10,"min_positive_value","","Returns the smallest positive, normalized value that this…",7,[[],["self"]]],[10,"epsilon","","Returns epsilon, a small positive value.",7,[[],["self"]]],[10,"max_value","","Returns the largest finite value that this type can…",7,[[],["self"]]],[11,"is_nan","","Returns `true` if the number is NaN.",7,[[],["bool"]]],[11,"is_infinite","","Returns `true` if the number is infinite.",7,[[],["bool"]]],[11,"is_finite","","Returns `true` if the number is neither infinite or NaN.",7,[[],["bool"]]],[11,"is_normal","","Returns `true` if the number is neither zero, infinite,…",7,[[],["bool"]]],[10,"classify","","Returns the floating point category of the number. If only…",7,[[],["fpcategory"]]],[11,"floor","","Returns the largest integer less than or equal to a number.",7,[[],["self"]]],[11,"ceil","","Returns the smallest integer greater than or equal to a…",7,[[],["self"]]],[11,"round","","Returns the nearest integer to a number. Round half-way…",7,[[],["self"]]],[11,"trunc","","Return the integer part of a number.",7,[[],["self"]]],[11,"fract","","Returns the fractional part of a number.",7,[[],["self"]]],[11,"abs","","Computes the absolute value of `self`. Returns…",7,[[],["self"]]],[11,"signum","","Returns a number that represents the sign of `self`.",7,[[],["self"]]],[11,"is_sign_positive","","Returns `true` if `self` is positive, including `+0.0` and…",7,[[],["bool"]]],[11,"is_sign_negative","","Returns `true` if `self` is negative, including `-0.0` and…",7,[[],["bool"]]],[11,"min","","Returns the minimum of the two numbers.",7,[[],["self"]]],[11,"max","","Returns the maximum of the two numbers.",7,[[],["self"]]],[11,"recip","","Returns the reciprocal (multiplicative inverse) of the…",7,[[],["self"]]],[11,"powi","","Raise a number to an integer power.",7,[[["i32"]],["self"]]],[10,"to_degrees","","Converts to degrees, assuming the number is in radians.",7,[[],["self"]]],[10,"to_radians","","Converts to radians, assuming the number is in degrees.",7,[[],["self"]]],[10,"integer_decode","","Returns the mantissa, base 2 exponent, and sign as…",7,[[]]],[8,"FloatConst","","",null,null],[10,"E","","Return Euler’s number.",8,[[],["self"]]],[10,"FRAC_1_PI","","Return `1.0 / π`.",8,[[],["self"]]],[10,"FRAC_1_SQRT_2","","Return `1.0 / sqrt(2.0)`.",8,[[],["self"]]],[10,"FRAC_2_PI","","Return `2.0 / π`.",8,[[],["self"]]],[10,"FRAC_2_SQRT_PI","","Return `2.0 / sqrt(π)`.",8,[[],["self"]]],[10,"FRAC_PI_2","","Return `π / 2.0`.",8,[[],["self"]]],[10,"FRAC_PI_3","","Return `π / 3.0`.",8,[[],["self"]]],[10,"FRAC_PI_4","","Return `π / 4.0`.",8,[[],["self"]]],[10,"FRAC_PI_6","","Return `π / 6.0`.",8,[[],["self"]]],[10,"FRAC_PI_8","","Return `π / 8.0`.",8,[[],["self"]]],[10,"LN_10","","Return `ln(10.0)`.",8,[[],["self"]]],[10,"LN_2","","Return `ln(2.0)`.",8,[[],["self"]]],[10,"LOG10_E","","Return `log10(e)`.",8,[[],["self"]]],[10,"LOG2_E","","Return `log2(e)`.",8,[[],["self"]]],[10,"PI","","Return Archimedes’ constant `π`.",8,[[],["self"]]],[10,"SQRT_2","","Return `sqrt(2.0)`.",8,[[],["self"]]],[11,"TAU","","Return the full circle constant `τ`.",8,[[],["self"]]],[0,"identities","num_traits","",null,null],[5,"zero","num_traits::identities","Returns the additive identity, `0`.",null,[[],["zero"]]],[5,"one","","Returns the multiplicative identity, `1`.",null,[[],["one"]]],[8,"Zero","","Defines an additive identity element for `Self`.",null,null],[10,"zero","","Returns the additive identity element of `Self`, `0`. #…",9,[[],["self"]]],[11,"set_zero","","Sets `self` to the additive identity element of `Self`, `0`.",9,[[["self"]]]],[10,"is_zero","","Returns `true` if `self` is equal to the additive identity.",9,[[["self"]],["bool"]]],[8,"One","","Defines a multiplicative identity element for `Self`.",null,null],[10,"one","","Returns the multiplicative identity element of `Self`, `1`.",10,[[],["self"]]],[11,"set_one","","Sets `self` to the multiplicative identity element of…",10,[[["self"]]]],[11,"is_one","","Returns `true` if `self` is equal to the multiplicative…",10,[[["self"]],["bool"]]],[0,"int","num_traits","",null,null],[8,"PrimInt","num_traits::int","Generic trait for primitive integers.",null,null],[10,"count_ones","","Returns the number of ones in the binary representation of…",11,[[],["u32"]]],[10,"count_zeros","","Returns the number of zeros in the binary representation…",11,[[],["u32"]]],[10,"leading_zeros","","Returns the number of leading zeros in the binary…",11,[[],["u32"]]],[10,"trailing_zeros","","Returns the number of trailing zeros in the binary…",11,[[],["u32"]]],[10,"rotate_left","","Shifts the bits to the left by a specified amount amount,…",11,[[["u32"]],["self"]]],[10,"rotate_right","","Shifts the bits to the right by a specified amount amount,…",11,[[["u32"]],["self"]]],[10,"signed_shl","","Shifts the bits to the left by a specified amount amount,…",11,[[["u32"]],["self"]]],[10,"signed_shr","","Shifts the bits to the right by a specified amount amount,…",11,[[["u32"]],["self"]]],[10,"unsigned_shl","","Shifts the bits to the left by a specified amount amount,…",11,[[["u32"]],["self"]]],[10,"unsigned_shr","","Shifts the bits to the right by a specified amount amount,…",11,[[["u32"]],["self"]]],[10,"swap_bytes","","Reverses the byte order of the integer.",11,[[],["self"]]],[10,"from_be","","Convert an integer from big endian to the target's…",11,[[],["self"]]],[10,"from_le","","Convert an integer from little endian to the target's…",11,[[],["self"]]],[10,"to_be","","Convert `self` to big endian from the target's endianness.",11,[[],["self"]]],[10,"to_le","","Convert `self` to little endian from the target's…",11,[[],["self"]]],[10,"pow","","Raises self to the power of `exp`, using exponentiation by…",11,[[["u32"]],["self"]]],[0,"ops","num_traits","",null,null],[0,"checked","num_traits::ops","",null,null],[8,"CheckedAdd","num_traits::ops::checked","Performs addition that returns `None` instead of wrapping…",null,null],[10,"checked_add","","Adds two numbers, checking for overflow. If overflow…",12,[[["self"]],["option"]]],[8,"CheckedSub","","Performs subtraction that returns `None` instead of…",null,null],[10,"checked_sub","","Subtracts two numbers, checking for underflow. If…",13,[[["self"]],["option"]]],[8,"CheckedMul","","Performs multiplication that returns `None` instead of…",null,null],[10,"checked_mul","","Multiplies two numbers, checking for underflow or…",14,[[["self"]],["option"]]],[8,"CheckedDiv","","Performs division that returns `None` instead of panicking…",null,null],[10,"checked_div","","Divides two numbers, checking for underflow, overflow and…",15,[[["self"]],["option"]]],[8,"CheckedRem","","Performs an integral remainder that returns `None` instead…",null,null],[10,"checked_rem","","Finds the remainder of dividing two numbers, checking for…",16,[[["self"]],["option"]]],[8,"CheckedNeg","","Performs negation that returns `None` if the result can't…",null,null],[10,"checked_neg","","Negates a number, returning `None` for results that can't…",17,[[["self"]],["option"]]],[8,"CheckedShl","","Performs a left shift that returns `None` on shifts larger…",null,null],[10,"checked_shl","","Checked shift left. Computes `self << rhs`, returning…",18,[[["u32"],["self"]],["option"]]],[8,"CheckedShr","","Performs a right shift that returns `None` on shifts…",null,null],[10,"checked_shr","","Checked shift right. Computes `self >> rhs`, returning…",19,[[["u32"],["self"]],["option"]]],[0,"inv","num_traits::ops","",null,null],[8,"Inv","num_traits::ops::inv","Unary operator for retrieving the multiplicative inverse,…",null,null],[16,"Output","","The result after applying the operator.",20,null],[10,"inv","","Returns the multiplicative inverse of `self`.",20,[[]]],[0,"mul_add","num_traits::ops","",null,null],[8,"MulAdd","num_traits::ops::mul_add","Fused multiply-add. Computes `(self * a) + b` with only…",null,null],[16,"Output","","The resulting type after applying the fused multiply-add.",21,null],[10,"mul_add","","Performs the fused multiply-add operation.",21,[[["a"],["b"]]]],[8,"MulAddAssign","","The fused multiply-add assignment operation.",null,null],[10,"mul_add_assign","","Performs the fused multiply-add operation.",22,[[["a"],["self"],["b"]]]],[0,"saturating","num_traits::ops","",null,null],[8,"Saturating","num_traits::ops::saturating","Saturating math operations",null,null],[10,"saturating_add","","Saturating addition operator. Returns a+b, saturating at…",23,[[],["self"]]],[10,"saturating_sub","","Saturating subtraction operator. Returns a-b, saturating…",23,[[],["self"]]],[0,"wrapping","num_traits::ops","",null,null],[8,"WrappingAdd","num_traits::ops::wrapping","Performs addition that wraps around on overflow.",null,null],[10,"wrapping_add","","Wrapping (modular) addition. Computes `self + other`,…",24,[[["self"]],["self"]]],[8,"WrappingSub","","Performs subtraction that wraps around on overflow.",null,null],[10,"wrapping_sub","","Wrapping (modular) subtraction. Computes `self - other`,…",25,[[["self"]],["self"]]],[8,"WrappingMul","","Performs multiplication that wraps around on overflow.",null,null],[10,"wrapping_mul","","Wrapping (modular) multiplication. Computes `self *…",26,[[["self"]],["self"]]],[8,"WrappingShl","","Performs a left shift that does not panic.",null,null],[10,"wrapping_shl","","Panic-free bitwise shift-left; yields `self << mask(rhs)`,…",27,[[["u32"],["self"]],["self"]]],[8,"WrappingShr","","Performs a right shift that does not panic.",null,null],[10,"wrapping_shr","","Panic-free bitwise shift-right; yields `self >>…",28,[[["u32"],["self"]],["self"]]],[0,"pow","num_traits","",null,null],[5,"pow","num_traits::pow","Raises a value to the power of exp, using exponentiation…",null,[[["usize"],["clone"],["one"],["mul"]],[["clone"],["one"],["mul"]]]],[5,"checked_pow","","Raises a value to the power of exp, returning `None` if an…",null,[[["usize"],["clone"],["one"],["checkedmul"]],[["clone"],["one"],["option"],["checkedmul"]]]],[8,"Pow","","Binary operator for raising a value to a power.",null,null],[16,"Output","","The result after applying the operator.",29,null],[10,"pow","","Returns `self` to the power `rhs`.",29,[[["rhs"]]]],[0,"sign","num_traits","",null,null],[5,"abs","num_traits::sign","Computes the absolute value.",null,[[["signed"]],["signed"]]],[5,"abs_sub","","The positive difference of two numbers.",null,[[["signed"]],["signed"]]],[5,"signum","","Returns the sign of the number.",null,[[["signed"]],["signed"]]],[8,"Signed","","Useful functions for signed numbers (i.e. numbers that can…",null,null],[10,"abs","","Computes the absolute value.",30,[[["self"]],["self"]]],[10,"abs_sub","","The positive difference of two numbers.",30,[[["self"]],["self"]]],[10,"signum","","Returns the sign of the number.",30,[[["self"]],["self"]]],[10,"is_positive","","Returns true if the number is positive and false if the…",30,[[["self"]],["bool"]]],[10,"is_negative","","Returns true if the number is negative and false if the…",30,[[["self"]],["bool"]]],[8,"Unsigned","","A trait for values which cannot be negative",null,null],[8,"Num","num_traits","The base trait for numeric types, covering `0` and `1`…",null,null],[16,"FromStrRadixErr","","",31,null],[10,"from_str_radix","","Convert from a string and radix <= 36.",31,[[["str"],["u32"]],["result"]]],[8,"NumOps","","The trait for types implementing basic numeric operations",null,null],[8,"NumRef","","The trait for `Num` types which also implement numeric…",null,null],[8,"RefNum","","The trait for references which implement numeric…",null,null],[8,"NumAssignOps","","The trait for types implementing numeric assignment…",null,null],[8,"NumAssign","","The trait for `Num` types which also implement assignment…",null,null],[8,"NumAssignRef","","The trait for `NumAssign` types which also implement…",null,null],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"into","","",0,[[],["u"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"into","","",1,[[],["u"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]]],"p":[[3,"ParseFloatError"],[4,"FloatErrorKind"],[8,"Bounded"],[8,"ToPrimitive"],[8,"FromPrimitive"],[8,"NumCast"],[8,"AsPrimitive"],[8,"FloatCore"],[8,"FloatConst"],[8,"Zero"],[8,"One"],[8,"PrimInt"],[8,"CheckedAdd"],[8,"CheckedSub"],[8,"CheckedMul"],[8,"CheckedDiv"],[8,"CheckedRem"],[8,"CheckedNeg"],[8,"CheckedShl"],[8,"CheckedShr"],[8,"Inv"],[8,"MulAdd"],[8,"MulAddAssign"],[8,"Saturating"],[8,"WrappingAdd"],[8,"WrappingSub"],[8,"WrappingMul"],[8,"WrappingShl"],[8,"WrappingShr"],[8,"Pow"],[8,"Signed"],[8,"Num"]]};
searchIndex["object"] = {"doc":"`object`","i":[[4,"Architecture","object","A CPU architecture.",null,null],[13,"Unknown","","",0,null],[13,"Aarch64","","",0,null],[13,"Arm","","",0,null],[13,"I386","","",0,null],[13,"Mips","","",0,null],[13,"Wasm32","","",0,null],[13,"X86_64","","",0,null],[4,"AddressSize","","The size of an address value for an architecture.",null,null],[13,"U32","","",1,null],[13,"U64","","",1,null],[4,"BinaryFormat","","A binary file format.",null,null],[13,"Coff","","",2,null],[13,"Elf","","",2,null],[13,"MachO","","",2,null],[13,"Pe","","",2,null],[13,"Wasm","","",2,null],[4,"SectionKind","","The kind of a section.",null,null],[13,"Unknown","","The section kind is unknown.",3,null],[13,"Text","","An executable code section.",3,null],[13,"Data","","A data section.",3,null],[13,"ReadOnlyData","","A read only data section.",3,null],[13,"ReadOnlyString","","A loadable string section.",3,null],[13,"UninitializedData","","An uninitialized data section.",3,null],[13,"Common","","An uninitialized common data section.",3,null],[13,"Tls","","A TLS data section.",3,null],[13,"UninitializedTls","","An uninitialized TLS data section.",3,null],[13,"TlsVariables","","A TLS variables section.",3,null],[13,"OtherString","","A non-loadable string section.",3,null],[13,"Other","","Some other non-loadable section.",3,null],[13,"Debug","","Debug information.",3,null],[13,"Linker","","Information for the linker.",3,null],[13,"Metadata","","Metadata such as symbols or relocations.",3,null],[4,"SymbolKind","","The kind of a symbol.",null,null],[13,"Unknown","","The symbol kind is unknown.",4,null],[13,"Null","","The symbol is a null placeholder.",4,null],[13,"Text","","The symbol is for executable code.",4,null],[13,"Data","","The symbol is for a data object.",4,null],[13,"Section","","The symbol is for a section.",4,null],[13,"File","","The symbol is the name of a file. It precedes symbols…",4,null],[13,"Label","","The symbol is for a code label.",4,null],[13,"Tls","","The symbol is for a thread local storage entity.",4,null],[4,"SymbolScope","","A symbol scope.",null,null],[13,"Unknown","","Unknown scope.",5,null],[13,"Compilation","","Symbol is visible to the compilation unit.",5,null],[13,"Linkage","","Symbol is visible to the static linkage unit.",5,null],[13,"Dynamic","","Symbol is visible to dynamically linked objects.",5,null],[4,"RelocationKind","","The operation used to calculate the result of the…",null,null],[13,"Absolute","","S + A",6,null],[13,"Relative","","S + A - P",6,null],[13,"Got","","G + A - GotBase",6,null],[13,"GotRelative","","G + A - P",6,null],[13,"GotBaseRelative","","GotBase + A - P",6,null],[13,"GotBaseOffset","","S + A - GotBase",6,null],[13,"PltRelative","","L + A - P",6,null],[13,"ImageOffset","","S + A - Image",6,null],[13,"SectionOffset","","S + A - Section",6,null],[13,"SectionIndex","","The index of the section containing the symbol.",6,null],[13,"Elf","","Some other ELF relocation. The value is dependent on the…",6,null],[13,"MachO","","Some other Mach-O relocation. The value is dependent on…",6,null],[12,"value","object::RelocationKind","The relocation type.",7,null],[12,"relative","","Whether the relocation is relative to the place.",7,null],[13,"Coff","object","Some other COFF relocation. The value is dependent on the…",6,null],[4,"RelocationEncoding","","Information about how the result of the relocation…",null,null],[13,"Generic","","Generic encoding.",8,null],[13,"X86Signed","","x86 sign extension at runtime.",8,null],[13,"X86RipRelative","","x86 rip-relative addressing.",8,null],[13,"X86RipRelativeMovq","","x86 rip-relative addressing in movq instruction.",8,null],[13,"X86Branch","","x86 branch instruction.",8,null],[4,"FileFlags","","File flags that are specific to each file format.",null,null],[13,"None","","No file flags.",9,null],[13,"Elf","","ELF file flags.",9,null],[12,"e_flags","object::FileFlags","`e_flags` field in the ELF file header.",10,null],[13,"MachO","object","Mach-O file flags.",9,null],[12,"flags","object::FileFlags","`flags` field in the Mach-O file header.",11,null],[13,"Coff","object","COFF file flags.",9,null],[12,"characteristics","object::FileFlags","`Characteristics` field in the COFF file header.",12,null],[4,"SectionFlags","object","Section flags that are specific to each file format.",null,null],[13,"None","","No section flags.",13,null],[13,"Elf","","ELF section flags.",13,null],[12,"sh_flags","object::SectionFlags","`sh_flags` field in the section header.",14,null],[13,"MachO","object","Mach-O section flags.",13,null],[12,"flags","object::SectionFlags","`flags` field in the section header.",15,null],[13,"Coff","object","COFF section flags.",13,null],[12,"characteristics","object::SectionFlags","`Characteristics` field in the section header.",16,null],[4,"SymbolFlags","object","Symbol flags that are specific to each file format.",null,null],[13,"None","","No symbol flags.",17,null],[13,"Elf","","ELF symbol flags.",17,null],[12,"st_info","object::SymbolFlags","`st_info` field in the ELF symbol.",18,null],[12,"st_other","","`st_other` field in the ELF symbol.",18,null],[13,"MachO","object","Mach-O symbol flags.",17,null],[12,"n_desc","object::SymbolFlags","`n_desc` field in the Mach-O symbol.",19,null],[13,"CoffSection","object","COFF flags for a section symbol.",17,null],[12,"selection","object::SymbolFlags","`Selection` field in the auxiliary symbol for the section.",20,null],[12,"associative_section","","`Number` field in the auxiliary symbol for the section.",20,null],[11,"address_size","object","The size of an address value for this architecture.",0,[[],[["addresssize"],["option",["addresssize"]]]]],[11,"bytes","","The size in bytes of an address value.",1,[[],["u8"]]],[11,"is_bss","","Return true if this section contains zerofill data.",3,[[],["bool"]]],[0,"endian","","Types for compile-time and run-time endianness.",null,null],[3,"LittleEndian","object::endian","Compile-time little endian byte order.",null,null],[3,"BigEndian","","Compile-time big endian byte order.",null,null],[3,"U16","","A `u16` value with an externally specified endianness of…",null,null],[3,"U32","","A `u32` value with an externally specified endianness of…",null,null],[3,"U64","","A `u64` value with an externally specified endianness of…",null,null],[3,"I16","","An `i16` value with an externally specified endianness of…",null,null],[3,"I32","","An `i32` value with an externally specified endianness of…",null,null],[3,"I64","","An `i64` value with an externally specified endianness of…",null,null],[3,"U16Bytes","","An unaligned `u16` value with an externally specified…",null,null],[3,"U32Bytes","","An unaligned `u32` value with an externally specified…",null,null],[3,"U64Bytes","","An unaligned `u64` value with an externally specified…",null,null],[4,"Endianness","","An endianness that is selectable at run-time.",null,null],[13,"Little","","Little endian byte order.",21,null],[13,"Big","","Big endian byte order.",21,null],[6,"NativeEndian","","The native endianness for the target platform.",null,null],[8,"Endian","","A trait for using an endianness specification.",null,null],[10,"from_big_endian","","Construct a specification for the endianness of some values.",22,[[["bool"]],["option"]]],[11,"from_little_endian","","Construct a specification for the endianness of some values.",22,[[["bool"]],["option"]]],[10,"is_big_endian","","Return true for big endian byte order.",22,[[],["bool"]]],[11,"is_little_endian","","Return true for little endian byte order.",22,[[],["bool"]]],[11,"read_u16","","Converts an unsigned 16 bit integer to native endian.",22,[[["u16"]],["u16"]]],[11,"read_u32","","Converts an unsigned 32 bit integer to native endian.",22,[[["u32"]],["u32"]]],[11,"read_u64","","Converts an unsigned 64 bit integer to native endian.",22,[[["u64"]],["u64"]]],[11,"read_i16","","Converts a signed 16 bit integer to native endian.",22,[[["i16"]],["i16"]]],[11,"read_i32","","Converts a signed 32 bit integer to native endian.",22,[[["i32"]],["i32"]]],[11,"read_i64","","Converts a signed 64 bit integer to native endian.",22,[[["i64"]],["i64"]]],[11,"read_u16_bytes","","Converts an unaligned unsigned 16 bit integer to native…",22,[[],["u16"]]],[11,"read_u32_bytes","","Converts an unaligned unsigned 32 bit integer to native…",22,[[],["u32"]]],[11,"read_u64_bytes","","Converts an unaligned unsigned 64 bit integer to native…",22,[[],["u64"]]],[11,"write_u16","","Converts an unsigned 16 bit integer from native endian.",22,[[["u16"]],["u16"]]],[11,"write_u32","","Converts an unsigned 32 bit integer from native endian.",22,[[["u32"]],["u32"]]],[11,"write_u64","","Converts an unsigned 64 bit integer from native endian.",22,[[["u64"]],["u64"]]],[11,"write_i16","","Converts a signed 16 bit integer from native endian.",22,[[["i16"]],["i16"]]],[11,"write_i32","","Converts a signed 32 bit integer from native endian.",22,[[["i32"]],["i32"]]],[11,"write_i64","","Converts a signed 64 bit integer from native endian.",22,[[["i64"]],["i64"]]],[11,"write_u16_bytes","","Converts an unaligned unsigned 16 bit integer from native…",22,[[["u16"]]]],[11,"write_u32_bytes","","Converts an unaligned unsigned 32 bit integer from native…",22,[[["u32"]]]],[11,"write_u64_bytes","","Converts an unaligned unsigned 64 bit integer from native…",22,[[["u64"]]]],[11,"new","","Construct a new value given a native endian value.",23,[[["u16"],["e"]],["self"]]],[11,"get","","Return the value as a native endian value.",23,[[["e"]],["u16"]]],[11,"set","","Set the value given a native endian value.",23,[[["u16"],["self"],["e"]]]],[11,"new","","Construct a new value given a native endian value.",24,[[["u32"],["e"]],["self"]]],[11,"get","","Return the value as a native endian value.",24,[[["e"]],["u32"]]],[11,"set","","Set the value given a native endian value.",24,[[["self"],["u32"],["e"]]]],[11,"new","","Construct a new value given a native endian value.",25,[[["u64"],["e"]],["self"]]],[11,"get","","Return the value as a native endian value.",25,[[["e"]],["u64"]]],[11,"set","","Set the value given a native endian value.",25,[[["self"],["u64"],["e"]]]],[11,"new","","Construct a new value given a native endian value.",26,[[["i16"],["e"]],["self"]]],[11,"get","","Return the value as a native endian value.",26,[[["e"]],["i16"]]],[11,"set","","Set the value given a native endian value.",26,[[["self"],["i16"],["e"]]]],[11,"new","","Construct a new value given a native endian value.",27,[[["i32"],["e"]],["self"]]],[11,"get","","Return the value as a native endian value.",27,[[["e"]],["i32"]]],[11,"set","","Set the value given a native endian value.",27,[[["i32"],["self"],["e"]]]],[11,"new","","Construct a new value given a native endian value.",28,[[["i64"],["e"]],["self"]]],[11,"get","","Return the value as a native endian value.",28,[[["e"]],["i64"]]],[11,"set","","Set the value given a native endian value.",28,[[["i64"],["self"],["e"]]]],[11,"new","","Construct a new value given a native endian value.",29,[[["u16"],["e"]],["self"]]],[11,"get","","Return the value as a native endian value.",29,[[["e"]],["u16"]]],[11,"set","","Set the value given a native endian value.",29,[[["u16"],["self"],["e"]]]],[11,"new","","Construct a new value given a native endian value.",30,[[["u32"],["e"]],["self"]]],[11,"get","","Return the value as a native endian value.",30,[[["e"]],["u32"]]],[11,"set","","Set the value given a native endian value.",30,[[["self"],["u32"],["e"]]]],[11,"new","","Construct a new value given a native endian value.",31,[[["u64"],["e"]],["self"]]],[11,"get","","Return the value as a native endian value.",31,[[["e"]],["u64"]]],[11,"set","","Set the value given a native endian value.",31,[[["self"],["u64"],["e"]]]],[0,"pod","object","Tools for converting file format structures to and from…",null,null],[3,"Bytes","object::pod","A newtype for byte slices.",null,null],[12,"0","","",32,null],[5,"from_bytes","","Cast a byte slice to a `Pod` type.",null,[[],["result"]]],[5,"slice_from_bytes","","Cast a byte slice to a slice of a `Pod` type.",null,[[["usize"]],["result"]]],[5,"bytes_of","","Cast a `Pod` type to a byte slice.",null,[[["t"]]]],[8,"Pod","","A trait for types that can safely be converted from and to…",null,null],[11,"len","","Return the length of the byte slice.",32,[[["self"]],["usize"]]],[11,"is_empty","","Return true if the byte slice is empty.",32,[[["self"]],["bool"]]],[11,"skip","","Skip over the given number of bytes at the start of the…",32,[[["self"],["usize"]],["result"]]],[11,"read_bytes","","Return a reference to the given number of bytes at the…",32,[[["self"],["usize"]],[["result",["bytes"]],["bytes"]]]],[11,"read_bytes_at","","Return a reference to the given number of bytes at the…",32,[[["usize"]],[["result",["bytes"]],["bytes"]]]],[11,"read","","Return a reference to a `Pod` struct at the start of the…",32,[[["self"]],[["result"],["t"]]]],[11,"read_at","","Return a reference to a `Pod` struct at the given offset…",32,[[["usize"]],[["result"],["t"]]]],[11,"read_slice","","Return a reference to a slice of `Pod` structs at the…",32,[[["self"],["usize"]],["result"]]],[11,"read_slice_at","","Return a reference to a slice of `Pod` structs at the…",32,[[["usize"]],["result"]]],[11,"read_string","","Read a null terminated string.",32,[[["self"]],["result"]]],[11,"read_string_at","","Read a null terminated string at an offset.",32,[[["usize"]],["result"]]],[0,"read","object","Interface for reading object files.",null,null],[3,"StringTable","object::read","A table of zero-terminated strings.",null,null],[3,"File","","An object file.",null,null],[3,"SegmentIterator","","An iterator over the segments of a `File`.",null,null],[3,"Segment","","A segment of a `File`.",null,null],[3,"SectionIterator","","An iterator of the sections of a `File`.",null,null],[3,"Section","","A Section of a File",null,null],[3,"SymbolIterator","","An iterator over symbol table entries.",null,null],[3,"RelocationIterator","","An iterator over relocation entries",null,null],[3,"Error","","The error type used within the read module.",null,null],[3,"SectionIndex","","The index used to identify a section of a file.",null,null],[12,"0","","",33,null],[3,"SymbolIndex","","The index used to identify a symbol of a file.",null,null],[12,"0","","",34,null],[3,"Symbol","","A symbol table entry.",null,null],[3,"SymbolMap","","A map from addresses to symbols.",null,null],[3,"Relocation","","A relocation entry.",null,null],[3,"CompressedData","","Data that may be compressed.",null,null],[12,"format","","The data compression format.",35,null],[12,"data","","The compressed data.",35,null],[12,"uncompressed_size","","The uncompressed data size.",35,null],[4,"SymbolSection","","The section where a symbol is defined.",null,null],[13,"Unknown","","The section is unknown.",36,null],[13,"None","","The section is not applicable for this symbol (such as…",36,null],[13,"Undefined","","The symbol is undefined.",36,null],[13,"Absolute","","The symbol has an absolute value.",36,null],[13,"Common","","The symbol is a zero-initialized symbol that will be…",36,null],[13,"Section","","The symbol is defined in the given section.",36,null],[4,"RelocationTarget","","The target referenced by a relocation.",null,null],[13,"Symbol","","The target is a symbol.",37,null],[13,"Section","","The target is a section.",37,null],[4,"CompressionFormat","","A data compression format.",null,null],[13,"None","","The data is uncompressed.",38,null],[13,"Unknown","","The data is compressed, but the compression format is…",38,null],[13,"Zlib","","ZLIB/DEFLATE.",38,null],[11,"new","","Interpret the given data as a string table.",39,[[["bytes"]],["self"]]],[11,"get","","Return the string at the given offset.",39,[[["u32"],["self"]],["result"]]],[11,"parse","","Parse the raw file data.",40,[[],["result"]]],[11,"format","","Return the file format.",40,[[["self"]],["binaryformat"]]],[0,"coff","","Support for reading Windows COFF files.",null,null],[3,"CoffFile","object::read::coff","A COFF object file.",null,null],[3,"SectionTable","","The table of section headers in a COFF or PE file.",null,null],[3,"CoffSegmentIterator","","An iterator over the loadable sections of a `CoffFile`.",null,null],[3,"CoffSegment","","A loadable section of a `CoffFile`.",null,null],[3,"CoffSectionIterator","","An iterator over the sections of a `CoffFile`.",null,null],[3,"CoffSection","","A section of a `CoffFile`.",null,null],[3,"SymbolTable","","A table of symbol entries in a COFF or PE file.",null,null],[3,"CoffSymbolIterator","","An iterator over the symbols of a `CoffFile`.",null,null],[3,"CoffRelocationIterator","","An iterator over the relocations in a `CoffSection`.",null,null],[11,"parse","","Parse the raw COFF file data.",41,[[],["result"]]],[11,"parse","","Parse the section table.",42,[[["imagefileheader"],["bytes"]],["result"]]],[11,"iter","","Iterate over the section headers.",42,[[["self"]],[["imagesectionheader"],["iter",["imagesectionheader"]]]]],[11,"is_empty","","Return true if the section table is empty.",42,[[["self"]],["bool"]]],[11,"len","","The number of section headers.",42,[[["self"]],["usize"]]],[11,"section","","Return the section header at the given index.",42,[[["self"],["usize"]],[["result",["imagesectionheader"]],["imagesectionheader"]]]],[11,"section_by_name","","Return the section header with the given name.",42,[[["self"],["stringtable"]],["option"]]],[11,"parse","","Read the symbol table.",43,[[["imagefileheader"],["bytes"]],["result"]]],[11,"strings","","Return the string table used for the symbol names.",43,[[["self"]],["stringtable"]]],[11,"is_empty","","Return true if the symbol table is empty.",43,[[["self"]],["bool"]]],[11,"len","","The number of symbols.",43,[[["self"]],["usize"]]],[11,"symbol","","Return the symbol table entry at the given index.",43,[[["self"],["usize"]],[["option",["imagesymbol"]],["imagesymbol"]]]],[11,"get","","Return the symbol table entry or auxilliary record at the…",43,[[["self"],["usize"]],[["t"],["option"]]]],[0,"elf","object::read","Support for reading ELF files.",null,null],[3,"ElfFile","object::read::elf","A partially parsed ELF file.",null,null],[3,"ElfSegmentIterator","","An iterator over the segments of an `ElfFile`.",null,null],[3,"ElfSegment","","A segment of an `ElfFile`.",null,null],[3,"SectionTable","","The table of section headers in an ELF file.",null,null],[3,"ElfSectionIterator","","An iterator over the sections of an `ElfFile`.",null,null],[3,"ElfSection","","A section of an `ElfFile`.",null,null],[3,"SymbolTable","","A table of symbol entries in an ELF file.",null,null],[3,"ElfSymbolIterator","","An iterator over the symbols of an `ElfFile`.",null,null],[3,"RelocationSections","","A mapping from section index to associated relocation…",null,null],[3,"ElfRelocationIterator","","An iterator over the relocations for an `ElfSection`.",null,null],[3,"ElfNoteIterator","","An iterator over the notes in an `ElfSegment` or…",null,null],[3,"ElfNote","","A parsed `NoteHeader`.",null,null],[11,"parse","","Parse the raw ELF file data.",44,[[],["result"]]],[11,"new","","Create a new section table.",45,[[["stringtable"]],["self"]]],[11,"iter","","Iterate over the section headers.",45,[[["self"]],["iter"]]],[11,"is_empty","","Return true if the section table is empty.",45,[[["self"]],["bool"]]],[11,"len","","The number of section headers.",45,[[["self"]],["usize"]]],[11,"section","","Return the section header at the given index.",45,[[["self"],["usize"]],["result"]]],[11,"section_by_name","","Return the section header with the given name.",45,[[["self"]],["option"]]],[11,"section_name","","Return the section name for the given section header.",45,[[["self"]],["result"]]],[11,"symbols","","Return the symbol table of the given section type.",45,[[["bytes"],["u32"],["self"]],[["result",["symboltable"]],["symboltable"]]]],[11,"relocation_sections","","Create a mapping from section index to associated…",45,[[["self"],["usize"]],[["relocationsections"],["result",["relocationsections"]]]]],[11,"parse","","Parse the symbol table of the given section type.",46,[[["bytes"],["u32"],["sectiontable"]],[["result",["symboltable"]],["symboltable"]]]],[11,"section","","Return the section index of this symbol table.",46,[[["self"]],["usize"]]],[11,"strings","","Return the string table used for the symbol names.",46,[[["self"]],["stringtable"]]],[11,"iter","","Iterate over the symbols.",46,[[["self"]],["iter"]]],[11,"is_empty","","Return true if the symbol table is empty.",46,[[["self"]],["bool"]]],[11,"symbol","","Return the symbol at the given index.",46,[[["self"],["usize"]],["result"]]],[11,"shndx","","Return the extended section index for the given symbol if…",46,[[["self"],["usize"]],[["u32"],["option",["u32"]]]]],[11,"parse","","Create a new mapping using the section table.",47,[[["sectiontable"],["usize"]],["result"]]],[11,"get","","Given a section index, return the section index of the…",47,[[["self"],["usize"]],[["option",["usize"]],["usize"]]]],[11,"n_type","","Return the `n_type` field of the `NoteHeader`.",48,[[["self"]],["u32"]]],[11,"n_namesz","","Return the `n_namesz` field of the `NoteHeader`.",48,[[["self"]],["u32"]]],[11,"n_descsz","","Return the `n_descsz` field of the `NoteHeader`.",48,[[["self"]],["u32"]]],[11,"name","","Return the bytes for the name field following the…",48,[[["self"]]]],[11,"desc","","Return the bytes for the desc field following the…",48,[[["self"]]]],[6,"ElfFile32","","A 32-bit ELF object file.",null,null],[6,"ElfFile64","","A 64-bit ELF object file.",null,null],[6,"ElfSegmentIterator32","","An iterator over the segments of an `ElfFile32`.",null,null],[6,"ElfSegmentIterator64","","An iterator over the segments of an `ElfFile64`.",null,null],[6,"ElfSegment32","","A segment of an `ElfFile32`.",null,null],[6,"ElfSegment64","","A segment of an `ElfFile64`.",null,null],[6,"ElfSectionIterator32","","An iterator over the sections of an `ElfFile32`.",null,null],[6,"ElfSectionIterator64","","An iterator over the sections of an `ElfFile64`.",null,null],[6,"ElfSection32","","A section of an `ElfFile32`.",null,null],[6,"ElfSection64","","A section of an `ElfFile64`.",null,null],[6,"ElfSymbolIterator32","","An iterator over the symbols of an `ElfFile32`.",null,null],[6,"ElfSymbolIterator64","","An iterator over the symbols of an `ElfFile64`.",null,null],[6,"ElfRelocationIterator32","","An iterator over the relocations for an `ElfSection32`.",null,null],[6,"ElfRelocationIterator64","","An iterator over the relocations for an `ElfSection64`.",null,null],[6,"ElfNote32","","A parsed `NoteHeader32`.",null,null],[6,"ElfNote64","","A parsed `NoteHeader64`.",null,null],[8,"FileHeader","","A trait for generic access to `FileHeader32` and…",null,null],[16,"Word","","",49,null],[16,"Sword","","",49,null],[16,"Endian","","",49,null],[16,"ProgramHeader","","",49,null],[16,"SectionHeader","","",49,null],[16,"CompressionHeader","","",49,null],[16,"NoteHeader","","",49,null],[16,"Sym","","",49,null],[16,"Rel","","",49,null],[16,"Rela","","",49,null],[10,"is_type_64","","Return true if this type is a 64-bit header.",49,[[["self"]],["bool"]]],[10,"e_ident","","",49,[[["self"]],["ident"]]],[10,"e_type","","",49,[[["self"]],["u16"]]],[10,"e_machine","","",49,[[["self"]],["u16"]]],[10,"e_version","","",49,[[["self"]],["u32"]]],[10,"e_entry","","",49,[[["self"]]]],[10,"e_phoff","","",49,[[["self"]]]],[10,"e_shoff","","",49,[[["self"]]]],[10,"e_flags","","",49,[[["self"]],["u32"]]],[10,"e_ehsize","","",49,[[["self"]],["u16"]]],[10,"e_phentsize","","",49,[[["self"]],["u16"]]],[10,"e_phnum","","",49,[[["self"]],["u16"]]],[10,"e_shentsize","","",49,[[["self"]],["u16"]]],[10,"e_shnum","","",49,[[["self"]],["u16"]]],[10,"e_shstrndx","","",49,[[["self"]],["u16"]]],[11,"parse","","Read the file header.",49,[[["bytes"]],[["result"],["self"]]]],[11,"is_supported","","Check that the ident field in the file header is a…",49,[[["self"]],["bool"]]],[11,"is_class_32","","",49,[[["self"]],["bool"]]],[11,"is_class_64","","",49,[[["self"]],["bool"]]],[11,"is_little_endian","","",49,[[["self"]],["bool"]]],[11,"is_big_endian","","",49,[[["self"]],["bool"]]],[11,"endian","","",49,[[["self"]],["result"]]],[11,"section_0","","Return the first section header, if present.",49,[[["bytes"],["self"]],[["result",["option"]],["option"]]]],[11,"phnum","","Return the `e_phnum` field of the header. Handles extended…",49,[[["bytes"],["self"]],[["usize"],["result",["usize"]]]]],[11,"shnum","","Return the `e_shnum` field of the header. Handles extended…",49,[[["bytes"],["self"]],[["usize"],["result",["usize"]]]]],[11,"shstrndx","","Return the `e_shstrndx` field of the header. Handles…",49,[[["bytes"],["self"]],[["result",["u32"]],["u32"]]]],[11,"program_headers","","Return the slice of program headers.",49,[[["bytes"],["self"]],["result"]]],[11,"section_headers","","Return the slice of section headers.",49,[[["bytes"],["self"]],["result"]]],[11,"section_strings","","Return the string table for the section headers.",49,[[["bytes"],["self"]],[["result",["stringtable"]],["stringtable"]]]],[11,"sections","","Return the section table.",49,[[["bytes"],["self"]],[["sectiontable"],["result",["sectiontable"]]]]],[8,"ProgramHeader","","A trait for generic access to `ProgramHeader32` and…",null,null],[16,"Word","","",50,null],[16,"Endian","","",50,null],[16,"Elf","","",50,null],[10,"p_type","","",50,[[["self"]],["u32"]]],[10,"p_flags","","",50,[[["self"]],["u32"]]],[10,"p_offset","","",50,[[["self"]]]],[10,"p_vaddr","","",50,[[["self"]]]],[10,"p_paddr","","",50,[[["self"]]]],[10,"p_filesz","","",50,[[["self"]]]],[10,"p_memsz","","",50,[[["self"]]]],[10,"p_align","","",50,[[["self"]]]],[11,"file_range","","Return the offset and size of the segment in the file.",50,[[["self"]]]],[11,"data","","Return the segment data.",50,[[["bytes"],["self"]],[["result",["bytes"]],["bytes"]]]],[11,"notes","","Return a note iterator for the segment data.",50,[[["bytes"],["self"]],[["option",["elfnoteiterator"]],["result",["option"]]]]],[8,"SectionHeader","","A trait for generic access to `SectionHeader32` and…",null,null],[16,"Word","","",51,null],[16,"Endian","","",51,null],[16,"Elf","","",51,null],[10,"sh_name","","",51,[[["self"]],["u32"]]],[10,"sh_type","","",51,[[["self"]],["u32"]]],[10,"sh_flags","","",51,[[["self"]]]],[10,"sh_addr","","",51,[[["self"]]]],[10,"sh_offset","","",51,[[["self"]]]],[10,"sh_size","","",51,[[["self"]]]],[10,"sh_link","","",51,[[["self"]],["u32"]]],[10,"sh_info","","",51,[[["self"]],["u32"]]],[10,"sh_addralign","","",51,[[["self"]]]],[10,"sh_entsize","","",51,[[["self"]]]],[11,"file_range","","Return the offset and size of the section in the file.",51,[[["self"]],["option"]]],[11,"data","","Return the section data.",51,[[["bytes"],["self"]],[["result",["bytes"]],["bytes"]]]],[11,"data_as_array","","Return the section data as a slice of the given type.",51,[[["bytes"],["self"]],["result"]]],[11,"notes","","Return a note iterator for the section data.",51,[[["bytes"],["self"]],[["option",["elfnoteiterator"]],["result",["option"]]]]],[8,"Sym","","A trait for generic access to `Sym32` and `Sym64`.",null,null],[16,"Word","","",52,null],[16,"Endian","","",52,null],[10,"st_name","","",52,[[["self"]],["u32"]]],[10,"st_info","","",52,[[["self"]],["u8"]]],[10,"st_bind","","",52,[[["self"]],["u8"]]],[10,"st_type","","",52,[[["self"]],["u8"]]],[10,"st_other","","",52,[[["self"]],["u8"]]],[10,"st_visibility","","",52,[[["self"]],["u8"]]],[10,"st_shndx","","",52,[[["self"]],["u16"]]],[10,"st_value","","",52,[[["self"]]]],[10,"st_size","","",52,[[["self"]]]],[11,"name","","Parse the symbol name from the string table.",52,[[["self"],["stringtable"]],["result"]]],[8,"Rela","","A trait for generic access to `Rela32` and `Rela64`.",null,null],[16,"Word","","",53,null],[16,"Sword","","",53,null],[16,"Endian","","",53,null],[10,"r_offset","","",53,[[["self"]]]],[10,"r_info","","",53,[[["self"]]]],[10,"r_addend","","",53,[[["self"]]]],[10,"r_sym","","",53,[[["self"]],["u32"]]],[10,"r_type","","",53,[[["self"]],["u32"]]],[8,"CompressionHeader","","A trait for generic access to `CompressionHeader32` and…",null,null],[16,"Word","","",54,null],[16,"Endian","","",54,null],[10,"ch_type","","",54,[[["self"]],["u32"]]],[10,"ch_size","","",54,[[["self"]]]],[10,"ch_addralign","","",54,[[["self"]]]],[8,"NoteHeader","","A trait for generic access to `NoteHeader32` and…",null,null],[16,"Endian","","",55,null],[10,"n_namesz","","",55,[[["self"]],["u32"]]],[10,"n_descsz","","",55,[[["self"]],["u32"]]],[10,"n_type","","",55,[[["self"]],["u32"]]],[0,"macho","object::read","Support for reading Mach-O files.",null,null],[3,"MachOFile","object::read::macho","A partially parsed Mach-O file.",null,null],[3,"MachOSegmentIterator","","An iterator over the segments of a `MachOFile`.",null,null],[3,"MachOSegment","","A segment of a `MachOFile`.",null,null],[3,"MachOSectionIterator","","An iterator over the sections of a `MachOFile`.",null,null],[3,"MachOSection","","A section of a `MachOFile`.",null,null],[3,"SymbolTable","","A table of symbol entries in a Mach-O file.",null,null],[3,"MachOSymbolIterator","","An iterator over the symbols of a `MachOFile`.",null,null],[3,"MachORelocationIterator","","An iterator over the relocations in a `MachOSection`.",null,null],[11,"parse","","Parse the raw Mach-O file data.",56,[[],["result"]]],[11,"strings","","Return the string table used for the symbol names.",57,[[["self"]],["stringtable"]]],[11,"iter","","Iterate over the symbols.",57,[[["self"]],["iter"]]],[11,"is_empty","","Return true if the symbol table is empty.",57,[[["self"]],["bool"]]],[11,"symbol","","Return the symbol at the given index.",57,[[["self"],["usize"]],["result"]]],[6,"MachOFile32","","A 32-bit Mach-O object file.",null,null],[6,"MachOFile64","","A 64-bit Mach-O object file.",null,null],[6,"MachOSegmentIterator32","","An iterator over the segments of a `MachOFile32`.",null,null],[6,"MachOSegmentIterator64","","An iterator over the segments of a `MachOFile64`.",null,null],[6,"MachOSegment32","","A segment of a `MachOFile32`.",null,null],[6,"MachOSegment64","","A segment of a `MachOFile64`.",null,null],[6,"MachOSectionIterator32","","An iterator over the sections of a `MachOFile32`.",null,null],[6,"MachOSectionIterator64","","An iterator over the sections of a `MachOFile64`.",null,null],[6,"MachOSection32","","A section of a `MachOFile32`.",null,null],[6,"MachOSection64","","A section of a `MachOFile64`.",null,null],[6,"MachOSymbolIterator32","","An iterator over the symbols of a `MachOFile32`.",null,null],[6,"MachOSymbolIterator64","","An iterator over the symbols of a `MachOFile64`.",null,null],[6,"MachORelocationIterator32","","An iterator over the relocations in a `MachOSection32`.",null,null],[6,"MachORelocationIterator64","","An iterator over the relocations in a `MachOSection64`.",null,null],[8,"MachHeader","","A trait for generic access to `MachHeader32` and…",null,null],[16,"Word","","",58,null],[16,"Endian","","",58,null],[16,"Segment","","",58,null],[16,"Section","","",58,null],[16,"Nlist","","",58,null],[10,"is_type_64","","Return true if this type is a 64-bit header.",58,[[["self"]],["bool"]]],[10,"is_big_endian","","Return true if the `magic` field signifies big-endian.",58,[[["self"]],["bool"]]],[10,"is_little_endian","","Return true if the `magic` field signifies little-endian.",58,[[["self"]],["bool"]]],[10,"magic","","",58,[[["self"]],["u32"]]],[10,"cputype","","",58,[[["self"]],["u32"]]],[10,"cpusubtype","","",58,[[["self"]],["u32"]]],[10,"filetype","","",58,[[["self"]],["u32"]]],[10,"ncmds","","",58,[[["self"]],["u32"]]],[10,"sizeofcmds","","",58,[[["self"]],["u32"]]],[10,"flags","","",58,[[["self"]],["u32"]]],[11,"parse","","Read the file header.",58,[[["bytes"]],[["result"],["self"]]]],[11,"is_supported","","",58,[[["self"]],["bool"]]],[11,"endian","","",58,[[["self"]],["result"]]],[11,"load_commands","","",58,[[["bytes"],["self"]],[["result",["macholoadcommanditerator"]],["macholoadcommanditerator"]]]],[11,"uuid","","Return the UUID from the `LC_UUID` load command, if one is…",58,[[["bytes"],["self"]],[["result",["option"]],["option"]]]],[8,"Segment","","A trait for generic access to `SegmentCommand32` and…",null,null],[16,"Word","","",59,null],[16,"Endian","","",59,null],[16,"Section","","",59,null],[10,"from_command","","",59,[[["macholoadcommand"]],[["result",["option"]],["option"]]]],[10,"cmd","","",59,[[["self"]],["u32"]]],[10,"cmdsize","","",59,[[["self"]],["u32"]]],[10,"segname","","",59,[[["self"]]]],[10,"vmaddr","","",59,[[["self"]]]],[10,"vmsize","","",59,[[["self"]]]],[10,"fileoff","","",59,[[["self"]]]],[10,"filesize","","",59,[[["self"]]]],[10,"maxprot","","",59,[[["self"]],["u32"]]],[10,"initprot","","",59,[[["self"]],["u32"]]],[10,"nsects","","",59,[[["self"]],["u32"]]],[10,"flags","","",59,[[["self"]],["u32"]]],[11,"name","","Return the `segname` bytes up until the null terminator.",59,[[["self"]]]],[11,"file_range","","Return the offset and size of the segment in the file.",59,[[["self"]]]],[11,"data","","Get the segment data from the file data.",59,[[["bytes"],["self"]],[["result",["bytes"]],["bytes"]]]],[11,"sections","","Get the array of sections from the data following the…",59,[[["bytes"],["self"]],["result"]]],[8,"Section","","A trait for generic access to `Section32` and `Section64`.",null,null],[16,"Word","","",60,null],[16,"Endian","","",60,null],[10,"sectname","","",60,[[["self"]]]],[10,"segname","","",60,[[["self"]]]],[10,"addr","","",60,[[["self"]]]],[10,"size","","",60,[[["self"]]]],[10,"offset","","",60,[[["self"]],["u32"]]],[10,"align","","",60,[[["self"]],["u32"]]],[10,"reloff","","",60,[[["self"]],["u32"]]],[10,"nreloc","","",60,[[["self"]],["u32"]]],[10,"flags","","",60,[[["self"]],["u32"]]],[11,"name","","Return the `sectname` bytes up until the null terminator.",60,[[["self"]]]],[11,"segment_name","","Return the `segname` bytes up until the null terminator.",60,[[["self"]]]],[11,"file_range","","Return the offset and size of the section in the file.",60,[[["self"]],["option"]]],[11,"data","","Return the section data.",60,[[["self"],["bytes"]],[["result",["bytes"]],["bytes"]]]],[11,"relocations","","Return the relocation array.",60,[[["self"],["bytes"]],["result"]]],[8,"Nlist","","A trait for generic access to `Nlist32` and `Nlist64`.",null,null],[16,"Word","","",61,null],[16,"Endian","","",61,null],[10,"n_strx","","",61,[[["self"]],["u32"]]],[10,"n_type","","",61,[[["self"]],["u8"]]],[10,"n_sect","","",61,[[["self"]],["u8"]]],[10,"n_desc","","",61,[[["self"]],["u16"]]],[10,"n_value","","",61,[[["self"]]]],[11,"name","","",61,[[["stringtable"],["self"]],["result"]]],[11,"is_undefined","","",61,[[["self"]],["bool"]]],[0,"pe","object::read","Support for reading ELF files.",null,null],[3,"PeFile","object::read::pe","A PE object file.",null,null],[3,"PeSegmentIterator","","An iterator over the loadable sections of a `PeFile`.",null,null],[3,"PeSegment","","A loadable section of a `PeFile`.",null,null],[3,"PeSectionIterator","","An iterator over the sections of a `PeFile`.",null,null],[3,"PeSection","","A section of a `PeFile`.",null,null],[3,"PeRelocationIterator","","An iterator over the relocations in an `PeSection`.",null,null],[3,"SectionTable","","The table of section headers in a COFF or PE file.",null,null],[3,"SymbolTable","","A table of symbol entries in a COFF or PE file.",null,null],[11,"optional_header_magic","","Find the optional header and read the…",62,[[],[["result",["u16"]],["u16"]]]],[11,"parse","","Parse the raw PE file data.",62,[[],["result"]]],[6,"PeFile32","","A PE32 (32-bit) image file.",null,null],[6,"PeFile64","","A PE32+ (64-bit) image file.",null,null],[6,"PeSegmentIterator32","","An iterator over the loadable sections of a `PeFile32`.",null,null],[6,"PeSegmentIterator64","","An iterator over the loadable sections of a `PeFile64`.",null,null],[6,"PeSegment32","","A loadable section of a `PeFile32`.",null,null],[6,"PeSegment64","","A loadable section of a `PeFile64`.",null,null],[6,"PeSectionIterator32","","An iterator over the sections of a `PeFile32`.",null,null],[6,"PeSectionIterator64","","An iterator over the sections of a `PeFile64`.",null,null],[6,"PeSection32","","A section of a `PeFile32`.",null,null],[6,"PeSection64","","A section of a `PeFile64`.",null,null],[8,"ImageNtHeaders","","A trait for generic access to `ImageNtHeaders32` and…",null,null],[16,"ImageOptionalHeader","","",63,null],[10,"is_type_64","","Return true if this type is a 64-bit header.",63,[[["self"]],["bool"]]],[10,"is_valid_optional_magic","","Return true if the magic field in the optional header is…",63,[[["self"]],["bool"]]],[10,"signature","","Return the signature",63,[[["self"]],["u32"]]],[10,"file_header","","Return the file header.",63,[[["self"]],["imagefileheader"]]],[10,"optional_header","","Return the optional header.",63,[[["self"]]]],[11,"parse","","Read the NT headers, including the data directories.",63,[[["imagedosheader"],["bytes"]],["result"]]],[11,"sections","","Read the section table.",63,[[["bytes"],["self"]],[["sectiontable"],["result",["sectiontable"]]]]],[11,"symbols","","Read the symbol table and string table.",63,[[["bytes"],["self"]],[["result",["symboltable"]],["symboltable"]]]],[8,"ImageOptionalHeader","","A trait for generic access to `ImageOptionalHeader32` and…",null,null],[10,"magic","","",64,[[["self"]],["u16"]]],[10,"major_linker_version","","",64,[[["self"]],["u8"]]],[10,"minor_linker_version","","",64,[[["self"]],["u8"]]],[10,"size_of_code","","",64,[[["self"]],["u32"]]],[10,"size_of_initialized_data","","",64,[[["self"]],["u32"]]],[10,"size_of_uninitialized_data","","",64,[[["self"]],["u32"]]],[10,"address_of_entry_point","","",64,[[["self"]],["u32"]]],[10,"base_of_code","","",64,[[["self"]],["u32"]]],[10,"image_base","","",64,[[["self"]],["u64"]]],[10,"section_alignment","","",64,[[["self"]],["u32"]]],[10,"file_alignment","","",64,[[["self"]],["u32"]]],[10,"major_operating_system_version","","",64,[[["self"]],["u16"]]],[10,"minor_operating_system_version","","",64,[[["self"]],["u16"]]],[10,"major_image_version","","",64,[[["self"]],["u16"]]],[10,"minor_image_version","","",64,[[["self"]],["u16"]]],[10,"major_subsystem_version","","",64,[[["self"]],["u16"]]],[10,"minor_subsystem_version","","",64,[[["self"]],["u16"]]],[10,"win32_version_value","","",64,[[["self"]],["u32"]]],[10,"size_of_image","","",64,[[["self"]],["u32"]]],[10,"size_of_headers","","",64,[[["self"]],["u32"]]],[10,"check_sum","","",64,[[["self"]],["u32"]]],[10,"subsystem","","",64,[[["self"]],["u16"]]],[10,"dll_characteristics","","",64,[[["self"]],["u16"]]],[10,"size_of_stack_reserve","","",64,[[["self"]],["u64"]]],[10,"size_of_stack_commit","","",64,[[["self"]],["u64"]]],[10,"size_of_heap_reserve","","",64,[[["self"]],["u64"]]],[10,"size_of_heap_commit","","",64,[[["self"]],["u64"]]],[10,"loader_flags","","",64,[[["self"]],["u32"]]],[10,"number_of_rva_and_sizes","","",64,[[["self"]],["u32"]]],[6,"Result","object::read","The result type used within the read module.",null,null],[6,"NativeFile","","The native executable file for the target platform.",null,null],[8,"Object","","An object file.",null,null],[16,"Segment","","A segment in the object file.",65,null],[16,"SegmentIterator","","An iterator over the segments in the object file.",65,null],[16,"Section","","A section in the object file.",65,null],[16,"SectionIterator","","An iterator over the sections in the object file.",65,null],[16,"SymbolIterator","","An iterator over the symbols in the object file.",65,null],[10,"architecture","","Get the architecture type of the file.",65,[[["self"]],["architecture"]]],[11,"endianness","","Get the endianness of the file.",65,[[["self"]],["endianness"]]],[10,"is_little_endian","","Return true if the file is little endian, false if it is…",65,[[["self"]],["bool"]]],[10,"is_64","","Return true if the file can contain 64-bit addresses.",65,[[["self"]],["bool"]]],[10,"segments","","Get an iterator over the segments in the file.",65,[[["self"]]]],[10,"entry","","Get the entry point address of the binary",65,[[["self"]],["u64"]]],[10,"section_by_name","","Get the section named `section_name`, if such a section…",65,[[["str"],["self"]],["option"]]],[10,"section_by_index","","Get the section at the given index.",65,[[["sectionindex"],["self"]],["result"]]],[10,"sections","","Get an iterator over the sections in the file.",65,[[["self"]]]],[10,"symbol_by_index","","Get the debugging symbol at the given index.",65,[[["self"],["symbolindex"]],[["result",["symbol"]],["symbol"]]]],[10,"symbols","","Get an iterator over the debugging symbols in the file.",65,[[["self"]]]],[11,"symbol_data","","Get the data for the given symbol.",65,[[["symbol"],["self"]],[["result",["option"]],["option"]]]],[10,"dynamic_symbols","","Get an iterator over the dynamic linking symbols in the…",65,[[["self"]]]],[10,"symbol_map","","Construct a map from addresses to symbols.",65,[[["self"]],["symbolmap"]]],[10,"has_debug_symbols","","Return true if the file contains debug information…",65,[[["self"]],["bool"]]],[11,"mach_uuid","","The UUID from a Mach-O `LC_UUID` load command.",65,[[["self"]],[["result",["option"]],["option"]]]],[11,"build_id","","The build ID from an ELF `NT_GNU_BUILD_ID` note.",65,[[["self"]],[["result",["option"]],["option"]]]],[11,"gnu_debuglink","","The filename and CRC from a `.gnu_debuglink` section.",65,[[["self"]],[["result",["option"]],["option"]]]],[10,"flags","","File flags that are specific to each file format.",65,[[["self"]],["fileflags"]]],[8,"ObjectSegment","","A loadable segment defined in an object file.",null,null],[10,"address","","Returns the virtual address of the segment.",66,[[["self"]],["u64"]]],[10,"size","","Returns the size of the segment in memory.",66,[[["self"]],["u64"]]],[10,"align","","Returns the alignment of the segment in memory.",66,[[["self"]],["u64"]]],[10,"file_range","","Returns the offset and size of the segment in the file.",66,[[["self"]]]],[10,"data","","Returns a reference to the file contents of the segment.",66,[[["self"]],["result"]]],[10,"data_range","","Return the segment data in the given range.",66,[[["self"],["u64"]],[["result",["option"]],["option"]]]],[10,"name","","Returns the name of the segment.",66,[[["self"]],[["result",["option"]],["option",["str"]]]]],[8,"ObjectSection","","A section defined in an object file.",null,null],[16,"RelocationIterator","","An iterator over the relocations for a section.",67,null],[10,"index","","Returns the section index.",67,[[["self"]],["sectionindex"]]],[10,"address","","Returns the address of the section.",67,[[["self"]],["u64"]]],[10,"size","","Returns the size of the section in memory.",67,[[["self"]],["u64"]]],[10,"align","","Returns the alignment of the section in memory.",67,[[["self"]],["u64"]]],[10,"file_range","","Returns offset and size of on-disk segment (if any).",67,[[["self"]],["option"]]],[10,"data","","Returns the raw contents of the section.",67,[[["self"]],["result"]]],[10,"data_range","","Return the raw contents of the section data in the given…",67,[[["self"],["u64"]],[["result",["option"]],["option"]]]],[10,"compressed_data","","Returns the potentially compressed contents of the…",67,[[["self"]],[["compresseddata"],["result",["compresseddata"]]]]],[11,"uncompressed_data","","Returns the uncompressed contents of the section.",67,[[["self"]],[["result",["cow"]],["cow"]]]],[10,"name","","Returns the name of the section.",67,[[["self"]],[["str"],["result",["str"]]]]],[10,"segment_name","","Returns the name of the segment for this section.",67,[[["self"]],[["result",["option"]],["option",["str"]]]]],[10,"kind","","Return the kind of this section.",67,[[["self"]],["sectionkind"]]],[10,"relocations","","Get the relocations for this section.",67,[[["self"]]]],[10,"flags","","Section flags that are specific to each file format.",67,[[["self"]],["sectionflags"]]],[11,"index","","Returns the section index for the section where the symbol…",36,[[],[["sectionindex"],["option",["sectionindex"]]]]],[11,"kind","","Return the kind of this symbol.",68,[[["self"]],["symbolkind"]]],[11,"section","","Returns the section where the symbol is defined.",68,[[["self"]],["symbolsection"]]],[11,"section_index","","Returns the section index for the section containing this…",68,[[["self"]],[["sectionindex"],["option",["sectionindex"]]]]],[11,"is_undefined","","Return true if the symbol is undefined.",68,[[["self"]],["bool"]]],[11,"is_weak","","Return true if the symbol is weak.",68,[[["self"]],["bool"]]],[11,"is_global","","Return true if the symbol visible outside of the…",68,[[["self"]],["bool"]]],[11,"is_local","","Return true if the symbol is only visible within the…",68,[[["self"]],["bool"]]],[11,"scope","","Returns the symbol scope.",68,[[["self"]],["symbolscope"]]],[11,"flags","","Symbol flags that are specific to each file format.",68,[[["self"]],[["sectionindex"],["symbolflags",["sectionindex"]]]]],[11,"name","","The name of the symbol.",68,[[["self"]],[["str"],["option",["str"]]]]],[11,"address","","The address of the symbol. May be zero if the address is…",68,[[["self"]],["u64"]]],[11,"size","","The size of the symbol. May be zero if the size is unknown.",68,[[["self"]],["u64"]]],[11,"get","","Get the symbol containing the given address.",69,[[["self"],["u64"]],[["symbol"],["option",["symbol"]]]]],[11,"symbols","","Get all symbols in the map.",69,[[["self"]]]],[11,"kind","","The operation used to calculate the result of the…",70,[[["self"]],["relocationkind"]]],[11,"encoding","","Information about how the result of the relocation…",70,[[["self"]],["relocationencoding"]]],[11,"size","","The size in bits of the place of the relocation.",70,[[["self"]],["u8"]]],[11,"target","","The target of the relocation.",70,[[["self"]],["relocationtarget"]]],[11,"addend","","The addend to use in the relocation calculation.",70,[[["self"]],["i64"]]],[11,"set_addend","","Set the addend to use in the relocation calculation.",70,[[["i64"],["self"]]]],[11,"has_implicit_addend","","Returns true if there is an implicit addend stored in the…",70,[[["self"]],["bool"]]],[11,"none","","Data that is uncompressed.",35,[[],["self"]]],[11,"decompress","","Return the uncompressed data.",35,[[],[["result",["cow"]],["cow"]]]],[0,"elf","object","ELF definitions.",null,null],[3,"FileHeader32","object::elf","The header at the start of every 32-bit ELF file.",null,null],[12,"e_ident","","Magic number and other information.",71,null],[12,"e_type","","Object file type. One of the `ET_*` constants.",71,null],[12,"e_machine","","Architecture. One of the `EM_*` constants.",71,null],[12,"e_version","","Object file version. Must be `EV_CURRENT`.",71,null],[12,"e_entry","","Entry point virtual address.",71,null],[12,"e_phoff","","Program header table file offset.",71,null],[12,"e_shoff","","Section header table file offset.",71,null],[12,"e_flags","","Processor-specific flags.",71,null],[12,"e_ehsize","","Size in bytes of this header.",71,null],[12,"e_phentsize","","Program header table entry size.",71,null],[12,"e_phnum","","Program header table entry count.",71,null],[12,"e_shentsize","","Section header table entry size.",71,null],[12,"e_shnum","","Section header table entry count.",71,null],[12,"e_shstrndx","","Section header string table index.",71,null],[3,"FileHeader64","","The header at the start of every 64-bit ELF file.",null,null],[12,"e_ident","","Magic number and other information.",72,null],[12,"e_type","","Object file type. One of the `ET_*` constants.",72,null],[12,"e_machine","","Architecture. One of the `EM_*` constants.",72,null],[12,"e_version","","Object file version. Must be `EV_CURRENT`.",72,null],[12,"e_entry","","Entry point virtual address.",72,null],[12,"e_phoff","","Program header table file offset.",72,null],[12,"e_shoff","","Section header table file offset.",72,null],[12,"e_flags","","Processor-specific flags.",72,null],[12,"e_ehsize","","Size in bytes of this header.",72,null],[12,"e_phentsize","","Program header table entry size.",72,null],[12,"e_phnum","","Program header table entry count.",72,null],[12,"e_shentsize","","Section header table entry size.",72,null],[12,"e_shnum","","Section header table entry count.",72,null],[12,"e_shstrndx","","Section header string table index.",72,null],[3,"Ident","","Magic number and other information.",null,null],[12,"magic","","Magic number. Must be `ELFMAG`.",73,null],[12,"class","","File class. One of the `ELFCLASS*` constants.",73,null],[12,"data","","Data encoding. One of the `ELFDATA*` constants.",73,null],[12,"version","","ELF version. Must be `EV_CURRENT`.",73,null],[12,"os_abi","","OS ABI identification. One of the `ELFOSABI*` constants.",73,null],[12,"abi_version","","ABI version.",73,null],[12,"padding","","Padding bytes.",73,null],[3,"SectionHeader32","","Section header.",null,null],[12,"sh_name","","Section name.",74,null],[12,"sh_type","","Section type. One of the `SHT_*` constants.",74,null],[12,"sh_flags","","Section flags. A combination of the `SHF_*` constants.",74,null],[12,"sh_addr","","Section virtual address at execution.",74,null],[12,"sh_offset","","Section file offset.",74,null],[12,"sh_size","","Section size in bytes.",74,null],[12,"sh_link","","Link to another section.",74,null],[12,"sh_info","","Additional section information.",74,null],[12,"sh_addralign","","Section alignment.",74,null],[12,"sh_entsize","","Entry size if the section holds a table.",74,null],[3,"SectionHeader64","","Section header.",null,null],[12,"sh_name","","Section name.",75,null],[12,"sh_type","","Section type. One of the `SHT_*` constants.",75,null],[12,"sh_flags","","Section flags. A combination of the `SHF_*` constants.",75,null],[12,"sh_addr","","Section virtual address at execution.",75,null],[12,"sh_offset","","Section file offset.",75,null],[12,"sh_size","","Section size in bytes.",75,null],[12,"sh_link","","Link to another section.",75,null],[12,"sh_info","","Additional section information.",75,null],[12,"sh_addralign","","Section alignment.",75,null],[12,"sh_entsize","","Entry size if the section holds a table.",75,null],[3,"CompressionHeader32","","Section compression header.",null,null],[12,"ch_type","","Compression format. One of the `ELFCOMPRESS_*` values.",76,null],[12,"ch_size","","Uncompressed data size.",76,null],[12,"ch_addralign","","Uncompressed data alignment.",76,null],[3,"CompressionHeader64","","Section compression header.",null,null],[12,"ch_type","","Compression format. One of the `ELFCOMPRESS_*` values.",77,null],[12,"ch_reserved","","Reserved.",77,null],[12,"ch_size","","Uncompressed data size.",77,null],[12,"ch_addralign","","Uncompressed data alignment.",77,null],[3,"Sym32","","Symbol table entry.",null,null],[12,"st_name","","Symbol name.",78,null],[12,"st_value","","Symbol value.",78,null],[12,"st_size","","Symbol size.",78,null],[12,"st_info","","Symbol type and binding.",78,null],[12,"st_other","","Symbol visibility.",78,null],[12,"st_shndx","","Section index or one of the `SHN_*` values.",78,null],[3,"Sym64","","Symbol table entry.",null,null],[12,"st_name","","Symbol name.",79,null],[12,"st_info","","Symbol type and binding.",79,null],[12,"st_other","","Symbol visibility.",79,null],[12,"st_shndx","","Section index or one of the `SHN_*` values.",79,null],[12,"st_value","","Symbol value.",79,null],[12,"st_size","","Symbol size.",79,null],[3,"Syminfo32","","Additional information about a `Sym32`.",null,null],[3,"Syminfo64","","Additional information about a `Sym64`.",null,null],[3,"Rel32","","Relocation table entry without explicit addend.",null,null],[12,"r_offset","","Relocation address.",80,null],[12,"r_info","","Relocation type and symbol index.",80,null],[3,"Rela32","","Relocation table entry with explicit addend.",null,null],[12,"r_offset","","Relocation address.",81,null],[12,"r_info","","Relocation type and symbol index.",81,null],[12,"r_addend","","Explicit addend.",81,null],[3,"Rel64","","Relocation table entry without explicit addend.",null,null],[12,"r_offset","","Relocation address.",82,null],[12,"r_info","","Relocation type and symbol index.",82,null],[3,"Rela64","","Relocation table entry with explicit addend.",null,null],[12,"r_offset","","Relocation address.",83,null],[12,"r_info","","Relocation type and symbol index.",83,null],[12,"r_addend","","Explicit addend.",83,null],[3,"ProgramHeader32","","Program segment header.",null,null],[12,"p_type","","Segment type. One of the `PT_*` constants.",84,null],[12,"p_offset","","Segment file offset.",84,null],[12,"p_vaddr","","Segment virtual address.",84,null],[12,"p_paddr","","Segment physical address.",84,null],[12,"p_filesz","","Segment size in the file.",84,null],[12,"p_memsz","","Segment size in memory.",84,null],[12,"p_flags","","Segment flags. A combination of the `PF_*` constants.",84,null],[12,"p_align","","Segment alignment.",84,null],[3,"ProgramHeader64","","Program segment header.",null,null],[12,"p_type","","Segment type. One of the `PT_*` constants.",85,null],[12,"p_flags","","Segment flags. A combination of the `PF_*` constants.",85,null],[12,"p_offset","","Segment file offset.",85,null],[12,"p_vaddr","","Segment virtual address.",85,null],[12,"p_paddr","","Segment physical address.",85,null],[12,"p_filesz","","Segment size in the file.",85,null],[12,"p_memsz","","Segment size in memory.",85,null],[12,"p_align","","Segment alignment.",85,null],[3,"Dyn32","","Dynamic section entry.",null,null],[3,"Dyn64","","Dynamic section entry.",null,null],[3,"NoteHeader32","","Note section entry header.",null,null],[12,"n_namesz","","Length of the note's name.",86,null],[12,"n_descsz","","Length of the note's descriptor.",86,null],[12,"n_type","","Type of the note.",86,null],[3,"NoteHeader64","","Note section entry header.",null,null],[12,"n_namesz","","Length of the note's name.",87,null],[12,"n_descsz","","Length of the note's descriptor.",87,null],[12,"n_type","","Type of the note.",87,null],[7,"ELF_NOTE_CORE","","Note name for core files.",null,null],[7,"ELF_NOTE_LINUX","","Note name for linux core files.",null,null],[7,"ELF_NOTE_SOLARIS","","Solaris entries in the note section have this name.",null,null],[7,"ELF_NOTE_GNU","","GNU entries in the note section have this name.",null,null],[17,"ELFMAG","","File identification bytes stored in `Ident::magic`.",null,null],[17,"ELFCLASS32","","32-bit object.",null,null],[17,"ELFCLASS64","","64-bit object.",null,null],[17,"ELFDATANONE","","Invalid data encoding.",null,null],[17,"ELFDATA2LSB","","2's complement, little endian.",null,null],[17,"ELFDATA2MSB","","2's complement, big endian.",null,null],[17,"ELFOSABI_NONE","","UNIX System V ABI.",null,null],[17,"ELFOSABI_SYSV","","UNIX System V ABI.",null,null],[17,"ELFOSABI_HPUX","","HP-UX.",null,null],[17,"ELFOSABI_NETBSD","","NetBSD.",null,null],[17,"ELFOSABI_GNU","","Object uses GNU ELF extensions.",null,null],[17,"ELFOSABI_LINUX","","Object uses GNU ELF extensions.",null,null],[17,"ELFOSABI_SOLARIS","","Sun Solaris.",null,null],[17,"ELFOSABI_AIX","","IBM AIX.",null,null],[17,"ELFOSABI_IRIX","","SGI Irix.",null,null],[17,"ELFOSABI_FREEBSD","","FreeBSD.",null,null],[17,"ELFOSABI_TRU64","","Compaq TRU64 UNIX.",null,null],[17,"ELFOSABI_MODESTO","","Novell Modesto.",null,null],[17,"ELFOSABI_OPENBSD","","OpenBSD.",null,null],[17,"ELFOSABI_ARM_AEABI","","ARM EABI.",null,null],[17,"ELFOSABI_ARM","","ARM.",null,null],[17,"ELFOSABI_STANDALONE","","Standalone (embedded) application.",null,null],[17,"ET_NONE","","No file type.",null,null],[17,"ET_REL","","Relocatable file.",null,null],[17,"ET_EXEC","","Executable file.",null,null],[17,"ET_DYN","","Shared object file.",null,null],[17,"ET_CORE","","Core file.",null,null],[17,"ET_LOOS","","OS-specific range start.",null,null],[17,"ET_HIOS","","OS-specific range end.",null,null],[17,"ET_LOPROC","","Processor-specific range start.",null,null],[17,"ET_HIPROC","","Processor-specific range end.",null,null],[17,"EM_NONE","","No machine",null,null],[17,"EM_M32","","AT&T WE 32100",null,null],[17,"EM_SPARC","","SUN SPARC",null,null],[17,"EM_386","","Intel 80386",null,null],[17,"EM_68K","","Motorola m68k family",null,null],[17,"EM_88K","","Motorola m88k family",null,null],[17,"EM_IAMCU","","Intel MCU",null,null],[17,"EM_860","","Intel 80860",null,null],[17,"EM_MIPS","","MIPS R3000 big-endian",null,null],[17,"EM_S370","","IBM System/370",null,null],[17,"EM_MIPS_RS3_LE","","MIPS R3000 little-endian",null,null],[17,"EM_PARISC","","HPPA",null,null],[17,"EM_VPP500","","Fujitsu VPP500",null,null],[17,"EM_SPARC32PLUS","","Sun's \"v8plus\"",null,null],[17,"EM_960","","Intel 80960",null,null],[17,"EM_PPC","","PowerPC",null,null],[17,"EM_PPC64","","PowerPC 64-bit",null,null],[17,"EM_S390","","IBM S390",null,null],[17,"EM_SPU","","IBM SPU/SPC",null,null],[17,"EM_V800","","NEC V800 series",null,null],[17,"EM_FR20","","Fujitsu FR20",null,null],[17,"EM_RH32","","TRW RH-32",null,null],[17,"EM_RCE","","Motorola RCE",null,null],[17,"EM_ARM","","ARM",null,null],[17,"EM_FAKE_ALPHA","","Digital Alpha",null,null],[17,"EM_SH","","Hitachi SH",null,null],[17,"EM_SPARCV9","","SPARC v9 64-bit",null,null],[17,"EM_TRICORE","","Siemens Tricore",null,null],[17,"EM_ARC","","Argonaut RISC Core",null,null],[17,"EM_H8_300","","Hitachi H8/300",null,null],[17,"EM_H8_300H","","Hitachi H8/300H",null,null],[17,"EM_H8S","","Hitachi H8S",null,null],[17,"EM_H8_500","","Hitachi H8/500",null,null],[17,"EM_IA_64","","Intel Merced",null,null],[17,"EM_MIPS_X","","Stanford MIPS-X",null,null],[17,"EM_COLDFIRE","","Motorola Coldfire",null,null],[17,"EM_68HC12","","Motorola M68HC12",null,null],[17,"EM_MMA","","Fujitsu MMA Multimedia Accelerator",null,null],[17,"EM_PCP","","Siemens PCP",null,null],[17,"EM_NCPU","","Sony nCPU embeeded RISC",null,null],[17,"EM_NDR1","","Denso NDR1 microprocessor",null,null],[17,"EM_STARCORE","","Motorola Start*Core processor",null,null],[17,"EM_ME16","","Toyota ME16 processor",null,null],[17,"EM_ST100","","STMicroelectronic ST100 processor",null,null],[17,"EM_TINYJ","","Advanced Logic Corp. Tinyj emb.fam",null,null],[17,"EM_X86_64","","AMD x86-64 architecture",null,null],[17,"EM_PDSP","","Sony DSP Processor",null,null],[17,"EM_PDP10","","Digital PDP-10",null,null],[17,"EM_PDP11","","Digital PDP-11",null,null],[17,"EM_FX66","","Siemens FX66 microcontroller",null,null],[17,"EM_ST9PLUS","","STMicroelectronics ST9+ 8/16 mc",null,null],[17,"EM_ST7","","STmicroelectronics ST7 8 bit mc",null,null],[17,"EM_68HC16","","Motorola MC68HC16 microcontroller",null,null],[17,"EM_68HC11","","Motorola MC68HC11 microcontroller",null,null],[17,"EM_68HC08","","Motorola MC68HC08 microcontroller",null,null],[17,"EM_68HC05","","Motorola MC68HC05 microcontroller",null,null],[17,"EM_SVX","","Silicon Graphics SVx",null,null],[17,"EM_ST19","","STMicroelectronics ST19 8 bit mc",null,null],[17,"EM_VAX","","Digital VAX",null,null],[17,"EM_CRIS","","Axis Communications 32-bit emb.proc",null,null],[17,"EM_JAVELIN","","Infineon Technologies 32-bit emb.proc",null,null],[17,"EM_FIREPATH","","Element 14 64-bit DSP Processor",null,null],[17,"EM_ZSP","","LSI Logic 16-bit DSP Processor",null,null],[17,"EM_MMIX","","Donald Knuth's educational 64-bit proc",null,null],[17,"EM_HUANY","","Harvard University machine-independent object files",null,null],[17,"EM_PRISM","","SiTera Prism",null,null],[17,"EM_AVR","","Atmel AVR 8-bit microcontroller",null,null],[17,"EM_FR30","","Fujitsu FR30",null,null],[17,"EM_D10V","","Mitsubishi D10V",null,null],[17,"EM_D30V","","Mitsubishi D30V",null,null],[17,"EM_V850","","NEC v850",null,null],[17,"EM_M32R","","Mitsubishi M32R",null,null],[17,"EM_MN10300","","Matsushita MN10300",null,null],[17,"EM_MN10200","","Matsushita MN10200",null,null],[17,"EM_PJ","","picoJava",null,null],[17,"EM_OPENRISC","","OpenRISC 32-bit embedded processor",null,null],[17,"EM_ARC_COMPACT","","ARC International ARCompact",null,null],[17,"EM_XTENSA","","Tensilica Xtensa Architecture",null,null],[17,"EM_VIDEOCORE","","Alphamosaic VideoCore",null,null],[17,"EM_TMM_GPP","","Thompson Multimedia General Purpose Proc",null,null],[17,"EM_NS32K","","National Semi. 32000",null,null],[17,"EM_TPC","","Tenor Network TPC",null,null],[17,"EM_SNP1K","","Trebia SNP 1000",null,null],[17,"EM_ST200","","STMicroelectronics ST200",null,null],[17,"EM_IP2K","","Ubicom IP2xxx",null,null],[17,"EM_MAX","","MAX processor",null,null],[17,"EM_CR","","National Semi. CompactRISC",null,null],[17,"EM_F2MC16","","Fujitsu F2MC16",null,null],[17,"EM_MSP430","","Texas Instruments msp430",null,null],[17,"EM_BLACKFIN","","Analog Devices Blackfin DSP",null,null],[17,"EM_SE_C33","","Seiko Epson S1C33 family",null,null],[17,"EM_SEP","","Sharp embedded microprocessor",null,null],[17,"EM_ARCA","","Arca RISC",null,null],[17,"EM_UNICORE","","PKU-Unity & MPRC Peking Uni. mc series",null,null],[17,"EM_EXCESS","","eXcess configurable cpu",null,null],[17,"EM_DXP","","Icera Semi. Deep Execution Processor",null,null],[17,"EM_ALTERA_NIOS2","","Altera Nios II",null,null],[17,"EM_CRX","","National Semi. CompactRISC CRX",null,null],[17,"EM_XGATE","","Motorola XGATE",null,null],[17,"EM_C166","","Infineon C16x/XC16x",null,null],[17,"EM_M16C","","Renesas M16C",null,null],[17,"EM_DSPIC30F","","Microchip Technology dsPIC30F",null,null],[17,"EM_CE","","Freescale Communication Engine RISC",null,null],[17,"EM_M32C","","Renesas M32C",null,null],[17,"EM_TSK3000","","Altium TSK3000",null,null],[17,"EM_RS08","","Freescale RS08",null,null],[17,"EM_SHARC","","Analog Devices SHARC family",null,null],[17,"EM_ECOG2","","Cyan Technology eCOG2",null,null],[17,"EM_SCORE7","","Sunplus S+core7 RISC",null,null],[17,"EM_DSP24","","New Japan Radio (NJR) 24-bit DSP",null,null],[17,"EM_VIDEOCORE3","","Broadcom VideoCore III",null,null],[17,"EM_LATTICEMICO32","","RISC for Lattice FPGA",null,null],[17,"EM_SE_C17","","Seiko Epson C17",null,null],[17,"EM_TI_C6000","","Texas Instruments TMS320C6000 DSP",null,null],[17,"EM_TI_C2000","","Texas Instruments TMS320C2000 DSP",null,null],[17,"EM_TI_C5500","","Texas Instruments TMS320C55x DSP",null,null],[17,"EM_TI_ARP32","","Texas Instruments App. Specific RISC",null,null],[17,"EM_TI_PRU","","Texas Instruments Prog. Realtime Unit",null,null],[17,"EM_MMDSP_PLUS","","STMicroelectronics 64bit VLIW DSP",null,null],[17,"EM_CYPRESS_M8C","","Cypress M8C",null,null],[17,"EM_R32C","","Renesas R32C",null,null],[17,"EM_TRIMEDIA","","NXP Semi. TriMedia",null,null],[17,"EM_QDSP6","","QUALCOMM DSP6",null,null],[17,"EM_8051","","Intel 8051 and variants",null,null],[17,"EM_STXP7X","","STMicroelectronics STxP7x",null,null],[17,"EM_NDS32","","Andes Tech. compact code emb. RISC",null,null],[17,"EM_ECOG1X","","Cyan Technology eCOG1X",null,null],[17,"EM_MAXQ30","","Dallas Semi. MAXQ30 mc",null,null],[17,"EM_XIMO16","","New Japan Radio (NJR) 16-bit DSP",null,null],[17,"EM_MANIK","","M2000 Reconfigurable RISC",null,null],[17,"EM_CRAYNV2","","Cray NV2 vector architecture",null,null],[17,"EM_RX","","Renesas RX",null,null],[17,"EM_METAG","","Imagination Tech. META",null,null],[17,"EM_MCST_ELBRUS","","MCST Elbrus",null,null],[17,"EM_ECOG16","","Cyan Technology eCOG16",null,null],[17,"EM_CR16","","National Semi. CompactRISC CR16",null,null],[17,"EM_ETPU","","Freescale Extended Time Processing Unit",null,null],[17,"EM_SLE9X","","Infineon Tech. SLE9X",null,null],[17,"EM_L10M","","Intel L10M",null,null],[17,"EM_K10M","","Intel K10M",null,null],[17,"EM_AARCH64","","ARM AARCH64",null,null],[17,"EM_AVR32","","Amtel 32-bit microprocessor",null,null],[17,"EM_STM8","","STMicroelectronics STM8",null,null],[17,"EM_TILE64","","Tileta TILE64",null,null],[17,"EM_TILEPRO","","Tilera TILEPro",null,null],[17,"EM_MICROBLAZE","","Xilinx MicroBlaze",null,null],[17,"EM_CUDA","","NVIDIA CUDA",null,null],[17,"EM_TILEGX","","Tilera TILE-Gx",null,null],[17,"EM_CLOUDSHIELD","","CloudShield",null,null],[17,"EM_COREA_1ST","","KIPO-KAIST Core-A 1st gen.",null,null],[17,"EM_COREA_2ND","","KIPO-KAIST Core-A 2nd gen.",null,null],[17,"EM_ARC_COMPACT2","","Synopsys ARCompact V2",null,null],[17,"EM_OPEN8","","Open8 RISC",null,null],[17,"EM_RL78","","Renesas RL78",null,null],[17,"EM_VIDEOCORE5","","Broadcom VideoCore V",null,null],[17,"EM_78KOR","","Renesas 78KOR",null,null],[17,"EM_56800EX","","Freescale 56800EX DSC",null,null],[17,"EM_BA1","","Beyond BA1",null,null],[17,"EM_BA2","","Beyond BA2",null,null],[17,"EM_XCORE","","XMOS xCORE",null,null],[17,"EM_MCHP_PIC","","Microchip 8-bit PIC(r)",null,null],[17,"EM_KM32","","KM211 KM32",null,null],[17,"EM_KMX32","","KM211 KMX32",null,null],[17,"EM_EMX16","","KM211 KMX16",null,null],[17,"EM_EMX8","","KM211 KMX8",null,null],[17,"EM_KVARC","","KM211 KVARC",null,null],[17,"EM_CDP","","Paneve CDP",null,null],[17,"EM_COGE","","Cognitive Smart Memory Processor",null,null],[17,"EM_COOL","","Bluechip CoolEngine",null,null],[17,"EM_NORC","","Nanoradio Optimized RISC",null,null],[17,"EM_CSR_KALIMBA","","CSR Kalimba",null,null],[17,"EM_Z80","","Zilog Z80",null,null],[17,"EM_VISIUM","","Controls and Data Services VISIUMcore",null,null],[17,"EM_FT32","","FTDI Chip FT32",null,null],[17,"EM_MOXIE","","Moxie processor",null,null],[17,"EM_AMDGPU","","AMD GPU",null,null],[17,"EM_RISCV","","RISC-V",null,null],[17,"EM_BPF","","Linux BPF -- in-kernel virtual machine",null,null],[17,"EM_CSKY","","C-SKY",null,null],[17,"EM_ALPHA","","Digital Alpha",null,null],[17,"EV_NONE","","Invalid ELF version.",null,null],[17,"EV_CURRENT","","Current ELF version.",null,null],[17,"SHN_UNDEF","","Undefined section.",null,null],[17,"SHN_LORESERVE","","OS-specific range start. Start of reserved section indices.",null,null],[17,"SHN_LOPROC","","Start of processor-specific section indices.",null,null],[17,"SHN_HIPROC","","End of processor-specific section indices.",null,null],[17,"SHN_LOOS","","Start of OS-specific section indices.",null,null],[17,"SHN_HIOS","","End of OS-specific section indices.",null,null],[17,"SHN_ABS","","Associated symbol is absolute.",null,null],[17,"SHN_COMMON","","Associated symbol is common.",null,null],[17,"SHN_XINDEX","","Section index is in the `SHT_SYMTAB_SHNDX` section.",null,null],[17,"SHN_HIRESERVE","","End of reserved section indices.",null,null],[17,"SHT_NULL","","Section header table entry is unused.",null,null],[17,"SHT_PROGBITS","","Program data.",null,null],[17,"SHT_SYMTAB","","Symbol table.",null,null],[17,"SHT_STRTAB","","String table.",null,null],[17,"SHT_RELA","","Relocation entries with explicit addends.",null,null],[17,"SHT_HASH","","Symbol hash table.",null,null],[17,"SHT_DYNAMIC","","Dynamic linking information.",null,null],[17,"SHT_NOTE","","Notes.",null,null],[17,"SHT_NOBITS","","Program space with no data (bss).",null,null],[17,"SHT_REL","","Relocation entries without explicit addends.",null,null],[17,"SHT_SHLIB","","Reserved section type.",null,null],[17,"SHT_DYNSYM","","Dynamic linker symbol table.",null,null],[17,"SHT_INIT_ARRAY","","Array of constructors.",null,null],[17,"SHT_FINI_ARRAY","","Array of destructors.",null,null],[17,"SHT_PREINIT_ARRAY","","Array of pre-constructors.",null,null],[17,"SHT_GROUP","","Section group.",null,null],[17,"SHT_SYMTAB_SHNDX","","Extended section indices for a symbol table.",null,null],[17,"SHT_LOOS","","Start of OS-specific section types.",null,null],[17,"SHT_HIOS","","End of OS-specific section types.",null,null],[17,"SHT_LOPROC","","Start of processor-specific section types.",null,null],[17,"SHT_HIPROC","","End of processor-specific section types.",null,null],[17,"SHT_LOUSER","","Start of application-specific section types.",null,null],[17,"SHT_HIUSER","","End of application-specific section types.",null,null],[17,"SHF_WRITE","","Section is writable.",null,null],[17,"SHF_ALLOC","","Section occupies memory during execution.",null,null],[17,"SHF_EXECINSTR","","Section is executable.",null,null],[17,"SHF_MERGE","","Section may be be merged to eliminate duplication.",null,null],[17,"SHF_STRINGS","","Section contains nul-terminated strings.",null,null],[17,"SHF_INFO_LINK","","The `sh_info` field contains a section header table index.",null,null],[17,"SHF_LINK_ORDER","","Section has special ordering requirements when combining…",null,null],[17,"SHF_OS_NONCONFORMING","","Section requires special OS-specific handling.",null,null],[17,"SHF_GROUP","","Section is a member of a group.",null,null],[17,"SHF_TLS","","Section holds thread-local storage.",null,null],[17,"SHF_COMPRESSED","","Section is compressed.",null,null],[17,"SHF_MASKOS","","OS-specific section flags.",null,null],[17,"SHF_MASKPROC","","Processor-specific section flags.",null,null],[17,"ELFCOMPRESS_ZLIB","","ZLIB/DEFLATE algorithm.",null,null],[17,"ELFCOMPRESS_LOOS","","Start of OS-specific compression types.",null,null],[17,"ELFCOMPRESS_HIOS","","End of OS-specific compression types.",null,null],[17,"ELFCOMPRESS_LOPROC","","Start of processor-specific compression types.",null,null],[17,"ELFCOMPRESS_HIPROC","","End of processor-specific compression types.",null,null],[17,"GRP_COMDAT","","Mark group as COMDAT.",null,null],[17,"SYMINFO_BT_SELF","","Symbol bound to self",null,null],[17,"SYMINFO_BT_PARENT","","Symbol bound to parent",null,null],[17,"SYMINFO_BT_LOWRESERVE","","Beginning of reserved entries",null,null],[17,"SYMINFO_FLG_DIRECT","","Direct bound symbol",null,null],[17,"SYMINFO_FLG_PASSTHRU","","Pass-thru symbol for translator",null,null],[17,"SYMINFO_FLG_COPY","","Symbol is a copy-reloc",null,null],[17,"SYMINFO_FLG_LAZYLOAD","","Symbol bound to object to be lazy loaded",null,null],[17,"SYMINFO_NONE","","",null,null],[17,"SYMINFO_CURRENT","","",null,null],[17,"SYMINFO_NUM","","",null,null],[17,"STB_LOCAL","","Local symbol.",null,null],[17,"STB_GLOBAL","","Global symbol.",null,null],[17,"STB_WEAK","","Weak symbol.",null,null],[17,"STB_LOOS","","Start of OS-specific symbol binding.",null,null],[17,"STB_GNU_UNIQUE","","Unique symbol.",null,null],[17,"STB_HIOS","","End of OS-specific symbol binding.",null,null],[17,"STB_LOPROC","","Start of processor-specific symbol binding.",null,null],[17,"STB_HIPROC","","End of processor-specific symbol binding.",null,null],[17,"STT_NOTYPE","","Symbol type is unspecified.",null,null],[17,"STT_OBJECT","","Symbol is a data object.",null,null],[17,"STT_FUNC","","Symbol is a code object.",null,null],[17,"STT_SECTION","","Symbol is associated with a section.",null,null],[17,"STT_FILE","","Symbol's name is a file name.",null,null],[17,"STT_COMMON","","Symbol is a common data object.",null,null],[17,"STT_TLS","","Symbol is a thread-local storage object.",null,null],[17,"STT_LOOS","","Start of OS-specific symbol types.",null,null],[17,"STT_GNU_IFUNC","","Symbol is an indirect code object.",null,null],[17,"STT_HIOS","","End of OS-specific symbol types.",null,null],[17,"STT_LOPROC","","Start of processor-specific symbol types.",null,null],[17,"STT_HIPROC","","End of processor-specific symbol types.",null,null],[17,"STV_DEFAULT","","Default symbol visibility rules.",null,null],[17,"STV_INTERNAL","","Processor specific hidden class.",null,null],[17,"STV_HIDDEN","","Symbol is not visible to other components.",null,null],[17,"STV_PROTECTED","","Symbol is visible to other components, but is not…",null,null],[17,"PN_XNUM","","Special value for `FileHeader*::e_phnum`.",null,null],[17,"PT_NULL","","Program header table entry is unused.",null,null],[17,"PT_LOAD","","Loadable program segment.",null,null],[17,"PT_DYNAMIC","","Dynamic linking information.",null,null],[17,"PT_INTERP","","Program interpreter.",null,null],[17,"PT_NOTE","","Auxiliary information.",null,null],[17,"PT_SHLIB","","Reserved.",null,null],[17,"PT_PHDR","","Segment contains the program header table.",null,null],[17,"PT_TLS","","Thread-local storage segment.",null,null],[17,"PT_LOOS","","Start of OS-specific segment types.",null,null],[17,"PT_GNU_EH_FRAME","","GCC `.eh_frame_hdr` segment.",null,null],[17,"PT_GNU_STACK","","Indicates stack executability.",null,null],[17,"PT_GNU_RELRO","","Read-only after relocation.",null,null],[17,"PT_HIOS","","End of OS-specific segment types.",null,null],[17,"PT_LOPROC","","Start of processor-specific segment types.",null,null],[17,"PT_HIPROC","","End of processor-specific segment types.",null,null],[17,"PF_X","","Segment is executable.",null,null],[17,"PF_W","","Segment is writable.",null,null],[17,"PF_R","","Segment is readable.",null,null],[17,"PF_MASKOS","","OS-specific segment flags.",null,null],[17,"PF_MASKPROC","","Processor-specific segment flags.",null,null],[17,"NT_PRSTATUS","","Contains copy of prstatus struct.",null,null],[17,"NT_PRFPREG","","Contains copy of fpregset struct.",null,null],[17,"NT_FPREGSET","","Contains copy of fpregset struct.",null,null],[17,"NT_PRPSINFO","","Contains copy of prpsinfo struct.",null,null],[17,"NT_PRXREG","","Contains copy of prxregset struct.",null,null],[17,"NT_TASKSTRUCT","","Contains copy of task structure.",null,null],[17,"NT_PLATFORM","","String from sysinfo(SI_PLATFORM).",null,null],[17,"NT_AUXV","","Contains copy of auxv array.",null,null],[17,"NT_GWINDOWS","","Contains copy of gwindows struct.",null,null],[17,"NT_ASRS","","Contains copy of asrset struct.",null,null],[17,"NT_PSTATUS","","Contains copy of pstatus struct.",null,null],[17,"NT_PSINFO","","Contains copy of psinfo struct.",null,null],[17,"NT_PRCRED","","Contains copy of prcred struct.",null,null],[17,"NT_UTSNAME","","Contains copy of utsname struct.",null,null],[17,"NT_LWPSTATUS","","Contains copy of lwpstatus struct.",null,null],[17,"NT_LWPSINFO","","Contains copy of lwpinfo struct.",null,null],[17,"NT_PRFPXREG","","Contains copy of fprxregset struct.",null,null],[17,"NT_SIGINFO","","Contains copy of siginfo_t, size might increase.",null,null],[17,"NT_FILE","","Contains information about mapped files.",null,null],[17,"NT_PRXFPREG","","Contains copy of user_fxsr_struct.",null,null],[17,"NT_PPC_VMX","","PowerPC Altivec/VMX registers.",null,null],[17,"NT_PPC_SPE","","PowerPC SPE/EVR registers.",null,null],[17,"NT_PPC_VSX","","PowerPC VSX registers.",null,null],[17,"NT_PPC_TAR","","Target Address Register.",null,null],[17,"NT_PPC_PPR","","Program Priority Register.",null,null],[17,"NT_PPC_DSCR","","Data Stream Control Register.",null,null],[17,"NT_PPC_EBB","","Event Based Branch Registers.",null,null],[17,"NT_PPC_PMU","","Performance Monitor Registers.",null,null],[17,"NT_PPC_TM_CGPR","","TM checkpointed GPR Registers.",null,null],[17,"NT_PPC_TM_CFPR","","TM checkpointed FPR Registers.",null,null],[17,"NT_PPC_TM_CVMX","","TM checkpointed VMX Registers.",null,null],[17,"NT_PPC_TM_CVSX","","TM checkpointed VSX Registers.",null,null],[17,"NT_PPC_TM_SPR","","TM Special Purpose Registers.",null,null],[17,"NT_PPC_TM_CTAR","","TM checkpointed Target Address Register.",null,null],[17,"NT_PPC_TM_CPPR","","TM checkpointed Program Priority Register.",null,null],[17,"NT_PPC_TM_CDSCR","","TM checkpointed Data Stream Control Register.",null,null],[17,"NT_PPC_PKEY","","Memory Protection Keys registers.",null,null],[17,"NT_386_TLS","","i386 TLS slots (struct user_desc).",null,null],[17,"NT_386_IOPERM","","x86 io permission bitmap (1=deny).",null,null],[17,"NT_X86_XSTATE","","x86 extended state using xsave.",null,null],[17,"NT_S390_HIGH_GPRS","","s390 upper register halves.",null,null],[17,"NT_S390_TIMER","","s390 timer register.",null,null],[17,"NT_S390_TODCMP","","s390 TOD clock comparator register.",null,null],[17,"NT_S390_TODPREG","","s390 TOD programmable register.",null,null],[17,"NT_S390_CTRS","","s390 control registers.",null,null],[17,"NT_S390_PREFIX","","s390 prefix register.",null,null],[17,"NT_S390_LAST_BREAK","","s390 breaking event address.",null,null],[17,"NT_S390_SYSTEM_CALL","","s390 system call restart data.",null,null],[17,"NT_S390_TDB","","s390 transaction diagnostic block.",null,null],[17,"NT_S390_VXRS_LOW","","s390 vector registers 0-15 upper half.",null,null],[17,"NT_S390_VXRS_HIGH","","s390 vector registers 16-31.",null,null],[17,"NT_S390_GS_CB","","s390 guarded storage registers.",null,null],[17,"NT_S390_GS_BC","","s390 guarded storage broadcast control block.",null,null],[17,"NT_S390_RI_CB","","s390 runtime instrumentation.",null,null],[17,"NT_ARM_VFP","","ARM VFP/NEON registers.",null,null],[17,"NT_ARM_TLS","","ARM TLS register.",null,null],[17,"NT_ARM_HW_BREAK","","ARM hardware breakpoint registers.",null,null],[17,"NT_ARM_HW_WATCH","","ARM hardware watchpoint registers.",null,null],[17,"NT_ARM_SYSTEM_CALL","","ARM system call number.",null,null],[17,"NT_ARM_SVE","","ARM Scalable Vector Extension registers.",null,null],[17,"NT_VMCOREDD","","Vmcore Device Dump Note.",null,null],[17,"NT_MIPS_DSP","","MIPS DSP ASE registers.",null,null],[17,"NT_MIPS_FP_MODE","","MIPS floating-point mode.",null,null],[17,"NT_VERSION","","Note type for version string.",null,null],[17,"DT_NULL","","Marks end of dynamic section",null,null],[17,"DT_NEEDED","","Name of needed library",null,null],[17,"DT_PLTRELSZ","","Size in bytes of PLT relocs",null,null],[17,"DT_PLTGOT","","Processor defined value",null,null],[17,"DT_HASH","","Address of symbol hash table",null,null],[17,"DT_STRTAB","","Address of string table",null,null],[17,"DT_SYMTAB","","Address of symbol table",null,null],[17,"DT_RELA","","Address of Rela relocs",null,null],[17,"DT_RELASZ","","Total size of Rela relocs",null,null],[17,"DT_RELAENT","","Size of one Rela reloc",null,null],[17,"DT_STRSZ","","Size of string table",null,null],[17,"DT_SYMENT","","Size of one symbol table entry",null,null],[17,"DT_INIT","","Address of init function",null,null],[17,"DT_FINI","","Address of termination function",null,null],[17,"DT_SONAME","","Name of shared object",null,null],[17,"DT_RPATH","","Library search path (deprecated)",null,null],[17,"DT_SYMBOLIC","","Start symbol search here",null,null],[17,"DT_REL","","Address of Rel relocs",null,null],[17,"DT_RELSZ","","Total size of Rel relocs",null,null],[17,"DT_RELENT","","Size of one Rel reloc",null,null],[17,"DT_PLTREL","","Type of reloc in PLT",null,null],[17,"DT_DEBUG","","For debugging; unspecified",null,null],[17,"DT_TEXTREL","","Reloc might modify .text",null,null],[17,"DT_JMPREL","","Address of PLT relocs",null,null],[17,"DT_BIND_NOW","","Process relocations of object",null,null],[17,"DT_INIT_ARRAY","","Array with addresses of init fct",null,null],[17,"DT_FINI_ARRAY","","Array with addresses of fini fct",null,null],[17,"DT_INIT_ARRAYSZ","","Size in bytes of DT_INIT_ARRAY",null,null],[17,"DT_FINI_ARRAYSZ","","Size in bytes of DT_FINI_ARRAY",null,null],[17,"DT_RUNPATH","","Library search path",null,null],[17,"DT_FLAGS","","Flags for the object being loaded",null,null],[17,"DT_ENCODING","","Start of encoded range",null,null],[17,"DT_PREINIT_ARRAY","","Array with addresses of preinit fct",null,null],[17,"DT_PREINIT_ARRAYSZ","","size in bytes of DT_PREINIT_ARRAY",null,null],[17,"DT_SYMTAB_SHNDX","","Address of SYMTAB_SHNDX section",null,null],[17,"DT_LOOS","","Start of OS-specific",null,null],[17,"DT_HIOS","","End of OS-specific",null,null],[17,"DT_LOPROC","","Start of processor-specific",null,null],[17,"DT_HIPROC","","End of processor-specific",null,null],[17,"DT_VALRNGLO","","",null,null],[17,"DT_GNU_PRELINKED","","Prelinking timestamp",null,null],[17,"DT_GNU_CONFLICTSZ","","Size of conflict section",null,null],[17,"DT_GNU_LIBLISTSZ","","Size of library list",null,null],[17,"DT_CHECKSUM","","",null,null],[17,"DT_PLTPADSZ","","",null,null],[17,"DT_MOVEENT","","",null,null],[17,"DT_MOVESZ","","",null,null],[17,"DT_FEATURE_1","","Feature selection (DTF_*).",null,null],[17,"DT_POSFLAG_1","","Flags for DT_* entries, affecting the following DT_* entry.",null,null],[17,"DT_SYMINSZ","","Size of syminfo table (in bytes)",null,null],[17,"DT_SYMINENT","","Entry size of syminfo",null,null],[17,"DT_VALRNGHI","","",null,null],[17,"DT_ADDRRNGLO","","",null,null],[17,"DT_GNU_HASH","","GNU-style hash table.",null,null],[17,"DT_TLSDESC_PLT","","",null,null],[17,"DT_TLSDESC_GOT","","",null,null],[17,"DT_GNU_CONFLICT","","Start of conflict section",null,null],[17,"DT_GNU_LIBLIST","","Library list",null,null],[17,"DT_CONFIG","","Configuration information.",null,null],[17,"DT_DEPAUDIT","","Dependency auditing.",null,null],[17,"DT_AUDIT","","Object auditing.",null,null],[17,"DT_PLTPAD","","PLT padding.",null,null],[17,"DT_MOVETAB","","Move table.",null,null],[17,"DT_SYMINFO","","Syminfo table.",null,null],[17,"DT_ADDRRNGHI","","",null,null],[17,"DT_VERSYM","","",null,null],[17,"DT_RELACOUNT","","",null,null],[17,"DT_RELCOUNT","","",null,null],[17,"DT_FLAGS_1","","State flags, see DF_1_* below.",null,null],[17,"DT_VERDEF","","Address of version definition table",null,null],[17,"DT_VERDEFNUM","","Number of version definitions",null,null],[17,"DT_VERNEED","","Address of table with needed versions",null,null],[17,"DT_VERNEEDNUM","","Number of needed versions",null,null],[17,"DT_AUXILIARY","","Shared object to load before self",null,null],[17,"DT_FILTER","","Shared object to get values from",null,null],[17,"DF_ORIGIN","","Object may use DF_ORIGIN",null,null],[17,"DF_SYMBOLIC","","Symbol resolutions starts here",null,null],[17,"DF_TEXTREL","","Object contains text relocations",null,null],[17,"DF_BIND_NOW","","No lazy binding for this object",null,null],[17,"DF_STATIC_TLS","","Module uses the static TLS model",null,null],[17,"DF_1_NOW","","Set RTLD_NOW for this object.",null,null],[17,"DF_1_GLOBAL","","Set RTLD_GLOBAL for this object.",null,null],[17,"DF_1_GROUP","","Set RTLD_GROUP for this object.",null,null],[17,"DF_1_NODELETE","","Set RTLD_NODELETE for this object.",null,null],[17,"DF_1_LOADFLTR","","Trigger filtee loading at runtime.",null,null],[17,"DF_1_INITFIRST","","Set RTLD_INITFIRST for this object.",null,null],[17,"DF_1_NOOPEN","","Set RTLD_NOOPEN for this object.",null,null],[17,"DF_1_ORIGIN","","$ORIGIN must be handled.",null,null],[17,"DF_1_DIRECT","","Direct binding enabled.",null,null],[17,"DF_1_TRANS","","",null,null],[17,"DF_1_INTERPOSE","","Object is used to interpose.",null,null],[17,"DF_1_NODEFLIB","","Ignore default lib search path.",null,null],[17,"DF_1_NODUMP","","Object can't be dldump'ed.",null,null],[17,"DF_1_CONFALT","","Configuration alternative created.",null,null],[17,"DF_1_ENDFILTEE","","Filtee terminates filters search.",null,null],[17,"DF_1_DISPRELDNE","","Disp reloc applied at build time.",null,null],[17,"DF_1_DISPRELPND","","Disp reloc applied at run-time.",null,null],[17,"DF_1_NODIRECT","","Object has no-direct binding.",null,null],[17,"DF_1_IGNMULDEF","","",null,null],[17,"DF_1_NOKSYMS","","",null,null],[17,"DF_1_NOHDR","","",null,null],[17,"DF_1_EDITED","","Object is modified after built.",null,null],[17,"DF_1_NORELOC","","",null,null],[17,"DF_1_SYMINTPOSE","","Object has individual interposers.",null,null],[17,"DF_1_GLOBAUDIT","","Global auditing required.",null,null],[17,"DF_1_SINGLETON","","Singleton symbols are used.",null,null],[17,"DF_1_STUB","","",null,null],[17,"DF_1_PIE","","",null,null],[17,"NT_SOLARIS_PAGESIZE_HINT","","Desired pagesize for the binary.",null,null],[17,"NT_GNU_ABI_TAG","","ABI information.",null,null],[17,"ELF_NOTE_OS_LINUX","","OS descriptor for `NT_GNU_ABI_TAG`.",null,null],[17,"ELF_NOTE_OS_GNU","","OS descriptor for `NT_GNU_ABI_TAG`.",null,null],[17,"ELF_NOTE_OS_SOLARIS2","","OS descriptor for `NT_GNU_ABI_TAG`.",null,null],[17,"ELF_NOTE_OS_FREEBSD","","OS descriptor for `NT_GNU_ABI_TAG`.",null,null],[17,"NT_GNU_HWCAP","","Synthetic hwcap information.",null,null],[17,"NT_GNU_BUILD_ID","","Build ID bits as generated by `ld --build-id`.",null,null],[17,"NT_GNU_GOLD_VERSION","","Version note generated by GNU gold containing a version…",null,null],[17,"NT_GNU_PROPERTY_TYPE_0","","Program property.",null,null],[17,"R_68K_NONE","","No reloc",null,null],[17,"R_68K_32","","Direct 32 bit",null,null],[17,"R_68K_16","","Direct 16 bit",null,null],[17,"R_68K_8","","Direct 8 bit",null,null],[17,"R_68K_PC32","","PC relative 32 bit",null,null],[17,"R_68K_PC16","","PC relative 16 bit",null,null],[17,"R_68K_PC8","","PC relative 8 bit",null,null],[17,"R_68K_GOT32","","32 bit PC relative GOT entry",null,null],[17,"R_68K_GOT16","","16 bit PC relative GOT entry",null,null],[17,"R_68K_GOT8","","8 bit PC relative GOT entry",null,null],[17,"R_68K_GOT32O","","32 bit GOT offset",null,null],[17,"R_68K_GOT16O","","16 bit GOT offset",null,null],[17,"R_68K_GOT8O","","8 bit GOT offset",null,null],[17,"R_68K_PLT32","","32 bit PC relative PLT address",null,null],[17,"R_68K_PLT16","","16 bit PC relative PLT address",null,null],[17,"R_68K_PLT8","","8 bit PC relative PLT address",null,null],[17,"R_68K_PLT32O","","32 bit PLT offset",null,null],[17,"R_68K_PLT16O","","16 bit PLT offset",null,null],[17,"R_68K_PLT8O","","8 bit PLT offset",null,null],[17,"R_68K_COPY","","Copy symbol at runtime",null,null],[17,"R_68K_GLOB_DAT","","Create GOT entry",null,null],[17,"R_68K_JMP_SLOT","","Create PLT entry",null,null],[17,"R_68K_RELATIVE","","Adjust by program base",null,null],[17,"R_68K_TLS_GD32","","32 bit GOT offset for GD",null,null],[17,"R_68K_TLS_GD16","","16 bit GOT offset for GD",null,null],[17,"R_68K_TLS_GD8","","8 bit GOT offset for GD",null,null],[17,"R_68K_TLS_LDM32","","32 bit GOT offset for LDM",null,null],[17,"R_68K_TLS_LDM16","","16 bit GOT offset for LDM",null,null],[17,"R_68K_TLS_LDM8","","8 bit GOT offset for LDM",null,null],[17,"R_68K_TLS_LDO32","","32 bit module-relative offset",null,null],[17,"R_68K_TLS_LDO16","","16 bit module-relative offset",null,null],[17,"R_68K_TLS_LDO8","","8 bit module-relative offset",null,null],[17,"R_68K_TLS_IE32","","32 bit GOT offset for IE",null,null],[17,"R_68K_TLS_IE16","","16 bit GOT offset for IE",null,null],[17,"R_68K_TLS_IE8","","8 bit GOT offset for IE",null,null],[17,"R_68K_TLS_LE32","","32 bit offset relative to static TLS block",null,null],[17,"R_68K_TLS_LE16","","16 bit offset relative to static TLS block",null,null],[17,"R_68K_TLS_LE8","","8 bit offset relative to static TLS block",null,null],[17,"R_68K_TLS_DTPMOD32","","32 bit module number",null,null],[17,"R_68K_TLS_DTPREL32","","32 bit module-relative offset",null,null],[17,"R_68K_TLS_TPREL32","","32 bit TP-relative offset",null,null],[17,"R_386_NONE","","No reloc",null,null],[17,"R_386_32","","Direct 32 bit",null,null],[17,"R_386_PC32","","PC relative 32 bit",null,null],[17,"R_386_GOT32","","32 bit GOT entry",null,null],[17,"R_386_PLT32","","32 bit PLT address",null,null],[17,"R_386_COPY","","Copy symbol at runtime",null,null],[17,"R_386_GLOB_DAT","","Create GOT entry",null,null],[17,"R_386_JMP_SLOT","","Create PLT entry",null,null],[17,"R_386_RELATIVE","","Adjust by program base",null,null],[17,"R_386_GOTOFF","","32 bit offset to GOT",null,null],[17,"R_386_GOTPC","","32 bit PC relative offset to GOT",null,null],[17,"R_386_32PLT","","Direct 32 bit PLT address",null,null],[17,"R_386_TLS_TPOFF","","Offset in static TLS block",null,null],[17,"R_386_TLS_IE","","Address of GOT entry for static TLS block offset",null,null],[17,"R_386_TLS_GOTIE","","GOT entry for static TLS block offset",null,null],[17,"R_386_TLS_LE","","Offset relative to static TLS block",null,null],[17,"R_386_TLS_GD","","Direct 32 bit for GNU version of general dynamic thread…",null,null],[17,"R_386_TLS_LDM","","Direct 32 bit for GNU version of local dynamic thread…",null,null],[17,"R_386_16","","Direct 16 bit",null,null],[17,"R_386_PC16","","PC relative 16 bit",null,null],[17,"R_386_8","","Direct 8 bit",null,null],[17,"R_386_PC8","","PC relative 8 bit",null,null],[17,"R_386_TLS_GD_32","","Direct 32 bit for general dynamic thread local data",null,null],[17,"R_386_TLS_GD_PUSH","","Tag for pushl in GD TLS code",null,null],[17,"R_386_TLS_GD_CALL","","Relocation for call to __tls_get_addr()",null,null],[17,"R_386_TLS_GD_POP","","Tag for popl in GD TLS code",null,null],[17,"R_386_TLS_LDM_32","","Direct 32 bit for local dynamic thread local data in LE code",null,null],[17,"R_386_TLS_LDM_PUSH","","Tag for pushl in LDM TLS code",null,null],[17,"R_386_TLS_LDM_CALL","","Relocation for call to __tls_get_addr() in LDM code",null,null],[17,"R_386_TLS_LDM_POP","","Tag for popl in LDM TLS code",null,null],[17,"R_386_TLS_LDO_32","","Offset relative to TLS block",null,null],[17,"R_386_TLS_IE_32","","GOT entry for negated static TLS block offset",null,null],[17,"R_386_TLS_LE_32","","Negated offset relative to static TLS block",null,null],[17,"R_386_TLS_DTPMOD32","","ID of module containing symbol",null,null],[17,"R_386_TLS_DTPOFF32","","Offset in TLS block",null,null],[17,"R_386_TLS_TPOFF32","","Negated offset in static TLS block",null,null],[17,"R_386_SIZE32","","32-bit symbol size",null,null],[17,"R_386_TLS_GOTDESC","","GOT offset for TLS descriptor.",null,null],[17,"R_386_TLS_DESC_CALL","","Marker of call through TLS descriptor for relaxation.",null,null],[17,"R_386_TLS_DESC","","TLS descriptor containing pointer to code and to argument,…",null,null],[17,"R_386_IRELATIVE","","Adjust indirectly by program base",null,null],[17,"R_386_GOT32X","","Load from 32 bit GOT entry, relaxable.",null,null],[17,"STT_SPARC_REGISTER","","Global register reserved to app.",null,null],[17,"EF_SPARCV9_MM","","",null,null],[17,"EF_SPARCV9_TSO","","",null,null],[17,"EF_SPARCV9_PSO","","",null,null],[17,"EF_SPARCV9_RMO","","",null,null],[17,"EF_SPARC_LEDATA","","little endian data",null,null],[17,"EF_SPARC_EXT_MASK","","",null,null],[17,"EF_SPARC_32PLUS","","generic V8+ features",null,null],[17,"EF_SPARC_SUN_US1","","Sun UltraSPARC1 extensions",null,null],[17,"EF_SPARC_HAL_R1","","HAL R1 extensions",null,null],[17,"EF_SPARC_SUN_US3","","Sun UltraSPARCIII extensions",null,null],[17,"R_SPARC_NONE","","No reloc",null,null],[17,"R_SPARC_8","","Direct 8 bit",null,null],[17,"R_SPARC_16","","Direct 16 bit",null,null],[17,"R_SPARC_32","","Direct 32 bit",null,null],[17,"R_SPARC_DISP8","","PC relative 8 bit",null,null],[17,"R_SPARC_DISP16","","PC relative 16 bit",null,null],[17,"R_SPARC_DISP32","","PC relative 32 bit",null,null],[17,"R_SPARC_WDISP30","","PC relative 30 bit shifted",null,null],[17,"R_SPARC_WDISP22","","PC relative 22 bit shifted",null,null],[17,"R_SPARC_HI22","","High 22 bit",null,null],[17,"R_SPARC_22","","Direct 22 bit",null,null],[17,"R_SPARC_13","","Direct 13 bit",null,null],[17,"R_SPARC_LO10","","Truncated 10 bit",null,null],[17,"R_SPARC_GOT10","","Truncated 10 bit GOT entry",null,null],[17,"R_SPARC_GOT13","","13 bit GOT entry",null,null],[17,"R_SPARC_GOT22","","22 bit GOT entry shifted",null,null],[17,"R_SPARC_PC10","","PC relative 10 bit truncated",null,null],[17,"R_SPARC_PC22","","PC relative 22 bit shifted",null,null],[17,"R_SPARC_WPLT30","","30 bit PC relative PLT address",null,null],[17,"R_SPARC_COPY","","Copy symbol at runtime",null,null],[17,"R_SPARC_GLOB_DAT","","Create GOT entry",null,null],[17,"R_SPARC_JMP_SLOT","","Create PLT entry",null,null],[17,"R_SPARC_RELATIVE","","Adjust by program base",null,null],[17,"R_SPARC_UA32","","Direct 32 bit unaligned",null,null],[17,"R_SPARC_PLT32","","Direct 32 bit ref to PLT entry",null,null],[17,"R_SPARC_HIPLT22","","High 22 bit PLT entry",null,null],[17,"R_SPARC_LOPLT10","","Truncated 10 bit PLT entry",null,null],[17,"R_SPARC_PCPLT32","","PC rel 32 bit ref to PLT entry",null,null],[17,"R_SPARC_PCPLT22","","PC rel high 22 bit PLT entry",null,null],[17,"R_SPARC_PCPLT10","","PC rel trunc 10 bit PLT entry",null,null],[17,"R_SPARC_10","","Direct 10 bit",null,null],[17,"R_SPARC_11","","Direct 11 bit",null,null],[17,"R_SPARC_64","","Direct 64 bit",null,null],[17,"R_SPARC_OLO10","","10bit with secondary 13bit addend",null,null],[17,"R_SPARC_HH22","","Top 22 bits of direct 64 bit",null,null],[17,"R_SPARC_HM10","","High middle 10 bits of ...",null,null],[17,"R_SPARC_LM22","","Low middle 22 bits of ...",null,null],[17,"R_SPARC_PC_HH22","","Top 22 bits of pc rel 64 bit",null,null],[17,"R_SPARC_PC_HM10","","High middle 10 bit of ...",null,null],[17,"R_SPARC_PC_LM22","","Low miggle 22 bits of ...",null,null],[17,"R_SPARC_WDISP16","","PC relative 16 bit shifted",null,null],[17,"R_SPARC_WDISP19","","PC relative 19 bit shifted",null,null],[17,"R_SPARC_GLOB_JMP","","was part of v9 ABI but was removed",null,null],[17,"R_SPARC_7","","Direct 7 bit",null,null],[17,"R_SPARC_5","","Direct 5 bit",null,null],[17,"R_SPARC_6","","Direct 6 bit",null,null],[17,"R_SPARC_DISP64","","PC relative 64 bit",null,null],[17,"R_SPARC_PLT64","","Direct 64 bit ref to PLT entry",null,null],[17,"R_SPARC_HIX22","","High 22 bit complemented",null,null],[17,"R_SPARC_LOX10","","Truncated 11 bit complemented",null,null],[17,"R_SPARC_H44","","Direct high 12 of 44 bit",null,null],[17,"R_SPARC_M44","","Direct mid 22 of 44 bit",null,null],[17,"R_SPARC_L44","","Direct low 10 of 44 bit",null,null],[17,"R_SPARC_REGISTER","","Global register usage",null,null],[17,"R_SPARC_UA64","","Direct 64 bit unaligned",null,null],[17,"R_SPARC_UA16","","Direct 16 bit unaligned",null,null],[17,"R_SPARC_TLS_GD_HI22","","",null,null],[17,"R_SPARC_TLS_GD_LO10","","",null,null],[17,"R_SPARC_TLS_GD_ADD","","",null,null],[17,"R_SPARC_TLS_GD_CALL","","",null,null],[17,"R_SPARC_TLS_LDM_HI22","","",null,null],[17,"R_SPARC_TLS_LDM_LO10","","",null,null],[17,"R_SPARC_TLS_LDM_ADD","","",null,null],[17,"R_SPARC_TLS_LDM_CALL","","",null,null],[17,"R_SPARC_TLS_LDO_HIX22","","",null,null],[17,"R_SPARC_TLS_LDO_LOX10","","",null,null],[17,"R_SPARC_TLS_LDO_ADD","","",null,null],[17,"R_SPARC_TLS_IE_HI22","","",null,null],[17,"R_SPARC_TLS_IE_LO10","","",null,null],[17,"R_SPARC_TLS_IE_LD","","",null,null],[17,"R_SPARC_TLS_IE_LDX","","",null,null],[17,"R_SPARC_TLS_IE_ADD","","",null,null],[17,"R_SPARC_TLS_LE_HIX22","","",null,null],[17,"R_SPARC_TLS_LE_LOX10","","",null,null],[17,"R_SPARC_TLS_DTPMOD32","","",null,null],[17,"R_SPARC_TLS_DTPMOD64","","",null,null],[17,"R_SPARC_TLS_DTPOFF32","","",null,null],[17,"R_SPARC_TLS_DTPOFF64","","",null,null],[17,"R_SPARC_TLS_TPOFF32","","",null,null],[17,"R_SPARC_TLS_TPOFF64","","",null,null],[17,"R_SPARC_GOTDATA_HIX22","","",null,null],[17,"R_SPARC_GOTDATA_LOX10","","",null,null],[17,"R_SPARC_GOTDATA_OP_HIX22","","",null,null],[17,"R_SPARC_GOTDATA_OP_LOX10","","",null,null],[17,"R_SPARC_GOTDATA_OP","","",null,null],[17,"R_SPARC_H34","","",null,null],[17,"R_SPARC_SIZE32","","",null,null],[17,"R_SPARC_SIZE64","","",null,null],[17,"R_SPARC_WDISP10","","",null,null],[17,"R_SPARC_JMP_IREL","","",null,null],[17,"R_SPARC_IRELATIVE","","",null,null],[17,"R_SPARC_GNU_VTINHERIT","","",null,null],[17,"R_SPARC_GNU_VTENTRY","","",null,null],[17,"R_SPARC_REV32","","",null,null],[17,"DT_SPARC_REGISTER","","",null,null],[17,"EF_MIPS_NOREORDER","","A .noreorder directive was used.",null,null],[17,"EF_MIPS_PIC","","Contains PIC code.",null,null],[17,"EF_MIPS_CPIC","","Uses PIC calling sequence.",null,null],[17,"EF_MIPS_XGOT","","",null,null],[17,"EF_MIPS_64BIT_WHIRL","","",null,null],[17,"EF_MIPS_ABI2","","",null,null],[17,"EF_MIPS_ABI_ON32","","",null,null],[17,"EF_MIPS_FP64","","Uses FP64 (12 callee-saved).",null,null],[17,"EF_MIPS_NAN2008","","Uses IEEE 754-2008 NaN encoding.",null,null],[17,"EF_MIPS_ARCH","","MIPS architecture level.",null,null],[17,"EF_MIPS_ARCH_1","","-mips1 code.",null,null],[17,"EF_MIPS_ARCH_2","","-mips2 code.",null,null],[17,"EF_MIPS_ARCH_3","","-mips3 code.",null,null],[17,"EF_MIPS_ARCH_4","","-mips4 code.",null,null],[17,"EF_MIPS_ARCH_5","","-mips5 code.",null,null],[17,"EF_MIPS_ARCH_32","","MIPS32 code.",null,null],[17,"EF_MIPS_ARCH_64","","MIPS64 code.",null,null],[17,"EF_MIPS_ARCH_32R2","","MIPS32r2 code.",null,null],[17,"EF_MIPS_ARCH_64R2","","MIPS64r2 code.",null,null],[17,"SHN_MIPS_ACOMMON","","Allocated common symbols.",null,null],[17,"SHN_MIPS_TEXT","","Allocated test symbols.",null,null],[17,"SHN_MIPS_DATA","","Allocated data symbols.",null,null],[17,"SHN_MIPS_SCOMMON","","Small common symbols.",null,null],[17,"SHN_MIPS_SUNDEFINED","","Small undefined symbols.",null,null],[17,"SHT_MIPS_LIBLIST","","Shared objects used in link.",null,null],[17,"SHT_MIPS_MSYM","","",null,null],[17,"SHT_MIPS_CONFLICT","","Conflicting symbols.",null,null],[17,"SHT_MIPS_GPTAB","","Global data area sizes.",null,null],[17,"SHT_MIPS_UCODE","","Reserved for SGI/MIPS compilers",null,null],[17,"SHT_MIPS_DEBUG","","MIPS ECOFF debugging info.",null,null],[17,"SHT_MIPS_REGINFO","","Register usage information.",null,null],[17,"SHT_MIPS_PACKAGE","","",null,null],[17,"SHT_MIPS_PACKSYM","","",null,null],[17,"SHT_MIPS_RELD","","",null,null],[17,"SHT_MIPS_IFACE","","",null,null],[17,"SHT_MIPS_CONTENT","","",null,null],[17,"SHT_MIPS_OPTIONS","","Miscellaneous options.",null,null],[17,"SHT_MIPS_SHDR","","",null,null],[17,"SHT_MIPS_FDESC","","",null,null],[17,"SHT_MIPS_EXTSYM","","",null,null],[17,"SHT_MIPS_DENSE","","",null,null],[17,"SHT_MIPS_PDESC","","",null,null],[17,"SHT_MIPS_LOCSYM","","",null,null],[17,"SHT_MIPS_AUXSYM","","",null,null],[17,"SHT_MIPS_OPTSYM","","",null,null],[17,"SHT_MIPS_LOCSTR","","",null,null],[17,"SHT_MIPS_LINE","","",null,null],[17,"SHT_MIPS_RFDESC","","",null,null],[17,"SHT_MIPS_DELTASYM","","",null,null],[17,"SHT_MIPS_DELTAINST","","",null,null],[17,"SHT_MIPS_DELTACLASS","","",null,null],[17,"SHT_MIPS_DWARF","","DWARF debugging information.",null,null],[17,"SHT_MIPS_DELTADECL","","",null,null],[17,"SHT_MIPS_SYMBOL_LIB","","",null,null],[17,"SHT_MIPS_EVENTS","","Event section.",null,null],[17,"SHT_MIPS_TRANSLATE","","",null,null],[17,"SHT_MIPS_PIXIE","","",null,null],[17,"SHT_MIPS_XLATE","","",null,null],[17,"SHT_MIPS_XLATE_DEBUG","","",null,null],[17,"SHT_MIPS_WHIRL","","",null,null],[17,"SHT_MIPS_EH_REGION","","",null,null],[17,"SHT_MIPS_XLATE_OLD","","",null,null],[17,"SHT_MIPS_PDR_EXCEPTION","","",null,null],[17,"SHF_MIPS_GPREL","","Must be in global data area.",null,null],[17,"SHF_MIPS_MERGE","","",null,null],[17,"SHF_MIPS_ADDR","","",null,null],[17,"SHF_MIPS_STRINGS","","",null,null],[17,"SHF_MIPS_NOSTRIP","","",null,null],[17,"SHF_MIPS_LOCAL","","",null,null],[17,"SHF_MIPS_NAMES","","",null,null],[17,"SHF_MIPS_NODUPE","","",null,null],[17,"STO_MIPS_DEFAULT","","",null,null],[17,"STO_MIPS_INTERNAL","","",null,null],[17,"STO_MIPS_HIDDEN","","",null,null],[17,"STO_MIPS_PROTECTED","","",null,null],[17,"STO_MIPS_PLT","","",null,null],[17,"STO_MIPS_SC_ALIGN_UNUSED","","",null,null],[17,"STB_MIPS_SPLIT_COMMON","","",null,null],[17,"ODK_NULL","","Undefined.",null,null],[17,"ODK_REGINFO","","Register usage information.",null,null],[17,"ODK_EXCEPTIONS","","Exception processing options.",null,null],[17,"ODK_PAD","","Section padding options.",null,null],[17,"ODK_HWPATCH","","Hardware workarounds performed",null,null],[17,"ODK_FILL","","record the fill value used by the linker.",null,null],[17,"ODK_TAGS","","reserve space for desktop tools to write.",null,null],[17,"ODK_HWAND","","HW workarounds.  'AND' bits when merging.",null,null],[17,"ODK_HWOR","","HW workarounds.  'OR' bits when merging.",null,null],[17,"OEX_FPU_MIN","","FPE's which MUST be enabled.",null,null],[17,"OEX_FPU_MAX","","FPE's which MAY be enabled.",null,null],[17,"OEX_PAGE0","","page zero must be mapped.",null,null],[17,"OEX_SMM","","Force sequential memory mode?",null,null],[17,"OEX_FPDBUG","","Force floating point debug mode?",null,null],[17,"OEX_PRECISEFP","","",null,null],[17,"OEX_DISMISS","","Dismiss invalid address faults?",null,null],[17,"OEX_FPU_INVAL","","",null,null],[17,"OEX_FPU_DIV0","","",null,null],[17,"OEX_FPU_OFLO","","",null,null],[17,"OEX_FPU_UFLO","","",null,null],[17,"OEX_FPU_INEX","","",null,null],[17,"OHW_R4KEOP","","R4000 end-of-page patch.",null,null],[17,"OHW_R8KPFETCH","","may need R8000 prefetch patch.",null,null],[17,"OHW_R5KEOP","","R5000 end-of-page patch.",null,null],[17,"OHW_R5KCVTL","","R5000 cvt.[ds].l bug.  clean=1.",null,null],[17,"OPAD_PREFIX","","",null,null],[17,"OPAD_POSTFIX","","",null,null],[17,"OPAD_SYMBOL","","",null,null],[17,"OHWA0_R4KEOP_CHECKED","","",null,null],[17,"OHWA1_R4KEOP_CLEAN","","",null,null],[17,"R_MIPS_NONE","","No reloc",null,null],[17,"R_MIPS_16","","Direct 16 bit",null,null],[17,"R_MIPS_32","","Direct 32 bit",null,null],[17,"R_MIPS_REL32","","PC relative 32 bit",null,null],[17,"R_MIPS_26","","Direct 26 bit shifted",null,null],[17,"R_MIPS_HI16","","High 16 bit",null,null],[17,"R_MIPS_LO16","","Low 16 bit",null,null],[17,"R_MIPS_GPREL16","","GP relative 16 bit",null,null],[17,"R_MIPS_LITERAL","","16 bit literal entry",null,null],[17,"R_MIPS_GOT16","","16 bit GOT entry",null,null],[17,"R_MIPS_PC16","","PC relative 16 bit",null,null],[17,"R_MIPS_CALL16","","16 bit GOT entry for function",null,null],[17,"R_MIPS_GPREL32","","GP relative 32 bit",null,null],[17,"R_MIPS_SHIFT5","","",null,null],[17,"R_MIPS_SHIFT6","","",null,null],[17,"R_MIPS_64","","",null,null],[17,"R_MIPS_GOT_DISP","","",null,null],[17,"R_MIPS_GOT_PAGE","","",null,null],[17,"R_MIPS_GOT_OFST","","",null,null],[17,"R_MIPS_GOT_HI16","","",null,null],[17,"R_MIPS_GOT_LO16","","",null,null],[17,"R_MIPS_SUB","","",null,null],[17,"R_MIPS_INSERT_A","","",null,null],[17,"R_MIPS_INSERT_B","","",null,null],[17,"R_MIPS_DELETE","","",null,null],[17,"R_MIPS_HIGHER","","",null,null],[17,"R_MIPS_HIGHEST","","",null,null],[17,"R_MIPS_CALL_HI16","","",null,null],[17,"R_MIPS_CALL_LO16","","",null,null],[17,"R_MIPS_SCN_DISP","","",null,null],[17,"R_MIPS_REL16","","",null,null],[17,"R_MIPS_ADD_IMMEDIATE","","",null,null],[17,"R_MIPS_PJUMP","","",null,null],[17,"R_MIPS_RELGOT","","",null,null],[17,"R_MIPS_JALR","","",null,null],[17,"R_MIPS_TLS_DTPMOD32","","Module number 32 bit",null,null],[17,"R_MIPS_TLS_DTPREL32","","Module-relative offset 32 bit",null,null],[17,"R_MIPS_TLS_DTPMOD64","","Module number 64 bit",null,null],[17,"R_MIPS_TLS_DTPREL64","","Module-relative offset 64 bit",null,null],[17,"R_MIPS_TLS_GD","","16 bit GOT offset for GD",null,null],[17,"R_MIPS_TLS_LDM","","16 bit GOT offset for LDM",null,null],[17,"R_MIPS_TLS_DTPREL_HI16","","Module-relative offset, high 16 bits",null,null],[17,"R_MIPS_TLS_DTPREL_LO16","","Module-relative offset, low 16 bits",null,null],[17,"R_MIPS_TLS_GOTTPREL","","16 bit GOT offset for IE",null,null],[17,"R_MIPS_TLS_TPREL32","","TP-relative offset, 32 bit",null,null],[17,"R_MIPS_TLS_TPREL64","","TP-relative offset, 64 bit",null,null],[17,"R_MIPS_TLS_TPREL_HI16","","TP-relative offset, high 16 bits",null,null],[17,"R_MIPS_TLS_TPREL_LO16","","TP-relative offset, low 16 bits",null,null],[17,"R_MIPS_GLOB_DAT","","",null,null],[17,"R_MIPS_COPY","","",null,null],[17,"R_MIPS_JUMP_SLOT","","",null,null],[17,"PT_MIPS_REGINFO","","Register usage information.",null,null],[17,"PT_MIPS_RTPROC","","Runtime procedure table.",null,null],[17,"PT_MIPS_OPTIONS","","",null,null],[17,"PT_MIPS_ABIFLAGS","","FP mode requirement.",null,null],[17,"PF_MIPS_LOCAL","","",null,null],[17,"DT_MIPS_RLD_VERSION","","Runtime linker interface version",null,null],[17,"DT_MIPS_TIME_STAMP","","Timestamp",null,null],[17,"DT_MIPS_ICHECKSUM","","Checksum",null,null],[17,"DT_MIPS_IVERSION","","Version string (string tbl index)",null,null],[17,"DT_MIPS_FLAGS","","Flags",null,null],[17,"DT_MIPS_BASE_ADDRESS","","Base address",null,null],[17,"DT_MIPS_MSYM","","",null,null],[17,"DT_MIPS_CONFLICT","","Address of CONFLICT section",null,null],[17,"DT_MIPS_LIBLIST","","Address of LIBLIST section",null,null],[17,"DT_MIPS_LOCAL_GOTNO","","Number of local GOT entries",null,null],[17,"DT_MIPS_CONFLICTNO","","Number of CONFLICT entries",null,null],[17,"DT_MIPS_LIBLISTNO","","Number of LIBLIST entries",null,null],[17,"DT_MIPS_SYMTABNO","","Number of DYNSYM entries",null,null],[17,"DT_MIPS_UNREFEXTNO","","First external DYNSYM",null,null],[17,"DT_MIPS_GOTSYM","","First GOT entry in DYNSYM",null,null],[17,"DT_MIPS_HIPAGENO","","Number of GOT page table entries",null,null],[17,"DT_MIPS_RLD_MAP","","Address of run time loader map.",null,null],[17,"DT_MIPS_DELTA_CLASS","","Delta C++ class definition.",null,null],[17,"DT_MIPS_DELTA_CLASS_NO","","Number of entries in DT_MIPS_DELTA_CLASS.",null,null],[17,"DT_MIPS_DELTA_INSTANCE","","Delta C++ class instances.",null,null],[17,"DT_MIPS_DELTA_INSTANCE_NO","","Number of entries in DT_MIPS_DELTA_INSTANCE.",null,null],[17,"DT_MIPS_DELTA_RELOC","","Delta relocations.",null,null],[17,"DT_MIPS_DELTA_RELOC_NO","","Number of entries in DT_MIPS_DELTA_RELOC.",null,null],[17,"DT_MIPS_DELTA_SYM","","Delta symbols that Delta relocations refer to.",null,null],[17,"DT_MIPS_DELTA_SYM_NO","","Number of entries in DT_MIPS_DELTA_SYM.",null,null],[17,"DT_MIPS_DELTA_CLASSSYM","","Delta symbols that hold the class declaration.",null,null],[17,"DT_MIPS_DELTA_CLASSSYM_NO","","Number of entries in DT_MIPS_DELTA_CLASSSYM.",null,null],[17,"DT_MIPS_CXX_FLAGS","","Flags indicating for C++ flavor.",null,null],[17,"DT_MIPS_PIXIE_INIT","","",null,null],[17,"DT_MIPS_SYMBOL_LIB","","",null,null],[17,"DT_MIPS_LOCALPAGE_GOTIDX","","",null,null],[17,"DT_MIPS_LOCAL_GOTIDX","","",null,null],[17,"DT_MIPS_HIDDEN_GOTIDX","","",null,null],[17,"DT_MIPS_PROTECTED_GOTIDX","","",null,null],[17,"DT_MIPS_OPTIONS","","Address of .options.",null,null],[17,"DT_MIPS_INTERFACE","","Address of .interface.",null,null],[17,"DT_MIPS_DYNSTR_ALIGN","","",null,null],[17,"DT_MIPS_INTERFACE_SIZE","","Size of the .interface section.",null,null],[17,"DT_MIPS_RLD_TEXT_RESOLVE_ADDR","","Address of rld_text_rsolve function stored in GOT.",null,null],[17,"DT_MIPS_PERF_SUFFIX","","Default suffix of dso to be added by rld on dlopen() calls.",null,null],[17,"DT_MIPS_COMPACT_SIZE","","(O32)Size of compact rel section.",null,null],[17,"DT_MIPS_GP_VALUE","","GP value for aux GOTs.",null,null],[17,"DT_MIPS_AUX_DYNAMIC","","Address of aux .dynamic.",null,null],[17,"DT_MIPS_PLTGOT","","The address of .got.plt in an executable using the new…",null,null],[17,"DT_MIPS_RWPLT","","The base of the PLT in an executable using the new non-PIC…",null,null],[17,"DT_MIPS_RLD_MAP_REL","","An alternative description of the classic MIPS RLD_MAP…",null,null],[17,"RHF_NONE","","No flags",null,null],[17,"RHF_QUICKSTART","","Use quickstart",null,null],[17,"RHF_NOTPOT","","Hash size not power of 2",null,null],[17,"RHF_NO_LIBRARY_REPLACEMENT","","Ignore LD_LIBRARY_PATH",null,null],[17,"RHF_NO_MOVE","","",null,null],[17,"RHF_SGI_ONLY","","",null,null],[17,"RHF_GUARANTEE_INIT","","",null,null],[17,"RHF_DELTA_C_PLUS_PLUS","","",null,null],[17,"RHF_GUARANTEE_START_INIT","","",null,null],[17,"RHF_PIXIE","","",null,null],[17,"RHF_DEFAULT_DELAY_LOAD","","",null,null],[17,"RHF_REQUICKSTART","","",null,null],[17,"RHF_REQUICKSTARTED","","",null,null],[17,"RHF_CORD","","",null,null],[17,"RHF_NO_UNRES_UNDEF","","",null,null],[17,"RHF_RLD_ORDER_SAFE","","",null,null],[17,"LL_NONE","","",null,null],[17,"LL_EXACT_MATCH","","Require exact match",null,null],[17,"LL_IGNORE_INT_VER","","Ignore interface version",null,null],[17,"LL_REQUIRE_MINOR","","",null,null],[17,"LL_EXPORTS","","",null,null],[17,"LL_DELAY_LOAD","","",null,null],[17,"LL_DELTA","","",null,null],[17,"EF_PARISC_TRAPNIL","","Trap nil pointer dereference.",null,null],[17,"EF_PARISC_EXT","","Program uses arch. extensions.",null,null],[17,"EF_PARISC_LSB","","Program expects little endian.",null,null],[17,"EF_PARISC_WIDE","","Program expects wide mode.",null,null],[17,"EF_PARISC_NO_KABP","","No kernel assisted branch prediction.",null,null],[17,"EF_PARISC_LAZYSWAP","","Allow lazy swapping.",null,null],[17,"EF_PARISC_ARCH","","Architecture version.",null,null],[17,"EFA_PARISC_1_0","","PA-RISC 1.0 big-endian.",null,null],[17,"EFA_PARISC_1_1","","PA-RISC 1.1 big-endian.",null,null],[17,"EFA_PARISC_2_0","","PA-RISC 2.0 big-endian.",null,null],[17,"SHN_PARISC_ANSI_COMMON","","Section for tenatively declared symbols in ANSI C.",null,null],[17,"SHN_PARISC_HUGE_COMMON","","Common blocks in huge model.",null,null],[17,"SHT_PARISC_EXT","","Contains product specific ext.",null,null],[17,"SHT_PARISC_UNWIND","","Unwind information.",null,null],[17,"SHT_PARISC_DOC","","Debug info for optimized code.",null,null],[17,"SHF_PARISC_SHORT","","Section with short addressing.",null,null],[17,"SHF_PARISC_HUGE","","Section far from gp.",null,null],[17,"SHF_PARISC_SBP","","Static branch prediction code.",null,null],[17,"STT_PARISC_MILLICODE","","Millicode function entry point.",null,null],[17,"STT_HP_OPAQUE","","",null,null],[17,"STT_HP_STUB","","",null,null],[17,"R_PARISC_NONE","","No reloc.",null,null],[17,"R_PARISC_DIR32","","Direct 32-bit reference.",null,null],[17,"R_PARISC_DIR21L","","Left 21 bits of eff. address.",null,null],[17,"R_PARISC_DIR17R","","Right 17 bits of eff. address.",null,null],[17,"R_PARISC_DIR17F","","17 bits of eff. address.",null,null],[17,"R_PARISC_DIR14R","","Right 14 bits of eff. address.",null,null],[17,"R_PARISC_PCREL32","","32-bit rel. address.",null,null],[17,"R_PARISC_PCREL21L","","Left 21 bits of rel. address.",null,null],[17,"R_PARISC_PCREL17R","","Right 17 bits of rel. address.",null,null],[17,"R_PARISC_PCREL17F","","17 bits of rel. address.",null,null],[17,"R_PARISC_PCREL14R","","Right 14 bits of rel. address.",null,null],[17,"R_PARISC_DPREL21L","","Left 21 bits of rel. address.",null,null],[17,"R_PARISC_DPREL14R","","Right 14 bits of rel. address.",null,null],[17,"R_PARISC_GPREL21L","","GP-relative, left 21 bits.",null,null],[17,"R_PARISC_GPREL14R","","GP-relative, right 14 bits.",null,null],[17,"R_PARISC_LTOFF21L","","LT-relative, left 21 bits.",null,null],[17,"R_PARISC_LTOFF14R","","LT-relative, right 14 bits.",null,null],[17,"R_PARISC_SECREL32","","32 bits section rel. address.",null,null],[17,"R_PARISC_SEGBASE","","No relocation, set segment base.",null,null],[17,"R_PARISC_SEGREL32","","32 bits segment rel. address.",null,null],[17,"R_PARISC_PLTOFF21L","","PLT rel. address, left 21 bits.",null,null],[17,"R_PARISC_PLTOFF14R","","PLT rel. address, right 14 bits.",null,null],[17,"R_PARISC_LTOFF_FPTR32","","32 bits LT-rel. function pointer.",null,null],[17,"R_PARISC_LTOFF_FPTR21L","","LT-rel. fct ptr, left 21 bits.",null,null],[17,"R_PARISC_LTOFF_FPTR14R","","LT-rel. fct ptr, right 14 bits.",null,null],[17,"R_PARISC_FPTR64","","64 bits function address.",null,null],[17,"R_PARISC_PLABEL32","","32 bits function address.",null,null],[17,"R_PARISC_PLABEL21L","","Left 21 bits of fdesc address.",null,null],[17,"R_PARISC_PLABEL14R","","Right 14 bits of fdesc address.",null,null],[17,"R_PARISC_PCREL64","","64 bits PC-rel. address.",null,null],[17,"R_PARISC_PCREL22F","","22 bits PC-rel. address.",null,null],[17,"R_PARISC_PCREL14WR","","PC-rel. address, right 14 bits.",null,null],[17,"R_PARISC_PCREL14DR","","PC rel. address, right 14 bits.",null,null],[17,"R_PARISC_PCREL16F","","16 bits PC-rel. address.",null,null],[17,"R_PARISC_PCREL16WF","","16 bits PC-rel. address.",null,null],[17,"R_PARISC_PCREL16DF","","16 bits PC-rel. address.",null,null],[17,"R_PARISC_DIR64","","64 bits of eff. address.",null,null],[17,"R_PARISC_DIR14WR","","14 bits of eff. address.",null,null],[17,"R_PARISC_DIR14DR","","14 bits of eff. address.",null,null],[17,"R_PARISC_DIR16F","","16 bits of eff. address.",null,null],[17,"R_PARISC_DIR16WF","","16 bits of eff. address.",null,null],[17,"R_PARISC_DIR16DF","","16 bits of eff. address.",null,null],[17,"R_PARISC_GPREL64","","64 bits of GP-rel. address.",null,null],[17,"R_PARISC_GPREL14WR","","GP-rel. address, right 14 bits.",null,null],[17,"R_PARISC_GPREL14DR","","GP-rel. address, right 14 bits.",null,null],[17,"R_PARISC_GPREL16F","","16 bits GP-rel. address.",null,null],[17,"R_PARISC_GPREL16WF","","16 bits GP-rel. address.",null,null],[17,"R_PARISC_GPREL16DF","","16 bits GP-rel. address.",null,null],[17,"R_PARISC_LTOFF64","","64 bits LT-rel. address.",null,null],[17,"R_PARISC_LTOFF14WR","","LT-rel. address, right 14 bits.",null,null],[17,"R_PARISC_LTOFF14DR","","LT-rel. address, right 14 bits.",null,null],[17,"R_PARISC_LTOFF16F","","16 bits LT-rel. address.",null,null],[17,"R_PARISC_LTOFF16WF","","16 bits LT-rel. address.",null,null],[17,"R_PARISC_LTOFF16DF","","16 bits LT-rel. address.",null,null],[17,"R_PARISC_SECREL64","","64 bits section rel. address.",null,null],[17,"R_PARISC_SEGREL64","","64 bits segment rel. address.",null,null],[17,"R_PARISC_PLTOFF14WR","","PLT-rel. address, right 14 bits.",null,null],[17,"R_PARISC_PLTOFF14DR","","PLT-rel. address, right 14 bits.",null,null],[17,"R_PARISC_PLTOFF16F","","16 bits LT-rel. address.",null,null],[17,"R_PARISC_PLTOFF16WF","","16 bits PLT-rel. address.",null,null],[17,"R_PARISC_PLTOFF16DF","","16 bits PLT-rel. address.",null,null],[17,"R_PARISC_LTOFF_FPTR64","","64 bits LT-rel. function ptr.",null,null],[17,"R_PARISC_LTOFF_FPTR14WR","","LT-rel. fct. ptr., right 14 bits.",null,null],[17,"R_PARISC_LTOFF_FPTR14DR","","LT-rel. fct. ptr., right 14 bits.",null,null],[17,"R_PARISC_LTOFF_FPTR16F","","16 bits LT-rel. function ptr.",null,null],[17,"R_PARISC_LTOFF_FPTR16WF","","16 bits LT-rel. function ptr.",null,null],[17,"R_PARISC_LTOFF_FPTR16DF","","16 bits LT-rel. function ptr.",null,null],[17,"R_PARISC_LORESERVE","","",null,null],[17,"R_PARISC_COPY","","Copy relocation.",null,null],[17,"R_PARISC_IPLT","","Dynamic reloc, imported PLT",null,null],[17,"R_PARISC_EPLT","","Dynamic reloc, exported PLT",null,null],[17,"R_PARISC_TPREL32","","32 bits TP-rel. address.",null,null],[17,"R_PARISC_TPREL21L","","TP-rel. address, left 21 bits.",null,null],[17,"R_PARISC_TPREL14R","","TP-rel. address, right 14 bits.",null,null],[17,"R_PARISC_LTOFF_TP21L","","LT-TP-rel. address, left 21 bits.",null,null],[17,"R_PARISC_LTOFF_TP14R","","LT-TP-rel. address, right 14 bits.",null,null],[17,"R_PARISC_LTOFF_TP14F","","14 bits LT-TP-rel. address.",null,null],[17,"R_PARISC_TPREL64","","64 bits TP-rel. address.",null,null],[17,"R_PARISC_TPREL14WR","","TP-rel. address, right 14 bits.",null,null],[17,"R_PARISC_TPREL14DR","","TP-rel. address, right 14 bits.",null,null],[17,"R_PARISC_TPREL16F","","16 bits TP-rel. address.",null,null],[17,"R_PARISC_TPREL16WF","","16 bits TP-rel. address.",null,null],[17,"R_PARISC_TPREL16DF","","16 bits TP-rel. address.",null,null],[17,"R_PARISC_LTOFF_TP64","","64 bits LT-TP-rel. address.",null,null],[17,"R_PARISC_LTOFF_TP14WR","","LT-TP-rel. address, right 14 bits.",null,null],[17,"R_PARISC_LTOFF_TP14DR","","LT-TP-rel. address, right 14 bits.",null,null],[17,"R_PARISC_LTOFF_TP16F","","16 bits LT-TP-rel. address.",null,null],[17,"R_PARISC_LTOFF_TP16WF","","16 bits LT-TP-rel. address.",null,null],[17,"R_PARISC_LTOFF_TP16DF","","16 bits LT-TP-rel. address.",null,null],[17,"R_PARISC_GNU_VTENTRY","","",null,null],[17,"R_PARISC_GNU_VTINHERIT","","",null,null],[17,"R_PARISC_TLS_GD21L","","GD 21-bit left.",null,null],[17,"R_PARISC_TLS_GD14R","","GD 14-bit right.",null,null],[17,"R_PARISC_TLS_GDCALL","","GD call to __t_g_a.",null,null],[17,"R_PARISC_TLS_LDM21L","","LD module 21-bit left.",null,null],[17,"R_PARISC_TLS_LDM14R","","LD module 14-bit right.",null,null],[17,"R_PARISC_TLS_LDMCALL","","LD module call to __t_g_a.",null,null],[17,"R_PARISC_TLS_LDO21L","","LD offset 21-bit left.",null,null],[17,"R_PARISC_TLS_LDO14R","","LD offset 14-bit right.",null,null],[17,"R_PARISC_TLS_DTPMOD32","","DTP module 32-bit.",null,null],[17,"R_PARISC_TLS_DTPMOD64","","DTP module 64-bit.",null,null],[17,"R_PARISC_TLS_DTPOFF32","","DTP offset 32-bit.",null,null],[17,"R_PARISC_TLS_DTPOFF64","","DTP offset 32-bit.",null,null],[17,"R_PARISC_TLS_LE21L","","",null,null],[17,"R_PARISC_TLS_LE14R","","",null,null],[17,"R_PARISC_TLS_IE21L","","",null,null],[17,"R_PARISC_TLS_IE14R","","",null,null],[17,"R_PARISC_TLS_TPREL32","","",null,null],[17,"R_PARISC_TLS_TPREL64","","",null,null],[17,"R_PARISC_HIRESERVE","","",null,null],[17,"PT_HP_TLS","","",null,null],[17,"PT_HP_CORE_NONE","","",null,null],[17,"PT_HP_CORE_VERSION","","",null,null],[17,"PT_HP_CORE_KERNEL","","",null,null],[17,"PT_HP_CORE_COMM","","",null,null],[17,"PT_HP_CORE_PROC","","",null,null],[17,"PT_HP_CORE_LOADABLE","","",null,null],[17,"PT_HP_CORE_STACK","","",null,null],[17,"PT_HP_CORE_SHM","","",null,null],[17,"PT_HP_CORE_MMF","","",null,null],[17,"PT_HP_PARALLEL","","",null,null],[17,"PT_HP_FASTBIND","","",null,null],[17,"PT_HP_OPT_ANNOT","","",null,null],[17,"PT_HP_HSL_ANNOT","","",null,null],[17,"PT_HP_STACK","","",null,null],[17,"PT_PARISC_ARCHEXT","","",null,null],[17,"PT_PARISC_UNWIND","","",null,null],[17,"PF_PARISC_SBP","","",null,null],[17,"PF_HP_PAGE_SIZE","","",null,null],[17,"PF_HP_FAR_SHARED","","",null,null],[17,"PF_HP_NEAR_SHARED","","",null,null],[17,"PF_HP_CODE","","",null,null],[17,"PF_HP_MODIFY","","",null,null],[17,"PF_HP_LAZYSWAP","","",null,null],[17,"PF_HP_SBP","","",null,null],[17,"EF_ALPHA_32BIT","","All addresses must be < 2GB.",null,null],[17,"EF_ALPHA_CANRELAX","","Relocations for relaxing exist.",null,null],[17,"SHT_ALPHA_DEBUG","","",null,null],[17,"SHT_ALPHA_REGINFO","","",null,null],[17,"SHF_ALPHA_GPREL","","",null,null],[17,"STO_ALPHA_NOPV","","No PV required.",null,null],[17,"STO_ALPHA_STD_GPLOAD","","PV only used for initial ldgp.",null,null],[17,"R_ALPHA_NONE","","No reloc",null,null],[17,"R_ALPHA_REFLONG","","Direct 32 bit",null,null],[17,"R_ALPHA_REFQUAD","","Direct 64 bit",null,null],[17,"R_ALPHA_GPREL32","","GP relative 32 bit",null,null],[17,"R_ALPHA_LITERAL","","GP relative 16 bit w/optimization",null,null],[17,"R_ALPHA_LITUSE","","Optimization hint for LITERAL",null,null],[17,"R_ALPHA_GPDISP","","Add displacement to GP",null,null],[17,"R_ALPHA_BRADDR","","PC+4 relative 23 bit shifted",null,null],[17,"R_ALPHA_HINT","","PC+4 relative 16 bit shifted",null,null],[17,"R_ALPHA_SREL16","","PC relative 16 bit",null,null],[17,"R_ALPHA_SREL32","","PC relative 32 bit",null,null],[17,"R_ALPHA_SREL64","","PC relative 64 bit",null,null],[17,"R_ALPHA_GPRELHIGH","","GP relative 32 bit, high 16 bits",null,null],[17,"R_ALPHA_GPRELLOW","","GP relative 32 bit, low 16 bits",null,null],[17,"R_ALPHA_GPREL16","","GP relative 16 bit",null,null],[17,"R_ALPHA_COPY","","Copy symbol at runtime",null,null],[17,"R_ALPHA_GLOB_DAT","","Create GOT entry",null,null],[17,"R_ALPHA_JMP_SLOT","","Create PLT entry",null,null],[17,"R_ALPHA_RELATIVE","","Adjust by program base",null,null],[17,"R_ALPHA_TLS_GD_HI","","",null,null],[17,"R_ALPHA_TLSGD","","",null,null],[17,"R_ALPHA_TLS_LDM","","",null,null],[17,"R_ALPHA_DTPMOD64","","",null,null],[17,"R_ALPHA_GOTDTPREL","","",null,null],[17,"R_ALPHA_DTPREL64","","",null,null],[17,"R_ALPHA_DTPRELHI","","",null,null],[17,"R_ALPHA_DTPRELLO","","",null,null],[17,"R_ALPHA_DTPREL16","","",null,null],[17,"R_ALPHA_GOTTPREL","","",null,null],[17,"R_ALPHA_TPREL64","","",null,null],[17,"R_ALPHA_TPRELHI","","",null,null],[17,"R_ALPHA_TPRELLO","","",null,null],[17,"R_ALPHA_TPREL16","","",null,null],[17,"LITUSE_ALPHA_ADDR","","",null,null],[17,"LITUSE_ALPHA_BASE","","",null,null],[17,"LITUSE_ALPHA_BYTOFF","","",null,null],[17,"LITUSE_ALPHA_JSR","","",null,null],[17,"LITUSE_ALPHA_TLS_GD","","",null,null],[17,"LITUSE_ALPHA_TLS_LDM","","",null,null],[17,"DT_ALPHA_PLTRO","","",null,null],[17,"EF_PPC_EMB","","PowerPC embedded flag",null,null],[17,"EF_PPC_RELOCATABLE","","PowerPC -mrelocatable flag",null,null],[17,"EF_PPC_RELOCATABLE_LIB","","PowerPC -mrelocatable-lib flag",null,null],[17,"R_PPC_NONE","","",null,null],[17,"R_PPC_ADDR32","","32bit absolute address",null,null],[17,"R_PPC_ADDR24","","26bit address, 2 bits ignored.",null,null],[17,"R_PPC_ADDR16","","16bit absolute address",null,null],[17,"R_PPC_ADDR16_LO","","lower 16bit of absolute address",null,null],[17,"R_PPC_ADDR16_HI","","high 16bit of absolute address",null,null],[17,"R_PPC_ADDR16_HA","","adjusted high 16bit",null,null],[17,"R_PPC_ADDR14","","16bit address, 2 bits ignored",null,null],[17,"R_PPC_ADDR14_BRTAKEN","","",null,null],[17,"R_PPC_ADDR14_BRNTAKEN","","",null,null],[17,"R_PPC_REL24","","PC relative 26 bit",null,null],[17,"R_PPC_REL14","","PC relative 16 bit",null,null],[17,"R_PPC_REL14_BRTAKEN","","",null,null],[17,"R_PPC_REL14_BRNTAKEN","","",null,null],[17,"R_PPC_GOT16","","",null,null],[17,"R_PPC_GOT16_LO","","",null,null],[17,"R_PPC_GOT16_HI","","",null,null],[17,"R_PPC_GOT16_HA","","",null,null],[17,"R_PPC_PLTREL24","","",null,null],[17,"R_PPC_COPY","","",null,null],[17,"R_PPC_GLOB_DAT","","",null,null],[17,"R_PPC_JMP_SLOT","","",null,null],[17,"R_PPC_RELATIVE","","",null,null],[17,"R_PPC_LOCAL24PC","","",null,null],[17,"R_PPC_UADDR32","","",null,null],[17,"R_PPC_UADDR16","","",null,null],[17,"R_PPC_REL32","","",null,null],[17,"R_PPC_PLT32","","",null,null],[17,"R_PPC_PLTREL32","","",null,null],[17,"R_PPC_PLT16_LO","","",null,null],[17,"R_PPC_PLT16_HI","","",null,null],[17,"R_PPC_PLT16_HA","","",null,null],[17,"R_PPC_SDAREL16","","",null,null],[17,"R_PPC_SECTOFF","","",null,null],[17,"R_PPC_SECTOFF_LO","","",null,null],[17,"R_PPC_SECTOFF_HI","","",null,null],[17,"R_PPC_SECTOFF_HA","","",null,null],[17,"R_PPC_TLS","","none    (sym+add)@tls",null,null],[17,"R_PPC_DTPMOD32","","word32  (sym+add)@dtpmod",null,null],[17,"R_PPC_TPREL16","","half16* (sym+add)@tprel",null,null],[17,"R_PPC_TPREL16_LO","","half16  (sym+add)@tprel@l",null,null],[17,"R_PPC_TPREL16_HI","","half16  (sym+add)@tprel@h",null,null],[17,"R_PPC_TPREL16_HA","","half16  (sym+add)@tprel@ha",null,null],[17,"R_PPC_TPREL32","","word32  (sym+add)@tprel",null,null],[17,"R_PPC_DTPREL16","","half16*(sym+add)@dtprel",null,null],[17,"R_PPC_DTPREL16_LO","","half16  (sym+add)@dtprel@l",null,null],[17,"R_PPC_DTPREL16_HI","","half16  (sym+add)@dtprel@h",null,null],[17,"R_PPC_DTPREL16_HA","","half16  (sym+add)@dtprel@ha",null,null],[17,"R_PPC_DTPREL32","","word32  (sym+add)@dtprel",null,null],[17,"R_PPC_GOT_TLSGD16","","half16* (sym+add)@got@tlsgd",null,null],[17,"R_PPC_GOT_TLSGD16_LO","","half16  (sym+add)@got@tlsgd@l",null,null],[17,"R_PPC_GOT_TLSGD16_HI","","half16  (sym+add)@got@tlsgd@h",null,null],[17,"R_PPC_GOT_TLSGD16_HA","","half16  (sym+add)@got@tlsgd@ha",null,null],[17,"R_PPC_GOT_TLSLD16","","half16* (sym+add)@got@tlsld",null,null],[17,"R_PPC_GOT_TLSLD16_LO","","half16  (sym+add)@got@tlsld@l",null,null],[17,"R_PPC_GOT_TLSLD16_HI","","half16  (sym+add)@got@tlsld@h",null,null],[17,"R_PPC_GOT_TLSLD16_HA","","half16  (sym+add)@got@tlsld@ha",null,null],[17,"R_PPC_GOT_TPREL16","","half16* (sym+add)@got@tprel",null,null],[17,"R_PPC_GOT_TPREL16_LO","","half16  (sym+add)@got@tprel@l",null,null],[17,"R_PPC_GOT_TPREL16_HI","","half16  (sym+add)@got@tprel@h",null,null],[17,"R_PPC_GOT_TPREL16_HA","","half16  (sym+add)@got@tprel@ha",null,null],[17,"R_PPC_GOT_DTPREL16","","half16* (sym+add)@got@dtprel",null,null],[17,"R_PPC_GOT_DTPREL16_LO","","half16* (sym+add)@got@dtprel@l",null,null],[17,"R_PPC_GOT_DTPREL16_HI","","half16* (sym+add)@got@dtprel@h",null,null],[17,"R_PPC_GOT_DTPREL16_HA","","half16* (sym+add)@got@dtprel@ha",null,null],[17,"R_PPC_TLSGD","","none    (sym+add)@tlsgd",null,null],[17,"R_PPC_TLSLD","","none    (sym+add)@tlsld",null,null],[17,"R_PPC_EMB_NADDR32","","",null,null],[17,"R_PPC_EMB_NADDR16","","",null,null],[17,"R_PPC_EMB_NADDR16_LO","","",null,null],[17,"R_PPC_EMB_NADDR16_HI","","",null,null],[17,"R_PPC_EMB_NADDR16_HA","","",null,null],[17,"R_PPC_EMB_SDAI16","","",null,null],[17,"R_PPC_EMB_SDA2I16","","",null,null],[17,"R_PPC_EMB_SDA2REL","","",null,null],[17,"R_PPC_EMB_SDA21","","16 bit offset in SDA",null,null],[17,"R_PPC_EMB_MRKREF","","",null,null],[17,"R_PPC_EMB_RELSEC16","","",null,null],[17,"R_PPC_EMB_RELST_LO","","",null,null],[17,"R_PPC_EMB_RELST_HI","","",null,null],[17,"R_PPC_EMB_RELST_HA","","",null,null],[17,"R_PPC_EMB_BIT_FLD","","",null,null],[17,"R_PPC_EMB_RELSDA","","16 bit relative offset in SDA",null,null],[17,"R_PPC_DIAB_SDA21_LO","","like EMB_SDA21, but lower 16 bit",null,null],[17,"R_PPC_DIAB_SDA21_HI","","like EMB_SDA21, but high 16 bit",null,null],[17,"R_PPC_DIAB_SDA21_HA","","like EMB_SDA21, adjusted high 16",null,null],[17,"R_PPC_DIAB_RELSDA_LO","","like EMB_RELSDA, but lower 16 bit",null,null],[17,"R_PPC_DIAB_RELSDA_HI","","like EMB_RELSDA, but high 16 bit",null,null],[17,"R_PPC_DIAB_RELSDA_HA","","like EMB_RELSDA, adjusted high 16",null,null],[17,"R_PPC_IRELATIVE","","GNU extension to support local ifunc.",null,null],[17,"R_PPC_REL16","","half16   (sym+add-.)",null,null],[17,"R_PPC_REL16_LO","","half16   (sym+add-.)@l",null,null],[17,"R_PPC_REL16_HI","","half16   (sym+add-.)@h",null,null],[17,"R_PPC_REL16_HA","","half16   (sym+add-.)@ha",null,null],[17,"R_PPC_TOC16","","This is a phony reloc to handle any old fashioned TOC16…",null,null],[17,"DT_PPC_GOT","","",null,null],[17,"DT_PPC_OPT","","",null,null],[17,"PPC_OPT_TLS","","",null,null],[17,"R_PPC64_NONE","","",null,null],[17,"R_PPC64_ADDR32","","32bit absolute address",null,null],[17,"R_PPC64_ADDR24","","26bit address, word aligned",null,null],[17,"R_PPC64_ADDR16","","16bit absolute address",null,null],[17,"R_PPC64_ADDR16_LO","","lower 16bits of address",null,null],[17,"R_PPC64_ADDR16_HI","","high 16bits of address.",null,null],[17,"R_PPC64_ADDR16_HA","","adjusted high 16bits.",null,null],[17,"R_PPC64_ADDR14","","16bit address, word aligned",null,null],[17,"R_PPC64_ADDR14_BRTAKEN","","",null,null],[17,"R_PPC64_ADDR14_BRNTAKEN","","",null,null],[17,"R_PPC64_REL24","","PC-rel. 26 bit, word aligned",null,null],[17,"R_PPC64_REL14","","PC relative 16 bit",null,null],[17,"R_PPC64_REL14_BRTAKEN","","",null,null],[17,"R_PPC64_REL14_BRNTAKEN","","",null,null],[17,"R_PPC64_GOT16","","",null,null],[17,"R_PPC64_GOT16_LO","","",null,null],[17,"R_PPC64_GOT16_HI","","",null,null],[17,"R_PPC64_GOT16_HA","","",null,null],[17,"R_PPC64_COPY","","",null,null],[17,"R_PPC64_GLOB_DAT","","",null,null],[17,"R_PPC64_JMP_SLOT","","",null,null],[17,"R_PPC64_RELATIVE","","",null,null],[17,"R_PPC64_UADDR32","","",null,null],[17,"R_PPC64_UADDR16","","",null,null],[17,"R_PPC64_REL32","","",null,null],[17,"R_PPC64_PLT32","","",null,null],[17,"R_PPC64_PLTREL32","","",null,null],[17,"R_PPC64_PLT16_LO","","",null,null],[17,"R_PPC64_PLT16_HI","","",null,null],[17,"R_PPC64_PLT16_HA","","",null,null],[17,"R_PPC64_SECTOFF","","",null,null],[17,"R_PPC64_SECTOFF_LO","","",null,null],[17,"R_PPC64_SECTOFF_HI","","",null,null],[17,"R_PPC64_SECTOFF_HA","","",null,null],[17,"R_PPC64_ADDR30","","word30 (S + A - P) >> 2",null,null],[17,"R_PPC64_ADDR64","","doubleword64 S + A",null,null],[17,"R_PPC64_ADDR16_HIGHER","","half16 #higher(S + A)",null,null],[17,"R_PPC64_ADDR16_HIGHERA","","half16 #highera(S + A)",null,null],[17,"R_PPC64_ADDR16_HIGHEST","","half16 #highest(S + A)",null,null],[17,"R_PPC64_ADDR16_HIGHESTA","","half16 #highesta(S + A)",null,null],[17,"R_PPC64_UADDR64","","doubleword64 S + A",null,null],[17,"R_PPC64_REL64","","doubleword64 S + A - P",null,null],[17,"R_PPC64_PLT64","","doubleword64 L + A",null,null],[17,"R_PPC64_PLTREL64","","doubleword64 L + A - P",null,null],[17,"R_PPC64_TOC16","","half16* S + A - .TOC",null,null],[17,"R_PPC64_TOC16_LO","","half16 #lo(S + A - .TOC.)",null,null],[17,"R_PPC64_TOC16_HI","","half16 #hi(S + A - .TOC.)",null,null],[17,"R_PPC64_TOC16_HA","","half16 #ha(S + A - .TOC.)",null,null],[17,"R_PPC64_TOC","","doubleword64 .TOC",null,null],[17,"R_PPC64_PLTGOT16","","half16* M + A",null,null],[17,"R_PPC64_PLTGOT16_LO","","half16 #lo(M + A)",null,null],[17,"R_PPC64_PLTGOT16_HI","","half16 #hi(M + A)",null,null],[17,"R_PPC64_PLTGOT16_HA","","half16 #ha(M + A)",null,null],[17,"R_PPC64_ADDR16_DS","","half16ds* (S + A) >> 2",null,null],[17,"R_PPC64_ADDR16_LO_DS","","half16ds  #lo(S + A) >> 2",null,null],[17,"R_PPC64_GOT16_DS","","half16ds* (G + A) >> 2",null,null],[17,"R_PPC64_GOT16_LO_DS","","half16ds  #lo(G + A) >> 2",null,null],[17,"R_PPC64_PLT16_LO_DS","","half16ds  #lo(L + A) >> 2",null,null],[17,"R_PPC64_SECTOFF_DS","","half16ds* (R + A) >> 2",null,null],[17,"R_PPC64_SECTOFF_LO_DS","","half16ds  #lo(R + A) >> 2",null,null],[17,"R_PPC64_TOC16_DS","","half16ds* (S + A - .TOC.) >> 2",null,null],[17,"R_PPC64_TOC16_LO_DS","","half16ds  #lo(S + A - .TOC.) >> 2",null,null],[17,"R_PPC64_PLTGOT16_DS","","half16ds* (M + A) >> 2",null,null],[17,"R_PPC64_PLTGOT16_LO_DS","","half16ds  #lo(M + A) >> 2",null,null],[17,"R_PPC64_TLS","","none    (sym+add)@tls",null,null],[17,"R_PPC64_DTPMOD64","","doubleword64 (sym+add)@dtpmod",null,null],[17,"R_PPC64_TPREL16","","half16* (sym+add)@tprel",null,null],[17,"R_PPC64_TPREL16_LO","","half16  (sym+add)@tprel@l",null,null],[17,"R_PPC64_TPREL16_HI","","half16  (sym+add)@tprel@h",null,null],[17,"R_PPC64_TPREL16_HA","","half16  (sym+add)@tprel@ha",null,null],[17,"R_PPC64_TPREL64","","doubleword64 (sym+add)@tprel",null,null],[17,"R_PPC64_DTPREL16","","half16* (sym+add)@dtprel",null,null],[17,"R_PPC64_DTPREL16_LO","","half16  (sym+add)@dtprel@l",null,null],[17,"R_PPC64_DTPREL16_HI","","half16  (sym+add)@dtprel@h",null,null],[17,"R_PPC64_DTPREL16_HA","","half16  (sym+add)@dtprel@ha",null,null],[17,"R_PPC64_DTPREL64","","doubleword64 (sym+add)@dtprel",null,null],[17,"R_PPC64_GOT_TLSGD16","","half16* (sym+add)@got@tlsgd",null,null],[17,"R_PPC64_GOT_TLSGD16_LO","","half16  (sym+add)@got@tlsgd@l",null,null],[17,"R_PPC64_GOT_TLSGD16_HI","","half16  (sym+add)@got@tlsgd@h",null,null],[17,"R_PPC64_GOT_TLSGD16_HA","","half16  (sym+add)@got@tlsgd@ha",null,null],[17,"R_PPC64_GOT_TLSLD16","","half16* (sym+add)@got@tlsld",null,null],[17,"R_PPC64_GOT_TLSLD16_LO","","half16  (sym+add)@got@tlsld@l",null,null],[17,"R_PPC64_GOT_TLSLD16_HI","","half16  (sym+add)@got@tlsld@h",null,null],[17,"R_PPC64_GOT_TLSLD16_HA","","half16  (sym+add)@got@tlsld@ha",null,null],[17,"R_PPC64_GOT_TPREL16_DS","","half16ds* (sym+add)@got@tprel",null,null],[17,"R_PPC64_GOT_TPREL16_LO_DS","","half16ds (sym+add)@got@tprel@l",null,null],[17,"R_PPC64_GOT_TPREL16_HI","","half16  (sym+add)@got@tprel@h",null,null],[17,"R_PPC64_GOT_TPREL16_HA","","half16  (sym+add)@got@tprel@ha",null,null],[17,"R_PPC64_GOT_DTPREL16_DS","","half16ds* (sym+add)@got@dtprel",null,null],[17,"R_PPC64_GOT_DTPREL16_LO_DS","","half16ds (sym+add)@got@dtprel@l",null,null],[17,"R_PPC64_GOT_DTPREL16_HI","","half16  (sym+add)@got@dtprel@h",null,null],[17,"R_PPC64_GOT_DTPREL16_HA","","half16  (sym+add)@got@dtprel@ha",null,null],[17,"R_PPC64_TPREL16_DS","","half16ds* (sym+add)@tprel",null,null],[17,"R_PPC64_TPREL16_LO_DS","","half16ds (sym+add)@tprel@l",null,null],[17,"R_PPC64_TPREL16_HIGHER","","half16  (sym+add)@tprel@higher",null,null],[17,"R_PPC64_TPREL16_HIGHERA","","half16  (sym+add)@tprel@highera",null,null],[17,"R_PPC64_TPREL16_HIGHEST","","half16  (sym+add)@tprel@highest",null,null],[17,"R_PPC64_TPREL16_HIGHESTA","","half16  (sym+add)@tprel@highesta",null,null],[17,"R_PPC64_DTPREL16_DS","","half16ds* (sym+add)@dtprel",null,null],[17,"R_PPC64_DTPREL16_LO_DS","","half16ds (sym+add)@dtprel@l",null,null],[17,"R_PPC64_DTPREL16_HIGHER","","half16  (sym+add)@dtprel@higher",null,null],[17,"R_PPC64_DTPREL16_HIGHERA","","half16  (sym+add)@dtprel@highera",null,null],[17,"R_PPC64_DTPREL16_HIGHEST","","half16  (sym+add)@dtprel@highest",null,null],[17,"R_PPC64_DTPREL16_HIGHESTA","","half16  (sym+add)@dtprel@highesta",null,null],[17,"R_PPC64_TLSGD","","none    (sym+add)@tlsgd",null,null],[17,"R_PPC64_TLSLD","","none    (sym+add)@tlsld",null,null],[17,"R_PPC64_TOCSAVE","","none",null,null],[17,"R_PPC64_ADDR16_HIGH","","",null,null],[17,"R_PPC64_ADDR16_HIGHA","","",null,null],[17,"R_PPC64_TPREL16_HIGH","","",null,null],[17,"R_PPC64_TPREL16_HIGHA","","",null,null],[17,"R_PPC64_DTPREL16_HIGH","","",null,null],[17,"R_PPC64_DTPREL16_HIGHA","","",null,null],[17,"R_PPC64_JMP_IREL","","GNU extension to support local ifunc.",null,null],[17,"R_PPC64_IRELATIVE","","GNU extension to support local ifunc.",null,null],[17,"R_PPC64_REL16","","half16   (sym+add-.)",null,null],[17,"R_PPC64_REL16_LO","","half16   (sym+add-.)@l",null,null],[17,"R_PPC64_REL16_HI","","half16   (sym+add-.)@h",null,null],[17,"R_PPC64_REL16_HA","","half16   (sym+add-.)@ha",null,null],[17,"EF_PPC64_ABI","","PowerPC64 bits specifying ABI.",null,null],[17,"DT_PPC64_GLINK","","",null,null],[17,"DT_PPC64_OPD","","",null,null],[17,"DT_PPC64_OPDSZ","","",null,null],[17,"DT_PPC64_OPT","","",null,null],[17,"PPC64_OPT_TLS","","",null,null],[17,"PPC64_OPT_MULTI_TOC","","",null,null],[17,"PPC64_OPT_LOCALENTRY","","",null,null],[17,"STO_PPC64_LOCAL_BIT","","",null,null],[17,"STO_PPC64_LOCAL_MASK","","",null,null],[17,"EF_ARM_RELEXEC","","",null,null],[17,"EF_ARM_HASENTRY","","",null,null],[17,"EF_ARM_INTERWORK","","",null,null],[17,"EF_ARM_APCS_26","","",null,null],[17,"EF_ARM_APCS_FLOAT","","",null,null],[17,"EF_ARM_PIC","","",null,null],[17,"EF_ARM_ALIGN8","","8-bit structure alignment is in use",null,null],[17,"EF_ARM_NEW_ABI","","",null,null],[17,"EF_ARM_OLD_ABI","","",null,null],[17,"EF_ARM_SOFT_FLOAT","","",null,null],[17,"EF_ARM_VFP_FLOAT","","",null,null],[17,"EF_ARM_MAVERICK_FLOAT","","",null,null],[17,"EF_ARM_ABI_FLOAT_SOFT","","NB conflicts with EF_ARM_SOFT_FLOAT",null,null],[17,"EF_ARM_ABI_FLOAT_HARD","","NB conflicts with EF_ARM_VFP_FLOAT",null,null],[17,"EF_ARM_SYMSARESORTED","","",null,null],[17,"EF_ARM_DYNSYMSUSESEGIDX","","",null,null],[17,"EF_ARM_MAPSYMSFIRST","","",null,null],[17,"EF_ARM_BE8","","",null,null],[17,"EF_ARM_LE8","","",null,null],[17,"EF_ARM_EABIMASK","","",null,null],[17,"EF_ARM_EABI_UNKNOWN","","",null,null],[17,"EF_ARM_EABI_VER1","","",null,null],[17,"EF_ARM_EABI_VER2","","",null,null],[17,"EF_ARM_EABI_VER3","","",null,null],[17,"EF_ARM_EABI_VER4","","",null,null],[17,"EF_ARM_EABI_VER5","","",null,null],[17,"STT_ARM_TFUNC","","A Thumb function.",null,null],[17,"STT_ARM_16BIT","","A Thumb label.",null,null],[17,"SHF_ARM_ENTRYSECT","","Section contains an entry point",null,null],[17,"SHF_ARM_COMDEF","","Section may be multiply defined in the input to a link step.",null,null],[17,"PF_ARM_SB","","Segment contains the location addressed by the static base.",null,null],[17,"PF_ARM_PI","","Position-independent segment.",null,null],[17,"PF_ARM_ABS","","Absolute segment.",null,null],[17,"PT_ARM_EXIDX","","ARM unwind segment.",null,null],[17,"SHT_ARM_EXIDX","","ARM unwind section.",null,null],[17,"SHT_ARM_PREEMPTMAP","","Preemption details.",null,null],[17,"SHT_ARM_ATTRIBUTES","","ARM attributes section.",null,null],[17,"R_AARCH64_NONE","","No relocation.",null,null],[17,"R_AARCH64_P32_ABS32","","Direct 32 bit.",null,null],[17,"R_AARCH64_P32_COPY","","Copy symbol at runtime.",null,null],[17,"R_AARCH64_P32_GLOB_DAT","","Create GOT entry.",null,null],[17,"R_AARCH64_P32_JUMP_SLOT","","Create PLT entry.",null,null],[17,"R_AARCH64_P32_RELATIVE","","Adjust by program base.",null,null],[17,"R_AARCH64_P32_TLS_DTPMOD","","Module number, 32 bit.",null,null],[17,"R_AARCH64_P32_TLS_DTPREL","","Module-relative offset, 32 bit.",null,null],[17,"R_AARCH64_P32_TLS_TPREL","","TP-relative offset, 32 bit.",null,null],[17,"R_AARCH64_P32_TLSDESC","","TLS Descriptor.",null,null],[17,"R_AARCH64_P32_IRELATIVE","","STT_GNU_IFUNC relocation.",null,null],[17,"R_AARCH64_ABS64","","Direct 64 bit.",null,null],[17,"R_AARCH64_ABS32","","Direct 32 bit.",null,null],[17,"R_AARCH64_ABS16","","Direct 16-bit.",null,null],[17,"R_AARCH64_PREL64","","PC-relative 64-bit.",null,null],[17,"R_AARCH64_PREL32","","PC-relative 32-bit.",null,null],[17,"R_AARCH64_PREL16","","PC-relative 16-bit.",null,null],[17,"R_AARCH64_MOVW_UABS_G0","","Dir. MOVZ imm. from bits 15:0.",null,null],[17,"R_AARCH64_MOVW_UABS_G0_NC","","Likewise for MOVK; no check.",null,null],[17,"R_AARCH64_MOVW_UABS_G1","","Dir. MOVZ imm. from bits 31:16.",null,null],[17,"R_AARCH64_MOVW_UABS_G1_NC","","Likewise for MOVK; no check.",null,null],[17,"R_AARCH64_MOVW_UABS_G2","","Dir. MOVZ imm. from bits 47:32.",null,null],[17,"R_AARCH64_MOVW_UABS_G2_NC","","Likewise for MOVK; no check.",null,null],[17,"R_AARCH64_MOVW_UABS_G3","","Dir. MOV{K,Z} imm. from 63:48.",null,null],[17,"R_AARCH64_MOVW_SABS_G0","","Dir. MOV{N,Z} imm. from 15:0.",null,null],[17,"R_AARCH64_MOVW_SABS_G1","","Dir. MOV{N,Z} imm. from 31:16.",null,null],[17,"R_AARCH64_MOVW_SABS_G2","","Dir. MOV{N,Z} imm. from 47:32.",null,null],[17,"R_AARCH64_LD_PREL_LO19","","PC-rel. LD imm. from bits 20:2.",null,null],[17,"R_AARCH64_ADR_PREL_LO21","","PC-rel. ADR imm. from bits 20:0.",null,null],[17,"R_AARCH64_ADR_PREL_PG_HI21","","Page-rel. ADRP imm. from 32:12.",null,null],[17,"R_AARCH64_ADR_PREL_PG_HI21_NC","","Likewise; no overflow check.",null,null],[17,"R_AARCH64_ADD_ABS_LO12_NC","","Dir. ADD imm. from bits 11:0.",null,null],[17,"R_AARCH64_LDST8_ABS_LO12_NC","","Likewise for LD/ST; no check.",null,null],[17,"R_AARCH64_TSTBR14","","PC-rel. TBZ/TBNZ imm. from 15:2.",null,null],[17,"R_AARCH64_CONDBR19","","PC-rel. cond. br. imm. from 20:2.",null,null],[17,"R_AARCH64_JUMP26","","PC-rel. B imm. from bits 27:2.",null,null],[17,"R_AARCH64_CALL26","","Likewise for CALL.",null,null],[17,"R_AARCH64_LDST16_ABS_LO12_NC","","Dir. ADD imm. from bits 11:1.",null,null],[17,"R_AARCH64_LDST32_ABS_LO12_NC","","Likewise for bits 11:2.",null,null],[17,"R_AARCH64_LDST64_ABS_LO12_NC","","Likewise for bits 11:3.",null,null],[17,"R_AARCH64_MOVW_PREL_G0","","PC-rel. MOV{N,Z} imm. from 15:0.",null,null],[17,"R_AARCH64_MOVW_PREL_G0_NC","","Likewise for MOVK; no check.",null,null],[17,"R_AARCH64_MOVW_PREL_G1","","PC-rel. MOV{N,Z} imm. from 31:16.",null,null],[17,"R_AARCH64_MOVW_PREL_G1_NC","","Likewise for MOVK; no check.",null,null],[17,"R_AARCH64_MOVW_PREL_G2","","PC-rel. MOV{N,Z} imm. from 47:32.",null,null],[17,"R_AARCH64_MOVW_PREL_G2_NC","","Likewise for MOVK; no check.",null,null],[17,"R_AARCH64_MOVW_PREL_G3","","PC-rel. MOV{N,Z} imm. from 63:48.",null,null],[17,"R_AARCH64_LDST128_ABS_LO12_NC","","Dir. ADD imm. from bits 11:4.",null,null],[17,"R_AARCH64_MOVW_GOTOFF_G0","","GOT-rel. off. MOV{N,Z} imm. 15:0.",null,null],[17,"R_AARCH64_MOVW_GOTOFF_G0_NC","","Likewise for MOVK; no check.",null,null],[17,"R_AARCH64_MOVW_GOTOFF_G1","","GOT-rel. o. MOV{N,Z} imm. 31:16.",null,null],[17,"R_AARCH64_MOVW_GOTOFF_G1_NC","","Likewise for MOVK; no check.",null,null],[17,"R_AARCH64_MOVW_GOTOFF_G2","","GOT-rel. o. MOV{N,Z} imm. 47:32.",null,null],[17,"R_AARCH64_MOVW_GOTOFF_G2_NC","","Likewise for MOVK; no check.",null,null],[17,"R_AARCH64_MOVW_GOTOFF_G3","","GOT-rel. o. MOV{N,Z} imm. 63:48.",null,null],[17,"R_AARCH64_GOTREL64","","GOT-relative 64-bit.",null,null],[17,"R_AARCH64_GOTREL32","","GOT-relative 32-bit.",null,null],[17,"R_AARCH64_GOT_LD_PREL19","","PC-rel. GOT off. load imm. 20:2.",null,null],[17,"R_AARCH64_LD64_GOTOFF_LO15","","GOT-rel. off. LD/ST imm. 14:3.",null,null],[17,"R_AARCH64_ADR_GOT_PAGE","","P-page-rel. GOT off. ADRP 32:12.",null,null],[17,"R_AARCH64_LD64_GOT_LO12_NC","","Dir. GOT off. LD/ST imm. 11:3.",null,null],[17,"R_AARCH64_LD64_GOTPAGE_LO15","","GOT-page-rel. GOT off. LD/ST 14:3",null,null],[17,"R_AARCH64_TLSGD_ADR_PREL21","","PC-relative ADR imm. 20:0.",null,null],[17,"R_AARCH64_TLSGD_ADR_PAGE21","","page-rel. ADRP imm. 32:12.",null,null],[17,"R_AARCH64_TLSGD_ADD_LO12_NC","","direct ADD imm. from 11:0.",null,null],[17,"R_AARCH64_TLSGD_MOVW_G1","","GOT-rel. MOV{N,Z} 31:16.",null,null],[17,"R_AARCH64_TLSGD_MOVW_G0_NC","","GOT-rel. MOVK imm. 15:0.",null,null],[17,"R_AARCH64_TLSLD_ADR_PREL21","","Like 512; local dynamic model.",null,null],[17,"R_AARCH64_TLSLD_ADR_PAGE21","","Like 513; local dynamic model.",null,null],[17,"R_AARCH64_TLSLD_ADD_LO12_NC","","Like 514; local dynamic model.",null,null],[17,"R_AARCH64_TLSLD_MOVW_G1","","Like 515; local dynamic model.",null,null],[17,"R_AARCH64_TLSLD_MOVW_G0_NC","","Like 516; local dynamic model.",null,null],[17,"R_AARCH64_TLSLD_LD_PREL19","","TLS PC-rel. load imm. 20:2.",null,null],[17,"R_AARCH64_TLSLD_MOVW_DTPREL_G2","","TLS DTP-rel. MOV{N,Z} 47:32.",null,null],[17,"R_AARCH64_TLSLD_MOVW_DTPREL_G1","","TLS DTP-rel. MOV{N,Z} 31:16.",null,null],[17,"R_AARCH64_TLSLD_MOVW_DTPREL_G1_NC","","Likewise; MOVK; no check.",null,null],[17,"R_AARCH64_TLSLD_MOVW_DTPREL_G0","","TLS DTP-rel. MOV{N,Z} 15:0.",null,null],[17,"R_AARCH64_TLSLD_MOVW_DTPREL_G0_NC","","Likewise; MOVK; no check.",null,null],[17,"R_AARCH64_TLSLD_ADD_DTPREL_HI12","","DTP-rel. ADD imm. from 23:12.",null,null],[17,"R_AARCH64_TLSLD_ADD_DTPREL_LO12","","DTP-rel. ADD imm. from 11:0.",null,null],[17,"R_AARCH64_TLSLD_ADD_DTPREL_LO12_NC","","Likewise; no ovfl. check.",null,null],[17,"R_AARCH64_TLSLD_LDST8_DTPREL_LO12","","DTP-rel. LD/ST imm. 11:0.",null,null],[17,"R_AARCH64_TLSLD_LDST8_DTPREL_LO12_NC","","Likewise; no check.",null,null],[17,"R_AARCH64_TLSLD_LDST16_DTPREL_LO12","","DTP-rel. LD/ST imm. 11:1.",null,null],[17,"R_AARCH64_TLSLD_LDST16_DTPREL_LO12_NC","","Likewise; no check.",null,null],[17,"R_AARCH64_TLSLD_LDST32_DTPREL_LO12","","DTP-rel. LD/ST imm. 11:2.",null,null],[17,"R_AARCH64_TLSLD_LDST32_DTPREL_LO12_NC","","Likewise; no check.",null,null],[17,"R_AARCH64_TLSLD_LDST64_DTPREL_LO12","","DTP-rel. LD/ST imm. 11:3.",null,null],[17,"R_AARCH64_TLSLD_LDST64_DTPREL_LO12_NC","","Likewise; no check.",null,null],[17,"R_AARCH64_TLSIE_MOVW_GOTTPREL_G1","","GOT-rel. MOV{N,Z} 31:16.",null,null],[17,"R_AARCH64_TLSIE_MOVW_GOTTPREL_G0_NC","","GOT-rel. MOVK 15:0.",null,null],[17,"R_AARCH64_TLSIE_ADR_GOTTPREL_PAGE21","","Page-rel. ADRP 32:12.",null,null],[17,"R_AARCH64_TLSIE_LD64_GOTTPREL_LO12_NC","","Direct LD off. 11:3.",null,null],[17,"R_AARCH64_TLSIE_LD_GOTTPREL_PREL19","","PC-rel. load imm. 20:2.",null,null],[17,"R_AARCH64_TLSLE_MOVW_TPREL_G2","","TLS TP-rel. MOV{N,Z} 47:32.",null,null],[17,"R_AARCH64_TLSLE_MOVW_TPREL_G1","","TLS TP-rel. MOV{N,Z} 31:16.",null,null],[17,"R_AARCH64_TLSLE_MOVW_TPREL_G1_NC","","Likewise; MOVK; no check.",null,null],[17,"R_AARCH64_TLSLE_MOVW_TPREL_G0","","TLS TP-rel. MOV{N,Z} 15:0.",null,null],[17,"R_AARCH64_TLSLE_MOVW_TPREL_G0_NC","","Likewise; MOVK; no check.",null,null],[17,"R_AARCH64_TLSLE_ADD_TPREL_HI12","","TP-rel. ADD imm. 23:12.",null,null],[17,"R_AARCH64_TLSLE_ADD_TPREL_LO12","","TP-rel. ADD imm. 11:0.",null,null],[17,"R_AARCH64_TLSLE_ADD_TPREL_LO12_NC","","Likewise; no ovfl. check.",null,null],[17,"R_AARCH64_TLSLE_LDST8_TPREL_LO12","","TP-rel. LD/ST off. 11:0.",null,null],[17,"R_AARCH64_TLSLE_LDST8_TPREL_LO12_NC","","Likewise; no ovfl. check.",null,null],[17,"R_AARCH64_TLSLE_LDST16_TPREL_LO12","","TP-rel. LD/ST off. 11:1.",null,null],[17,"R_AARCH64_TLSLE_LDST16_TPREL_LO12_NC","","Likewise; no check.",null,null],[17,"R_AARCH64_TLSLE_LDST32_TPREL_LO12","","TP-rel. LD/ST off. 11:2.",null,null],[17,"R_AARCH64_TLSLE_LDST32_TPREL_LO12_NC","","Likewise; no check.",null,null],[17,"R_AARCH64_TLSLE_LDST64_TPREL_LO12","","TP-rel. LD/ST off. 11:3.",null,null],[17,"R_AARCH64_TLSLE_LDST64_TPREL_LO12_NC","","Likewise; no check.",null,null],[17,"R_AARCH64_TLSDESC_LD_PREL19","","PC-rel. load immediate 20:2.",null,null],[17,"R_AARCH64_TLSDESC_ADR_PREL21","","PC-rel. ADR immediate 20:0.",null,null],[17,"R_AARCH64_TLSDESC_ADR_PAGE21","","Page-rel. ADRP imm. 32:12.",null,null],[17,"R_AARCH64_TLSDESC_LD64_LO12","","Direct LD off. from 11:3.",null,null],[17,"R_AARCH64_TLSDESC_ADD_LO12","","Direct ADD imm. from 11:0.",null,null],[17,"R_AARCH64_TLSDESC_OFF_G1","","GOT-rel. MOV{N,Z} imm. 31:16.",null,null],[17,"R_AARCH64_TLSDESC_OFF_G0_NC","","GOT-rel. MOVK imm. 15:0; no ck.",null,null],[17,"R_AARCH64_TLSDESC_LDR","","Relax LDR.",null,null],[17,"R_AARCH64_TLSDESC_ADD","","Relax ADD.",null,null],[17,"R_AARCH64_TLSDESC_CALL","","Relax BLR.",null,null],[17,"R_AARCH64_TLSLE_LDST128_TPREL_LO12","","TP-rel. LD/ST off. 11:4.",null,null],[17,"R_AARCH64_TLSLE_LDST128_TPREL_LO12_NC","","Likewise; no check.",null,null],[17,"R_AARCH64_TLSLD_LDST128_DTPREL_LO12","","DTP-rel. LD/ST imm. 11:4.",null,null],[17,"R_AARCH64_TLSLD_LDST128_DTPREL_LO12_NC","","Likewise; no check.",null,null],[17,"R_AARCH64_COPY","","Copy symbol at runtime.",null,null],[17,"R_AARCH64_GLOB_DAT","","Create GOT entry.",null,null],[17,"R_AARCH64_JUMP_SLOT","","Create PLT entry.",null,null],[17,"R_AARCH64_RELATIVE","","Adjust by program base.",null,null],[17,"R_AARCH64_TLS_DTPMOD","","Module number, 64 bit.",null,null],[17,"R_AARCH64_TLS_DTPREL","","Module-relative offset, 64 bit.",null,null],[17,"R_AARCH64_TLS_TPREL","","TP-relative offset, 64 bit.",null,null],[17,"R_AARCH64_TLSDESC","","TLS Descriptor.",null,null],[17,"R_AARCH64_IRELATIVE","","STT_GNU_IFUNC relocation.",null,null],[17,"R_ARM_NONE","","No reloc",null,null],[17,"R_ARM_PC24","","Deprecated PC relative 26 bit branch.",null,null],[17,"R_ARM_ABS32","","Direct 32 bit",null,null],[17,"R_ARM_REL32","","PC relative 32 bit",null,null],[17,"R_ARM_PC13","","",null,null],[17,"R_ARM_ABS16","","Direct 16 bit",null,null],[17,"R_ARM_ABS12","","Direct 12 bit",null,null],[17,"R_ARM_THM_ABS5","","Direct & 0x7C (LDR, STR).",null,null],[17,"R_ARM_ABS8","","Direct 8 bit",null,null],[17,"R_ARM_SBREL32","","",null,null],[17,"R_ARM_THM_PC22","","PC relative 24 bit (Thumb32 BL).",null,null],[17,"R_ARM_THM_PC8","","PC relative & 0x3FC (Thumb16 LDR, ADD, ADR).",null,null],[17,"R_ARM_AMP_VCALL9","","",null,null],[17,"R_ARM_SWI24","","Obsolete static relocation.",null,null],[17,"R_ARM_TLS_DESC","","Dynamic relocation.",null,null],[17,"R_ARM_THM_SWI8","","Reserved.",null,null],[17,"R_ARM_XPC25","","Reserved.",null,null],[17,"R_ARM_THM_XPC22","","Reserved.",null,null],[17,"R_ARM_TLS_DTPMOD32","","ID of module containing symbol",null,null],[17,"R_ARM_TLS_DTPOFF32","","Offset in TLS block",null,null],[17,"R_ARM_TLS_TPOFF32","","Offset in static TLS block",null,null],[17,"R_ARM_COPY","","Copy symbol at runtime",null,null],[17,"R_ARM_GLOB_DAT","","Create GOT entry",null,null],[17,"R_ARM_JUMP_SLOT","","Create PLT entry",null,null],[17,"R_ARM_RELATIVE","","Adjust by program base",null,null],[17,"R_ARM_GOTOFF","","32 bit offset to GOT",null,null],[17,"R_ARM_GOTPC","","32 bit PC relative offset to GOT",null,null],[17,"R_ARM_GOT32","","32 bit GOT entry",null,null],[17,"R_ARM_PLT32","","Deprecated, 32 bit PLT address.",null,null],[17,"R_ARM_CALL","","PC relative 24 bit (BL, BLX).",null,null],[17,"R_ARM_JUMP24","","PC relative 24 bit (B, BL).",null,null],[17,"R_ARM_THM_JUMP24","","PC relative 24 bit (Thumb32 B.W).",null,null],[17,"R_ARM_BASE_ABS","","Adjust by program base.",null,null],[17,"R_ARM_ALU_PCREL_7_0","","Obsolete.",null,null],[17,"R_ARM_ALU_PCREL_15_8","","Obsolete.",null,null],[17,"R_ARM_ALU_PCREL_23_15","","Obsolete.",null,null],[17,"R_ARM_LDR_SBREL_11_0","","Deprecated, prog. base relative.",null,null],[17,"R_ARM_ALU_SBREL_19_12","","Deprecated, prog. base relative.",null,null],[17,"R_ARM_ALU_SBREL_27_20","","Deprecated, prog. base relative.",null,null],[17,"R_ARM_TARGET1","","",null,null],[17,"R_ARM_SBREL31","","Program base relative.",null,null],[17,"R_ARM_V4BX","","",null,null],[17,"R_ARM_TARGET2","","",null,null],[17,"R_ARM_PREL31","","32 bit PC relative.",null,null],[17,"R_ARM_MOVW_ABS_NC","","Direct 16-bit (MOVW).",null,null],[17,"R_ARM_MOVT_ABS","","Direct high 16-bit (MOVT).",null,null],[17,"R_ARM_MOVW_PREL_NC","","PC relative 16-bit (MOVW).",null,null],[17,"R_ARM_MOVT_PREL","","PC relative (MOVT).",null,null],[17,"R_ARM_THM_MOVW_ABS_NC","","Direct 16 bit (Thumb32 MOVW).",null,null],[17,"R_ARM_THM_MOVT_ABS","","Direct high 16 bit (Thumb32 MOVT).",null,null],[17,"R_ARM_THM_MOVW_PREL_NC","","PC relative 16 bit (Thumb32 MOVW).",null,null],[17,"R_ARM_THM_MOVT_PREL","","PC relative high 16 bit (Thumb32 MOVT).",null,null],[17,"R_ARM_THM_JUMP19","","PC relative 20 bit (Thumb32 B.W).",null,null],[17,"R_ARM_THM_JUMP6","","PC relative X & 0x7E (Thumb16 CBZ, CBNZ).",null,null],[17,"R_ARM_THM_ALU_PREL_11_0","","PC relative 12 bit (Thumb32 ADR.W).",null,null],[17,"R_ARM_THM_PC12","","PC relative 12 bit (Thumb32 LDR{D,SB,H,SH}).",null,null],[17,"R_ARM_ABS32_NOI","","Direct 32-bit.",null,null],[17,"R_ARM_REL32_NOI","","PC relative 32-bit.",null,null],[17,"R_ARM_ALU_PC_G0_NC","","PC relative (ADD, SUB).",null,null],[17,"R_ARM_ALU_PC_G0","","PC relative (ADD, SUB).",null,null],[17,"R_ARM_ALU_PC_G1_NC","","PC relative (ADD, SUB).",null,null],[17,"R_ARM_ALU_PC_G1","","PC relative (ADD, SUB).",null,null],[17,"R_ARM_ALU_PC_G2","","PC relative (ADD, SUB).",null,null],[17,"R_ARM_LDR_PC_G1","","PC relative (LDR,STR,LDRB,STRB).",null,null],[17,"R_ARM_LDR_PC_G2","","PC relative (LDR,STR,LDRB,STRB).",null,null],[17,"R_ARM_LDRS_PC_G0","","PC relative (STR{D,H}, LDR{D,SB,H,SH}).",null,null],[17,"R_ARM_LDRS_PC_G1","","PC relative (STR{D,H}, LDR{D,SB,H,SH}).",null,null],[17,"R_ARM_LDRS_PC_G2","","PC relative (STR{D,H}, LDR{D,SB,H,SH}).",null,null],[17,"R_ARM_LDC_PC_G0","","PC relative (LDC, STC).",null,null],[17,"R_ARM_LDC_PC_G1","","PC relative (LDC, STC).",null,null],[17,"R_ARM_LDC_PC_G2","","PC relative (LDC, STC).",null,null],[17,"R_ARM_ALU_SB_G0_NC","","Program base relative (ADD,SUB).",null,null],[17,"R_ARM_ALU_SB_G0","","Program base relative (ADD,SUB).",null,null],[17,"R_ARM_ALU_SB_G1_NC","","Program base relative (ADD,SUB).",null,null],[17,"R_ARM_ALU_SB_G1","","Program base relative (ADD,SUB).",null,null],[17,"R_ARM_ALU_SB_G2","","Program base relative (ADD,SUB).",null,null],[17,"R_ARM_LDR_SB_G0","","Program base relative (LDR, STR, LDRB, STRB).",null,null],[17,"R_ARM_LDR_SB_G1","","Program base relative (LDR, STR, LDRB, STRB).",null,null],[17,"R_ARM_LDR_SB_G2","","Program base relative (LDR, STR, LDRB, STRB).",null,null],[17,"R_ARM_LDRS_SB_G0","","Program base relative (LDR, STR, LDRB, STRB).",null,null],[17,"R_ARM_LDRS_SB_G1","","Program base relative (LDR, STR, LDRB, STRB).",null,null],[17,"R_ARM_LDRS_SB_G2","","Program base relative (LDR, STR, LDRB, STRB).",null,null],[17,"R_ARM_LDC_SB_G0","","Program base relative (LDC,STC).",null,null],[17,"R_ARM_LDC_SB_G1","","Program base relative (LDC,STC).",null,null],[17,"R_ARM_LDC_SB_G2","","Program base relative (LDC,STC).",null,null],[17,"R_ARM_MOVW_BREL_NC","","Program base relative 16 bit (MOVW).",null,null],[17,"R_ARM_MOVT_BREL","","Program base relative high 16 bit (MOVT).",null,null],[17,"R_ARM_MOVW_BREL","","Program base relative 16 bit (MOVW).",null,null],[17,"R_ARM_THM_MOVW_BREL_NC","","Program base relative 16 bit (Thumb32 MOVW).",null,null],[17,"R_ARM_THM_MOVT_BREL","","Program base relative high 16 bit (Thumb32 MOVT).",null,null],[17,"R_ARM_THM_MOVW_BREL","","Program base relative 16 bit (Thumb32 MOVW).",null,null],[17,"R_ARM_TLS_GOTDESC","","",null,null],[17,"R_ARM_TLS_CALL","","",null,null],[17,"R_ARM_TLS_DESCSEQ","","TLS relaxation.",null,null],[17,"R_ARM_THM_TLS_CALL","","",null,null],[17,"R_ARM_PLT32_ABS","","",null,null],[17,"R_ARM_GOT_ABS","","GOT entry.",null,null],[17,"R_ARM_GOT_PREL","","PC relative GOT entry.",null,null],[17,"R_ARM_GOT_BREL12","","GOT entry relative to GOT origin (LDR).",null,null],[17,"R_ARM_GOTOFF12","","12 bit, GOT entry relative to GOT origin (LDR, STR).",null,null],[17,"R_ARM_GOTRELAX","","",null,null],[17,"R_ARM_GNU_VTENTRY","","",null,null],[17,"R_ARM_GNU_VTINHERIT","","",null,null],[17,"R_ARM_THM_PC11","","PC relative & 0xFFE (Thumb16 B).",null,null],[17,"R_ARM_THM_PC9","","PC relative & 0x1FE (Thumb16 B/B).",null,null],[17,"R_ARM_TLS_GD32","","PC-rel 32 bit for global dynamic thread local data",null,null],[17,"R_ARM_TLS_LDM32","","PC-rel 32 bit for local dynamic thread local data",null,null],[17,"R_ARM_TLS_LDO32","","32 bit offset relative to TLS block",null,null],[17,"R_ARM_TLS_IE32","","PC-rel 32 bit for GOT entry of static TLS block offset",null,null],[17,"R_ARM_TLS_LE32","","32 bit offset relative to static TLS block",null,null],[17,"R_ARM_TLS_LDO12","","12 bit relative to TLS block (LDR, STR).",null,null],[17,"R_ARM_TLS_LE12","","12 bit relative to static TLS block (LDR, STR).",null,null],[17,"R_ARM_TLS_IE12GP","","12 bit GOT entry relative to GOT origin (LDR).",null,null],[17,"R_ARM_ME_TOO","","Obsolete.",null,null],[17,"R_ARM_THM_TLS_DESCSEQ","","",null,null],[17,"R_ARM_THM_TLS_DESCSEQ16","","",null,null],[17,"R_ARM_THM_TLS_DESCSEQ32","","",null,null],[17,"R_ARM_THM_GOT_BREL12","","GOT entry relative to GOT origin, 12 bit (Thumb32 LDR).",null,null],[17,"R_ARM_IRELATIVE","","",null,null],[17,"R_ARM_RXPC25","","",null,null],[17,"R_ARM_RSBREL32","","",null,null],[17,"R_ARM_THM_RPC22","","",null,null],[17,"R_ARM_RREL32","","",null,null],[17,"R_ARM_RABS22","","",null,null],[17,"R_ARM_RPC24","","",null,null],[17,"R_ARM_RBASE","","",null,null],[17,"R_CKCORE_NONE","","no reloc",null,null],[17,"R_CKCORE_ADDR32","","direct 32 bit (S + A)",null,null],[17,"R_CKCORE_PCRELIMM8BY4","","disp ((S + A - P) >> 2) & 0xff",null,null],[17,"R_CKCORE_PCRELIMM11BY2","","disp ((S + A - P) >> 1) & 0x7ff",null,null],[17,"R_CKCORE_PCREL32","","32-bit rel (S + A - P)",null,null],[17,"R_CKCORE_PCRELJSR_IMM11BY2","","disp ((S + A - P) >>1) & 0x7ff",null,null],[17,"R_CKCORE_RELATIVE","","32 bit adjust program base(B + A)",null,null],[17,"R_CKCORE_COPY","","32 bit adjust by program base",null,null],[17,"R_CKCORE_GLOB_DAT","","off between got and sym (S)",null,null],[17,"R_CKCORE_JUMP_SLOT","","PLT entry (S)",null,null],[17,"R_CKCORE_GOTOFF","","offset to GOT (S + A - GOT)",null,null],[17,"R_CKCORE_GOTPC","","PC offset to GOT (GOT + A - P)",null,null],[17,"R_CKCORE_GOT32","","32 bit GOT entry (G)",null,null],[17,"R_CKCORE_PLT32","","32 bit PLT entry (G)",null,null],[17,"R_CKCORE_ADDRGOT","","GOT entry in GLOB_DAT (GOT + G)",null,null],[17,"R_CKCORE_ADDRPLT","","PLT entry in GLOB_DAT (GOT + G)",null,null],[17,"R_CKCORE_PCREL_IMM26BY2","","((S + A - P) >> 1) & 0x3ff_ffff",null,null],[17,"R_CKCORE_PCREL_IMM16BY2","","disp ((S + A - P) >> 1) & 0xffff",null,null],[17,"R_CKCORE_PCREL_IMM16BY4","","disp ((S + A - P) >> 2) & 0xffff",null,null],[17,"R_CKCORE_PCREL_IMM10BY2","","disp ((S + A - P) >> 1) & 0x3ff",null,null],[17,"R_CKCORE_PCREL_IMM10BY4","","disp ((S + A - P) >> 2) & 0x3ff",null,null],[17,"R_CKCORE_ADDR_HI16","","high & low 16 bit ADDR, ((S + A) >> 16) & 0xffff",null,null],[17,"R_CKCORE_ADDR_LO16","","(S + A) & 0xffff",null,null],[17,"R_CKCORE_GOTPC_HI16","","high & low 16 bit GOTPC, ((GOT + A - P) >> 16) & 0xffff",null,null],[17,"R_CKCORE_GOTPC_LO16","","(GOT + A - P) & 0xffff",null,null],[17,"R_CKCORE_GOTOFF_HI16","","high & low 16 bit GOTOFF, ((S + A - GOT) >> 16) & 0xffff",null,null],[17,"R_CKCORE_GOTOFF_LO16","","(S + A - GOT) & 0xffff",null,null],[17,"R_CKCORE_GOT12","","12 bit disp GOT entry (G)",null,null],[17,"R_CKCORE_GOT_HI16","","high & low 16 bit GOT, (G >> 16) & 0xffff",null,null],[17,"R_CKCORE_GOT_LO16","","(G & 0xffff)",null,null],[17,"R_CKCORE_PLT12","","12 bit disp PLT entry (G)",null,null],[17,"R_CKCORE_PLT_HI16","","high & low 16 bit PLT, (G >> 16) & 0xffff",null,null],[17,"R_CKCORE_PLT_LO16","","G & 0xffff",null,null],[17,"R_CKCORE_ADDRGOT_HI16","","high & low 16 bit ADDRGOT, (GOT + G * 4) & 0xffff",null,null],[17,"R_CKCORE_ADDRGOT_LO16","","(GOT + G * 4) & 0xffff",null,null],[17,"R_CKCORE_ADDRPLT_HI16","","high & low 16 bit ADDRPLT, ((GOT + G * 4) >> 16) & 0xFFFF",null,null],[17,"R_CKCORE_ADDRPLT_LO16","","(GOT+G*4) & 0xffff",null,null],[17,"R_CKCORE_PCREL_JSR_IMM26BY2","","disp ((S+A-P) >>1) & x3ff_ffff",null,null],[17,"R_CKCORE_TOFFSET_LO16","","(S+A-BTEXT) & 0xffff",null,null],[17,"R_CKCORE_DOFFSET_LO16","","(S+A-BTEXT) & 0xffff",null,null],[17,"R_CKCORE_PCREL_IMM18BY2","","disp ((S+A-P) >>1) & 0x3ffff",null,null],[17,"R_CKCORE_DOFFSET_IMM18","","disp (S+A-BDATA) & 0x3ffff",null,null],[17,"R_CKCORE_DOFFSET_IMM18BY2","","disp ((S+A-BDATA)>>1) & 0x3ffff",null,null],[17,"R_CKCORE_DOFFSET_IMM18BY4","","disp ((S+A-BDATA)>>2) & 0x3ffff",null,null],[17,"R_CKCORE_GOT_IMM18BY4","","disp (G >> 2)",null,null],[17,"R_CKCORE_PLT_IMM18BY4","","disp (G >> 2)",null,null],[17,"R_CKCORE_PCREL_IMM7BY4","","disp ((S+A-P) >>2) & 0x7f",null,null],[17,"R_CKCORE_TLS_LE32","","32 bit offset to TLS block",null,null],[17,"R_CKCORE_TLS_IE32","","",null,null],[17,"R_CKCORE_TLS_GD32","","",null,null],[17,"R_CKCORE_TLS_LDM32","","",null,null],[17,"R_CKCORE_TLS_LDO32","","",null,null],[17,"R_CKCORE_TLS_DTPMOD32","","",null,null],[17,"R_CKCORE_TLS_DTPOFF32","","",null,null],[17,"R_CKCORE_TLS_TPOFF32","","",null,null],[17,"EF_CSKY_ABIMASK","","",null,null],[17,"EF_CSKY_OTHER","","",null,null],[17,"EF_CSKY_PROCESSOR","","",null,null],[17,"EF_CSKY_ABIV1","","",null,null],[17,"EF_CSKY_ABIV2","","",null,null],[17,"SHT_CSKY_ATTRIBUTES","","C-SKY attributes section.",null,null],[17,"EF_IA_64_MASKOS","","os-specific flags",null,null],[17,"EF_IA_64_ABI64","","64-bit ABI",null,null],[17,"EF_IA_64_ARCH","","arch. version mask",null,null],[17,"PT_IA_64_ARCHEXT","","arch extension bits",null,null],[17,"PT_IA_64_UNWIND","","ia64 unwind bits",null,null],[17,"PT_IA_64_HP_OPT_ANOT","","",null,null],[17,"PT_IA_64_HP_HSL_ANOT","","",null,null],[17,"PT_IA_64_HP_STACK","","",null,null],[17,"PF_IA_64_NORECOV","","spec insns w/o recovery",null,null],[17,"SHT_IA_64_EXT","","extension bits",null,null],[17,"SHT_IA_64_UNWIND","","unwind bits",null,null],[17,"SHF_IA_64_SHORT","","section near gp",null,null],[17,"SHF_IA_64_NORECOV","","spec insns w/o recovery",null,null],[17,"DT_IA_64_PLT_RESERVE","","",null,null],[17,"R_IA64_NONE","","none",null,null],[17,"R_IA64_IMM14","","symbol + addend, add imm14",null,null],[17,"R_IA64_IMM22","","symbol + addend, add imm22",null,null],[17,"R_IA64_IMM64","","symbol + addend, mov imm64",null,null],[17,"R_IA64_DIR32MSB","","symbol + addend, data4 MSB",null,null],[17,"R_IA64_DIR32LSB","","symbol + addend, data4 LSB",null,null],[17,"R_IA64_DIR64MSB","","symbol + addend, data8 MSB",null,null],[17,"R_IA64_DIR64LSB","","symbol + addend, data8 LSB",null,null],[17,"R_IA64_GPREL22","","@gprel(sym + add), add imm22",null,null],[17,"R_IA64_GPREL64I","","@gprel(sym + add), mov imm64",null,null],[17,"R_IA64_GPREL32MSB","","@gprel(sym + add), data4 MSB",null,null],[17,"R_IA64_GPREL32LSB","","@gprel(sym + add), data4 LSB",null,null],[17,"R_IA64_GPREL64MSB","","@gprel(sym + add), data8 MSB",null,null],[17,"R_IA64_GPREL64LSB","","@gprel(sym + add), data8 LSB",null,null],[17,"R_IA64_LTOFF22","","@ltoff(sym + add), add imm22",null,null],[17,"R_IA64_LTOFF64I","","@ltoff(sym + add), mov imm64",null,null],[17,"R_IA64_PLTOFF22","","@pltoff(sym + add), add imm22",null,null],[17,"R_IA64_PLTOFF64I","","@pltoff(sym + add), mov imm64",null,null],[17,"R_IA64_PLTOFF64MSB","","@pltoff(sym + add), data8 MSB",null,null],[17,"R_IA64_PLTOFF64LSB","","@pltoff(sym + add), data8 LSB",null,null],[17,"R_IA64_FPTR64I","","@fptr(sym + add), mov imm64",null,null],[17,"R_IA64_FPTR32MSB","","@fptr(sym + add), data4 MSB",null,null],[17,"R_IA64_FPTR32LSB","","@fptr(sym + add), data4 LSB",null,null],[17,"R_IA64_FPTR64MSB","","@fptr(sym + add), data8 MSB",null,null],[17,"R_IA64_FPTR64LSB","","@fptr(sym + add), data8 LSB",null,null],[17,"R_IA64_PCREL60B","","@pcrel(sym + add), brl",null,null],[17,"R_IA64_PCREL21B","","@pcrel(sym + add), ptb, call",null,null],[17,"R_IA64_PCREL21M","","@pcrel(sym + add), chk.s",null,null],[17,"R_IA64_PCREL21F","","@pcrel(sym + add), fchkf",null,null],[17,"R_IA64_PCREL32MSB","","@pcrel(sym + add), data4 MSB",null,null],[17,"R_IA64_PCREL32LSB","","@pcrel(sym + add), data4 LSB",null,null],[17,"R_IA64_PCREL64MSB","","@pcrel(sym + add), data8 MSB",null,null],[17,"R_IA64_PCREL64LSB","","@pcrel(sym + add), data8 LSB",null,null],[17,"R_IA64_LTOFF_FPTR22","","@ltoff(@fptr(s+a)), imm22",null,null],[17,"R_IA64_LTOFF_FPTR64I","","@ltoff(@fptr(s+a)), imm64",null,null],[17,"R_IA64_LTOFF_FPTR32MSB","","@ltoff(@fptr(s+a)), data4 MSB",null,null],[17,"R_IA64_LTOFF_FPTR32LSB","","@ltoff(@fptr(s+a)), data4 LSB",null,null],[17,"R_IA64_LTOFF_FPTR64MSB","","@ltoff(@fptr(s+a)), data8 MSB",null,null],[17,"R_IA64_LTOFF_FPTR64LSB","","@ltoff(@fptr(s+a)), data8 LSB",null,null],[17,"R_IA64_SEGREL32MSB","","@segrel(sym + add), data4 MSB",null,null],[17,"R_IA64_SEGREL32LSB","","@segrel(sym + add), data4 LSB",null,null],[17,"R_IA64_SEGREL64MSB","","@segrel(sym + add), data8 MSB",null,null],[17,"R_IA64_SEGREL64LSB","","@segrel(sym + add), data8 LSB",null,null],[17,"R_IA64_SECREL32MSB","","@secrel(sym + add), data4 MSB",null,null],[17,"R_IA64_SECREL32LSB","","@secrel(sym + add), data4 LSB",null,null],[17,"R_IA64_SECREL64MSB","","@secrel(sym + add), data8 MSB",null,null],[17,"R_IA64_SECREL64LSB","","@secrel(sym + add), data8 LSB",null,null],[17,"R_IA64_REL32MSB","","data 4 + REL",null,null],[17,"R_IA64_REL32LSB","","data 4 + REL",null,null],[17,"R_IA64_REL64MSB","","data 8 + REL",null,null],[17,"R_IA64_REL64LSB","","data 8 + REL",null,null],[17,"R_IA64_LTV32MSB","","symbol + addend, data4 MSB",null,null],[17,"R_IA64_LTV32LSB","","symbol + addend, data4 LSB",null,null],[17,"R_IA64_LTV64MSB","","symbol + addend, data8 MSB",null,null],[17,"R_IA64_LTV64LSB","","symbol + addend, data8 LSB",null,null],[17,"R_IA64_PCREL21BI","","@pcrel(sym + add), 21bit inst",null,null],[17,"R_IA64_PCREL22","","@pcrel(sym + add), 22bit inst",null,null],[17,"R_IA64_PCREL64I","","@pcrel(sym + add), 64bit inst",null,null],[17,"R_IA64_IPLTMSB","","dynamic reloc, imported PLT, MSB",null,null],[17,"R_IA64_IPLTLSB","","dynamic reloc, imported PLT, LSB",null,null],[17,"R_IA64_COPY","","copy relocation",null,null],[17,"R_IA64_SUB","","Addend and symbol difference",null,null],[17,"R_IA64_LTOFF22X","","LTOFF22, relaxable.",null,null],[17,"R_IA64_LDXMOV","","Use of LTOFF22X.",null,null],[17,"R_IA64_TPREL14","","@tprel(sym + add), imm14",null,null],[17,"R_IA64_TPREL22","","@tprel(sym + add), imm22",null,null],[17,"R_IA64_TPREL64I","","@tprel(sym + add), imm64",null,null],[17,"R_IA64_TPREL64MSB","","@tprel(sym + add), data8 MSB",null,null],[17,"R_IA64_TPREL64LSB","","@tprel(sym + add), data8 LSB",null,null],[17,"R_IA64_LTOFF_TPREL22","","@ltoff(@tprel(s+a)), imm2",null,null],[17,"R_IA64_DTPMOD64MSB","","@dtpmod(sym + add), data8 MSB",null,null],[17,"R_IA64_DTPMOD64LSB","","@dtpmod(sym + add), data8 LSB",null,null],[17,"R_IA64_LTOFF_DTPMOD22","","@ltoff(@dtpmod(sym + add)), imm22",null,null],[17,"R_IA64_DTPREL14","","@dtprel(sym + add), imm14",null,null],[17,"R_IA64_DTPREL22","","@dtprel(sym + add), imm22",null,null],[17,"R_IA64_DTPREL64I","","@dtprel(sym + add), imm64",null,null],[17,"R_IA64_DTPREL32MSB","","@dtprel(sym + add), data4 MSB",null,null],[17,"R_IA64_DTPREL32LSB","","@dtprel(sym + add), data4 LSB",null,null],[17,"R_IA64_DTPREL64MSB","","@dtprel(sym + add), data8 MSB",null,null],[17,"R_IA64_DTPREL64LSB","","@dtprel(sym + add), data8 LSB",null,null],[17,"R_IA64_LTOFF_DTPREL22","","@ltoff(@dtprel(s+a)), imm22",null,null],[17,"EF_SH_MACH_MASK","","",null,null],[17,"EF_SH_UNKNOWN","","",null,null],[17,"EF_SH1","","",null,null],[17,"EF_SH2","","",null,null],[17,"EF_SH3","","",null,null],[17,"EF_SH_DSP","","",null,null],[17,"EF_SH3_DSP","","",null,null],[17,"EF_SH4AL_DSP","","",null,null],[17,"EF_SH3E","","",null,null],[17,"EF_SH4","","",null,null],[17,"EF_SH2E","","",null,null],[17,"EF_SH4A","","",null,null],[17,"EF_SH2A","","",null,null],[17,"EF_SH4_NOFPU","","",null,null],[17,"EF_SH4A_NOFPU","","",null,null],[17,"EF_SH4_NOMMU_NOFPU","","",null,null],[17,"EF_SH2A_NOFPU","","",null,null],[17,"EF_SH3_NOMMU","","",null,null],[17,"EF_SH2A_SH4_NOFPU","","",null,null],[17,"EF_SH2A_SH3_NOFPU","","",null,null],[17,"EF_SH2A_SH4","","",null,null],[17,"EF_SH2A_SH3E","","",null,null],[17,"R_SH_NONE","","",null,null],[17,"R_SH_DIR32","","",null,null],[17,"R_SH_REL32","","",null,null],[17,"R_SH_DIR8WPN","","",null,null],[17,"R_SH_IND12W","","",null,null],[17,"R_SH_DIR8WPL","","",null,null],[17,"R_SH_DIR8WPZ","","",null,null],[17,"R_SH_DIR8BP","","",null,null],[17,"R_SH_DIR8W","","",null,null],[17,"R_SH_DIR8L","","",null,null],[17,"R_SH_SWITCH16","","",null,null],[17,"R_SH_SWITCH32","","",null,null],[17,"R_SH_USES","","",null,null],[17,"R_SH_COUNT","","",null,null],[17,"R_SH_ALIGN","","",null,null],[17,"R_SH_CODE","","",null,null],[17,"R_SH_DATA","","",null,null],[17,"R_SH_LABEL","","",null,null],[17,"R_SH_SWITCH8","","",null,null],[17,"R_SH_GNU_VTINHERIT","","",null,null],[17,"R_SH_GNU_VTENTRY","","",null,null],[17,"R_SH_TLS_GD_32","","",null,null],[17,"R_SH_TLS_LD_32","","",null,null],[17,"R_SH_TLS_LDO_32","","",null,null],[17,"R_SH_TLS_IE_32","","",null,null],[17,"R_SH_TLS_LE_32","","",null,null],[17,"R_SH_TLS_DTPMOD32","","",null,null],[17,"R_SH_TLS_DTPOFF32","","",null,null],[17,"R_SH_TLS_TPOFF32","","",null,null],[17,"R_SH_GOT32","","",null,null],[17,"R_SH_PLT32","","",null,null],[17,"R_SH_COPY","","",null,null],[17,"R_SH_GLOB_DAT","","",null,null],[17,"R_SH_JMP_SLOT","","",null,null],[17,"R_SH_RELATIVE","","",null,null],[17,"R_SH_GOTOFF","","",null,null],[17,"R_SH_GOTPC","","",null,null],[17,"EF_S390_HIGH_GPRS","","High GPRs kernel facility needed.",null,null],[17,"R_390_NONE","","No reloc.",null,null],[17,"R_390_8","","Direct 8 bit.",null,null],[17,"R_390_12","","Direct 12 bit.",null,null],[17,"R_390_16","","Direct 16 bit.",null,null],[17,"R_390_32","","Direct 32 bit.",null,null],[17,"R_390_PC32","","PC relative 32 bit.",null,null],[17,"R_390_GOT12","","12 bit GOT offset.",null,null],[17,"R_390_GOT32","","32 bit GOT offset.",null,null],[17,"R_390_PLT32","","32 bit PC relative PLT address.",null,null],[17,"R_390_COPY","","Copy symbol at runtime.",null,null],[17,"R_390_GLOB_DAT","","Create GOT entry.",null,null],[17,"R_390_JMP_SLOT","","Create PLT entry.",null,null],[17,"R_390_RELATIVE","","Adjust by program base.",null,null],[17,"R_390_GOTOFF32","","32 bit offset to GOT.",null,null],[17,"R_390_GOTPC","","32 bit PC relative offset to GOT.",null,null],[17,"R_390_GOT16","","16 bit GOT offset.",null,null],[17,"R_390_PC16","","PC relative 16 bit.",null,null],[17,"R_390_PC16DBL","","PC relative 16 bit shifted by 1.",null,null],[17,"R_390_PLT16DBL","","16 bit PC rel. PLT shifted by 1.",null,null],[17,"R_390_PC32DBL","","PC relative 32 bit shifted by 1.",null,null],[17,"R_390_PLT32DBL","","32 bit PC rel. PLT shifted by 1.",null,null],[17,"R_390_GOTPCDBL","","32 bit PC rel. GOT shifted by 1.",null,null],[17,"R_390_64","","Direct 64 bit.",null,null],[17,"R_390_PC64","","PC relative 64 bit.",null,null],[17,"R_390_GOT64","","64 bit GOT offset.",null,null],[17,"R_390_PLT64","","64 bit PC relative PLT address.",null,null],[17,"R_390_GOTENT","","32 bit PC rel. to GOT entry >> 1.",null,null],[17,"R_390_GOTOFF16","","16 bit offset to GOT.",null,null],[17,"R_390_GOTOFF64","","64 bit offset to GOT.",null,null],[17,"R_390_GOTPLT12","","12 bit offset to jump slot.",null,null],[17,"R_390_GOTPLT16","","16 bit offset to jump slot.",null,null],[17,"R_390_GOTPLT32","","32 bit offset to jump slot.",null,null],[17,"R_390_GOTPLT64","","64 bit offset to jump slot.",null,null],[17,"R_390_GOTPLTENT","","32 bit rel. offset to jump slot.",null,null],[17,"R_390_PLTOFF16","","16 bit offset from GOT to PLT.",null,null],[17,"R_390_PLTOFF32","","32 bit offset from GOT to PLT.",null,null],[17,"R_390_PLTOFF64","","16 bit offset from GOT to PLT.",null,null],[17,"R_390_TLS_LOAD","","Tag for load insn in TLS code.",null,null],[17,"R_390_TLS_GDCALL","","Tag for function call in general dynamic TLS code.",null,null],[17,"R_390_TLS_LDCALL","","Tag for function call in local dynamic TLS code.",null,null],[17,"R_390_TLS_GD32","","Direct 32 bit for general dynamic thread local data.",null,null],[17,"R_390_TLS_GD64","","Direct 64 bit for general dynamic thread local data.",null,null],[17,"R_390_TLS_GOTIE12","","12 bit GOT offset for static TLS block offset.",null,null],[17,"R_390_TLS_GOTIE32","","32 bit GOT offset for static TLS block offset.",null,null],[17,"R_390_TLS_GOTIE64","","64 bit GOT offset for static TLS block offset.",null,null],[17,"R_390_TLS_LDM32","","Direct 32 bit for local dynamic thread local data in LE…",null,null],[17,"R_390_TLS_LDM64","","Direct 64 bit for local dynamic thread local data in LE…",null,null],[17,"R_390_TLS_IE32","","32 bit address of GOT entry for negated static TLS block…",null,null],[17,"R_390_TLS_IE64","","64 bit address of GOT entry for negated static TLS block…",null,null],[17,"R_390_TLS_IEENT","","32 bit rel. offset to GOT entry for negated static TLS…",null,null],[17,"R_390_TLS_LE32","","32 bit negated offset relative to static TLS block.",null,null],[17,"R_390_TLS_LE64","","64 bit negated offset relative to static TLS block.",null,null],[17,"R_390_TLS_LDO32","","32 bit offset relative to TLS block.",null,null],[17,"R_390_TLS_LDO64","","64 bit offset relative to TLS block.",null,null],[17,"R_390_TLS_DTPMOD","","ID of module containing symbol.",null,null],[17,"R_390_TLS_DTPOFF","","Offset in TLS block.",null,null],[17,"R_390_TLS_TPOFF","","Negated offset in static TLS block.",null,null],[17,"R_390_20","","Direct 20 bit.",null,null],[17,"R_390_GOT20","","20 bit GOT offset.",null,null],[17,"R_390_GOTPLT20","","20 bit offset to jump slot.",null,null],[17,"R_390_TLS_GOTIE20","","20 bit GOT offset for static TLS block offset.",null,null],[17,"R_390_IRELATIVE","","STT_GNU_IFUNC relocation.",null,null],[17,"R_CRIS_NONE","","",null,null],[17,"R_CRIS_8","","",null,null],[17,"R_CRIS_16","","",null,null],[17,"R_CRIS_32","","",null,null],[17,"R_CRIS_8_PCREL","","",null,null],[17,"R_CRIS_16_PCREL","","",null,null],[17,"R_CRIS_32_PCREL","","",null,null],[17,"R_CRIS_GNU_VTINHERIT","","",null,null],[17,"R_CRIS_GNU_VTENTRY","","",null,null],[17,"R_CRIS_COPY","","",null,null],[17,"R_CRIS_GLOB_DAT","","",null,null],[17,"R_CRIS_JUMP_SLOT","","",null,null],[17,"R_CRIS_RELATIVE","","",null,null],[17,"R_CRIS_16_GOT","","",null,null],[17,"R_CRIS_32_GOT","","",null,null],[17,"R_CRIS_16_GOTPLT","","",null,null],[17,"R_CRIS_32_GOTPLT","","",null,null],[17,"R_CRIS_32_GOTREL","","",null,null],[17,"R_CRIS_32_PLT_GOTREL","","",null,null],[17,"R_CRIS_32_PLT_PCREL","","",null,null],[17,"R_X86_64_NONE","","No reloc",null,null],[17,"R_X86_64_64","","Direct 64 bit",null,null],[17,"R_X86_64_PC32","","PC relative 32 bit signed",null,null],[17,"R_X86_64_GOT32","","32 bit GOT entry",null,null],[17,"R_X86_64_PLT32","","32 bit PLT address",null,null],[17,"R_X86_64_COPY","","Copy symbol at runtime",null,null],[17,"R_X86_64_GLOB_DAT","","Create GOT entry",null,null],[17,"R_X86_64_JUMP_SLOT","","Create PLT entry",null,null],[17,"R_X86_64_RELATIVE","","Adjust by program base",null,null],[17,"R_X86_64_GOTPCREL","","32 bit signed PC relative offset to GOT",null,null],[17,"R_X86_64_32","","Direct 32 bit zero extended",null,null],[17,"R_X86_64_32S","","Direct 32 bit sign extended",null,null],[17,"R_X86_64_16","","Direct 16 bit zero extended",null,null],[17,"R_X86_64_PC16","","16 bit sign extended pc relative",null,null],[17,"R_X86_64_8","","Direct 8 bit sign extended",null,null],[17,"R_X86_64_PC8","","8 bit sign extended pc relative",null,null],[17,"R_X86_64_DTPMOD64","","ID of module containing symbol",null,null],[17,"R_X86_64_DTPOFF64","","Offset in module's TLS block",null,null],[17,"R_X86_64_TPOFF64","","Offset in initial TLS block",null,null],[17,"R_X86_64_TLSGD","","32 bit signed PC relative offset to two GOT entries for GD…",null,null],[17,"R_X86_64_TLSLD","","32 bit signed PC relative offset to two GOT entries for LD…",null,null],[17,"R_X86_64_DTPOFF32","","Offset in TLS block",null,null],[17,"R_X86_64_GOTTPOFF","","32 bit signed PC relative offset to GOT entry for IE symbol",null,null],[17,"R_X86_64_TPOFF32","","Offset in initial TLS block",null,null],[17,"R_X86_64_PC64","","PC relative 64 bit",null,null],[17,"R_X86_64_GOTOFF64","","64 bit offset to GOT",null,null],[17,"R_X86_64_GOTPC32","","32 bit signed pc relative offset to GOT",null,null],[17,"R_X86_64_GOT64","","64-bit GOT entry offset",null,null],[17,"R_X86_64_GOTPCREL64","","64-bit PC relative offset to GOT entry",null,null],[17,"R_X86_64_GOTPC64","","64-bit PC relative offset to GOT",null,null],[17,"R_X86_64_GOTPLT64","","like GOT64, says PLT entry needed",null,null],[17,"R_X86_64_PLTOFF64","","64-bit GOT relative offset to PLT entry",null,null],[17,"R_X86_64_SIZE32","","Size of symbol plus 32-bit addend",null,null],[17,"R_X86_64_SIZE64","","Size of symbol plus 64-bit addend",null,null],[17,"R_X86_64_GOTPC32_TLSDESC","","GOT offset for TLS descriptor.",null,null],[17,"R_X86_64_TLSDESC_CALL","","Marker for call through TLS descriptor.",null,null],[17,"R_X86_64_TLSDESC","","TLS descriptor.",null,null],[17,"R_X86_64_IRELATIVE","","Adjust indirectly by program base",null,null],[17,"R_X86_64_RELATIVE64","","64-bit adjust by program base",null,null],[17,"R_X86_64_GOTPCRELX","","Load from 32 bit signed pc relative offset to GOT entry…",null,null],[17,"R_X86_64_REX_GOTPCRELX","","Load from 32 bit signed pc relative offset to GOT entry…",null,null],[17,"SHT_X86_64_UNWIND","","Unwind information.",null,null],[17,"R_MN10300_NONE","","No reloc.",null,null],[17,"R_MN10300_32","","Direct 32 bit.",null,null],[17,"R_MN10300_16","","Direct 16 bit.",null,null],[17,"R_MN10300_8","","Direct 8 bit.",null,null],[17,"R_MN10300_PCREL32","","PC-relative 32-bit.",null,null],[17,"R_MN10300_PCREL16","","PC-relative 16-bit signed.",null,null],[17,"R_MN10300_PCREL8","","PC-relative 8-bit signed.",null,null],[17,"R_MN10300_GNU_VTINHERIT","","Ancient C++ vtable garbage...",null,null],[17,"R_MN10300_GNU_VTENTRY","","... collection annotation.",null,null],[17,"R_MN10300_24","","Direct 24 bit.",null,null],[17,"R_MN10300_GOTPC32","","32-bit PCrel offset to GOT.",null,null],[17,"R_MN10300_GOTPC16","","16-bit PCrel offset to GOT.",null,null],[17,"R_MN10300_GOTOFF32","","32-bit offset from GOT.",null,null],[17,"R_MN10300_GOTOFF24","","24-bit offset from GOT.",null,null],[17,"R_MN10300_GOTOFF16","","16-bit offset from GOT.",null,null],[17,"R_MN10300_PLT32","","32-bit PCrel to PLT entry.",null,null],[17,"R_MN10300_PLT16","","16-bit PCrel to PLT entry.",null,null],[17,"R_MN10300_GOT32","","32-bit offset to GOT entry.",null,null],[17,"R_MN10300_GOT24","","24-bit offset to GOT entry.",null,null],[17,"R_MN10300_GOT16","","16-bit offset to GOT entry.",null,null],[17,"R_MN10300_COPY","","Copy symbol at runtime.",null,null],[17,"R_MN10300_GLOB_DAT","","Create GOT entry.",null,null],[17,"R_MN10300_JMP_SLOT","","Create PLT entry.",null,null],[17,"R_MN10300_RELATIVE","","Adjust by program base.",null,null],[17,"R_MN10300_TLS_GD","","32-bit offset for global dynamic.",null,null],[17,"R_MN10300_TLS_LD","","32-bit offset for local dynamic.",null,null],[17,"R_MN10300_TLS_LDO","","Module-relative offset.",null,null],[17,"R_MN10300_TLS_GOTIE","","GOT offset for static TLS block offset.",null,null],[17,"R_MN10300_TLS_IE","","GOT address for static TLS block offset.",null,null],[17,"R_MN10300_TLS_LE","","Offset relative to static TLS block.",null,null],[17,"R_MN10300_TLS_DTPMOD","","ID of module containing symbol.",null,null],[17,"R_MN10300_TLS_DTPOFF","","Offset in module TLS block.",null,null],[17,"R_MN10300_TLS_TPOFF","","Offset in static TLS block.",null,null],[17,"R_MN10300_SYM_DIFF","","Adjustment for next reloc as needed by linker relaxation.",null,null],[17,"R_MN10300_ALIGN","","Alignment requirement for linker relaxation.",null,null],[17,"R_M32R_NONE","","No reloc.",null,null],[17,"R_M32R_16","","Direct 16 bit.",null,null],[17,"R_M32R_32","","Direct 32 bit.",null,null],[17,"R_M32R_24","","Direct 24 bit.",null,null],[17,"R_M32R_10_PCREL","","PC relative 10 bit shifted.",null,null],[17,"R_M32R_18_PCREL","","PC relative 18 bit shifted.",null,null],[17,"R_M32R_26_PCREL","","PC relative 26 bit shifted.",null,null],[17,"R_M32R_HI16_ULO","","High 16 bit with unsigned low.",null,null],[17,"R_M32R_HI16_SLO","","High 16 bit with signed low.",null,null],[17,"R_M32R_LO16","","Low 16 bit.",null,null],[17,"R_M32R_SDA16","","16 bit offset in SDA.",null,null],[17,"R_M32R_GNU_VTINHERIT","","",null,null],[17,"R_M32R_GNU_VTENTRY","","",null,null],[17,"R_M32R_16_RELA","","Direct 16 bit.",null,null],[17,"R_M32R_32_RELA","","Direct 32 bit.",null,null],[17,"R_M32R_24_RELA","","Direct 24 bit.",null,null],[17,"R_M32R_10_PCREL_RELA","","PC relative 10 bit shifted.",null,null],[17,"R_M32R_18_PCREL_RELA","","PC relative 18 bit shifted.",null,null],[17,"R_M32R_26_PCREL_RELA","","PC relative 26 bit shifted.",null,null],[17,"R_M32R_HI16_ULO_RELA","","High 16 bit with unsigned low",null,null],[17,"R_M32R_HI16_SLO_RELA","","High 16 bit with signed low",null,null],[17,"R_M32R_LO16_RELA","","Low 16 bit",null,null],[17,"R_M32R_SDA16_RELA","","16 bit offset in SDA",null,null],[17,"R_M32R_RELA_GNU_VTINHERIT","","",null,null],[17,"R_M32R_RELA_GNU_VTENTRY","","",null,null],[17,"R_M32R_REL32","","PC relative 32 bit.",null,null],[17,"R_M32R_GOT24","","24 bit GOT entry",null,null],[17,"R_M32R_26_PLTREL","","26 bit PC relative to PLT shifted",null,null],[17,"R_M32R_COPY","","Copy symbol at runtime",null,null],[17,"R_M32R_GLOB_DAT","","Create GOT entry",null,null],[17,"R_M32R_JMP_SLOT","","Create PLT entry",null,null],[17,"R_M32R_RELATIVE","","Adjust by program base",null,null],[17,"R_M32R_GOTOFF","","24 bit offset to GOT",null,null],[17,"R_M32R_GOTPC24","","24 bit PC relative offset to GOT",null,null],[17,"R_M32R_GOT16_HI_ULO","","High 16 bit GOT entry with unsigned low",null,null],[17,"R_M32R_GOT16_HI_SLO","","High 16 bit GOT entry with signed low",null,null],[17,"R_M32R_GOT16_LO","","Low 16 bit GOT entry",null,null],[17,"R_M32R_GOTPC_HI_ULO","","High 16 bit PC relative offset to GOT with unsigned low",null,null],[17,"R_M32R_GOTPC_HI_SLO","","High 16 bit PC relative offset to GOT with signed low",null,null],[17,"R_M32R_GOTPC_LO","","Low 16 bit PC relative offset to GOT",null,null],[17,"R_M32R_GOTOFF_HI_ULO","","High 16 bit offset to GOT with unsigned low",null,null],[17,"R_M32R_GOTOFF_HI_SLO","","High 16 bit offset to GOT with signed low",null,null],[17,"R_M32R_GOTOFF_LO","","Low 16 bit offset to GOT",null,null],[17,"R_M32R_NUM","","Keep this the last entry.",null,null],[17,"R_MICROBLAZE_NONE","","No reloc.",null,null],[17,"R_MICROBLAZE_32","","Direct 32 bit.",null,null],[17,"R_MICROBLAZE_32_PCREL","","PC relative 32 bit.",null,null],[17,"R_MICROBLAZE_64_PCREL","","PC relative 64 bit.",null,null],[17,"R_MICROBLAZE_32_PCREL_LO","","Low 16 bits of PCREL32.",null,null],[17,"R_MICROBLAZE_64","","Direct 64 bit.",null,null],[17,"R_MICROBLAZE_32_LO","","Low 16 bit.",null,null],[17,"R_MICROBLAZE_SRO32","","Read-only small data area.",null,null],[17,"R_MICROBLAZE_SRW32","","Read-write small data area.",null,null],[17,"R_MICROBLAZE_64_NONE","","No reloc.",null,null],[17,"R_MICROBLAZE_32_SYM_OP_SYM","","Symbol Op Symbol relocation.",null,null],[17,"R_MICROBLAZE_GNU_VTINHERIT","","GNU C++ vtable hierarchy.",null,null],[17,"R_MICROBLAZE_GNU_VTENTRY","","GNU C++ vtable member usage.",null,null],[17,"R_MICROBLAZE_GOTPC_64","","PC-relative GOT offset.",null,null],[17,"R_MICROBLAZE_GOT_64","","GOT entry offset.",null,null],[17,"R_MICROBLAZE_PLT_64","","PLT offset (PC-relative).",null,null],[17,"R_MICROBLAZE_REL","","Adjust by program base.",null,null],[17,"R_MICROBLAZE_JUMP_SLOT","","Create PLT entry.",null,null],[17,"R_MICROBLAZE_GLOB_DAT","","Create GOT entry.",null,null],[17,"R_MICROBLAZE_GOTOFF_64","","64 bit offset to GOT.",null,null],[17,"R_MICROBLAZE_GOTOFF_32","","32 bit offset to GOT.",null,null],[17,"R_MICROBLAZE_COPY","","Runtime copy.",null,null],[17,"R_MICROBLAZE_TLS","","TLS Reloc.",null,null],[17,"R_MICROBLAZE_TLSGD","","TLS General Dynamic.",null,null],[17,"R_MICROBLAZE_TLSLD","","TLS Local Dynamic.",null,null],[17,"R_MICROBLAZE_TLSDTPMOD32","","TLS Module ID.",null,null],[17,"R_MICROBLAZE_TLSDTPREL32","","TLS Offset Within TLS Block.",null,null],[17,"R_MICROBLAZE_TLSDTPREL64","","TLS Offset Within TLS Block.",null,null],[17,"R_MICROBLAZE_TLSGOTTPREL32","","TLS Offset From Thread Pointer.",null,null],[17,"R_MICROBLAZE_TLSTPREL32","","TLS Offset From Thread Pointer.",null,null],[17,"DT_NIOS2_GP","","Address of _gp.",null,null],[17,"R_NIOS2_NONE","","No reloc.",null,null],[17,"R_NIOS2_S16","","Direct signed 16 bit.",null,null],[17,"R_NIOS2_U16","","Direct unsigned 16 bit.",null,null],[17,"R_NIOS2_PCREL16","","PC relative 16 bit.",null,null],[17,"R_NIOS2_CALL26","","Direct call.",null,null],[17,"R_NIOS2_IMM5","","5 bit constant expression.",null,null],[17,"R_NIOS2_CACHE_OPX","","5 bit expression, shift 22.",null,null],[17,"R_NIOS2_IMM6","","6 bit constant expression.",null,null],[17,"R_NIOS2_IMM8","","8 bit constant expression.",null,null],[17,"R_NIOS2_HI16","","High 16 bit.",null,null],[17,"R_NIOS2_LO16","","Low 16 bit.",null,null],[17,"R_NIOS2_HIADJ16","","High 16 bit, adjusted.",null,null],[17,"R_NIOS2_BFD_RELOC_32","","32 bit symbol value + addend.",null,null],[17,"R_NIOS2_BFD_RELOC_16","","16 bit symbol value + addend.",null,null],[17,"R_NIOS2_BFD_RELOC_8","","8 bit symbol value + addend.",null,null],[17,"R_NIOS2_GPREL","","16 bit GP pointer offset.",null,null],[17,"R_NIOS2_GNU_VTINHERIT","","GNU C++ vtable hierarchy.",null,null],[17,"R_NIOS2_GNU_VTENTRY","","GNU C++ vtable member usage.",null,null],[17,"R_NIOS2_UJMP","","Unconditional branch.",null,null],[17,"R_NIOS2_CJMP","","Conditional branch.",null,null],[17,"R_NIOS2_CALLR","","Indirect call through register.",null,null],[17,"R_NIOS2_ALIGN","","Alignment requirement for linker relaxation.",null,null],[17,"R_NIOS2_GOT16","","16 bit GOT entry.",null,null],[17,"R_NIOS2_CALL16","","16 bit GOT entry for function.",null,null],[17,"R_NIOS2_GOTOFF_LO","","%lo of offset to GOT pointer.",null,null],[17,"R_NIOS2_GOTOFF_HA","","%hiadj of offset to GOT pointer.",null,null],[17,"R_NIOS2_PCREL_LO","","%lo of PC relative offset.",null,null],[17,"R_NIOS2_PCREL_HA","","%hiadj of PC relative offset.",null,null],[17,"R_NIOS2_TLS_GD16","","16 bit GOT offset for TLS GD.",null,null],[17,"R_NIOS2_TLS_LDM16","","16 bit GOT offset for TLS LDM.",null,null],[17,"R_NIOS2_TLS_LDO16","","16 bit module relative offset.",null,null],[17,"R_NIOS2_TLS_IE16","","16 bit GOT offset for TLS IE.",null,null],[17,"R_NIOS2_TLS_LE16","","16 bit LE TP-relative offset.",null,null],[17,"R_NIOS2_TLS_DTPMOD","","Module number.",null,null],[17,"R_NIOS2_TLS_DTPREL","","Module-relative offset.",null,null],[17,"R_NIOS2_TLS_TPREL","","TP-relative offset.",null,null],[17,"R_NIOS2_COPY","","Copy symbol at runtime.",null,null],[17,"R_NIOS2_GLOB_DAT","","Create GOT entry.",null,null],[17,"R_NIOS2_JUMP_SLOT","","Create PLT entry.",null,null],[17,"R_NIOS2_RELATIVE","","Adjust by program base.",null,null],[17,"R_NIOS2_GOTOFF","","16 bit offset to GOT pointer.",null,null],[17,"R_NIOS2_CALL26_NOAT","","Direct call in .noat section.",null,null],[17,"R_NIOS2_GOT_LO","","%lo() of GOT entry.",null,null],[17,"R_NIOS2_GOT_HA","","%hiadj() of GOT entry.",null,null],[17,"R_NIOS2_CALL_LO","","%lo() of function GOT entry.",null,null],[17,"R_NIOS2_CALL_HA","","%hiadj() of function GOT entry.",null,null],[17,"R_TILEPRO_NONE","","No reloc",null,null],[17,"R_TILEPRO_32","","Direct 32 bit",null,null],[17,"R_TILEPRO_16","","Direct 16 bit",null,null],[17,"R_TILEPRO_8","","Direct 8 bit",null,null],[17,"R_TILEPRO_32_PCREL","","PC relative 32 bit",null,null],[17,"R_TILEPRO_16_PCREL","","PC relative 16 bit",null,null],[17,"R_TILEPRO_8_PCREL","","PC relative 8 bit",null,null],[17,"R_TILEPRO_LO16","","Low 16 bit",null,null],[17,"R_TILEPRO_HI16","","High 16 bit",null,null],[17,"R_TILEPRO_HA16","","High 16 bit, adjusted",null,null],[17,"R_TILEPRO_COPY","","Copy relocation",null,null],[17,"R_TILEPRO_GLOB_DAT","","Create GOT entry",null,null],[17,"R_TILEPRO_JMP_SLOT","","Create PLT entry",null,null],[17,"R_TILEPRO_RELATIVE","","Adjust by program base",null,null],[17,"R_TILEPRO_BROFF_X1","","X1 pipe branch offset",null,null],[17,"R_TILEPRO_JOFFLONG_X1","","X1 pipe jump offset",null,null],[17,"R_TILEPRO_JOFFLONG_X1_PLT","","X1 pipe jump offset to PLT",null,null],[17,"R_TILEPRO_IMM8_X0","","X0 pipe 8-bit",null,null],[17,"R_TILEPRO_IMM8_Y0","","Y0 pipe 8-bit",null,null],[17,"R_TILEPRO_IMM8_X1","","X1 pipe 8-bit",null,null],[17,"R_TILEPRO_IMM8_Y1","","Y1 pipe 8-bit",null,null],[17,"R_TILEPRO_MT_IMM15_X1","","X1 pipe mtspr",null,null],[17,"R_TILEPRO_MF_IMM15_X1","","X1 pipe mfspr",null,null],[17,"R_TILEPRO_IMM16_X0","","X0 pipe 16-bit",null,null],[17,"R_TILEPRO_IMM16_X1","","X1 pipe 16-bit",null,null],[17,"R_TILEPRO_IMM16_X0_LO","","X0 pipe low 16-bit",null,null],[17,"R_TILEPRO_IMM16_X1_LO","","X1 pipe low 16-bit",null,null],[17,"R_TILEPRO_IMM16_X0_HI","","X0 pipe high 16-bit",null,null],[17,"R_TILEPRO_IMM16_X1_HI","","X1 pipe high 16-bit",null,null],[17,"R_TILEPRO_IMM16_X0_HA","","X0 pipe high 16-bit, adjusted",null,null],[17,"R_TILEPRO_IMM16_X1_HA","","X1 pipe high 16-bit, adjusted",null,null],[17,"R_TILEPRO_IMM16_X0_PCREL","","X0 pipe PC relative 16 bit",null,null],[17,"R_TILEPRO_IMM16_X1_PCREL","","X1 pipe PC relative 16 bit",null,null],[17,"R_TILEPRO_IMM16_X0_LO_PCREL","","X0 pipe PC relative low 16 bit",null,null],[17,"R_TILEPRO_IMM16_X1_LO_PCREL","","X1 pipe PC relative low 16 bit",null,null],[17,"R_TILEPRO_IMM16_X0_HI_PCREL","","X0 pipe PC relative high 16 bit",null,null],[17,"R_TILEPRO_IMM16_X1_HI_PCREL","","X1 pipe PC relative high 16 bit",null,null],[17,"R_TILEPRO_IMM16_X0_HA_PCREL","","X0 pipe PC relative ha() 16 bit",null,null],[17,"R_TILEPRO_IMM16_X1_HA_PCREL","","X1 pipe PC relative ha() 16 bit",null,null],[17,"R_TILEPRO_IMM16_X0_GOT","","X0 pipe 16-bit GOT offset",null,null],[17,"R_TILEPRO_IMM16_X1_GOT","","X1 pipe 16-bit GOT offset",null,null],[17,"R_TILEPRO_IMM16_X0_GOT_LO","","X0 pipe low 16-bit GOT offset",null,null],[17,"R_TILEPRO_IMM16_X1_GOT_LO","","X1 pipe low 16-bit GOT offset",null,null],[17,"R_TILEPRO_IMM16_X0_GOT_HI","","X0 pipe high 16-bit GOT offset",null,null],[17,"R_TILEPRO_IMM16_X1_GOT_HI","","X1 pipe high 16-bit GOT offset",null,null],[17,"R_TILEPRO_IMM16_X0_GOT_HA","","X0 pipe ha() 16-bit GOT offset",null,null],[17,"R_TILEPRO_IMM16_X1_GOT_HA","","X1 pipe ha() 16-bit GOT offset",null,null],[17,"R_TILEPRO_MMSTART_X0","","X0 pipe mm \"start\"",null,null],[17,"R_TILEPRO_MMEND_X0","","X0 pipe mm \"end\"",null,null],[17,"R_TILEPRO_MMSTART_X1","","X1 pipe mm \"start\"",null,null],[17,"R_TILEPRO_MMEND_X1","","X1 pipe mm \"end\"",null,null],[17,"R_TILEPRO_SHAMT_X0","","X0 pipe shift amount",null,null],[17,"R_TILEPRO_SHAMT_X1","","X1 pipe shift amount",null,null],[17,"R_TILEPRO_SHAMT_Y0","","Y0 pipe shift amount",null,null],[17,"R_TILEPRO_SHAMT_Y1","","Y1 pipe shift amount",null,null],[17,"R_TILEPRO_DEST_IMM8_X1","","X1 pipe destination 8-bit",null,null],[17,"R_TILEPRO_TLS_GD_CALL","","\"jal\" for TLS GD",null,null],[17,"R_TILEPRO_IMM8_X0_TLS_GD_ADD","","X0 pipe \"addi\" for TLS GD",null,null],[17,"R_TILEPRO_IMM8_X1_TLS_GD_ADD","","X1 pipe \"addi\" for TLS GD",null,null],[17,"R_TILEPRO_IMM8_Y0_TLS_GD_ADD","","Y0 pipe \"addi\" for TLS GD",null,null],[17,"R_TILEPRO_IMM8_Y1_TLS_GD_ADD","","Y1 pipe \"addi\" for TLS GD",null,null],[17,"R_TILEPRO_TLS_IE_LOAD","","\"lw_tls\" for TLS IE",null,null],[17,"R_TILEPRO_IMM16_X0_TLS_GD","","X0 pipe 16-bit TLS GD offset",null,null],[17,"R_TILEPRO_IMM16_X1_TLS_GD","","X1 pipe 16-bit TLS GD offset",null,null],[17,"R_TILEPRO_IMM16_X0_TLS_GD_LO","","X0 pipe low 16-bit TLS GD offset",null,null],[17,"R_TILEPRO_IMM16_X1_TLS_GD_LO","","X1 pipe low 16-bit TLS GD offset",null,null],[17,"R_TILEPRO_IMM16_X0_TLS_GD_HI","","X0 pipe high 16-bit TLS GD offset",null,null],[17,"R_TILEPRO_IMM16_X1_TLS_GD_HI","","X1 pipe high 16-bit TLS GD offset",null,null],[17,"R_TILEPRO_IMM16_X0_TLS_GD_HA","","X0 pipe ha() 16-bit TLS GD offset",null,null],[17,"R_TILEPRO_IMM16_X1_TLS_GD_HA","","X1 pipe ha() 16-bit TLS GD offset",null,null],[17,"R_TILEPRO_IMM16_X0_TLS_IE","","X0 pipe 16-bit TLS IE offset",null,null],[17,"R_TILEPRO_IMM16_X1_TLS_IE","","X1 pipe 16-bit TLS IE offset",null,null],[17,"R_TILEPRO_IMM16_X0_TLS_IE_LO","","X0 pipe low 16-bit TLS IE offset",null,null],[17,"R_TILEPRO_IMM16_X1_TLS_IE_LO","","X1 pipe low 16-bit TLS IE offset",null,null],[17,"R_TILEPRO_IMM16_X0_TLS_IE_HI","","X0 pipe high 16-bit TLS IE offset",null,null],[17,"R_TILEPRO_IMM16_X1_TLS_IE_HI","","X1 pipe high 16-bit TLS IE offset",null,null],[17,"R_TILEPRO_IMM16_X0_TLS_IE_HA","","X0 pipe ha() 16-bit TLS IE offset",null,null],[17,"R_TILEPRO_IMM16_X1_TLS_IE_HA","","X1 pipe ha() 16-bit TLS IE offset",null,null],[17,"R_TILEPRO_TLS_DTPMOD32","","ID of module containing symbol",null,null],[17,"R_TILEPRO_TLS_DTPOFF32","","Offset in TLS block",null,null],[17,"R_TILEPRO_TLS_TPOFF32","","Offset in static TLS block",null,null],[17,"R_TILEPRO_IMM16_X0_TLS_LE","","X0 pipe 16-bit TLS LE offset",null,null],[17,"R_TILEPRO_IMM16_X1_TLS_LE","","X1 pipe 16-bit TLS LE offset",null,null],[17,"R_TILEPRO_IMM16_X0_TLS_LE_LO","","X0 pipe low 16-bit TLS LE offset",null,null],[17,"R_TILEPRO_IMM16_X1_TLS_LE_LO","","X1 pipe low 16-bit TLS LE offset",null,null],[17,"R_TILEPRO_IMM16_X0_TLS_LE_HI","","X0 pipe high 16-bit TLS LE offset",null,null],[17,"R_TILEPRO_IMM16_X1_TLS_LE_HI","","X1 pipe high 16-bit TLS LE offset",null,null],[17,"R_TILEPRO_IMM16_X0_TLS_LE_HA","","X0 pipe ha() 16-bit TLS LE offset",null,null],[17,"R_TILEPRO_IMM16_X1_TLS_LE_HA","","X1 pipe ha() 16-bit TLS LE offset",null,null],[17,"R_TILEPRO_GNU_VTINHERIT","","GNU C++ vtable hierarchy",null,null],[17,"R_TILEPRO_GNU_VTENTRY","","GNU C++ vtable member usage",null,null],[17,"R_TILEGX_NONE","","No reloc",null,null],[17,"R_TILEGX_64","","Direct 64 bit",null,null],[17,"R_TILEGX_32","","Direct 32 bit",null,null],[17,"R_TILEGX_16","","Direct 16 bit",null,null],[17,"R_TILEGX_8","","Direct 8 bit",null,null],[17,"R_TILEGX_64_PCREL","","PC relative 64 bit",null,null],[17,"R_TILEGX_32_PCREL","","PC relative 32 bit",null,null],[17,"R_TILEGX_16_PCREL","","PC relative 16 bit",null,null],[17,"R_TILEGX_8_PCREL","","PC relative 8 bit",null,null],[17,"R_TILEGX_HW0","","hword 0 16-bit",null,null],[17,"R_TILEGX_HW1","","hword 1 16-bit",null,null],[17,"R_TILEGX_HW2","","hword 2 16-bit",null,null],[17,"R_TILEGX_HW3","","hword 3 16-bit",null,null],[17,"R_TILEGX_HW0_LAST","","last hword 0 16-bit",null,null],[17,"R_TILEGX_HW1_LAST","","last hword 1 16-bit",null,null],[17,"R_TILEGX_HW2_LAST","","last hword 2 16-bit",null,null],[17,"R_TILEGX_COPY","","Copy relocation",null,null],[17,"R_TILEGX_GLOB_DAT","","Create GOT entry",null,null],[17,"R_TILEGX_JMP_SLOT","","Create PLT entry",null,null],[17,"R_TILEGX_RELATIVE","","Adjust by program base",null,null],[17,"R_TILEGX_BROFF_X1","","X1 pipe branch offset",null,null],[17,"R_TILEGX_JUMPOFF_X1","","X1 pipe jump offset",null,null],[17,"R_TILEGX_JUMPOFF_X1_PLT","","X1 pipe jump offset to PLT",null,null],[17,"R_TILEGX_IMM8_X0","","X0 pipe 8-bit",null,null],[17,"R_TILEGX_IMM8_Y0","","Y0 pipe 8-bit",null,null],[17,"R_TILEGX_IMM8_X1","","X1 pipe 8-bit",null,null],[17,"R_TILEGX_IMM8_Y1","","Y1 pipe 8-bit",null,null],[17,"R_TILEGX_DEST_IMM8_X1","","X1 pipe destination 8-bit",null,null],[17,"R_TILEGX_MT_IMM14_X1","","X1 pipe mtspr",null,null],[17,"R_TILEGX_MF_IMM14_X1","","X1 pipe mfspr",null,null],[17,"R_TILEGX_MMSTART_X0","","X0 pipe mm \"start\"",null,null],[17,"R_TILEGX_MMEND_X0","","X0 pipe mm \"end\"",null,null],[17,"R_TILEGX_SHAMT_X0","","X0 pipe shift amount",null,null],[17,"R_TILEGX_SHAMT_X1","","X1 pipe shift amount",null,null],[17,"R_TILEGX_SHAMT_Y0","","Y0 pipe shift amount",null,null],[17,"R_TILEGX_SHAMT_Y1","","Y1 pipe shift amount",null,null],[17,"R_TILEGX_IMM16_X0_HW0","","X0 pipe hword 0",null,null],[17,"R_TILEGX_IMM16_X1_HW0","","X1 pipe hword 0",null,null],[17,"R_TILEGX_IMM16_X0_HW1","","X0 pipe hword 1",null,null],[17,"R_TILEGX_IMM16_X1_HW1","","X1 pipe hword 1",null,null],[17,"R_TILEGX_IMM16_X0_HW2","","X0 pipe hword 2",null,null],[17,"R_TILEGX_IMM16_X1_HW2","","X1 pipe hword 2",null,null],[17,"R_TILEGX_IMM16_X0_HW3","","X0 pipe hword 3",null,null],[17,"R_TILEGX_IMM16_X1_HW3","","X1 pipe hword 3",null,null],[17,"R_TILEGX_IMM16_X0_HW0_LAST","","X0 pipe last hword 0",null,null],[17,"R_TILEGX_IMM16_X1_HW0_LAST","","X1 pipe last hword 0",null,null],[17,"R_TILEGX_IMM16_X0_HW1_LAST","","X0 pipe last hword 1",null,null],[17,"R_TILEGX_IMM16_X1_HW1_LAST","","X1 pipe last hword 1",null,null],[17,"R_TILEGX_IMM16_X0_HW2_LAST","","X0 pipe last hword 2",null,null],[17,"R_TILEGX_IMM16_X1_HW2_LAST","","X1 pipe last hword 2",null,null],[17,"R_TILEGX_IMM16_X0_HW0_PCREL","","X0 pipe PC relative hword 0",null,null],[17,"R_TILEGX_IMM16_X1_HW0_PCREL","","X1 pipe PC relative hword 0",null,null],[17,"R_TILEGX_IMM16_X0_HW1_PCREL","","X0 pipe PC relative hword 1",null,null],[17,"R_TILEGX_IMM16_X1_HW1_PCREL","","X1 pipe PC relative hword 1",null,null],[17,"R_TILEGX_IMM16_X0_HW2_PCREL","","X0 pipe PC relative hword 2",null,null],[17,"R_TILEGX_IMM16_X1_HW2_PCREL","","X1 pipe PC relative hword 2",null,null],[17,"R_TILEGX_IMM16_X0_HW3_PCREL","","X0 pipe PC relative hword 3",null,null],[17,"R_TILEGX_IMM16_X1_HW3_PCREL","","X1 pipe PC relative hword 3",null,null],[17,"R_TILEGX_IMM16_X0_HW0_LAST_PCREL","","X0 pipe PC-rel last hword 0",null,null],[17,"R_TILEGX_IMM16_X1_HW0_LAST_PCREL","","X1 pipe PC-rel last hword 0",null,null],[17,"R_TILEGX_IMM16_X0_HW1_LAST_PCREL","","X0 pipe PC-rel last hword 1",null,null],[17,"R_TILEGX_IMM16_X1_HW1_LAST_PCREL","","X1 pipe PC-rel last hword 1",null,null],[17,"R_TILEGX_IMM16_X0_HW2_LAST_PCREL","","X0 pipe PC-rel last hword 2",null,null],[17,"R_TILEGX_IMM16_X1_HW2_LAST_PCREL","","X1 pipe PC-rel last hword 2",null,null],[17,"R_TILEGX_IMM16_X0_HW0_GOT","","X0 pipe hword 0 GOT offset",null,null],[17,"R_TILEGX_IMM16_X1_HW0_GOT","","X1 pipe hword 0 GOT offset",null,null],[17,"R_TILEGX_IMM16_X0_HW0_PLT_PCREL","","X0 pipe PC-rel PLT hword 0",null,null],[17,"R_TILEGX_IMM16_X1_HW0_PLT_PCREL","","X1 pipe PC-rel PLT hword 0",null,null],[17,"R_TILEGX_IMM16_X0_HW1_PLT_PCREL","","X0 pipe PC-rel PLT hword 1",null,null],[17,"R_TILEGX_IMM16_X1_HW1_PLT_PCREL","","X1 pipe PC-rel PLT hword 1",null,null],[17,"R_TILEGX_IMM16_X0_HW2_PLT_PCREL","","X0 pipe PC-rel PLT hword 2",null,null],[17,"R_TILEGX_IMM16_X1_HW2_PLT_PCREL","","X1 pipe PC-rel PLT hword 2",null,null],[17,"R_TILEGX_IMM16_X0_HW0_LAST_GOT","","X0 pipe last hword 0 GOT offset",null,null],[17,"R_TILEGX_IMM16_X1_HW0_LAST_GOT","","X1 pipe last hword 0 GOT offset",null,null],[17,"R_TILEGX_IMM16_X0_HW1_LAST_GOT","","X0 pipe last hword 1 GOT offset",null,null],[17,"R_TILEGX_IMM16_X1_HW1_LAST_GOT","","X1 pipe last hword 1 GOT offset",null,null],[17,"R_TILEGX_IMM16_X0_HW3_PLT_PCREL","","X0 pipe PC-rel PLT hword 3",null,null],[17,"R_TILEGX_IMM16_X1_HW3_PLT_PCREL","","X1 pipe PC-rel PLT hword 3",null,null],[17,"R_TILEGX_IMM16_X0_HW0_TLS_GD","","X0 pipe hword 0 TLS GD offset",null,null],[17,"R_TILEGX_IMM16_X1_HW0_TLS_GD","","X1 pipe hword 0 TLS GD offset",null,null],[17,"R_TILEGX_IMM16_X0_HW0_TLS_LE","","X0 pipe hword 0 TLS LE offset",null,null],[17,"R_TILEGX_IMM16_X1_HW0_TLS_LE","","X1 pipe hword 0 TLS LE offset",null,null],[17,"R_TILEGX_IMM16_X0_HW0_LAST_TLS_LE","","X0 pipe last hword 0 LE off",null,null],[17,"R_TILEGX_IMM16_X1_HW0_LAST_TLS_LE","","X1 pipe last hword 0 LE off",null,null],[17,"R_TILEGX_IMM16_X0_HW1_LAST_TLS_LE","","X0 pipe last hword 1 LE off",null,null],[17,"R_TILEGX_IMM16_X1_HW1_LAST_TLS_LE","","X1 pipe last hword 1 LE off",null,null],[17,"R_TILEGX_IMM16_X0_HW0_LAST_TLS_GD","","X0 pipe last hword 0 GD off",null,null],[17,"R_TILEGX_IMM16_X1_HW0_LAST_TLS_GD","","X1 pipe last hword 0 GD off",null,null],[17,"R_TILEGX_IMM16_X0_HW1_LAST_TLS_GD","","X0 pipe last hword 1 GD off",null,null],[17,"R_TILEGX_IMM16_X1_HW1_LAST_TLS_GD","","X1 pipe last hword 1 GD off",null,null],[17,"R_TILEGX_IMM16_X0_HW0_TLS_IE","","X0 pipe hword 0 TLS IE offset",null,null],[17,"R_TILEGX_IMM16_X1_HW0_TLS_IE","","X1 pipe hword 0 TLS IE offset",null,null],[17,"R_TILEGX_IMM16_X0_HW0_LAST_PLT_PCREL","","X0 pipe PC-rel PLT last hword 0",null,null],[17,"R_TILEGX_IMM16_X1_HW0_LAST_PLT_PCREL","","X1 pipe PC-rel PLT last hword 0",null,null],[17,"R_TILEGX_IMM16_X0_HW1_LAST_PLT_PCREL","","X0 pipe PC-rel PLT last hword 1",null,null],[17,"R_TILEGX_IMM16_X1_HW1_LAST_PLT_PCREL","","X1 pipe PC-rel PLT last hword 1",null,null],[17,"R_TILEGX_IMM16_X0_HW2_LAST_PLT_PCREL","","X0 pipe PC-rel PLT last hword 2",null,null],[17,"R_TILEGX_IMM16_X1_HW2_LAST_PLT_PCREL","","X1 pipe PC-rel PLT last hword 2",null,null],[17,"R_TILEGX_IMM16_X0_HW0_LAST_TLS_IE","","X0 pipe last hword 0 IE off",null,null],[17,"R_TILEGX_IMM16_X1_HW0_LAST_TLS_IE","","X1 pipe last hword 0 IE off",null,null],[17,"R_TILEGX_IMM16_X0_HW1_LAST_TLS_IE","","X0 pipe last hword 1 IE off",null,null],[17,"R_TILEGX_IMM16_X1_HW1_LAST_TLS_IE","","X1 pipe last hword 1 IE off",null,null],[17,"R_TILEGX_TLS_DTPMOD64","","64-bit ID of symbol's module",null,null],[17,"R_TILEGX_TLS_DTPOFF64","","64-bit offset in TLS block",null,null],[17,"R_TILEGX_TLS_TPOFF64","","64-bit offset in static TLS block",null,null],[17,"R_TILEGX_TLS_DTPMOD32","","32-bit ID of symbol's module",null,null],[17,"R_TILEGX_TLS_DTPOFF32","","32-bit offset in TLS block",null,null],[17,"R_TILEGX_TLS_TPOFF32","","32-bit offset in static TLS block",null,null],[17,"R_TILEGX_TLS_GD_CALL","","\"jal\" for TLS GD",null,null],[17,"R_TILEGX_IMM8_X0_TLS_GD_ADD","","X0 pipe \"addi\" for TLS GD",null,null],[17,"R_TILEGX_IMM8_X1_TLS_GD_ADD","","X1 pipe \"addi\" for TLS GD",null,null],[17,"R_TILEGX_IMM8_Y0_TLS_GD_ADD","","Y0 pipe \"addi\" for TLS GD",null,null],[17,"R_TILEGX_IMM8_Y1_TLS_GD_ADD","","Y1 pipe \"addi\" for TLS GD",null,null],[17,"R_TILEGX_TLS_IE_LOAD","","\"ld_tls\" for TLS IE",null,null],[17,"R_TILEGX_IMM8_X0_TLS_ADD","","X0 pipe \"addi\" for TLS GD/IE",null,null],[17,"R_TILEGX_IMM8_X1_TLS_ADD","","X1 pipe \"addi\" for TLS GD/IE",null,null],[17,"R_TILEGX_IMM8_Y0_TLS_ADD","","Y0 pipe \"addi\" for TLS GD/IE",null,null],[17,"R_TILEGX_IMM8_Y1_TLS_ADD","","Y1 pipe \"addi\" for TLS GD/IE",null,null],[17,"R_TILEGX_GNU_VTINHERIT","","GNU C++ vtable hierarchy",null,null],[17,"R_TILEGX_GNU_VTENTRY","","GNU C++ vtable member usage",null,null],[17,"EF_RISCV_RVC","","",null,null],[17,"EF_RISCV_FLOAT_ABI","","",null,null],[17,"EF_RISCV_FLOAT_ABI_SOFT","","",null,null],[17,"EF_RISCV_FLOAT_ABI_SINGLE","","",null,null],[17,"EF_RISCV_FLOAT_ABI_DOUBLE","","",null,null],[17,"EF_RISCV_FLOAT_ABI_QUAD","","",null,null],[17,"R_RISCV_NONE","","",null,null],[17,"R_RISCV_32","","",null,null],[17,"R_RISCV_64","","",null,null],[17,"R_RISCV_RELATIVE","","",null,null],[17,"R_RISCV_COPY","","",null,null],[17,"R_RISCV_JUMP_SLOT","","",null,null],[17,"R_RISCV_TLS_DTPMOD32","","",null,null],[17,"R_RISCV_TLS_DTPMOD64","","",null,null],[17,"R_RISCV_TLS_DTPREL32","","",null,null],[17,"R_RISCV_TLS_DTPREL64","","",null,null],[17,"R_RISCV_TLS_TPREL32","","",null,null],[17,"R_RISCV_TLS_TPREL64","","",null,null],[17,"R_RISCV_BRANCH","","",null,null],[17,"R_RISCV_JAL","","",null,null],[17,"R_RISCV_CALL","","",null,null],[17,"R_RISCV_CALL_PLT","","",null,null],[17,"R_RISCV_GOT_HI20","","",null,null],[17,"R_RISCV_TLS_GOT_HI20","","",null,null],[17,"R_RISCV_TLS_GD_HI20","","",null,null],[17,"R_RISCV_PCREL_HI20","","",null,null],[17,"R_RISCV_PCREL_LO12_I","","",null,null],[17,"R_RISCV_PCREL_LO12_S","","",null,null],[17,"R_RISCV_HI20","","",null,null],[17,"R_RISCV_LO12_I","","",null,null],[17,"R_RISCV_LO12_S","","",null,null],[17,"R_RISCV_TPREL_HI20","","",null,null],[17,"R_RISCV_TPREL_LO12_I","","",null,null],[17,"R_RISCV_TPREL_LO12_S","","",null,null],[17,"R_RISCV_TPREL_ADD","","",null,null],[17,"R_RISCV_ADD8","","",null,null],[17,"R_RISCV_ADD16","","",null,null],[17,"R_RISCV_ADD32","","",null,null],[17,"R_RISCV_ADD64","","",null,null],[17,"R_RISCV_SUB8","","",null,null],[17,"R_RISCV_SUB16","","",null,null],[17,"R_RISCV_SUB32","","",null,null],[17,"R_RISCV_SUB64","","",null,null],[17,"R_RISCV_GNU_VTINHERIT","","",null,null],[17,"R_RISCV_GNU_VTENTRY","","",null,null],[17,"R_RISCV_ALIGN","","",null,null],[17,"R_RISCV_RVC_BRANCH","","",null,null],[17,"R_RISCV_RVC_JUMP","","",null,null],[17,"R_RISCV_RVC_LUI","","",null,null],[17,"R_RISCV_GPREL_I","","",null,null],[17,"R_RISCV_GPREL_S","","",null,null],[17,"R_RISCV_TPREL_I","","",null,null],[17,"R_RISCV_TPREL_S","","",null,null],[17,"R_RISCV_RELAX","","",null,null],[17,"R_RISCV_SUB6","","",null,null],[17,"R_RISCV_SET6","","",null,null],[17,"R_RISCV_SET8","","",null,null],[17,"R_RISCV_SET16","","",null,null],[17,"R_RISCV_SET32","","",null,null],[17,"R_RISCV_32_PCREL","","",null,null],[17,"R_BPF_NONE","","No reloc",null,null],[17,"R_BPF_64_64","","",null,null],[17,"R_BPF_64_32","","",null,null],[17,"R_METAG_HIADDR16","","",null,null],[17,"R_METAG_LOADDR16","","",null,null],[17,"R_METAG_ADDR32","","32bit absolute address",null,null],[17,"R_METAG_NONE","","No reloc",null,null],[17,"R_METAG_RELBRANCH","","",null,null],[17,"R_METAG_GETSETOFF","","",null,null],[17,"R_METAG_REG32OP1","","",null,null],[17,"R_METAG_REG32OP2","","",null,null],[17,"R_METAG_REG32OP3","","",null,null],[17,"R_METAG_REG16OP1","","",null,null],[17,"R_METAG_REG16OP2","","",null,null],[17,"R_METAG_REG16OP3","","",null,null],[17,"R_METAG_REG32OP4","","",null,null],[17,"R_METAG_HIOG","","",null,null],[17,"R_METAG_LOOG","","",null,null],[17,"R_METAG_REL8","","",null,null],[17,"R_METAG_REL16","","",null,null],[17,"R_METAG_GNU_VTINHERIT","","",null,null],[17,"R_METAG_GNU_VTENTRY","","",null,null],[17,"R_METAG_HI16_GOTOFF","","",null,null],[17,"R_METAG_LO16_GOTOFF","","",null,null],[17,"R_METAG_GETSET_GOTOFF","","",null,null],[17,"R_METAG_GETSET_GOT","","",null,null],[17,"R_METAG_HI16_GOTPC","","",null,null],[17,"R_METAG_LO16_GOTPC","","",null,null],[17,"R_METAG_HI16_PLT","","",null,null],[17,"R_METAG_LO16_PLT","","",null,null],[17,"R_METAG_RELBRANCH_PLT","","",null,null],[17,"R_METAG_GOTOFF","","",null,null],[17,"R_METAG_PLT","","",null,null],[17,"R_METAG_COPY","","",null,null],[17,"R_METAG_JMP_SLOT","","",null,null],[17,"R_METAG_RELATIVE","","",null,null],[17,"R_METAG_GLOB_DAT","","",null,null],[17,"R_METAG_TLS_GD","","",null,null],[17,"R_METAG_TLS_LDM","","",null,null],[17,"R_METAG_TLS_LDO_HI16","","",null,null],[17,"R_METAG_TLS_LDO_LO16","","",null,null],[17,"R_METAG_TLS_LDO","","",null,null],[17,"R_METAG_TLS_IE","","",null,null],[17,"R_METAG_TLS_IENONPIC","","",null,null],[17,"R_METAG_TLS_IENONPIC_HI16","","",null,null],[17,"R_METAG_TLS_IENONPIC_LO16","","",null,null],[17,"R_METAG_TLS_TPOFF","","",null,null],[17,"R_METAG_TLS_DTPMOD","","",null,null],[17,"R_METAG_TLS_DTPOFF","","",null,null],[17,"R_METAG_TLS_LE","","",null,null],[17,"R_METAG_TLS_LE_HI16","","",null,null],[17,"R_METAG_TLS_LE_LO16","","",null,null],[17,"R_NDS32_NONE","","",null,null],[17,"R_NDS32_32_RELA","","",null,null],[17,"R_NDS32_COPY","","",null,null],[17,"R_NDS32_GLOB_DAT","","",null,null],[17,"R_NDS32_JMP_SLOT","","",null,null],[17,"R_NDS32_RELATIVE","","",null,null],[17,"R_NDS32_TLS_TPOFF","","",null,null],[17,"R_NDS32_TLS_DESC","","",null,null],[11,"st_bind","","Get the `st_bind` component of the `st_info` field.",78,[[["self"]],["u8"]]],[11,"st_type","","Get the `st_type` component of the `st_info` field.",78,[[["self"]],["u8"]]],[11,"set_st_info","","Set the `st_info` field given the `st_bind` and `st_type`…",78,[[["self"],["u8"]]]],[11,"st_visibility","","Get the `st_visibility` component of the `st_info` field.",78,[[["self"]],["u8"]]],[11,"st_bind","","Get the `st_bind` component of the `st_info` field.",79,[[["self"]],["u8"]]],[11,"st_type","","Get the `st_type` component of the `st_info` field.",79,[[["self"]],["u8"]]],[11,"set_st_info","","Set the `st_info` field given the `st_bind` and `st_type`…",79,[[["self"],["u8"]]]],[11,"st_visibility","","Get the `st_visibility` component of the `st_info` field.",79,[[["self"]],["u8"]]],[11,"r_sym","","Get the `r_sym` component of the `r_info` field.",80,[[["e"]],["u32"]]],[11,"r_type","","Get the `r_type` component of the `r_info` field.",80,[[["e"]],["u8"]]],[11,"r_info","","Calculate the `r_info` field given the `r_sym` and…",80,[[["u8"],["u32"],["e"]],["u32"]]],[11,"set_r_info","","Set the `r_info` field given the `r_sym` and `r_type`…",80,[[["u32"],["e"],["self"],["u8"]]]],[11,"r_sym","","Get the `r_sym` component of the `r_info` field.",81,[[["self"],["e"]],["u32"]]],[11,"r_type","","Get the `r_type` component of the `r_info` field.",81,[[["self"],["e"]],["u32"]]],[11,"r_info","","Calculate the `r_info` field given the `r_sym` and…",81,[[["u8"],["u32"],["e"]],["u32"]]],[11,"set_r_info","","Set the `r_info` field given the `r_sym` and `r_type`…",81,[[["u32"],["e"],["self"],["u8"]]]],[11,"r_sym","","Get the `r_sym` component of the `r_info` field.",82,[[["self"],["e"]],["u32"]]],[11,"r_type","","Get the `r_type` component of the `r_info` field.",82,[[["self"],["e"]],["u32"]]],[11,"r_info","","Calculate the `r_info` field given the `r_sym` and…",82,[[["u32"],["e"]],["u64"]]],[11,"set_r_info","","Set the `r_info` field given the `r_sym` and `r_type`…",82,[[["u32"],["e"],["self"]]]],[11,"r_sym","","Get the `r_sym` component of the `r_info` field.",83,[[["self"],["e"]],["u32"]]],[11,"r_type","","Get the `r_type` component of the `r_info` field.",83,[[["self"],["e"]],["u32"]]],[11,"r_info","","Calculate the `r_info` field given the `r_sym` and…",83,[[["u32"],["e"]],["u64"]]],[11,"set_r_info","","Set the `r_info` field given the `r_sym` and `r_type`…",83,[[["u32"],["e"],["self"]]]],[0,"macho","object","Mach-O definitions.",null,null],[3,"FatHeader","object::macho","",null,null],[12,"magic","","FAT_MAGIC or FAT_MAGIC_64",88,null],[12,"nfat_arch","","number of structs that follow",88,null],[3,"FatArch32","","",null,null],[12,"cputype","","cpu specifier (int)",89,null],[12,"cpusubtype","","machine specifier (int)",89,null],[12,"offset","","file offset to this object file",89,null],[12,"size","","size of this object file",89,null],[12,"align","","alignment as a power of 2",89,null],[3,"FatArch64","","",null,null],[12,"cputype","","cpu specifier (int)",90,null],[12,"cpusubtype","","machine specifier (int)",90,null],[12,"offset","","file offset to this object file",90,null],[12,"size","","size of this object file",90,null],[12,"align","","alignment as a power of 2",90,null],[12,"reserved","","reserved",90,null],[3,"MachHeader32","","The 32-bit mach header.",null,null],[12,"magic","","mach magic number identifier",91,null],[12,"cputype","","cpu specifier",91,null],[12,"cpusubtype","","machine specifier",91,null],[12,"filetype","","type of file",91,null],[12,"ncmds","","number of load commands",91,null],[12,"sizeofcmds","","the size of all the load commands",91,null],[12,"flags","","flags",91,null],[3,"MachHeader64","","The 64-bit mach header.",null,null],[12,"magic","","mach magic number identifier",92,null],[12,"cputype","","cpu specifier",92,null],[12,"cpusubtype","","machine specifier",92,null],[12,"filetype","","type of file",92,null],[12,"ncmds","","number of load commands",92,null],[12,"sizeofcmds","","the size of all the load commands",92,null],[12,"flags","","flags",92,null],[12,"reserved","","reserved",92,null],[3,"LoadCommand","","Common fields at the start of every load command.",null,null],[12,"cmd","","Type of load command.",93,null],[12,"cmdsize","","Total size of command in bytes.",93,null],[3,"LcStr","","A variable length string in a load command.",null,null],[12,"offset","","offset to the string",94,null],[3,"SegmentCommand32","","32-bit segment load command.",null,null],[12,"cmd","","LC_SEGMENT",95,null],[12,"cmdsize","","includes sizeof section structs",95,null],[12,"segname","","segment name",95,null],[12,"vmaddr","","memory address of this segment",95,null],[12,"vmsize","","memory size of this segment",95,null],[12,"fileoff","","file offset of this segment",95,null],[12,"filesize","","amount to map from the file",95,null],[12,"maxprot","","maximum VM protection",95,null],[12,"initprot","","initial VM protection",95,null],[12,"nsects","","number of sections in segment",95,null],[12,"flags","","flags",95,null],[3,"SegmentCommand64","","64-bit segment load command.",null,null],[12,"cmd","","LC_SEGMENT_64",96,null],[12,"cmdsize","","includes sizeof section_64 structs",96,null],[12,"segname","","segment name",96,null],[12,"vmaddr","","memory address of this segment",96,null],[12,"vmsize","","memory size of this segment",96,null],[12,"fileoff","","file offset of this segment",96,null],[12,"filesize","","amount to map from the file",96,null],[12,"maxprot","","maximum VM protection",96,null],[12,"initprot","","initial VM protection",96,null],[12,"nsects","","number of sections in segment",96,null],[12,"flags","","flags",96,null],[3,"Section32","","32-bit section.",null,null],[12,"sectname","","name of this section",97,null],[12,"segname","","segment this section goes in",97,null],[12,"addr","","memory address of this section",97,null],[12,"size","","size in bytes of this section",97,null],[12,"offset","","file offset of this section",97,null],[12,"align","","section alignment (power of 2)",97,null],[12,"reloff","","file offset of relocation entries",97,null],[12,"nreloc","","number of relocation entries",97,null],[12,"flags","","flags (section type and attributes)",97,null],[12,"reserved1","","reserved (for offset or index)",97,null],[12,"reserved2","","reserved (for count or sizeof)",97,null],[3,"Section64","","64-bit section.",null,null],[12,"sectname","","name of this section",98,null],[12,"segname","","segment this section goes in",98,null],[12,"addr","","memory address of this section",98,null],[12,"size","","size in bytes of this section",98,null],[12,"offset","","file offset of this section",98,null],[12,"align","","section alignment (power of 2)",98,null],[12,"reloff","","file offset of relocation entries",98,null],[12,"nreloc","","number of relocation entries",98,null],[12,"flags","","flags (section type and attributes)",98,null],[12,"reserved1","","reserved (for offset or index)",98,null],[12,"reserved2","","reserved (for count or sizeof)",98,null],[12,"reserved3","","reserved",98,null],[3,"Fvmlib","","",null,null],[12,"name","","library's target pathname",99,null],[12,"minor_version","","library's minor version number",99,null],[12,"header_addr","","library's header address",99,null],[3,"FvmlibCommand","","",null,null],[12,"cmd","","LC_IDFVMLIB or LC_LOADFVMLIB",100,null],[12,"cmdsize","","includes pathname string",100,null],[12,"fvmlib","","the library identification",100,null],[3,"Dylib","","",null,null],[12,"name","","library's path name",101,null],[12,"timestamp","","library's build time stamp",101,null],[12,"current_version","","library's current version number",101,null],[12,"compatibility_version","","library's compatibility vers number",101,null],[3,"DylibCommand","","",null,null],[12,"cmd","","LC_ID_DYLIB, LC_LOAD_{,WEAK_}DYLIB, LC_REEXPORT_DYLIB",102,null],[12,"cmdsize","","includes pathname string",102,null],[12,"dylib","","the library identification",102,null],[3,"SubFrameworkCommand","","",null,null],[12,"cmd","","LC_SUB_FRAMEWORK",103,null],[12,"cmdsize","","includes umbrella string",103,null],[12,"umbrella","","the umbrella framework name",103,null],[3,"SubClientCommand","","",null,null],[12,"cmd","","LC_SUB_CLIENT",104,null],[12,"cmdsize","","includes client string",104,null],[12,"client","","the client name",104,null],[3,"SubUmbrellaCommand","","",null,null],[12,"cmd","","LC_SUB_UMBRELLA",105,null],[12,"cmdsize","","includes sub_umbrella string",105,null],[12,"sub_umbrella","","the sub_umbrella framework name",105,null],[3,"SubLibraryCommand","","",null,null],[12,"cmd","","LC_SUB_LIBRARY",106,null],[12,"cmdsize","","includes sub_library string",106,null],[12,"sub_library","","the sub_library name",106,null],[3,"PreboundDylibCommand","","",null,null],[12,"cmd","","LC_PREBOUND_DYLIB",107,null],[12,"cmdsize","","includes strings",107,null],[12,"name","","library's path name",107,null],[12,"nmodules","","number of modules in library",107,null],[12,"linked_modules","","bit vector of linked modules",107,null],[3,"DylinkerCommand","","",null,null],[12,"cmd","","LC_ID_DYLINKER, LC_LOAD_DYLINKER or LC_DYLD_ENVIRONMENT",108,null],[12,"cmdsize","","includes pathname string",108,null],[12,"name","","dynamic linker's path name",108,null],[3,"ThreadCommand","","",null,null],[12,"cmd","","LC_THREAD or  LC_UNIXTHREAD",109,null],[12,"cmdsize","","total size of this command",109,null],[3,"RoutinesCommand","","",null,null],[12,"cmd","","LC_ROUTINES",110,null],[12,"cmdsize","","total size of this command",110,null],[12,"init_address","","address of initialization routine",110,null],[12,"init_module","","index into the module table that the init routine is…",110,null],[12,"reserved1","","",110,null],[12,"reserved2","","",110,null],[12,"reserved3","","",110,null],[12,"reserved4","","",110,null],[12,"reserved5","","",110,null],[12,"reserved6","","",110,null],[3,"RoutinesCommand_64","","",null,null],[12,"cmd","","LC_ROUTINES_64",111,null],[12,"cmdsize","","total size of this command",111,null],[12,"init_address","","address of initialization routine",111,null],[12,"init_module","","index into the module table that the init routine is…",111,null],[12,"reserved1","","",111,null],[12,"reserved2","","",111,null],[12,"reserved3","","",111,null],[12,"reserved4","","",111,null],[12,"reserved5","","",111,null],[12,"reserved6","","",111,null],[3,"SymtabCommand","","",null,null],[12,"cmd","","LC_SYMTAB",112,null],[12,"cmdsize","","sizeof(struct SymtabCommand)",112,null],[12,"symoff","","symbol table offset",112,null],[12,"nsyms","","number of symbol table entries",112,null],[12,"stroff","","string table offset",112,null],[12,"strsize","","string table size in bytes",112,null],[3,"DysymtabCommand","","",null,null],[12,"cmd","","LC_DYSYMTAB",113,null],[12,"cmdsize","","sizeof(struct DysymtabCommand)",113,null],[12,"ilocalsym","","index to local symbols",113,null],[12,"nlocalsym","","number of local symbols",113,null],[12,"iextdefsym","","index to externally defined symbols",113,null],[12,"nextdefsym","","number of externally defined symbols",113,null],[12,"iundefsym","","index to undefined symbols",113,null],[12,"nundefsym","","number of undefined symbols",113,null],[12,"tocoff","","file offset to table of contents",113,null],[12,"ntoc","","number of entries in table of contents",113,null],[12,"modtaboff","","file offset to module table",113,null],[12,"nmodtab","","number of module table entries",113,null],[12,"extrefsymoff","","offset to referenced symbol table",113,null],[12,"nextrefsyms","","number of referenced symbol table entries",113,null],[12,"indirectsymoff","","file offset to the indirect symbol table",113,null],[12,"nindirectsyms","","number of indirect symbol table entries",113,null],[12,"extreloff","","offset to external relocation entries",113,null],[12,"nextrel","","number of external relocation entries",113,null],[12,"locreloff","","offset to local relocation entries",113,null],[12,"nlocrel","","number of local relocation entries",113,null],[3,"DylibTableOfContents","","",null,null],[12,"symbol_index","","the defined external symbol (index into the symbol table)",114,null],[12,"module_index","","index into the module table this symbol is defined in",114,null],[3,"DylibModule32","","",null,null],[12,"module_name","","the module name (index into string table)",115,null],[12,"iextdefsym","","index into externally defined symbols",115,null],[12,"nextdefsym","","number of externally defined symbols",115,null],[12,"irefsym","","index into reference symbol table",115,null],[12,"nrefsym","","number of reference symbol table entries",115,null],[12,"ilocalsym","","index into symbols for local symbols",115,null],[12,"nlocalsym","","number of local symbols",115,null],[12,"iextrel","","index into external relocation entries",115,null],[12,"nextrel","","number of external relocation entries",115,null],[12,"iinit_iterm","","low 16 bits are the index into the init section, high 16…",115,null],[12,"ninit_nterm","","low 16 bits are the number of init section entries, high…",115,null],[12,"objc_module_info_addr","","for this module address of the start of the…",115,null],[12,"objc_module_info_size","","for this module size of the (__OBJC,__module_info) section",115,null],[3,"DylibModule64","","",null,null],[12,"module_name","","the module name (index into string table)",116,null],[12,"iextdefsym","","index into externally defined symbols",116,null],[12,"nextdefsym","","number of externally defined symbols",116,null],[12,"irefsym","","index into reference symbol table",116,null],[12,"nrefsym","","number of reference symbol table entries",116,null],[12,"ilocalsym","","index into symbols for local symbols",116,null],[12,"nlocalsym","","number of local symbols",116,null],[12,"iextrel","","index into external relocation entries",116,null],[12,"nextrel","","number of external relocation entries",116,null],[12,"iinit_iterm","","low 16 bits are the index into the init section, high 16…",116,null],[12,"ninit_nterm","","low 16 bits are the number of init section entries, high…",116,null],[12,"objc_module_info_size","","for this module size of the (__OBJC,__module_info) section",116,null],[12,"objc_module_info_addr","","for this module address of the start of the…",116,null],[3,"DylibReference","","",null,null],[12,"bitfield","","",117,null],[3,"TwolevelHintsCommand","","",null,null],[12,"cmd","","LC_TWOLEVEL_HINTS",118,null],[12,"cmdsize","","sizeof(struct TwolevelHintsCommand)",118,null],[12,"offset","","offset to the hint table",118,null],[12,"nhints","","number of hints in the hint table",118,null],[3,"TwolevelHint","","",null,null],[12,"bitfield","","",119,null],[3,"PrebindCksumCommand","","",null,null],[12,"cmd","","LC_PREBIND_CKSUM",120,null],[12,"cmdsize","","sizeof(struct PrebindCksumCommand)",120,null],[12,"cksum","","the check sum or zero",120,null],[3,"UuidCommand","","",null,null],[12,"cmd","","LC_UUID",121,null],[12,"cmdsize","","sizeof(struct UuidCommand)",121,null],[12,"uuid","","the 128-bit uuid",121,null],[3,"RpathCommand","","",null,null],[12,"cmd","","LC_RPATH",122,null],[12,"cmdsize","","includes string",122,null],[12,"path","","path to add to run path",122,null],[3,"LinkeditDataCommand","","",null,null],[12,"cmd","","LC_CODE_SIGNATURE, LC_SEGMENT_SPLIT_INFO,…",123,null],[12,"cmdsize","","sizeof(struct LinkeditDataCommand)",123,null],[12,"dataoff","","file offset of data in __LINKEDIT segment",123,null],[12,"datasize","","file size of data in __LINKEDIT segment",123,null],[3,"EncryptionInfoCommand","","",null,null],[12,"cmd","","LC_ENCRYPTION_INFO",124,null],[12,"cmdsize","","sizeof(struct EncryptionInfoCommand)",124,null],[12,"cryptoff","","file offset of encrypted range",124,null],[12,"cryptsize","","file size of encrypted range",124,null],[12,"cryptid","","which enryption system, 0 means not-encrypted yet",124,null],[3,"EncryptionInfoCommand64","","",null,null],[12,"cmd","","LC_ENCRYPTION_INFO_64",125,null],[12,"cmdsize","","sizeof(struct EncryptionInfoCommand64)",125,null],[12,"cryptoff","","file offset of encrypted range",125,null],[12,"cryptsize","","file size of encrypted range",125,null],[12,"cryptid","","which enryption system, 0 means not-encrypted yet",125,null],[12,"pad","","padding to make this struct's size a multiple of 8 bytes",125,null],[3,"VersionMinCommand","","",null,null],[12,"cmd","","LC_VERSION_MIN_MACOSX or LC_VERSION_MIN_IPHONEOS or…",126,null],[12,"cmdsize","","sizeof(struct VersionMinCommand)",126,null],[12,"version","","X.Y.Z is encoded in nibbles xxxx.yy.zz",126,null],[12,"sdk","","X.Y.Z is encoded in nibbles xxxx.yy.zz",126,null],[3,"BuildVersionCommand","","",null,null],[12,"cmd","","LC_BUILD_VERSION",127,null],[12,"cmdsize","","sizeof(struct BuildVersionCommand) plus ntools *…",127,null],[12,"platform","","platform",127,null],[12,"minos","","X.Y.Z is encoded in nibbles xxxx.yy.zz",127,null],[12,"sdk","","X.Y.Z is encoded in nibbles xxxx.yy.zz",127,null],[12,"ntools","","number of tool entries following this",127,null],[3,"BuildToolVersion","","",null,null],[12,"tool","","enum for the tool",128,null],[12,"version","","version number of the tool",128,null],[3,"DyldInfoCommand","","",null,null],[12,"cmd","","LC_DYLD_INFO or LC_DYLD_INFO_ONLY",129,null],[12,"cmdsize","","sizeof(struct DyldInfoCommand)",129,null],[12,"rebase_off","","file offset to rebase info",129,null],[12,"rebase_size","","size of rebase info",129,null],[12,"bind_off","","file offset to binding info",129,null],[12,"bind_size","","size of binding info",129,null],[12,"weak_bind_off","","file offset to weak binding info",129,null],[12,"weak_bind_size","","size of weak binding info",129,null],[12,"lazy_bind_off","","file offset to lazy binding info",129,null],[12,"lazy_bind_size","","size of lazy binding infs",129,null],[12,"export_off","","file offset to lazy binding info",129,null],[12,"export_size","","size of lazy binding infs",129,null],[3,"LinkerOptionCommand","","",null,null],[12,"cmd","","LC_LINKER_OPTION only used in MH_OBJECT filetypes",130,null],[12,"cmdsize","","",130,null],[12,"count","","number of strings",130,null],[3,"SymSegCommand","","",null,null],[12,"cmd","","LC_SYMSEG",131,null],[12,"cmdsize","","sizeof(struct SymSegCommand)",131,null],[12,"offset","","symbol segment offset",131,null],[12,"size","","symbol segment size in bytes",131,null],[3,"IdentCommand","","",null,null],[12,"cmd","","LC_IDENT",132,null],[12,"cmdsize","","strings that follow this command",132,null],[3,"FvmfileCommand","","",null,null],[12,"cmd","","LC_FVMFILE",133,null],[12,"cmdsize","","includes pathname string",133,null],[12,"name","","files pathname",133,null],[12,"header_addr","","files virtual address",133,null],[3,"EntryPointCommand","","",null,null],[12,"cmd","","LC_MAIN only used in MH_EXECUTE filetypes",134,null],[12,"cmdsize","","24",134,null],[12,"entryoff","","file (__TEXT) offset of main()",134,null],[12,"stacksize","","if not zero, initial stack size",134,null],[3,"SourceVersionCommand","","",null,null],[12,"cmd","","LC_SOURCE_VERSION",135,null],[12,"cmdsize","","16",135,null],[12,"version","","A.B.C.D.E packed as a24.b10.c10.d10.e10",135,null],[3,"DataInCodeEntry","","",null,null],[12,"offset","","from mach_header to start of data range",136,null],[12,"length","","number of bytes in data range",136,null],[12,"kind","","a DICE_KIND_* value",136,null],[3,"NoteCommand","","",null,null],[12,"cmd","","LC_NOTE",137,null],[12,"cmdsize","","sizeof(struct NoteCommand)",137,null],[12,"data_owner","","owner name for this LC_NOTE",137,null],[12,"offset","","file offset of this data",137,null],[12,"size","","length of data region",137,null],[3,"Nlist32","","",null,null],[12,"n_strx","","index into the string table",138,null],[12,"n_type","","type flag, see below",138,null],[12,"n_sect","","section number or NO_SECT",138,null],[12,"n_desc","","see <mach-o/stab.h>",138,null],[12,"n_value","","value of this symbol (or stab offset)",138,null],[3,"Nlist64","","",null,null],[12,"n_strx","","index into the string table",139,null],[12,"n_type","","type flag, see below",139,null],[12,"n_sect","","section number or NO_SECT",139,null],[12,"n_desc","","see <mach-o/stab.h>",139,null],[12,"n_value","","value of this symbol (or stab offset)",139,null],[3,"Relocation","","A relocation entry.",null,null],[12,"r_word0","","",140,null],[12,"r_word1","","",140,null],[3,"RelocationInfo","","",null,null],[12,"r_address","","offset in the section to what is being relocated",141,null],[12,"r_symbolnum","","symbol index if r_extern == 1 or section ordinal if…",141,null],[12,"r_pcrel","","was relocated pc relative already",141,null],[12,"r_length","","0=byte, 1=word, 2=long, 3=quad",141,null],[12,"r_extern","","does not include value of sym referenced",141,null],[12,"r_type","","if not 0, machine specific relocation type",141,null],[3,"ScatteredRelocationInfo","","",null,null],[12,"r_address","","offset in the section to what is being relocated",142,null],[12,"r_type","","if not 0, machine specific relocation type",142,null],[12,"r_length","","0=byte, 1=word, 2=long, 3=quad",142,null],[12,"r_pcrel","","was relocated pc relative already",142,null],[12,"r_value","","the value the item to be relocated is refering to (without…",142,null],[5,"cpu_subtype_intel","","",null,[[["u32"]],["u32"]]],[5,"cpu_subtype_intel_family","","",null,[[["u32"]],["u32"]]],[5,"cpu_subtype_intel_model","","",null,[[["u32"]],["u32"]]],[17,"CPU_ARCH_MASK","","mask for architecture bits",null,null],[17,"CPU_ARCH_ABI64","","64 bit ABI",null,null],[17,"CPU_ARCH_ABI64_32","","ABI for 64-bit hardware with 32-bit types; LP32",null,null],[17,"CPU_TYPE_ANY","","",null,null],[17,"CPU_TYPE_VAX","","",null,null],[17,"CPU_TYPE_MC680X0","","",null,null],[17,"CPU_TYPE_X86","","",null,null],[17,"CPU_TYPE_X86_64","","",null,null],[17,"CPU_TYPE_MIPS","","",null,null],[17,"CPU_TYPE_MC98000","","",null,null],[17,"CPU_TYPE_HPPA","","",null,null],[17,"CPU_TYPE_ARM","","",null,null],[17,"CPU_TYPE_ARM64","","",null,null],[17,"CPU_TYPE_ARM64_32","","",null,null],[17,"CPU_TYPE_MC88000","","",null,null],[17,"CPU_TYPE_SPARC","","",null,null],[17,"CPU_TYPE_I860","","",null,null],[17,"CPU_TYPE_ALPHA","","",null,null],[17,"CPU_TYPE_POWERPC","","",null,null],[17,"CPU_TYPE_POWERPC64","","",null,null],[17,"CPU_SUBTYPE_MASK","","mask for feature flags",null,null],[17,"CPU_SUBTYPE_LIB64","","64 bit libraries",null,null],[17,"CPU_SUBTYPE_MULTIPLE","","",null,null],[17,"CPU_SUBTYPE_LITTLE_ENDIAN","","",null,null],[17,"CPU_SUBTYPE_BIG_ENDIAN","","",null,null],[17,"CPU_SUBTYPE_VAX_ALL","","",null,null],[17,"CPU_SUBTYPE_VAX780","","",null,null],[17,"CPU_SUBTYPE_VAX785","","",null,null],[17,"CPU_SUBTYPE_VAX750","","",null,null],[17,"CPU_SUBTYPE_VAX730","","",null,null],[17,"CPU_SUBTYPE_UVAXI","","",null,null],[17,"CPU_SUBTYPE_UVAXII","","",null,null],[17,"CPU_SUBTYPE_VAX8200","","",null,null],[17,"CPU_SUBTYPE_VAX8500","","",null,null],[17,"CPU_SUBTYPE_VAX8600","","",null,null],[17,"CPU_SUBTYPE_VAX8650","","",null,null],[17,"CPU_SUBTYPE_VAX8800","","",null,null],[17,"CPU_SUBTYPE_UVAXIII","","",null,null],[17,"CPU_SUBTYPE_MC680X0_ALL","","",null,null],[17,"CPU_SUBTYPE_MC68030","","",null,null],[17,"CPU_SUBTYPE_MC68040","","",null,null],[17,"CPU_SUBTYPE_MC68030_ONLY","","",null,null],[17,"CPU_SUBTYPE_I386_ALL","","",null,null],[17,"CPU_SUBTYPE_386","","",null,null],[17,"CPU_SUBTYPE_486","","",null,null],[17,"CPU_SUBTYPE_486SX","","",null,null],[17,"CPU_SUBTYPE_586","","",null,null],[17,"CPU_SUBTYPE_PENT","","",null,null],[17,"CPU_SUBTYPE_PENTPRO","","",null,null],[17,"CPU_SUBTYPE_PENTII_M3","","",null,null],[17,"CPU_SUBTYPE_PENTII_M5","","",null,null],[17,"CPU_SUBTYPE_CELERON","","",null,null],[17,"CPU_SUBTYPE_CELERON_MOBILE","","",null,null],[17,"CPU_SUBTYPE_PENTIUM_3","","",null,null],[17,"CPU_SUBTYPE_PENTIUM_3_M","","",null,null],[17,"CPU_SUBTYPE_PENTIUM_3_XEON","","",null,null],[17,"CPU_SUBTYPE_PENTIUM_M","","",null,null],[17,"CPU_SUBTYPE_PENTIUM_4","","",null,null],[17,"CPU_SUBTYPE_PENTIUM_4_M","","",null,null],[17,"CPU_SUBTYPE_ITANIUM","","",null,null],[17,"CPU_SUBTYPE_ITANIUM_2","","",null,null],[17,"CPU_SUBTYPE_XEON","","",null,null],[17,"CPU_SUBTYPE_XEON_MP","","",null,null],[17,"CPU_SUBTYPE_INTEL_FAMILY_MAX","","",null,null],[17,"CPU_SUBTYPE_INTEL_MODEL_ALL","","",null,null],[17,"CPU_SUBTYPE_X86_ALL","","",null,null],[17,"CPU_SUBTYPE_X86_64_ALL","","",null,null],[17,"CPU_SUBTYPE_X86_ARCH1","","",null,null],[17,"CPU_SUBTYPE_X86_64_H","","Haswell feature subset",null,null],[17,"CPU_SUBTYPE_MIPS_ALL","","",null,null],[17,"CPU_SUBTYPE_MIPS_R2300","","",null,null],[17,"CPU_SUBTYPE_MIPS_R2600","","",null,null],[17,"CPU_SUBTYPE_MIPS_R2800","","",null,null],[17,"CPU_SUBTYPE_MIPS_R2000A","","pmax",null,null],[17,"CPU_SUBTYPE_MIPS_R2000","","",null,null],[17,"CPU_SUBTYPE_MIPS_R3000A","","3max",null,null],[17,"CPU_SUBTYPE_MIPS_R3000","","",null,null],[17,"CPU_SUBTYPE_MC98000_ALL","","",null,null],[17,"CPU_SUBTYPE_MC98601","","",null,null],[17,"CPU_SUBTYPE_HPPA_ALL","","",null,null],[17,"CPU_SUBTYPE_HPPA_7100LC","","",null,null],[17,"CPU_SUBTYPE_MC88000_ALL","","",null,null],[17,"CPU_SUBTYPE_MC88100","","",null,null],[17,"CPU_SUBTYPE_MC88110","","",null,null],[17,"CPU_SUBTYPE_SPARC_ALL","","",null,null],[17,"CPU_SUBTYPE_I860_ALL","","",null,null],[17,"CPU_SUBTYPE_I860_860","","",null,null],[17,"CPU_SUBTYPE_POWERPC_ALL","","",null,null],[17,"CPU_SUBTYPE_POWERPC_601","","",null,null],[17,"CPU_SUBTYPE_POWERPC_602","","",null,null],[17,"CPU_SUBTYPE_POWERPC_603","","",null,null],[17,"CPU_SUBTYPE_POWERPC_603E","","",null,null],[17,"CPU_SUBTYPE_POWERPC_603EV","","",null,null],[17,"CPU_SUBTYPE_POWERPC_604","","",null,null],[17,"CPU_SUBTYPE_POWERPC_604E","","",null,null],[17,"CPU_SUBTYPE_POWERPC_620","","",null,null],[17,"CPU_SUBTYPE_POWERPC_750","","",null,null],[17,"CPU_SUBTYPE_POWERPC_7400","","",null,null],[17,"CPU_SUBTYPE_POWERPC_7450","","",null,null],[17,"CPU_SUBTYPE_POWERPC_970","","",null,null],[17,"CPU_SUBTYPE_ARM_ALL","","",null,null],[17,"CPU_SUBTYPE_ARM_V4T","","",null,null],[17,"CPU_SUBTYPE_ARM_V6","","",null,null],[17,"CPU_SUBTYPE_ARM_V5TEJ","","",null,null],[17,"CPU_SUBTYPE_ARM_XSCALE","","",null,null],[17,"CPU_SUBTYPE_ARM_V7","","",null,null],[17,"CPU_SUBTYPE_ARM_V7F","","Cortex A9",null,null],[17,"CPU_SUBTYPE_ARM_V7S","","Swift",null,null],[17,"CPU_SUBTYPE_ARM_V7K","","",null,null],[17,"CPU_SUBTYPE_ARM_V6M","","Not meant to be run under xnu",null,null],[17,"CPU_SUBTYPE_ARM_V7M","","Not meant to be run under xnu",null,null],[17,"CPU_SUBTYPE_ARM_V7EM","","Not meant to be run under xnu",null,null],[17,"CPU_SUBTYPE_ARM_V8","","",null,null],[17,"CPU_SUBTYPE_ARM64_ALL","","",null,null],[17,"CPU_SUBTYPE_ARM64_V8","","",null,null],[17,"CPU_SUBTYPE_ARM64E","","",null,null],[17,"CPU_SUBTYPE_ARM64_32_ALL","","",null,null],[17,"CPU_SUBTYPE_ARM64_32_V8","","",null,null],[17,"VM_PROT_READ","","read permission",null,null],[17,"VM_PROT_WRITE","","write permission",null,null],[17,"VM_PROT_EXECUTE","","execute permission",null,null],[17,"FAT_MAGIC","","",null,null],[17,"FAT_CIGAM","","NXSwapLong(FAT_MAGIC)",null,null],[17,"FAT_MAGIC_64","","",null,null],[17,"FAT_CIGAM_64","","NXSwapLong(FAT_MAGIC_64)",null,null],[17,"MH_MAGIC","","the mach magic number",null,null],[17,"MH_CIGAM","","NXSwapInt(MH_MAGIC)",null,null],[17,"MH_MAGIC_64","","the 64-bit mach magic number",null,null],[17,"MH_CIGAM_64","","NXSwapInt(MH_MAGIC_64)",null,null],[17,"MH_OBJECT","","relocatable object file",null,null],[17,"MH_EXECUTE","","demand paged executable file",null,null],[17,"MH_FVMLIB","","fixed VM shared library file",null,null],[17,"MH_CORE","","core file",null,null],[17,"MH_PRELOAD","","preloaded executable file",null,null],[17,"MH_DYLIB","","dynamically bound shared library",null,null],[17,"MH_DYLINKER","","dynamic link editor",null,null],[17,"MH_BUNDLE","","dynamically bound bundle file",null,null],[17,"MH_DYLIB_STUB","","shared library stub for static linking only, no section…",null,null],[17,"MH_DSYM","","companion file with only debug sections",null,null],[17,"MH_KEXT_BUNDLE","","x86_64 kexts",null,null],[17,"MH_NOUNDEFS","","the object file has no undefined references",null,null],[17,"MH_INCRLINK","","the object file is the output of an incremental link…",null,null],[17,"MH_DYLDLINK","","the object file is input for the dynamic linker and can't…",null,null],[17,"MH_BINDATLOAD","","the object file's undefined references are bound by the…",null,null],[17,"MH_PREBOUND","","the file has its dynamic undefined references prebound.",null,null],[17,"MH_SPLIT_SEGS","","the file has its read-only and read-write segments split",null,null],[17,"MH_LAZY_INIT","","the shared library init routine is to be run lazily via…",null,null],[17,"MH_TWOLEVEL","","the image is using two-level name space bindings",null,null],[17,"MH_FORCE_FLAT","","the executable is forcing all images to use flat name…",null,null],[17,"MH_NOMULTIDEFS","","this umbrella guarantees no multiple defintions of symbols…",null,null],[17,"MH_NOFIXPREBINDING","","do not have dyld notify the prebinding agent about this…",null,null],[17,"MH_PREBINDABLE","","the binary is not prebound but can have its prebinding…",null,null],[17,"MH_ALLMODSBOUND","","indicates that this binary binds to all two-level…",null,null],[17,"MH_SUBSECTIONS_VIA_SYMBOLS","","safe to divide up the sections into sub-sections via…",null,null],[17,"MH_CANONICAL","","the binary has been canonicalized via the unprebind…",null,null],[17,"MH_WEAK_DEFINES","","the final linked image contains external weak symbols",null,null],[17,"MH_BINDS_TO_WEAK","","the final linked image uses weak symbols",null,null],[17,"MH_ALLOW_STACK_EXECUTION","","When this bit is set, all stacks in the task will be given…",null,null],[17,"MH_ROOT_SAFE","","When this bit is set, the binary declares it is safe for…",null,null],[17,"MH_SETUID_SAFE","","When this bit is set, the binary declares it is safe for…",null,null],[17,"MH_NO_REEXPORTED_DYLIBS","","When this bit is set on a dylib, the static linker does…",null,null],[17,"MH_PIE","","When this bit is set, the OS will load the main executable…",null,null],[17,"MH_DEAD_STRIPPABLE_DYLIB","","Only for use on dylibs. When linking against a dylib that…",null,null],[17,"MH_HAS_TLV_DESCRIPTORS","","Contains a section of type S_THREAD_LOCAL_VARIABLES",null,null],[17,"MH_NO_HEAP_EXECUTION","","When this bit is set, the OS will run the main executable…",null,null],[17,"MH_APP_EXTENSION_SAFE","","The code was linked for use in an application extension.",null,null],[17,"MH_NLIST_OUTOFSYNC_WITH_DYLDINFO","","",null,null],[17,"MH_SIM_SUPPORT","","The external symbols listed in the nlist symbol table do…",null,null],[17,"LC_REQ_DYLD","","",null,null],[17,"LC_SEGMENT","","segment of this file to be mapped",null,null],[17,"LC_SYMTAB","","link-edit stab symbol table info",null,null],[17,"LC_SYMSEG","","link-edit gdb symbol table info (obsolete)",null,null],[17,"LC_THREAD","","thread",null,null],[17,"LC_UNIXTHREAD","","unix thread (includes a stack)",null,null],[17,"LC_LOADFVMLIB","","load a specified fixed VM shared library",null,null],[17,"LC_IDFVMLIB","","fixed VM shared library identification",null,null],[17,"LC_IDENT","","object identification info (obsolete)",null,null],[17,"LC_FVMFILE","","fixed VM file inclusion (internal use)",null,null],[17,"LC_PREPAGE","","prepage command (internal use)",null,null],[17,"LC_DYSYMTAB","","dynamic link-edit symbol table info",null,null],[17,"LC_LOAD_DYLIB","","load a dynamically linked shared library",null,null],[17,"LC_ID_DYLIB","","dynamically linked shared lib ident",null,null],[17,"LC_LOAD_DYLINKER","","load a dynamic linker",null,null],[17,"LC_ID_DYLINKER","","dynamic linker identification",null,null],[17,"LC_PREBOUND_DYLIB","","modules prebound for a dynamically linked shared library",null,null],[17,"LC_ROUTINES","","image routines",null,null],[17,"LC_SUB_FRAMEWORK","","sub framework",null,null],[17,"LC_SUB_UMBRELLA","","sub umbrella",null,null],[17,"LC_SUB_CLIENT","","sub client",null,null],[17,"LC_SUB_LIBRARY","","sub library",null,null],[17,"LC_TWOLEVEL_HINTS","","two-level namespace lookup hints",null,null],[17,"LC_PREBIND_CKSUM","","prebind checksum",null,null],[17,"LC_LOAD_WEAK_DYLIB","","",null,null],[17,"LC_SEGMENT_64","","64-bit segment of this file to be mapped",null,null],[17,"LC_ROUTINES_64","","64-bit image routines",null,null],[17,"LC_UUID","","the uuid",null,null],[17,"LC_RPATH","","runpath additions",null,null],[17,"LC_CODE_SIGNATURE","","local of code signature",null,null],[17,"LC_SEGMENT_SPLIT_INFO","","local of info to split segments",null,null],[17,"LC_REEXPORT_DYLIB","","load and re-export dylib",null,null],[17,"LC_LAZY_LOAD_DYLIB","","delay load of dylib until first use",null,null],[17,"LC_ENCRYPTION_INFO","","encrypted segment information",null,null],[17,"LC_DYLD_INFO","","compressed dyld information",null,null],[17,"LC_DYLD_INFO_ONLY","","compressed dyld information only",null,null],[17,"LC_LOAD_UPWARD_DYLIB","","load upward dylib",null,null],[17,"LC_VERSION_MIN_MACOSX","","build for MacOSX min OS version",null,null],[17,"LC_VERSION_MIN_IPHONEOS","","build for iPhoneOS min OS version",null,null],[17,"LC_FUNCTION_STARTS","","compressed table of function start addresses",null,null],[17,"LC_DYLD_ENVIRONMENT","","string for dyld to treat like environment variable",null,null],[17,"LC_MAIN","","replacement for LC_UNIXTHREAD",null,null],[17,"LC_DATA_IN_CODE","","table of non-instructions in __text",null,null],[17,"LC_SOURCE_VERSION","","source version used to build binary",null,null],[17,"LC_DYLIB_CODE_SIGN_DRS","","Code signing DRs copied from linked dylibs",null,null],[17,"LC_ENCRYPTION_INFO_64","","64-bit encrypted segment information",null,null],[17,"LC_LINKER_OPTION","","linker options in MH_OBJECT files",null,null],[17,"LC_LINKER_OPTIMIZATION_HINT","","optimization hints in MH_OBJECT files",null,null],[17,"LC_VERSION_MIN_TVOS","","build for AppleTV min OS version",null,null],[17,"LC_VERSION_MIN_WATCHOS","","build for Watch min OS version",null,null],[17,"LC_NOTE","","arbitrary data included within a Mach-O file",null,null],[17,"LC_BUILD_VERSION","","build for platform min OS version",null,null],[17,"LC_DYLD_EXPORTS_TRIE","","used with `LinkeditDataCommand`, payload is trie",null,null],[17,"LC_DYLD_CHAINED_FIXUPS","","used with `LinkeditDataCommand`",null,null],[17,"SG_HIGHVM","","the file contents for this segment is for the high part of…",null,null],[17,"SG_FVMLIB","","this segment is the VM that is allocated by a fixed VM…",null,null],[17,"SG_NORELOC","","this segment has nothing that was relocated in it and…",null,null],[17,"SG_PROTECTED_VERSION_1","","This segment is protected. If the segment starts at file…",null,null],[17,"SG_READ_ONLY","","This segment is made read-only after fixups",null,null],[17,"SECTION_TYPE","","256 section types",null,null],[17,"SECTION_ATTRIBUTES","","24 section attributes",null,null],[17,"S_REGULAR","","regular section",null,null],[17,"S_ZEROFILL","","zero fill on demand section",null,null],[17,"S_CSTRING_LITERALS","","section with only literal C strings",null,null],[17,"S_4BYTE_LITERALS","","section with only 4 byte literals",null,null],[17,"S_8BYTE_LITERALS","","section with only 8 byte literals",null,null],[17,"S_LITERAL_POINTERS","","section with only pointers to literals",null,null],[17,"S_NON_LAZY_SYMBOL_POINTERS","","section with only non-lazy symbol pointers",null,null],[17,"S_LAZY_SYMBOL_POINTERS","","section with only lazy symbol pointers",null,null],[17,"S_SYMBOL_STUBS","","section with only symbol stubs, byte size of stub in the…",null,null],[17,"S_MOD_INIT_FUNC_POINTERS","","section with only function pointers for initialization",null,null],[17,"S_MOD_TERM_FUNC_POINTERS","","section with only function pointers for termination",null,null],[17,"S_COALESCED","","section contains symbols that are to be coalesced",null,null],[17,"S_GB_ZEROFILL","","zero fill on demand section (that can be larger than 4…",null,null],[17,"S_INTERPOSING","","section with only pairs of function pointers for interposing",null,null],[17,"S_16BYTE_LITERALS","","section with only 16 byte literals",null,null],[17,"S_DTRACE_DOF","","section contains DTrace Object Format",null,null],[17,"S_LAZY_DYLIB_SYMBOL_POINTERS","","section with only lazy symbol pointers to lazy loaded dylibs",null,null],[17,"S_THREAD_LOCAL_REGULAR","","template of initial values for TLVs",null,null],[17,"S_THREAD_LOCAL_ZEROFILL","","template of initial values for TLVs",null,null],[17,"S_THREAD_LOCAL_VARIABLES","","TLV descriptors",null,null],[17,"S_THREAD_LOCAL_VARIABLE_POINTERS","","pointers to TLV descriptors",null,null],[17,"S_THREAD_LOCAL_INIT_FUNCTION_POINTERS","","functions to call to initialize TLV values",null,null],[17,"S_INIT_FUNC_OFFSETS","","32-bit offsets to initializers",null,null],[17,"SECTION_ATTRIBUTES_USR","","User setable attributes",null,null],[17,"S_ATTR_PURE_INSTRUCTIONS","","section contains only true machine instructions",null,null],[17,"S_ATTR_NO_TOC","","section contains coalesced symbols that are not to be in a…",null,null],[17,"S_ATTR_STRIP_STATIC_SYMS","","ok to strip static symbols in this section in files with…",null,null],[17,"S_ATTR_NO_DEAD_STRIP","","no dead stripping",null,null],[17,"S_ATTR_LIVE_SUPPORT","","blocks are live if they reference live blocks",null,null],[17,"S_ATTR_SELF_MODIFYING_CODE","","Used with i386 code stubs written on by dyld",null,null],[17,"S_ATTR_DEBUG","","a debug section",null,null],[17,"SECTION_ATTRIBUTES_SYS","","system setable attributes",null,null],[17,"S_ATTR_SOME_INSTRUCTIONS","","section contains some machine instructions",null,null],[17,"S_ATTR_EXT_RELOC","","section has external relocation entries",null,null],[17,"S_ATTR_LOC_RELOC","","section has local relocation entries",null,null],[17,"SEG_PAGEZERO","","the pagezero segment which has no protections and catches…",null,null],[17,"SEG_TEXT","","the tradition UNIX text segment",null,null],[17,"SECT_TEXT","","the real text part of the text section no headers, and no…",null,null],[17,"SECT_FVMLIB_INIT0","","the fvmlib initialization section",null,null],[17,"SECT_FVMLIB_INIT1","","the section following the fvmlib initialization section",null,null],[17,"SEG_DATA","","the tradition UNIX data segment",null,null],[17,"SECT_DATA","","the real initialized data section no padding, no bss overlap",null,null],[17,"SECT_BSS","","the real uninitialized data section no padding",null,null],[17,"SECT_COMMON","","the section common symbols are allocated in by the link…",null,null],[17,"SEG_OBJC","","objective-C runtime segment",null,null],[17,"SECT_OBJC_SYMBOLS","","symbol table",null,null],[17,"SECT_OBJC_MODULES","","module information",null,null],[17,"SECT_OBJC_STRINGS","","string table",null,null],[17,"SECT_OBJC_REFS","","string table",null,null],[17,"SEG_ICON","","the icon segment",null,null],[17,"SECT_ICON_HEADER","","the icon headers",null,null],[17,"SECT_ICON_TIFF","","the icons in tiff format",null,null],[17,"SEG_LINKEDIT","","the segment containing all structs created and maintained…",null,null],[17,"SEG_UNIXSTACK","","the unix stack segment",null,null],[17,"SEG_IMPORT","","the segment for the self (dyld) modifing code stubs that…",null,null],[17,"INDIRECT_SYMBOL_LOCAL","","",null,null],[17,"INDIRECT_SYMBOL_ABS","","",null,null],[17,"PLATFORM_MACOS","","",null,null],[17,"PLATFORM_IOS","","",null,null],[17,"PLATFORM_TVOS","","",null,null],[17,"PLATFORM_WATCHOS","","",null,null],[17,"PLATFORM_BRIDGEOS","","",null,null],[17,"PLATFORM_IOSMAC","","",null,null],[17,"PLATFORM_IOSSIMULATOR","","",null,null],[17,"PLATFORM_TVOSSIMULATOR","","",null,null],[17,"PLATFORM_WATCHOSSIMULATOR","","",null,null],[17,"TOOL_CLANG","","",null,null],[17,"TOOL_SWIFT","","",null,null],[17,"TOOL_LD","","",null,null],[17,"REBASE_TYPE_POINTER","","",null,null],[17,"REBASE_TYPE_TEXT_ABSOLUTE32","","",null,null],[17,"REBASE_TYPE_TEXT_PCREL32","","",null,null],[17,"REBASE_OPCODE_MASK","","",null,null],[17,"REBASE_IMMEDIATE_MASK","","",null,null],[17,"REBASE_OPCODE_DONE","","",null,null],[17,"REBASE_OPCODE_SET_TYPE_IMM","","",null,null],[17,"REBASE_OPCODE_SET_SEGMENT_AND_OFFSET_ULEB","","",null,null],[17,"REBASE_OPCODE_ADD_ADDR_ULEB","","",null,null],[17,"REBASE_OPCODE_ADD_ADDR_IMM_SCALED","","",null,null],[17,"REBASE_OPCODE_DO_REBASE_IMM_TIMES","","",null,null],[17,"REBASE_OPCODE_DO_REBASE_ULEB_TIMES","","",null,null],[17,"REBASE_OPCODE_DO_REBASE_ADD_ADDR_ULEB","","",null,null],[17,"REBASE_OPCODE_DO_REBASE_ULEB_TIMES_SKIPPING_ULEB","","",null,null],[17,"BIND_TYPE_POINTER","","",null,null],[17,"BIND_TYPE_TEXT_ABSOLUTE32","","",null,null],[17,"BIND_TYPE_TEXT_PCREL32","","",null,null],[17,"BIND_SPECIAL_DYLIB_SELF","","",null,null],[17,"BIND_SPECIAL_DYLIB_MAIN_EXECUTABLE","","",null,null],[17,"BIND_SPECIAL_DYLIB_FLAT_LOOKUP","","",null,null],[17,"BIND_SPECIAL_DYLIB_WEAK_LOOKUP","","",null,null],[17,"BIND_SYMBOL_FLAGS_WEAK_IMPORT","","",null,null],[17,"BIND_SYMBOL_FLAGS_NON_WEAK_DEFINITION","","",null,null],[17,"BIND_OPCODE_MASK","","",null,null],[17,"BIND_IMMEDIATE_MASK","","",null,null],[17,"BIND_OPCODE_DONE","","",null,null],[17,"BIND_OPCODE_SET_DYLIB_ORDINAL_IMM","","",null,null],[17,"BIND_OPCODE_SET_DYLIB_ORDINAL_ULEB","","",null,null],[17,"BIND_OPCODE_SET_DYLIB_SPECIAL_IMM","","",null,null],[17,"BIND_OPCODE_SET_SYMBOL_TRAILING_FLAGS_IMM","","",null,null],[17,"BIND_OPCODE_SET_TYPE_IMM","","",null,null],[17,"BIND_OPCODE_SET_ADDEND_SLEB","","",null,null],[17,"BIND_OPCODE_SET_SEGMENT_AND_OFFSET_ULEB","","",null,null],[17,"BIND_OPCODE_ADD_ADDR_ULEB","","",null,null],[17,"BIND_OPCODE_DO_BIND","","",null,null],[17,"BIND_OPCODE_DO_BIND_ADD_ADDR_ULEB","","",null,null],[17,"BIND_OPCODE_DO_BIND_ADD_ADDR_IMM_SCALED","","",null,null],[17,"BIND_OPCODE_DO_BIND_ULEB_TIMES_SKIPPING_ULEB","","",null,null],[17,"BIND_OPCODE_THREADED","","",null,null],[17,"BIND_SUBOPCODE_THREADED_SET_BIND_ORDINAL_TABLE_SIZE_ULEB","","",null,null],[17,"BIND_SUBOPCODE_THREADED_APPLY","","",null,null],[17,"EXPORT_SYMBOL_FLAGS_KIND_MASK","","",null,null],[17,"EXPORT_SYMBOL_FLAGS_KIND_REGULAR","","",null,null],[17,"EXPORT_SYMBOL_FLAGS_KIND_THREAD_LOCAL","","",null,null],[17,"EXPORT_SYMBOL_FLAGS_KIND_ABSOLUTE","","",null,null],[17,"EXPORT_SYMBOL_FLAGS_WEAK_DEFINITION","","",null,null],[17,"EXPORT_SYMBOL_FLAGS_REEXPORT","","",null,null],[17,"EXPORT_SYMBOL_FLAGS_STUB_AND_RESOLVER","","",null,null],[17,"DICE_KIND_DATA","","",null,null],[17,"DICE_KIND_JUMP_TABLE8","","",null,null],[17,"DICE_KIND_JUMP_TABLE16","","",null,null],[17,"DICE_KIND_JUMP_TABLE32","","",null,null],[17,"DICE_KIND_ABS_JUMP_TABLE32","","",null,null],[17,"N_STAB","","if any of these bits set, a symbolic debugging entry",null,null],[17,"N_PEXT","","private external symbol bit",null,null],[17,"N_TYPE","","mask for the type bits",null,null],[17,"N_EXT","","external symbol bit, set for external symbols",null,null],[17,"N_UNDF","","undefined, n_sect == NO_SECT",null,null],[17,"N_ABS","","absolute, n_sect == NO_SECT",null,null],[17,"N_SECT","","defined in section number n_sect",null,null],[17,"N_PBUD","","prebound undefined (defined in a dylib)",null,null],[17,"N_INDR","","indirect",null,null],[17,"NO_SECT","","symbol is not in any section",null,null],[17,"MAX_SECT","","1 thru 255 inclusive",null,null],[17,"REFERENCE_TYPE","","",null,null],[17,"REFERENCE_FLAG_UNDEFINED_NON_LAZY","","",null,null],[17,"REFERENCE_FLAG_UNDEFINED_LAZY","","",null,null],[17,"REFERENCE_FLAG_DEFINED","","",null,null],[17,"REFERENCE_FLAG_PRIVATE_DEFINED","","",null,null],[17,"REFERENCE_FLAG_PRIVATE_UNDEFINED_NON_LAZY","","",null,null],[17,"REFERENCE_FLAG_PRIVATE_UNDEFINED_LAZY","","",null,null],[17,"REFERENCED_DYNAMICALLY","","",null,null],[17,"SELF_LIBRARY_ORDINAL","","",null,null],[17,"MAX_LIBRARY_ORDINAL","","",null,null],[17,"DYNAMIC_LOOKUP_ORDINAL","","",null,null],[17,"EXECUTABLE_ORDINAL","","",null,null],[17,"N_NO_DEAD_STRIP","","symbol is not to be dead stripped",null,null],[17,"N_DESC_DISCARDED","","symbol is discarded",null,null],[17,"N_WEAK_REF","","symbol is weak referenced",null,null],[17,"N_WEAK_DEF","","coalesed symbol is a weak definition",null,null],[17,"N_REF_TO_WEAK","","reference to a weak symbol",null,null],[17,"N_ARM_THUMB_DEF","","symbol is a Thumb function (ARM)",null,null],[17,"N_SYMBOL_RESOLVER","","",null,null],[17,"N_ALT_ENTRY","","",null,null],[17,"N_GSYM","","global symbol: name,,NO_SECT,type,0",null,null],[17,"N_FNAME","","procedure name (f77 kludge): name,,NO_SECT,0,0",null,null],[17,"N_FUN","","procedure: name,,n_sect,linenumber,address",null,null],[17,"N_STSYM","","static symbol: name,,n_sect,type,address",null,null],[17,"N_LCSYM","",".lcomm symbol: name,,n_sect,type,address",null,null],[17,"N_BNSYM","","begin nsect sym: 0,,n_sect,0,address",null,null],[17,"N_AST","","AST file path: name,,NO_SECT,0,0",null,null],[17,"N_OPT","","emitted with gcc2_compiled and in gcc source",null,null],[17,"N_RSYM","","register sym: name,,NO_SECT,type,register",null,null],[17,"N_SLINE","","src line: 0,,n_sect,linenumber,address",null,null],[17,"N_ENSYM","","end nsect sym: 0,,n_sect,0,address",null,null],[17,"N_SSYM","","structure elt: name,,NO_SECT,type,struct_offset",null,null],[17,"N_SO","","source file name: name,,n_sect,0,address",null,null],[17,"N_OSO","","object file name: name,,0,0,st_mtime",null,null],[17,"N_LSYM","","local sym: name,,NO_SECT,type,offset",null,null],[17,"N_BINCL","","include file beginning: name,,NO_SECT,0,sum",null,null],[17,"N_SOL","","#included file name: name,,n_sect,0,address",null,null],[17,"N_PARAMS","","compiler parameters: name,,NO_SECT,0,0",null,null],[17,"N_VERSION","","compiler version: name,,NO_SECT,0,0",null,null],[17,"N_OLEVEL","","compiler -O level: name,,NO_SECT,0,0",null,null],[17,"N_PSYM","","parameter: name,,NO_SECT,type,offset",null,null],[17,"N_EINCL","","include file end: name,,NO_SECT,0,0",null,null],[17,"N_ENTRY","","alternate entry: name,,n_sect,linenumber,address",null,null],[17,"N_LBRAC","","left bracket: 0,,NO_SECT,nesting level,address",null,null],[17,"N_EXCL","","deleted include file: name,,NO_SECT,0,sum",null,null],[17,"N_RBRAC","","right bracket: 0,,NO_SECT,nesting level,address",null,null],[17,"N_BCOMM","","begin common: name,,NO_SECT,0,0",null,null],[17,"N_ECOMM","","end common: name,,n_sect,0,0",null,null],[17,"N_ECOML","","end common (local name): 0,,n_sect,0,address",null,null],[17,"N_LENG","","second stab entry with length information",null,null],[17,"N_PC","","global pascal symbol: name,,NO_SECT,subtype,line",null,null],[17,"R_ABS","","absolute relocation type for Mach-O files",null,null],[17,"R_SCATTERED","","Bit set in `Relocation::r_word0` for scattered relocations.",null,null],[17,"GENERIC_RELOC_VANILLA","","generic relocation as discribed above",null,null],[17,"GENERIC_RELOC_PAIR","","Only follows a GENERIC_RELOC_SECTDIFF",null,null],[17,"GENERIC_RELOC_SECTDIFF","","",null,null],[17,"GENERIC_RELOC_PB_LA_PTR","","prebound lazy pointer",null,null],[17,"GENERIC_RELOC_LOCAL_SECTDIFF","","",null,null],[17,"GENERIC_RELOC_TLV","","thread local variables",null,null],[17,"ARM_RELOC_VANILLA","","generic relocation as discribed above",null,null],[17,"ARM_RELOC_PAIR","","the second relocation entry of a pair",null,null],[17,"ARM_RELOC_SECTDIFF","","a PAIR follows with subtract symbol value",null,null],[17,"ARM_RELOC_LOCAL_SECTDIFF","","like ARM_RELOC_SECTDIFF, but the symbol referenced was…",null,null],[17,"ARM_RELOC_PB_LA_PTR","","prebound lazy pointer",null,null],[17,"ARM_RELOC_BR24","","24 bit branch displacement (to a word address)",null,null],[17,"ARM_THUMB_RELOC_BR22","","22 bit branch displacement (to a half-word address)",null,null],[17,"ARM_THUMB_32BIT_BRANCH","","obsolete - a thumb 32-bit branch instruction possibly…",null,null],[17,"ARM_RELOC_HALF","","",null,null],[17,"ARM_RELOC_HALF_SECTDIFF","","",null,null],[17,"ARM64_RELOC_UNSIGNED","","for pointers",null,null],[17,"ARM64_RELOC_SUBTRACTOR","","must be followed by a ARM64_RELOC_UNSIGNED",null,null],[17,"ARM64_RELOC_BRANCH26","","a B/BL instruction with 26-bit displacement",null,null],[17,"ARM64_RELOC_PAGE21","","pc-rel distance to page of target",null,null],[17,"ARM64_RELOC_PAGEOFF12","","offset within page, scaled by r_length",null,null],[17,"ARM64_RELOC_GOT_LOAD_PAGE21","","pc-rel distance to page of GOT slot",null,null],[17,"ARM64_RELOC_GOT_LOAD_PAGEOFF12","","offset within page of GOT slot, scaled by r_length",null,null],[17,"ARM64_RELOC_POINTER_TO_GOT","","for pointers to GOT slots",null,null],[17,"ARM64_RELOC_TLVP_LOAD_PAGE21","","pc-rel distance to page of TLVP slot",null,null],[17,"ARM64_RELOC_TLVP_LOAD_PAGEOFF12","","offset within page of TLVP slot, scaled by r_length",null,null],[17,"ARM64_RELOC_ADDEND","","must be followed by PAGE21 or PAGEOFF12",null,null],[17,"ARM64_RELOC_AUTHENTICATED_POINTER","","",null,null],[17,"PPC_RELOC_VANILLA","","generic relocation as discribed above",null,null],[17,"PPC_RELOC_PAIR","","the second relocation entry of a pair",null,null],[17,"PPC_RELOC_BR14","","14 bit branch displacement (to a word address)",null,null],[17,"PPC_RELOC_BR24","","24 bit branch displacement (to a word address)",null,null],[17,"PPC_RELOC_HI16","","a PAIR follows with the low half",null,null],[17,"PPC_RELOC_LO16","","a PAIR follows with the high half",null,null],[17,"PPC_RELOC_HA16","","Same as the RELOC_HI16 except the low 16 bits and the high…",null,null],[17,"PPC_RELOC_LO14","","Same as the LO16 except that the low 2 bits are not stored…",null,null],[17,"PPC_RELOC_SECTDIFF","","a PAIR follows with subtract symbol value",null,null],[17,"PPC_RELOC_PB_LA_PTR","","prebound lazy pointer",null,null],[17,"PPC_RELOC_HI16_SECTDIFF","","section difference forms of above.  a PAIR",null,null],[17,"PPC_RELOC_LO16_SECTDIFF","","follows these with subtract symbol value",null,null],[17,"PPC_RELOC_HA16_SECTDIFF","","",null,null],[17,"PPC_RELOC_JBSR","","",null,null],[17,"PPC_RELOC_LO14_SECTDIFF","","",null,null],[17,"PPC_RELOC_LOCAL_SECTDIFF","","like PPC_RELOC_SECTDIFF, but the symbol referenced was…",null,null],[17,"X86_64_RELOC_UNSIGNED","","for absolute addresses",null,null],[17,"X86_64_RELOC_SIGNED","","for signed 32-bit displacement",null,null],[17,"X86_64_RELOC_BRANCH","","a CALL/JMP instruction with 32-bit displacement",null,null],[17,"X86_64_RELOC_GOT_LOAD","","a MOVQ load of a GOT entry",null,null],[17,"X86_64_RELOC_GOT","","other GOT references",null,null],[17,"X86_64_RELOC_SUBTRACTOR","","must be followed by a X86_64_RELOC_UNSIGNED",null,null],[17,"X86_64_RELOC_SIGNED_1","","for signed 32-bit displacement with a -1 addend",null,null],[17,"X86_64_RELOC_SIGNED_2","","for signed 32-bit displacement with a -2 addend",null,null],[17,"X86_64_RELOC_SIGNED_4","","for signed 32-bit displacement with a -4 addend",null,null],[17,"X86_64_RELOC_TLV","","for thread local variables",null,null],[11,"r_scattered","","Determine whether this is a scattered relocation.",140,[[["u32"],["e"]],["bool"]]],[11,"info","","Return the fields of a plain relocation.",140,[[["e"]],["relocationinfo"]]],[11,"scattered_info","","Return the fields of a scattered relocation.",140,[[["e"]],["scatteredrelocationinfo"]]],[11,"relocation","","Combine the fields into a `Relocation`.",141,[[["endian"]],[["relocation"],["endian"]]]],[11,"relocation","","Combine the fields into a `Relocation`.",142,[[["endian"]],[["relocation"],["endian"]]]],[0,"pe","object","PE/COFF definitions.",null,null],[3,"ImageDosHeader","object::pe","DOS .EXE header",null,null],[12,"e_magic","","Magic number",143,null],[12,"e_cblp","","Bytes on last page of file",143,null],[12,"e_cp","","Pages in file",143,null],[12,"e_crlc","","Relocations",143,null],[12,"e_cparhdr","","Size of header in paragraphs",143,null],[12,"e_minalloc","","Minimum extra paragraphs needed",143,null],[12,"e_maxalloc","","Maximum extra paragraphs needed",143,null],[12,"e_ss","","Initial (relative) SS value",143,null],[12,"e_sp","","Initial SP value",143,null],[12,"e_csum","","Checksum",143,null],[12,"e_ip","","Initial IP value",143,null],[12,"e_cs","","Initial (relative) CS value",143,null],[12,"e_lfarlc","","File address of relocation table",143,null],[12,"e_ovno","","Overlay number",143,null],[12,"e_res","","Reserved words",143,null],[12,"e_oemid","","OEM identifier (for e_oeminfo)",143,null],[12,"e_oeminfo","","OEM information; e_oemid specific",143,null],[12,"e_res2","","Reserved words",143,null],[12,"e_lfanew","","File address of new exe header",143,null],[3,"ImageOs2Header","","OS/2 .EXE header",null,null],[12,"ne_magic","","Magic number",144,null],[12,"ne_ver","","Version number",144,null],[12,"ne_rev","","Revision number",144,null],[12,"ne_enttab","","Offset of Entry Table",144,null],[12,"ne_cbenttab","","Number of bytes in Entry Table",144,null],[12,"ne_crc","","Checksum of whole file",144,null],[12,"ne_flags","","Flag word",144,null],[12,"ne_autodata","","Automatic data segment number",144,null],[12,"ne_heap","","Initial heap allocation",144,null],[12,"ne_stack","","Initial stack allocation",144,null],[12,"ne_csip","","Initial CS:IP setting",144,null],[12,"ne_sssp","","Initial SS:SP setting",144,null],[12,"ne_cseg","","Count of file segments",144,null],[12,"ne_cmod","","Entries in Module Reference Table",144,null],[12,"ne_cbnrestab","","Size of non-resident name table",144,null],[12,"ne_segtab","","Offset of Segment Table",144,null],[12,"ne_rsrctab","","Offset of Resource Table",144,null],[12,"ne_restab","","Offset of resident name table",144,null],[12,"ne_modtab","","Offset of Module Reference Table",144,null],[12,"ne_imptab","","Offset of Imported Names Table",144,null],[12,"ne_nrestab","","Offset of Non-resident Names Table",144,null],[12,"ne_cmovent","","Count of movable entries",144,null],[12,"ne_align","","Segment alignment shift count",144,null],[12,"ne_cres","","Count of resource segments",144,null],[12,"ne_exetyp","","Target Operating system",144,null],[12,"ne_flagsothers","","Other .EXE flags",144,null],[12,"ne_pretthunks","","offset to return thunks",144,null],[12,"ne_psegrefbytes","","offset to segment ref. bytes",144,null],[12,"ne_swaparea","","Minimum code swap area size",144,null],[12,"ne_expver","","Expected Windows version number",144,null],[3,"ImageVxdHeader","","Windows VXD header",null,null],[12,"e32_magic","","Magic number",145,null],[12,"e32_border","","The byte ordering for the VXD",145,null],[12,"e32_worder","","The word ordering for the VXD",145,null],[12,"e32_level","","The EXE format level for now = 0",145,null],[12,"e32_cpu","","The CPU type",145,null],[12,"e32_os","","The OS type",145,null],[12,"e32_ver","","Module version",145,null],[12,"e32_mflags","","Module flags",145,null],[12,"e32_mpages","","Module # pages",145,null],[12,"e32_startobj","","Object # for instruction pointer",145,null],[12,"e32_eip","","Extended instruction pointer",145,null],[12,"e32_stackobj","","Object # for stack pointer",145,null],[12,"e32_esp","","Extended stack pointer",145,null],[12,"e32_pagesize","","VXD page size",145,null],[12,"e32_lastpagesize","","Last page size in VXD",145,null],[12,"e32_fixupsize","","Fixup section size",145,null],[12,"e32_fixupsum","","Fixup section checksum",145,null],[12,"e32_ldrsize","","Loader section size",145,null],[12,"e32_ldrsum","","Loader section checksum",145,null],[12,"e32_objtab","","Object table offset",145,null],[12,"e32_objcnt","","Number of objects in module",145,null],[12,"e32_objmap","","Object page map offset",145,null],[12,"e32_itermap","","Object iterated data map offset",145,null],[12,"e32_rsrctab","","Offset of Resource Table",145,null],[12,"e32_rsrccnt","","Number of resource entries",145,null],[12,"e32_restab","","Offset of resident name table",145,null],[12,"e32_enttab","","Offset of Entry Table",145,null],[12,"e32_dirtab","","Offset of Module Directive Table",145,null],[12,"e32_dircnt","","Number of module directives",145,null],[12,"e32_fpagetab","","Offset of Fixup Page Table",145,null],[12,"e32_frectab","","Offset of Fixup Record Table",145,null],[12,"e32_impmod","","Offset of Import Module Name Table",145,null],[12,"e32_impmodcnt","","Number of entries in Import Module Name Table",145,null],[12,"e32_impproc","","Offset of Import Procedure Name Table",145,null],[12,"e32_pagesum","","Offset of Per-Page Checksum Table",145,null],[12,"e32_datapage","","Offset of Enumerated Data Pages",145,null],[12,"e32_preload","","Number of preload pages",145,null],[12,"e32_nrestab","","Offset of Non-resident Names Table",145,null],[12,"e32_cbnrestab","","Size of Non-resident Name Table",145,null],[12,"e32_nressum","","Non-resident Name Table Checksum",145,null],[12,"e32_autodata","","Object # for automatic data object",145,null],[12,"e32_debuginfo","","Offset of the debugging information",145,null],[12,"e32_debuglen","","The length of the debugging info. in bytes",145,null],[12,"e32_instpreload","","Number of instance pages in preload section of VXD file",145,null],[12,"e32_instdemand","","Number of instance pages in demand load section of VXD file",145,null],[12,"e32_heapsize","","Size of heap - for 16-bit apps",145,null],[12,"e32_res3","","Reserved words",145,null],[12,"e32_winresoff","","",145,null],[12,"e32_winreslen","","",145,null],[12,"e32_devid","","Device ID for VxD",145,null],[12,"e32_ddkver","","DDK version for VxD",145,null],[3,"ImageFileHeader","","",null,null],[12,"machine","","",146,null],[12,"number_of_sections","","",146,null],[12,"time_date_stamp","","",146,null],[12,"pointer_to_symbol_table","","",146,null],[12,"number_of_symbols","","",146,null],[12,"size_of_optional_header","","",146,null],[12,"characteristics","","",146,null],[3,"ImageDataDirectory","","",null,null],[12,"virtual_address","","",147,null],[12,"size","","",147,null],[3,"ImageOptionalHeader32","","",null,null],[12,"magic","","",148,null],[12,"major_linker_version","","",148,null],[12,"minor_linker_version","","",148,null],[12,"size_of_code","","",148,null],[12,"size_of_initialized_data","","",148,null],[12,"size_of_uninitialized_data","","",148,null],[12,"address_of_entry_point","","",148,null],[12,"base_of_code","","",148,null],[12,"base_of_data","","",148,null],[12,"image_base","","",148,null],[12,"section_alignment","","",148,null],[12,"file_alignment","","",148,null],[12,"major_operating_system_version","","",148,null],[12,"minor_operating_system_version","","",148,null],[12,"major_image_version","","",148,null],[12,"minor_image_version","","",148,null],[12,"major_subsystem_version","","",148,null],[12,"minor_subsystem_version","","",148,null],[12,"win32_version_value","","",148,null],[12,"size_of_image","","",148,null],[12,"size_of_headers","","",148,null],[12,"check_sum","","",148,null],[12,"subsystem","","",148,null],[12,"dll_characteristics","","",148,null],[12,"size_of_stack_reserve","","",148,null],[12,"size_of_stack_commit","","",148,null],[12,"size_of_heap_reserve","","",148,null],[12,"size_of_heap_commit","","",148,null],[12,"loader_flags","","",148,null],[12,"number_of_rva_and_sizes","","",148,null],[3,"ImageRomOptionalHeader","","",null,null],[12,"magic","","",149,null],[12,"major_linker_version","","",149,null],[12,"minor_linker_version","","",149,null],[12,"size_of_code","","",149,null],[12,"size_of_initialized_data","","",149,null],[12,"size_of_uninitialized_data","","",149,null],[12,"address_of_entry_point","","",149,null],[12,"base_of_code","","",149,null],[12,"base_of_data","","",149,null],[12,"base_of_bss","","",149,null],[12,"gpr_mask","","",149,null],[12,"cpr_mask","","",149,null],[12,"gp_value","","",149,null],[3,"ImageOptionalHeader64","","",null,null],[12,"magic","","",150,null],[12,"major_linker_version","","",150,null],[12,"minor_linker_version","","",150,null],[12,"size_of_code","","",150,null],[12,"size_of_initialized_data","","",150,null],[12,"size_of_uninitialized_data","","",150,null],[12,"address_of_entry_point","","",150,null],[12,"base_of_code","","",150,null],[12,"image_base","","",150,null],[12,"section_alignment","","",150,null],[12,"file_alignment","","",150,null],[12,"major_operating_system_version","","",150,null],[12,"minor_operating_system_version","","",150,null],[12,"major_image_version","","",150,null],[12,"minor_image_version","","",150,null],[12,"major_subsystem_version","","",150,null],[12,"minor_subsystem_version","","",150,null],[12,"win32_version_value","","",150,null],[12,"size_of_image","","",150,null],[12,"size_of_headers","","",150,null],[12,"check_sum","","",150,null],[12,"subsystem","","",150,null],[12,"dll_characteristics","","",150,null],[12,"size_of_stack_reserve","","",150,null],[12,"size_of_stack_commit","","",150,null],[12,"size_of_heap_reserve","","",150,null],[12,"size_of_heap_commit","","",150,null],[12,"loader_flags","","",150,null],[12,"number_of_rva_and_sizes","","",150,null],[3,"ImageNtHeaders64","","",null,null],[12,"signature","","",151,null],[12,"file_header","","",151,null],[12,"optional_header","","",151,null],[3,"ImageNtHeaders32","","",null,null],[12,"signature","","",152,null],[12,"file_header","","",152,null],[12,"optional_header","","",152,null],[3,"ImageRomHeaders","","",null,null],[12,"file_header","","",153,null],[12,"optional_header","","",153,null],[3,"Guid","","",null,null],[12,"data1","","",154,null],[12,"data2","","",154,null],[12,"data3","","",154,null],[12,"data4","","",154,null],[3,"AnonObjectHeader","","Non-COFF Object file header",null,null],[12,"sig1","","Must be IMAGE_FILE_MACHINE_UNKNOWN",155,null],[12,"sig2","","Must be 0xffff",155,null],[12,"version","","= 1 (implies the ClsId field is present)",155,null],[12,"machine","","",155,null],[12,"time_date_stamp","","",155,null],[12,"class_id","","Used to invoke CoCreateInstance",155,null],[12,"size_of_data","","Size of data that follows the header",155,null],[3,"AnonObjectHeaderV2","","",null,null],[12,"sig1","","Must be IMAGE_FILE_MACHINE_UNKNOWN",156,null],[12,"sig2","","Must be 0xffff",156,null],[12,"version","","= 2 (implies the Flags field is present - otherwise V1)",156,null],[12,"machine","","",156,null],[12,"time_date_stamp","","",156,null],[12,"class_id","","Used to invoke CoCreateInstance",156,null],[12,"size_of_data","","Size of data that follows the header",156,null],[12,"flags","","0x1 -> contains metadata",156,null],[12,"meta_data_size","","Size of CLR metadata",156,null],[12,"meta_data_offset","","Offset of CLR metadata",156,null],[3,"AnonObjectHeaderBigobj","","",null,null],[12,"sig1","","Must be IMAGE_FILE_MACHINE_UNKNOWN",157,null],[12,"sig2","","Must be 0xffff",157,null],[12,"version","","= 2 (implies the Flags field is present)",157,null],[12,"machine","","Actual machine - IMAGE_FILE_MACHINE_xxx",157,null],[12,"time_date_stamp","","",157,null],[12,"class_id","","{D1BAA1C7-BAEE-4ba9-AF20-FAF66AA4DCB8}",157,null],[12,"size_of_data","","Size of data that follows the header",157,null],[12,"flags","","0x1 -> contains metadata",157,null],[12,"meta_data_size","","Size of CLR metadata",157,null],[12,"meta_data_offset","","Offset of CLR metadata",157,null],[12,"number_of_sections","","extended from WORD",157,null],[12,"pointer_to_symbol_table","","",157,null],[12,"number_of_symbols","","",157,null],[3,"ImageSectionHeader","","",null,null],[12,"name","","",158,null],[12,"virtual_size","","",158,null],[12,"virtual_address","","",158,null],[12,"size_of_raw_data","","",158,null],[12,"pointer_to_raw_data","","",158,null],[12,"pointer_to_relocations","","",158,null],[12,"pointer_to_linenumbers","","",158,null],[12,"number_of_relocations","","",158,null],[12,"number_of_linenumbers","","",158,null],[12,"characteristics","","",158,null],[3,"ImageSymbol","","",null,null],[12,"name","","If first 4 bytes are 0, then second 4 bytes are offset…",159,null],[12,"value","","",159,null],[12,"section_number","","",159,null],[12,"typ","","",159,null],[12,"storage_class","","",159,null],[12,"number_of_aux_symbols","","",159,null],[3,"ImageSymbolBytes","","",null,null],[12,"0","","",160,null],[3,"ImageSymbolEx","","",null,null],[12,"name","","If first 4 bytes are 0, then second 4 bytes are offset…",161,null],[12,"value","","",161,null],[12,"section_number","","",161,null],[12,"typ","","",161,null],[12,"storage_class","","",161,null],[12,"number_of_aux_symbols","","",161,null],[3,"ImageSymbolExBytes","","",null,null],[12,"0","","",162,null],[3,"ImageAuxSymbolTokenDef","","",null,null],[12,"aux_type","","IMAGE_AUX_SYMBOL_TYPE",163,null],[12,"reserved1","","Must be 0",163,null],[12,"symbol_table_index","","",163,null],[12,"reserved2","","Must be 0",163,null],[3,"ImageAuxSymbolFunction","","Auxilliary symbol format 1: function definitions.",null,null],[12,"tag_index","","",164,null],[12,"total_size","","",164,null],[12,"pointer_to_linenumber","","",164,null],[12,"pointer_to_next_function","","",164,null],[12,"unused","","",164,null],[3,"ImageAuxSymbolFunctionBeginEnd","","Auxilliary symbol format 2: .bf and .ef symbols.",null,null],[12,"unused1","","",165,null],[12,"linenumber","","declaration line number",165,null],[12,"unused2","","",165,null],[12,"pointer_to_next_function","","",165,null],[12,"unused3","","",165,null],[3,"ImageAuxSymbolWeak","","Auxilliary symbol format 3: weak externals.",null,null],[12,"weak_default_sym_index","","the weak extern default symbol index",166,null],[12,"weak_search_type","","",166,null],[3,"ImageAuxSymbolSection","","Auxilliary symbol format 5: sections.",null,null],[12,"length","","section length",167,null],[12,"number_of_relocations","","number of relocation entries",167,null],[12,"number_of_linenumbers","","number of line numbers",167,null],[12,"check_sum","","checksum for communal",167,null],[12,"number","","section number to associate with",167,null],[12,"selection","","communal selection type",167,null],[12,"reserved","","",167,null],[12,"high_number","","high bits of the section number",167,null],[3,"ImageAuxSymbolCrc","","",null,null],[12,"crc","","",168,null],[3,"ImageRelocation","","",null,null],[12,"virtual_address","","Also `RelocCount` when IMAGE_SCN_LNK_NRELOC_OVFL is set",169,null],[12,"symbol_table_index","","",169,null],[12,"typ","","",169,null],[3,"ImageLinenumber","","",null,null],[12,"symbol_table_index_or_virtual_address","","Symbol table index of function name if Linenumber is 0.…",170,null],[12,"linenumber","","Line number.",170,null],[3,"ImageBaseRelocation","","",null,null],[12,"virtual_address","","",171,null],[12,"size_of_block","","",171,null],[3,"ImageArchiveMemberHeader","","",null,null],[12,"name","","File member name - `/' terminated.",172,null],[12,"date","","File member date - decimal.",172,null],[12,"user_id","","File member user id - decimal.",172,null],[12,"group_id","","File member group id - decimal.",172,null],[12,"mode","","File member mode - octal.",172,null],[12,"size","","File member size - decimal.",172,null],[12,"end_header","","String to end header.",172,null],[3,"ImageExportDirectory","","",null,null],[12,"characteristics","","",173,null],[12,"time_date_stamp","","",173,null],[12,"major_version","","",173,null],[12,"minor_version","","",173,null],[12,"name","","",173,null],[12,"base","","",173,null],[12,"number_of_functions","","",173,null],[12,"number_of_names","","",173,null],[12,"address_of_functions","","RVA from base of image",173,null],[12,"address_of_names","","RVA from base of image",173,null],[12,"address_of_name_ordinals","","RVA from base of image",173,null],[3,"ImageImportByName","","",null,null],[12,"hint","","",174,null],[3,"ImageTlsDirectory64","","",null,null],[12,"start_address_of_raw_data","","",175,null],[12,"end_address_of_raw_data","","",175,null],[12,"address_of_index","","PDWORD",175,null],[12,"address_of_call_backs","","PIMAGE_TLS_CALLBACK *;",175,null],[12,"size_of_zero_fill","","",175,null],[12,"characteristics","","",175,null],[3,"ImageTlsDirectory32","","",null,null],[12,"start_address_of_raw_data","","",176,null],[12,"end_address_of_raw_data","","",176,null],[12,"address_of_index","","PDWORD",176,null],[12,"address_of_call_backs","","PIMAGE_TLS_CALLBACK *",176,null],[12,"size_of_zero_fill","","",176,null],[12,"characteristics","","",176,null],[3,"ImageImportDescriptor","","",null,null],[12,"characteristics_or_original_first_thunk","","0 for terminating null import descriptor RVA to original…",177,null],[12,"original_first_thunk","","",177,null],[12,"time_date_stamp","","0 if not bound, -1 if bound, and real date\\time stamp in…",177,null],[12,"forwarder_chain","","-1 if no forwarders",177,null],[12,"name","","",177,null],[12,"first_thunk","","RVA to IAT (if bound this IAT has actual addresses)",177,null],[3,"ImageBoundImportDescriptor","","",null,null],[12,"time_date_stamp","","",178,null],[12,"offset_module_name","","",178,null],[12,"number_of_module_forwarder_refs","","",178,null],[3,"ImageBoundForwarderRef","","",null,null],[12,"time_date_stamp","","",179,null],[12,"offset_module_name","","",179,null],[12,"reserved","","",179,null],[3,"ImageDelayloadDescriptor","","",null,null],[12,"attributes","","",180,null],[12,"dll_name_rva","","RVA to the name of the target library (NULL-terminate…",180,null],[12,"module_handle_rva","","RVA to the HMODULE caching location (PHMODULE)",180,null],[12,"import_address_table_rva","","RVA to the start of the IAT (PIMAGE_THUNK_DATA)",180,null],[12,"import_name_table_rva","","RVA to the start of the name table…",180,null],[12,"bound_import_address_table_rva","","RVA to an optional bound IAT",180,null],[12,"unload_information_table_rva","","RVA to an optional unload info table",180,null],[12,"time_date_stamp","","0 if not bound, otherwise, date/time of the target DLL",180,null],[3,"ImageResourceDirectory","","",null,null],[12,"characteristics","","",181,null],[12,"time_date_stamp","","",181,null],[12,"major_version","","",181,null],[12,"minor_version","","",181,null],[12,"number_of_named_entries","","",181,null],[12,"number_of_id_entries","","",181,null],[3,"ImageResourceDirectoryEntry","","",null,null],[12,"name_or_id","","",182,null],[12,"offset_to_data_or_directory","","",182,null],[3,"ImageResourceDirectoryString","","",null,null],[12,"length","","",183,null],[3,"ImageResourceDirStringU","","",null,null],[12,"length","","",184,null],[3,"ImageResourceDataEntry","","",null,null],[12,"offset_to_data","","",185,null],[12,"size","","",185,null],[12,"code_page","","",185,null],[12,"reserved","","",185,null],[3,"ImageLoadConfigCodeIntegrity","","",null,null],[12,"flags","","Flags to indicate if CI information is available, etc.",186,null],[12,"catalog","","0xFFFF means not available",186,null],[12,"catalog_offset","","",186,null],[12,"reserved","","Additional bitmask to be defined later",186,null],[3,"ImageDynamicRelocationTable","","",null,null],[12,"version","","",187,null],[12,"size","","",187,null],[3,"ImageDynamicRelocation32","","",null,null],[12,"symbol","","",188,null],[12,"base_reloc_size","","",188,null],[3,"ImageDynamicRelocation64","","",null,null],[12,"symbol","","",189,null],[12,"base_reloc_size","","",189,null],[3,"ImageDynamicRelocation32V2","","",null,null],[12,"header_size","","",190,null],[12,"fixup_info_size","","",190,null],[12,"symbol","","",190,null],[12,"symbol_group","","",190,null],[12,"flags","","",190,null],[3,"ImageDynamicRelocation64V2","","",null,null],[12,"header_size","","",191,null],[12,"fixup_info_size","","",191,null],[12,"symbol","","",191,null],[12,"symbol_group","","",191,null],[12,"flags","","",191,null],[3,"ImagePrologueDynamicRelocationHeader","","",null,null],[12,"prologue_byte_count","","",192,null],[3,"ImageEpilogueDynamicRelocationHeader","","",null,null],[12,"epilogue_count","","",193,null],[12,"epilogue_byte_count","","",193,null],[12,"branch_descriptor_element_size","","",193,null],[12,"branch_descriptor_count","","",193,null],[3,"ImageLoadConfigDirectory32","","",null,null],[12,"size","","",194,null],[12,"time_date_stamp","","",194,null],[12,"major_version","","",194,null],[12,"minor_version","","",194,null],[12,"global_flags_clear","","",194,null],[12,"global_flags_set","","",194,null],[12,"critical_section_default_timeout","","",194,null],[12,"de_commit_free_block_threshold","","",194,null],[12,"de_commit_total_free_threshold","","",194,null],[12,"lock_prefix_table","","VA",194,null],[12,"maximum_allocation_size","","",194,null],[12,"virtual_memory_threshold","","",194,null],[12,"process_heap_flags","","",194,null],[12,"process_affinity_mask","","",194,null],[12,"csd_version","","",194,null],[12,"dependent_load_flags","","",194,null],[12,"edit_list","","VA",194,null],[12,"security_cookie","","VA",194,null],[12,"sehandler_table","","VA",194,null],[12,"sehandler_count","","",194,null],[12,"guard_cf_check_function_pointer","","VA",194,null],[12,"guard_cf_dispatch_function_pointer","","VA",194,null],[12,"guard_cf_function_table","","VA",194,null],[12,"guard_cf_function_count","","",194,null],[12,"guard_flags","","",194,null],[12,"code_integrity","","",194,null],[12,"guard_address_taken_iat_entry_table","","VA",194,null],[12,"guard_address_taken_iat_entry_count","","",194,null],[12,"guard_long_jump_target_table","","VA",194,null],[12,"guard_long_jump_target_count","","",194,null],[12,"dynamic_value_reloc_table","","VA",194,null],[12,"chpe_metadata_pointer","","",194,null],[12,"guard_rf_failure_routine","","VA",194,null],[12,"guard_rf_failure_routine_function_pointer","","VA",194,null],[12,"dynamic_value_reloc_table_offset","","",194,null],[12,"dynamic_value_reloc_table_section","","",194,null],[12,"reserved2","","",194,null],[12,"guard_rf_verify_stack_pointer_function_pointer","","VA",194,null],[12,"hot_patch_table_offset","","",194,null],[12,"reserved3","","",194,null],[12,"enclave_configuration_pointer","","VA",194,null],[12,"volatile_metadata_pointer","","VA",194,null],[3,"ImageLoadConfigDirectory64","","",null,null],[12,"size","","",195,null],[12,"time_date_stamp","","",195,null],[12,"major_version","","",195,null],[12,"minor_version","","",195,null],[12,"global_flags_clear","","",195,null],[12,"global_flags_set","","",195,null],[12,"critical_section_default_timeout","","",195,null],[12,"de_commit_free_block_threshold","","",195,null],[12,"de_commit_total_free_threshold","","",195,null],[12,"lock_prefix_table","","VA",195,null],[12,"maximum_allocation_size","","",195,null],[12,"virtual_memory_threshold","","",195,null],[12,"process_affinity_mask","","",195,null],[12,"process_heap_flags","","",195,null],[12,"csd_version","","",195,null],[12,"dependent_load_flags","","",195,null],[12,"edit_list","","VA",195,null],[12,"security_cookie","","VA",195,null],[12,"sehandler_table","","VA",195,null],[12,"sehandler_count","","",195,null],[12,"guard_cf_check_function_pointer","","VA",195,null],[12,"guard_cf_dispatch_function_pointer","","VA",195,null],[12,"guard_cf_function_table","","VA",195,null],[12,"guard_cf_function_count","","",195,null],[12,"guard_flags","","",195,null],[12,"code_integrity","","",195,null],[12,"guard_address_taken_iat_entry_table","","VA",195,null],[12,"guard_address_taken_iat_entry_count","","",195,null],[12,"guard_long_jump_target_table","","VA",195,null],[12,"guard_long_jump_target_count","","",195,null],[12,"dynamic_value_reloc_table","","VA",195,null],[12,"chpe_metadata_pointer","","VA",195,null],[12,"guard_rf_failure_routine","","VA",195,null],[12,"guard_rf_failure_routine_function_pointer","","VA",195,null],[12,"dynamic_value_reloc_table_offset","","",195,null],[12,"dynamic_value_reloc_table_section","","",195,null],[12,"reserved2","","",195,null],[12,"guard_rf_verify_stack_pointer_function_pointer","","VA",195,null],[12,"hot_patch_table_offset","","",195,null],[12,"reserved3","","",195,null],[12,"enclave_configuration_pointer","","VA",195,null],[12,"volatile_metadata_pointer","","VA",195,null],[3,"ImageHotPatchInfo","","",null,null],[12,"version","","",196,null],[12,"size","","",196,null],[12,"sequence_number","","",196,null],[12,"base_image_list","","",196,null],[12,"base_image_count","","",196,null],[12,"buffer_offset","","Version 2 and later",196,null],[12,"extra_patch_size","","Version 3 and later",196,null],[3,"ImageHotPatchBase","","",null,null],[12,"sequence_number","","",197,null],[12,"flags","","",197,null],[12,"original_time_date_stamp","","",197,null],[12,"original_check_sum","","",197,null],[12,"code_integrity_info","","",197,null],[12,"code_integrity_size","","",197,null],[12,"patch_table","","",197,null],[12,"buffer_offset","","Version 2 and later",197,null],[3,"ImageHotPatchHashes","","",null,null],[12,"sha256","","",198,null],[12,"sha1","","",198,null],[3,"ImageArmRuntimeFunctionEntry","","",null,null],[12,"begin_address","","",199,null],[12,"unwind_data","","",199,null],[3,"ImageArm64RuntimeFunctionEntry","","",null,null],[12,"begin_address","","",200,null],[12,"unwind_data","","",200,null],[3,"ImageAlpha64RuntimeFunctionEntry","","",null,null],[12,"begin_address","","",201,null],[12,"end_address","","",201,null],[12,"exception_handler","","",201,null],[12,"handler_data","","",201,null],[12,"prolog_end_address","","",201,null],[3,"ImageAlphaRuntimeFunctionEntry","","",null,null],[12,"begin_address","","",202,null],[12,"end_address","","",202,null],[12,"exception_handler","","",202,null],[12,"handler_data","","",202,null],[12,"prolog_end_address","","",202,null],[3,"ImageRuntimeFunctionEntry","","",null,null],[12,"begin_address","","",203,null],[12,"end_address","","",203,null],[12,"unwind_info_address_or_data","","",203,null],[3,"ImageEnclaveConfig32","","",null,null],[12,"size","","",204,null],[12,"minimum_required_config_size","","",204,null],[12,"policy_flags","","",204,null],[12,"number_of_imports","","",204,null],[12,"import_list","","",204,null],[12,"import_entry_size","","",204,null],[12,"family_id","","",204,null],[12,"image_id","","",204,null],[12,"image_version","","",204,null],[12,"security_version","","",204,null],[12,"enclave_size","","",204,null],[12,"number_of_threads","","",204,null],[12,"enclave_flags","","",204,null],[3,"ImageEnclaveConfig64","","",null,null],[12,"size","","",205,null],[12,"minimum_required_config_size","","",205,null],[12,"policy_flags","","",205,null],[12,"number_of_imports","","",205,null],[12,"import_list","","",205,null],[12,"import_entry_size","","",205,null],[12,"family_id","","",205,null],[12,"image_id","","",205,null],[12,"image_version","","",205,null],[12,"security_version","","",205,null],[12,"enclave_size","","",205,null],[12,"number_of_threads","","",205,null],[12,"enclave_flags","","",205,null],[3,"ImageEnclaveImport","","",null,null],[12,"match_type","","",206,null],[12,"minimum_security_version","","",206,null],[12,"unique_or_author_id","","",206,null],[12,"family_id","","",206,null],[12,"image_id","","",206,null],[12,"import_name","","",206,null],[12,"reserved","","",206,null],[3,"ImageDebugDirectory","","",null,null],[12,"characteristics","","",207,null],[12,"time_date_stamp","","",207,null],[12,"major_version","","",207,null],[12,"minor_version","","",207,null],[12,"typ","","",207,null],[12,"size_of_data","","",207,null],[12,"address_of_raw_data","","",207,null],[12,"pointer_to_raw_data","","",207,null],[3,"ImageCoffSymbolsHeader","","",null,null],[12,"number_of_symbols","","",208,null],[12,"lva_to_first_symbol","","",208,null],[12,"number_of_linenumbers","","",208,null],[12,"lva_to_first_linenumber","","",208,null],[12,"rva_to_first_byte_of_code","","",208,null],[12,"rva_to_last_byte_of_code","","",208,null],[12,"rva_to_first_byte_of_data","","",208,null],[12,"rva_to_last_byte_of_data","","",208,null],[3,"ImageDebugMisc","","",null,null],[12,"data_type","","type of misc data, see defines",209,null],[12,"length","","total length of record, rounded to four byte multiple.",209,null],[12,"unicode","","TRUE if data is unicode string",209,null],[12,"reserved","","",209,null],[3,"ImageFunctionEntry","","",null,null],[12,"starting_address","","",210,null],[12,"ending_address","","",210,null],[12,"end_of_prologue","","",210,null],[3,"ImageFunctionEntry64","","",null,null],[12,"starting_address","","",211,null],[12,"ending_address","","",211,null],[12,"end_of_prologue_or_unwind_info_address","","",211,null],[3,"ImageSeparateDebugHeader","","",null,null],[12,"signature","","",212,null],[12,"flags","","",212,null],[12,"machine","","",212,null],[12,"characteristics","","",212,null],[12,"time_date_stamp","","",212,null],[12,"check_sum","","",212,null],[12,"image_base","","",212,null],[12,"size_of_image","","",212,null],[12,"number_of_sections","","",212,null],[12,"exported_names_size","","",212,null],[12,"debug_directory_size","","",212,null],[12,"section_alignment","","",212,null],[12,"reserved","","",212,null],[3,"NonPagedDebugInfo","","",null,null],[12,"signature","","",213,null],[12,"flags","","",213,null],[12,"size","","",213,null],[12,"machine","","",213,null],[12,"characteristics","","",213,null],[12,"time_date_stamp","","",213,null],[12,"check_sum","","",213,null],[12,"size_of_image","","",213,null],[12,"image_base","","",213,null],[3,"ImageArchitectureEntry","","",null,null],[12,"fixup_inst_rva","","RVA of instruction to fixup",214,null],[12,"new_inst","","fixup instruction (see alphaops.h)",214,null],[3,"ImportObjectHeader","","",null,null],[12,"sig1","","Must be IMAGE_FILE_MACHINE_UNKNOWN",215,null],[12,"sig2","","Must be IMPORT_OBJECT_HDR_SIG2.",215,null],[12,"version","","",215,null],[12,"machine","","",215,null],[12,"time_date_stamp","","Time/date stamp",215,null],[12,"size_of_data","","particularly useful for incremental links",215,null],[12,"ordinal_or_hint","","if grf & IMPORT_OBJECT_ORDINAL",215,null],[12,"name_type","","",215,null],[3,"ImageCor20Header","","",null,null],[12,"cb","","",216,null],[12,"major_runtime_version","","",216,null],[12,"minor_runtime_version","","",216,null],[12,"meta_data","","",216,null],[12,"flags","","",216,null],[12,"entry_point_token_or_rva","","",216,null],[12,"resources","","",216,null],[12,"strong_name_signature","","",216,null],[12,"code_manager_table","","",216,null],[12,"vtable_fixups","","",216,null],[12,"export_address_table_jumps","","",216,null],[12,"managed_native_header","","",216,null],[6,"ClsId","","",null,null],[17,"IMAGE_DOS_SIGNATURE","","MZ",null,null],[17,"IMAGE_OS2_SIGNATURE","","NE",null,null],[17,"IMAGE_OS2_SIGNATURE_LE","","LE",null,null],[17,"IMAGE_VXD_SIGNATURE","","LE",null,null],[17,"IMAGE_NT_SIGNATURE","","PE00",null,null],[17,"IMAGE_SIZEOF_FILE_HEADER","","",null,null],[17,"IMAGE_FILE_RELOCS_STRIPPED","","Relocation info stripped from file.",null,null],[17,"IMAGE_FILE_EXECUTABLE_IMAGE","","File is executable (i.e. no unresolved external…",null,null],[17,"IMAGE_FILE_LINE_NUMS_STRIPPED","","Line nunbers stripped from file.",null,null],[17,"IMAGE_FILE_LOCAL_SYMS_STRIPPED","","Local symbols stripped from file.",null,null],[17,"IMAGE_FILE_AGGRESIVE_WS_TRIM","","Aggressively trim working set",null,null],[17,"IMAGE_FILE_LARGE_ADDRESS_AWARE","","App can handle >2gb addresses",null,null],[17,"IMAGE_FILE_BYTES_REVERSED_LO","","Bytes of machine word are reversed.",null,null],[17,"IMAGE_FILE_32BIT_MACHINE","","32 bit word machine.",null,null],[17,"IMAGE_FILE_DEBUG_STRIPPED","","Debugging info stripped from file in .DBG file",null,null],[17,"IMAGE_FILE_REMOVABLE_RUN_FROM_SWAP","","If Image is on removable media, copy and run from the swap…",null,null],[17,"IMAGE_FILE_NET_RUN_FROM_SWAP","","If Image is on Net, copy and run from the swap file.",null,null],[17,"IMAGE_FILE_SYSTEM","","System File.",null,null],[17,"IMAGE_FILE_DLL","","File is a DLL.",null,null],[17,"IMAGE_FILE_UP_SYSTEM_ONLY","","File should only be run on a UP machine",null,null],[17,"IMAGE_FILE_BYTES_REVERSED_HI","","Bytes of machine word are reversed.",null,null],[17,"IMAGE_FILE_MACHINE_UNKNOWN","","",null,null],[17,"IMAGE_FILE_MACHINE_TARGET_HOST","","Useful for indicating we want to interact with the host…",null,null],[17,"IMAGE_FILE_MACHINE_I386","","Intel 386.",null,null],[17,"IMAGE_FILE_MACHINE_R3000","","MIPS little-endian, 0x160 big-endian",null,null],[17,"IMAGE_FILE_MACHINE_R4000","","MIPS little-endian",null,null],[17,"IMAGE_FILE_MACHINE_R10000","","MIPS little-endian",null,null],[17,"IMAGE_FILE_MACHINE_WCEMIPSV2","","MIPS little-endian WCE v2",null,null],[17,"IMAGE_FILE_MACHINE_ALPHA","","Alpha_AXP",null,null],[17,"IMAGE_FILE_MACHINE_SH3","","SH3 little-endian",null,null],[17,"IMAGE_FILE_MACHINE_SH3DSP","","",null,null],[17,"IMAGE_FILE_MACHINE_SH3E","","SH3E little-endian",null,null],[17,"IMAGE_FILE_MACHINE_SH4","","SH4 little-endian",null,null],[17,"IMAGE_FILE_MACHINE_SH5","","SH5",null,null],[17,"IMAGE_FILE_MACHINE_ARM","","ARM Little-Endian",null,null],[17,"IMAGE_FILE_MACHINE_THUMB","","ARM Thumb/Thumb-2 Little-Endian",null,null],[17,"IMAGE_FILE_MACHINE_ARMNT","","ARM Thumb-2 Little-Endian",null,null],[17,"IMAGE_FILE_MACHINE_AM33","","",null,null],[17,"IMAGE_FILE_MACHINE_POWERPC","","IBM PowerPC Little-Endian",null,null],[17,"IMAGE_FILE_MACHINE_POWERPCFP","","",null,null],[17,"IMAGE_FILE_MACHINE_IA64","","Intel 64",null,null],[17,"IMAGE_FILE_MACHINE_MIPS16","","MIPS",null,null],[17,"IMAGE_FILE_MACHINE_ALPHA64","","ALPHA64",null,null],[17,"IMAGE_FILE_MACHINE_MIPSFPU","","MIPS",null,null],[17,"IMAGE_FILE_MACHINE_MIPSFPU16","","MIPS",null,null],[17,"IMAGE_FILE_MACHINE_AXP64","","",null,null],[17,"IMAGE_FILE_MACHINE_TRICORE","","Infineon",null,null],[17,"IMAGE_FILE_MACHINE_CEF","","",null,null],[17,"IMAGE_FILE_MACHINE_EBC","","EFI Byte Code",null,null],[17,"IMAGE_FILE_MACHINE_AMD64","","AMD64 (K8)",null,null],[17,"IMAGE_FILE_MACHINE_M32R","","M32R little-endian",null,null],[17,"IMAGE_FILE_MACHINE_ARM64","","ARM64 Little-Endian",null,null],[17,"IMAGE_FILE_MACHINE_CEE","","",null,null],[17,"IMAGE_NUMBEROF_DIRECTORY_ENTRIES","","",null,null],[17,"IMAGE_NT_OPTIONAL_HDR32_MAGIC","","",null,null],[17,"IMAGE_NT_OPTIONAL_HDR64_MAGIC","","",null,null],[17,"IMAGE_ROM_OPTIONAL_HDR_MAGIC","","",null,null],[17,"IMAGE_SUBSYSTEM_UNKNOWN","","Unknown subsystem.",null,null],[17,"IMAGE_SUBSYSTEM_NATIVE","","Image doesn't require a subsystem.",null,null],[17,"IMAGE_SUBSYSTEM_WINDOWS_GUI","","Image runs in the Windows GUI subsystem.",null,null],[17,"IMAGE_SUBSYSTEM_WINDOWS_CUI","","Image runs in the Windows character subsystem.",null,null],[17,"IMAGE_SUBSYSTEM_OS2_CUI","","image runs in the OS/2 character subsystem.",null,null],[17,"IMAGE_SUBSYSTEM_POSIX_CUI","","image runs in the Posix character subsystem.",null,null],[17,"IMAGE_SUBSYSTEM_NATIVE_WINDOWS","","image is a native Win9x driver.",null,null],[17,"IMAGE_SUBSYSTEM_WINDOWS_CE_GUI","","Image runs in the Windows CE subsystem.",null,null],[17,"IMAGE_SUBSYSTEM_EFI_APPLICATION","","",null,null],[17,"IMAGE_SUBSYSTEM_EFI_BOOT_SERVICE_DRIVER","","",null,null],[17,"IMAGE_SUBSYSTEM_EFI_RUNTIME_DRIVER","","",null,null],[17,"IMAGE_SUBSYSTEM_EFI_ROM","","",null,null],[17,"IMAGE_SUBSYSTEM_XBOX","","",null,null],[17,"IMAGE_SUBSYSTEM_WINDOWS_BOOT_APPLICATION","","",null,null],[17,"IMAGE_SUBSYSTEM_XBOX_CODE_CATALOG","","",null,null],[17,"IMAGE_DLLCHARACTERISTICS_HIGH_ENTROPY_VA","","Image can handle a high entropy 64-bit virtual address…",null,null],[17,"IMAGE_DLLCHARACTERISTICS_DYNAMIC_BASE","","DLL can move.",null,null],[17,"IMAGE_DLLCHARACTERISTICS_FORCE_INTEGRITY","","Code Integrity Image",null,null],[17,"IMAGE_DLLCHARACTERISTICS_NX_COMPAT","","Image is NX compatible",null,null],[17,"IMAGE_DLLCHARACTERISTICS_NO_ISOLATION","","Image understands isolation and doesn't want it",null,null],[17,"IMAGE_DLLCHARACTERISTICS_NO_SEH","","Image does not use SEH. No SE handler may reside in this…",null,null],[17,"IMAGE_DLLCHARACTERISTICS_NO_BIND","","Do not bind this image.",null,null],[17,"IMAGE_DLLCHARACTERISTICS_APPCONTAINER","","Image should execute in an AppContainer",null,null],[17,"IMAGE_DLLCHARACTERISTICS_WDM_DRIVER","","Driver uses WDM model",null,null],[17,"IMAGE_DLLCHARACTERISTICS_GUARD_CF","","Image supports Control Flow Guard.",null,null],[17,"IMAGE_DLLCHARACTERISTICS_TERMINAL_SERVER_AWARE","","",null,null],[17,"IMAGE_DIRECTORY_ENTRY_EXPORT","","Export Directory",null,null],[17,"IMAGE_DIRECTORY_ENTRY_IMPORT","","Import Directory",null,null],[17,"IMAGE_DIRECTORY_ENTRY_RESOURCE","","Resource Directory",null,null],[17,"IMAGE_DIRECTORY_ENTRY_EXCEPTION","","Exception Directory",null,null],[17,"IMAGE_DIRECTORY_ENTRY_SECURITY","","Security Directory",null,null],[17,"IMAGE_DIRECTORY_ENTRY_BASERELOC","","Base Relocation Table",null,null],[17,"IMAGE_DIRECTORY_ENTRY_DEBUG","","Debug Directory",null,null],[17,"IMAGE_DIRECTORY_ENTRY_ARCHITECTURE","","Architecture Specific Data",null,null],[17,"IMAGE_DIRECTORY_ENTRY_GLOBALPTR","","RVA of GP",null,null],[17,"IMAGE_DIRECTORY_ENTRY_TLS","","TLS Directory",null,null],[17,"IMAGE_DIRECTORY_ENTRY_LOAD_CONFIG","","Load Configuration Directory",null,null],[17,"IMAGE_DIRECTORY_ENTRY_BOUND_IMPORT","","Bound Import Directory in headers",null,null],[17,"IMAGE_DIRECTORY_ENTRY_IAT","","Import Address Table",null,null],[17,"IMAGE_DIRECTORY_ENTRY_DELAY_IMPORT","","Delay Load Import Descriptors",null,null],[17,"IMAGE_DIRECTORY_ENTRY_COM_DESCRIPTOR","","COM Runtime descriptor",null,null],[17,"IMAGE_SIZEOF_SHORT_NAME","","",null,null],[17,"IMAGE_SIZEOF_SECTION_HEADER","","",null,null],[17,"IMAGE_SCN_TYPE_NO_PAD","","Reserved.",null,null],[17,"IMAGE_SCN_CNT_CODE","","Section contains code.",null,null],[17,"IMAGE_SCN_CNT_INITIALIZED_DATA","","Section contains initialized data.",null,null],[17,"IMAGE_SCN_CNT_UNINITIALIZED_DATA","","Section contains uninitialized data.",null,null],[17,"IMAGE_SCN_LNK_OTHER","","Reserved.",null,null],[17,"IMAGE_SCN_LNK_INFO","","Section contains comments or some other type of information.",null,null],[17,"IMAGE_SCN_LNK_REMOVE","","Section contents will not become part of image.",null,null],[17,"IMAGE_SCN_LNK_COMDAT","","Section contents comdat.",null,null],[17,"IMAGE_SCN_NO_DEFER_SPEC_EXC","","Reset speculative exceptions handling bits in the TLB…",null,null],[17,"IMAGE_SCN_GPREL","","Section content can be accessed relative to GP",null,null],[17,"IMAGE_SCN_MEM_FARDATA","","",null,null],[17,"IMAGE_SCN_MEM_PURGEABLE","","",null,null],[17,"IMAGE_SCN_MEM_16BIT","","",null,null],[17,"IMAGE_SCN_MEM_LOCKED","","",null,null],[17,"IMAGE_SCN_MEM_PRELOAD","","",null,null],[17,"IMAGE_SCN_ALIGN_1BYTES","","",null,null],[17,"IMAGE_SCN_ALIGN_2BYTES","","",null,null],[17,"IMAGE_SCN_ALIGN_4BYTES","","",null,null],[17,"IMAGE_SCN_ALIGN_8BYTES","","",null,null],[17,"IMAGE_SCN_ALIGN_16BYTES","","Default alignment if no others are specified.",null,null],[17,"IMAGE_SCN_ALIGN_32BYTES","","",null,null],[17,"IMAGE_SCN_ALIGN_64BYTES","","",null,null],[17,"IMAGE_SCN_ALIGN_128BYTES","","",null,null],[17,"IMAGE_SCN_ALIGN_256BYTES","","",null,null],[17,"IMAGE_SCN_ALIGN_512BYTES","","",null,null],[17,"IMAGE_SCN_ALIGN_1024BYTES","","",null,null],[17,"IMAGE_SCN_ALIGN_2048BYTES","","",null,null],[17,"IMAGE_SCN_ALIGN_4096BYTES","","",null,null],[17,"IMAGE_SCN_ALIGN_8192BYTES","","",null,null],[17,"IMAGE_SCN_ALIGN_MASK","","",null,null],[17,"IMAGE_SCN_LNK_NRELOC_OVFL","","Section contains extended relocations.",null,null],[17,"IMAGE_SCN_MEM_DISCARDABLE","","Section can be discarded.",null,null],[17,"IMAGE_SCN_MEM_NOT_CACHED","","Section is not cachable.",null,null],[17,"IMAGE_SCN_MEM_NOT_PAGED","","Section is not pageable.",null,null],[17,"IMAGE_SCN_MEM_SHARED","","Section is shareable.",null,null],[17,"IMAGE_SCN_MEM_EXECUTE","","Section is executable.",null,null],[17,"IMAGE_SCN_MEM_READ","","Section is readable.",null,null],[17,"IMAGE_SCN_MEM_WRITE","","Section is writeable.",null,null],[17,"IMAGE_SCN_SCALE_INDEX","","Tls index is scaled",null,null],[17,"IMAGE_SIZEOF_SYMBOL","","",null,null],[17,"IMAGE_SIZEOF_SYMBOL_EX","","",null,null],[17,"IMAGE_SYM_UNDEFINED","","Symbol is undefined or is common.",null,null],[17,"IMAGE_SYM_ABSOLUTE","","Symbol is an absolute value.",null,null],[17,"IMAGE_SYM_DEBUG","","Symbol is a special debug item.",null,null],[17,"IMAGE_SYM_SECTION_MAX","","Values 0xFF00-0xFFFF are special",null,null],[17,"IMAGE_SYM_SECTION_MAX_EX","","",null,null],[17,"IMAGE_SYM_TYPE_NULL","","no type.",null,null],[17,"IMAGE_SYM_TYPE_VOID","","",null,null],[17,"IMAGE_SYM_TYPE_CHAR","","type character.",null,null],[17,"IMAGE_SYM_TYPE_SHORT","","type short integer.",null,null],[17,"IMAGE_SYM_TYPE_INT","","",null,null],[17,"IMAGE_SYM_TYPE_LONG","","",null,null],[17,"IMAGE_SYM_TYPE_FLOAT","","",null,null],[17,"IMAGE_SYM_TYPE_DOUBLE","","",null,null],[17,"IMAGE_SYM_TYPE_STRUCT","","",null,null],[17,"IMAGE_SYM_TYPE_UNION","","",null,null],[17,"IMAGE_SYM_TYPE_ENUM","","enumeration.",null,null],[17,"IMAGE_SYM_TYPE_MOE","","member of enumeration.",null,null],[17,"IMAGE_SYM_TYPE_BYTE","","",null,null],[17,"IMAGE_SYM_TYPE_WORD","","",null,null],[17,"IMAGE_SYM_TYPE_UINT","","",null,null],[17,"IMAGE_SYM_TYPE_DWORD","","",null,null],[17,"IMAGE_SYM_TYPE_PCODE","","",null,null],[17,"IMAGE_SYM_DTYPE_NULL","","no derived type.",null,null],[17,"IMAGE_SYM_DTYPE_POINTER","","pointer.",null,null],[17,"IMAGE_SYM_DTYPE_FUNCTION","","function.",null,null],[17,"IMAGE_SYM_DTYPE_ARRAY","","array.",null,null],[17,"IMAGE_SYM_CLASS_END_OF_FUNCTION","","",null,null],[17,"IMAGE_SYM_CLASS_NULL","","",null,null],[17,"IMAGE_SYM_CLASS_AUTOMATIC","","",null,null],[17,"IMAGE_SYM_CLASS_EXTERNAL","","",null,null],[17,"IMAGE_SYM_CLASS_STATIC","","",null,null],[17,"IMAGE_SYM_CLASS_REGISTER","","",null,null],[17,"IMAGE_SYM_CLASS_EXTERNAL_DEF","","",null,null],[17,"IMAGE_SYM_CLASS_LABEL","","",null,null],[17,"IMAGE_SYM_CLASS_UNDEFINED_LABEL","","",null,null],[17,"IMAGE_SYM_CLASS_MEMBER_OF_STRUCT","","",null,null],[17,"IMAGE_SYM_CLASS_ARGUMENT","","",null,null],[17,"IMAGE_SYM_CLASS_STRUCT_TAG","","",null,null],[17,"IMAGE_SYM_CLASS_MEMBER_OF_UNION","","",null,null],[17,"IMAGE_SYM_CLASS_UNION_TAG","","",null,null],[17,"IMAGE_SYM_CLASS_TYPE_DEFINITION","","",null,null],[17,"IMAGE_SYM_CLASS_UNDEFINED_STATIC","","",null,null],[17,"IMAGE_SYM_CLASS_ENUM_TAG","","",null,null],[17,"IMAGE_SYM_CLASS_MEMBER_OF_ENUM","","",null,null],[17,"IMAGE_SYM_CLASS_REGISTER_PARAM","","",null,null],[17,"IMAGE_SYM_CLASS_BIT_FIELD","","",null,null],[17,"IMAGE_SYM_CLASS_FAR_EXTERNAL","","",null,null],[17,"IMAGE_SYM_CLASS_BLOCK","","",null,null],[17,"IMAGE_SYM_CLASS_FUNCTION","","",null,null],[17,"IMAGE_SYM_CLASS_END_OF_STRUCT","","",null,null],[17,"IMAGE_SYM_CLASS_FILE","","",null,null],[17,"IMAGE_SYM_CLASS_SECTION","","",null,null],[17,"IMAGE_SYM_CLASS_WEAK_EXTERNAL","","",null,null],[17,"IMAGE_SYM_CLASS_CLR_TOKEN","","",null,null],[17,"N_BTMASK","","",null,null],[17,"N_TMASK","","",null,null],[17,"N_TMASK1","","",null,null],[17,"N_TMASK2","","",null,null],[17,"N_BTSHFT","","",null,null],[17,"N_TSHIFT","","",null,null],[17,"IMAGE_SYM_DTYPE_SHIFT","","",null,null],[17,"IMAGE_AUX_SYMBOL_TYPE_TOKEN_DEF","","",null,null],[17,"IMAGE_COMDAT_SELECT_NODUPLICATES","","",null,null],[17,"IMAGE_COMDAT_SELECT_ANY","","",null,null],[17,"IMAGE_COMDAT_SELECT_SAME_SIZE","","",null,null],[17,"IMAGE_COMDAT_SELECT_EXACT_MATCH","","",null,null],[17,"IMAGE_COMDAT_SELECT_ASSOCIATIVE","","",null,null],[17,"IMAGE_COMDAT_SELECT_LARGEST","","",null,null],[17,"IMAGE_COMDAT_SELECT_NEWEST","","",null,null],[17,"IMAGE_WEAK_EXTERN_SEARCH_NOLIBRARY","","",null,null],[17,"IMAGE_WEAK_EXTERN_SEARCH_LIBRARY","","",null,null],[17,"IMAGE_WEAK_EXTERN_SEARCH_ALIAS","","",null,null],[17,"IMAGE_WEAK_EXTERN_ANTI_DEPENDENCY","","",null,null],[17,"IMAGE_REL_I386_ABSOLUTE","","Reference is absolute, no relocation is necessary",null,null],[17,"IMAGE_REL_I386_DIR16","","Direct 16-bit reference to the symbols virtual address",null,null],[17,"IMAGE_REL_I386_REL16","","PC-relative 16-bit reference to the symbols virtual address",null,null],[17,"IMAGE_REL_I386_DIR32","","Direct 32-bit reference to the symbols virtual address",null,null],[17,"IMAGE_REL_I386_DIR32NB","","Direct 32-bit reference to the symbols virtual address,…",null,null],[17,"IMAGE_REL_I386_SEG12","","Direct 16-bit reference to the segment-selector bits of a…",null,null],[17,"IMAGE_REL_I386_SECTION","","",null,null],[17,"IMAGE_REL_I386_SECREL","","",null,null],[17,"IMAGE_REL_I386_TOKEN","","clr token",null,null],[17,"IMAGE_REL_I386_SECREL7","","7 bit offset from base of section containing target",null,null],[17,"IMAGE_REL_I386_REL32","","PC-relative 32-bit reference to the symbols virtual address",null,null],[17,"IMAGE_REL_MIPS_ABSOLUTE","","Reference is absolute, no relocation is necessary",null,null],[17,"IMAGE_REL_MIPS_REFHALF","","",null,null],[17,"IMAGE_REL_MIPS_REFWORD","","",null,null],[17,"IMAGE_REL_MIPS_JMPADDR","","",null,null],[17,"IMAGE_REL_MIPS_REFHI","","",null,null],[17,"IMAGE_REL_MIPS_REFLO","","",null,null],[17,"IMAGE_REL_MIPS_GPREL","","",null,null],[17,"IMAGE_REL_MIPS_LITERAL","","",null,null],[17,"IMAGE_REL_MIPS_SECTION","","",null,null],[17,"IMAGE_REL_MIPS_SECREL","","",null,null],[17,"IMAGE_REL_MIPS_SECRELLO","","Low 16-bit section relative referemce (used for >32k TLS)",null,null],[17,"IMAGE_REL_MIPS_SECRELHI","","High 16-bit section relative reference (used for >32k TLS)",null,null],[17,"IMAGE_REL_MIPS_TOKEN","","clr token",null,null],[17,"IMAGE_REL_MIPS_JMPADDR16","","",null,null],[17,"IMAGE_REL_MIPS_REFWORDNB","","",null,null],[17,"IMAGE_REL_MIPS_PAIR","","",null,null],[17,"IMAGE_REL_ALPHA_ABSOLUTE","","",null,null],[17,"IMAGE_REL_ALPHA_REFLONG","","",null,null],[17,"IMAGE_REL_ALPHA_REFQUAD","","",null,null],[17,"IMAGE_REL_ALPHA_GPREL32","","",null,null],[17,"IMAGE_REL_ALPHA_LITERAL","","",null,null],[17,"IMAGE_REL_ALPHA_LITUSE","","",null,null],[17,"IMAGE_REL_ALPHA_GPDISP","","",null,null],[17,"IMAGE_REL_ALPHA_BRADDR","","",null,null],[17,"IMAGE_REL_ALPHA_HINT","","",null,null],[17,"IMAGE_REL_ALPHA_INLINE_REFLONG","","",null,null],[17,"IMAGE_REL_ALPHA_REFHI","","",null,null],[17,"IMAGE_REL_ALPHA_REFLO","","",null,null],[17,"IMAGE_REL_ALPHA_PAIR","","",null,null],[17,"IMAGE_REL_ALPHA_MATCH","","",null,null],[17,"IMAGE_REL_ALPHA_SECTION","","",null,null],[17,"IMAGE_REL_ALPHA_SECREL","","",null,null],[17,"IMAGE_REL_ALPHA_REFLONGNB","","",null,null],[17,"IMAGE_REL_ALPHA_SECRELLO","","Low 16-bit section relative reference",null,null],[17,"IMAGE_REL_ALPHA_SECRELHI","","High 16-bit section relative reference",null,null],[17,"IMAGE_REL_ALPHA_REFQ3","","High 16 bits of 48 bit reference",null,null],[17,"IMAGE_REL_ALPHA_REFQ2","","Middle 16 bits of 48 bit reference",null,null],[17,"IMAGE_REL_ALPHA_REFQ1","","Low 16 bits of 48 bit reference",null,null],[17,"IMAGE_REL_ALPHA_GPRELLO","","Low 16-bit GP relative reference",null,null],[17,"IMAGE_REL_ALPHA_GPRELHI","","High 16-bit GP relative reference",null,null],[17,"IMAGE_REL_PPC_ABSOLUTE","","NOP",null,null],[17,"IMAGE_REL_PPC_ADDR64","","64-bit address",null,null],[17,"IMAGE_REL_PPC_ADDR32","","32-bit address",null,null],[17,"IMAGE_REL_PPC_ADDR24","","26-bit address, shifted left 2 (branch absolute)",null,null],[17,"IMAGE_REL_PPC_ADDR16","","16-bit address",null,null],[17,"IMAGE_REL_PPC_ADDR14","","16-bit address, shifted left 2 (load doubleword)",null,null],[17,"IMAGE_REL_PPC_REL24","","26-bit PC-relative offset, shifted left 2 (branch relative)",null,null],[17,"IMAGE_REL_PPC_REL14","","16-bit PC-relative offset, shifted left 2 (br cond relative)",null,null],[17,"IMAGE_REL_PPC_TOCREL16","","16-bit offset from TOC base",null,null],[17,"IMAGE_REL_PPC_TOCREL14","","16-bit offset from TOC base, shifted left 2 (load…",null,null],[17,"IMAGE_REL_PPC_ADDR32NB","","32-bit addr w/o image base",null,null],[17,"IMAGE_REL_PPC_SECREL","","va of containing section (as in an image sectionhdr)",null,null],[17,"IMAGE_REL_PPC_SECTION","","sectionheader number",null,null],[17,"IMAGE_REL_PPC_IFGLUE","","substitute TOC restore instruction iff symbol is glue code",null,null],[17,"IMAGE_REL_PPC_IMGLUE","","symbol is glue code; virtual address is TOC restore…",null,null],[17,"IMAGE_REL_PPC_SECREL16","","va of containing section (limited to 16 bits)",null,null],[17,"IMAGE_REL_PPC_REFHI","","",null,null],[17,"IMAGE_REL_PPC_REFLO","","",null,null],[17,"IMAGE_REL_PPC_PAIR","","",null,null],[17,"IMAGE_REL_PPC_SECRELLO","","Low 16-bit section relative reference (used for >32k TLS)",null,null],[17,"IMAGE_REL_PPC_SECRELHI","","High 16-bit section relative reference (used for >32k TLS)",null,null],[17,"IMAGE_REL_PPC_GPREL","","",null,null],[17,"IMAGE_REL_PPC_TOKEN","","clr token",null,null],[17,"IMAGE_REL_PPC_TYPEMASK","","mask to isolate above values in IMAGE_RELOCATION.Type",null,null],[17,"IMAGE_REL_PPC_NEG","","subtract reloc value rather than adding it",null,null],[17,"IMAGE_REL_PPC_BRTAKEN","","fix branch prediction bit to predict branch taken",null,null],[17,"IMAGE_REL_PPC_BRNTAKEN","","fix branch prediction bit to predict branch not taken",null,null],[17,"IMAGE_REL_PPC_TOCDEFN","","toc slot defined in file (or, data in toc)",null,null],[17,"IMAGE_REL_SH3_ABSOLUTE","","No relocation",null,null],[17,"IMAGE_REL_SH3_DIRECT16","","16 bit direct",null,null],[17,"IMAGE_REL_SH3_DIRECT32","","32 bit direct",null,null],[17,"IMAGE_REL_SH3_DIRECT8","","8 bit direct, -128..255",null,null],[17,"IMAGE_REL_SH3_DIRECT8_WORD","","8 bit direct .W (0 ext.)",null,null],[17,"IMAGE_REL_SH3_DIRECT8_LONG","","8 bit direct .L (0 ext.)",null,null],[17,"IMAGE_REL_SH3_DIRECT4","","4 bit direct (0 ext.)",null,null],[17,"IMAGE_REL_SH3_DIRECT4_WORD","","4 bit direct .W (0 ext.)",null,null],[17,"IMAGE_REL_SH3_DIRECT4_LONG","","4 bit direct .L (0 ext.)",null,null],[17,"IMAGE_REL_SH3_PCREL8_WORD","","8 bit PC relative .W",null,null],[17,"IMAGE_REL_SH3_PCREL8_LONG","","8 bit PC relative .L",null,null],[17,"IMAGE_REL_SH3_PCREL12_WORD","","12 LSB PC relative .W",null,null],[17,"IMAGE_REL_SH3_STARTOF_SECTION","","Start of EXE section",null,null],[17,"IMAGE_REL_SH3_SIZEOF_SECTION","","Size of EXE section",null,null],[17,"IMAGE_REL_SH3_SECTION","","Section table index",null,null],[17,"IMAGE_REL_SH3_SECREL","","Offset within section",null,null],[17,"IMAGE_REL_SH3_DIRECT32_NB","","32 bit direct not based",null,null],[17,"IMAGE_REL_SH3_GPREL4_LONG","","GP-relative addressing",null,null],[17,"IMAGE_REL_SH3_TOKEN","","clr token",null,null],[17,"IMAGE_REL_SHM_PCRELPT","","Offset from current instruction in longwords if not…",null,null],[17,"IMAGE_REL_SHM_REFLO","","Low bits of 32-bit address",null,null],[17,"IMAGE_REL_SHM_REFHALF","","High bits of 32-bit address",null,null],[17,"IMAGE_REL_SHM_RELLO","","Low bits of relative reference",null,null],[17,"IMAGE_REL_SHM_RELHALF","","High bits of relative reference",null,null],[17,"IMAGE_REL_SHM_PAIR","","offset operand for relocation",null,null],[17,"IMAGE_REL_SH_NOMODE","","relocation ignores section mode",null,null],[17,"IMAGE_REL_ARM_ABSOLUTE","","No relocation required",null,null],[17,"IMAGE_REL_ARM_ADDR32","","32 bit address",null,null],[17,"IMAGE_REL_ARM_ADDR32NB","","32 bit address w/o image base",null,null],[17,"IMAGE_REL_ARM_BRANCH24","","24 bit offset << 2 & sign ext.",null,null],[17,"IMAGE_REL_ARM_BRANCH11","","Thumb: 2 11 bit offsets",null,null],[17,"IMAGE_REL_ARM_TOKEN","","clr token",null,null],[17,"IMAGE_REL_ARM_GPREL12","","GP-relative addressing (ARM)",null,null],[17,"IMAGE_REL_ARM_GPREL7","","GP-relative addressing (Thumb)",null,null],[17,"IMAGE_REL_ARM_BLX24","","",null,null],[17,"IMAGE_REL_ARM_BLX11","","",null,null],[17,"IMAGE_REL_ARM_SECTION","","Section table index",null,null],[17,"IMAGE_REL_ARM_SECREL","","Offset within section",null,null],[17,"IMAGE_REL_ARM_MOV32A","","ARM: MOVW/MOVT",null,null],[17,"IMAGE_REL_ARM_MOV32","","ARM: MOVW/MOVT (deprecated)",null,null],[17,"IMAGE_REL_ARM_MOV32T","","Thumb: MOVW/MOVT",null,null],[17,"IMAGE_REL_THUMB_MOV32","","Thumb: MOVW/MOVT (deprecated)",null,null],[17,"IMAGE_REL_ARM_BRANCH20T","","Thumb: 32-bit conditional B",null,null],[17,"IMAGE_REL_THUMB_BRANCH20","","Thumb: 32-bit conditional B (deprecated)",null,null],[17,"IMAGE_REL_ARM_BRANCH24T","","Thumb: 32-bit B or BL",null,null],[17,"IMAGE_REL_THUMB_BRANCH24","","Thumb: 32-bit B or BL (deprecated)",null,null],[17,"IMAGE_REL_ARM_BLX23T","","Thumb: BLX immediate",null,null],[17,"IMAGE_REL_THUMB_BLX23","","Thumb: BLX immediate (deprecated)",null,null],[17,"IMAGE_REL_AM_ABSOLUTE","","",null,null],[17,"IMAGE_REL_AM_ADDR32","","",null,null],[17,"IMAGE_REL_AM_ADDR32NB","","",null,null],[17,"IMAGE_REL_AM_CALL32","","",null,null],[17,"IMAGE_REL_AM_FUNCINFO","","",null,null],[17,"IMAGE_REL_AM_REL32_1","","",null,null],[17,"IMAGE_REL_AM_REL32_2","","",null,null],[17,"IMAGE_REL_AM_SECREL","","",null,null],[17,"IMAGE_REL_AM_SECTION","","",null,null],[17,"IMAGE_REL_AM_TOKEN","","",null,null],[17,"IMAGE_REL_ARM64_ABSOLUTE","","No relocation required",null,null],[17,"IMAGE_REL_ARM64_ADDR32","","32 bit address. Review! do we need it?",null,null],[17,"IMAGE_REL_ARM64_ADDR32NB","","32 bit address w/o image base (RVA: for Data/PData/XData)",null,null],[17,"IMAGE_REL_ARM64_BRANCH26","","26 bit offset << 2 & sign ext. for B & BL",null,null],[17,"IMAGE_REL_ARM64_PAGEBASE_REL21","","ADRP",null,null],[17,"IMAGE_REL_ARM64_REL21","","ADR",null,null],[17,"IMAGE_REL_ARM64_PAGEOFFSET_12A","","ADD/ADDS (immediate) with zero shift, for page offset",null,null],[17,"IMAGE_REL_ARM64_PAGEOFFSET_12L","","LDR (indexed, unsigned immediate), for page offset",null,null],[17,"IMAGE_REL_ARM64_SECREL","","Offset within section",null,null],[17,"IMAGE_REL_ARM64_SECREL_LOW12A","","ADD/ADDS (immediate) with zero shift, for bit 0:11 of…",null,null],[17,"IMAGE_REL_ARM64_SECREL_HIGH12A","","ADD/ADDS (immediate) with zero shift, for bit 12:23 of…",null,null],[17,"IMAGE_REL_ARM64_SECREL_LOW12L","","LDR (indexed, unsigned immediate), for bit 0:11 of section…",null,null],[17,"IMAGE_REL_ARM64_TOKEN","","",null,null],[17,"IMAGE_REL_ARM64_SECTION","","Section table index",null,null],[17,"IMAGE_REL_ARM64_ADDR64","","64 bit address",null,null],[17,"IMAGE_REL_ARM64_BRANCH19","","19 bit offset << 2 & sign ext. for conditional B",null,null],[17,"IMAGE_REL_AMD64_ABSOLUTE","","Reference is absolute, no relocation is necessary",null,null],[17,"IMAGE_REL_AMD64_ADDR64","","64-bit address (VA).",null,null],[17,"IMAGE_REL_AMD64_ADDR32","","32-bit address (VA).",null,null],[17,"IMAGE_REL_AMD64_ADDR32NB","","32-bit address w/o image base (RVA).",null,null],[17,"IMAGE_REL_AMD64_REL32","","32-bit relative address from byte following reloc",null,null],[17,"IMAGE_REL_AMD64_REL32_1","","32-bit relative address from byte distance 1 from reloc",null,null],[17,"IMAGE_REL_AMD64_REL32_2","","32-bit relative address from byte distance 2 from reloc",null,null],[17,"IMAGE_REL_AMD64_REL32_3","","32-bit relative address from byte distance 3 from reloc",null,null],[17,"IMAGE_REL_AMD64_REL32_4","","32-bit relative address from byte distance 4 from reloc",null,null],[17,"IMAGE_REL_AMD64_REL32_5","","32-bit relative address from byte distance 5 from reloc",null,null],[17,"IMAGE_REL_AMD64_SECTION","","Section index",null,null],[17,"IMAGE_REL_AMD64_SECREL","","32 bit offset from base of section containing target",null,null],[17,"IMAGE_REL_AMD64_SECREL7","","7 bit unsigned offset from base of section containing target",null,null],[17,"IMAGE_REL_AMD64_TOKEN","","32 bit metadata token",null,null],[17,"IMAGE_REL_AMD64_SREL32","","32 bit signed span-dependent value emitted into object",null,null],[17,"IMAGE_REL_AMD64_PAIR","","",null,null],[17,"IMAGE_REL_AMD64_SSPAN32","","32 bit signed span-dependent value applied at link time",null,null],[17,"IMAGE_REL_AMD64_EHANDLER","","",null,null],[17,"IMAGE_REL_AMD64_IMPORT_BR","","Indirect branch to an import",null,null],[17,"IMAGE_REL_AMD64_IMPORT_CALL","","Indirect call to an import",null,null],[17,"IMAGE_REL_AMD64_CFG_BR","","Indirect branch to a CFG check",null,null],[17,"IMAGE_REL_AMD64_CFG_BR_REX","","Indirect branch to a CFG check, with REX.W prefix",null,null],[17,"IMAGE_REL_AMD64_CFG_CALL","","Indirect call to a CFG check",null,null],[17,"IMAGE_REL_AMD64_INDIR_BR","","Indirect branch to a target in RAX (no CFG)",null,null],[17,"IMAGE_REL_AMD64_INDIR_BR_REX","","Indirect branch to a target in RAX, with REX.W prefix (no…",null,null],[17,"IMAGE_REL_AMD64_INDIR_CALL","","Indirect call to a target in RAX (no CFG)",null,null],[17,"IMAGE_REL_AMD64_INDIR_BR_SWITCHTABLE_FIRST","","Indirect branch for a switch table using Reg 0 (RAX)",null,null],[17,"IMAGE_REL_AMD64_INDIR_BR_SWITCHTABLE_LAST","","Indirect branch for a switch table using Reg 15 (R15)",null,null],[17,"IMAGE_REL_IA64_ABSOLUTE","","",null,null],[17,"IMAGE_REL_IA64_IMM14","","",null,null],[17,"IMAGE_REL_IA64_IMM22","","",null,null],[17,"IMAGE_REL_IA64_IMM64","","",null,null],[17,"IMAGE_REL_IA64_DIR32","","",null,null],[17,"IMAGE_REL_IA64_DIR64","","",null,null],[17,"IMAGE_REL_IA64_PCREL21B","","",null,null],[17,"IMAGE_REL_IA64_PCREL21M","","",null,null],[17,"IMAGE_REL_IA64_PCREL21F","","",null,null],[17,"IMAGE_REL_IA64_GPREL22","","",null,null],[17,"IMAGE_REL_IA64_LTOFF22","","",null,null],[17,"IMAGE_REL_IA64_SECTION","","",null,null],[17,"IMAGE_REL_IA64_SECREL22","","",null,null],[17,"IMAGE_REL_IA64_SECREL64I","","",null,null],[17,"IMAGE_REL_IA64_SECREL32","","",null,null],[17,"IMAGE_REL_IA64_DIR32NB","","",null,null],[17,"IMAGE_REL_IA64_SREL14","","",null,null],[17,"IMAGE_REL_IA64_SREL22","","",null,null],[17,"IMAGE_REL_IA64_SREL32","","",null,null],[17,"IMAGE_REL_IA64_UREL32","","",null,null],[17,"IMAGE_REL_IA64_PCREL60X","","This is always a BRL and never converted",null,null],[17,"IMAGE_REL_IA64_PCREL60B","","If possible, convert to MBB bundle with NOP.B in slot 1",null,null],[17,"IMAGE_REL_IA64_PCREL60F","","If possible, convert to MFB bundle with NOP.F in slot 1",null,null],[17,"IMAGE_REL_IA64_PCREL60I","","If possible, convert to MIB bundle with NOP.I in slot 1",null,null],[17,"IMAGE_REL_IA64_PCREL60M","","If possible, convert to MMB bundle with NOP.M in slot 1",null,null],[17,"IMAGE_REL_IA64_IMMGPREL64","","",null,null],[17,"IMAGE_REL_IA64_TOKEN","","clr token",null,null],[17,"IMAGE_REL_IA64_GPREL32","","",null,null],[17,"IMAGE_REL_IA64_ADDEND","","",null,null],[17,"IMAGE_REL_CEF_ABSOLUTE","","Reference is absolute, no relocation is necessary",null,null],[17,"IMAGE_REL_CEF_ADDR32","","32-bit address (VA).",null,null],[17,"IMAGE_REL_CEF_ADDR64","","64-bit address (VA).",null,null],[17,"IMAGE_REL_CEF_ADDR32NB","","32-bit address w/o image base (RVA).",null,null],[17,"IMAGE_REL_CEF_SECTION","","Section index",null,null],[17,"IMAGE_REL_CEF_SECREL","","32 bit offset from base of section containing target",null,null],[17,"IMAGE_REL_CEF_TOKEN","","32 bit metadata token",null,null],[17,"IMAGE_REL_CEE_ABSOLUTE","","Reference is absolute, no relocation is necessary",null,null],[17,"IMAGE_REL_CEE_ADDR32","","32-bit address (VA).",null,null],[17,"IMAGE_REL_CEE_ADDR64","","64-bit address (VA).",null,null],[17,"IMAGE_REL_CEE_ADDR32NB","","32-bit address w/o image base (RVA).",null,null],[17,"IMAGE_REL_CEE_SECTION","","Section index",null,null],[17,"IMAGE_REL_CEE_SECREL","","32 bit offset from base of section containing target",null,null],[17,"IMAGE_REL_CEE_TOKEN","","32 bit metadata token",null,null],[17,"IMAGE_REL_M32R_ABSOLUTE","","No relocation required",null,null],[17,"IMAGE_REL_M32R_ADDR32","","32 bit address",null,null],[17,"IMAGE_REL_M32R_ADDR32NB","","32 bit address w/o image base",null,null],[17,"IMAGE_REL_M32R_ADDR24","","24 bit address",null,null],[17,"IMAGE_REL_M32R_GPREL16","","GP relative addressing",null,null],[17,"IMAGE_REL_M32R_PCREL24","","24 bit offset << 2 & sign ext.",null,null],[17,"IMAGE_REL_M32R_PCREL16","","16 bit offset << 2 & sign ext.",null,null],[17,"IMAGE_REL_M32R_PCREL8","","8 bit offset << 2 & sign ext.",null,null],[17,"IMAGE_REL_M32R_REFHALF","","16 MSBs",null,null],[17,"IMAGE_REL_M32R_REFHI","","16 MSBs; adj for LSB sign ext.",null,null],[17,"IMAGE_REL_M32R_REFLO","","16 LSBs",null,null],[17,"IMAGE_REL_M32R_PAIR","","Link HI and LO",null,null],[17,"IMAGE_REL_M32R_SECTION","","Section table index",null,null],[17,"IMAGE_REL_M32R_SECREL32","","32 bit section relative reference",null,null],[17,"IMAGE_REL_M32R_TOKEN","","clr token",null,null],[17,"IMAGE_REL_EBC_ABSOLUTE","","No relocation required",null,null],[17,"IMAGE_REL_EBC_ADDR32NB","","32 bit address w/o image base",null,null],[17,"IMAGE_REL_EBC_REL32","","32-bit relative address from byte following reloc",null,null],[17,"IMAGE_REL_EBC_SECTION","","Section table index",null,null],[17,"IMAGE_REL_EBC_SECREL","","Offset within section",null,null],[17,"EMARCH_ENC_I17_IMM7B_INST_WORD_X","","Intel-IA64-Filler",null,null],[17,"EMARCH_ENC_I17_IMM7B_SIZE_X","","Intel-IA64-Filler",null,null],[17,"EMARCH_ENC_I17_IMM7B_INST_WORD_POS_X","","Intel-IA64-Filler",null,null],[17,"EMARCH_ENC_I17_IMM7B_VAL_POS_X","","Intel-IA64-Filler",null,null],[17,"EMARCH_ENC_I17_IMM9D_INST_WORD_X","","Intel-IA64-Filler",null,null],[17,"EMARCH_ENC_I17_IMM9D_SIZE_X","","Intel-IA64-Filler",null,null],[17,"EMARCH_ENC_I17_IMM9D_INST_WORD_POS_X","","Intel-IA64-Filler",null,null],[17,"EMARCH_ENC_I17_IMM9D_VAL_POS_X","","Intel-IA64-Filler",null,null],[17,"EMARCH_ENC_I17_IMM5C_INST_WORD_X","","Intel-IA64-Filler",null,null],[17,"EMARCH_ENC_I17_IMM5C_SIZE_X","","Intel-IA64-Filler",null,null],[17,"EMARCH_ENC_I17_IMM5C_INST_WORD_POS_X","","Intel-IA64-Filler",null,null],[17,"EMARCH_ENC_I17_IMM5C_VAL_POS_X","","Intel-IA64-Filler",null,null],[17,"EMARCH_ENC_I17_IC_INST_WORD_X","","Intel-IA64-Filler",null,null],[17,"EMARCH_ENC_I17_IC_SIZE_X","","Intel-IA64-Filler",null,null],[17,"EMARCH_ENC_I17_IC_INST_WORD_POS_X","","Intel-IA64-Filler",null,null],[17,"EMARCH_ENC_I17_IC_VAL_POS_X","","Intel-IA64-Filler",null,null],[17,"EMARCH_ENC_I17_IMM41A_INST_WORD_X","","Intel-IA64-Filler",null,null],[17,"EMARCH_ENC_I17_IMM41A_SIZE_X","","Intel-IA64-Filler",null,null],[17,"EMARCH_ENC_I17_IMM41A_INST_WORD_POS_X","","Intel-IA64-Filler",null,null],[17,"EMARCH_ENC_I17_IMM41A_VAL_POS_X","","Intel-IA64-Filler",null,null],[17,"EMARCH_ENC_I17_IMM41B_INST_WORD_X","","Intel-IA64-Filler",null,null],[17,"EMARCH_ENC_I17_IMM41B_SIZE_X","","Intel-IA64-Filler",null,null],[17,"EMARCH_ENC_I17_IMM41B_INST_WORD_POS_X","","Intel-IA64-Filler",null,null],[17,"EMARCH_ENC_I17_IMM41B_VAL_POS_X","","Intel-IA64-Filler",null,null],[17,"EMARCH_ENC_I17_IMM41C_INST_WORD_X","","Intel-IA64-Filler",null,null],[17,"EMARCH_ENC_I17_IMM41C_SIZE_X","","Intel-IA64-Filler",null,null],[17,"EMARCH_ENC_I17_IMM41C_INST_WORD_POS_X","","Intel-IA64-Filler",null,null],[17,"EMARCH_ENC_I17_IMM41C_VAL_POS_X","","Intel-IA64-Filler",null,null],[17,"EMARCH_ENC_I17_SIGN_INST_WORD_X","","Intel-IA64-Filler",null,null],[17,"EMARCH_ENC_I17_SIGN_SIZE_X","","Intel-IA64-Filler",null,null],[17,"EMARCH_ENC_I17_SIGN_INST_WORD_POS_X","","Intel-IA64-Filler",null,null],[17,"EMARCH_ENC_I17_SIGN_VAL_POS_X","","Intel-IA64-Filler",null,null],[17,"X3_OPCODE_INST_WORD_X","","Intel-IA64-Filler",null,null],[17,"X3_OPCODE_SIZE_X","","Intel-IA64-Filler",null,null],[17,"X3_OPCODE_INST_WORD_POS_X","","Intel-IA64-Filler",null,null],[17,"X3_OPCODE_SIGN_VAL_POS_X","","Intel-IA64-Filler",null,null],[17,"X3_I_INST_WORD_X","","Intel-IA64-Filler",null,null],[17,"X3_I_SIZE_X","","Intel-IA64-Filler",null,null],[17,"X3_I_INST_WORD_POS_X","","Intel-IA64-Filler",null,null],[17,"X3_I_SIGN_VAL_POS_X","","Intel-IA64-Filler",null,null],[17,"X3_D_WH_INST_WORD_X","","Intel-IA64-Filler",null,null],[17,"X3_D_WH_SIZE_X","","Intel-IA64-Filler",null,null],[17,"X3_D_WH_INST_WORD_POS_X","","Intel-IA64-Filler",null,null],[17,"X3_D_WH_SIGN_VAL_POS_X","","Intel-IA64-Filler",null,null],[17,"X3_IMM20_INST_WORD_X","","Intel-IA64-Filler",null,null],[17,"X3_IMM20_SIZE_X","","Intel-IA64-Filler",null,null],[17,"X3_IMM20_INST_WORD_POS_X","","Intel-IA64-Filler",null,null],[17,"X3_IMM20_SIGN_VAL_POS_X","","Intel-IA64-Filler",null,null],[17,"X3_IMM39_1_INST_WORD_X","","Intel-IA64-Filler",null,null],[17,"X3_IMM39_1_SIZE_X","","Intel-IA64-Filler",null,null],[17,"X3_IMM39_1_INST_WORD_POS_X","","Intel-IA64-Filler",null,null],[17,"X3_IMM39_1_SIGN_VAL_POS_X","","Intel-IA64-Filler",null,null],[17,"X3_IMM39_2_INST_WORD_X","","Intel-IA64-Filler",null,null],[17,"X3_IMM39_2_SIZE_X","","Intel-IA64-Filler",null,null],[17,"X3_IMM39_2_INST_WORD_POS_X","","Intel-IA64-Filler",null,null],[17,"X3_IMM39_2_SIGN_VAL_POS_X","","Intel-IA64-Filler",null,null],[17,"X3_P_INST_WORD_X","","Intel-IA64-Filler",null,null],[17,"X3_P_SIZE_X","","Intel-IA64-Filler",null,null],[17,"X3_P_INST_WORD_POS_X","","Intel-IA64-Filler",null,null],[17,"X3_P_SIGN_VAL_POS_X","","Intel-IA64-Filler",null,null],[17,"X3_TMPLT_INST_WORD_X","","Intel-IA64-Filler",null,null],[17,"X3_TMPLT_SIZE_X","","Intel-IA64-Filler",null,null],[17,"X3_TMPLT_INST_WORD_POS_X","","Intel-IA64-Filler",null,null],[17,"X3_TMPLT_SIGN_VAL_POS_X","","Intel-IA64-Filler",null,null],[17,"X3_BTYPE_QP_INST_WORD_X","","Intel-IA64-Filler",null,null],[17,"X3_BTYPE_QP_SIZE_X","","Intel-IA64-Filler",null,null],[17,"X3_BTYPE_QP_INST_WORD_POS_X","","Intel-IA64-Filler",null,null],[17,"X3_BTYPE_QP_INST_VAL_POS_X","","Intel-IA64-Filler",null,null],[17,"X3_EMPTY_INST_WORD_X","","Intel-IA64-Filler",null,null],[17,"X3_EMPTY_SIZE_X","","Intel-IA64-Filler",null,null],[17,"X3_EMPTY_INST_WORD_POS_X","","Intel-IA64-Filler",null,null],[17,"X3_EMPTY_INST_VAL_POS_X","","Intel-IA64-Filler",null,null],[17,"IMAGE_REL_BASED_ABSOLUTE","","",null,null],[17,"IMAGE_REL_BASED_HIGH","","",null,null],[17,"IMAGE_REL_BASED_LOW","","",null,null],[17,"IMAGE_REL_BASED_HIGHLOW","","",null,null],[17,"IMAGE_REL_BASED_HIGHADJ","","",null,null],[17,"IMAGE_REL_BASED_MACHINE_SPECIFIC_5","","",null,null],[17,"IMAGE_REL_BASED_RESERVED","","",null,null],[17,"IMAGE_REL_BASED_MACHINE_SPECIFIC_7","","",null,null],[17,"IMAGE_REL_BASED_MACHINE_SPECIFIC_8","","",null,null],[17,"IMAGE_REL_BASED_MACHINE_SPECIFIC_9","","",null,null],[17,"IMAGE_REL_BASED_DIR64","","",null,null],[17,"IMAGE_REL_BASED_IA64_IMM64","","",null,null],[17,"IMAGE_REL_BASED_MIPS_JMPADDR","","",null,null],[17,"IMAGE_REL_BASED_MIPS_JMPADDR16","","",null,null],[17,"IMAGE_REL_BASED_ARM_MOV32","","",null,null],[17,"IMAGE_REL_BASED_THUMB_MOV32","","",null,null],[17,"IMAGE_ARCHIVE_START_SIZE","","",null,null],[17,"IMAGE_ARCHIVE_START","","",null,null],[17,"IMAGE_ARCHIVE_END","","",null,null],[17,"IMAGE_ARCHIVE_PAD","","",null,null],[17,"IMAGE_ARCHIVE_LINKER_MEMBER","","",null,null],[17,"IMAGE_ARCHIVE_LONGNAMES_MEMBER","","",null,null],[17,"IMAGE_ARCHIVE_HYBRIDMAP_MEMBER","","",null,null],[17,"IMAGE_SIZEOF_ARCHIVE_MEMBER_HDR","","",null,null],[17,"IMAGE_DELAYLOAD_RVA_BASED","","Delay load version 2 flag for…",null,null],[17,"IMAGE_RESOURCE_NAME_IS_STRING","","",null,null],[17,"IMAGE_RESOURCE_DATA_IS_DIRECTORY","","",null,null],[17,"IMAGE_DYNAMIC_RELOCATION_GUARD_RF_PROLOGUE","","",null,null],[17,"IMAGE_DYNAMIC_RELOCATION_GUARD_RF_EPILOGUE","","",null,null],[17,"IMAGE_DYNAMIC_RELOCATION_GUARD_IMPORT_CONTROL_TRANSFER","","",null,null],[17,"IMAGE_DYNAMIC_RELOCATION_GUARD_INDIR_CONTROL_TRANSFER","","",null,null],[17,"IMAGE_DYNAMIC_RELOCATION_GUARD_SWITCHTABLE_BRANCH","","",null,null],[17,"IMAGE_HOT_PATCH_BASE_OBLIGATORY","","",null,null],[17,"IMAGE_HOT_PATCH_BASE_CAN_ROLL_BACK","","",null,null],[17,"IMAGE_HOT_PATCH_CHUNK_INVERSE","","",null,null],[17,"IMAGE_HOT_PATCH_CHUNK_OBLIGATORY","","",null,null],[17,"IMAGE_HOT_PATCH_CHUNK_RESERVED","","",null,null],[17,"IMAGE_HOT_PATCH_CHUNK_TYPE","","",null,null],[17,"IMAGE_HOT_PATCH_CHUNK_SOURCE_RVA","","",null,null],[17,"IMAGE_HOT_PATCH_CHUNK_TARGET_RVA","","",null,null],[17,"IMAGE_HOT_PATCH_CHUNK_SIZE","","",null,null],[17,"IMAGE_HOT_PATCH_NONE","","",null,null],[17,"IMAGE_HOT_PATCH_FUNCTION","","",null,null],[17,"IMAGE_HOT_PATCH_ABSOLUTE","","",null,null],[17,"IMAGE_HOT_PATCH_REL32","","",null,null],[17,"IMAGE_HOT_PATCH_CALL_TARGET","","",null,null],[17,"IMAGE_HOT_PATCH_INDIRECT","","",null,null],[17,"IMAGE_HOT_PATCH_NO_CALL_TARGET","","",null,null],[17,"IMAGE_HOT_PATCH_DYNAMIC_VALUE","","",null,null],[17,"IMAGE_GUARD_CF_INSTRUMENTED","","Module performs control flow integrity checks using…",null,null],[17,"IMAGE_GUARD_CFW_INSTRUMENTED","","Module performs control flow and write integrity checks",null,null],[17,"IMAGE_GUARD_CF_FUNCTION_TABLE_PRESENT","","Module contains valid control flow target metadata",null,null],[17,"IMAGE_GUARD_SECURITY_COOKIE_UNUSED","","Module does not make use of the /GS security cookie",null,null],[17,"IMAGE_GUARD_PROTECT_DELAYLOAD_IAT","","Module supports read only delay load IAT",null,null],[17,"IMAGE_GUARD_DELAYLOAD_IAT_IN_ITS_OWN_SECTION","","Delayload import table in its own .didat section (with…",null,null],[17,"IMAGE_GUARD_CF_EXPORT_SUPPRESSION_INFO_PRESENT","","Module contains suppressed export information.",null,null],[17,"IMAGE_GUARD_CF_ENABLE_EXPORT_SUPPRESSION","","Module enables suppression of exports",null,null],[17,"IMAGE_GUARD_CF_LONGJUMP_TABLE_PRESENT","","Module contains longjmp target information",null,null],[17,"IMAGE_GUARD_RF_INSTRUMENTED","","Module contains return flow instrumentation and metadata",null,null],[17,"IMAGE_GUARD_RF_ENABLE","","Module requests that the OS enable return flow protection",null,null],[17,"IMAGE_GUARD_RF_STRICT","","Module requests that the OS enable return flow protection…",null,null],[17,"IMAGE_GUARD_RETPOLINE_PRESENT","","Module was built with retpoline support",null,null],[17,"IMAGE_GUARD_CF_FUNCTION_TABLE_SIZE_MASK","","Stride of Guard CF function table encoded in these bits…",null,null],[17,"IMAGE_GUARD_CF_FUNCTION_TABLE_SIZE_SHIFT","","Shift to right-justify Guard CF function table stride",null,null],[17,"IMAGE_GUARD_FLAG_FID_SUPPRESSED","","The containing GFID entry is suppressed",null,null],[17,"IMAGE_GUARD_FLAG_EXPORT_SUPPRESSED","","The containing GFID entry is export suppressed",null,null],[17,"IMAGE_ENCLAVE_LONG_ID_LENGTH","","",null,null],[17,"IMAGE_ENCLAVE_SHORT_ID_LENGTH","","",null,null],[17,"IMAGE_ENCLAVE_POLICY_DEBUGGABLE","","",null,null],[17,"IMAGE_ENCLAVE_FLAG_PRIMARY_IMAGE","","",null,null],[17,"IMAGE_ENCLAVE_IMPORT_MATCH_NONE","","",null,null],[17,"IMAGE_ENCLAVE_IMPORT_MATCH_UNIQUE_ID","","",null,null],[17,"IMAGE_ENCLAVE_IMPORT_MATCH_AUTHOR_ID","","",null,null],[17,"IMAGE_ENCLAVE_IMPORT_MATCH_FAMILY_ID","","",null,null],[17,"IMAGE_ENCLAVE_IMPORT_MATCH_IMAGE_ID","","",null,null],[17,"IMAGE_DEBUG_TYPE_UNKNOWN","","",null,null],[17,"IMAGE_DEBUG_TYPE_COFF","","",null,null],[17,"IMAGE_DEBUG_TYPE_CODEVIEW","","",null,null],[17,"IMAGE_DEBUG_TYPE_FPO","","",null,null],[17,"IMAGE_DEBUG_TYPE_MISC","","",null,null],[17,"IMAGE_DEBUG_TYPE_EXCEPTION","","",null,null],[17,"IMAGE_DEBUG_TYPE_FIXUP","","",null,null],[17,"IMAGE_DEBUG_TYPE_OMAP_TO_SRC","","",null,null],[17,"IMAGE_DEBUG_TYPE_OMAP_FROM_SRC","","",null,null],[17,"IMAGE_DEBUG_TYPE_BORLAND","","",null,null],[17,"IMAGE_DEBUG_TYPE_RESERVED10","","",null,null],[17,"IMAGE_DEBUG_TYPE_CLSID","","",null,null],[17,"IMAGE_DEBUG_TYPE_VC_FEATURE","","",null,null],[17,"IMAGE_DEBUG_TYPE_POGO","","",null,null],[17,"IMAGE_DEBUG_TYPE_ILTCG","","",null,null],[17,"IMAGE_DEBUG_TYPE_MPX","","",null,null],[17,"IMAGE_DEBUG_TYPE_REPRO","","",null,null],[17,"FRAME_FPO","","",null,null],[17,"FRAME_TRAP","","",null,null],[17,"FRAME_TSS","","",null,null],[17,"FRAME_NONFPO","","",null,null],[17,"IMAGE_DEBUG_MISC_EXENAME","","",null,null],[17,"IMAGE_SEPARATE_DEBUG_SIGNATURE","","",null,null],[17,"NON_PAGED_DEBUG_SIGNATURE","","",null,null],[17,"IMAGE_SEPARATE_DEBUG_FLAGS_MASK","","",null,null],[17,"IMAGE_SEPARATE_DEBUG_MISMATCH","","when DBG was updated, the old checksum didn't match.",null,null],[17,"IMPORT_OBJECT_HDR_SIG2","","",null,null],[17,"IMPORT_OBJECT_CODE","","",null,null],[17,"IMPORT_OBJECT_DATA","","",null,null],[17,"IMPORT_OBJECT_CONST","","",null,null],[17,"IMPORT_OBJECT_ORDINAL","","Import by ordinal",null,null],[17,"IMPORT_OBJECT_NAME","","Import name == public symbol name.",null,null],[17,"IMPORT_OBJECT_NAME_NO_PREFIX","","Import name == public symbol name skipping leading ?, @,…",null,null],[17,"IMPORT_OBJECT_NAME_UNDECORATE","","Import name == public symbol name skipping leading ?, @,…",null,null],[17,"IMPORT_OBJECT_NAME_EXPORTAS","","Import name == a name is explicitly provided after the DLL…",null,null],[17,"COMIMAGE_FLAGS_ILONLY","","",null,null],[17,"COMIMAGE_FLAGS_32BITREQUIRED","","",null,null],[17,"COMIMAGE_FLAGS_IL_LIBRARY","","",null,null],[17,"COMIMAGE_FLAGS_STRONGNAMESIGNED","","",null,null],[17,"COMIMAGE_FLAGS_NATIVE_ENTRYPOINT","","",null,null],[17,"COMIMAGE_FLAGS_TRACKDEBUGDATA","","",null,null],[17,"COMIMAGE_FLAGS_32BITPREFERRED","","",null,null],[17,"COR_VERSION_MAJOR_V2","","",null,null],[17,"COR_VERSION_MAJOR","","",null,null],[17,"COR_VERSION_MINOR","","",null,null],[17,"COR_DELETED_NAME_LENGTH","","",null,null],[17,"COR_VTABLEGAP_NAME_LENGTH","","",null,null],[17,"NATIVE_TYPE_MAX_CB","","",null,null],[17,"COR_ILMETHOD_SECT_SMALL_MAX_DATASIZE","","",null,null],[17,"IMAGE_COR_MIH_METHODRVA","","",null,null],[17,"IMAGE_COR_MIH_EHRVA","","",null,null],[17,"IMAGE_COR_MIH_BASICBLOCK","","",null,null],[17,"COR_VTABLE_32BIT","","V-table slots are 32-bits in size.",null,null],[17,"COR_VTABLE_64BIT","","V-table slots are 64-bits in size.",null,null],[17,"COR_VTABLE_FROM_UNMANAGED","","If set, transition from unmanaged.",null,null],[17,"COR_VTABLE_FROM_UNMANAGED_RETAIN_APPDOMAIN","","If set, transition from unmanaged with keeping the current…",null,null],[17,"COR_VTABLE_CALL_MOST_DERIVED","","Call most derived method described by",null,null],[17,"IMAGE_COR_EATJ_THUNK_SIZE","","Size of a jump thunk reserved range.",null,null],[17,"MAX_CLASS_NAME","","",null,null],[17,"MAX_PACKAGE_NAME","","",null,null],[11,"base_type","","",159,[[["self"]],["u16"]]],[11,"derived_type","","",159,[[["self"]],["u16"]]],[11,"base_type","","",161,[[["self"]],["u16"]]],[11,"derived_type","","",161,[[["self"]],["u16"]]],[11,"from","object","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"into","","",0,[[],["u"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"into","","",1,[[],["u"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"into","","",2,[[],["u"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"into","","",3,[[],["u"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"into","","",4,[[],["u"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,[[["self"],["t"]]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"into","","",5,[[],["u"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,[[["self"],["t"]]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"into","","",6,[[],["u"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,[[["self"],["t"]]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"into","","",8,[[],["u"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,[[["self"],["t"]]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"into","","",9,[[],["u"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,[[["self"],["t"]]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"into","","",13,[[],["u"]]],[11,"try_into","","",13,[[],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"type_id","","",13,[[["self"]],["typeid"]]],[11,"to_owned","","",13,[[["self"]],["t"]]],[11,"clone_into","","",13,[[["self"],["t"]]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"into","","",17,[[],["u"]]],[11,"try_into","","",17,[[],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"type_id","","",17,[[["self"]],["typeid"]]],[11,"to_owned","","",17,[[["self"]],["t"]]],[11,"clone_into","","",17,[[["self"],["t"]]]],[11,"from","object::endian","",217,[[["t"]],["t"]]],[11,"try_from","","",217,[[["u"]],["result"]]],[11,"into","","",217,[[],["u"]]],[11,"try_into","","",217,[[],["result"]]],[11,"borrow","","",217,[[["self"]],["t"]]],[11,"borrow_mut","","",217,[[["self"]],["t"]]],[11,"type_id","","",217,[[["self"]],["typeid"]]],[11,"to_owned","","",217,[[["self"]],["t"]]],[11,"clone_into","","",217,[[["self"],["t"]]]],[11,"from","","",218,[[["t"]],["t"]]],[11,"try_from","","",218,[[["u"]],["result"]]],[11,"into","","",218,[[],["u"]]],[11,"try_into","","",218,[[],["result"]]],[11,"borrow","","",218,[[["self"]],["t"]]],[11,"borrow_mut","","",218,[[["self"]],["t"]]],[11,"type_id","","",218,[[["self"]],["typeid"]]],[11,"to_owned","","",218,[[["self"]],["t"]]],[11,"clone_into","","",218,[[["self"],["t"]]]],[11,"from","","",23,[[["t"]],["t"]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"into","","",23,[[],["u"]]],[11,"try_into","","",23,[[],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"type_id","","",23,[[["self"]],["typeid"]]],[11,"to_owned","","",23,[[["self"]],["t"]]],[11,"clone_into","","",23,[[["self"],["t"]]]],[11,"from","","",24,[[["t"]],["t"]]],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"into","","",24,[[],["u"]]],[11,"try_into","","",24,[[],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"type_id","","",24,[[["self"]],["typeid"]]],[11,"to_owned","","",24,[[["self"]],["t"]]],[11,"clone_into","","",24,[[["self"],["t"]]]],[11,"from","","",25,[[["t"]],["t"]]],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"into","","",25,[[],["u"]]],[11,"try_into","","",25,[[],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"type_id","","",25,[[["self"]],["typeid"]]],[11,"to_owned","","",25,[[["self"]],["t"]]],[11,"clone_into","","",25,[[["self"],["t"]]]],[11,"from","","",26,[[["t"]],["t"]]],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"into","","",26,[[],["u"]]],[11,"try_into","","",26,[[],["result"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"type_id","","",26,[[["self"]],["typeid"]]],[11,"to_owned","","",26,[[["self"]],["t"]]],[11,"clone_into","","",26,[[["self"],["t"]]]],[11,"from","","",27,[[["t"]],["t"]]],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"into","","",27,[[],["u"]]],[11,"try_into","","",27,[[],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"type_id","","",27,[[["self"]],["typeid"]]],[11,"to_owned","","",27,[[["self"]],["t"]]],[11,"clone_into","","",27,[[["self"],["t"]]]],[11,"from","","",28,[[["t"]],["t"]]],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"into","","",28,[[],["u"]]],[11,"try_into","","",28,[[],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"type_id","","",28,[[["self"]],["typeid"]]],[11,"to_owned","","",28,[[["self"]],["t"]]],[11,"clone_into","","",28,[[["self"],["t"]]]],[11,"from","","",29,[[["t"]],["t"]]],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"into","","",29,[[],["u"]]],[11,"try_into","","",29,[[],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"type_id","","",29,[[["self"]],["typeid"]]],[11,"to_owned","","",29,[[["self"]],["t"]]],[11,"clone_into","","",29,[[["self"],["t"]]]],[11,"from","","",30,[[["t"]],["t"]]],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"into","","",30,[[],["u"]]],[11,"try_into","","",30,[[],["result"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"type_id","","",30,[[["self"]],["typeid"]]],[11,"to_owned","","",30,[[["self"]],["t"]]],[11,"clone_into","","",30,[[["self"],["t"]]]],[11,"from","","",31,[[["t"]],["t"]]],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"into","","",31,[[],["u"]]],[11,"try_into","","",31,[[],["result"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"type_id","","",31,[[["self"]],["typeid"]]],[11,"to_owned","","",31,[[["self"]],["t"]]],[11,"clone_into","","",31,[[["self"],["t"]]]],[11,"from","","",21,[[["t"]],["t"]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"into","","",21,[[],["u"]]],[11,"try_into","","",21,[[],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"type_id","","",21,[[["self"]],["typeid"]]],[11,"to_owned","","",21,[[["self"]],["t"]]],[11,"clone_into","","",21,[[["self"],["t"]]]],[11,"from","object::pod","",32,[[["t"]],["t"]]],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"into","","",32,[[],["u"]]],[11,"try_into","","",32,[[],["result"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"type_id","","",32,[[["self"]],["typeid"]]],[11,"to_owned","","",32,[[["self"]],["t"]]],[11,"clone_into","","",32,[[["self"],["t"]]]],[11,"from","object::read","",39,[[["t"]],["t"]]],[11,"try_from","","",39,[[["u"]],["result"]]],[11,"into","","",39,[[],["u"]]],[11,"try_into","","",39,[[],["result"]]],[11,"borrow","","",39,[[["self"]],["t"]]],[11,"borrow_mut","","",39,[[["self"]],["t"]]],[11,"type_id","","",39,[[["self"]],["typeid"]]],[11,"to_owned","","",39,[[["self"]],["t"]]],[11,"clone_into","","",39,[[["self"],["t"]]]],[11,"from","","",40,[[["t"]],["t"]]],[11,"try_from","","",40,[[["u"]],["result"]]],[11,"into","","",40,[[],["u"]]],[11,"try_into","","",40,[[],["result"]]],[11,"borrow","","",40,[[["self"]],["t"]]],[11,"borrow_mut","","",40,[[["self"]],["t"]]],[11,"type_id","","",40,[[["self"]],["typeid"]]],[11,"from","","",219,[[["t"]],["t"]]],[11,"into_iter","","",219,[[],["i"]]],[11,"try_from","","",219,[[["u"]],["result"]]],[11,"into","","",219,[[],["u"]]],[11,"try_into","","",219,[[],["result"]]],[11,"borrow","","",219,[[["self"]],["t"]]],[11,"borrow_mut","","",219,[[["self"]],["t"]]],[11,"type_id","","",219,[[["self"]],["typeid"]]],[11,"from","","",220,[[["t"]],["t"]]],[11,"try_from","","",220,[[["u"]],["result"]]],[11,"into","","",220,[[],["u"]]],[11,"try_into","","",220,[[],["result"]]],[11,"borrow","","",220,[[["self"]],["t"]]],[11,"borrow_mut","","",220,[[["self"]],["t"]]],[11,"type_id","","",220,[[["self"]],["typeid"]]],[11,"from","","",221,[[["t"]],["t"]]],[11,"into_iter","","",221,[[],["i"]]],[11,"try_from","","",221,[[["u"]],["result"]]],[11,"into","","",221,[[],["u"]]],[11,"try_into","","",221,[[],["result"]]],[11,"borrow","","",221,[[["self"]],["t"]]],[11,"borrow_mut","","",221,[[["self"]],["t"]]],[11,"type_id","","",221,[[["self"]],["typeid"]]],[11,"from","","",222,[[["t"]],["t"]]],[11,"try_from","","",222,[[["u"]],["result"]]],[11,"into","","",222,[[],["u"]]],[11,"try_into","","",222,[[],["result"]]],[11,"borrow","","",222,[[["self"]],["t"]]],[11,"borrow_mut","","",222,[[["self"]],["t"]]],[11,"type_id","","",222,[[["self"]],["typeid"]]],[11,"from","","",223,[[["t"]],["t"]]],[11,"into_iter","","",223,[[],["i"]]],[11,"try_from","","",223,[[["u"]],["result"]]],[11,"into","","",223,[[],["u"]]],[11,"try_into","","",223,[[],["result"]]],[11,"borrow","","",223,[[["self"]],["t"]]],[11,"borrow_mut","","",223,[[["self"]],["t"]]],[11,"type_id","","",223,[[["self"]],["typeid"]]],[11,"from","","",224,[[["t"]],["t"]]],[11,"into_iter","","",224,[[],["i"]]],[11,"try_from","","",224,[[["u"]],["result"]]],[11,"into","","",224,[[],["u"]]],[11,"try_into","","",224,[[],["result"]]],[11,"borrow","","",224,[[["self"]],["t"]]],[11,"borrow_mut","","",224,[[["self"]],["t"]]],[11,"type_id","","",224,[[["self"]],["typeid"]]],[11,"from","","",225,[[["t"]],["t"]]],[11,"try_from","","",225,[[["u"]],["result"]]],[11,"into","","",225,[[],["u"]]],[11,"try_into","","",225,[[],["result"]]],[11,"borrow","","",225,[[["self"]],["t"]]],[11,"borrow_mut","","",225,[[["self"]],["t"]]],[11,"type_id","","",225,[[["self"]],["typeid"]]],[11,"to_owned","","",225,[[["self"]],["t"]]],[11,"clone_into","","",225,[[["self"],["t"]]]],[11,"to_string","","",225,[[["self"]],["string"]]],[11,"from","","",33,[[["t"]],["t"]]],[11,"try_from","","",33,[[["u"]],["result"]]],[11,"into","","",33,[[],["u"]]],[11,"try_into","","",33,[[],["result"]]],[11,"borrow","","",33,[[["self"]],["t"]]],[11,"borrow_mut","","",33,[[["self"]],["t"]]],[11,"type_id","","",33,[[["self"]],["typeid"]]],[11,"to_owned","","",33,[[["self"]],["t"]]],[11,"clone_into","","",33,[[["self"],["t"]]]],[11,"from","","",34,[[["t"]],["t"]]],[11,"try_from","","",34,[[["u"]],["result"]]],[11,"into","","",34,[[],["u"]]],[11,"try_into","","",34,[[],["result"]]],[11,"borrow","","",34,[[["self"]],["t"]]],[11,"borrow_mut","","",34,[[["self"]],["t"]]],[11,"type_id","","",34,[[["self"]],["typeid"]]],[11,"to_owned","","",34,[[["self"]],["t"]]],[11,"clone_into","","",34,[[["self"],["t"]]]],[11,"from","","",68,[[["t"]],["t"]]],[11,"try_from","","",68,[[["u"]],["result"]]],[11,"into","","",68,[[],["u"]]],[11,"try_into","","",68,[[],["result"]]],[11,"borrow","","",68,[[["self"]],["t"]]],[11,"borrow_mut","","",68,[[["self"]],["t"]]],[11,"type_id","","",68,[[["self"]],["typeid"]]],[11,"to_owned","","",68,[[["self"]],["t"]]],[11,"clone_into","","",68,[[["self"],["t"]]]],[11,"from","","",69,[[["t"]],["t"]]],[11,"try_from","","",69,[[["u"]],["result"]]],[11,"into","","",69,[[],["u"]]],[11,"try_into","","",69,[[],["result"]]],[11,"borrow","","",69,[[["self"]],["t"]]],[11,"borrow_mut","","",69,[[["self"]],["t"]]],[11,"type_id","","",69,[[["self"]],["typeid"]]],[11,"from","","",70,[[["t"]],["t"]]],[11,"try_from","","",70,[[["u"]],["result"]]],[11,"into","","",70,[[],["u"]]],[11,"try_into","","",70,[[],["result"]]],[11,"borrow","","",70,[[["self"]],["t"]]],[11,"borrow_mut","","",70,[[["self"]],["t"]]],[11,"type_id","","",70,[[["self"]],["typeid"]]],[11,"from","","",35,[[["t"]],["t"]]],[11,"try_from","","",35,[[["u"]],["result"]]],[11,"into","","",35,[[],["u"]]],[11,"try_into","","",35,[[],["result"]]],[11,"borrow","","",35,[[["self"]],["t"]]],[11,"borrow_mut","","",35,[[["self"]],["t"]]],[11,"type_id","","",35,[[["self"]],["typeid"]]],[11,"to_owned","","",35,[[["self"]],["t"]]],[11,"clone_into","","",35,[[["self"],["t"]]]],[11,"from","","",36,[[["t"]],["t"]]],[11,"try_from","","",36,[[["u"]],["result"]]],[11,"into","","",36,[[],["u"]]],[11,"try_into","","",36,[[],["result"]]],[11,"borrow","","",36,[[["self"]],["t"]]],[11,"borrow_mut","","",36,[[["self"]],["t"]]],[11,"type_id","","",36,[[["self"]],["typeid"]]],[11,"to_owned","","",36,[[["self"]],["t"]]],[11,"clone_into","","",36,[[["self"],["t"]]]],[11,"from","","",37,[[["t"]],["t"]]],[11,"try_from","","",37,[[["u"]],["result"]]],[11,"into","","",37,[[],["u"]]],[11,"try_into","","",37,[[],["result"]]],[11,"borrow","","",37,[[["self"]],["t"]]],[11,"borrow_mut","","",37,[[["self"]],["t"]]],[11,"type_id","","",37,[[["self"]],["typeid"]]],[11,"to_owned","","",37,[[["self"]],["t"]]],[11,"clone_into","","",37,[[["self"],["t"]]]],[11,"from","","",38,[[["t"]],["t"]]],[11,"try_from","","",38,[[["u"]],["result"]]],[11,"into","","",38,[[],["u"]]],[11,"try_into","","",38,[[],["result"]]],[11,"borrow","","",38,[[["self"]],["t"]]],[11,"borrow_mut","","",38,[[["self"]],["t"]]],[11,"type_id","","",38,[[["self"]],["typeid"]]],[11,"to_owned","","",38,[[["self"]],["t"]]],[11,"clone_into","","",38,[[["self"],["t"]]]],[11,"from","object::read::coff","",41,[[["t"]],["t"]]],[11,"try_from","","",41,[[["u"]],["result"]]],[11,"into","","",41,[[],["u"]]],[11,"try_into","","",41,[[],["result"]]],[11,"borrow","","",41,[[["self"]],["t"]]],[11,"borrow_mut","","",41,[[["self"]],["t"]]],[11,"type_id","","",41,[[["self"]],["typeid"]]],[11,"from","","",42,[[["t"]],["t"]]],[11,"try_from","","",42,[[["u"]],["result"]]],[11,"into","","",42,[[],["u"]]],[11,"try_into","","",42,[[],["result"]]],[11,"borrow","","",42,[[["self"]],["t"]]],[11,"borrow_mut","","",42,[[["self"]],["t"]]],[11,"type_id","","",42,[[["self"]],["typeid"]]],[11,"to_owned","","",42,[[["self"]],["t"]]],[11,"clone_into","","",42,[[["self"],["t"]]]],[11,"from","","",226,[[["t"]],["t"]]],[11,"into_iter","","",226,[[],["i"]]],[11,"try_from","","",226,[[["u"]],["result"]]],[11,"into","","",226,[[],["u"]]],[11,"try_into","","",226,[[],["result"]]],[11,"borrow","","",226,[[["self"]],["t"]]],[11,"borrow_mut","","",226,[[["self"]],["t"]]],[11,"type_id","","",226,[[["self"]],["typeid"]]],[11,"from","","",227,[[["t"]],["t"]]],[11,"try_from","","",227,[[["u"]],["result"]]],[11,"into","","",227,[[],["u"]]],[11,"try_into","","",227,[[],["result"]]],[11,"borrow","","",227,[[["self"]],["t"]]],[11,"borrow_mut","","",227,[[["self"]],["t"]]],[11,"type_id","","",227,[[["self"]],["typeid"]]],[11,"from","","",228,[[["t"]],["t"]]],[11,"into_iter","","",228,[[],["i"]]],[11,"try_from","","",228,[[["u"]],["result"]]],[11,"into","","",228,[[],["u"]]],[11,"try_into","","",228,[[],["result"]]],[11,"borrow","","",228,[[["self"]],["t"]]],[11,"borrow_mut","","",228,[[["self"]],["t"]]],[11,"type_id","","",228,[[["self"]],["typeid"]]],[11,"from","","",229,[[["t"]],["t"]]],[11,"try_from","","",229,[[["u"]],["result"]]],[11,"into","","",229,[[],["u"]]],[11,"try_into","","",229,[[],["result"]]],[11,"borrow","","",229,[[["self"]],["t"]]],[11,"borrow_mut","","",229,[[["self"]],["t"]]],[11,"type_id","","",229,[[["self"]],["typeid"]]],[11,"from","","",43,[[["t"]],["t"]]],[11,"try_from","","",43,[[["u"]],["result"]]],[11,"into","","",43,[[],["u"]]],[11,"try_into","","",43,[[],["result"]]],[11,"borrow","","",43,[[["self"]],["t"]]],[11,"borrow_mut","","",43,[[["self"]],["t"]]],[11,"type_id","","",43,[[["self"]],["typeid"]]],[11,"from","","",230,[[["t"]],["t"]]],[11,"into_iter","","",230,[[],["i"]]],[11,"try_from","","",230,[[["u"]],["result"]]],[11,"into","","",230,[[],["u"]]],[11,"try_into","","",230,[[],["result"]]],[11,"borrow","","",230,[[["self"]],["t"]]],[11,"borrow_mut","","",230,[[["self"]],["t"]]],[11,"type_id","","",230,[[["self"]],["typeid"]]],[11,"from","","",231,[[["t"]],["t"]]],[11,"into_iter","","",231,[[],["i"]]],[11,"try_from","","",231,[[["u"]],["result"]]],[11,"into","","",231,[[],["u"]]],[11,"try_into","","",231,[[],["result"]]],[11,"borrow","","",231,[[["self"]],["t"]]],[11,"borrow_mut","","",231,[[["self"]],["t"]]],[11,"type_id","","",231,[[["self"]],["typeid"]]],[11,"from","object::read::elf","",44,[[["t"]],["t"]]],[11,"try_from","","",44,[[["u"]],["result"]]],[11,"into","","",44,[[],["u"]]],[11,"try_into","","",44,[[],["result"]]],[11,"borrow","","",44,[[["self"]],["t"]]],[11,"borrow_mut","","",44,[[["self"]],["t"]]],[11,"type_id","","",44,[[["self"]],["typeid"]]],[11,"from","","",232,[[["t"]],["t"]]],[11,"into_iter","","",232,[[],["i"]]],[11,"try_from","","",232,[[["u"]],["result"]]],[11,"into","","",232,[[],["u"]]],[11,"try_into","","",232,[[],["result"]]],[11,"borrow","","",232,[[["self"]],["t"]]],[11,"borrow_mut","","",232,[[["self"]],["t"]]],[11,"type_id","","",232,[[["self"]],["typeid"]]],[11,"from","","",233,[[["t"]],["t"]]],[11,"try_from","","",233,[[["u"]],["result"]]],[11,"into","","",233,[[],["u"]]],[11,"try_into","","",233,[[],["result"]]],[11,"borrow","","",233,[[["self"]],["t"]]],[11,"borrow_mut","","",233,[[["self"]],["t"]]],[11,"type_id","","",233,[[["self"]],["typeid"]]],[11,"from","","",45,[[["t"]],["t"]]],[11,"try_from","","",45,[[["u"]],["result"]]],[11,"into","","",45,[[],["u"]]],[11,"try_into","","",45,[[],["result"]]],[11,"borrow","","",45,[[["self"]],["t"]]],[11,"borrow_mut","","",45,[[["self"]],["t"]]],[11,"type_id","","",45,[[["self"]],["typeid"]]],[11,"to_owned","","",45,[[["self"]],["t"]]],[11,"clone_into","","",45,[[["self"],["t"]]]],[11,"from","","",234,[[["t"]],["t"]]],[11,"into_iter","","",234,[[],["i"]]],[11,"try_from","","",234,[[["u"]],["result"]]],[11,"into","","",234,[[],["u"]]],[11,"try_into","","",234,[[],["result"]]],[11,"borrow","","",234,[[["self"]],["t"]]],[11,"borrow_mut","","",234,[[["self"]],["t"]]],[11,"type_id","","",234,[[["self"]],["typeid"]]],[11,"from","","",235,[[["t"]],["t"]]],[11,"try_from","","",235,[[["u"]],["result"]]],[11,"into","","",235,[[],["u"]]],[11,"try_into","","",235,[[],["result"]]],[11,"borrow","","",235,[[["self"]],["t"]]],[11,"borrow_mut","","",235,[[["self"]],["t"]]],[11,"type_id","","",235,[[["self"]],["typeid"]]],[11,"from","","",46,[[["t"]],["t"]]],[11,"try_from","","",46,[[["u"]],["result"]]],[11,"into","","",46,[[],["u"]]],[11,"try_into","","",46,[[],["result"]]],[11,"borrow","","",46,[[["self"]],["t"]]],[11,"borrow_mut","","",46,[[["self"]],["t"]]],[11,"type_id","","",46,[[["self"]],["typeid"]]],[11,"to_owned","","",46,[[["self"]],["t"]]],[11,"clone_into","","",46,[[["self"],["t"]]]],[11,"from","","",236,[[["t"]],["t"]]],[11,"into_iter","","",236,[[],["i"]]],[11,"try_from","","",236,[[["u"]],["result"]]],[11,"into","","",236,[[],["u"]]],[11,"try_into","","",236,[[],["result"]]],[11,"borrow","","",236,[[["self"]],["t"]]],[11,"borrow_mut","","",236,[[["self"]],["t"]]],[11,"type_id","","",236,[[["self"]],["typeid"]]],[11,"from","","",47,[[["t"]],["t"]]],[11,"try_from","","",47,[[["u"]],["result"]]],[11,"into","","",47,[[],["u"]]],[11,"try_into","","",47,[[],["result"]]],[11,"borrow","","",47,[[["self"]],["t"]]],[11,"borrow_mut","","",47,[[["self"]],["t"]]],[11,"type_id","","",47,[[["self"]],["typeid"]]],[11,"from","","",237,[[["t"]],["t"]]],[11,"into_iter","","",237,[[],["i"]]],[11,"try_from","","",237,[[["u"]],["result"]]],[11,"into","","",237,[[],["u"]]],[11,"try_into","","",237,[[],["result"]]],[11,"borrow","","",237,[[["self"]],["t"]]],[11,"borrow_mut","","",237,[[["self"]],["t"]]],[11,"type_id","","",237,[[["self"]],["typeid"]]],[11,"from","","",238,[[["t"]],["t"]]],[11,"try_from","","",238,[[["u"]],["result"]]],[11,"into","","",238,[[],["u"]]],[11,"try_into","","",238,[[],["result"]]],[11,"borrow","","",238,[[["self"]],["t"]]],[11,"borrow_mut","","",238,[[["self"]],["t"]]],[11,"type_id","","",238,[[["self"]],["typeid"]]],[11,"from","","",48,[[["t"]],["t"]]],[11,"try_from","","",48,[[["u"]],["result"]]],[11,"into","","",48,[[],["u"]]],[11,"try_into","","",48,[[],["result"]]],[11,"borrow","","",48,[[["self"]],["t"]]],[11,"borrow_mut","","",48,[[["self"]],["t"]]],[11,"type_id","","",48,[[["self"]],["typeid"]]],[11,"from","object::read::macho","",56,[[["t"]],["t"]]],[11,"try_from","","",56,[[["u"]],["result"]]],[11,"into","","",56,[[],["u"]]],[11,"try_into","","",56,[[],["result"]]],[11,"borrow","","",56,[[["self"]],["t"]]],[11,"borrow_mut","","",56,[[["self"]],["t"]]],[11,"type_id","","",56,[[["self"]],["typeid"]]],[11,"from","","",239,[[["t"]],["t"]]],[11,"into_iter","","",239,[[],["i"]]],[11,"try_from","","",239,[[["u"]],["result"]]],[11,"into","","",239,[[],["u"]]],[11,"try_into","","",239,[[],["result"]]],[11,"borrow","","",239,[[["self"]],["t"]]],[11,"borrow_mut","","",239,[[["self"]],["t"]]],[11,"type_id","","",239,[[["self"]],["typeid"]]],[11,"from","","",240,[[["t"]],["t"]]],[11,"try_from","","",240,[[["u"]],["result"]]],[11,"into","","",240,[[],["u"]]],[11,"try_into","","",240,[[],["result"]]],[11,"borrow","","",240,[[["self"]],["t"]]],[11,"borrow_mut","","",240,[[["self"]],["t"]]],[11,"type_id","","",240,[[["self"]],["typeid"]]],[11,"from","","",241,[[["t"]],["t"]]],[11,"into_iter","","",241,[[],["i"]]],[11,"try_from","","",241,[[["u"]],["result"]]],[11,"into","","",241,[[],["u"]]],[11,"try_into","","",241,[[],["result"]]],[11,"borrow","","",241,[[["self"]],["t"]]],[11,"borrow_mut","","",241,[[["self"]],["t"]]],[11,"type_id","","",241,[[["self"]],["typeid"]]],[11,"from","","",242,[[["t"]],["t"]]],[11,"try_from","","",242,[[["u"]],["result"]]],[11,"into","","",242,[[],["u"]]],[11,"try_into","","",242,[[],["result"]]],[11,"borrow","","",242,[[["self"]],["t"]]],[11,"borrow_mut","","",242,[[["self"]],["t"]]],[11,"type_id","","",242,[[["self"]],["typeid"]]],[11,"from","","",57,[[["t"]],["t"]]],[11,"try_from","","",57,[[["u"]],["result"]]],[11,"into","","",57,[[],["u"]]],[11,"try_into","","",57,[[],["result"]]],[11,"borrow","","",57,[[["self"]],["t"]]],[11,"borrow_mut","","",57,[[["self"]],["t"]]],[11,"type_id","","",57,[[["self"]],["typeid"]]],[11,"to_owned","","",57,[[["self"]],["t"]]],[11,"clone_into","","",57,[[["self"],["t"]]]],[11,"from","","",243,[[["t"]],["t"]]],[11,"into_iter","","",243,[[],["i"]]],[11,"try_from","","",243,[[["u"]],["result"]]],[11,"into","","",243,[[],["u"]]],[11,"try_into","","",243,[[],["result"]]],[11,"borrow","","",243,[[["self"]],["t"]]],[11,"borrow_mut","","",243,[[["self"]],["t"]]],[11,"type_id","","",243,[[["self"]],["typeid"]]],[11,"from","","",244,[[["t"]],["t"]]],[11,"into_iter","","",244,[[],["i"]]],[11,"try_from","","",244,[[["u"]],["result"]]],[11,"into","","",244,[[],["u"]]],[11,"try_into","","",244,[[],["result"]]],[11,"borrow","","",244,[[["self"]],["t"]]],[11,"borrow_mut","","",244,[[["self"]],["t"]]],[11,"type_id","","",244,[[["self"]],["typeid"]]],[11,"from","object::read::pe","",62,[[["t"]],["t"]]],[11,"try_from","","",62,[[["u"]],["result"]]],[11,"into","","",62,[[],["u"]]],[11,"try_into","","",62,[[],["result"]]],[11,"borrow","","",62,[[["self"]],["t"]]],[11,"borrow_mut","","",62,[[["self"]],["t"]]],[11,"type_id","","",62,[[["self"]],["typeid"]]],[11,"from","","",245,[[["t"]],["t"]]],[11,"into_iter","","",245,[[],["i"]]],[11,"try_from","","",245,[[["u"]],["result"]]],[11,"into","","",245,[[],["u"]]],[11,"try_into","","",245,[[],["result"]]],[11,"borrow","","",245,[[["self"]],["t"]]],[11,"borrow_mut","","",245,[[["self"]],["t"]]],[11,"type_id","","",245,[[["self"]],["typeid"]]],[11,"from","","",246,[[["t"]],["t"]]],[11,"try_from","","",246,[[["u"]],["result"]]],[11,"into","","",246,[[],["u"]]],[11,"try_into","","",246,[[],["result"]]],[11,"borrow","","",246,[[["self"]],["t"]]],[11,"borrow_mut","","",246,[[["self"]],["t"]]],[11,"type_id","","",246,[[["self"]],["typeid"]]],[11,"from","","",247,[[["t"]],["t"]]],[11,"into_iter","","",247,[[],["i"]]],[11,"try_from","","",247,[[["u"]],["result"]]],[11,"into","","",247,[[],["u"]]],[11,"try_into","","",247,[[],["result"]]],[11,"borrow","","",247,[[["self"]],["t"]]],[11,"borrow_mut","","",247,[[["self"]],["t"]]],[11,"type_id","","",247,[[["self"]],["typeid"]]],[11,"from","","",248,[[["t"]],["t"]]],[11,"try_from","","",248,[[["u"]],["result"]]],[11,"into","","",248,[[],["u"]]],[11,"try_into","","",248,[[],["result"]]],[11,"borrow","","",248,[[["self"]],["t"]]],[11,"borrow_mut","","",248,[[["self"]],["t"]]],[11,"type_id","","",248,[[["self"]],["typeid"]]],[11,"from","","",249,[[["t"]],["t"]]],[11,"into_iter","","",249,[[],["i"]]],[11,"try_from","","",249,[[["u"]],["result"]]],[11,"into","","",249,[[],["u"]]],[11,"try_into","","",249,[[],["result"]]],[11,"borrow","","",249,[[["self"]],["t"]]],[11,"borrow_mut","","",249,[[["self"]],["t"]]],[11,"type_id","","",249,[[["self"]],["typeid"]]],[11,"from","object::elf","",71,[[["t"]],["t"]]],[11,"try_from","","",71,[[["u"]],["result"]]],[11,"into","","",71,[[],["u"]]],[11,"try_into","","",71,[[],["result"]]],[11,"borrow","","",71,[[["self"]],["t"]]],[11,"borrow_mut","","",71,[[["self"]],["t"]]],[11,"type_id","","",71,[[["self"]],["typeid"]]],[11,"to_owned","","",71,[[["self"]],["t"]]],[11,"clone_into","","",71,[[["self"],["t"]]]],[11,"from","","",72,[[["t"]],["t"]]],[11,"try_from","","",72,[[["u"]],["result"]]],[11,"into","","",72,[[],["u"]]],[11,"try_into","","",72,[[],["result"]]],[11,"borrow","","",72,[[["self"]],["t"]]],[11,"borrow_mut","","",72,[[["self"]],["t"]]],[11,"type_id","","",72,[[["self"]],["typeid"]]],[11,"to_owned","","",72,[[["self"]],["t"]]],[11,"clone_into","","",72,[[["self"],["t"]]]],[11,"from","","",73,[[["t"]],["t"]]],[11,"try_from","","",73,[[["u"]],["result"]]],[11,"into","","",73,[[],["u"]]],[11,"try_into","","",73,[[],["result"]]],[11,"borrow","","",73,[[["self"]],["t"]]],[11,"borrow_mut","","",73,[[["self"]],["t"]]],[11,"type_id","","",73,[[["self"]],["typeid"]]],[11,"to_owned","","",73,[[["self"]],["t"]]],[11,"clone_into","","",73,[[["self"],["t"]]]],[11,"from","","",74,[[["t"]],["t"]]],[11,"try_from","","",74,[[["u"]],["result"]]],[11,"into","","",74,[[],["u"]]],[11,"try_into","","",74,[[],["result"]]],[11,"borrow","","",74,[[["self"]],["t"]]],[11,"borrow_mut","","",74,[[["self"]],["t"]]],[11,"type_id","","",74,[[["self"]],["typeid"]]],[11,"to_owned","","",74,[[["self"]],["t"]]],[11,"clone_into","","",74,[[["self"],["t"]]]],[11,"from","","",75,[[["t"]],["t"]]],[11,"try_from","","",75,[[["u"]],["result"]]],[11,"into","","",75,[[],["u"]]],[11,"try_into","","",75,[[],["result"]]],[11,"borrow","","",75,[[["self"]],["t"]]],[11,"borrow_mut","","",75,[[["self"]],["t"]]],[11,"type_id","","",75,[[["self"]],["typeid"]]],[11,"to_owned","","",75,[[["self"]],["t"]]],[11,"clone_into","","",75,[[["self"],["t"]]]],[11,"from","","",76,[[["t"]],["t"]]],[11,"try_from","","",76,[[["u"]],["result"]]],[11,"into","","",76,[[],["u"]]],[11,"try_into","","",76,[[],["result"]]],[11,"borrow","","",76,[[["self"]],["t"]]],[11,"borrow_mut","","",76,[[["self"]],["t"]]],[11,"type_id","","",76,[[["self"]],["typeid"]]],[11,"to_owned","","",76,[[["self"]],["t"]]],[11,"clone_into","","",76,[[["self"],["t"]]]],[11,"from","","",77,[[["t"]],["t"]]],[11,"try_from","","",77,[[["u"]],["result"]]],[11,"into","","",77,[[],["u"]]],[11,"try_into","","",77,[[],["result"]]],[11,"borrow","","",77,[[["self"]],["t"]]],[11,"borrow_mut","","",77,[[["self"]],["t"]]],[11,"type_id","","",77,[[["self"]],["typeid"]]],[11,"to_owned","","",77,[[["self"]],["t"]]],[11,"clone_into","","",77,[[["self"],["t"]]]],[11,"from","","",78,[[["t"]],["t"]]],[11,"try_from","","",78,[[["u"]],["result"]]],[11,"into","","",78,[[],["u"]]],[11,"try_into","","",78,[[],["result"]]],[11,"borrow","","",78,[[["self"]],["t"]]],[11,"borrow_mut","","",78,[[["self"]],["t"]]],[11,"type_id","","",78,[[["self"]],["typeid"]]],[11,"to_owned","","",78,[[["self"]],["t"]]],[11,"clone_into","","",78,[[["self"],["t"]]]],[11,"from","","",79,[[["t"]],["t"]]],[11,"try_from","","",79,[[["u"]],["result"]]],[11,"into","","",79,[[],["u"]]],[11,"try_into","","",79,[[],["result"]]],[11,"borrow","","",79,[[["self"]],["t"]]],[11,"borrow_mut","","",79,[[["self"]],["t"]]],[11,"type_id","","",79,[[["self"]],["typeid"]]],[11,"to_owned","","",79,[[["self"]],["t"]]],[11,"clone_into","","",79,[[["self"],["t"]]]],[11,"from","","",250,[[["t"]],["t"]]],[11,"try_from","","",250,[[["u"]],["result"]]],[11,"into","","",250,[[],["u"]]],[11,"try_into","","",250,[[],["result"]]],[11,"borrow","","",250,[[["self"]],["t"]]],[11,"borrow_mut","","",250,[[["self"]],["t"]]],[11,"type_id","","",250,[[["self"]],["typeid"]]],[11,"to_owned","","",250,[[["self"]],["t"]]],[11,"clone_into","","",250,[[["self"],["t"]]]],[11,"from","","",251,[[["t"]],["t"]]],[11,"try_from","","",251,[[["u"]],["result"]]],[11,"into","","",251,[[],["u"]]],[11,"try_into","","",251,[[],["result"]]],[11,"borrow","","",251,[[["self"]],["t"]]],[11,"borrow_mut","","",251,[[["self"]],["t"]]],[11,"type_id","","",251,[[["self"]],["typeid"]]],[11,"to_owned","","",251,[[["self"]],["t"]]],[11,"clone_into","","",251,[[["self"],["t"]]]],[11,"from","","",80,[[["t"]],["t"]]],[11,"try_from","","",80,[[["u"]],["result"]]],[11,"into","","",80,[[],["u"]]],[11,"try_into","","",80,[[],["result"]]],[11,"borrow","","",80,[[["self"]],["t"]]],[11,"borrow_mut","","",80,[[["self"]],["t"]]],[11,"type_id","","",80,[[["self"]],["typeid"]]],[11,"to_owned","","",80,[[["self"]],["t"]]],[11,"clone_into","","",80,[[["self"],["t"]]]],[11,"from","","",81,[[["t"]],["t"]]],[11,"try_from","","",81,[[["u"]],["result"]]],[11,"into","","",81,[[],["u"]]],[11,"try_into","","",81,[[],["result"]]],[11,"borrow","","",81,[[["self"]],["t"]]],[11,"borrow_mut","","",81,[[["self"]],["t"]]],[11,"type_id","","",81,[[["self"]],["typeid"]]],[11,"to_owned","","",81,[[["self"]],["t"]]],[11,"clone_into","","",81,[[["self"],["t"]]]],[11,"from","","",82,[[["t"]],["t"]]],[11,"try_from","","",82,[[["u"]],["result"]]],[11,"into","","",82,[[],["u"]]],[11,"try_into","","",82,[[],["result"]]],[11,"borrow","","",82,[[["self"]],["t"]]],[11,"borrow_mut","","",82,[[["self"]],["t"]]],[11,"type_id","","",82,[[["self"]],["typeid"]]],[11,"to_owned","","",82,[[["self"]],["t"]]],[11,"clone_into","","",82,[[["self"],["t"]]]],[11,"from","","",83,[[["t"]],["t"]]],[11,"try_from","","",83,[[["u"]],["result"]]],[11,"into","","",83,[[],["u"]]],[11,"try_into","","",83,[[],["result"]]],[11,"borrow","","",83,[[["self"]],["t"]]],[11,"borrow_mut","","",83,[[["self"]],["t"]]],[11,"type_id","","",83,[[["self"]],["typeid"]]],[11,"to_owned","","",83,[[["self"]],["t"]]],[11,"clone_into","","",83,[[["self"],["t"]]]],[11,"from","","",84,[[["t"]],["t"]]],[11,"try_from","","",84,[[["u"]],["result"]]],[11,"into","","",84,[[],["u"]]],[11,"try_into","","",84,[[],["result"]]],[11,"borrow","","",84,[[["self"]],["t"]]],[11,"borrow_mut","","",84,[[["self"]],["t"]]],[11,"type_id","","",84,[[["self"]],["typeid"]]],[11,"to_owned","","",84,[[["self"]],["t"]]],[11,"clone_into","","",84,[[["self"],["t"]]]],[11,"from","","",85,[[["t"]],["t"]]],[11,"try_from","","",85,[[["u"]],["result"]]],[11,"into","","",85,[[],["u"]]],[11,"try_into","","",85,[[],["result"]]],[11,"borrow","","",85,[[["self"]],["t"]]],[11,"borrow_mut","","",85,[[["self"]],["t"]]],[11,"type_id","","",85,[[["self"]],["typeid"]]],[11,"to_owned","","",85,[[["self"]],["t"]]],[11,"clone_into","","",85,[[["self"],["t"]]]],[11,"from","","",252,[[["t"]],["t"]]],[11,"try_from","","",252,[[["u"]],["result"]]],[11,"into","","",252,[[],["u"]]],[11,"try_into","","",252,[[],["result"]]],[11,"borrow","","",252,[[["self"]],["t"]]],[11,"borrow_mut","","",252,[[["self"]],["t"]]],[11,"type_id","","",252,[[["self"]],["typeid"]]],[11,"to_owned","","",252,[[["self"]],["t"]]],[11,"clone_into","","",252,[[["self"],["t"]]]],[11,"from","","",253,[[["t"]],["t"]]],[11,"try_from","","",253,[[["u"]],["result"]]],[11,"into","","",253,[[],["u"]]],[11,"try_into","","",253,[[],["result"]]],[11,"borrow","","",253,[[["self"]],["t"]]],[11,"borrow_mut","","",253,[[["self"]],["t"]]],[11,"type_id","","",253,[[["self"]],["typeid"]]],[11,"to_owned","","",253,[[["self"]],["t"]]],[11,"clone_into","","",253,[[["self"],["t"]]]],[11,"from","","",86,[[["t"]],["t"]]],[11,"try_from","","",86,[[["u"]],["result"]]],[11,"into","","",86,[[],["u"]]],[11,"try_into","","",86,[[],["result"]]],[11,"borrow","","",86,[[["self"]],["t"]]],[11,"borrow_mut","","",86,[[["self"]],["t"]]],[11,"type_id","","",86,[[["self"]],["typeid"]]],[11,"to_owned","","",86,[[["self"]],["t"]]],[11,"clone_into","","",86,[[["self"],["t"]]]],[11,"from","","",87,[[["t"]],["t"]]],[11,"try_from","","",87,[[["u"]],["result"]]],[11,"into","","",87,[[],["u"]]],[11,"try_into","","",87,[[],["result"]]],[11,"borrow","","",87,[[["self"]],["t"]]],[11,"borrow_mut","","",87,[[["self"]],["t"]]],[11,"type_id","","",87,[[["self"]],["typeid"]]],[11,"to_owned","","",87,[[["self"]],["t"]]],[11,"clone_into","","",87,[[["self"],["t"]]]],[11,"from","object::macho","",88,[[["t"]],["t"]]],[11,"try_from","","",88,[[["u"]],["result"]]],[11,"into","","",88,[[],["u"]]],[11,"try_into","","",88,[[],["result"]]],[11,"borrow","","",88,[[["self"]],["t"]]],[11,"borrow_mut","","",88,[[["self"]],["t"]]],[11,"type_id","","",88,[[["self"]],["typeid"]]],[11,"to_owned","","",88,[[["self"]],["t"]]],[11,"clone_into","","",88,[[["self"],["t"]]]],[11,"from","","",89,[[["t"]],["t"]]],[11,"try_from","","",89,[[["u"]],["result"]]],[11,"into","","",89,[[],["u"]]],[11,"try_into","","",89,[[],["result"]]],[11,"borrow","","",89,[[["self"]],["t"]]],[11,"borrow_mut","","",89,[[["self"]],["t"]]],[11,"type_id","","",89,[[["self"]],["typeid"]]],[11,"to_owned","","",89,[[["self"]],["t"]]],[11,"clone_into","","",89,[[["self"],["t"]]]],[11,"from","","",90,[[["t"]],["t"]]],[11,"try_from","","",90,[[["u"]],["result"]]],[11,"into","","",90,[[],["u"]]],[11,"try_into","","",90,[[],["result"]]],[11,"borrow","","",90,[[["self"]],["t"]]],[11,"borrow_mut","","",90,[[["self"]],["t"]]],[11,"type_id","","",90,[[["self"]],["typeid"]]],[11,"to_owned","","",90,[[["self"]],["t"]]],[11,"clone_into","","",90,[[["self"],["t"]]]],[11,"from","","",91,[[["t"]],["t"]]],[11,"try_from","","",91,[[["u"]],["result"]]],[11,"into","","",91,[[],["u"]]],[11,"try_into","","",91,[[],["result"]]],[11,"borrow","","",91,[[["self"]],["t"]]],[11,"borrow_mut","","",91,[[["self"]],["t"]]],[11,"type_id","","",91,[[["self"]],["typeid"]]],[11,"to_owned","","",91,[[["self"]],["t"]]],[11,"clone_into","","",91,[[["self"],["t"]]]],[11,"from","","",92,[[["t"]],["t"]]],[11,"try_from","","",92,[[["u"]],["result"]]],[11,"into","","",92,[[],["u"]]],[11,"try_into","","",92,[[],["result"]]],[11,"borrow","","",92,[[["self"]],["t"]]],[11,"borrow_mut","","",92,[[["self"]],["t"]]],[11,"type_id","","",92,[[["self"]],["typeid"]]],[11,"to_owned","","",92,[[["self"]],["t"]]],[11,"clone_into","","",92,[[["self"],["t"]]]],[11,"from","","",93,[[["t"]],["t"]]],[11,"try_from","","",93,[[["u"]],["result"]]],[11,"into","","",93,[[],["u"]]],[11,"try_into","","",93,[[],["result"]]],[11,"borrow","","",93,[[["self"]],["t"]]],[11,"borrow_mut","","",93,[[["self"]],["t"]]],[11,"type_id","","",93,[[["self"]],["typeid"]]],[11,"to_owned","","",93,[[["self"]],["t"]]],[11,"clone_into","","",93,[[["self"],["t"]]]],[11,"from","","",94,[[["t"]],["t"]]],[11,"try_from","","",94,[[["u"]],["result"]]],[11,"into","","",94,[[],["u"]]],[11,"try_into","","",94,[[],["result"]]],[11,"borrow","","",94,[[["self"]],["t"]]],[11,"borrow_mut","","",94,[[["self"]],["t"]]],[11,"type_id","","",94,[[["self"]],["typeid"]]],[11,"to_owned","","",94,[[["self"]],["t"]]],[11,"clone_into","","",94,[[["self"],["t"]]]],[11,"from","","",95,[[["t"]],["t"]]],[11,"try_from","","",95,[[["u"]],["result"]]],[11,"into","","",95,[[],["u"]]],[11,"try_into","","",95,[[],["result"]]],[11,"borrow","","",95,[[["self"]],["t"]]],[11,"borrow_mut","","",95,[[["self"]],["t"]]],[11,"type_id","","",95,[[["self"]],["typeid"]]],[11,"to_owned","","",95,[[["self"]],["t"]]],[11,"clone_into","","",95,[[["self"],["t"]]]],[11,"from","","",96,[[["t"]],["t"]]],[11,"try_from","","",96,[[["u"]],["result"]]],[11,"into","","",96,[[],["u"]]],[11,"try_into","","",96,[[],["result"]]],[11,"borrow","","",96,[[["self"]],["t"]]],[11,"borrow_mut","","",96,[[["self"]],["t"]]],[11,"type_id","","",96,[[["self"]],["typeid"]]],[11,"to_owned","","",96,[[["self"]],["t"]]],[11,"clone_into","","",96,[[["self"],["t"]]]],[11,"from","","",97,[[["t"]],["t"]]],[11,"try_from","","",97,[[["u"]],["result"]]],[11,"into","","",97,[[],["u"]]],[11,"try_into","","",97,[[],["result"]]],[11,"borrow","","",97,[[["self"]],["t"]]],[11,"borrow_mut","","",97,[[["self"]],["t"]]],[11,"type_id","","",97,[[["self"]],["typeid"]]],[11,"to_owned","","",97,[[["self"]],["t"]]],[11,"clone_into","","",97,[[["self"],["t"]]]],[11,"from","","",98,[[["t"]],["t"]]],[11,"try_from","","",98,[[["u"]],["result"]]],[11,"into","","",98,[[],["u"]]],[11,"try_into","","",98,[[],["result"]]],[11,"borrow","","",98,[[["self"]],["t"]]],[11,"borrow_mut","","",98,[[["self"]],["t"]]],[11,"type_id","","",98,[[["self"]],["typeid"]]],[11,"to_owned","","",98,[[["self"]],["t"]]],[11,"clone_into","","",98,[[["self"],["t"]]]],[11,"from","","",99,[[["t"]],["t"]]],[11,"try_from","","",99,[[["u"]],["result"]]],[11,"into","","",99,[[],["u"]]],[11,"try_into","","",99,[[],["result"]]],[11,"borrow","","",99,[[["self"]],["t"]]],[11,"borrow_mut","","",99,[[["self"]],["t"]]],[11,"type_id","","",99,[[["self"]],["typeid"]]],[11,"to_owned","","",99,[[["self"]],["t"]]],[11,"clone_into","","",99,[[["self"],["t"]]]],[11,"from","","",100,[[["t"]],["t"]]],[11,"try_from","","",100,[[["u"]],["result"]]],[11,"into","","",100,[[],["u"]]],[11,"try_into","","",100,[[],["result"]]],[11,"borrow","","",100,[[["self"]],["t"]]],[11,"borrow_mut","","",100,[[["self"]],["t"]]],[11,"type_id","","",100,[[["self"]],["typeid"]]],[11,"to_owned","","",100,[[["self"]],["t"]]],[11,"clone_into","","",100,[[["self"],["t"]]]],[11,"from","","",101,[[["t"]],["t"]]],[11,"try_from","","",101,[[["u"]],["result"]]],[11,"into","","",101,[[],["u"]]],[11,"try_into","","",101,[[],["result"]]],[11,"borrow","","",101,[[["self"]],["t"]]],[11,"borrow_mut","","",101,[[["self"]],["t"]]],[11,"type_id","","",101,[[["self"]],["typeid"]]],[11,"to_owned","","",101,[[["self"]],["t"]]],[11,"clone_into","","",101,[[["self"],["t"]]]],[11,"from","","",102,[[["t"]],["t"]]],[11,"try_from","","",102,[[["u"]],["result"]]],[11,"into","","",102,[[],["u"]]],[11,"try_into","","",102,[[],["result"]]],[11,"borrow","","",102,[[["self"]],["t"]]],[11,"borrow_mut","","",102,[[["self"]],["t"]]],[11,"type_id","","",102,[[["self"]],["typeid"]]],[11,"to_owned","","",102,[[["self"]],["t"]]],[11,"clone_into","","",102,[[["self"],["t"]]]],[11,"from","","",103,[[["t"]],["t"]]],[11,"try_from","","",103,[[["u"]],["result"]]],[11,"into","","",103,[[],["u"]]],[11,"try_into","","",103,[[],["result"]]],[11,"borrow","","",103,[[["self"]],["t"]]],[11,"borrow_mut","","",103,[[["self"]],["t"]]],[11,"type_id","","",103,[[["self"]],["typeid"]]],[11,"to_owned","","",103,[[["self"]],["t"]]],[11,"clone_into","","",103,[[["self"],["t"]]]],[11,"from","","",104,[[["t"]],["t"]]],[11,"try_from","","",104,[[["u"]],["result"]]],[11,"into","","",104,[[],["u"]]],[11,"try_into","","",104,[[],["result"]]],[11,"borrow","","",104,[[["self"]],["t"]]],[11,"borrow_mut","","",104,[[["self"]],["t"]]],[11,"type_id","","",104,[[["self"]],["typeid"]]],[11,"to_owned","","",104,[[["self"]],["t"]]],[11,"clone_into","","",104,[[["self"],["t"]]]],[11,"from","","",105,[[["t"]],["t"]]],[11,"try_from","","",105,[[["u"]],["result"]]],[11,"into","","",105,[[],["u"]]],[11,"try_into","","",105,[[],["result"]]],[11,"borrow","","",105,[[["self"]],["t"]]],[11,"borrow_mut","","",105,[[["self"]],["t"]]],[11,"type_id","","",105,[[["self"]],["typeid"]]],[11,"to_owned","","",105,[[["self"]],["t"]]],[11,"clone_into","","",105,[[["self"],["t"]]]],[11,"from","","",106,[[["t"]],["t"]]],[11,"try_from","","",106,[[["u"]],["result"]]],[11,"into","","",106,[[],["u"]]],[11,"try_into","","",106,[[],["result"]]],[11,"borrow","","",106,[[["self"]],["t"]]],[11,"borrow_mut","","",106,[[["self"]],["t"]]],[11,"type_id","","",106,[[["self"]],["typeid"]]],[11,"to_owned","","",106,[[["self"]],["t"]]],[11,"clone_into","","",106,[[["self"],["t"]]]],[11,"from","","",107,[[["t"]],["t"]]],[11,"try_from","","",107,[[["u"]],["result"]]],[11,"into","","",107,[[],["u"]]],[11,"try_into","","",107,[[],["result"]]],[11,"borrow","","",107,[[["self"]],["t"]]],[11,"borrow_mut","","",107,[[["self"]],["t"]]],[11,"type_id","","",107,[[["self"]],["typeid"]]],[11,"to_owned","","",107,[[["self"]],["t"]]],[11,"clone_into","","",107,[[["self"],["t"]]]],[11,"from","","",108,[[["t"]],["t"]]],[11,"try_from","","",108,[[["u"]],["result"]]],[11,"into","","",108,[[],["u"]]],[11,"try_into","","",108,[[],["result"]]],[11,"borrow","","",108,[[["self"]],["t"]]],[11,"borrow_mut","","",108,[[["self"]],["t"]]],[11,"type_id","","",108,[[["self"]],["typeid"]]],[11,"to_owned","","",108,[[["self"]],["t"]]],[11,"clone_into","","",108,[[["self"],["t"]]]],[11,"from","","",109,[[["t"]],["t"]]],[11,"try_from","","",109,[[["u"]],["result"]]],[11,"into","","",109,[[],["u"]]],[11,"try_into","","",109,[[],["result"]]],[11,"borrow","","",109,[[["self"]],["t"]]],[11,"borrow_mut","","",109,[[["self"]],["t"]]],[11,"type_id","","",109,[[["self"]],["typeid"]]],[11,"to_owned","","",109,[[["self"]],["t"]]],[11,"clone_into","","",109,[[["self"],["t"]]]],[11,"from","","",110,[[["t"]],["t"]]],[11,"try_from","","",110,[[["u"]],["result"]]],[11,"into","","",110,[[],["u"]]],[11,"try_into","","",110,[[],["result"]]],[11,"borrow","","",110,[[["self"]],["t"]]],[11,"borrow_mut","","",110,[[["self"]],["t"]]],[11,"type_id","","",110,[[["self"]],["typeid"]]],[11,"to_owned","","",110,[[["self"]],["t"]]],[11,"clone_into","","",110,[[["self"],["t"]]]],[11,"from","","",111,[[["t"]],["t"]]],[11,"try_from","","",111,[[["u"]],["result"]]],[11,"into","","",111,[[],["u"]]],[11,"try_into","","",111,[[],["result"]]],[11,"borrow","","",111,[[["self"]],["t"]]],[11,"borrow_mut","","",111,[[["self"]],["t"]]],[11,"type_id","","",111,[[["self"]],["typeid"]]],[11,"to_owned","","",111,[[["self"]],["t"]]],[11,"clone_into","","",111,[[["self"],["t"]]]],[11,"from","","",112,[[["t"]],["t"]]],[11,"try_from","","",112,[[["u"]],["result"]]],[11,"into","","",112,[[],["u"]]],[11,"try_into","","",112,[[],["result"]]],[11,"borrow","","",112,[[["self"]],["t"]]],[11,"borrow_mut","","",112,[[["self"]],["t"]]],[11,"type_id","","",112,[[["self"]],["typeid"]]],[11,"to_owned","","",112,[[["self"]],["t"]]],[11,"clone_into","","",112,[[["self"],["t"]]]],[11,"from","","",113,[[["t"]],["t"]]],[11,"try_from","","",113,[[["u"]],["result"]]],[11,"into","","",113,[[],["u"]]],[11,"try_into","","",113,[[],["result"]]],[11,"borrow","","",113,[[["self"]],["t"]]],[11,"borrow_mut","","",113,[[["self"]],["t"]]],[11,"type_id","","",113,[[["self"]],["typeid"]]],[11,"to_owned","","",113,[[["self"]],["t"]]],[11,"clone_into","","",113,[[["self"],["t"]]]],[11,"from","","",114,[[["t"]],["t"]]],[11,"try_from","","",114,[[["u"]],["result"]]],[11,"into","","",114,[[],["u"]]],[11,"try_into","","",114,[[],["result"]]],[11,"borrow","","",114,[[["self"]],["t"]]],[11,"borrow_mut","","",114,[[["self"]],["t"]]],[11,"type_id","","",114,[[["self"]],["typeid"]]],[11,"to_owned","","",114,[[["self"]],["t"]]],[11,"clone_into","","",114,[[["self"],["t"]]]],[11,"from","","",115,[[["t"]],["t"]]],[11,"try_from","","",115,[[["u"]],["result"]]],[11,"into","","",115,[[],["u"]]],[11,"try_into","","",115,[[],["result"]]],[11,"borrow","","",115,[[["self"]],["t"]]],[11,"borrow_mut","","",115,[[["self"]],["t"]]],[11,"type_id","","",115,[[["self"]],["typeid"]]],[11,"to_owned","","",115,[[["self"]],["t"]]],[11,"clone_into","","",115,[[["self"],["t"]]]],[11,"from","","",116,[[["t"]],["t"]]],[11,"try_from","","",116,[[["u"]],["result"]]],[11,"into","","",116,[[],["u"]]],[11,"try_into","","",116,[[],["result"]]],[11,"borrow","","",116,[[["self"]],["t"]]],[11,"borrow_mut","","",116,[[["self"]],["t"]]],[11,"type_id","","",116,[[["self"]],["typeid"]]],[11,"to_owned","","",116,[[["self"]],["t"]]],[11,"clone_into","","",116,[[["self"],["t"]]]],[11,"from","","",117,[[["t"]],["t"]]],[11,"try_from","","",117,[[["u"]],["result"]]],[11,"into","","",117,[[],["u"]]],[11,"try_into","","",117,[[],["result"]]],[11,"borrow","","",117,[[["self"]],["t"]]],[11,"borrow_mut","","",117,[[["self"]],["t"]]],[11,"type_id","","",117,[[["self"]],["typeid"]]],[11,"to_owned","","",117,[[["self"]],["t"]]],[11,"clone_into","","",117,[[["self"],["t"]]]],[11,"from","","",118,[[["t"]],["t"]]],[11,"try_from","","",118,[[["u"]],["result"]]],[11,"into","","",118,[[],["u"]]],[11,"try_into","","",118,[[],["result"]]],[11,"borrow","","",118,[[["self"]],["t"]]],[11,"borrow_mut","","",118,[[["self"]],["t"]]],[11,"type_id","","",118,[[["self"]],["typeid"]]],[11,"to_owned","","",118,[[["self"]],["t"]]],[11,"clone_into","","",118,[[["self"],["t"]]]],[11,"from","","",119,[[["t"]],["t"]]],[11,"try_from","","",119,[[["u"]],["result"]]],[11,"into","","",119,[[],["u"]]],[11,"try_into","","",119,[[],["result"]]],[11,"borrow","","",119,[[["self"]],["t"]]],[11,"borrow_mut","","",119,[[["self"]],["t"]]],[11,"type_id","","",119,[[["self"]],["typeid"]]],[11,"to_owned","","",119,[[["self"]],["t"]]],[11,"clone_into","","",119,[[["self"],["t"]]]],[11,"from","","",120,[[["t"]],["t"]]],[11,"try_from","","",120,[[["u"]],["result"]]],[11,"into","","",120,[[],["u"]]],[11,"try_into","","",120,[[],["result"]]],[11,"borrow","","",120,[[["self"]],["t"]]],[11,"borrow_mut","","",120,[[["self"]],["t"]]],[11,"type_id","","",120,[[["self"]],["typeid"]]],[11,"to_owned","","",120,[[["self"]],["t"]]],[11,"clone_into","","",120,[[["self"],["t"]]]],[11,"from","","",121,[[["t"]],["t"]]],[11,"try_from","","",121,[[["u"]],["result"]]],[11,"into","","",121,[[],["u"]]],[11,"try_into","","",121,[[],["result"]]],[11,"borrow","","",121,[[["self"]],["t"]]],[11,"borrow_mut","","",121,[[["self"]],["t"]]],[11,"type_id","","",121,[[["self"]],["typeid"]]],[11,"to_owned","","",121,[[["self"]],["t"]]],[11,"clone_into","","",121,[[["self"],["t"]]]],[11,"from","","",122,[[["t"]],["t"]]],[11,"try_from","","",122,[[["u"]],["result"]]],[11,"into","","",122,[[],["u"]]],[11,"try_into","","",122,[[],["result"]]],[11,"borrow","","",122,[[["self"]],["t"]]],[11,"borrow_mut","","",122,[[["self"]],["t"]]],[11,"type_id","","",122,[[["self"]],["typeid"]]],[11,"to_owned","","",122,[[["self"]],["t"]]],[11,"clone_into","","",122,[[["self"],["t"]]]],[11,"from","","",123,[[["t"]],["t"]]],[11,"try_from","","",123,[[["u"]],["result"]]],[11,"into","","",123,[[],["u"]]],[11,"try_into","","",123,[[],["result"]]],[11,"borrow","","",123,[[["self"]],["t"]]],[11,"borrow_mut","","",123,[[["self"]],["t"]]],[11,"type_id","","",123,[[["self"]],["typeid"]]],[11,"to_owned","","",123,[[["self"]],["t"]]],[11,"clone_into","","",123,[[["self"],["t"]]]],[11,"from","","",124,[[["t"]],["t"]]],[11,"try_from","","",124,[[["u"]],["result"]]],[11,"into","","",124,[[],["u"]]],[11,"try_into","","",124,[[],["result"]]],[11,"borrow","","",124,[[["self"]],["t"]]],[11,"borrow_mut","","",124,[[["self"]],["t"]]],[11,"type_id","","",124,[[["self"]],["typeid"]]],[11,"to_owned","","",124,[[["self"]],["t"]]],[11,"clone_into","","",124,[[["self"],["t"]]]],[11,"from","","",125,[[["t"]],["t"]]],[11,"try_from","","",125,[[["u"]],["result"]]],[11,"into","","",125,[[],["u"]]],[11,"try_into","","",125,[[],["result"]]],[11,"borrow","","",125,[[["self"]],["t"]]],[11,"borrow_mut","","",125,[[["self"]],["t"]]],[11,"type_id","","",125,[[["self"]],["typeid"]]],[11,"to_owned","","",125,[[["self"]],["t"]]],[11,"clone_into","","",125,[[["self"],["t"]]]],[11,"from","","",126,[[["t"]],["t"]]],[11,"try_from","","",126,[[["u"]],["result"]]],[11,"into","","",126,[[],["u"]]],[11,"try_into","","",126,[[],["result"]]],[11,"borrow","","",126,[[["self"]],["t"]]],[11,"borrow_mut","","",126,[[["self"]],["t"]]],[11,"type_id","","",126,[[["self"]],["typeid"]]],[11,"to_owned","","",126,[[["self"]],["t"]]],[11,"clone_into","","",126,[[["self"],["t"]]]],[11,"from","","",127,[[["t"]],["t"]]],[11,"try_from","","",127,[[["u"]],["result"]]],[11,"into","","",127,[[],["u"]]],[11,"try_into","","",127,[[],["result"]]],[11,"borrow","","",127,[[["self"]],["t"]]],[11,"borrow_mut","","",127,[[["self"]],["t"]]],[11,"type_id","","",127,[[["self"]],["typeid"]]],[11,"to_owned","","",127,[[["self"]],["t"]]],[11,"clone_into","","",127,[[["self"],["t"]]]],[11,"from","","",128,[[["t"]],["t"]]],[11,"try_from","","",128,[[["u"]],["result"]]],[11,"into","","",128,[[],["u"]]],[11,"try_into","","",128,[[],["result"]]],[11,"borrow","","",128,[[["self"]],["t"]]],[11,"borrow_mut","","",128,[[["self"]],["t"]]],[11,"type_id","","",128,[[["self"]],["typeid"]]],[11,"to_owned","","",128,[[["self"]],["t"]]],[11,"clone_into","","",128,[[["self"],["t"]]]],[11,"from","","",129,[[["t"]],["t"]]],[11,"try_from","","",129,[[["u"]],["result"]]],[11,"into","","",129,[[],["u"]]],[11,"try_into","","",129,[[],["result"]]],[11,"borrow","","",129,[[["self"]],["t"]]],[11,"borrow_mut","","",129,[[["self"]],["t"]]],[11,"type_id","","",129,[[["self"]],["typeid"]]],[11,"to_owned","","",129,[[["self"]],["t"]]],[11,"clone_into","","",129,[[["self"],["t"]]]],[11,"from","","",130,[[["t"]],["t"]]],[11,"try_from","","",130,[[["u"]],["result"]]],[11,"into","","",130,[[],["u"]]],[11,"try_into","","",130,[[],["result"]]],[11,"borrow","","",130,[[["self"]],["t"]]],[11,"borrow_mut","","",130,[[["self"]],["t"]]],[11,"type_id","","",130,[[["self"]],["typeid"]]],[11,"to_owned","","",130,[[["self"]],["t"]]],[11,"clone_into","","",130,[[["self"],["t"]]]],[11,"from","","",131,[[["t"]],["t"]]],[11,"try_from","","",131,[[["u"]],["result"]]],[11,"into","","",131,[[],["u"]]],[11,"try_into","","",131,[[],["result"]]],[11,"borrow","","",131,[[["self"]],["t"]]],[11,"borrow_mut","","",131,[[["self"]],["t"]]],[11,"type_id","","",131,[[["self"]],["typeid"]]],[11,"to_owned","","",131,[[["self"]],["t"]]],[11,"clone_into","","",131,[[["self"],["t"]]]],[11,"from","","",132,[[["t"]],["t"]]],[11,"try_from","","",132,[[["u"]],["result"]]],[11,"into","","",132,[[],["u"]]],[11,"try_into","","",132,[[],["result"]]],[11,"borrow","","",132,[[["self"]],["t"]]],[11,"borrow_mut","","",132,[[["self"]],["t"]]],[11,"type_id","","",132,[[["self"]],["typeid"]]],[11,"to_owned","","",132,[[["self"]],["t"]]],[11,"clone_into","","",132,[[["self"],["t"]]]],[11,"from","","",133,[[["t"]],["t"]]],[11,"try_from","","",133,[[["u"]],["result"]]],[11,"into","","",133,[[],["u"]]],[11,"try_into","","",133,[[],["result"]]],[11,"borrow","","",133,[[["self"]],["t"]]],[11,"borrow_mut","","",133,[[["self"]],["t"]]],[11,"type_id","","",133,[[["self"]],["typeid"]]],[11,"to_owned","","",133,[[["self"]],["t"]]],[11,"clone_into","","",133,[[["self"],["t"]]]],[11,"from","","",134,[[["t"]],["t"]]],[11,"try_from","","",134,[[["u"]],["result"]]],[11,"into","","",134,[[],["u"]]],[11,"try_into","","",134,[[],["result"]]],[11,"borrow","","",134,[[["self"]],["t"]]],[11,"borrow_mut","","",134,[[["self"]],["t"]]],[11,"type_id","","",134,[[["self"]],["typeid"]]],[11,"to_owned","","",134,[[["self"]],["t"]]],[11,"clone_into","","",134,[[["self"],["t"]]]],[11,"from","","",135,[[["t"]],["t"]]],[11,"try_from","","",135,[[["u"]],["result"]]],[11,"into","","",135,[[],["u"]]],[11,"try_into","","",135,[[],["result"]]],[11,"borrow","","",135,[[["self"]],["t"]]],[11,"borrow_mut","","",135,[[["self"]],["t"]]],[11,"type_id","","",135,[[["self"]],["typeid"]]],[11,"to_owned","","",135,[[["self"]],["t"]]],[11,"clone_into","","",135,[[["self"],["t"]]]],[11,"from","","",136,[[["t"]],["t"]]],[11,"try_from","","",136,[[["u"]],["result"]]],[11,"into","","",136,[[],["u"]]],[11,"try_into","","",136,[[],["result"]]],[11,"borrow","","",136,[[["self"]],["t"]]],[11,"borrow_mut","","",136,[[["self"]],["t"]]],[11,"type_id","","",136,[[["self"]],["typeid"]]],[11,"to_owned","","",136,[[["self"]],["t"]]],[11,"clone_into","","",136,[[["self"],["t"]]]],[11,"from","","",137,[[["t"]],["t"]]],[11,"try_from","","",137,[[["u"]],["result"]]],[11,"into","","",137,[[],["u"]]],[11,"try_into","","",137,[[],["result"]]],[11,"borrow","","",137,[[["self"]],["t"]]],[11,"borrow_mut","","",137,[[["self"]],["t"]]],[11,"type_id","","",137,[[["self"]],["typeid"]]],[11,"to_owned","","",137,[[["self"]],["t"]]],[11,"clone_into","","",137,[[["self"],["t"]]]],[11,"from","","",138,[[["t"]],["t"]]],[11,"try_from","","",138,[[["u"]],["result"]]],[11,"into","","",138,[[],["u"]]],[11,"try_into","","",138,[[],["result"]]],[11,"borrow","","",138,[[["self"]],["t"]]],[11,"borrow_mut","","",138,[[["self"]],["t"]]],[11,"type_id","","",138,[[["self"]],["typeid"]]],[11,"to_owned","","",138,[[["self"]],["t"]]],[11,"clone_into","","",138,[[["self"],["t"]]]],[11,"from","","",139,[[["t"]],["t"]]],[11,"try_from","","",139,[[["u"]],["result"]]],[11,"into","","",139,[[],["u"]]],[11,"try_into","","",139,[[],["result"]]],[11,"borrow","","",139,[[["self"]],["t"]]],[11,"borrow_mut","","",139,[[["self"]],["t"]]],[11,"type_id","","",139,[[["self"]],["typeid"]]],[11,"to_owned","","",139,[[["self"]],["t"]]],[11,"clone_into","","",139,[[["self"],["t"]]]],[11,"from","","",140,[[["t"]],["t"]]],[11,"try_from","","",140,[[["u"]],["result"]]],[11,"into","","",140,[[],["u"]]],[11,"try_into","","",140,[[],["result"]]],[11,"borrow","","",140,[[["self"]],["t"]]],[11,"borrow_mut","","",140,[[["self"]],["t"]]],[11,"type_id","","",140,[[["self"]],["typeid"]]],[11,"to_owned","","",140,[[["self"]],["t"]]],[11,"clone_into","","",140,[[["self"],["t"]]]],[11,"from","","",141,[[["t"]],["t"]]],[11,"try_from","","",141,[[["u"]],["result"]]],[11,"into","","",141,[[],["u"]]],[11,"try_into","","",141,[[],["result"]]],[11,"borrow","","",141,[[["self"]],["t"]]],[11,"borrow_mut","","",141,[[["self"]],["t"]]],[11,"type_id","","",141,[[["self"]],["typeid"]]],[11,"to_owned","","",141,[[["self"]],["t"]]],[11,"clone_into","","",141,[[["self"],["t"]]]],[11,"from","","",142,[[["t"]],["t"]]],[11,"try_from","","",142,[[["u"]],["result"]]],[11,"into","","",142,[[],["u"]]],[11,"try_into","","",142,[[],["result"]]],[11,"borrow","","",142,[[["self"]],["t"]]],[11,"borrow_mut","","",142,[[["self"]],["t"]]],[11,"type_id","","",142,[[["self"]],["typeid"]]],[11,"to_owned","","",142,[[["self"]],["t"]]],[11,"clone_into","","",142,[[["self"],["t"]]]],[11,"from","object::pe","",143,[[["t"]],["t"]]],[11,"try_from","","",143,[[["u"]],["result"]]],[11,"into","","",143,[[],["u"]]],[11,"try_into","","",143,[[],["result"]]],[11,"borrow","","",143,[[["self"]],["t"]]],[11,"borrow_mut","","",143,[[["self"]],["t"]]],[11,"type_id","","",143,[[["self"]],["typeid"]]],[11,"to_owned","","",143,[[["self"]],["t"]]],[11,"clone_into","","",143,[[["self"],["t"]]]],[11,"from","","",144,[[["t"]],["t"]]],[11,"try_from","","",144,[[["u"]],["result"]]],[11,"into","","",144,[[],["u"]]],[11,"try_into","","",144,[[],["result"]]],[11,"borrow","","",144,[[["self"]],["t"]]],[11,"borrow_mut","","",144,[[["self"]],["t"]]],[11,"type_id","","",144,[[["self"]],["typeid"]]],[11,"to_owned","","",144,[[["self"]],["t"]]],[11,"clone_into","","",144,[[["self"],["t"]]]],[11,"from","","",145,[[["t"]],["t"]]],[11,"try_from","","",145,[[["u"]],["result"]]],[11,"into","","",145,[[],["u"]]],[11,"try_into","","",145,[[],["result"]]],[11,"borrow","","",145,[[["self"]],["t"]]],[11,"borrow_mut","","",145,[[["self"]],["t"]]],[11,"type_id","","",145,[[["self"]],["typeid"]]],[11,"to_owned","","",145,[[["self"]],["t"]]],[11,"clone_into","","",145,[[["self"],["t"]]]],[11,"from","","",146,[[["t"]],["t"]]],[11,"try_from","","",146,[[["u"]],["result"]]],[11,"into","","",146,[[],["u"]]],[11,"try_into","","",146,[[],["result"]]],[11,"borrow","","",146,[[["self"]],["t"]]],[11,"borrow_mut","","",146,[[["self"]],["t"]]],[11,"type_id","","",146,[[["self"]],["typeid"]]],[11,"to_owned","","",146,[[["self"]],["t"]]],[11,"clone_into","","",146,[[["self"],["t"]]]],[11,"from","","",147,[[["t"]],["t"]]],[11,"try_from","","",147,[[["u"]],["result"]]],[11,"into","","",147,[[],["u"]]],[11,"try_into","","",147,[[],["result"]]],[11,"borrow","","",147,[[["self"]],["t"]]],[11,"borrow_mut","","",147,[[["self"]],["t"]]],[11,"type_id","","",147,[[["self"]],["typeid"]]],[11,"to_owned","","",147,[[["self"]],["t"]]],[11,"clone_into","","",147,[[["self"],["t"]]]],[11,"from","","",148,[[["t"]],["t"]]],[11,"try_from","","",148,[[["u"]],["result"]]],[11,"into","","",148,[[],["u"]]],[11,"try_into","","",148,[[],["result"]]],[11,"borrow","","",148,[[["self"]],["t"]]],[11,"borrow_mut","","",148,[[["self"]],["t"]]],[11,"type_id","","",148,[[["self"]],["typeid"]]],[11,"to_owned","","",148,[[["self"]],["t"]]],[11,"clone_into","","",148,[[["self"],["t"]]]],[11,"from","","",149,[[["t"]],["t"]]],[11,"try_from","","",149,[[["u"]],["result"]]],[11,"into","","",149,[[],["u"]]],[11,"try_into","","",149,[[],["result"]]],[11,"borrow","","",149,[[["self"]],["t"]]],[11,"borrow_mut","","",149,[[["self"]],["t"]]],[11,"type_id","","",149,[[["self"]],["typeid"]]],[11,"to_owned","","",149,[[["self"]],["t"]]],[11,"clone_into","","",149,[[["self"],["t"]]]],[11,"from","","",150,[[["t"]],["t"]]],[11,"try_from","","",150,[[["u"]],["result"]]],[11,"into","","",150,[[],["u"]]],[11,"try_into","","",150,[[],["result"]]],[11,"borrow","","",150,[[["self"]],["t"]]],[11,"borrow_mut","","",150,[[["self"]],["t"]]],[11,"type_id","","",150,[[["self"]],["typeid"]]],[11,"to_owned","","",150,[[["self"]],["t"]]],[11,"clone_into","","",150,[[["self"],["t"]]]],[11,"from","","",151,[[["t"]],["t"]]],[11,"try_from","","",151,[[["u"]],["result"]]],[11,"into","","",151,[[],["u"]]],[11,"try_into","","",151,[[],["result"]]],[11,"borrow","","",151,[[["self"]],["t"]]],[11,"borrow_mut","","",151,[[["self"]],["t"]]],[11,"type_id","","",151,[[["self"]],["typeid"]]],[11,"to_owned","","",151,[[["self"]],["t"]]],[11,"clone_into","","",151,[[["self"],["t"]]]],[11,"from","","",152,[[["t"]],["t"]]],[11,"try_from","","",152,[[["u"]],["result"]]],[11,"into","","",152,[[],["u"]]],[11,"try_into","","",152,[[],["result"]]],[11,"borrow","","",152,[[["self"]],["t"]]],[11,"borrow_mut","","",152,[[["self"]],["t"]]],[11,"type_id","","",152,[[["self"]],["typeid"]]],[11,"to_owned","","",152,[[["self"]],["t"]]],[11,"clone_into","","",152,[[["self"],["t"]]]],[11,"from","","",153,[[["t"]],["t"]]],[11,"try_from","","",153,[[["u"]],["result"]]],[11,"into","","",153,[[],["u"]]],[11,"try_into","","",153,[[],["result"]]],[11,"borrow","","",153,[[["self"]],["t"]]],[11,"borrow_mut","","",153,[[["self"]],["t"]]],[11,"type_id","","",153,[[["self"]],["typeid"]]],[11,"to_owned","","",153,[[["self"]],["t"]]],[11,"clone_into","","",153,[[["self"],["t"]]]],[11,"from","","",154,[[["t"]],["t"]]],[11,"try_from","","",154,[[["u"]],["result"]]],[11,"into","","",154,[[],["u"]]],[11,"try_into","","",154,[[],["result"]]],[11,"borrow","","",154,[[["self"]],["t"]]],[11,"borrow_mut","","",154,[[["self"]],["t"]]],[11,"type_id","","",154,[[["self"]],["typeid"]]],[11,"to_owned","","",154,[[["self"]],["t"]]],[11,"clone_into","","",154,[[["self"],["t"]]]],[11,"from","","",155,[[["t"]],["t"]]],[11,"try_from","","",155,[[["u"]],["result"]]],[11,"into","","",155,[[],["u"]]],[11,"try_into","","",155,[[],["result"]]],[11,"borrow","","",155,[[["self"]],["t"]]],[11,"borrow_mut","","",155,[[["self"]],["t"]]],[11,"type_id","","",155,[[["self"]],["typeid"]]],[11,"to_owned","","",155,[[["self"]],["t"]]],[11,"clone_into","","",155,[[["self"],["t"]]]],[11,"from","","",156,[[["t"]],["t"]]],[11,"try_from","","",156,[[["u"]],["result"]]],[11,"into","","",156,[[],["u"]]],[11,"try_into","","",156,[[],["result"]]],[11,"borrow","","",156,[[["self"]],["t"]]],[11,"borrow_mut","","",156,[[["self"]],["t"]]],[11,"type_id","","",156,[[["self"]],["typeid"]]],[11,"to_owned","","",156,[[["self"]],["t"]]],[11,"clone_into","","",156,[[["self"],["t"]]]],[11,"from","","",157,[[["t"]],["t"]]],[11,"try_from","","",157,[[["u"]],["result"]]],[11,"into","","",157,[[],["u"]]],[11,"try_into","","",157,[[],["result"]]],[11,"borrow","","",157,[[["self"]],["t"]]],[11,"borrow_mut","","",157,[[["self"]],["t"]]],[11,"type_id","","",157,[[["self"]],["typeid"]]],[11,"to_owned","","",157,[[["self"]],["t"]]],[11,"clone_into","","",157,[[["self"],["t"]]]],[11,"from","","",158,[[["t"]],["t"]]],[11,"try_from","","",158,[[["u"]],["result"]]],[11,"into","","",158,[[],["u"]]],[11,"try_into","","",158,[[],["result"]]],[11,"borrow","","",158,[[["self"]],["t"]]],[11,"borrow_mut","","",158,[[["self"]],["t"]]],[11,"type_id","","",158,[[["self"]],["typeid"]]],[11,"to_owned","","",158,[[["self"]],["t"]]],[11,"clone_into","","",158,[[["self"],["t"]]]],[11,"from","","",159,[[["t"]],["t"]]],[11,"try_from","","",159,[[["u"]],["result"]]],[11,"into","","",159,[[],["u"]]],[11,"try_into","","",159,[[],["result"]]],[11,"borrow","","",159,[[["self"]],["t"]]],[11,"borrow_mut","","",159,[[["self"]],["t"]]],[11,"type_id","","",159,[[["self"]],["typeid"]]],[11,"to_owned","","",159,[[["self"]],["t"]]],[11,"clone_into","","",159,[[["self"],["t"]]]],[11,"from","","",160,[[["t"]],["t"]]],[11,"try_from","","",160,[[["u"]],["result"]]],[11,"into","","",160,[[],["u"]]],[11,"try_into","","",160,[[],["result"]]],[11,"borrow","","",160,[[["self"]],["t"]]],[11,"borrow_mut","","",160,[[["self"]],["t"]]],[11,"type_id","","",160,[[["self"]],["typeid"]]],[11,"to_owned","","",160,[[["self"]],["t"]]],[11,"clone_into","","",160,[[["self"],["t"]]]],[11,"from","","",161,[[["t"]],["t"]]],[11,"try_from","","",161,[[["u"]],["result"]]],[11,"into","","",161,[[],["u"]]],[11,"try_into","","",161,[[],["result"]]],[11,"borrow","","",161,[[["self"]],["t"]]],[11,"borrow_mut","","",161,[[["self"]],["t"]]],[11,"type_id","","",161,[[["self"]],["typeid"]]],[11,"to_owned","","",161,[[["self"]],["t"]]],[11,"clone_into","","",161,[[["self"],["t"]]]],[11,"from","","",162,[[["t"]],["t"]]],[11,"try_from","","",162,[[["u"]],["result"]]],[11,"into","","",162,[[],["u"]]],[11,"try_into","","",162,[[],["result"]]],[11,"borrow","","",162,[[["self"]],["t"]]],[11,"borrow_mut","","",162,[[["self"]],["t"]]],[11,"type_id","","",162,[[["self"]],["typeid"]]],[11,"to_owned","","",162,[[["self"]],["t"]]],[11,"clone_into","","",162,[[["self"],["t"]]]],[11,"from","","",163,[[["t"]],["t"]]],[11,"try_from","","",163,[[["u"]],["result"]]],[11,"into","","",163,[[],["u"]]],[11,"try_into","","",163,[[],["result"]]],[11,"borrow","","",163,[[["self"]],["t"]]],[11,"borrow_mut","","",163,[[["self"]],["t"]]],[11,"type_id","","",163,[[["self"]],["typeid"]]],[11,"to_owned","","",163,[[["self"]],["t"]]],[11,"clone_into","","",163,[[["self"],["t"]]]],[11,"from","","",164,[[["t"]],["t"]]],[11,"try_from","","",164,[[["u"]],["result"]]],[11,"into","","",164,[[],["u"]]],[11,"try_into","","",164,[[],["result"]]],[11,"borrow","","",164,[[["self"]],["t"]]],[11,"borrow_mut","","",164,[[["self"]],["t"]]],[11,"type_id","","",164,[[["self"]],["typeid"]]],[11,"to_owned","","",164,[[["self"]],["t"]]],[11,"clone_into","","",164,[[["self"],["t"]]]],[11,"from","","",165,[[["t"]],["t"]]],[11,"try_from","","",165,[[["u"]],["result"]]],[11,"into","","",165,[[],["u"]]],[11,"try_into","","",165,[[],["result"]]],[11,"borrow","","",165,[[["self"]],["t"]]],[11,"borrow_mut","","",165,[[["self"]],["t"]]],[11,"type_id","","",165,[[["self"]],["typeid"]]],[11,"to_owned","","",165,[[["self"]],["t"]]],[11,"clone_into","","",165,[[["self"],["t"]]]],[11,"from","","",166,[[["t"]],["t"]]],[11,"try_from","","",166,[[["u"]],["result"]]],[11,"into","","",166,[[],["u"]]],[11,"try_into","","",166,[[],["result"]]],[11,"borrow","","",166,[[["self"]],["t"]]],[11,"borrow_mut","","",166,[[["self"]],["t"]]],[11,"type_id","","",166,[[["self"]],["typeid"]]],[11,"to_owned","","",166,[[["self"]],["t"]]],[11,"clone_into","","",166,[[["self"],["t"]]]],[11,"from","","",167,[[["t"]],["t"]]],[11,"try_from","","",167,[[["u"]],["result"]]],[11,"into","","",167,[[],["u"]]],[11,"try_into","","",167,[[],["result"]]],[11,"borrow","","",167,[[["self"]],["t"]]],[11,"borrow_mut","","",167,[[["self"]],["t"]]],[11,"type_id","","",167,[[["self"]],["typeid"]]],[11,"to_owned","","",167,[[["self"]],["t"]]],[11,"clone_into","","",167,[[["self"],["t"]]]],[11,"from","","",168,[[["t"]],["t"]]],[11,"try_from","","",168,[[["u"]],["result"]]],[11,"into","","",168,[[],["u"]]],[11,"try_into","","",168,[[],["result"]]],[11,"borrow","","",168,[[["self"]],["t"]]],[11,"borrow_mut","","",168,[[["self"]],["t"]]],[11,"type_id","","",168,[[["self"]],["typeid"]]],[11,"to_owned","","",168,[[["self"]],["t"]]],[11,"clone_into","","",168,[[["self"],["t"]]]],[11,"from","","",169,[[["t"]],["t"]]],[11,"try_from","","",169,[[["u"]],["result"]]],[11,"into","","",169,[[],["u"]]],[11,"try_into","","",169,[[],["result"]]],[11,"borrow","","",169,[[["self"]],["t"]]],[11,"borrow_mut","","",169,[[["self"]],["t"]]],[11,"type_id","","",169,[[["self"]],["typeid"]]],[11,"to_owned","","",169,[[["self"]],["t"]]],[11,"clone_into","","",169,[[["self"],["t"]]]],[11,"from","","",170,[[["t"]],["t"]]],[11,"try_from","","",170,[[["u"]],["result"]]],[11,"into","","",170,[[],["u"]]],[11,"try_into","","",170,[[],["result"]]],[11,"borrow","","",170,[[["self"]],["t"]]],[11,"borrow_mut","","",170,[[["self"]],["t"]]],[11,"type_id","","",170,[[["self"]],["typeid"]]],[11,"to_owned","","",170,[[["self"]],["t"]]],[11,"clone_into","","",170,[[["self"],["t"]]]],[11,"from","","",171,[[["t"]],["t"]]],[11,"try_from","","",171,[[["u"]],["result"]]],[11,"into","","",171,[[],["u"]]],[11,"try_into","","",171,[[],["result"]]],[11,"borrow","","",171,[[["self"]],["t"]]],[11,"borrow_mut","","",171,[[["self"]],["t"]]],[11,"type_id","","",171,[[["self"]],["typeid"]]],[11,"to_owned","","",171,[[["self"]],["t"]]],[11,"clone_into","","",171,[[["self"],["t"]]]],[11,"from","","",172,[[["t"]],["t"]]],[11,"try_from","","",172,[[["u"]],["result"]]],[11,"into","","",172,[[],["u"]]],[11,"try_into","","",172,[[],["result"]]],[11,"borrow","","",172,[[["self"]],["t"]]],[11,"borrow_mut","","",172,[[["self"]],["t"]]],[11,"type_id","","",172,[[["self"]],["typeid"]]],[11,"to_owned","","",172,[[["self"]],["t"]]],[11,"clone_into","","",172,[[["self"],["t"]]]],[11,"from","","",173,[[["t"]],["t"]]],[11,"try_from","","",173,[[["u"]],["result"]]],[11,"into","","",173,[[],["u"]]],[11,"try_into","","",173,[[],["result"]]],[11,"borrow","","",173,[[["self"]],["t"]]],[11,"borrow_mut","","",173,[[["self"]],["t"]]],[11,"type_id","","",173,[[["self"]],["typeid"]]],[11,"to_owned","","",173,[[["self"]],["t"]]],[11,"clone_into","","",173,[[["self"],["t"]]]],[11,"from","","",174,[[["t"]],["t"]]],[11,"try_from","","",174,[[["u"]],["result"]]],[11,"into","","",174,[[],["u"]]],[11,"try_into","","",174,[[],["result"]]],[11,"borrow","","",174,[[["self"]],["t"]]],[11,"borrow_mut","","",174,[[["self"]],["t"]]],[11,"type_id","","",174,[[["self"]],["typeid"]]],[11,"to_owned","","",174,[[["self"]],["t"]]],[11,"clone_into","","",174,[[["self"],["t"]]]],[11,"from","","",175,[[["t"]],["t"]]],[11,"try_from","","",175,[[["u"]],["result"]]],[11,"into","","",175,[[],["u"]]],[11,"try_into","","",175,[[],["result"]]],[11,"borrow","","",175,[[["self"]],["t"]]],[11,"borrow_mut","","",175,[[["self"]],["t"]]],[11,"type_id","","",175,[[["self"]],["typeid"]]],[11,"to_owned","","",175,[[["self"]],["t"]]],[11,"clone_into","","",175,[[["self"],["t"]]]],[11,"from","","",176,[[["t"]],["t"]]],[11,"try_from","","",176,[[["u"]],["result"]]],[11,"into","","",176,[[],["u"]]],[11,"try_into","","",176,[[],["result"]]],[11,"borrow","","",176,[[["self"]],["t"]]],[11,"borrow_mut","","",176,[[["self"]],["t"]]],[11,"type_id","","",176,[[["self"]],["typeid"]]],[11,"to_owned","","",176,[[["self"]],["t"]]],[11,"clone_into","","",176,[[["self"],["t"]]]],[11,"from","","",177,[[["t"]],["t"]]],[11,"try_from","","",177,[[["u"]],["result"]]],[11,"into","","",177,[[],["u"]]],[11,"try_into","","",177,[[],["result"]]],[11,"borrow","","",177,[[["self"]],["t"]]],[11,"borrow_mut","","",177,[[["self"]],["t"]]],[11,"type_id","","",177,[[["self"]],["typeid"]]],[11,"to_owned","","",177,[[["self"]],["t"]]],[11,"clone_into","","",177,[[["self"],["t"]]]],[11,"from","","",178,[[["t"]],["t"]]],[11,"try_from","","",178,[[["u"]],["result"]]],[11,"into","","",178,[[],["u"]]],[11,"try_into","","",178,[[],["result"]]],[11,"borrow","","",178,[[["self"]],["t"]]],[11,"borrow_mut","","",178,[[["self"]],["t"]]],[11,"type_id","","",178,[[["self"]],["typeid"]]],[11,"to_owned","","",178,[[["self"]],["t"]]],[11,"clone_into","","",178,[[["self"],["t"]]]],[11,"from","","",179,[[["t"]],["t"]]],[11,"try_from","","",179,[[["u"]],["result"]]],[11,"into","","",179,[[],["u"]]],[11,"try_into","","",179,[[],["result"]]],[11,"borrow","","",179,[[["self"]],["t"]]],[11,"borrow_mut","","",179,[[["self"]],["t"]]],[11,"type_id","","",179,[[["self"]],["typeid"]]],[11,"to_owned","","",179,[[["self"]],["t"]]],[11,"clone_into","","",179,[[["self"],["t"]]]],[11,"from","","",180,[[["t"]],["t"]]],[11,"try_from","","",180,[[["u"]],["result"]]],[11,"into","","",180,[[],["u"]]],[11,"try_into","","",180,[[],["result"]]],[11,"borrow","","",180,[[["self"]],["t"]]],[11,"borrow_mut","","",180,[[["self"]],["t"]]],[11,"type_id","","",180,[[["self"]],["typeid"]]],[11,"to_owned","","",180,[[["self"]],["t"]]],[11,"clone_into","","",180,[[["self"],["t"]]]],[11,"from","","",181,[[["t"]],["t"]]],[11,"try_from","","",181,[[["u"]],["result"]]],[11,"into","","",181,[[],["u"]]],[11,"try_into","","",181,[[],["result"]]],[11,"borrow","","",181,[[["self"]],["t"]]],[11,"borrow_mut","","",181,[[["self"]],["t"]]],[11,"type_id","","",181,[[["self"]],["typeid"]]],[11,"to_owned","","",181,[[["self"]],["t"]]],[11,"clone_into","","",181,[[["self"],["t"]]]],[11,"from","","",182,[[["t"]],["t"]]],[11,"try_from","","",182,[[["u"]],["result"]]],[11,"into","","",182,[[],["u"]]],[11,"try_into","","",182,[[],["result"]]],[11,"borrow","","",182,[[["self"]],["t"]]],[11,"borrow_mut","","",182,[[["self"]],["t"]]],[11,"type_id","","",182,[[["self"]],["typeid"]]],[11,"to_owned","","",182,[[["self"]],["t"]]],[11,"clone_into","","",182,[[["self"],["t"]]]],[11,"from","","",183,[[["t"]],["t"]]],[11,"try_from","","",183,[[["u"]],["result"]]],[11,"into","","",183,[[],["u"]]],[11,"try_into","","",183,[[],["result"]]],[11,"borrow","","",183,[[["self"]],["t"]]],[11,"borrow_mut","","",183,[[["self"]],["t"]]],[11,"type_id","","",183,[[["self"]],["typeid"]]],[11,"to_owned","","",183,[[["self"]],["t"]]],[11,"clone_into","","",183,[[["self"],["t"]]]],[11,"from","","",184,[[["t"]],["t"]]],[11,"try_from","","",184,[[["u"]],["result"]]],[11,"into","","",184,[[],["u"]]],[11,"try_into","","",184,[[],["result"]]],[11,"borrow","","",184,[[["self"]],["t"]]],[11,"borrow_mut","","",184,[[["self"]],["t"]]],[11,"type_id","","",184,[[["self"]],["typeid"]]],[11,"to_owned","","",184,[[["self"]],["t"]]],[11,"clone_into","","",184,[[["self"],["t"]]]],[11,"from","","",185,[[["t"]],["t"]]],[11,"try_from","","",185,[[["u"]],["result"]]],[11,"into","","",185,[[],["u"]]],[11,"try_into","","",185,[[],["result"]]],[11,"borrow","","",185,[[["self"]],["t"]]],[11,"borrow_mut","","",185,[[["self"]],["t"]]],[11,"type_id","","",185,[[["self"]],["typeid"]]],[11,"to_owned","","",185,[[["self"]],["t"]]],[11,"clone_into","","",185,[[["self"],["t"]]]],[11,"from","","",186,[[["t"]],["t"]]],[11,"try_from","","",186,[[["u"]],["result"]]],[11,"into","","",186,[[],["u"]]],[11,"try_into","","",186,[[],["result"]]],[11,"borrow","","",186,[[["self"]],["t"]]],[11,"borrow_mut","","",186,[[["self"]],["t"]]],[11,"type_id","","",186,[[["self"]],["typeid"]]],[11,"to_owned","","",186,[[["self"]],["t"]]],[11,"clone_into","","",186,[[["self"],["t"]]]],[11,"from","","",187,[[["t"]],["t"]]],[11,"try_from","","",187,[[["u"]],["result"]]],[11,"into","","",187,[[],["u"]]],[11,"try_into","","",187,[[],["result"]]],[11,"borrow","","",187,[[["self"]],["t"]]],[11,"borrow_mut","","",187,[[["self"]],["t"]]],[11,"type_id","","",187,[[["self"]],["typeid"]]],[11,"to_owned","","",187,[[["self"]],["t"]]],[11,"clone_into","","",187,[[["self"],["t"]]]],[11,"from","","",188,[[["t"]],["t"]]],[11,"try_from","","",188,[[["u"]],["result"]]],[11,"into","","",188,[[],["u"]]],[11,"try_into","","",188,[[],["result"]]],[11,"borrow","","",188,[[["self"]],["t"]]],[11,"borrow_mut","","",188,[[["self"]],["t"]]],[11,"type_id","","",188,[[["self"]],["typeid"]]],[11,"to_owned","","",188,[[["self"]],["t"]]],[11,"clone_into","","",188,[[["self"],["t"]]]],[11,"from","","",189,[[["t"]],["t"]]],[11,"try_from","","",189,[[["u"]],["result"]]],[11,"into","","",189,[[],["u"]]],[11,"try_into","","",189,[[],["result"]]],[11,"borrow","","",189,[[["self"]],["t"]]],[11,"borrow_mut","","",189,[[["self"]],["t"]]],[11,"type_id","","",189,[[["self"]],["typeid"]]],[11,"to_owned","","",189,[[["self"]],["t"]]],[11,"clone_into","","",189,[[["self"],["t"]]]],[11,"from","","",190,[[["t"]],["t"]]],[11,"try_from","","",190,[[["u"]],["result"]]],[11,"into","","",190,[[],["u"]]],[11,"try_into","","",190,[[],["result"]]],[11,"borrow","","",190,[[["self"]],["t"]]],[11,"borrow_mut","","",190,[[["self"]],["t"]]],[11,"type_id","","",190,[[["self"]],["typeid"]]],[11,"to_owned","","",190,[[["self"]],["t"]]],[11,"clone_into","","",190,[[["self"],["t"]]]],[11,"from","","",191,[[["t"]],["t"]]],[11,"try_from","","",191,[[["u"]],["result"]]],[11,"into","","",191,[[],["u"]]],[11,"try_into","","",191,[[],["result"]]],[11,"borrow","","",191,[[["self"]],["t"]]],[11,"borrow_mut","","",191,[[["self"]],["t"]]],[11,"type_id","","",191,[[["self"]],["typeid"]]],[11,"to_owned","","",191,[[["self"]],["t"]]],[11,"clone_into","","",191,[[["self"],["t"]]]],[11,"from","","",192,[[["t"]],["t"]]],[11,"try_from","","",192,[[["u"]],["result"]]],[11,"into","","",192,[[],["u"]]],[11,"try_into","","",192,[[],["result"]]],[11,"borrow","","",192,[[["self"]],["t"]]],[11,"borrow_mut","","",192,[[["self"]],["t"]]],[11,"type_id","","",192,[[["self"]],["typeid"]]],[11,"to_owned","","",192,[[["self"]],["t"]]],[11,"clone_into","","",192,[[["self"],["t"]]]],[11,"from","","",193,[[["t"]],["t"]]],[11,"try_from","","",193,[[["u"]],["result"]]],[11,"into","","",193,[[],["u"]]],[11,"try_into","","",193,[[],["result"]]],[11,"borrow","","",193,[[["self"]],["t"]]],[11,"borrow_mut","","",193,[[["self"]],["t"]]],[11,"type_id","","",193,[[["self"]],["typeid"]]],[11,"to_owned","","",193,[[["self"]],["t"]]],[11,"clone_into","","",193,[[["self"],["t"]]]],[11,"from","","",194,[[["t"]],["t"]]],[11,"try_from","","",194,[[["u"]],["result"]]],[11,"into","","",194,[[],["u"]]],[11,"try_into","","",194,[[],["result"]]],[11,"borrow","","",194,[[["self"]],["t"]]],[11,"borrow_mut","","",194,[[["self"]],["t"]]],[11,"type_id","","",194,[[["self"]],["typeid"]]],[11,"to_owned","","",194,[[["self"]],["t"]]],[11,"clone_into","","",194,[[["self"],["t"]]]],[11,"from","","",195,[[["t"]],["t"]]],[11,"try_from","","",195,[[["u"]],["result"]]],[11,"into","","",195,[[],["u"]]],[11,"try_into","","",195,[[],["result"]]],[11,"borrow","","",195,[[["self"]],["t"]]],[11,"borrow_mut","","",195,[[["self"]],["t"]]],[11,"type_id","","",195,[[["self"]],["typeid"]]],[11,"to_owned","","",195,[[["self"]],["t"]]],[11,"clone_into","","",195,[[["self"],["t"]]]],[11,"from","","",196,[[["t"]],["t"]]],[11,"try_from","","",196,[[["u"]],["result"]]],[11,"into","","",196,[[],["u"]]],[11,"try_into","","",196,[[],["result"]]],[11,"borrow","","",196,[[["self"]],["t"]]],[11,"borrow_mut","","",196,[[["self"]],["t"]]],[11,"type_id","","",196,[[["self"]],["typeid"]]],[11,"to_owned","","",196,[[["self"]],["t"]]],[11,"clone_into","","",196,[[["self"],["t"]]]],[11,"from","","",197,[[["t"]],["t"]]],[11,"try_from","","",197,[[["u"]],["result"]]],[11,"into","","",197,[[],["u"]]],[11,"try_into","","",197,[[],["result"]]],[11,"borrow","","",197,[[["self"]],["t"]]],[11,"borrow_mut","","",197,[[["self"]],["t"]]],[11,"type_id","","",197,[[["self"]],["typeid"]]],[11,"to_owned","","",197,[[["self"]],["t"]]],[11,"clone_into","","",197,[[["self"],["t"]]]],[11,"from","","",198,[[["t"]],["t"]]],[11,"try_from","","",198,[[["u"]],["result"]]],[11,"into","","",198,[[],["u"]]],[11,"try_into","","",198,[[],["result"]]],[11,"borrow","","",198,[[["self"]],["t"]]],[11,"borrow_mut","","",198,[[["self"]],["t"]]],[11,"type_id","","",198,[[["self"]],["typeid"]]],[11,"to_owned","","",198,[[["self"]],["t"]]],[11,"clone_into","","",198,[[["self"],["t"]]]],[11,"from","","",199,[[["t"]],["t"]]],[11,"try_from","","",199,[[["u"]],["result"]]],[11,"into","","",199,[[],["u"]]],[11,"try_into","","",199,[[],["result"]]],[11,"borrow","","",199,[[["self"]],["t"]]],[11,"borrow_mut","","",199,[[["self"]],["t"]]],[11,"type_id","","",199,[[["self"]],["typeid"]]],[11,"to_owned","","",199,[[["self"]],["t"]]],[11,"clone_into","","",199,[[["self"],["t"]]]],[11,"from","","",200,[[["t"]],["t"]]],[11,"try_from","","",200,[[["u"]],["result"]]],[11,"into","","",200,[[],["u"]]],[11,"try_into","","",200,[[],["result"]]],[11,"borrow","","",200,[[["self"]],["t"]]],[11,"borrow_mut","","",200,[[["self"]],["t"]]],[11,"type_id","","",200,[[["self"]],["typeid"]]],[11,"to_owned","","",200,[[["self"]],["t"]]],[11,"clone_into","","",200,[[["self"],["t"]]]],[11,"from","","",201,[[["t"]],["t"]]],[11,"try_from","","",201,[[["u"]],["result"]]],[11,"into","","",201,[[],["u"]]],[11,"try_into","","",201,[[],["result"]]],[11,"borrow","","",201,[[["self"]],["t"]]],[11,"borrow_mut","","",201,[[["self"]],["t"]]],[11,"type_id","","",201,[[["self"]],["typeid"]]],[11,"to_owned","","",201,[[["self"]],["t"]]],[11,"clone_into","","",201,[[["self"],["t"]]]],[11,"from","","",202,[[["t"]],["t"]]],[11,"try_from","","",202,[[["u"]],["result"]]],[11,"into","","",202,[[],["u"]]],[11,"try_into","","",202,[[],["result"]]],[11,"borrow","","",202,[[["self"]],["t"]]],[11,"borrow_mut","","",202,[[["self"]],["t"]]],[11,"type_id","","",202,[[["self"]],["typeid"]]],[11,"to_owned","","",202,[[["self"]],["t"]]],[11,"clone_into","","",202,[[["self"],["t"]]]],[11,"from","","",203,[[["t"]],["t"]]],[11,"try_from","","",203,[[["u"]],["result"]]],[11,"into","","",203,[[],["u"]]],[11,"try_into","","",203,[[],["result"]]],[11,"borrow","","",203,[[["self"]],["t"]]],[11,"borrow_mut","","",203,[[["self"]],["t"]]],[11,"type_id","","",203,[[["self"]],["typeid"]]],[11,"to_owned","","",203,[[["self"]],["t"]]],[11,"clone_into","","",203,[[["self"],["t"]]]],[11,"from","","",204,[[["t"]],["t"]]],[11,"try_from","","",204,[[["u"]],["result"]]],[11,"into","","",204,[[],["u"]]],[11,"try_into","","",204,[[],["result"]]],[11,"borrow","","",204,[[["self"]],["t"]]],[11,"borrow_mut","","",204,[[["self"]],["t"]]],[11,"type_id","","",204,[[["self"]],["typeid"]]],[11,"to_owned","","",204,[[["self"]],["t"]]],[11,"clone_into","","",204,[[["self"],["t"]]]],[11,"from","","",205,[[["t"]],["t"]]],[11,"try_from","","",205,[[["u"]],["result"]]],[11,"into","","",205,[[],["u"]]],[11,"try_into","","",205,[[],["result"]]],[11,"borrow","","",205,[[["self"]],["t"]]],[11,"borrow_mut","","",205,[[["self"]],["t"]]],[11,"type_id","","",205,[[["self"]],["typeid"]]],[11,"to_owned","","",205,[[["self"]],["t"]]],[11,"clone_into","","",205,[[["self"],["t"]]]],[11,"from","","",206,[[["t"]],["t"]]],[11,"try_from","","",206,[[["u"]],["result"]]],[11,"into","","",206,[[],["u"]]],[11,"try_into","","",206,[[],["result"]]],[11,"borrow","","",206,[[["self"]],["t"]]],[11,"borrow_mut","","",206,[[["self"]],["t"]]],[11,"type_id","","",206,[[["self"]],["typeid"]]],[11,"to_owned","","",206,[[["self"]],["t"]]],[11,"clone_into","","",206,[[["self"],["t"]]]],[11,"from","","",207,[[["t"]],["t"]]],[11,"try_from","","",207,[[["u"]],["result"]]],[11,"into","","",207,[[],["u"]]],[11,"try_into","","",207,[[],["result"]]],[11,"borrow","","",207,[[["self"]],["t"]]],[11,"borrow_mut","","",207,[[["self"]],["t"]]],[11,"type_id","","",207,[[["self"]],["typeid"]]],[11,"to_owned","","",207,[[["self"]],["t"]]],[11,"clone_into","","",207,[[["self"],["t"]]]],[11,"from","","",208,[[["t"]],["t"]]],[11,"try_from","","",208,[[["u"]],["result"]]],[11,"into","","",208,[[],["u"]]],[11,"try_into","","",208,[[],["result"]]],[11,"borrow","","",208,[[["self"]],["t"]]],[11,"borrow_mut","","",208,[[["self"]],["t"]]],[11,"type_id","","",208,[[["self"]],["typeid"]]],[11,"to_owned","","",208,[[["self"]],["t"]]],[11,"clone_into","","",208,[[["self"],["t"]]]],[11,"from","","",209,[[["t"]],["t"]]],[11,"try_from","","",209,[[["u"]],["result"]]],[11,"into","","",209,[[],["u"]]],[11,"try_into","","",209,[[],["result"]]],[11,"borrow","","",209,[[["self"]],["t"]]],[11,"borrow_mut","","",209,[[["self"]],["t"]]],[11,"type_id","","",209,[[["self"]],["typeid"]]],[11,"to_owned","","",209,[[["self"]],["t"]]],[11,"clone_into","","",209,[[["self"],["t"]]]],[11,"from","","",210,[[["t"]],["t"]]],[11,"try_from","","",210,[[["u"]],["result"]]],[11,"into","","",210,[[],["u"]]],[11,"try_into","","",210,[[],["result"]]],[11,"borrow","","",210,[[["self"]],["t"]]],[11,"borrow_mut","","",210,[[["self"]],["t"]]],[11,"type_id","","",210,[[["self"]],["typeid"]]],[11,"to_owned","","",210,[[["self"]],["t"]]],[11,"clone_into","","",210,[[["self"],["t"]]]],[11,"from","","",211,[[["t"]],["t"]]],[11,"try_from","","",211,[[["u"]],["result"]]],[11,"into","","",211,[[],["u"]]],[11,"try_into","","",211,[[],["result"]]],[11,"borrow","","",211,[[["self"]],["t"]]],[11,"borrow_mut","","",211,[[["self"]],["t"]]],[11,"type_id","","",211,[[["self"]],["typeid"]]],[11,"to_owned","","",211,[[["self"]],["t"]]],[11,"clone_into","","",211,[[["self"],["t"]]]],[11,"from","","",212,[[["t"]],["t"]]],[11,"try_from","","",212,[[["u"]],["result"]]],[11,"into","","",212,[[],["u"]]],[11,"try_into","","",212,[[],["result"]]],[11,"borrow","","",212,[[["self"]],["t"]]],[11,"borrow_mut","","",212,[[["self"]],["t"]]],[11,"type_id","","",212,[[["self"]],["typeid"]]],[11,"to_owned","","",212,[[["self"]],["t"]]],[11,"clone_into","","",212,[[["self"],["t"]]]],[11,"from","","",213,[[["t"]],["t"]]],[11,"try_from","","",213,[[["u"]],["result"]]],[11,"into","","",213,[[],["u"]]],[11,"try_into","","",213,[[],["result"]]],[11,"borrow","","",213,[[["self"]],["t"]]],[11,"borrow_mut","","",213,[[["self"]],["t"]]],[11,"type_id","","",213,[[["self"]],["typeid"]]],[11,"to_owned","","",213,[[["self"]],["t"]]],[11,"clone_into","","",213,[[["self"],["t"]]]],[11,"from","","",214,[[["t"]],["t"]]],[11,"try_from","","",214,[[["u"]],["result"]]],[11,"into","","",214,[[],["u"]]],[11,"try_into","","",214,[[],["result"]]],[11,"borrow","","",214,[[["self"]],["t"]]],[11,"borrow_mut","","",214,[[["self"]],["t"]]],[11,"type_id","","",214,[[["self"]],["typeid"]]],[11,"to_owned","","",214,[[["self"]],["t"]]],[11,"clone_into","","",214,[[["self"],["t"]]]],[11,"from","","",215,[[["t"]],["t"]]],[11,"try_from","","",215,[[["u"]],["result"]]],[11,"into","","",215,[[],["u"]]],[11,"try_into","","",215,[[],["result"]]],[11,"borrow","","",215,[[["self"]],["t"]]],[11,"borrow_mut","","",215,[[["self"]],["t"]]],[11,"type_id","","",215,[[["self"]],["typeid"]]],[11,"to_owned","","",215,[[["self"]],["t"]]],[11,"clone_into","","",215,[[["self"],["t"]]]],[11,"from","","",216,[[["t"]],["t"]]],[11,"try_from","","",216,[[["u"]],["result"]]],[11,"into","","",216,[[],["u"]]],[11,"try_into","","",216,[[],["result"]]],[11,"borrow","","",216,[[["self"]],["t"]]],[11,"borrow_mut","","",216,[[["self"]],["t"]]],[11,"type_id","","",216,[[["self"]],["typeid"]]],[11,"to_owned","","",216,[[["self"]],["t"]]],[11,"clone_into","","",216,[[["self"],["t"]]]],[11,"from_big_endian","object::endian","",21,[[["bool"]],["option"]]],[11,"is_big_endian","","",21,[[],["bool"]]],[11,"from_big_endian","","",217,[[["bool"]],["option"]]],[11,"is_big_endian","","",217,[[],["bool"]]],[11,"from_big_endian","","",218,[[["bool"]],["option"]]],[11,"is_big_endian","","",218,[[],["bool"]]],[11,"is_type_64","object::elf","",71,[[["self"]],["bool"]]],[11,"e_ident","","",71,[[["self"]],["ident"]]],[11,"e_type","","",71,[[["self"]],["u16"]]],[11,"e_machine","","",71,[[["self"]],["u16"]]],[11,"e_version","","",71,[[["self"]],["u32"]]],[11,"e_entry","","",71,[[["self"]]]],[11,"e_phoff","","",71,[[["self"]]]],[11,"e_shoff","","",71,[[["self"]]]],[11,"e_flags","","",71,[[["self"]],["u32"]]],[11,"e_ehsize","","",71,[[["self"]],["u16"]]],[11,"e_phentsize","","",71,[[["self"]],["u16"]]],[11,"e_phnum","","",71,[[["self"]],["u16"]]],[11,"e_shentsize","","",71,[[["self"]],["u16"]]],[11,"e_shnum","","",71,[[["self"]],["u16"]]],[11,"e_shstrndx","","",71,[[["self"]],["u16"]]],[11,"is_type_64","","",72,[[["self"]],["bool"]]],[11,"e_ident","","",72,[[["self"]],["ident"]]],[11,"e_type","","",72,[[["self"]],["u16"]]],[11,"e_machine","","",72,[[["self"]],["u16"]]],[11,"e_version","","",72,[[["self"]],["u32"]]],[11,"e_entry","","",72,[[["self"]]]],[11,"e_phoff","","",72,[[["self"]]]],[11,"e_shoff","","",72,[[["self"]]]],[11,"e_flags","","",72,[[["self"]],["u32"]]],[11,"e_ehsize","","",72,[[["self"]],["u16"]]],[11,"e_phentsize","","",72,[[["self"]],["u16"]]],[11,"e_phnum","","",72,[[["self"]],["u16"]]],[11,"e_shentsize","","",72,[[["self"]],["u16"]]],[11,"e_shnum","","",72,[[["self"]],["u16"]]],[11,"e_shstrndx","","",72,[[["self"]],["u16"]]],[11,"p_type","","",84,[[["self"]],["u32"]]],[11,"p_flags","","",84,[[["self"]],["u32"]]],[11,"p_offset","","",84,[[["self"]]]],[11,"p_vaddr","","",84,[[["self"]]]],[11,"p_paddr","","",84,[[["self"]]]],[11,"p_filesz","","",84,[[["self"]]]],[11,"p_memsz","","",84,[[["self"]]]],[11,"p_align","","",84,[[["self"]]]],[11,"p_type","","",85,[[["self"]],["u32"]]],[11,"p_flags","","",85,[[["self"]],["u32"]]],[11,"p_offset","","",85,[[["self"]]]],[11,"p_vaddr","","",85,[[["self"]]]],[11,"p_paddr","","",85,[[["self"]]]],[11,"p_filesz","","",85,[[["self"]]]],[11,"p_memsz","","",85,[[["self"]]]],[11,"p_align","","",85,[[["self"]]]],[11,"sh_name","","",74,[[["self"]],["u32"]]],[11,"sh_type","","",74,[[["self"]],["u32"]]],[11,"sh_flags","","",74,[[["self"]]]],[11,"sh_addr","","",74,[[["self"]]]],[11,"sh_offset","","",74,[[["self"]]]],[11,"sh_size","","",74,[[["self"]]]],[11,"sh_link","","",74,[[["self"]],["u32"]]],[11,"sh_info","","",74,[[["self"]],["u32"]]],[11,"sh_addralign","","",74,[[["self"]]]],[11,"sh_entsize","","",74,[[["self"]]]],[11,"sh_name","","",75,[[["self"]],["u32"]]],[11,"sh_type","","",75,[[["self"]],["u32"]]],[11,"sh_flags","","",75,[[["self"]]]],[11,"sh_addr","","",75,[[["self"]]]],[11,"sh_offset","","",75,[[["self"]]]],[11,"sh_size","","",75,[[["self"]]]],[11,"sh_link","","",75,[[["self"]],["u32"]]],[11,"sh_info","","",75,[[["self"]],["u32"]]],[11,"sh_addralign","","",75,[[["self"]]]],[11,"sh_entsize","","",75,[[["self"]]]],[11,"st_name","","",78,[[["self"]],["u32"]]],[11,"st_info","","",78,[[["self"]],["u8"]]],[11,"st_bind","","",78,[[["self"]],["u8"]]],[11,"st_type","","",78,[[["self"]],["u8"]]],[11,"st_other","","",78,[[["self"]],["u8"]]],[11,"st_visibility","","",78,[[["self"]],["u8"]]],[11,"st_shndx","","",78,[[["self"]],["u16"]]],[11,"st_value","","",78,[[["self"]]]],[11,"st_size","","",78,[[["self"]]]],[11,"st_name","","",79,[[["self"]],["u32"]]],[11,"st_info","","",79,[[["self"]],["u8"]]],[11,"st_bind","","",79,[[["self"]],["u8"]]],[11,"st_type","","",79,[[["self"]],["u8"]]],[11,"st_other","","",79,[[["self"]],["u8"]]],[11,"st_visibility","","",79,[[["self"]],["u8"]]],[11,"st_shndx","","",79,[[["self"]],["u16"]]],[11,"st_value","","",79,[[["self"]]]],[11,"st_size","","",79,[[["self"]]]],[11,"r_offset","","",81,[[["self"]]]],[11,"r_info","","",81,[[["self"]]]],[11,"r_addend","","",81,[[["self"]]]],[11,"r_sym","","",81,[[["self"]],["u32"]]],[11,"r_type","","",81,[[["self"]],["u32"]]],[11,"r_offset","","",83,[[["self"]]]],[11,"r_info","","",83,[[["self"]]]],[11,"r_addend","","",83,[[["self"]]]],[11,"r_sym","","",83,[[["self"]],["u32"]]],[11,"r_type","","",83,[[["self"]],["u32"]]],[11,"ch_type","","",76,[[["self"]],["u32"]]],[11,"ch_size","","",76,[[["self"]]]],[11,"ch_addralign","","",76,[[["self"]]]],[11,"ch_type","","",77,[[["self"]],["u32"]]],[11,"ch_size","","",77,[[["self"]]]],[11,"ch_addralign","","",77,[[["self"]]]],[11,"n_namesz","","",86,[[["self"]],["u32"]]],[11,"n_descsz","","",86,[[["self"]],["u32"]]],[11,"n_type","","",86,[[["self"]],["u32"]]],[11,"n_namesz","","",87,[[["self"]],["u32"]]],[11,"n_descsz","","",87,[[["self"]],["u32"]]],[11,"n_type","","",87,[[["self"]],["u32"]]],[11,"is_type_64","object::macho","",91,[[["self"]],["bool"]]],[11,"is_big_endian","","",91,[[["self"]],["bool"]]],[11,"is_little_endian","","",91,[[["self"]],["bool"]]],[11,"magic","","",91,[[["self"]],["u32"]]],[11,"cputype","","",91,[[["self"]],["u32"]]],[11,"cpusubtype","","",91,[[["self"]],["u32"]]],[11,"filetype","","",91,[[["self"]],["u32"]]],[11,"ncmds","","",91,[[["self"]],["u32"]]],[11,"sizeofcmds","","",91,[[["self"]],["u32"]]],[11,"flags","","",91,[[["self"]],["u32"]]],[11,"is_type_64","","",92,[[["self"]],["bool"]]],[11,"is_big_endian","","",92,[[["self"]],["bool"]]],[11,"is_little_endian","","",92,[[["self"]],["bool"]]],[11,"magic","","",92,[[["self"]],["u32"]]],[11,"cputype","","",92,[[["self"]],["u32"]]],[11,"cpusubtype","","",92,[[["self"]],["u32"]]],[11,"filetype","","",92,[[["self"]],["u32"]]],[11,"ncmds","","",92,[[["self"]],["u32"]]],[11,"sizeofcmds","","",92,[[["self"]],["u32"]]],[11,"flags","","",92,[[["self"]],["u32"]]],[11,"from_command","","",95,[[["macholoadcommand"]],[["result",["option"]],["option"]]]],[11,"cmd","","",95,[[["self"]],["u32"]]],[11,"cmdsize","","",95,[[["self"]],["u32"]]],[11,"segname","","",95,[[["self"]]]],[11,"vmaddr","","",95,[[["self"]]]],[11,"vmsize","","",95,[[["self"]]]],[11,"fileoff","","",95,[[["self"]]]],[11,"filesize","","",95,[[["self"]]]],[11,"maxprot","","",95,[[["self"]],["u32"]]],[11,"initprot","","",95,[[["self"]],["u32"]]],[11,"nsects","","",95,[[["self"]],["u32"]]],[11,"flags","","",95,[[["self"]],["u32"]]],[11,"from_command","","",96,[[["macholoadcommand"]],[["result",["option"]],["option"]]]],[11,"cmd","","",96,[[["self"]],["u32"]]],[11,"cmdsize","","",96,[[["self"]],["u32"]]],[11,"segname","","",96,[[["self"]]]],[11,"vmaddr","","",96,[[["self"]]]],[11,"vmsize","","",96,[[["self"]]]],[11,"fileoff","","",96,[[["self"]]]],[11,"filesize","","",96,[[["self"]]]],[11,"maxprot","","",96,[[["self"]],["u32"]]],[11,"initprot","","",96,[[["self"]],["u32"]]],[11,"nsects","","",96,[[["self"]],["u32"]]],[11,"flags","","",96,[[["self"]],["u32"]]],[11,"sectname","","",97,[[["self"]]]],[11,"segname","","",97,[[["self"]]]],[11,"addr","","",97,[[["self"]]]],[11,"size","","",97,[[["self"]]]],[11,"offset","","",97,[[["self"]],["u32"]]],[11,"align","","",97,[[["self"]],["u32"]]],[11,"reloff","","",97,[[["self"]],["u32"]]],[11,"nreloc","","",97,[[["self"]],["u32"]]],[11,"flags","","",97,[[["self"]],["u32"]]],[11,"sectname","","",98,[[["self"]]]],[11,"segname","","",98,[[["self"]]]],[11,"addr","","",98,[[["self"]]]],[11,"size","","",98,[[["self"]]]],[11,"offset","","",98,[[["self"]],["u32"]]],[11,"align","","",98,[[["self"]],["u32"]]],[11,"reloff","","",98,[[["self"]],["u32"]]],[11,"nreloc","","",98,[[["self"]],["u32"]]],[11,"flags","","",98,[[["self"]],["u32"]]],[11,"n_strx","","",138,[[["self"]],["u32"]]],[11,"n_type","","",138,[[["self"]],["u8"]]],[11,"n_sect","","",138,[[["self"]],["u8"]]],[11,"n_desc","","",138,[[["self"]],["u16"]]],[11,"n_value","","",138,[[["self"]]]],[11,"n_strx","","",139,[[["self"]],["u32"]]],[11,"n_type","","",139,[[["self"]],["u8"]]],[11,"n_sect","","",139,[[["self"]],["u8"]]],[11,"n_desc","","",139,[[["self"]],["u16"]]],[11,"n_value","","",139,[[["self"]]]],[11,"is_type_64","object::pe","",152,[[["self"]],["bool"]]],[11,"is_valid_optional_magic","","",152,[[["self"]],["bool"]]],[11,"signature","","",152,[[["self"]],["u32"]]],[11,"file_header","","",152,[[["self"]],["imagefileheader"]]],[11,"optional_header","","",152,[[["self"]]]],[11,"is_type_64","","",151,[[["self"]],["bool"]]],[11,"is_valid_optional_magic","","",151,[[["self"]],["bool"]]],[11,"signature","","",151,[[["self"]],["u32"]]],[11,"file_header","","",151,[[["self"]],["imagefileheader"]]],[11,"optional_header","","",151,[[["self"]]]],[11,"magic","","",148,[[["self"]],["u16"]]],[11,"major_linker_version","","",148,[[["self"]],["u8"]]],[11,"minor_linker_version","","",148,[[["self"]],["u8"]]],[11,"size_of_code","","",148,[[["self"]],["u32"]]],[11,"size_of_initialized_data","","",148,[[["self"]],["u32"]]],[11,"size_of_uninitialized_data","","",148,[[["self"]],["u32"]]],[11,"address_of_entry_point","","",148,[[["self"]],["u32"]]],[11,"base_of_code","","",148,[[["self"]],["u32"]]],[11,"image_base","","",148,[[["self"]],["u64"]]],[11,"section_alignment","","",148,[[["self"]],["u32"]]],[11,"file_alignment","","",148,[[["self"]],["u32"]]],[11,"major_operating_system_version","","",148,[[["self"]],["u16"]]],[11,"minor_operating_system_version","","",148,[[["self"]],["u16"]]],[11,"major_image_version","","",148,[[["self"]],["u16"]]],[11,"minor_image_version","","",148,[[["self"]],["u16"]]],[11,"major_subsystem_version","","",148,[[["self"]],["u16"]]],[11,"minor_subsystem_version","","",148,[[["self"]],["u16"]]],[11,"win32_version_value","","",148,[[["self"]],["u32"]]],[11,"size_of_image","","",148,[[["self"]],["u32"]]],[11,"size_of_headers","","",148,[[["self"]],["u32"]]],[11,"check_sum","","",148,[[["self"]],["u32"]]],[11,"subsystem","","",148,[[["self"]],["u16"]]],[11,"dll_characteristics","","",148,[[["self"]],["u16"]]],[11,"size_of_stack_reserve","","",148,[[["self"]],["u64"]]],[11,"size_of_stack_commit","","",148,[[["self"]],["u64"]]],[11,"size_of_heap_reserve","","",148,[[["self"]],["u64"]]],[11,"size_of_heap_commit","","",148,[[["self"]],["u64"]]],[11,"loader_flags","","",148,[[["self"]],["u32"]]],[11,"number_of_rva_and_sizes","","",148,[[["self"]],["u32"]]],[11,"magic","","",150,[[["self"]],["u16"]]],[11,"major_linker_version","","",150,[[["self"]],["u8"]]],[11,"minor_linker_version","","",150,[[["self"]],["u8"]]],[11,"size_of_code","","",150,[[["self"]],["u32"]]],[11,"size_of_initialized_data","","",150,[[["self"]],["u32"]]],[11,"size_of_uninitialized_data","","",150,[[["self"]],["u32"]]],[11,"address_of_entry_point","","",150,[[["self"]],["u32"]]],[11,"base_of_code","","",150,[[["self"]],["u32"]]],[11,"image_base","","",150,[[["self"]],["u64"]]],[11,"section_alignment","","",150,[[["self"]],["u32"]]],[11,"file_alignment","","",150,[[["self"]],["u32"]]],[11,"major_operating_system_version","","",150,[[["self"]],["u16"]]],[11,"minor_operating_system_version","","",150,[[["self"]],["u16"]]],[11,"major_image_version","","",150,[[["self"]],["u16"]]],[11,"minor_image_version","","",150,[[["self"]],["u16"]]],[11,"major_subsystem_version","","",150,[[["self"]],["u16"]]],[11,"minor_subsystem_version","","",150,[[["self"]],["u16"]]],[11,"win32_version_value","","",150,[[["self"]],["u32"]]],[11,"size_of_image","","",150,[[["self"]],["u32"]]],[11,"size_of_headers","","",150,[[["self"]],["u32"]]],[11,"check_sum","","",150,[[["self"]],["u32"]]],[11,"subsystem","","",150,[[["self"]],["u16"]]],[11,"dll_characteristics","","",150,[[["self"]],["u16"]]],[11,"size_of_stack_reserve","","",150,[[["self"]],["u64"]]],[11,"size_of_stack_commit","","",150,[[["self"]],["u64"]]],[11,"size_of_heap_reserve","","",150,[[["self"]],["u64"]]],[11,"size_of_heap_commit","","",150,[[["self"]],["u64"]]],[11,"loader_flags","","",150,[[["self"]],["u32"]]],[11,"number_of_rva_and_sizes","","",150,[[["self"]],["u32"]]],[11,"architecture","object::read","",40,[[["self"]],["architecture"]]],[11,"is_little_endian","","",40,[[["self"]],["bool"]]],[11,"is_64","","",40,[[["self"]],["bool"]]],[11,"segments","","",40,[[["self"]],["segmentiterator"]]],[11,"section_by_name","","",40,[[["str"],["self"]],[["option",["section"]],["section"]]]],[11,"section_by_index","","",40,[[["sectionindex"],["self"]],[["section"],["result",["section"]]]]],[11,"sections","","",40,[[["self"]],["sectioniterator"]]],[11,"symbol_by_index","","",40,[[["self"],["symbolindex"]],[["result",["symbol"]],["symbol"]]]],[11,"symbols","","",40,[[["self"]],["symboliterator"]]],[11,"dynamic_symbols","","",40,[[["self"]],["symboliterator"]]],[11,"symbol_map","","",40,[[["self"]],["symbolmap"]]],[11,"has_debug_symbols","","",40,[[["self"]],["bool"]]],[11,"mach_uuid","","",40,[[["self"]],[["result",["option"]],["option"]]]],[11,"build_id","","",40,[[["self"]],[["result",["option"]],["option"]]]],[11,"gnu_debuglink","","",40,[[["self"]],[["result",["option"]],["option"]]]],[11,"entry","","",40,[[["self"]],["u64"]]],[11,"flags","","",40,[[["self"]],["fileflags"]]],[11,"architecture","object::read::coff","",41,[[["self"]],["architecture"]]],[11,"is_little_endian","","",41,[[["self"]],["bool"]]],[11,"is_64","","",41,[[["self"]],["bool"]]],[11,"segments","","",41,[[["self"]],["coffsegmentiterator"]]],[11,"section_by_name","","",41,[[["str"],["self"]],[["coffsection"],["option",["coffsection"]]]]],[11,"section_by_index","","",41,[[["sectionindex"],["self"]],[["result",["coffsection"]],["coffsection"]]]],[11,"sections","","",41,[[["self"]],["coffsectioniterator"]]],[11,"symbol_by_index","","",41,[[["self"],["symbolindex"]],[["result",["symbol"]],["symbol"]]]],[11,"symbols","","",41,[[["self"]],["coffsymboliterator"]]],[11,"dynamic_symbols","","",41,[[["self"]],["coffsymboliterator"]]],[11,"symbol_map","","",41,[[["self"]],["symbolmap"]]],[11,"has_debug_symbols","","",41,[[["self"]],["bool"]]],[11,"entry","","",41,[[["self"]],["u64"]]],[11,"flags","","",41,[[["self"]],["fileflags"]]],[11,"architecture","object::read::elf","",44,[[["self"]],["architecture"]]],[11,"is_little_endian","","",44,[[["self"]],["bool"]]],[11,"is_64","","",44,[[["self"]],["bool"]]],[11,"segments","","",44,[[["self"]],["elfsegmentiterator"]]],[11,"section_by_name","","",44,[[["str"],["self"]],[["option",["elfsection"]],["elfsection"]]]],[11,"section_by_index","","",44,[[["sectionindex"],["self"]],[["elfsection"],["result",["elfsection"]]]]],[11,"sections","","",44,[[["self"]],["elfsectioniterator"]]],[11,"symbol_by_index","","",44,[[["self"],["symbolindex"]],[["symbol"],["result",["symbol"]]]]],[11,"symbols","","",44,[[["self"]],["elfsymboliterator"]]],[11,"dynamic_symbols","","",44,[[["self"]],["elfsymboliterator"]]],[11,"symbol_map","","",44,[[["self"]],["symbolmap"]]],[11,"has_debug_symbols","","",44,[[["self"]],["bool"]]],[11,"build_id","","",44,[[["self"]],[["result",["option"]],["option"]]]],[11,"gnu_debuglink","","",44,[[["self"]],[["result",["option"]],["option"]]]],[11,"entry","","",44,[[["self"]],["u64"]]],[11,"flags","","",44,[[["self"]],["fileflags"]]],[11,"architecture","object::read::macho","",56,[[["self"]],["architecture"]]],[11,"is_little_endian","","",56,[[["self"]],["bool"]]],[11,"is_64","","",56,[[["self"]],["bool"]]],[11,"segments","","",56,[[["self"]],["machosegmentiterator"]]],[11,"section_by_name","","",56,[[["str"],["self"]],[["machosection"],["option",["machosection"]]]]],[11,"section_by_index","","",56,[[["sectionindex"],["self"]],[["result",["machosection"]],["machosection"]]]],[11,"sections","","",56,[[["self"]],["machosectioniterator"]]],[11,"symbol_by_index","","",56,[[["self"],["symbolindex"]],[["result",["symbol"]],["symbol"]]]],[11,"symbols","","",56,[[["self"]],["machosymboliterator"]]],[11,"dynamic_symbols","","",56,[[["self"]],["machosymboliterator"]]],[11,"symbol_map","","",56,[[["self"]],["symbolmap"]]],[11,"has_debug_symbols","","",56,[[["self"]],["bool"]]],[11,"mach_uuid","","",56,[[["self"]],[["result",["option"]],["option"]]]],[11,"entry","","",56,[[["self"]],["u64"]]],[11,"flags","","",56,[[["self"]],["fileflags"]]],[11,"architecture","object::read::pe","",62,[[["self"]],["architecture"]]],[11,"is_little_endian","","",62,[[["self"]],["bool"]]],[11,"is_64","","",62,[[["self"]],["bool"]]],[11,"segments","","",62,[[["self"]],["pesegmentiterator"]]],[11,"section_by_name","","",62,[[["str"],["self"]],[["option",["pesection"]],["pesection"]]]],[11,"section_by_index","","",62,[[["sectionindex"],["self"]],[["result",["pesection"]],["pesection"]]]],[11,"sections","","",62,[[["self"]],["pesectioniterator"]]],[11,"symbol_by_index","","",62,[[["self"],["symbolindex"]],[["result",["symbol"]],["symbol"]]]],[11,"symbols","","",62,[[["self"]],["coffsymboliterator"]]],[11,"dynamic_symbols","","",62,[[["self"]],["coffsymboliterator"]]],[11,"symbol_map","","",62,[[["self"]],["symbolmap"]]],[11,"has_debug_symbols","","",62,[[["self"]],["bool"]]],[11,"entry","","",62,[[["self"]],["u64"]]],[11,"flags","","",62,[[["self"]],["fileflags"]]],[11,"address","object::read","",220,[[["self"]],["u64"]]],[11,"size","","",220,[[["self"]],["u64"]]],[11,"align","","",220,[[["self"]],["u64"]]],[11,"file_range","","",220,[[["self"]]]],[11,"data","","",220,[[["self"]],["result"]]],[11,"data_range","","",220,[[["self"],["u64"]],[["result",["option"]],["option"]]]],[11,"name","","",220,[[["self"]],[["result",["option"]],["option",["str"]]]]],[11,"address","object::read::coff","",227,[[["self"]],["u64"]]],[11,"size","","",227,[[["self"]],["u64"]]],[11,"align","","",227,[[["self"]],["u64"]]],[11,"file_range","","",227,[[["self"]]]],[11,"data","","",227,[[["self"]],["result"]]],[11,"data_range","","",227,[[["self"],["u64"]],[["result",["option"]],["option"]]]],[11,"name","","",227,[[["self"]],[["result",["option"]],["option",["str"]]]]],[11,"address","object::read::elf","",233,[[["self"]],["u64"]]],[11,"size","","",233,[[["self"]],["u64"]]],[11,"align","","",233,[[["self"]],["u64"]]],[11,"file_range","","",233,[[["self"]]]],[11,"data","","",233,[[["self"]],["result"]]],[11,"data_range","","",233,[[["self"],["u64"]],[["result",["option"]],["option"]]]],[11,"name","","",233,[[["self"]],[["result",["option"]],["option",["str"]]]]],[11,"address","object::read::macho","",240,[[["self"]],["u64"]]],[11,"size","","",240,[[["self"]],["u64"]]],[11,"align","","",240,[[["self"]],["u64"]]],[11,"file_range","","",240,[[["self"]]]],[11,"data","","",240,[[["self"]],["result"]]],[11,"data_range","","",240,[[["self"],["u64"]],[["result",["option"]],["option"]]]],[11,"name","","",240,[[["self"]],[["result",["option"]],["option",["str"]]]]],[11,"address","object::read::pe","",246,[[["self"]],["u64"]]],[11,"size","","",246,[[["self"]],["u64"]]],[11,"align","","",246,[[["self"]],["u64"]]],[11,"file_range","","",246,[[["self"]]]],[11,"data","","",246,[[["self"]],["result"]]],[11,"data_range","","",246,[[["self"],["u64"]],[["result",["option"]],["option"]]]],[11,"name","","",246,[[["self"]],[["result",["option"]],["option",["str"]]]]],[11,"index","object::read","",222,[[["self"]],["sectionindex"]]],[11,"address","","",222,[[["self"]],["u64"]]],[11,"size","","",222,[[["self"]],["u64"]]],[11,"align","","",222,[[["self"]],["u64"]]],[11,"file_range","","",222,[[["self"]],["option"]]],[11,"data","","",222,[[["self"]],["result"]]],[11,"data_range","","",222,[[["self"],["u64"]],[["result",["option"]],["option"]]]],[11,"compressed_data","","",222,[[["self"]],[["compresseddata"],["result",["compresseddata"]]]]],[11,"name","","",222,[[["self"]],[["str"],["result",["str"]]]]],[11,"segment_name","","",222,[[["self"]],[["result",["option"]],["option",["str"]]]]],[11,"kind","","",222,[[["self"]],["sectionkind"]]],[11,"relocations","","",222,[[["self"]],["relocationiterator"]]],[11,"flags","","",222,[[["self"]],["sectionflags"]]],[11,"index","object::read::coff","",229,[[["self"]],["sectionindex"]]],[11,"address","","",229,[[["self"]],["u64"]]],[11,"size","","",229,[[["self"]],["u64"]]],[11,"align","","",229,[[["self"]],["u64"]]],[11,"file_range","","",229,[[["self"]],["option"]]],[11,"data","","",229,[[["self"]],["result"]]],[11,"data_range","","",229,[[["self"],["u64"]],[["result",["option"]],["option"]]]],[11,"compressed_data","","",229,[[["self"]],[["compresseddata"],["result",["compresseddata"]]]]],[11,"name","","",229,[[["self"]],[["str"],["result",["str"]]]]],[11,"segment_name","","",229,[[["self"]],[["result",["option"]],["option",["str"]]]]],[11,"kind","","",229,[[["self"]],["sectionkind"]]],[11,"relocations","","",229,[[["self"]],["coffrelocationiterator"]]],[11,"flags","","",229,[[["self"]],["sectionflags"]]],[11,"index","object::read::elf","",235,[[["self"]],["sectionindex"]]],[11,"address","","",235,[[["self"]],["u64"]]],[11,"size","","",235,[[["self"]],["u64"]]],[11,"align","","",235,[[["self"]],["u64"]]],[11,"file_range","","",235,[[["self"]],["option"]]],[11,"data","","",235,[[["self"]],["result"]]],[11,"data_range","","",235,[[["self"],["u64"]],[["result",["option"]],["option"]]]],[11,"compressed_data","","",235,[[["self"]],[["result",["compresseddata"]],["compresseddata"]]]],[11,"name","","",235,[[["self"]],[["str"],["result",["str"]]]]],[11,"segment_name","","",235,[[["self"]],[["result",["option"]],["option",["str"]]]]],[11,"kind","","",235,[[["self"]],["sectionkind"]]],[11,"relocations","","",235,[[["self"]],["elfrelocationiterator"]]],[11,"flags","","",235,[[["self"]],["sectionflags"]]],[11,"index","object::read::macho","",242,[[["self"]],["sectionindex"]]],[11,"address","","",242,[[["self"]],["u64"]]],[11,"size","","",242,[[["self"]],["u64"]]],[11,"align","","",242,[[["self"]],["u64"]]],[11,"file_range","","",242,[[["self"]],["option"]]],[11,"data","","",242,[[["self"]],["result"]]],[11,"data_range","","",242,[[["self"],["u64"]],[["result",["option"]],["option"]]]],[11,"compressed_data","","",242,[[["self"]],[["compresseddata"],["result",["compresseddata"]]]]],[11,"name","","",242,[[["self"]],[["str"],["result",["str"]]]]],[11,"segment_name","","",242,[[["self"]],[["result",["option"]],["option",["str"]]]]],[11,"kind","","",242,[[["self"]],["sectionkind"]]],[11,"relocations","","",242,[[["self"]],["machorelocationiterator"]]],[11,"flags","","",242,[[["self"]],["sectionflags"]]],[11,"index","object::read::pe","",248,[[["self"]],["sectionindex"]]],[11,"address","","",248,[[["self"]],["u64"]]],[11,"size","","",248,[[["self"]],["u64"]]],[11,"align","","",248,[[["self"]],["u64"]]],[11,"file_range","","",248,[[["self"]],["option"]]],[11,"data","","",248,[[["self"]],["result"]]],[11,"data_range","","",248,[[["self"],["u64"]],[["result",["option"]],["option"]]]],[11,"compressed_data","","",248,[[["self"]],[["compresseddata"],["result",["compresseddata"]]]]],[11,"name","","",248,[[["self"]],[["str"],["result",["str"]]]]],[11,"segment_name","","",248,[[["self"]],[["result",["option"]],["option",["str"]]]]],[11,"kind","","",248,[[["self"]],["sectionkind"]]],[11,"relocations","","",248,[[["self"]],["perelocationiterator"]]],[11,"flags","","",248,[[["self"]],["sectionflags"]]],[11,"from","object::elf","",81,[[["rel32"]],["self"]]],[11,"from","","",83,[[["rel64"]],["self"]]],[11,"fmt","object","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",6,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",8,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",9,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",13,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",17,[[["formatter"],["self"]],["result"]]],[11,"fmt","object::endian","",21,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",217,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",218,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",23,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",24,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",25,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",26,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",27,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",28,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",29,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",30,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",31,[[["self"],["formatter"]],["result"]]],[11,"fmt","object::pod","",32,[[["self"],["formatter"]],["result"]]],[11,"fmt","object::read","",39,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",40,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",219,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",220,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",221,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",222,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",223,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",224,[[["formatter"],["self"]],["result"]]],[11,"fmt","object::read::coff","",41,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",42,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",226,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",227,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",228,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",229,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",43,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",230,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",231,[[["self"],["formatter"]],["result"]]],[11,"fmt","object::read::elf","",44,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",232,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",233,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",45,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",234,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",235,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",46,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",236,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",47,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",237,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",238,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",48,[[["formatter"],["self"]],["result"]]],[11,"fmt","object::read::macho","",56,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",239,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",240,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",241,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",242,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",57,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",243,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",244,[[["self"],["formatter"]],["result"]]],[11,"fmt","object::read::pe","",62,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",245,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",246,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",247,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",248,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",249,[[["formatter"],["self"]],["result"]]],[11,"fmt","object::read","",225,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",33,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",34,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",36,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",68,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",69,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",37,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",70,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",35,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",38,[[["formatter"],["self"]],["result"]]],[11,"fmt","object::elf","",71,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",72,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",73,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",74,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",75,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",76,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",77,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",78,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",79,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",250,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",251,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",80,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",81,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",82,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",83,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",84,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",85,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",252,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",253,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",86,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",87,[[["formatter"],["self"]],["result"]]],[11,"fmt","object::macho","",88,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",89,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",90,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",91,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",92,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",93,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",94,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",95,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",96,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",97,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",98,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",99,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",100,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",101,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",102,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",103,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",104,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",105,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",106,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",107,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",108,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",109,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",110,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",111,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",112,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",113,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",114,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",115,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",116,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",117,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",118,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",119,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",120,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",121,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",122,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",123,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",124,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",125,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",126,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",127,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",128,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",129,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",130,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",131,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",132,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",133,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",134,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",135,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",136,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",137,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",138,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",139,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",140,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",141,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",142,[[["formatter"],["self"]],["result"]]],[11,"fmt","object::pe","",143,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",144,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",145,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",146,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",147,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",148,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",149,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",150,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",151,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",152,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",153,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",154,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",155,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",156,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",157,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",158,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",159,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",160,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",161,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",162,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",163,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",164,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",165,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",166,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",167,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",168,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",169,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",170,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",171,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",172,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",173,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",174,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",175,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",176,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",177,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",178,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",179,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",180,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",181,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",182,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",183,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",184,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",185,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",186,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",187,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",188,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",189,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",190,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",191,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",192,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",193,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",194,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",195,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",196,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",197,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",198,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",199,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",200,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",201,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",202,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",203,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",204,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",205,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",206,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",207,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",208,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",209,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",210,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",211,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",212,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",213,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",214,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",215,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",216,[[["formatter"],["self"]],["result"]]],[11,"fmt","object::read","",225,[[["self"],["formatter"]],["result"]]],[11,"eq","object","",0,[[["architecture"],["self"]],["bool"]]],[11,"eq","","",1,[[["self"],["addresssize"]],["bool"]]],[11,"eq","","",2,[[["self"],["binaryformat"]],["bool"]]],[11,"eq","","",3,[[["self"],["sectionkind"]],["bool"]]],[11,"eq","","",4,[[["self"],["symbolkind"]],["bool"]]],[11,"eq","","",5,[[["symbolscope"],["self"]],["bool"]]],[11,"eq","","",6,[[["relocationkind"],["self"]],["bool"]]],[11,"ne","","",6,[[["relocationkind"],["self"]],["bool"]]],[11,"eq","","",8,[[["self"],["relocationencoding"]],["bool"]]],[11,"eq","","",9,[[["self"],["fileflags"]],["bool"]]],[11,"ne","","",9,[[["self"],["fileflags"]],["bool"]]],[11,"eq","","",13,[[["sectionflags"],["self"]],["bool"]]],[11,"ne","","",13,[[["sectionflags"],["self"]],["bool"]]],[11,"eq","","",17,[[["self"],["symbolflags"]],["bool"]]],[11,"ne","","",17,[[["self"],["symbolflags"]],["bool"]]],[11,"eq","object::endian","",21,[[["self"],["endianness"]],["bool"]]],[11,"eq","","",217,[[["self"],["littleendian"]],["bool"]]],[11,"eq","","",218,[[["self"],["bigendian"]],["bool"]]],[11,"eq","","",23,[[["self"],["u16"]],["bool"]]],[11,"ne","","",23,[[["self"],["u16"]],["bool"]]],[11,"eq","","",24,[[["u32"],["self"]],["bool"]]],[11,"ne","","",24,[[["u32"],["self"]],["bool"]]],[11,"eq","","",25,[[["self"],["u64"]],["bool"]]],[11,"ne","","",25,[[["self"],["u64"]],["bool"]]],[11,"eq","","",26,[[["i16"],["self"]],["bool"]]],[11,"ne","","",26,[[["i16"],["self"]],["bool"]]],[11,"eq","","",27,[[["self"],["i32"]],["bool"]]],[11,"ne","","",27,[[["self"],["i32"]],["bool"]]],[11,"eq","","",28,[[["self"],["i64"]],["bool"]]],[11,"ne","","",28,[[["self"],["i64"]],["bool"]]],[11,"eq","","",29,[[["u16bytes"],["self"]],["bool"]]],[11,"ne","","",29,[[["u16bytes"],["self"]],["bool"]]],[11,"eq","","",30,[[["u32bytes"],["self"]],["bool"]]],[11,"ne","","",30,[[["u32bytes"],["self"]],["bool"]]],[11,"eq","","",31,[[["u64bytes"],["self"]],["bool"]]],[11,"ne","","",31,[[["u64bytes"],["self"]],["bool"]]],[11,"eq","object::pod","",32,[[["self"],["bytes"]],["bool"]]],[11,"ne","","",32,[[["self"],["bytes"]],["bool"]]],[11,"eq","object::read","",225,[[["error"],["self"]],["bool"]]],[11,"ne","","",225,[[["error"],["self"]],["bool"]]],[11,"eq","","",33,[[["self"],["sectionindex"]],["bool"]]],[11,"ne","","",33,[[["self"],["sectionindex"]],["bool"]]],[11,"eq","","",34,[[["symbolindex"],["self"]],["bool"]]],[11,"ne","","",34,[[["symbolindex"],["self"]],["bool"]]],[11,"eq","","",36,[[["self"],["symbolsection"]],["bool"]]],[11,"ne","","",36,[[["self"],["symbolsection"]],["bool"]]],[11,"eq","","",37,[[["self"],["relocationtarget"]],["bool"]]],[11,"ne","","",37,[[["self"],["relocationtarget"]],["bool"]]],[11,"eq","","",35,[[["compresseddata"],["self"]],["bool"]]],[11,"ne","","",35,[[["compresseddata"],["self"]],["bool"]]],[11,"eq","","",38,[[["compressionformat"],["self"]],["bool"]]],[11,"cmp","object::endian","",23,[[["self"],["u16"]],["ordering"]]],[11,"cmp","","",24,[[["u32"],["self"]],["ordering"]]],[11,"cmp","","",25,[[["self"],["u64"]],["ordering"]]],[11,"cmp","","",26,[[["i16"],["self"]],["ordering"]]],[11,"cmp","","",27,[[["self"],["i32"]],["ordering"]]],[11,"cmp","","",28,[[["self"],["i64"]],["ordering"]]],[11,"cmp","","",29,[[["u16bytes"],["self"]],["ordering"]]],[11,"cmp","","",30,[[["u32bytes"],["self"]],["ordering"]]],[11,"cmp","","",31,[[["u64bytes"],["self"]],["ordering"]]],[11,"partial_cmp","","",23,[[["self"],["u16"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",23,[[["self"],["u16"]],["bool"]]],[11,"le","","",23,[[["self"],["u16"]],["bool"]]],[11,"gt","","",23,[[["self"],["u16"]],["bool"]]],[11,"ge","","",23,[[["self"],["u16"]],["bool"]]],[11,"partial_cmp","","",24,[[["u32"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",24,[[["u32"],["self"]],["bool"]]],[11,"le","","",24,[[["u32"],["self"]],["bool"]]],[11,"gt","","",24,[[["u32"],["self"]],["bool"]]],[11,"ge","","",24,[[["u32"],["self"]],["bool"]]],[11,"partial_cmp","","",25,[[["self"],["u64"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",25,[[["self"],["u64"]],["bool"]]],[11,"le","","",25,[[["self"],["u64"]],["bool"]]],[11,"gt","","",25,[[["self"],["u64"]],["bool"]]],[11,"ge","","",25,[[["self"],["u64"]],["bool"]]],[11,"partial_cmp","","",26,[[["i16"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",26,[[["i16"],["self"]],["bool"]]],[11,"le","","",26,[[["i16"],["self"]],["bool"]]],[11,"gt","","",26,[[["i16"],["self"]],["bool"]]],[11,"ge","","",26,[[["i16"],["self"]],["bool"]]],[11,"partial_cmp","","",27,[[["self"],["i32"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",27,[[["self"],["i32"]],["bool"]]],[11,"le","","",27,[[["self"],["i32"]],["bool"]]],[11,"gt","","",27,[[["self"],["i32"]],["bool"]]],[11,"ge","","",27,[[["self"],["i32"]],["bool"]]],[11,"partial_cmp","","",28,[[["self"],["i64"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",28,[[["self"],["i64"]],["bool"]]],[11,"le","","",28,[[["self"],["i64"]],["bool"]]],[11,"gt","","",28,[[["self"],["i64"]],["bool"]]],[11,"ge","","",28,[[["self"],["i64"]],["bool"]]],[11,"partial_cmp","","",29,[[["u16bytes"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",29,[[["u16bytes"],["self"]],["bool"]]],[11,"le","","",29,[[["u16bytes"],["self"]],["bool"]]],[11,"gt","","",29,[[["u16bytes"],["self"]],["bool"]]],[11,"ge","","",29,[[["u16bytes"],["self"]],["bool"]]],[11,"partial_cmp","","",30,[[["u32bytes"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",30,[[["u32bytes"],["self"]],["bool"]]],[11,"le","","",30,[[["u32bytes"],["self"]],["bool"]]],[11,"gt","","",30,[[["u32bytes"],["self"]],["bool"]]],[11,"ge","","",30,[[["u32bytes"],["self"]],["bool"]]],[11,"partial_cmp","","",31,[[["u64bytes"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",31,[[["u64bytes"],["self"]],["bool"]]],[11,"le","","",31,[[["u64bytes"],["self"]],["bool"]]],[11,"gt","","",31,[[["u64bytes"],["self"]],["bool"]]],[11,"ge","","",31,[[["u64bytes"],["self"]],["bool"]]],[11,"hash","object","",0,[[["self"],["__h"]]]],[11,"hash","","",1,[[["self"],["__h"]]]],[11,"hash","","",2,[[["self"],["__h"]]]],[11,"hash","object::endian","",21,[[["self"],["__h"]]]],[11,"hash","","",217,[[["self"],["__h"]]]],[11,"hash","","",218,[[["self"],["__h"]]]],[11,"hash","","",23,[[["self"],["__h"]]]],[11,"hash","","",24,[[["self"],["__h"]]]],[11,"hash","","",25,[[["self"],["__h"]]]],[11,"hash","","",26,[[["self"],["__h"]]]],[11,"hash","","",27,[[["self"],["__h"]]]],[11,"hash","","",28,[[["self"],["__h"]]]],[11,"hash","","",29,[[["self"],["__h"]]]],[11,"hash","","",30,[[["self"],["__h"]]]],[11,"hash","","",31,[[["self"],["__h"]]]],[11,"hash","object::read","",33,[[["self"],["__h"]]]],[11,"hash","","",34,[[["self"],["__h"]]]],[11,"hash","","",36,[[["self"],["__h"]]]],[11,"hash","","",37,[[["self"],["__h"]]]],[11,"hash","","",35,[[["self"],["__h"]]]],[11,"hash","","",38,[[["self"],["__h"]]]],[11,"next","","",219,[[["self"]],["option"]]],[11,"next","","",221,[[["self"]],["option"]]],[11,"next","","",223,[[["self"]],["option"]]],[11,"next","","",224,[[["self"]],["option"]]],[11,"next","object::read::coff","",226,[[["self"]],["option"]]],[11,"next","","",228,[[["self"]],["option"]]],[11,"next","","",230,[[["self"]],["option"]]],[11,"next","","",231,[[["self"]],["option"]]],[11,"next","object::read::elf","",232,[[["self"]],["option"]]],[11,"next","","",234,[[["self"]],["option"]]],[11,"next","","",236,[[["self"]],["option"]]],[11,"next","","",237,[[["self"]],["option"]]],[11,"next","object::read::macho","",239,[[["self"]],["option"]]],[11,"next","","",241,[[["self"]],["option"]]],[11,"next","","",243,[[["self"]],["option"]]],[11,"next","","",244,[[["self"]],["option"]]],[11,"next","object::read::pe","",245,[[["self"]],["option"]]],[11,"next","","",247,[[["self"]],["option"]]],[11,"next","","",249,[[["self"]],["option"]]],[11,"clone","object","",0,[[["self"]],["architecture"]]],[11,"clone","","",1,[[["self"]],["addresssize"]]],[11,"clone","","",2,[[["self"]],["binaryformat"]]],[11,"clone","","",3,[[["self"]],["sectionkind"]]],[11,"clone","","",4,[[["self"]],["symbolkind"]]],[11,"clone","","",5,[[["self"]],["symbolscope"]]],[11,"clone","","",6,[[["self"]],["relocationkind"]]],[11,"clone","","",8,[[["self"]],["relocationencoding"]]],[11,"clone","","",9,[[["self"]],["fileflags"]]],[11,"clone","","",13,[[["self"]],["sectionflags"]]],[11,"clone","","",17,[[["self"]],["symbolflags"]]],[11,"clone","object::endian","",21,[[["self"]],["endianness"]]],[11,"clone","","",217,[[["self"]],["littleendian"]]],[11,"clone","","",218,[[["self"]],["bigendian"]]],[11,"clone","","",23,[[["self"]],["u16"]]],[11,"clone","","",24,[[["self"]],["u32"]]],[11,"clone","","",25,[[["self"]],["u64"]]],[11,"clone","","",26,[[["self"]],["i16"]]],[11,"clone","","",27,[[["self"]],["i32"]]],[11,"clone","","",28,[[["self"]],["i64"]]],[11,"clone","","",29,[[["self"]],["u16bytes"]]],[11,"clone","","",30,[[["self"]],["u32bytes"]]],[11,"clone","","",31,[[["self"]],["u64bytes"]]],[11,"clone","object::pod","",32,[[["self"]],["bytes"]]],[11,"clone","object::read","",39,[[["self"]],["stringtable"]]],[11,"clone","object::read::coff","",42,[[["self"]],["sectiontable"]]],[11,"clone","object::read::elf","",45,[[["self"]],["sectiontable"]]],[11,"clone","","",46,[[["self"]],["symboltable"]]],[11,"clone","object::read::macho","",57,[[["self"]],["symboltable"]]],[11,"clone","object::read","",225,[[["self"]],["error"]]],[11,"clone","","",33,[[["self"]],["sectionindex"]]],[11,"clone","","",34,[[["self"]],["symbolindex"]]],[11,"clone","","",36,[[["self"]],["symbolsection"]]],[11,"clone","","",68,[[["self"]],["symbol"]]],[11,"clone","","",37,[[["self"]],["relocationtarget"]]],[11,"clone","","",35,[[["self"]],["compresseddata"]]],[11,"clone","","",38,[[["self"]],["compressionformat"]]],[11,"clone","object::elf","",71,[[["self"]],["fileheader32"]]],[11,"clone","","",72,[[["self"]],["fileheader64"]]],[11,"clone","","",73,[[["self"]],["ident"]]],[11,"clone","","",74,[[["self"]],["sectionheader32"]]],[11,"clone","","",75,[[["self"]],["sectionheader64"]]],[11,"clone","","",76,[[["self"]],["compressionheader32"]]],[11,"clone","","",77,[[["self"]],["compressionheader64"]]],[11,"clone","","",78,[[["self"]],["sym32"]]],[11,"clone","","",79,[[["self"]],["sym64"]]],[11,"clone","","",250,[[["self"]],["syminfo32"]]],[11,"clone","","",251,[[["self"]],["syminfo64"]]],[11,"clone","","",80,[[["self"]],["rel32"]]],[11,"clone","","",81,[[["self"]],["rela32"]]],[11,"clone","","",82,[[["self"]],["rel64"]]],[11,"clone","","",83,[[["self"]],["rela64"]]],[11,"clone","","",84,[[["self"]],["programheader32"]]],[11,"clone","","",85,[[["self"]],["programheader64"]]],[11,"clone","","",252,[[["self"]],["dyn32"]]],[11,"clone","","",253,[[["self"]],["dyn64"]]],[11,"clone","","",86,[[["self"]],["noteheader32"]]],[11,"clone","","",87,[[["self"]],["noteheader64"]]],[11,"clone","object::macho","",88,[[["self"]],["fatheader"]]],[11,"clone","","",89,[[["self"]],["fatarch32"]]],[11,"clone","","",90,[[["self"]],["fatarch64"]]],[11,"clone","","",91,[[["self"]],["machheader32"]]],[11,"clone","","",92,[[["self"]],["machheader64"]]],[11,"clone","","",93,[[["self"]],["loadcommand"]]],[11,"clone","","",94,[[["self"]],["lcstr"]]],[11,"clone","","",95,[[["self"]],["segmentcommand32"]]],[11,"clone","","",96,[[["self"]],["segmentcommand64"]]],[11,"clone","","",97,[[["self"]],["section32"]]],[11,"clone","","",98,[[["self"]],["section64"]]],[11,"clone","","",99,[[["self"]],["fvmlib"]]],[11,"clone","","",100,[[["self"]],["fvmlibcommand"]]],[11,"clone","","",101,[[["self"]],["dylib"]]],[11,"clone","","",102,[[["self"]],["dylibcommand"]]],[11,"clone","","",103,[[["self"]],["subframeworkcommand"]]],[11,"clone","","",104,[[["self"]],["subclientcommand"]]],[11,"clone","","",105,[[["self"]],["subumbrellacommand"]]],[11,"clone","","",106,[[["self"]],["sublibrarycommand"]]],[11,"clone","","",107,[[["self"]],["prebounddylibcommand"]]],[11,"clone","","",108,[[["self"]],["dylinkercommand"]]],[11,"clone","","",109,[[["self"]],["threadcommand"]]],[11,"clone","","",110,[[["self"]],["routinescommand"]]],[11,"clone","","",111,[[["self"]],["routinescommand_64"]]],[11,"clone","","",112,[[["self"]],["symtabcommand"]]],[11,"clone","","",113,[[["self"]],["dysymtabcommand"]]],[11,"clone","","",114,[[["self"]],["dylibtableofcontents"]]],[11,"clone","","",115,[[["self"]],["dylibmodule32"]]],[11,"clone","","",116,[[["self"]],["dylibmodule64"]]],[11,"clone","","",117,[[["self"]],["dylibreference"]]],[11,"clone","","",118,[[["self"]],["twolevelhintscommand"]]],[11,"clone","","",119,[[["self"]],["twolevelhint"]]],[11,"clone","","",120,[[["self"]],["prebindcksumcommand"]]],[11,"clone","","",121,[[["self"]],["uuidcommand"]]],[11,"clone","","",122,[[["self"]],["rpathcommand"]]],[11,"clone","","",123,[[["self"]],["linkeditdatacommand"]]],[11,"clone","","",124,[[["self"]],["encryptioninfocommand"]]],[11,"clone","","",125,[[["self"]],["encryptioninfocommand64"]]],[11,"clone","","",126,[[["self"]],["versionmincommand"]]],[11,"clone","","",127,[[["self"]],["buildversioncommand"]]],[11,"clone","","",128,[[["self"]],["buildtoolversion"]]],[11,"clone","","",129,[[["self"]],["dyldinfocommand"]]],[11,"clone","","",130,[[["self"]],["linkeroptioncommand"]]],[11,"clone","","",131,[[["self"]],["symsegcommand"]]],[11,"clone","","",132,[[["self"]],["identcommand"]]],[11,"clone","","",133,[[["self"]],["fvmfilecommand"]]],[11,"clone","","",134,[[["self"]],["entrypointcommand"]]],[11,"clone","","",135,[[["self"]],["sourceversioncommand"]]],[11,"clone","","",136,[[["self"]],["dataincodeentry"]]],[11,"clone","","",137,[[["self"]],["notecommand"]]],[11,"clone","","",138,[[["self"]],["nlist32"]]],[11,"clone","","",139,[[["self"]],["nlist64"]]],[11,"clone","","",140,[[["self"]],["relocation"]]],[11,"clone","","",141,[[["self"]],["relocationinfo"]]],[11,"clone","","",142,[[["self"]],["scatteredrelocationinfo"]]],[11,"clone","object::pe","",143,[[["self"]],["imagedosheader"]]],[11,"clone","","",144,[[["self"]],["imageos2header"]]],[11,"clone","","",145,[[["self"]],["imagevxdheader"]]],[11,"clone","","",146,[[["self"]],["imagefileheader"]]],[11,"clone","","",147,[[["self"]],["imagedatadirectory"]]],[11,"clone","","",148,[[["self"]],["imageoptionalheader32"]]],[11,"clone","","",149,[[["self"]],["imageromoptionalheader"]]],[11,"clone","","",150,[[["self"]],["imageoptionalheader64"]]],[11,"clone","","",151,[[["self"]],["imagentheaders64"]]],[11,"clone","","",152,[[["self"]],["imagentheaders32"]]],[11,"clone","","",153,[[["self"]],["imageromheaders"]]],[11,"clone","","",154,[[["self"]],["guid"]]],[11,"clone","","",155,[[["self"]],["anonobjectheader"]]],[11,"clone","","",156,[[["self"]],["anonobjectheaderv2"]]],[11,"clone","","",157,[[["self"]],["anonobjectheaderbigobj"]]],[11,"clone","","",158,[[["self"]],["imagesectionheader"]]],[11,"clone","","",159,[[["self"]],["imagesymbol"]]],[11,"clone","","",160,[[["self"]],["imagesymbolbytes"]]],[11,"clone","","",161,[[["self"]],["imagesymbolex"]]],[11,"clone","","",162,[[["self"]],["imagesymbolexbytes"]]],[11,"clone","","",163,[[["self"]],["imageauxsymboltokendef"]]],[11,"clone","","",164,[[["self"]],["imageauxsymbolfunction"]]],[11,"clone","","",165,[[["self"]],["imageauxsymbolfunctionbeginend"]]],[11,"clone","","",166,[[["self"]],["imageauxsymbolweak"]]],[11,"clone","","",167,[[["self"]],["imageauxsymbolsection"]]],[11,"clone","","",168,[[["self"]],["imageauxsymbolcrc"]]],[11,"clone","","",169,[[["self"]],["imagerelocation"]]],[11,"clone","","",170,[[["self"]],["imagelinenumber"]]],[11,"clone","","",171,[[["self"]],["imagebaserelocation"]]],[11,"clone","","",172,[[["self"]],["imagearchivememberheader"]]],[11,"clone","","",173,[[["self"]],["imageexportdirectory"]]],[11,"clone","","",174,[[["self"]],["imageimportbyname"]]],[11,"clone","","",175,[[["self"]],["imagetlsdirectory64"]]],[11,"clone","","",176,[[["self"]],["imagetlsdirectory32"]]],[11,"clone","","",177,[[["self"]],["imageimportdescriptor"]]],[11,"clone","","",178,[[["self"]],["imageboundimportdescriptor"]]],[11,"clone","","",179,[[["self"]],["imageboundforwarderref"]]],[11,"clone","","",180,[[["self"]],["imagedelayloaddescriptor"]]],[11,"clone","","",181,[[["self"]],["imageresourcedirectory"]]],[11,"clone","","",182,[[["self"]],["imageresourcedirectoryentry"]]],[11,"clone","","",183,[[["self"]],["imageresourcedirectorystring"]]],[11,"clone","","",184,[[["self"]],["imageresourcedirstringu"]]],[11,"clone","","",185,[[["self"]],["imageresourcedataentry"]]],[11,"clone","","",186,[[["self"]],["imageloadconfigcodeintegrity"]]],[11,"clone","","",187,[[["self"]],["imagedynamicrelocationtable"]]],[11,"clone","","",188,[[["self"]],["imagedynamicrelocation32"]]],[11,"clone","","",189,[[["self"]],["imagedynamicrelocation64"]]],[11,"clone","","",190,[[["self"]],["imagedynamicrelocation32v2"]]],[11,"clone","","",191,[[["self"]],["imagedynamicrelocation64v2"]]],[11,"clone","","",192,[[["self"]],["imageprologuedynamicrelocationheader"]]],[11,"clone","","",193,[[["self"]],["imageepiloguedynamicrelocationheader"]]],[11,"clone","","",194,[[["self"]],["imageloadconfigdirectory32"]]],[11,"clone","","",195,[[["self"]],["imageloadconfigdirectory64"]]],[11,"clone","","",196,[[["self"]],["imagehotpatchinfo"]]],[11,"clone","","",197,[[["self"]],["imagehotpatchbase"]]],[11,"clone","","",198,[[["self"]],["imagehotpatchhashes"]]],[11,"clone","","",199,[[["self"]],["imagearmruntimefunctionentry"]]],[11,"clone","","",200,[[["self"]],["imagearm64runtimefunctionentry"]]],[11,"clone","","",201,[[["self"]],["imagealpha64runtimefunctionentry"]]],[11,"clone","","",202,[[["self"]],["imagealpharuntimefunctionentry"]]],[11,"clone","","",203,[[["self"]],["imageruntimefunctionentry"]]],[11,"clone","","",204,[[["self"]],["imageenclaveconfig32"]]],[11,"clone","","",205,[[["self"]],["imageenclaveconfig64"]]],[11,"clone","","",206,[[["self"]],["imageenclaveimport"]]],[11,"clone","","",207,[[["self"]],["imagedebugdirectory"]]],[11,"clone","","",208,[[["self"]],["imagecoffsymbolsheader"]]],[11,"clone","","",209,[[["self"]],["imagedebugmisc"]]],[11,"clone","","",210,[[["self"]],["imagefunctionentry"]]],[11,"clone","","",211,[[["self"]],["imagefunctionentry64"]]],[11,"clone","","",212,[[["self"]],["imageseparatedebugheader"]]],[11,"clone","","",213,[[["self"]],["nonpageddebuginfo"]]],[11,"clone","","",214,[[["self"]],["imagearchitectureentry"]]],[11,"clone","","",215,[[["self"]],["importobjectheader"]]],[11,"clone","","",216,[[["self"]],["imagecor20header"]]],[11,"default","object::endian","",21,[[],["endianness"]]],[11,"default","","",217,[[],["littleendian"]]],[11,"default","","",218,[[],["bigendian"]]],[11,"default","","",23,[[],["u16"]]],[11,"default","","",24,[[],["u32"]]],[11,"default","","",25,[[],["u64"]]],[11,"default","","",26,[[],["i16"]]],[11,"default","","",27,[[],["i32"]]],[11,"default","","",28,[[],["i64"]]],[11,"default","","",29,[[],["u16bytes"]]],[11,"default","","",30,[[],["u32bytes"]]],[11,"default","","",31,[[],["u64bytes"]]],[11,"default","object::pod","",32,[[],["bytes"]]],[11,"default","object::read","",39,[[],["stringtable"]]],[11,"default","object::read::coff","",42,[[],["sectiontable"]]],[11,"default","object::read::elf","",45,[[],["sectiontable"]]],[11,"default","","",46,[[],["self"]]],[11,"default","object::read::macho","",57,[[],["self"]]],[11,"default","object::read::pe","",249,[[],["perelocationiterator"]]],[11,"default","object::elf","",76,[[],["compressionheader32"]]],[11,"default","","",77,[[],["compressionheader64"]]],[11,"parse","object::pe","Read the DOS header.",146,[[["bytes"]],["result"]]],[11,"name","","Parse a COFF symbol name.",159,[[["self"],["stringtable"]],["result"]]],[11,"parse","object::read::elf","Read the file header.",49,[[["bytes"]],[["result"],["self"]]]],[11,"is_supported","","Check that the ident field in the file header is a…",49,[[["self"]],["bool"]]],[11,"is_class_32","","",49,[[["self"]],["bool"]]],[11,"is_class_64","","",49,[[["self"]],["bool"]]],[11,"is_little_endian","","",49,[[["self"]],["bool"]]],[11,"is_big_endian","","",49,[[["self"]],["bool"]]],[11,"endian","","",49,[[["self"]],["result"]]],[11,"section_0","","Return the first section header, if present.",49,[[["bytes"],["self"]],[["result",["option"]],["option"]]]],[11,"phnum","","Return the `e_phnum` field of the header. Handles extended…",49,[[["bytes"],["self"]],[["usize"],["result",["usize"]]]]],[11,"shnum","","Return the `e_shnum` field of the header. Handles extended…",49,[[["bytes"],["self"]],[["usize"],["result",["usize"]]]]],[11,"shstrndx","","Return the `e_shstrndx` field of the header. Handles…",49,[[["bytes"],["self"]],[["result",["u32"]],["u32"]]]],[11,"program_headers","","Return the slice of program headers.",49,[[["bytes"],["self"]],["result"]]],[11,"section_headers","","Return the slice of section headers.",49,[[["bytes"],["self"]],["result"]]],[11,"section_strings","","Return the string table for the section headers.",49,[[["bytes"],["self"]],[["result",["stringtable"]],["stringtable"]]]],[11,"sections","","Return the section table.",49,[[["bytes"],["self"]],[["sectiontable"],["result",["sectiontable"]]]]],[11,"file_range","","Return the offset and size of the segment in the file.",50,[[["self"]]]],[11,"data","","Return the segment data.",50,[[["bytes"],["self"]],[["result",["bytes"]],["bytes"]]]],[11,"notes","","Return a note iterator for the segment data.",50,[[["bytes"],["self"]],[["option",["elfnoteiterator"]],["result",["option"]]]]],[11,"file_range","","Return the offset and size of the section in the file.",51,[[["self"]],["option"]]],[11,"data","","Return the section data.",51,[[["bytes"],["self"]],[["result",["bytes"]],["bytes"]]]],[11,"data_as_array","","Return the section data as a slice of the given type.",51,[[["bytes"],["self"]],["result"]]],[11,"notes","","Return a note iterator for the section data.",51,[[["bytes"],["self"]],[["option",["elfnoteiterator"]],["result",["option"]]]]],[11,"name","","Parse the symbol name from the string table.",52,[[["self"],["stringtable"]],["result"]]],[11,"parse","object::read::macho","Read the file header.",58,[[["bytes"]],[["result"],["self"]]]],[11,"is_supported","","",58,[[["self"]],["bool"]]],[11,"endian","","",58,[[["self"]],["result"]]],[11,"load_commands","","",58,[[["bytes"],["self"]],[["result",["macholoadcommanditerator"]],["macholoadcommanditerator"]]]],[11,"uuid","","Return the UUID from the `LC_UUID` load command, if one is…",58,[[["bytes"],["self"]],[["result",["option"]],["option"]]]],[11,"symbols","object::macho","Return the symbol table that this command references.",112,[[["bytes"],["self"],["e"]],[["symboltable"],["result",["symboltable"]]]]],[11,"name","object::read::macho","Return the `segname` bytes up until the null terminator.",59,[[["self"]]]],[11,"file_range","","Return the offset and size of the segment in the file.",59,[[["self"]]]],[11,"data","","Get the segment data from the file data.",59,[[["bytes"],["self"]],[["result",["bytes"]],["bytes"]]]],[11,"sections","","Get the array of sections from the data following the…",59,[[["bytes"],["self"]],["result"]]],[11,"name","","Return the `sectname` bytes up until the null terminator.",60,[[["self"]]]],[11,"segment_name","","Return the `segname` bytes up until the null terminator.",60,[[["self"]]]],[11,"file_range","","Return the offset and size of the section in the file.",60,[[["self"]],["option"]]],[11,"data","","Return the section data.",60,[[["self"],["bytes"]],[["result",["bytes"]],["bytes"]]]],[11,"relocations","","Return the relocation array.",60,[[["self"],["bytes"]],["result"]]],[11,"name","","",61,[[["stringtable"],["self"]],["result"]]],[11,"is_undefined","","",61,[[["self"]],["bool"]]],[11,"parse","object::read::pe","Read the NT headers, including the data directories.",63,[[["imagedosheader"],["bytes"]],["result"]]],[11,"sections","","Read the section table.",63,[[["bytes"],["self"]],[["sectiontable"],["result",["sectiontable"]]]]],[11,"symbols","","Read the symbol table and string table.",63,[[["bytes"],["self"]],[["result",["symboltable"]],["symboltable"]]]],[11,"parse","object::pe","Read the DOS header.",143,[[["bytes"]],[["result"],["self"]]]],[11,"nt_headers","","Read the NT headers, including the data directories.",143,[[["bytes"],["self"]],["result"]]],[11,"pe_data","","Return the data for a PE section.",158,[[["bytes"],["self"]],[["result",["bytes"]],["bytes"]]]],[11,"endianness","object::read","Get the endianness of the file.",65,[[["self"]],["endianness"]]],[11,"symbol_data","","Get the data for the given symbol.",65,[[["symbol"],["self"]],[["result",["option"]],["option"]]]],[11,"mach_uuid","","The UUID from a Mach-O `LC_UUID` load command.",65,[[["self"]],[["result",["option"]],["option"]]]],[11,"build_id","","The build ID from an ELF `NT_GNU_BUILD_ID` note.",65,[[["self"]],[["result",["option"]],["option"]]]],[11,"gnu_debuglink","","The filename and CRC from a `.gnu_debuglink` section.",65,[[["self"]],[["result",["option"]],["option"]]]],[11,"uncompressed_data","","Returns the uncompressed contents of the section.",67,[[["self"]],[["result",["cow"]],["cow"]]]]],"p":[[4,"Architecture"],[4,"AddressSize"],[4,"BinaryFormat"],[4,"SectionKind"],[4,"SymbolKind"],[4,"SymbolScope"],[4,"RelocationKind"],[13,"MachO"],[4,"RelocationEncoding"],[4,"FileFlags"],[13,"Elf"],[13,"MachO"],[13,"Coff"],[4,"SectionFlags"],[13,"Elf"],[13,"MachO"],[13,"Coff"],[4,"SymbolFlags"],[13,"Elf"],[13,"MachO"],[13,"CoffSection"],[4,"Endianness"],[8,"Endian"],[3,"U16"],[3,"U32"],[3,"U64"],[3,"I16"],[3,"I32"],[3,"I64"],[3,"U16Bytes"],[3,"U32Bytes"],[3,"U64Bytes"],[3,"Bytes"],[3,"SectionIndex"],[3,"SymbolIndex"],[3,"CompressedData"],[4,"SymbolSection"],[4,"RelocationTarget"],[4,"CompressionFormat"],[3,"StringTable"],[3,"File"],[3,"CoffFile"],[3,"SectionTable"],[3,"SymbolTable"],[3,"ElfFile"],[3,"SectionTable"],[3,"SymbolTable"],[3,"RelocationSections"],[3,"ElfNote"],[8,"FileHeader"],[8,"ProgramHeader"],[8,"SectionHeader"],[8,"Sym"],[8,"Rela"],[8,"CompressionHeader"],[8,"NoteHeader"],[3,"MachOFile"],[3,"SymbolTable"],[8,"MachHeader"],[8,"Segment"],[8,"Section"],[8,"Nlist"],[3,"PeFile"],[8,"ImageNtHeaders"],[8,"ImageOptionalHeader"],[8,"Object"],[8,"ObjectSegment"],[8,"ObjectSection"],[3,"Symbol"],[3,"SymbolMap"],[3,"Relocation"],[3,"FileHeader32"],[3,"FileHeader64"],[3,"Ident"],[3,"SectionHeader32"],[3,"SectionHeader64"],[3,"CompressionHeader32"],[3,"CompressionHeader64"],[3,"Sym32"],[3,"Sym64"],[3,"Rel32"],[3,"Rela32"],[3,"Rel64"],[3,"Rela64"],[3,"ProgramHeader32"],[3,"ProgramHeader64"],[3,"NoteHeader32"],[3,"NoteHeader64"],[3,"FatHeader"],[3,"FatArch32"],[3,"FatArch64"],[3,"MachHeader32"],[3,"MachHeader64"],[3,"LoadCommand"],[3,"LcStr"],[3,"SegmentCommand32"],[3,"SegmentCommand64"],[3,"Section32"],[3,"Section64"],[3,"Fvmlib"],[3,"FvmlibCommand"],[3,"Dylib"],[3,"DylibCommand"],[3,"SubFrameworkCommand"],[3,"SubClientCommand"],[3,"SubUmbrellaCommand"],[3,"SubLibraryCommand"],[3,"PreboundDylibCommand"],[3,"DylinkerCommand"],[3,"ThreadCommand"],[3,"RoutinesCommand"],[3,"RoutinesCommand_64"],[3,"SymtabCommand"],[3,"DysymtabCommand"],[3,"DylibTableOfContents"],[3,"DylibModule32"],[3,"DylibModule64"],[3,"DylibReference"],[3,"TwolevelHintsCommand"],[3,"TwolevelHint"],[3,"PrebindCksumCommand"],[3,"UuidCommand"],[3,"RpathCommand"],[3,"LinkeditDataCommand"],[3,"EncryptionInfoCommand"],[3,"EncryptionInfoCommand64"],[3,"VersionMinCommand"],[3,"BuildVersionCommand"],[3,"BuildToolVersion"],[3,"DyldInfoCommand"],[3,"LinkerOptionCommand"],[3,"SymSegCommand"],[3,"IdentCommand"],[3,"FvmfileCommand"],[3,"EntryPointCommand"],[3,"SourceVersionCommand"],[3,"DataInCodeEntry"],[3,"NoteCommand"],[3,"Nlist32"],[3,"Nlist64"],[3,"Relocation"],[3,"RelocationInfo"],[3,"ScatteredRelocationInfo"],[3,"ImageDosHeader"],[3,"ImageOs2Header"],[3,"ImageVxdHeader"],[3,"ImageFileHeader"],[3,"ImageDataDirectory"],[3,"ImageOptionalHeader32"],[3,"ImageRomOptionalHeader"],[3,"ImageOptionalHeader64"],[3,"ImageNtHeaders64"],[3,"ImageNtHeaders32"],[3,"ImageRomHeaders"],[3,"Guid"],[3,"AnonObjectHeader"],[3,"AnonObjectHeaderV2"],[3,"AnonObjectHeaderBigobj"],[3,"ImageSectionHeader"],[3,"ImageSymbol"],[3,"ImageSymbolBytes"],[3,"ImageSymbolEx"],[3,"ImageSymbolExBytes"],[3,"ImageAuxSymbolTokenDef"],[3,"ImageAuxSymbolFunction"],[3,"ImageAuxSymbolFunctionBeginEnd"],[3,"ImageAuxSymbolWeak"],[3,"ImageAuxSymbolSection"],[3,"ImageAuxSymbolCrc"],[3,"ImageRelocation"],[3,"ImageLinenumber"],[3,"ImageBaseRelocation"],[3,"ImageArchiveMemberHeader"],[3,"ImageExportDirectory"],[3,"ImageImportByName"],[3,"ImageTlsDirectory64"],[3,"ImageTlsDirectory32"],[3,"ImageImportDescriptor"],[3,"ImageBoundImportDescriptor"],[3,"ImageBoundForwarderRef"],[3,"ImageDelayloadDescriptor"],[3,"ImageResourceDirectory"],[3,"ImageResourceDirectoryEntry"],[3,"ImageResourceDirectoryString"],[3,"ImageResourceDirStringU"],[3,"ImageResourceDataEntry"],[3,"ImageLoadConfigCodeIntegrity"],[3,"ImageDynamicRelocationTable"],[3,"ImageDynamicRelocation32"],[3,"ImageDynamicRelocation64"],[3,"ImageDynamicRelocation32V2"],[3,"ImageDynamicRelocation64V2"],[3,"ImagePrologueDynamicRelocationHeader"],[3,"ImageEpilogueDynamicRelocationHeader"],[3,"ImageLoadConfigDirectory32"],[3,"ImageLoadConfigDirectory64"],[3,"ImageHotPatchInfo"],[3,"ImageHotPatchBase"],[3,"ImageHotPatchHashes"],[3,"ImageArmRuntimeFunctionEntry"],[3,"ImageArm64RuntimeFunctionEntry"],[3,"ImageAlpha64RuntimeFunctionEntry"],[3,"ImageAlphaRuntimeFunctionEntry"],[3,"ImageRuntimeFunctionEntry"],[3,"ImageEnclaveConfig32"],[3,"ImageEnclaveConfig64"],[3,"ImageEnclaveImport"],[3,"ImageDebugDirectory"],[3,"ImageCoffSymbolsHeader"],[3,"ImageDebugMisc"],[3,"ImageFunctionEntry"],[3,"ImageFunctionEntry64"],[3,"ImageSeparateDebugHeader"],[3,"NonPagedDebugInfo"],[3,"ImageArchitectureEntry"],[3,"ImportObjectHeader"],[3,"ImageCor20Header"],[3,"LittleEndian"],[3,"BigEndian"],[3,"SegmentIterator"],[3,"Segment"],[3,"SectionIterator"],[3,"Section"],[3,"SymbolIterator"],[3,"RelocationIterator"],[3,"Error"],[3,"CoffSegmentIterator"],[3,"CoffSegment"],[3,"CoffSectionIterator"],[3,"CoffSection"],[3,"CoffSymbolIterator"],[3,"CoffRelocationIterator"],[3,"ElfSegmentIterator"],[3,"ElfSegment"],[3,"ElfSectionIterator"],[3,"ElfSection"],[3,"ElfSymbolIterator"],[3,"ElfRelocationIterator"],[3,"ElfNoteIterator"],[3,"MachOSegmentIterator"],[3,"MachOSegment"],[3,"MachOSectionIterator"],[3,"MachOSection"],[3,"MachOSymbolIterator"],[3,"MachORelocationIterator"],[3,"PeSegmentIterator"],[3,"PeSegment"],[3,"PeSectionIterator"],[3,"PeSection"],[3,"PeRelocationIterator"],[3,"Syminfo32"],[3,"Syminfo64"],[3,"Dyn32"],[3,"Dyn64"]]};
searchIndex["owning_ref"] = {"doc":"An owning reference.","i":[[8,"StableAddress","owning_ref","An unsafe marker trait for types that deref to a stable…",null,null],[8,"CloneStableAddress","","An unsafe marker trait for types where clones deref to the…",null,null],[3,"OwningRef","","An owning reference.",null,null],[3,"OwningRefMut","","An mutable owning reference.",null,null],[3,"OwningHandle","","`OwningHandle` is a complement to `OwningRef`. Where…",null,null],[6,"BoxRef","","Typedef of a owning reference that uses a `Box` as the…",null,null],[6,"VecRef","","Typedef of a owning reference that uses a `Vec` as the…",null,null],[6,"StringRef","","Typedef of a owning reference that uses a `String` as the…",null,null],[6,"RcRef","","Typedef of a owning reference that uses a `Rc` as the owner.",null,null],[6,"ArcRef","","Typedef of a owning reference that uses a `Arc` as the…",null,null],[6,"RefRef","","Typedef of a owning reference that uses a `Ref` as the…",null,null],[6,"RefMutRef","","Typedef of a owning reference that uses a `RefMut` as the…",null,null],[6,"MutexGuardRef","","Typedef of a owning reference that uses a `MutexGuard` as…",null,null],[6,"RwLockReadGuardRef","","Typedef of a owning reference that uses a…",null,null],[6,"RwLockWriteGuardRef","","Typedef of a owning reference that uses a…",null,null],[6,"BoxRefMut","","Typedef of a mutable owning reference that uses a `Box` as…",null,null],[6,"VecRefMut","","Typedef of a mutable owning reference that uses a `Vec` as…",null,null],[6,"StringRefMut","","Typedef of a mutable owning reference that uses a `String`…",null,null],[6,"RefMutRefMut","","Typedef of a mutable owning reference that uses a `RefMut`…",null,null],[6,"MutexGuardRefMut","","Typedef of a mutable owning reference that uses a…",null,null],[6,"RwLockWriteGuardRefMut","","Typedef of a mutable owning reference that uses a…",null,null],[6,"ErasedBoxRef","","Typedef of a owning reference that uses an erased `Box` as…",null,null],[6,"ErasedRcRef","","Typedef of a owning reference that uses an erased `Rc` as…",null,null],[6,"ErasedArcRef","","Typedef of a owning reference that uses an erased `Arc` as…",null,null],[6,"ErasedBoxRefMut","","Typedef of a mutable owning reference that uses an erased…",null,null],[8,"Erased","","Helper trait for an erased concrete type an owner…",null,null],[8,"IntoErased","","Helper trait for erasing the concrete type of what an…",null,null],[16,"Erased","","Owner with the dereference type substituted to `Erased`.",0,null],[10,"into_erased","","Perform the type erasure.",0,[[]]],[8,"ToHandle","","Trait to implement the conversion of owner to handle for…",null,null],[16,"Handle","","The type of handle to be encapsulated by the OwningHandle.",1,null],[10,"to_handle","","Given an appropriately-long-lived pointer to ourselves,…",1,[[]]],[8,"ToHandleMut","","Trait to implement the conversion of owner to mutable…",null,null],[16,"HandleMut","","The type of handle to be encapsulated by the OwningHandle.",2,null],[10,"to_handle_mut","","Given an appropriately-long-lived pointer to ourselves,…",2,[[]]],[11,"new","","Creates a new owning reference from a owner initialized to…",3,[[["o"]],["self"]]],[11,"new_assert_stable_address","","Like `new`, but doesn’t require `O` to implement the…",3,[[["o"]],["self"]]],[11,"map","","Converts `self` into a new owning reference that points at…",3,[[["f"]],[["owningref"],["sized"]]]],[11,"map_with_owner","","Converts `self` into a new owning reference that points at…",3,[[["f"]],[["owningref"],["sized"]]]],[11,"try_map","","Tries to convert `self` into a new owning reference that…",3,[[["f"]],[["result",["owningref"]],["owningref"]]]],[11,"try_map_with_owner","","Tries to convert `self` into a new owning reference that…",3,[[["f"]],[["result",["owningref"]],["owningref"]]]],[11,"map_owner","","Converts `self` into a new owning reference with a…",3,[[["f"]],["owningref"]]],[11,"map_owner_box","","Converts `self` into a new owning reference where the…",3,[[],[["owningref",["box"]],["box"]]]],[11,"erase_owner","","Erases the concrete base type of the owner with a trait…",3,[[],["owningref"]]],[11,"as_owner","","A reference to the underlying owner.",3,[[["self"]],["o"]]],[11,"into_owner","","Discards the reference and retrieves the owner.",3,[[],["o"]]],[11,"new","","Creates a new owning reference from a owner initialized to…",4,[[["o"]],["self"]]],[11,"new_assert_stable_address","","Like `new`, but doesn’t require `O` to implement the…",4,[[["o"]],["self"]]],[11,"map","","Converts `self` into a new shared owning reference that…",4,[[["f"]],[["owningref"],["sized"]]]],[11,"map_mut","","Converts `self` into a new mutable owning reference that…",4,[[["f"]],[["sized"],["owningrefmut"]]]],[11,"try_map","","Tries to convert `self` into a new shared owning reference…",4,[[["f"]],[["result",["owningref"]],["owningref"]]]],[11,"try_map_mut","","Tries to convert `self` into a new mutable owning…",4,[[["f"]],[["result",["owningrefmut"]],["owningrefmut"]]]],[11,"map_owner","","Converts `self` into a new owning reference with a…",4,[[["f"]],["owningrefmut"]]],[11,"map_owner_box","","Converts `self` into a new owning reference where the…",4,[[],[["owningrefmut",["box"]],["box"]]]],[11,"erase_owner","","Erases the concrete base type of the owner with a trait…",4,[[],["owningrefmut"]]],[11,"as_owner","","A reference to the underlying owner.",4,[[["self"]],["o"]]],[11,"as_owner_mut","","A mutable reference to the underlying owner.",4,[[["self"]],["o"]]],[11,"into_owner","","Discards the reference and retrieves the owner.",4,[[],["o"]]],[11,"new","","Create a new `OwningHandle` for a type that implements…",5,[[["o"]],["self"]]],[11,"new_mut","","Create a new mutable `OwningHandle` for a type that…",5,[[["o"]],["self"]]],[11,"new_with_fn","","Create a new OwningHandle. The provided callback will be…",5,[[["o"],["f"]],["self"]]],[11,"try_new","","Create a new OwningHandle. The provided callback will be…",5,[[["o"],["f"]],["result"]]],[11,"as_owner","","A getter for the underlying owner.",5,[[["self"]],["o"]]],[11,"into_owner","","Discards the dependent object and returns the owner.",5,[[],["o"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"as_mut","","",4,[[["self"]],["t"]]],[11,"as_ref","","",3,[[["self"]],["t"]]],[11,"as_ref","","",4,[[["self"]],["t"]]],[11,"from","","",3,[[["o"]],["self"]]],[11,"from","","",4,[[["o"]],["self"]]],[11,"from","","",3,[[["owningrefmut"]],["self"]]],[11,"clone","","",3,[[["self"]],["self"]]],[11,"cmp","","",3,[[["self"]],["ordering"]]],[11,"cmp","","",4,[[["self"]],["ordering"]]],[11,"eq","","",3,[[["self"]],["bool"]]],[11,"eq","","",4,[[["self"]],["bool"]]],[11,"partial_cmp","","",3,[[["self"]],[["ordering"],["option",["ordering"]]]]],[11,"partial_cmp","","",4,[[["self"]],[["ordering"],["option",["ordering"]]]]],[11,"deref","","",5,[[["self"]]]],[11,"deref","","",3,[[["self"]],["t"]]],[11,"deref","","",4,[[["self"]],["t"]]],[11,"deref_mut","","",5,[[["self"]]]],[11,"deref_mut","","",4,[[["self"]],["t"]]],[11,"fmt","","",3,[[["formatter"],["self"]],[["result",["error"]],["error"]]]],[11,"fmt","","",4,[[["formatter"],["self"]],[["result",["error"]],["error"]]]],[11,"fmt","","",6,[[["formatter"],["self"]],[["result",["error"]],["error"]]]],[11,"hash","","",3,[[["self"],["h"]]]],[11,"hash","","",4,[[["self"],["h"]]]],[11,"borrow","","",3,[[["self"]],["t"]]]],"p":[[8,"IntoErased"],[8,"ToHandle"],[8,"ToHandleMut"],[3,"OwningRef"],[3,"OwningRefMut"],[3,"OwningHandle"],[8,"Erased"]]};
searchIndex["percent_encoding"] = {"doc":"URLs use special chacters to indicate the parts of the…","i":[[3,"SIMPLE_ENCODE_SET","percent_encoding","This encode set is used for the path of cannot-be-a-base…",null,null],[3,"QUERY_ENCODE_SET","","This encode set is used in the URL parser for query strings.",null,null],[3,"DEFAULT_ENCODE_SET","","This encode set is used for path components.",null,null],[3,"PATH_SEGMENT_ENCODE_SET","","This encode set is used for on '/'-separated path segment",null,null],[3,"USERINFO_ENCODE_SET","","This encode set is used for username and password.",null,null],[3,"PercentEncode","","The return type of `percent_encode()` and…",null,null],[3,"PercentDecode","","The return type of `percent_decode()`.",null,null],[5,"percent_encode_byte","","Return the percent-encoding of the given bytes.",null,[[["u8"]],["str"]]],[5,"percent_encode","","Percent-encode the given bytes with the given encode set.",null,[[["encodeset"]],[["percentencode"],["encodeset"]]]],[5,"utf8_percent_encode","","Percent-encode the UTF-8 encoding of the given string.",null,[[["str"],["encodeset"]],[["percentencode"],["encodeset"]]]],[5,"percent_decode","","Percent-decode the given bytes.",null,[[],["percentdecode"]]],[8,"EncodeSet","","Represents a set of characters / bytes that should be…",null,null],[10,"contains","","Called with UTF-8 bytes rather than code points. Should…",0,[[["self"],["u8"]],["bool"]]],[11,"if_any","","If the percent-decoding is different from the input,…",1,[[["self"]],[["option",["vec"]],["vec",["u8"]]]]],[11,"decode_utf8","","Decode the result of percent-decoding as UTF-8.",1,[[],[["result",["cow","utf8error"]],["cow",["str"]],["utf8error"]]]],[11,"decode_utf8_lossy","","Decode the result of percent-decoding as UTF-8, lossily.",1,[[],[["str"],["cow",["str"]]]]],[14,"define_encode_set","","Define a new struct that implements the `EncodeSet` trait,…",null,null],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,[[["self"],["t"]]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,[[["self"],["t"]]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,[[["self"],["t"]]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"into_iter","","",7,[[],["i"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,[[["self"],["t"]]]],[11,"to_string","","",7,[[["self"]],["string"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"into_iter","","",1,[[],["i"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"contains","","",2,[[["self"],["u8"]],["bool"]]],[11,"contains","","",3,[[["self"],["u8"]],["bool"]]],[11,"contains","","",4,[[["self"],["u8"]],["bool"]]],[11,"contains","","",5,[[["self"],["u8"]],["bool"]]],[11,"contains","","",6,[[["self"],["u8"]],["bool"]]],[11,"next","","",7,[[["self"]],[["str"],["option",["str"]]]]],[11,"size_hint","","",7,[[["self"]]]],[11,"next","","",1,[[["self"]],[["option",["u8"]],["u8"]]]],[11,"size_hint","","",1,[[["self"]]]],[11,"clone","","",2,[[["self"]],["simple_encode_set"]]],[11,"clone","","",3,[[["self"]],["query_encode_set"]]],[11,"clone","","",4,[[["self"]],["default_encode_set"]]],[11,"clone","","",5,[[["self"]],["path_segment_encode_set"]]],[11,"clone","","",6,[[["self"]],["userinfo_encode_set"]]],[11,"clone","","",7,[[["self"]],["percentencode"]]],[11,"clone","","",1,[[["self"]],["percentdecode"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",6,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",7,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",7,[[["formatter"],["self"]],["result"]]]],"p":[[8,"EncodeSet"],[3,"PercentDecode"],[3,"SIMPLE_ENCODE_SET"],[3,"QUERY_ENCODE_SET"],[3,"DEFAULT_ENCODE_SET"],[3,"PATH_SEGMENT_ENCODE_SET"],[3,"USERINFO_ENCODE_SET"],[3,"PercentEncode"]]};
searchIndex["ppv_lite86"] = {"doc":"","i":[[0,"x86_64","ppv_lite86","",null,null],[3,"YesS3","ppv_lite86::x86_64","",null,null],[3,"NoS3","","",null,null],[3,"YesS4","","",null,null],[3,"NoS4","","",null,null],[3,"YesA1","","",null,null],[3,"NoA1","","",null,null],[3,"YesA2","","",null,null],[3,"NoA2","","",null,null],[3,"YesNI","","",null,null],[3,"NoNI","","",null,null],[3,"SseMachine","","",null,null],[3,"Avx2Machine","","",null,null],[19,"vec128_storage","","Generic wrapper for unparameterized storage of any of the…",null,null],[19,"vec256_storage","","",null,null],[19,"vec512_storage","","",null,null],[6,"SSE2","","",null,null],[6,"SSSE3","","",null,null],[6,"SSE41","","",null,null],[6,"AVX","","AVX but not AVX2: only 128-bit integer operations, but use…",null,null],[6,"AVX2","","",null,null],[11,"new128","","",0,[[],["self"]]],[11,"split128","","",0,[[]]],[11,"new128","","",1,[[],["self"]]],[11,"split128","","",1,[[]]],[8,"AndNot","ppv_lite86","",null,null],[16,"Output","","",2,null],[10,"andnot","","",2,[[]]],[8,"BSwap","","",null,null],[10,"bswap","","",3,[[],["self"]]],[8,"ArithOps","","Ops that depend on word size",null,null],[8,"BitOps0","","Ops that are independent of word size and endian",null,null],[8,"BitOps32","","",null,null],[8,"BitOps64","","",null,null],[8,"BitOps128","","",null,null],[8,"RotateEachWord32","","",null,null],[10,"rotate_each_word_right7","","",4,[[],["self"]]],[10,"rotate_each_word_right8","","",4,[[],["self"]]],[10,"rotate_each_word_right11","","",4,[[],["self"]]],[10,"rotate_each_word_right12","","",4,[[],["self"]]],[10,"rotate_each_word_right16","","",4,[[],["self"]]],[10,"rotate_each_word_right20","","",4,[[],["self"]]],[10,"rotate_each_word_right24","","",4,[[],["self"]]],[10,"rotate_each_word_right25","","",4,[[],["self"]]],[8,"RotateEachWord64","","",null,null],[10,"rotate_each_word_right32","","",5,[[],["self"]]],[8,"RotateEachWord128","","",null,null],[8,"UnsafeFrom","","",null,null],[10,"unsafe_from","","",6,[[["t"]],["self"]]],[8,"Vec2","","A vector composed of two elements, which may be words or…",null,null],[10,"extract","","",7,[[["u32"]],["w"]]],[10,"insert","","",7,[[["w"],["u32"]],["self"]]],[8,"Vec4","","A vector composed of four elements, which may be words or…",null,null],[10,"extract","","",8,[[["u32"]],["w"]]],[10,"insert","","",8,[[["w"],["u32"]],["self"]]],[8,"Words4","","A vector composed of four words; depending on their size,…",null,null],[10,"shuffle1230","","",9,[[],["self"]]],[10,"shuffle2301","","",9,[[],["self"]]],[10,"shuffle3012","","",9,[[],["self"]]],[8,"LaneWords4","","A vector composed one or more lanes each composed of four…",null,null],[10,"shuffle_lane_words1230","","",10,[[],["self"]]],[10,"shuffle_lane_words2301","","",10,[[],["self"]]],[10,"shuffle_lane_words3012","","",10,[[],["self"]]],[8,"Swap64","","Exchange neigboring ranges of bits of the specified size",null,null],[10,"swap1","","",11,[[],["self"]]],[10,"swap2","","",11,[[],["self"]]],[10,"swap4","","",11,[[],["self"]]],[10,"swap8","","",11,[[],["self"]]],[10,"swap16","","",11,[[],["self"]]],[10,"swap32","","",11,[[],["self"]]],[10,"swap64","","",11,[[],["self"]]],[8,"u32x4","","",null,null],[8,"u64x2","","",null,null],[8,"u128x1","","",null,null],[8,"u32x4x2","","",null,null],[8,"u64x2x2","","",null,null],[8,"u64x4","","",null,null],[8,"u128x2","","",null,null],[8,"u32x4x4","","",null,null],[8,"u64x2x4","","",null,null],[8,"u128x4","","",null,null],[8,"MultiLane","","A vector composed of multiple 128-bit lanes.",null,null],[10,"to_lanes","","Split a multi-lane vector into single-lane vectors.",12,[[],["lanes"]]],[10,"from_lanes","","Build a multi-lane vector from individual lanes.",12,[[["lanes"]],["self"]]],[8,"VZip","","Combine single vectors into a multi-lane vector.",null,null],[10,"vzip","","",13,[[],["v"]]],[8,"Machine","","",null,null],[16,"u32x4","","",14,null],[16,"u64x2","","",14,null],[16,"u128x1","","",14,null],[16,"u32x4x2","","",14,null],[16,"u64x2x2","","",14,null],[16,"u64x4","","",14,null],[16,"u128x2","","",14,null],[16,"u32x4x4","","",14,null],[16,"u64x2x4","","",14,null],[16,"u128x4","","",14,null],[11,"unpack","","",14,[[["s"]],["store"]]],[11,"vec","","",14,[[["a"]],["v"]]],[11,"read_le","","",14,[[],["v"]]],[11,"read_be","","",14,[[],["v"]]],[10,"instance","","",14,[[],["self"]]],[8,"Store","","",null,null],[10,"unpack","","",15,[[["s"]],["self"]]],[8,"StoreBytes","","",null,null],[10,"unsafe_read_le","","",16,[[],["self"]]],[10,"unsafe_read_be","","",16,[[],["self"]]],[10,"write_le","","",16,[[]]],[10,"write_be","","",16,[[]]],[14,"dispatch","","Generate the full set of optimized implementations to take…",null,null],[14,"dispatch_light128","","Generate only the basic implementations necessary to be…",null,null],[14,"dispatch_light256","","Generate only the basic implementations necessary to be…",null,null],[11,"from","ppv_lite86::x86_64","",17,[[["t"]],["t"]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"into","","",17,[[],["u"]]],[11,"try_into","","",17,[[],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"type_id","","",17,[[["self"]],["typeid"]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"into","","",18,[[],["u"]]],[11,"try_into","","",18,[[],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"type_id","","",18,[[["self"]],["typeid"]]],[11,"from","","",19,[[["t"]],["t"]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"into","","",19,[[],["u"]]],[11,"try_into","","",19,[[],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"type_id","","",19,[[["self"]],["typeid"]]],[11,"from","","",20,[[["t"]],["t"]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"into","","",20,[[],["u"]]],[11,"try_into","","",20,[[],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"type_id","","",20,[[["self"]],["typeid"]]],[11,"from","","",21,[[["t"]],["t"]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"into","","",21,[[],["u"]]],[11,"try_into","","",21,[[],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"type_id","","",21,[[["self"]],["typeid"]]],[11,"from","","",22,[[["t"]],["t"]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"into","","",22,[[],["u"]]],[11,"try_into","","",22,[[],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"type_id","","",22,[[["self"]],["typeid"]]],[11,"from","","",23,[[["t"]],["t"]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"into","","",23,[[],["u"]]],[11,"try_into","","",23,[[],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"type_id","","",23,[[["self"]],["typeid"]]],[11,"from","","",24,[[["t"]],["t"]]],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"into","","",24,[[],["u"]]],[11,"try_into","","",24,[[],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"type_id","","",24,[[["self"]],["typeid"]]],[11,"from","","",25,[[["t"]],["t"]]],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"into","","",25,[[],["u"]]],[11,"try_into","","",25,[[],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"type_id","","",25,[[["self"]],["typeid"]]],[11,"from","","",26,[[["t"]],["t"]]],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"into","","",26,[[],["u"]]],[11,"try_into","","",26,[[],["result"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"type_id","","",26,[[["self"]],["typeid"]]],[11,"from","","",27,[[["t"]],["t"]]],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"into","","",27,[[],["u"]]],[11,"try_into","","",27,[[],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"type_id","","",27,[[["self"]],["typeid"]]],[11,"from","","",28,[[["t"]],["t"]]],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"into","","",28,[[],["u"]]],[11,"try_into","","",28,[[],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"type_id","","",28,[[["self"]],["typeid"]]],[11,"from","","",29,[[["t"]],["t"]]],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"into","","",29,[[],["u"]]],[11,"try_into","","",29,[[],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"type_id","","",29,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"into","","",0,[[],["u"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"into","","",1,[[],["u"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"instance","","",27,[[],["self"]]],[11,"instance","","",28,[[],["self"]]],[11,"unpack","","",29,[[["vec128_storage"]],["self"]]],[11,"eq","","",29,[[["self"]],["bool"]]],[11,"eq","","",0,[[["self"]],["bool"]]],[11,"eq","","",1,[[["self"]],["bool"]]],[11,"into","","",29,[[]]],[11,"into","","",29,[[]]],[11,"into","","",29,[[]]],[11,"into","","",0,[[]]],[11,"into","","",0,[[]]],[11,"into","","",0,[[]]],[11,"into","","",1,[[]]],[11,"into","","",1,[[]]],[11,"into","","",1,[[]]],[11,"clone","","",17,[[["self"]],["yess3"]]],[11,"clone","","",18,[[["self"]],["nos3"]]],[11,"clone","","",19,[[["self"]],["yess4"]]],[11,"clone","","",20,[[["self"]],["nos4"]]],[11,"clone","","",21,[[["self"]],["yesa1"]]],[11,"clone","","",22,[[["self"]],["noa1"]]],[11,"clone","","",23,[[["self"]],["yesa2"]]],[11,"clone","","",24,[[["self"]],["noa2"]]],[11,"clone","","",25,[[["self"]],["yesni"]]],[11,"clone","","",26,[[["self"]],["noni"]]],[11,"clone","","",27,[[["self"]],["ssemachine"]]],[11,"clone","","",28,[[["self"]],["avx2machine"]]],[11,"clone","","",29,[[["self"]],["vec128_storage"]]],[11,"clone","","",0,[[["self"]],["vec256_storage"]]],[11,"clone","","",1,[[["self"]],["vec512_storage"]]],[11,"default","","",29,[[],["self"]]],[11,"default","","",0,[[],["self"]]],[11,"default","","",1,[[],["self"]]],[11,"unpack","ppv_lite86","",14,[[["s"]],["store"]]],[11,"vec","","",14,[[["a"]],["v"]]],[11,"read_le","","",14,[[],["v"]]],[11,"read_be","","",14,[[],["v"]]]],"p":[[19,"vec256_storage"],[19,"vec512_storage"],[8,"AndNot"],[8,"BSwap"],[8,"RotateEachWord32"],[8,"RotateEachWord64"],[8,"UnsafeFrom"],[8,"Vec2"],[8,"Vec4"],[8,"Words4"],[8,"LaneWords4"],[8,"Swap64"],[8,"MultiLane"],[8,"VZip"],[8,"Machine"],[8,"Store"],[8,"StoreBytes"],[3,"YesS3"],[3,"NoS3"],[3,"YesS4"],[3,"NoS4"],[3,"YesA1"],[3,"NoA1"],[3,"YesA2"],[3,"NoA2"],[3,"YesNI"],[3,"NoNI"],[3,"SseMachine"],[3,"Avx2Machine"],[19,"vec128_storage"]]};
searchIndex["proc_macro2"] = {"doc":"A wrapper around the procedural macro API of the…","i":[[3,"TokenStream","proc_macro2","An abstract stream of tokens, or more concretely a…",null,null],[3,"LexError","","Error returned from `TokenStream::from_str`.",null,null],[3,"Span","","A region of source code, along with macro expansion…",null,null],[3,"Group","","A delimited token stream.",null,null],[3,"Punct","","An `Punct` is an single punctuation character like `+`,…",null,null],[3,"Ident","","A word of Rust code, which may be a keyword or legal…",null,null],[3,"Literal","","A literal string (`\"hello\"`), byte string (`b\"hello\"`),…",null,null],[4,"TokenTree","","A single token or a delimited sequence of token trees…",null,null],[13,"Group","","A token stream surrounded by bracket delimiters.",0,null],[13,"Ident","","An identifier.",0,null],[13,"Punct","","A single punctuation character (`+`, `,`, `$`, etc.).",0,null],[13,"Literal","","A literal character (`'a'`), string (`\"hello\"`), number…",0,null],[4,"Delimiter","","Describes how a sequence of token trees is delimited.",null,null],[13,"Parenthesis","","`( ... )`",1,null],[13,"Brace","","`{ ... }`",1,null],[13,"Bracket","","`[ ... ]`",1,null],[13,"None","","`Ø ... Ø`",1,null],[4,"Spacing","","Whether an `Punct` is followed immediately by another…",null,null],[13,"Alone","","E.g. `+` is `Alone` in `+ =`, `+ident` or `+()`.",2,null],[13,"Joint","","E.g. `+` is `Joint` in `+=` or `'` is `Joint` in `'#`.",2,null],[0,"token_stream","","Public implementation details for the `TokenStream` type,…",null,null],[3,"IntoIter","proc_macro2::token_stream","An iterator over `TokenStream`'s `TokenTree`s.",null,null],[11,"new","proc_macro2","Returns an empty `TokenStream` containing no token trees.",3,[[],["tokenstream"]]],[11,"is_empty","","Checks if this `TokenStream` is empty.",3,[[["self"]],["bool"]]],[11,"call_site","","The span of the invocation of the current procedural macro.",4,[[],["span"]]],[11,"unwrap","","Convert `proc_macro2::Span` to `proc_macro::Span`.",4,[[],["span"]]],[11,"join","","Create a new span encompassing `self` and `other`.",4,[[["self"],["span"]],[["option",["span"]],["span"]]]],[11,"span","","Returns the span of this tree, delegating to the `span`…",0,[[["self"]],["span"]]],[11,"set_span","","Configures the span for only this token.",0,[[["self"],["span"]]]],[11,"new","","Creates a new `Group` with the given delimiter and token…",5,[[["tokenstream"],["delimiter"]],["group"]]],[11,"delimiter","","Returns the delimiter of this `Group`",5,[[["self"]],["delimiter"]]],[11,"stream","","Returns the `TokenStream` of tokens that are delimited in…",5,[[["self"]],["tokenstream"]]],[11,"span","","Returns the span for the delimiters of this token stream,…",5,[[["self"]],["span"]]],[11,"span_open","","Returns the span pointing to the opening delimiter of this…",5,[[["self"]],["span"]]],[11,"span_close","","Returns the span pointing to the closing delimiter of this…",5,[[["self"]],["span"]]],[11,"set_span","","Configures the span for this `Group`'s delimiters, but not…",5,[[["self"],["span"]]]],[11,"new","","Creates a new `Punct` from the given character and spacing.",6,[[["char"],["spacing"]],["punct"]]],[11,"as_char","","Returns the value of this punctuation character as `char`.",6,[[["self"]],["char"]]],[11,"spacing","","Returns the spacing of this punctuation character,…",6,[[["self"]],["spacing"]]],[11,"span","","Returns the span for this punctuation character.",6,[[["self"]],["span"]]],[11,"set_span","","Configure the span for this punctuation character.",6,[[["self"],["span"]]]],[11,"new","","Creates a new `Ident` with the given `string` as well as…",7,[[["str"],["span"]],["ident"]]],[11,"span","","Returns the span of this `Ident`.",7,[[["self"]],["span"]]],[11,"set_span","","Configures the span of this `Ident`, possibly changing its…",7,[[["self"],["span"]]]],[11,"u8_suffixed","","Creates a new suffixed integer literal with the specified…",8,[[["u8"]],["literal"]]],[11,"u16_suffixed","","Creates a new suffixed integer literal with the specified…",8,[[["u16"]],["literal"]]],[11,"u32_suffixed","","Creates a new suffixed integer literal with the specified…",8,[[["u32"]],["literal"]]],[11,"u64_suffixed","","Creates a new suffixed integer literal with the specified…",8,[[["u64"]],["literal"]]],[11,"u128_suffixed","","Creates a new suffixed integer literal with the specified…",8,[[["u128"]],["literal"]]],[11,"usize_suffixed","","Creates a new suffixed integer literal with the specified…",8,[[["usize"]],["literal"]]],[11,"i8_suffixed","","Creates a new suffixed integer literal with the specified…",8,[[["i8"]],["literal"]]],[11,"i16_suffixed","","Creates a new suffixed integer literal with the specified…",8,[[["i16"]],["literal"]]],[11,"i32_suffixed","","Creates a new suffixed integer literal with the specified…",8,[[["i32"]],["literal"]]],[11,"i64_suffixed","","Creates a new suffixed integer literal with the specified…",8,[[["i64"]],["literal"]]],[11,"i128_suffixed","","Creates a new suffixed integer literal with the specified…",8,[[["i128"]],["literal"]]],[11,"isize_suffixed","","Creates a new suffixed integer literal with the specified…",8,[[["isize"]],["literal"]]],[11,"u8_unsuffixed","","Creates a new unsuffixed integer literal with the…",8,[[["u8"]],["literal"]]],[11,"u16_unsuffixed","","Creates a new unsuffixed integer literal with the…",8,[[["u16"]],["literal"]]],[11,"u32_unsuffixed","","Creates a new unsuffixed integer literal with the…",8,[[["u32"]],["literal"]]],[11,"u64_unsuffixed","","Creates a new unsuffixed integer literal with the…",8,[[["u64"]],["literal"]]],[11,"u128_unsuffixed","","Creates a new unsuffixed integer literal with the…",8,[[["u128"]],["literal"]]],[11,"usize_unsuffixed","","Creates a new unsuffixed integer literal with the…",8,[[["usize"]],["literal"]]],[11,"i8_unsuffixed","","Creates a new unsuffixed integer literal with the…",8,[[["i8"]],["literal"]]],[11,"i16_unsuffixed","","Creates a new unsuffixed integer literal with the…",8,[[["i16"]],["literal"]]],[11,"i32_unsuffixed","","Creates a new unsuffixed integer literal with the…",8,[[["i32"]],["literal"]]],[11,"i64_unsuffixed","","Creates a new unsuffixed integer literal with the…",8,[[["i64"]],["literal"]]],[11,"i128_unsuffixed","","Creates a new unsuffixed integer literal with the…",8,[[["i128"]],["literal"]]],[11,"isize_unsuffixed","","Creates a new unsuffixed integer literal with the…",8,[[["isize"]],["literal"]]],[11,"f64_unsuffixed","","Creates a new unsuffixed floating-point literal.",8,[[["f64"]],["literal"]]],[11,"f64_suffixed","","Creates a new suffixed floating-point literal.",8,[[["f64"]],["literal"]]],[11,"f32_unsuffixed","","Creates a new unsuffixed floating-point literal.",8,[[["f32"]],["literal"]]],[11,"f32_suffixed","","Creates a new suffixed floating-point literal.",8,[[["f32"]],["literal"]]],[11,"string","","String literal.",8,[[["str"]],["literal"]]],[11,"character","","Character literal.",8,[[["char"]],["literal"]]],[11,"byte_string","","Byte string literal.",8,[[],["literal"]]],[11,"span","","Returns the span encompassing this literal.",8,[[["self"]],["span"]]],[11,"set_span","","Configures the span associated for this literal.",8,[[["self"],["span"]]]],[11,"subspan","","Returns a `Span` that is a subset of `self.span()`…",8,[[["rangebounds",["usize"]],["self"],["usize"]],[["option",["span"]],["span"]]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"into_iter","","",3,[[],["i"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"to_string","","",3,[[["self"]],["string"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[],["u"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,[[["self"],["t"]]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,[[["self"],["t"]]]],[11,"to_string","","",5,[[["self"]],["string"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,[[["self"],["t"]]]],[11,"to_string","","",6,[[["self"]],["string"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,[[["self"],["t"]]]],[11,"to_string","","",7,[[["self"]],["string"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,[[["self"],["t"]]]],[11,"to_string","","",8,[[["self"]],["string"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","proc_macro2::token_stream","",10,[[["t"]],["t"]]],[11,"into","","",10,[[],["u"]]],[11,"into_iter","","",10,[[],["i"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,[[["self"],["t"]]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"from","proc_macro2","",4,[[["span"]],["span"]]],[11,"from","","",3,[[["tokenstream"]],["tokenstream"]]],[11,"from","","",3,[[["tokentree"]],["self"]]],[11,"from","","",0,[[["group"]],["tokentree"]]],[11,"from","","",0,[[["ident"]],["tokentree"]]],[11,"from","","",0,[[["punct"]],["tokentree"]]],[11,"from","","",0,[[["literal"]],["tokentree"]]],[11,"extend","","",3,[[["intoiterator"],["self"]]]],[11,"extend","","",3,[[["self"],["intoiterator"]]]],[11,"into_iter","","",3,[[],["intoiter"]]],[11,"next","proc_macro2::token_stream","",10,[[["self"]],[["option",["tokentree"]],["tokentree"]]]],[11,"clone","proc_macro2","",3,[[["self"]],["tokenstream"]]],[11,"clone","","",4,[[["self"]],["span"]]],[11,"clone","","",0,[[["self"]],["tokentree"]]],[11,"clone","","",5,[[["self"]],["group"]]],[11,"clone","","",1,[[["self"]],["delimiter"]]],[11,"clone","","",6,[[["self"]],["punct"]]],[11,"clone","","",2,[[["self"]],["spacing"]]],[11,"clone","","",7,[[["self"]],["ident"]]],[11,"clone","","",8,[[["self"]],["literal"]]],[11,"clone","proc_macro2::token_stream","",10,[[["self"]],["intoiter"]]],[11,"default","proc_macro2","",3,[[],["self"]]],[11,"cmp","","",7,[[["ident"],["self"]],["ordering"]]],[11,"eq","","",1,[[["self"],["delimiter"]],["bool"]]],[11,"eq","","",2,[[["spacing"],["self"]],["bool"]]],[11,"eq","","",7,[[["ident"],["self"]],["bool"]]],[11,"eq","","",7,[[["t"],["self"]],["bool"]]],[11,"partial_cmp","","",7,[[["ident"],["self"]],[["ordering"],["option",["ordering"]]]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",9,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",6,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",7,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",8,[[["formatter"],["self"]],["result"]]],[11,"fmt","proc_macro2::token_stream","",10,[[["formatter"],["self"]],["result"]]],[11,"fmt","proc_macro2","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",6,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",7,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",8,[[["formatter"],["self"]],["result"]]],[11,"hash","","",7,[[["self"],["h"]]]],[11,"from_iter","","",3,[[["intoiterator"]],["self"]]],[11,"from_iter","","",3,[[["intoiterator"]],["self"]]],[11,"from_str","","",3,[[["str"]],[["tokenstream"],["result",["tokenstream","lexerror"]],["lexerror"]]]]],"p":[[4,"TokenTree"],[4,"Delimiter"],[4,"Spacing"],[3,"TokenStream"],[3,"Span"],[3,"Group"],[3,"Punct"],[3,"Ident"],[3,"Literal"],[3,"LexError"],[3,"IntoIter"]]};
searchIndex["quick_error"] = {"doc":"A macro which makes errors easy to write","i":[[3,"Context","quick_error","Generic context type",null,null],[12,"0","","",0,null],[12,"1","","",0,null],[8,"ResultExt","","Result extension trait adding a `context` method",null,null],[10,"context","","The method is use to add context information to current…",1,[[["x"]],[["context"],["result",["context"]]]]],[14,"quick_error","","Main macro that does all the work",null,null],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]]],"p":[[3,"Context"],[8,"ResultExt"]]};
searchIndex["quote"] = {"doc":"![github] ![crates-io] ![docs-rs]","i":[[8,"TokenStreamExt","quote","TokenStream extension trait with methods for appending…",null,null],[10,"append","","For use by `ToTokens` implementations.",0,[[["u"],["self"]]]],[10,"append_all","","For use by `ToTokens` implementations.",0,[[["self"],["i"]]]],[10,"append_separated","","For use by `ToTokens` implementations.",0,[[["u"],["self"],["i"]]]],[10,"append_terminated","","For use by `ToTokens` implementations.",0,[[["u"],["self"],["i"]]]],[8,"IdentFragment","","Specialized formatting trait used by `format_ident!`.",null,null],[10,"fmt","","Format this value as an identifier fragment.",1,[[["formatter"],["self"]],["result"]]],[11,"span","","Span associated with this `IdentFragment`.",1,[[["self"]],[["option",["span"]],["span"]]]],[8,"ToTokens","","Types that can be interpolated inside a `quote!` invocation.",null,null],[10,"to_tokens","","Write `self` to the given `TokenStream`.",2,[[["self"],["tokenstream"]]]],[11,"to_token_stream","","Convert `self` directly into a `TokenStream` object.",2,[[["self"]],["tokenstream"]]],[11,"into_token_stream","","Convert `self` directly into a `TokenStream` object.",2,[[],["tokenstream"]]],[14,"format_ident","","Formatting macro for constructing `Ident`s.",null,null],[14,"quote","","The whole point.",null,null],[14,"quote_spanned","","Same as `quote!`, but applies a given span to all tokens…",null,null],[11,"span","","Span associated with this `IdentFragment`.",1,[[["self"]],[["option",["span"]],["span"]]]],[11,"to_token_stream","","Convert `self` directly into a `TokenStream` object.",2,[[["self"]],["tokenstream"]]],[11,"into_token_stream","","Convert `self` directly into a `TokenStream` object.",2,[[],["tokenstream"]]]],"p":[[8,"TokenStreamExt"],[8,"IdentFragment"],[8,"ToTokens"]]};
searchIndex["quoted_printable"] = {"doc":"","i":[[4,"ParseMode","quoted_printable","A flag that allows control over the decoding strictness.",null,null],[13,"Strict","","Perform strict checking over the input, and return an…",0,null],[13,"Robust","","Perform robust parsing, and gracefully handle any…",0,null],[4,"QuotedPrintableError","","An error type that represents different kinds of decoding…",null,null],[13,"InvalidByte","","A byte was found in the input that was outside of the…",1,null],[13,"LineTooLong","","Lines where found in the input that exceeded 76 bytes in…",1,null],[13,"IncompleteHexOctet","","An '=' character was found in the input without the proper…",1,null],[13,"InvalidHexOctet","","An '=' character was found with two following characters,…",1,null],[13,"LowercaseHexOctet","","An '=' character was found with two following hex…",1,null],[5,"decode","","Decodes a piece of quoted-printable data.",null,[[["parsemode"],["asref"]],[["quotedprintableerror"],["vec",["u8"]],["result",["vec","quotedprintableerror"]]]]],[5,"encode","","Encodes some bytes into quoted-printable format.",null,[[["asref"]],[["vec",["u8"]],["u8"]]]],[5,"encode_to_str","","Encodes some bytes into quoted-printable format.",null,[[["asref"]],["string"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_string","","",1,[[["self"]],["string"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"eq","","",0,[[["parsemode"],["self"]],["bool"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"description","","",1,[[["self"]],["str"]]],[11,"cause","","",1,[[["self"]],[["error"],["option",["error"]]]]]],"p":[[4,"ParseMode"],[4,"QuotedPrintableError"]]};
searchIndex["quoted_string"] = {"doc":"This crate provides utilities to handle quoted strings…","i":[[3,"ContentChars","quoted_string","A iterator over chars of the content represented by the…",null,null],[3,"Parsed","","the result of successfully parsing a quoted string",null,null],[12,"quoted_string","","the parsed quoted string",0,null],[12,"tail","","the rest of the input string, not parsed",0,null],[5,"to_content","","converts a quoted string into it's content",null,[[["str"]],[["coreerror"],["cow",["str"]],["result",["cow","coreerror"]]]]],[5,"strip_dquotes","","strips quotes if they exists",null,[[["str"]],[["str"],["option",["str"]]]]],[5,"quote","","quotes the input string returning the quoted string",null,[[["str"]],[["coreerror"],["result",["string","coreerror"]],["string"]]]],[5,"quote_if_needed","","quotes the input string if needed",null,[[["wqimpl"],["str"]],[["coreerror"],["cow",["str"]],["result",["cow","coreerror"]]]]],[5,"validate","","validates if input is a valid quoted-string",null,[[["str"]],["bool"]]],[5,"parse","","parse a quoted string starting at the begin of `input` but…",null,[[["str"]],[["result",["parsed"]],["parsed"]]]],[0,"spec","","This module contains types for specifying what kind of…",null,null],[3,"ScanAutomaton","quoted_string::spec","",null,null],[3,"PartialCodePoint","","A type which represents part of a utf-8 code point",null,null],[3,"AsciiWordValidator","","Allows unquoted text containing only `_ | a..z | A..Z |…",null,null],[4,"QuotingClass","","Represents if a char can be contained in a quoted string…",null,null],[13,"QText","","The char can be represented in a quoted string",1,null],[13,"NeedsQuoting","","The char can be represented but needs quoting (e.g. the \"…",1,null],[13,"Invalid","","The char is invalid (e.g. a CTL char)",1,null],[4,"State","","State used when parsing a quoted string",null,null],[13,"Start","","The initial state",2,null],[13,"Normal","","The normal state",2,null],[13,"Failed","","Failed as it e.g. hit an invalid char",2,null],[13,"QPStart","","start of a quoted-pair e.g. the \\ of \"",2,null],[13,"Custom","","a custom state needed for more complex quoted strings",2,null],[13,"End","","the end of the quoted string was found (this is not…",2,null],[8,"GeneralQSSpec","","type to specify the quoting classifier and parsing…",null,null],[16,"Quoting","","",3,null],[16,"Parsing","","",3,null],[8,"QuotingClassifier","","Type to provide a quoting classification method.",null,null],[10,"classify_for_quoting","","Returns the \"class\" the partial code point belongs too",4,[[["partialcodepoint"]],["quotingclass"]]],[8,"WithoutQuotingValidator","","Used to validate if a string is valid without beeing quoted.",null,null],[10,"next","","if next returns false, it's (self) state should NOT be…",5,[[["self"],["partialcodepoint"]],["bool"]]],[11,"end","","this is called once the validation through next ended",5,[[["self"]],["bool"]]],[8,"ParsingImpl","","This normally zero sized type provides functions for…",null,null],[10,"can_be_quoted","","",6,[[["partialcodepoint"]],["bool"]]],[10,"handle_normal_state","","",6,[[["partialcodepoint"]],[["result",["coreerror"]],["coreerror"]]]],[11,"advance","","",6,[[["self"],["partialcodepoint"]],[["result",["coreerror"]],["coreerror"]]]],[11,"new","","",7,[[],["self"]]],[11,"did_end","","",7,[[["self"]],["bool"]]],[11,"end","","",7,[[["self"]],[["result",["coreerror"]],["coreerror"]]]],[11,"advance","","",7,[[["self"],["partialcodepoint"]],[["coreerror"],["result",["bool","coreerror"]],["bool"]]]],[11,"as_u8","","",8,[[],["u8"]]],[11,"from_utf8_byte","","creates a partial code point from a utf8 byte",8,[[["u8"]],["partialcodepoint"]]],[11,"from_code_point","","creates a `PartialCodePoint` from a utf-8 code point.",8,[[["u32"]],["partialcodepoint"]]],[11,"from_str","quoted_string","creates a char iterator over the content of a quoted string",9,[[["str"]],["self"]]],[11,"from_parts_unchecked","","creates a ContentChars iterator from a str and a…",9,[[["scanautomaton"],["str"]],["self"]]],[0,"error","","module containing all errors",null,null],[4,"CoreError","quoted_string::error","",null,null],[13,"AdvancedFailedAutomaton","","",10,null],[13,"QuotedStringAlreadyEnded","","",10,null],[13,"UnquoteableCharQuoted","","",10,null],[13,"DoesNotStartWithDQuotes","","",10,null],[13,"DoesNotEndWithDQuotes","","",10,null],[13,"InvalidChar","","",10,null],[13,"ZeroSizedValue","","",10,null],[11,"id","","",10,[[["self"]],["u8"]]],[11,"from_id","","",10,[[["u8"]],["option"]]],[0,"test_utils","quoted_string","provides an example implementation of quoted string spec's",null,null],[3,"TestSpec","quoted_string::test_utils","",null,null],[3,"TestUnquotedValidator","","",null,null],[12,"count","","",11,null],[12,"last_was_dot","","",11,null],[4,"TestParsingImpl","","a parsing implementations which allows non semantic stange…",null,null],[13,"StrangeInc","","",12,null],[13,"StrangeDec","","",12,null],[11,"new","","",11,[[],["self"]]],[8,"AsciiCaseInsensitiveEq","quoted_string","Analogous to PartialEq, but with ascii case insensitive…",null,null],[10,"eq_ignore_ascii_case","","compares this instance with other with a ascii case…",13,[[["rhs"],["self"]],["bool"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[],["u"]]],[11,"into_iter","","",9,[[],["i"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,[[["self"],["t"]]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","quoted_string::spec","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,[[["self"],["t"]]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,[[["self"],["t"]]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"into","","",14,[[],["u"]]],[11,"to_owned","","",14,[[["self"]],["t"]]],[11,"clone_into","","",14,[[["self"],["t"]]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"try_into","","",14,[[],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"type_id","","",14,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","quoted_string::error","",10,[[["t"]],["t"]]],[11,"into","","",10,[[],["u"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,[[["self"],["t"]]]],[11,"to_string","","",10,[[["self"]],["string"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"from","quoted_string::test_utils","",15,[[["t"]],["t"]]],[11,"into","","",15,[[],["u"]]],[11,"to_owned","","",15,[[["self"]],["t"]]],[11,"clone_into","","",15,[[["self"],["t"]]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"try_into","","",15,[[],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"type_id","","",15,[[["self"]],["typeid"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[],["u"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"try_into","","",11,[[],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"type_id","","",11,[[["self"]],["typeid"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[],["u"]]],[11,"to_owned","","",12,[[["self"]],["t"]]],[11,"clone_into","","",12,[[["self"],["t"]]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"try_into","","",12,[[],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"type_id","","",12,[[["self"]],["typeid"]]],[11,"classify_for_quoting","","",15,[[["partialcodepoint"]],["quotingclass"]]],[11,"next","quoted_string::spec","",14,[[["self"],["partialcodepoint"]],["bool"]]],[11,"next","quoted_string::test_utils","",11,[[["self"],["partialcodepoint"]],["bool"]]],[11,"end","","",11,[[["self"]],["bool"]]],[11,"can_be_quoted","","",12,[[["partialcodepoint"]],["bool"]]],[11,"handle_normal_state","","",12,[[["partialcodepoint"]],[["result",["coreerror"]],["coreerror"]]]],[11,"advance","","",12,[[["self"],["partialcodepoint"]],[["result",["coreerror"]],["coreerror"]]]],[11,"eq_ignore_ascii_case","quoted_string","",9,[[["str"],["self"]],["bool"]]],[11,"eq_ignore_ascii_case","","",9,[[["self"],["contentchars"]],["bool"]]],[11,"eq_ignore_ascii_case","","",9,[[["str"],["self"]],["bool"]]],[11,"next","","",9,[[["self"]],["option"]]],[11,"size_hint","","",9,[[["self"]]]],[11,"clone","quoted_string::spec","",1,[[["self"]],["quotingclass"]]],[11,"clone","","",2,[[["self"]],["state"]]],[11,"clone","","",7,[[["self"]],["scanautomaton"]]],[11,"clone","","",8,[[["self"]],["partialcodepoint"]]],[11,"clone","","",14,[[["self"]],["asciiwordvalidator"]]],[11,"clone","quoted_string","",9,[[["self"]],["contentchars"]]],[11,"clone","","",0,[[["self"]],["parsed"]]],[11,"clone","quoted_string::error","",10,[[["self"]],["coreerror"]]],[11,"clone","quoted_string::test_utils","",15,[[["self"]],["testspec"]]],[11,"clone","","",12,[[["self"]],["testparsingimpl"]]],[11,"default","","",11,[[],["self"]]],[11,"cmp","quoted_string::spec","",8,[[["self"],["partialcodepoint"]],["ordering"]]],[11,"eq","","",1,[[["quotingclass"],["self"]],["bool"]]],[11,"eq","","",2,[[["self"],["state"]],["bool"]]],[11,"ne","","",2,[[["self"],["state"]],["bool"]]],[11,"eq","","",7,[[["self"],["scanautomaton"]],["bool"]]],[11,"ne","","",7,[[["self"],["scanautomaton"]],["bool"]]],[11,"eq","","",8,[[["self"],["partialcodepoint"]],["bool"]]],[11,"ne","","",8,[[["self"],["partialcodepoint"]],["bool"]]],[11,"eq","quoted_string","",9,[[["str"],["self"]],["bool"]]],[11,"eq","","",9,[[["str"],["self"]],["bool"]]],[11,"eq","","",9,[[["self"],["contentchars"]],["bool"]]],[11,"eq","","",0,[[["self"],["parsed"]],["bool"]]],[11,"ne","","",0,[[["self"],["parsed"]],["bool"]]],[11,"eq","quoted_string::error","",10,[[["self"],["coreerror"]],["bool"]]],[11,"eq","quoted_string::test_utils","",12,[[["testparsingimpl"],["self"]],["bool"]]],[11,"ne","","",12,[[["testparsingimpl"],["self"]],["bool"]]],[11,"partial_cmp","quoted_string::spec","",8,[[["self"],["partialcodepoint"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",8,[[["self"],["partialcodepoint"]],["bool"]]],[11,"le","","",8,[[["self"],["partialcodepoint"]],["bool"]]],[11,"gt","","",8,[[["self"],["partialcodepoint"]],["bool"]]],[11,"ge","","",8,[[["self"],["partialcodepoint"]],["bool"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",7,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",8,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",14,[[["formatter"],["self"]],["result"]]],[11,"fmt","quoted_string","",9,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","quoted_string::error","",10,[[["formatter"],["self"]],["result"]]],[11,"fmt","quoted_string::test_utils","",15,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",12,[[["formatter"],["self"]],["result"]]],[11,"fmt","quoted_string::error","",10,[[["formatter"],["self"]],["result"]]],[11,"hash","quoted_string::spec","",1,[[["self"],["__h"]]]],[11,"hash","","",2,[[["self"],["__h"]]]],[11,"hash","","",7,[[["self"],["__h"]]]],[11,"hash","","",8,[[["self"],["__h"]]]],[11,"hash","quoted_string","",0,[[["self"],["__h"]]]],[11,"hash","quoted_string::error","",10,[[["self"],["__h"]]]],[11,"hash","quoted_string::test_utils","",12,[[["self"],["__h"]]]],[11,"description","quoted_string::error","",10,[[["self"]],["str"]]]],"p":[[3,"Parsed"],[4,"QuotingClass"],[4,"State"],[8,"GeneralQSSpec"],[8,"QuotingClassifier"],[8,"WithoutQuotingValidator"],[8,"ParsingImpl"],[3,"ScanAutomaton"],[3,"PartialCodePoint"],[3,"ContentChars"],[4,"CoreError"],[3,"TestUnquotedValidator"],[4,"TestParsingImpl"],[8,"AsciiCaseInsensitiveEq"],[3,"AsciiWordValidator"],[3,"TestSpec"]]};
searchIndex["rand"] = {"doc":"Utilities for random number generation","i":[[8,"CryptoRng","rand","A marker trait used to indicate that an [`RngCore`] or…",null,null],[3,"Error","","Error type of random number generators",null,null],[8,"RngCore","","The core of a random number generator.",null,null],[10,"next_u32","","Return the next random `u32`.",0,[[["self"]],["u32"]]],[10,"next_u64","","Return the next random `u64`.",0,[[["self"]],["u64"]]],[10,"fill_bytes","","Fill `dest` with random data.",0,[[["self"]]]],[10,"try_fill_bytes","","Fill `dest` entirely with random data.",0,[[["self"]],[["result",["error"]],["error"]]]],[8,"SeedableRng","","A random number generator that can be explicitly seeded.",null,null],[16,"Seed","","Seed type, which is restricted to types…",1,null],[10,"from_seed","","Create a new PRNG using the given seed.",1,[[],["self"]]],[11,"seed_from_u64","","Create a new PRNG using a `u64` seed.",1,[[["u64"]],["self"]]],[11,"from_rng","","Create a new PRNG seeded from another `Rng`.",1,[[["r"]],[["error"],["result",["error"]]]]],[11,"from_entropy","","Creates a new instance of the RNG seeded via [`getrandom`].",1,[[],["self"]]],[5,"thread_rng","","Retrieve the lazily-initialized thread-local random number…",null,[[],["threadrng"]]],[5,"random","","Generates a random value using the thread-local random…",null,[[],["t"]]],[0,"distributions","","Generating random samples from probability distributions",null,null],[3,"Bernoulli","rand::distributions","The Bernoulli distribution.",null,null],[3,"Open01","","A distribution to sample floating point numbers uniformly…",null,null],[3,"OpenClosed01","","A distribution to sample floating point numbers uniformly…",null,null],[3,"Alphanumeric","","Sample a `char`, uniformly distributed over ASCII letters…",null,null],[3,"Uniform","","Sample values uniformly between two bounds.",null,null],[3,"Binomial","","The binomial distribution `Binomial(n, p)`.",null,null],[3,"Cauchy","","The Cauchy distribution `Cauchy(median, scale)`.",null,null],[3,"Dirichlet","","The dirichelet distribution `Dirichlet(alpha)`.",null,null],[3,"Exp","","The exponential distribution `Exp(lambda)`.",null,null],[3,"Exp1","","Samples floating-point numbers according to the…",null,null],[3,"Beta","","The Beta distribution with shape parameters `alpha` and…",null,null],[3,"ChiSquared","","The chi-squared distribution `χ²(k)`, where `k` is the…",null,null],[3,"FisherF","","The Fisher F distribution `F(m, n)`.",null,null],[3,"Gamma","","The Gamma distribution `Gamma(shape, scale)` distribution.",null,null],[3,"StudentT","","The Student t distribution, `t(nu)`, where `nu` is the…",null,null],[3,"LogNormal","","The log-normal distribution `ln N(mean, std_dev**2)`.",null,null],[3,"Normal","","The normal distribution `N(mean, std_dev**2)`.",null,null],[3,"StandardNormal","","Samples floating-point numbers according to the normal…",null,null],[3,"Pareto","","Samples floating-point numbers according to the Pareto…",null,null],[3,"Poisson","","The Poisson distribution `Poisson(lambda)`.",null,null],[3,"Triangular","","The triangular distribution.",null,null],[3,"UnitCircle","","Samples uniformly from the edge of the unit circle in two…",null,null],[3,"UnitSphereSurface","","Samples uniformly from the surface of the unit sphere in…",null,null],[3,"Weibull","","Samples floating-point numbers according to the Weibull…",null,null],[3,"DistIter","","An iterator that generates random values of `T` with…",null,null],[3,"Standard","","A generic random value distribution, implemented for many…",null,null],[4,"BernoulliError","","Error type returned from `Bernoulli::new`.",null,null],[13,"InvalidProbability","","`p < 0` or `p > 1`.",2,null],[11,"new","","Construct a new `Bernoulli` with the given probability of…",3,[[["f64"]],[["bernoullierror"],["bernoulli"],["result",["bernoulli","bernoullierror"]]]]],[11,"from_ratio","","Construct a new `Bernoulli` with the probability of…",3,[[["u32"]],[["bernoullierror"],["bernoulli"],["result",["bernoulli","bernoullierror"]]]]],[11,"new","","Construct a new `Binomial` with the given shape parameters…",4,[[["f64"],["u64"]],["binomial"]]],[11,"new","","Construct a new `Cauchy` with the given shape parameters…",5,[[["f64"]],["cauchy"]]],[11,"new","","Construct a new `Dirichlet` with the given alpha parameter…",6,[[["into",["vec"]],["vec",["f64"]]],["dirichlet"]]],[11,"new_with_param","","Construct a new `Dirichlet` with the given shape parameter…",6,[[["f64"],["usize"]],["dirichlet"]]],[11,"new","","Construct a new `Exp` with the given shape parameter…",7,[[["f64"]],["exp"]]],[11,"new","","Construct an object representing the `Gamma(shape, scale)`…",8,[[["f64"]],["gamma"]]],[11,"new","","Create a new chi-squared distribution with…",9,[[["f64"]],["chisquared"]]],[11,"new","","Create a new `FisherF` distribution, with the given…",10,[[["f64"]],["fisherf"]]],[11,"new","","Create a new Student t distribution with `n` degrees of…",11,[[["f64"]],["studentt"]]],[11,"new","","Construct an object representing the `Beta(alpha, beta)`…",12,[[["f64"]],["beta"]]],[11,"new","","Construct a new `Normal` distribution with the given mean…",13,[[["f64"]],["normal"]]],[11,"new","","Construct a new `LogNormal` distribution with the given…",14,[[["f64"]],["lognormal"]]],[11,"new","","Construct a new Pareto distribution with given `scale` and…",15,[[["f64"]],["pareto"]]],[11,"new","","Construct a new `Poisson` with the given shape parameter…",16,[[["f64"]],["poisson"]]],[11,"new","","Construct a new `Triangular` with minimum `min`, maximum…",17,[[["f64"]],["triangular"]]],[0,"uniform","","A distribution uniformly sampling numbers within a given…",null,null],[3,"Uniform","rand::distributions::uniform","Sample values uniformly between two bounds.",null,null],[3,"UniformInt","","The back-end implementing [`UniformSampler`] for integer…",null,null],[3,"UniformFloat","","The back-end implementing [`UniformSampler`] for…",null,null],[3,"UniformDuration","","The back-end implementing [`UniformSampler`] for `Duration`.",null,null],[8,"SampleUniform","","Helper trait for creating objects using the correct…",null,null],[16,"Sampler","","The `UniformSampler` implementation supporting type `X`.",18,null],[8,"UniformSampler","","Helper trait handling actual uniform sampling.",null,null],[16,"X","","The type sampled by this implementation.",19,null],[10,"new","","Construct self, with inclusive lower bound and exclusive…",19,[[["b2"],["b1"]],["self"]]],[10,"new_inclusive","","Construct self, with inclusive bounds `[low, high]`.",19,[[["b2"],["b1"]],["self"]]],[10,"sample","","Sample a value.",19,[[["self"],["r"]]]],[11,"sample_single","","Sample a single value uniformly from a range with…",19,[[["b2"],["b1"],["r"]]]],[8,"SampleBorrow","","Helper trait similar to [`Borrow`] but implemented only…",null,null],[10,"borrow","","Immutably borrows from an owned value. See…",20,[[["self"]],["borrowed"]]],[11,"new","","Create a new `Uniform` instance which samples uniformly…",21,[[["b2"],["b1"]],["uniform"]]],[11,"new_inclusive","","Create a new `Uniform` instance which samples uniformly…",21,[[["b2"],["b1"]],["uniform"]]],[11,"new","rand::distributions","Construct a new `UnitCircle` distribution.",22,[[],["unitcircle"]]],[11,"new","","Construct a new `UnitSphereSurface` distribution.",23,[[],["unitspheresurface"]]],[11,"new","","Construct a new `Weibull` distribution with given `scale`…",24,[[["f64"]],["weibull"]]],[0,"weighted","","Weighted index sampling",null,null],[3,"WeightedIndex","rand::distributions::weighted","A distribution using weighted sampling to pick a…",null,null],[4,"WeightedError","","Error type returned from `WeightedIndex::new`.",null,null],[13,"NoItem","","The provided weight collection contains no items.",25,null],[13,"InvalidWeight","","A weight is either less than zero, greater than the…",25,null],[13,"AllWeightsZero","","All items in the provided weight collection are zero.",25,null],[13,"TooMany","","Too many weights are provided (length greater than…",25,null],[0,"alias_method","","This module contains an implementation of alias method for…",null,null],[3,"WeightedIndex","rand::distributions::weighted::alias_method","A distribution using weighted sampling to pick a…",null,null],[8,"Weight","","Trait that must be implemented for weights, that are used…",null,null],[18,"MAX","","Maximum number representable by `Self`.",26,null],[18,"ZERO","","Element of `Self` equivalent to 0.",26,null],[10,"try_from_u32_lossy","","Produce an instance of `Self` from a `u32` value, or…",26,[[["u32"]],["option"]]],[11,"sum","","Sums all values in slice `values`.",26,[[],["self"]]],[11,"new","","Creates a new [`WeightedIndex`].",27,[[["vec"]],[["result",["weightederror"]],["weightederror"]]]],[11,"new","rand::distributions::weighted","Creates a new a `WeightedIndex` [`Distribution`] using the…",28,[[["i"]],[["weightederror"],["weightedindex"],["result",["weightedindex","weightederror"]]]]],[11,"update_weights","","Update a subset of weights, without changing the number of…",28,[[["self"]],[["result",["weightederror"]],["weightederror"]]]],[8,"Distribution","rand::distributions","Types (distributions) that can be used to create a random…",null,null],[10,"sample","","Generate a random value of `T`, using `rng` as the source…",29,[[["self"],["r"]],["t"]]],[11,"sample_iter","","Create an iterator that generates random values of `T`,…",29,[[["r"]],["distiter"]]],[0,"prelude","rand","Convenience re-export of common members",null,null],[0,"rngs","","Random number generators and adapters",null,null],[3,"OsRng","rand::rngs","A random number generator that retrieves randomness from…",null,null],[3,"EntropyRng","","An interface returning random data from external…",null,null],[3,"StdRng","","The standard RNG. The PRNG algorithm in `StdRng` is chosen…",null,null],[3,"ThreadRng","","The type returned by [`thread_rng`], essentially just a…",null,null],[0,"adapter","","Wrappers / adapters forming RNGs",null,null],[3,"ReadError","rand::rngs::adapter","`ReadRng` error type",null,null],[3,"ReadRng","","An RNG that reads random bytes straight from any type…",null,null],[3,"ReseedingRng","","A wrapper around any PRNG that implements…",null,null],[11,"new","","Create a new `ReadRng` from a `Read`.",30,[[["r"]],["readrng"]]],[11,"new","","Create a new `ReseedingRng` from an existing PRNG,…",31,[[["rsdr"],["u64"],["r"]],["self"]]],[11,"reseed","","Reseed the internal PRNG.",31,[[["self"]],[["result",["error"]],["error"]]]],[11,"new","rand::rngs","Create a new `EntropyRng`.",32,[[],["self"]]],[0,"mock","","Mock random number generator",null,null],[3,"StepRng","rand::rngs::mock","A simple implementation of `RngCore` for testing purposes.",null,null],[11,"new","","Create a `StepRng`, yielding an arithmetic sequence…",33,[[["u64"]],["self"]]],[0,"seq","rand","Sequence-related functionality",null,null],[3,"SliceChooseIter","rand::seq","An iterator over multiple slice elements.",null,null],[0,"index","","Low-level API for sampling indices",null,null],[4,"IndexVec","rand::seq::index","A vector of indices.",null,null],[4,"IndexVecIter","","Return type of `IndexVec::iter`.",null,null],[4,"IndexVecIntoIter","","Return type of `IndexVec::into_iter`.",null,null],[5,"sample","","Randomly sample exactly `amount` distinct indices from…",null,[[["usize"],["r"]],["indexvec"]]],[11,"len","","Returns the number of indices",34,[[["self"]],["usize"]]],[11,"is_empty","","Returns `true` if the length is 0.",34,[[["self"]],["bool"]]],[11,"index","","Return the value at the given `index`.",34,[[["self"],["usize"]],["usize"]]],[11,"into_vec","","Return result as a `Vec<usize>`. Conversion may or may not…",34,[[],[["vec",["usize"]],["usize"]]]],[11,"iter","","Iterate over the indices as a sequence of `usize` values",34,[[["self"]],["indexveciter"]]],[11,"into_iter","","Convert into an iterator over the indices as a sequence of…",34,[[],["indexvecintoiter"]]],[8,"SliceRandom","rand::seq","Extension trait on slices, providing random mutation and…",null,null],[16,"Item","","The element type.",35,null],[10,"choose","","Returns a reference to one random element of the slice, or…",35,[[["self"],["r"]],["option"]]],[10,"choose_mut","","Returns a mutable reference to one random element of the…",35,[[["self"],["r"]],["option"]]],[10,"choose_multiple","","Chooses `amount` elements from the slice at random,…",35,[[["usize"],["self"],["r"]],["slicechooseiter"]]],[10,"choose_weighted","","Similar to [`choose`], but where the likelihood of each…",35,[[["f"],["self"],["r"]],[["result",["weightederror"]],["weightederror"]]]],[10,"choose_weighted_mut","","Similar to [`choose_mut`], but where the likelihood of…",35,[[["self"],["f"],["r"]],[["result",["weightederror"]],["weightederror"]]]],[10,"shuffle","","Shuffle a mutable slice in place.",35,[[["self"],["r"]]]],[10,"partial_shuffle","","Shuffle a slice in place, but exit early.",35,[[["self"],["usize"],["r"]]]],[8,"IteratorRandom","","Extension trait on iterators, providing random sampling…",null,null],[11,"choose","","Choose one element at random from the iterator.",36,[[["r"]],["option"]]],[11,"choose_multiple_fill","","Collects values at random from the iterator into a…",36,[[["r"]],["usize"]]],[11,"choose_multiple","","Collects `amount` values at random from the iterator into…",36,[[["usize"],["r"]],["vec"]]],[8,"Rng","rand","An automatically-implemented extension trait on…",null,null],[11,"gen","","Return a random value supporting the [`Standard`]…",37,[[["self"]],["t"]]],[11,"gen_range","","Generate a random value in the range [`low`, `high`), i.e.…",37,[[["b2"],["self"],["b1"]],["sampleuniform"]]],[11,"sample","","Sample a new value, using the given distribution.",37,[[["self"],["distribution"]],["t"]]],[11,"sample_iter","","Create an iterator that generates values using the given…",37,[[["d"]],["distiter"]]],[11,"fill","","Fill `dest` entirely with random bytes (uniform value…",37,[[["self"],["t"]]]],[11,"try_fill","","Fill `dest` entirely with random bytes (uniform value…",37,[[["self"],["t"]],[["result",["error"]],["error"]]]],[11,"gen_bool","","Return a bool with a probability `p` of being true.",37,[[["self"],["f64"]],["bool"]]],[11,"gen_ratio","","Return a bool with a probability of…",37,[[["self"],["u32"]],["bool"]]],[8,"AsByteSliceMut","","Trait for casting types to byte slices",null,null],[10,"as_byte_slice_mut","","Return a mutable reference to self as a byte slice",38,[[["self"]]]],[10,"to_le","","Call `to_le` on each element (i.e. byte-swap on Big Endian…",38,[[["self"]]]],[11,"from","","",39,[[["t"]],["t"]]],[11,"into","","",39,[[],["u"]]],[11,"to_string","","",39,[[["self"]],["string"]]],[11,"try_from","","",39,[[["u"]],["result"]]],[11,"try_into","","",39,[[],["result"]]],[11,"borrow","","",39,[[["self"]],["t"]]],[11,"borrow_mut","","",39,[[["self"]],["t"]]],[11,"type_id","","",39,[[["self"]],["typeid"]]],[11,"vzip","","",39,[[],["v"]]],[11,"from","rand::distributions","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"vzip","","",3,[[],["v"]]],[11,"from","","",40,[[["t"]],["t"]]],[11,"into","","",40,[[],["u"]]],[11,"to_owned","","",40,[[["self"]],["t"]]],[11,"clone_into","","",40,[[["self"],["t"]]]],[11,"try_from","","",40,[[["u"]],["result"]]],[11,"try_into","","",40,[[],["result"]]],[11,"borrow","","",40,[[["self"]],["t"]]],[11,"borrow_mut","","",40,[[["self"]],["t"]]],[11,"type_id","","",40,[[["self"]],["typeid"]]],[11,"vzip","","",40,[[],["v"]]],[11,"from","","",41,[[["t"]],["t"]]],[11,"into","","",41,[[],["u"]]],[11,"to_owned","","",41,[[["self"]],["t"]]],[11,"clone_into","","",41,[[["self"],["t"]]]],[11,"try_from","","",41,[[["u"]],["result"]]],[11,"try_into","","",41,[[],["result"]]],[11,"borrow","","",41,[[["self"]],["t"]]],[11,"borrow_mut","","",41,[[["self"]],["t"]]],[11,"type_id","","",41,[[["self"]],["typeid"]]],[11,"vzip","","",41,[[],["v"]]],[11,"from","","",42,[[["t"]],["t"]]],[11,"into","","",42,[[],["u"]]],[11,"try_from","","",42,[[["u"]],["result"]]],[11,"try_into","","",42,[[],["result"]]],[11,"borrow","","",42,[[["self"]],["t"]]],[11,"borrow_mut","","",42,[[["self"]],["t"]]],[11,"type_id","","",42,[[["self"]],["typeid"]]],[11,"vzip","","",42,[[],["v"]]],[11,"from","rand::distributions::uniform","",21,[[["t"]],["t"]]],[11,"into","","",21,[[],["u"]]],[11,"to_owned","","",21,[[["self"]],["t"]]],[11,"clone_into","","",21,[[["self"],["t"]]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"try_into","","",21,[[],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"type_id","","",21,[[["self"]],["typeid"]]],[11,"vzip","","",21,[[],["v"]]],[11,"from","rand::distributions","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,[[["self"],["t"]]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"vzip","","",4,[[],["v"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,[[["self"],["t"]]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"vzip","","",5,[[],["v"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,[[["self"],["t"]]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"vzip","","",6,[[],["v"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,[[["self"],["t"]]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"vzip","","",7,[[],["v"]]],[11,"from","","",43,[[["t"]],["t"]]],[11,"into","","",43,[[],["u"]]],[11,"to_owned","","",43,[[["self"]],["t"]]],[11,"clone_into","","",43,[[["self"],["t"]]]],[11,"try_from","","",43,[[["u"]],["result"]]],[11,"try_into","","",43,[[],["result"]]],[11,"borrow","","",43,[[["self"]],["t"]]],[11,"borrow_mut","","",43,[[["self"]],["t"]]],[11,"type_id","","",43,[[["self"]],["typeid"]]],[11,"vzip","","",43,[[],["v"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[],["u"]]],[11,"to_owned","","",12,[[["self"]],["t"]]],[11,"clone_into","","",12,[[["self"],["t"]]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"try_into","","",12,[[],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"type_id","","",12,[[["self"]],["typeid"]]],[11,"vzip","","",12,[[],["v"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[],["u"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,[[["self"],["t"]]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"vzip","","",9,[[],["v"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[],["u"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,[[["self"],["t"]]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"vzip","","",10,[[],["v"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,[[["self"],["t"]]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"vzip","","",8,[[],["v"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[],["u"]]],[11,"to_owned","","",11,[[["self"]],["t"]]],[11,"clone_into","","",11,[[["self"],["t"]]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"try_into","","",11,[[],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"type_id","","",11,[[["self"]],["typeid"]]],[11,"vzip","","",11,[[],["v"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"into","","",14,[[],["u"]]],[11,"to_owned","","",14,[[["self"]],["t"]]],[11,"clone_into","","",14,[[["self"],["t"]]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"try_into","","",14,[[],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"type_id","","",14,[[["self"]],["typeid"]]],[11,"vzip","","",14,[[],["v"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"into","","",13,[[],["u"]]],[11,"to_owned","","",13,[[["self"]],["t"]]],[11,"clone_into","","",13,[[["self"],["t"]]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"try_into","","",13,[[],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"type_id","","",13,[[["self"]],["typeid"]]],[11,"vzip","","",13,[[],["v"]]],[11,"from","","",44,[[["t"]],["t"]]],[11,"into","","",44,[[],["u"]]],[11,"to_owned","","",44,[[["self"]],["t"]]],[11,"clone_into","","",44,[[["self"],["t"]]]],[11,"try_from","","",44,[[["u"]],["result"]]],[11,"try_into","","",44,[[],["result"]]],[11,"borrow","","",44,[[["self"]],["t"]]],[11,"borrow_mut","","",44,[[["self"]],["t"]]],[11,"type_id","","",44,[[["self"]],["typeid"]]],[11,"vzip","","",44,[[],["v"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"into","","",15,[[],["u"]]],[11,"to_owned","","",15,[[["self"]],["t"]]],[11,"clone_into","","",15,[[["self"],["t"]]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"try_into","","",15,[[],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"type_id","","",15,[[["self"]],["typeid"]]],[11,"vzip","","",15,[[],["v"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"into","","",16,[[],["u"]]],[11,"to_owned","","",16,[[["self"]],["t"]]],[11,"clone_into","","",16,[[["self"],["t"]]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"try_into","","",16,[[],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"type_id","","",16,[[["self"]],["typeid"]]],[11,"vzip","","",16,[[],["v"]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"into","","",17,[[],["u"]]],[11,"to_owned","","",17,[[["self"]],["t"]]],[11,"clone_into","","",17,[[["self"],["t"]]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"try_into","","",17,[[],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"type_id","","",17,[[["self"]],["typeid"]]],[11,"vzip","","",17,[[],["v"]]],[11,"from","","",22,[[["t"]],["t"]]],[11,"into","","",22,[[],["u"]]],[11,"to_owned","","",22,[[["self"]],["t"]]],[11,"clone_into","","",22,[[["self"],["t"]]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"try_into","","",22,[[],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"type_id","","",22,[[["self"]],["typeid"]]],[11,"vzip","","",22,[[],["v"]]],[11,"from","","",23,[[["t"]],["t"]]],[11,"into","","",23,[[],["u"]]],[11,"to_owned","","",23,[[["self"]],["t"]]],[11,"clone_into","","",23,[[["self"],["t"]]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"try_into","","",23,[[],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"type_id","","",23,[[["self"]],["typeid"]]],[11,"vzip","","",23,[[],["v"]]],[11,"from","","",24,[[["t"]],["t"]]],[11,"into","","",24,[[],["u"]]],[11,"to_owned","","",24,[[["self"]],["t"]]],[11,"clone_into","","",24,[[["self"],["t"]]]],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"try_into","","",24,[[],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"type_id","","",24,[[["self"]],["typeid"]]],[11,"vzip","","",24,[[],["v"]]],[11,"from","","",45,[[["t"]],["t"]]],[11,"into","","",45,[[],["u"]]],[11,"into_iter","","",45,[[],["i"]]],[11,"try_from","","",45,[[["u"]],["result"]]],[11,"try_into","","",45,[[],["result"]]],[11,"borrow","","",45,[[["self"]],["t"]]],[11,"borrow_mut","","",45,[[["self"]],["t"]]],[11,"type_id","","",45,[[["self"]],["typeid"]]],[11,"vzip","","",45,[[],["v"]]],[11,"from","","",46,[[["t"]],["t"]]],[11,"into","","",46,[[],["u"]]],[11,"to_owned","","",46,[[["self"]],["t"]]],[11,"clone_into","","",46,[[["self"],["t"]]]],[11,"try_from","","",46,[[["u"]],["result"]]],[11,"try_into","","",46,[[],["result"]]],[11,"borrow","","",46,[[["self"]],["t"]]],[11,"borrow_mut","","",46,[[["self"]],["t"]]],[11,"type_id","","",46,[[["self"]],["typeid"]]],[11,"vzip","","",46,[[],["v"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"to_string","","",2,[[["self"]],["string"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"vzip","","",2,[[],["v"]]],[11,"from","rand::distributions::uniform","",47,[[["t"]],["t"]]],[11,"into","","",47,[[],["u"]]],[11,"to_owned","","",47,[[["self"]],["t"]]],[11,"clone_into","","",47,[[["self"],["t"]]]],[11,"try_from","","",47,[[["u"]],["result"]]],[11,"try_into","","",47,[[],["result"]]],[11,"borrow","","",47,[[["self"]],["t"]]],[11,"borrow_mut","","",47,[[["self"]],["t"]]],[11,"type_id","","",47,[[["self"]],["typeid"]]],[11,"vzip","","",47,[[],["v"]]],[11,"from","","",48,[[["t"]],["t"]]],[11,"into","","",48,[[],["u"]]],[11,"to_owned","","",48,[[["self"]],["t"]]],[11,"clone_into","","",48,[[["self"],["t"]]]],[11,"try_from","","",48,[[["u"]],["result"]]],[11,"try_into","","",48,[[],["result"]]],[11,"borrow","","",48,[[["self"]],["t"]]],[11,"borrow_mut","","",48,[[["self"]],["t"]]],[11,"type_id","","",48,[[["self"]],["typeid"]]],[11,"vzip","","",48,[[],["v"]]],[11,"from","","",49,[[["t"]],["t"]]],[11,"into","","",49,[[],["u"]]],[11,"to_owned","","",49,[[["self"]],["t"]]],[11,"clone_into","","",49,[[["self"],["t"]]]],[11,"try_from","","",49,[[["u"]],["result"]]],[11,"try_into","","",49,[[],["result"]]],[11,"borrow","","",49,[[["self"]],["t"]]],[11,"borrow_mut","","",49,[[["self"]],["t"]]],[11,"type_id","","",49,[[["self"]],["typeid"]]],[11,"vzip","","",49,[[],["v"]]],[11,"from","rand::distributions::weighted","",28,[[["t"]],["t"]]],[11,"into","","",28,[[],["u"]]],[11,"to_owned","","",28,[[["self"]],["t"]]],[11,"clone_into","","",28,[[["self"],["t"]]]],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"try_into","","",28,[[],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"type_id","","",28,[[["self"]],["typeid"]]],[11,"vzip","","",28,[[],["v"]]],[11,"from","","",25,[[["t"]],["t"]]],[11,"into","","",25,[[],["u"]]],[11,"to_owned","","",25,[[["self"]],["t"]]],[11,"clone_into","","",25,[[["self"],["t"]]]],[11,"to_string","","",25,[[["self"]],["string"]]],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"try_into","","",25,[[],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"type_id","","",25,[[["self"]],["typeid"]]],[11,"vzip","","",25,[[],["v"]]],[11,"from","rand::distributions::weighted::alias_method","",27,[[["t"]],["t"]]],[11,"into","","",27,[[],["u"]]],[11,"to_owned","","",27,[[["self"]],["t"]]],[11,"clone_into","","",27,[[["self"],["t"]]]],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"try_into","","",27,[[],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"type_id","","",27,[[["self"]],["typeid"]]],[11,"vzip","","",27,[[],["v"]]],[11,"from","rand::rngs","",50,[[["t"]],["t"]]],[11,"into","","",50,[[],["u"]]],[11,"to_owned","","",50,[[["self"]],["t"]]],[11,"clone_into","","",50,[[["self"],["t"]]]],[11,"try_from","","",50,[[["u"]],["result"]]],[11,"try_into","","",50,[[],["result"]]],[11,"borrow","","",50,[[["self"]],["t"]]],[11,"borrow_mut","","",50,[[["self"]],["t"]]],[11,"type_id","","",50,[[["self"]],["typeid"]]],[11,"vzip","","",50,[[],["v"]]],[11,"from","","",32,[[["t"]],["t"]]],[11,"into","","",32,[[],["u"]]],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"try_into","","",32,[[],["result"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"type_id","","",32,[[["self"]],["typeid"]]],[11,"vzip","","",32,[[],["v"]]],[11,"from","","",51,[[["t"]],["t"]]],[11,"into","","",51,[[],["u"]]],[11,"to_owned","","",51,[[["self"]],["t"]]],[11,"clone_into","","",51,[[["self"],["t"]]]],[11,"try_from","","",51,[[["u"]],["result"]]],[11,"try_into","","",51,[[],["result"]]],[11,"borrow","","",51,[[["self"]],["t"]]],[11,"borrow_mut","","",51,[[["self"]],["t"]]],[11,"type_id","","",51,[[["self"]],["typeid"]]],[11,"vzip","","",51,[[],["v"]]],[11,"from","","",52,[[["t"]],["t"]]],[11,"into","","",52,[[],["u"]]],[11,"to_owned","","",52,[[["self"]],["t"]]],[11,"clone_into","","",52,[[["self"],["t"]]]],[11,"try_from","","",52,[[["u"]],["result"]]],[11,"try_into","","",52,[[],["result"]]],[11,"borrow","","",52,[[["self"]],["t"]]],[11,"borrow_mut","","",52,[[["self"]],["t"]]],[11,"type_id","","",52,[[["self"]],["typeid"]]],[11,"vzip","","",52,[[],["v"]]],[11,"from","rand::rngs::adapter","",53,[[["t"]],["t"]]],[11,"into","","",53,[[],["u"]]],[11,"to_string","","",53,[[["self"]],["string"]]],[11,"try_from","","",53,[[["u"]],["result"]]],[11,"try_into","","",53,[[],["result"]]],[11,"borrow","","",53,[[["self"]],["t"]]],[11,"borrow_mut","","",53,[[["self"]],["t"]]],[11,"type_id","","",53,[[["self"]],["typeid"]]],[11,"vzip","","",53,[[],["v"]]],[11,"from","","",30,[[["t"]],["t"]]],[11,"into","","",30,[[],["u"]]],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"try_into","","",30,[[],["result"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"type_id","","",30,[[["self"]],["typeid"]]],[11,"vzip","","",30,[[],["v"]]],[11,"from","","",31,[[["t"]],["t"]]],[11,"into","","",31,[[],["u"]]],[11,"to_owned","","",31,[[["self"]],["t"]]],[11,"clone_into","","",31,[[["self"],["t"]]]],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"try_into","","",31,[[],["result"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"type_id","","",31,[[["self"]],["typeid"]]],[11,"vzip","","",31,[[],["v"]]],[11,"from","rand::rngs::mock","",33,[[["t"]],["t"]]],[11,"into","","",33,[[],["u"]]],[11,"to_owned","","",33,[[["self"]],["t"]]],[11,"clone_into","","",33,[[["self"],["t"]]]],[11,"try_from","","",33,[[["u"]],["result"]]],[11,"try_into","","",33,[[],["result"]]],[11,"borrow","","",33,[[["self"]],["t"]]],[11,"borrow_mut","","",33,[[["self"]],["t"]]],[11,"type_id","","",33,[[["self"]],["typeid"]]],[11,"vzip","","",33,[[],["v"]]],[11,"from","rand::seq","",54,[[["t"]],["t"]]],[11,"into","","",54,[[],["u"]]],[11,"into_iter","","",54,[[],["i"]]],[11,"try_from","","",54,[[["u"]],["result"]]],[11,"try_into","","",54,[[],["result"]]],[11,"borrow","","",54,[[["self"]],["t"]]],[11,"borrow_mut","","",54,[[["self"]],["t"]]],[11,"type_id","","",54,[[["self"]],["typeid"]]],[11,"vzip","","",54,[[],["v"]]],[11,"from","rand::seq::index","",34,[[["t"]],["t"]]],[11,"into","","",34,[[],["u"]]],[11,"to_owned","","",34,[[["self"]],["t"]]],[11,"clone_into","","",34,[[["self"],["t"]]]],[11,"try_from","","",34,[[["u"]],["result"]]],[11,"try_into","","",34,[[],["result"]]],[11,"borrow","","",34,[[["self"]],["t"]]],[11,"borrow_mut","","",34,[[["self"]],["t"]]],[11,"type_id","","",34,[[["self"]],["typeid"]]],[11,"vzip","","",34,[[],["v"]]],[11,"from","","",55,[[["t"]],["t"]]],[11,"into","","",55,[[],["u"]]],[11,"into_iter","","",55,[[],["i"]]],[11,"try_from","","",55,[[["u"]],["result"]]],[11,"try_into","","",55,[[],["result"]]],[11,"borrow","","",55,[[["self"]],["t"]]],[11,"borrow_mut","","",55,[[["self"]],["t"]]],[11,"type_id","","",55,[[["self"]],["typeid"]]],[11,"vzip","","",55,[[],["v"]]],[11,"from","","",56,[[["t"]],["t"]]],[11,"into","","",56,[[],["u"]]],[11,"into_iter","","",56,[[],["i"]]],[11,"to_owned","","",56,[[["self"]],["t"]]],[11,"clone_into","","",56,[[["self"],["t"]]]],[11,"try_from","","",56,[[["u"]],["result"]]],[11,"try_into","","",56,[[],["result"]]],[11,"borrow","","",56,[[["self"]],["t"]]],[11,"borrow_mut","","",56,[[["self"]],["t"]]],[11,"type_id","","",56,[[["self"]],["typeid"]]],[11,"vzip","","",56,[[],["v"]]],[11,"clone","rand::rngs","",50,[[["self"]],["osrng"]]],[11,"next_u32","","",50,[[["self"]],["u32"]]],[11,"next_u64","","",50,[[["self"]],["u64"]]],[11,"fill_bytes","","",50,[[["self"]]]],[11,"try_fill_bytes","","",50,[[["self"]],[["result",["error"]],["error"]]]],[11,"read","rand","",0,[[["self"]],[["result",["usize","error"]],["error"],["usize"]]]],[11,"fmt","rand::rngs","",50,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","rand","",39,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"from","","",39,[[["error"]],["error"]]],[11,"from","","",39,[[["nonzerou32"]],["error"]]],[11,"fmt","","",39,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"source","","",39,[[["self"]],[["error"],["option",["error"]]]]],[11,"default","rand::rngs","",50,[[],["osrng"]]],[11,"new","rand::distributions::uniform","",47,[[["b2"],["b1"]],["self"]]],[11,"new_inclusive","","",47,[[["b2"],["b1"]],["self"]]],[11,"sample","","",47,[[["self"],["r"]]]],[11,"sample_single","","",47,[[["b2"],["b1"],["r"]]]],[11,"new","","",47,[[["b2"],["b1"]],["self"]]],[11,"new_inclusive","","",47,[[["b2"],["b1"]],["self"]]],[11,"sample","","",47,[[["self"],["r"]]]],[11,"sample_single","","",47,[[["b2"],["b1"],["r"]]]],[11,"new","","",47,[[["b2"],["b1"]],["self"]]],[11,"new_inclusive","","",47,[[["b2"],["b1"]],["self"]]],[11,"sample","","",47,[[["self"],["r"]]]],[11,"sample_single","","",47,[[["b2"],["b1"],["r"]]]],[11,"new","","",47,[[["b2"],["b1"]],["self"]]],[11,"new_inclusive","","",47,[[["b2"],["b1"]],["self"]]],[11,"sample","","",47,[[["self"],["r"]]]],[11,"sample_single","","",47,[[["b2"],["b1"],["r"]]]],[11,"new","","",47,[[["b2"],["b1"]],["self"]]],[11,"new_inclusive","","",47,[[["b2"],["b1"]],["self"]]],[11,"sample","","",47,[[["self"],["r"]]]],[11,"sample_single","","",47,[[["b2"],["b1"],["r"]]]],[11,"new","","",47,[[["b2"],["b1"]],["self"]]],[11,"new_inclusive","","",47,[[["b2"],["b1"]],["self"]]],[11,"sample","","",47,[[["self"],["r"]]]],[11,"sample_single","","",47,[[["b2"],["b1"],["r"]]]],[11,"new","","",47,[[["b2"],["b1"]],["self"]]],[11,"new_inclusive","","",47,[[["b2"],["b1"]],["self"]]],[11,"sample","","",47,[[["self"],["r"]]]],[11,"sample_single","","",47,[[["b2"],["b1"],["r"]]]],[11,"new","","",47,[[["b2"],["b1"]],["self"]]],[11,"new_inclusive","","",47,[[["b2"],["b1"]],["self"]]],[11,"sample","","",47,[[["self"],["r"]]]],[11,"sample_single","","",47,[[["b2"],["b1"],["r"]]]],[11,"new","","",47,[[["b2"],["b1"]],["self"]]],[11,"new_inclusive","","",47,[[["b2"],["b1"]],["self"]]],[11,"sample","","",47,[[["self"],["r"]]]],[11,"sample_single","","",47,[[["b2"],["b1"],["r"]]]],[11,"new","","",47,[[["b2"],["b1"]],["self"]]],[11,"new_inclusive","","",47,[[["b2"],["b1"]],["self"]]],[11,"sample","","",47,[[["self"],["r"]]]],[11,"sample_single","","",47,[[["b2"],["b1"],["r"]]]],[11,"new","","",47,[[["b2"],["b1"]],["self"]]],[11,"new_inclusive","","",47,[[["b2"],["b1"]],["self"]]],[11,"sample","","",47,[[["self"],["r"]]]],[11,"sample_single","","",47,[[["b2"],["b1"],["r"]]]],[11,"new","","",47,[[["b2"],["b1"]],["self"]]],[11,"new_inclusive","","",47,[[["b2"],["b1"]],["self"]]],[11,"sample","","",47,[[["self"],["r"]]]],[11,"sample_single","","",47,[[["b2"],["b1"],["r"]]]],[11,"new","","",48,[[["b2"],["b1"]],["self"]]],[11,"new_inclusive","","",48,[[["b2"],["b1"]],["self"]]],[11,"sample","","",48,[[["self"],["r"]]]],[11,"sample_single","","",48,[[["b2"],["b1"],["r"]]]],[11,"new","","",48,[[["b2"],["b1"]],["self"]]],[11,"new_inclusive","","",48,[[["b2"],["b1"]],["self"]]],[11,"sample","","",48,[[["self"],["r"]]]],[11,"sample_single","","",48,[[["b2"],["b1"],["r"]]]],[11,"new","","",49,[[["b2"],["b1"]],["self"]]],[11,"new_inclusive","","",49,[[["b2"],["b1"]],["self"]]],[11,"sample","","",49,[[["self"],["r"]],["duration"]]],[11,"sample","rand::distributions","",3,[[["self"],["r"]],["bool"]]],[11,"sample","","",4,[[["self"],["r"]],["u64"]]],[11,"sample","","",5,[[["self"],["r"]],["f64"]]],[11,"sample","","",6,[[["self"],["r"]],[["f64"],["vec",["f64"]]]]],[11,"sample","","",43,[[["self"],["r"]],["f64"]]],[11,"sample","","",7,[[["self"],["r"]],["f64"]]],[11,"sample","","",8,[[["self"],["r"]],["f64"]]],[11,"sample","","",9,[[["self"],["r"]],["f64"]]],[11,"sample","","",10,[[["self"],["r"]],["f64"]]],[11,"sample","","",11,[[["self"],["r"]],["f64"]]],[11,"sample","","",12,[[["self"],["r"]],["f64"]]],[11,"sample","","",44,[[["self"],["r"]],["f64"]]],[11,"sample","","",13,[[["self"],["r"]],["f64"]]],[11,"sample","","",14,[[["self"],["r"]],["f64"]]],[11,"sample","","",15,[[["self"],["r"]],["f64"]]],[11,"sample","","",16,[[["self"],["r"]],["u64"]]],[11,"sample","","",17,[[["self"],["r"]],["f64"]]],[11,"sample","rand::distributions::uniform","",21,[[["self"],["r"]],["x"]]],[11,"sample","rand::distributions","",22,[[["self"],["r"]]]],[11,"sample","","",23,[[["self"],["r"]]]],[11,"sample","","",24,[[["self"],["r"]],["f64"]]],[11,"sample","rand::distributions::weighted::alias_method","",27,[[["self"],["r"]],["usize"]]],[11,"sample","rand::distributions::weighted","",28,[[["self"],["r"]],["usize"]]],[11,"sample","rand::distributions","",46,[[["self"],["r"]],["f32"]]],[11,"sample","","",41,[[["self"],["r"]],["f32"]]],[11,"sample","","",40,[[["self"],["r"]],["f32"]]],[11,"sample","","",46,[[["self"],["r"]],["f64"]]],[11,"sample","","",41,[[["self"],["r"]],["f64"]]],[11,"sample","","",40,[[["self"],["r"]],["f64"]]],[11,"sample","","",46,[[["self"],["r"]],["u8"]]],[11,"sample","","",46,[[["self"],["r"]],["u16"]]],[11,"sample","","",46,[[["self"],["r"]],["u32"]]],[11,"sample","","",46,[[["self"],["r"]],["u64"]]],[11,"sample","","",46,[[["self"],["r"]],["u128"]]],[11,"sample","","",46,[[["self"],["r"]],["usize"]]],[11,"sample","","",46,[[["self"],["r"]],["i8"]]],[11,"sample","","",46,[[["self"],["r"]],["i16"]]],[11,"sample","","",46,[[["self"],["r"]],["i32"]]],[11,"sample","","",46,[[["self"],["r"]],["i64"]]],[11,"sample","","",46,[[["self"],["r"]],["i128"]]],[11,"sample","","",46,[[["self"],["r"]],["isize"]]],[11,"sample","","",46,[[["self"],["r"]],["nonzerou8"]]],[11,"sample","","",46,[[["self"],["r"]],["nonzerou16"]]],[11,"sample","","",46,[[["self"],["r"]],["nonzerou32"]]],[11,"sample","","",46,[[["self"],["r"]],["nonzerou64"]]],[11,"sample","","",46,[[["self"],["r"]],["nonzerou128"]]],[11,"sample","","",46,[[["self"],["r"]],["nonzerousize"]]],[11,"sample","","",46,[[["self"],["r"]],["char"]]],[11,"sample","","",42,[[["self"],["r"]],["char"]]],[11,"sample","","",46,[[["self"],["r"]],["bool"]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]],["option"]]],[11,"sample","","",46,[[["self"],["r"]],["wrapping"]]],[11,"from","rand::distributions::uniform","",21,[[["range"]],["uniform"]]],[11,"from","","",21,[[["rangeinclusive"]],["uniform"]]],[11,"from","rand::seq::index","",34,[[["u32"],["vec",["u32"]]],["self"]]],[11,"from","","",34,[[["vec",["usize"]],["usize"]],["self"]]],[11,"len","rand::seq","",54,[[["self"]],["usize"]]],[11,"next","rand::distributions","",45,[[["self"]],["option"]]],[11,"size_hint","","",45,[[["self"]]]],[11,"next","rand::seq::index","",55,[[["self"]],[["usize"],["option",["usize"]]]]],[11,"size_hint","","",55,[[["self"]]]],[11,"next","","",56,[[["self"]],["option"]]],[11,"size_hint","","",56,[[["self"]]]],[11,"next","rand::seq","",54,[[["self"]],["option"]]],[11,"size_hint","","",54,[[["self"]]]],[11,"clone","rand::distributions","",3,[[["self"]],["bernoulli"]]],[11,"clone","","",2,[[["self"]],["bernoullierror"]]],[11,"clone","","",4,[[["self"]],["binomial"]]],[11,"clone","","",5,[[["self"]],["cauchy"]]],[11,"clone","","",6,[[["self"]],["dirichlet"]]],[11,"clone","","",43,[[["self"]],["exp1"]]],[11,"clone","","",7,[[["self"]],["exp"]]],[11,"clone","","",8,[[["self"]],["gamma"]]],[11,"clone","","",9,[[["self"]],["chisquared"]]],[11,"clone","","",10,[[["self"]],["fisherf"]]],[11,"clone","","",11,[[["self"]],["studentt"]]],[11,"clone","","",12,[[["self"]],["beta"]]],[11,"clone","","",44,[[["self"]],["standardnormal"]]],[11,"clone","","",13,[[["self"]],["normal"]]],[11,"clone","","",14,[[["self"]],["lognormal"]]],[11,"clone","","",15,[[["self"]],["pareto"]]],[11,"clone","","",16,[[["self"]],["poisson"]]],[11,"clone","","",17,[[["self"]],["triangular"]]],[11,"clone","rand::distributions::uniform","",21,[[["self"]],["uniform"]]],[11,"clone","","",47,[[["self"]],["uniformint"]]],[11,"clone","","",48,[[["self"]],["uniformfloat"]]],[11,"clone","","",49,[[["self"]],["uniformduration"]]],[11,"clone","rand::distributions","",22,[[["self"]],["unitcircle"]]],[11,"clone","","",23,[[["self"]],["unitspheresurface"]]],[11,"clone","","",24,[[["self"]],["weibull"]]],[11,"clone","rand::distributions::weighted::alias_method","",27,[[["self"]],["self"]]],[11,"clone","rand::distributions::weighted","",28,[[["self"]],["weightedindex"]]],[11,"clone","","",25,[[["self"]],["weightederror"]]],[11,"clone","rand::distributions","",41,[[["self"]],["openclosed01"]]],[11,"clone","","",40,[[["self"]],["open01"]]],[11,"clone","","",46,[[["self"]],["standard"]]],[11,"clone","rand::rngs::adapter","",31,[[["self"]],["reseedingrng"]]],[11,"clone","rand::rngs::mock","",33,[[["self"]],["steprng"]]],[11,"clone","rand::rngs","",51,[[["self"]],["stdrng"]]],[11,"clone","","",52,[[["self"]],["threadrng"]]],[11,"clone","rand::seq::index","",34,[[["self"]],["indexvec"]]],[11,"clone","","",56,[[["self"]],["indexvecintoiter"]]],[11,"default","rand::rngs","",32,[[],["self"]]],[11,"default","","",52,[[],["threadrng"]]],[11,"eq","rand::distributions","",2,[[["bernoullierror"],["self"]],["bool"]]],[11,"eq","rand::distributions::weighted","",25,[[["self"],["weightederror"]],["bool"]]],[11,"eq","rand::seq::index","",34,[[["self"],["indexvec"]],["bool"]]],[11,"fmt","rand::distributions","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",6,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",43,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",7,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",8,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",9,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",10,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",11,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",12,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",44,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",13,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",14,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",15,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",16,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",17,[[["formatter"],["self"]],["result"]]],[11,"fmt","rand::distributions::uniform","",21,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",47,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",48,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",49,[[["formatter"],["self"]],["result"]]],[11,"fmt","rand::distributions","",22,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",23,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",24,[[["formatter"],["self"]],["result"]]],[11,"fmt","rand::distributions::weighted::alias_method","",27,[[["formatter"],["self"]],["result"]]],[11,"fmt","rand::distributions::weighted","",28,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",25,[[["formatter"],["self"]],["result"]]],[11,"fmt","rand::distributions","",41,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",40,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",42,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",45,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",46,[[["formatter"],["self"]],["result"]]],[11,"fmt","rand::rngs::adapter","",30,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",53,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",31,[[["formatter"],["self"]],["result"]]],[11,"fmt","rand::rngs","",32,[[["formatter"],["self"]],["result"]]],[11,"fmt","rand::rngs::mock","",33,[[["formatter"],["self"]],["result"]]],[11,"fmt","rand::rngs","",51,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",52,[[["formatter"],["self"]],["result"]]],[11,"fmt","rand::seq::index","",34,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",55,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",56,[[["formatter"],["self"]],["result"]]],[11,"fmt","rand::seq","",54,[[["formatter"],["self"]],["result"]]],[11,"fmt","rand::distributions","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","rand::distributions::weighted","",25,[[["formatter"],["self"]],["result"]]],[11,"fmt","rand::rngs::adapter","",53,[[["formatter"],["self"]],["result"]]],[11,"source","","",53,[[["self"]],[["option",["error"]],["error"]]]],[11,"next_u32","","",30,[[["self"]],["u32"]]],[11,"next_u64","","",30,[[["self"]],["u64"]]],[11,"fill_bytes","","",30,[[["self"]]]],[11,"try_fill_bytes","","",30,[[["self"]],[["result",["error"]],["error"]]]],[11,"next_u32","","",31,[[["self"]],["u32"]]],[11,"next_u64","","",31,[[["self"]],["u64"]]],[11,"fill_bytes","","",31,[[["self"]]]],[11,"try_fill_bytes","","",31,[[["self"]],[["result",["error"]],["error"]]]],[11,"next_u32","rand::rngs","",32,[[["self"]],["u32"]]],[11,"next_u64","","",32,[[["self"]],["u64"]]],[11,"fill_bytes","","",32,[[["self"]]]],[11,"try_fill_bytes","","",32,[[["self"]],[["result",["error"]],["error"]]]],[11,"next_u32","rand::rngs::mock","",33,[[["self"]],["u32"]]],[11,"next_u64","","",33,[[["self"]],["u64"]]],[11,"fill_bytes","","",33,[[["self"]]]],[11,"try_fill_bytes","","",33,[[["self"]],[["result",["error"]],["error"]]]],[11,"next_u32","rand::rngs","",51,[[["self"]],["u32"]]],[11,"next_u64","","",51,[[["self"]],["u64"]]],[11,"fill_bytes","","",51,[[["self"]]]],[11,"try_fill_bytes","","",51,[[["self"]],[["result",["error"]],["error"]]]],[11,"next_u32","","",52,[[["self"]],["u32"]]],[11,"next_u64","","",52,[[["self"]],["u64"]]],[11,"fill_bytes","","",52,[[["self"]]]],[11,"try_fill_bytes","","",52,[[["self"]],[["result",["error"]],["error"]]]],[11,"from_seed","","",51,[[],["self"]]],[11,"from_rng","","",51,[[["rngcore"]],[["error"],["result",["error"]]]]],[11,"new","rand","Construct from any type supporting `std::error::Error`",39,[[["e"]],["error"]]],[11,"inner","","Reference the inner error (`std` only)",39,[[["self"]],["error"]]],[11,"take_inner","","Unwrap the inner error (`std` only)",39,[[],[["box",["error"]],["error"]]]],[18,"INTERNAL_START","","Codes below this point represent OS Errors (i.e. positive…",39,null],[18,"CUSTOM_START","","Codes at or above this point can be used by users to…",39,null],[11,"raw_os_error","","Extract the raw OS error code (if this error came from the…",39,[[["self"]],[["option",["i32"]],["i32"]]]],[11,"code","","Retrieve the error code, if any.",39,[[["self"]],[["nonzerou32"],["option",["nonzerou32"]]]]]],"p":[[8,"RngCore"],[8,"SeedableRng"],[4,"BernoulliError"],[3,"Bernoulli"],[3,"Binomial"],[3,"Cauchy"],[3,"Dirichlet"],[3,"Exp"],[3,"Gamma"],[3,"ChiSquared"],[3,"FisherF"],[3,"StudentT"],[3,"Beta"],[3,"Normal"],[3,"LogNormal"],[3,"Pareto"],[3,"Poisson"],[3,"Triangular"],[8,"SampleUniform"],[8,"UniformSampler"],[8,"SampleBorrow"],[3,"Uniform"],[3,"UnitCircle"],[3,"UnitSphereSurface"],[3,"Weibull"],[4,"WeightedError"],[8,"Weight"],[3,"WeightedIndex"],[3,"WeightedIndex"],[8,"Distribution"],[3,"ReadRng"],[3,"ReseedingRng"],[3,"EntropyRng"],[3,"StepRng"],[4,"IndexVec"],[8,"SliceRandom"],[8,"IteratorRandom"],[8,"Rng"],[8,"AsByteSliceMut"],[3,"Error"],[3,"Open01"],[3,"OpenClosed01"],[3,"Alphanumeric"],[3,"Exp1"],[3,"StandardNormal"],[3,"DistIter"],[3,"Standard"],[3,"UniformInt"],[3,"UniformFloat"],[3,"UniformDuration"],[3,"OsRng"],[3,"StdRng"],[3,"ThreadRng"],[3,"ReadError"],[3,"SliceChooseIter"],[4,"IndexVecIter"],[4,"IndexVecIntoIter"]]};
searchIndex["rand_chacha"] = {"doc":"The ChaCha random number generator.","i":[[3,"ChaCha12Core","rand_chacha","ChaCha with 12 rounds",null,null],[3,"ChaCha12Rng","","A cryptographically secure random number generator that…",null,null],[3,"ChaCha20Core","","ChaCha with 20 rounds",null,null],[3,"ChaCha20Rng","","A cryptographically secure random number generator that…",null,null],[3,"ChaCha8Core","","ChaCha with 8 rounds",null,null],[3,"ChaCha8Rng","","A cryptographically secure random number generator that…",null,null],[11,"get_word_pos","","Get the offset from the start of the stream, in 32-bit…",0,[[["self"]],["u128"]]],[11,"set_word_pos","","Set the offset from the start of the stream, in 32-bit…",0,[[["self"],["u128"]]]],[11,"set_stream","","Set the stream number.",0,[[["self"],["u64"]]]],[11,"get_word_pos","","Get the offset from the start of the stream, in 32-bit…",1,[[["self"]],["u128"]]],[11,"set_word_pos","","Set the offset from the start of the stream, in 32-bit…",1,[[["self"],["u128"]]]],[11,"set_stream","","Set the stream number.",1,[[["self"],["u64"]]]],[11,"get_word_pos","","Get the offset from the start of the stream, in 32-bit…",2,[[["self"]],["u128"]]],[11,"set_word_pos","","Set the offset from the start of the stream, in 32-bit…",2,[[["self"],["u128"]]]],[11,"set_stream","","Set the stream number.",2,[[["self"],["u64"]]]],[6,"ChaChaRng","","ChaCha with 20 rounds",null,null],[6,"ChaChaCore","","ChaCha with 20 rounds, low-level interface",null,null],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"vzip","","",3,[[],["v"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"vzip","","",1,[[],["v"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,[[["self"],["t"]]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"vzip","","",4,[[],["v"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"vzip","","",0,[[],["v"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,[[["self"],["t"]]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"vzip","","",5,[[],["v"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"vzip","","",2,[[],["v"]]],[11,"from","","",0,[[["chacha20core"]],["self"]]],[11,"from","","",1,[[["chacha12core"]],["self"]]],[11,"from","","",2,[[["chacha8core"]],["self"]]],[11,"clone","","",4,[[["self"]],["chacha20core"]]],[11,"clone","","",0,[[["self"]],["chacha20rng"]]],[11,"clone","","",3,[[["self"]],["chacha12core"]]],[11,"clone","","",1,[[["self"]],["chacha12rng"]]],[11,"clone","","",5,[[["self"]],["chacha8core"]]],[11,"clone","","",2,[[["self"]],["chacha8rng"]]],[11,"fmt","","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"generate","","",4,[[["self"]]]],[11,"generate","","",3,[[["self"]]]],[11,"generate","","",5,[[["self"]]]],[11,"next_u32","","",0,[[["self"]],["u32"]]],[11,"next_u64","","",0,[[["self"]],["u64"]]],[11,"fill_bytes","","",0,[[["self"]]]],[11,"try_fill_bytes","","",0,[[["self"]],[["result",["error"]],["error"]]]],[11,"next_u32","","",1,[[["self"]],["u32"]]],[11,"next_u64","","",1,[[["self"]],["u64"]]],[11,"fill_bytes","","",1,[[["self"]]]],[11,"try_fill_bytes","","",1,[[["self"]],[["result",["error"]],["error"]]]],[11,"next_u32","","",2,[[["self"]],["u32"]]],[11,"next_u64","","",2,[[["self"]],["u64"]]],[11,"fill_bytes","","",2,[[["self"]]]],[11,"try_fill_bytes","","",2,[[["self"]],[["result",["error"]],["error"]]]],[11,"from_seed","","",4,[[],["self"]]],[11,"from_seed","","",0,[[],["self"]]],[11,"from_seed","","",3,[[],["self"]]],[11,"from_seed","","",1,[[],["self"]]],[11,"from_seed","","",5,[[],["self"]]],[11,"from_seed","","",2,[[],["self"]]]],"p":[[3,"ChaCha20Rng"],[3,"ChaCha12Rng"],[3,"ChaCha8Rng"],[3,"ChaCha12Core"],[3,"ChaCha20Core"],[3,"ChaCha8Core"]]};
searchIndex["rand_core"] = {"doc":"Random number generation traits","i":[[3,"Error","rand_core","Error type of random number generators",null,null],[3,"OsRng","","A random number generator that retrieves randomness from…",null,null],[11,"new","","Construct from any type supporting `std::error::Error`",0,[[["e"]],["self"]]],[11,"inner","","Reference the inner error (`std` only)",0,[[["self"]],["error"]]],[11,"take_inner","","Unwrap the inner error (`std` only)",0,[[],[["box",["error"]],["error"]]]],[18,"INTERNAL_START","","Codes below this point represent OS Errors (i.e. positive…",0,null],[18,"CUSTOM_START","","Codes at or above this point can be used by users to…",0,null],[11,"raw_os_error","","Extract the raw OS error code (if this error came from the…",0,[[["self"]],[["option",["i32"]],["i32"]]]],[11,"code","","Retrieve the error code, if any.",0,[[["self"]],[["option",["nonzerou32"]],["nonzerou32"]]]],[0,"block","","The `BlockRngCore` trait and implementation helpers",null,null],[3,"BlockRng","rand_core::block","A wrapper type implementing [`RngCore`] for some type…",null,null],[12,"core","","The core part of the RNG, implementing the `generate`…",1,null],[3,"BlockRng64","","A wrapper type implementing [`RngCore`] for some type…",null,null],[12,"core","","The core part of the RNG, implementing the `generate`…",2,null],[8,"BlockRngCore","","A trait for RNGs which do not generate random numbers…",null,null],[16,"Item","","Results element type, e.g. `u32`.",3,null],[16,"Results","","Results type. This is the 'block' an RNG implementing…",3,null],[10,"generate","","Generate a new block of results.",3,[[["self"]]]],[11,"new","","Create a new `BlockRng` from an existing RNG implementing…",1,[[["r"]],["blockrng"]]],[11,"index","","Get the index into the result buffer.",1,[[["self"]],["usize"]]],[11,"reset","","Reset the number of available results. This will force a…",1,[[["self"]]]],[11,"generate_and_set","","Generate a new set of results immediately, setting the…",1,[[["self"],["usize"]]]],[11,"new","","Create a new `BlockRng` from an existing RNG implementing…",2,[[["r"]],["blockrng64"]]],[11,"index","","Get the index into the result buffer.",2,[[["self"]],["usize"]]],[11,"reset","","Reset the number of available results. This will force a…",2,[[["self"]]]],[11,"generate_and_set","","Generate a new set of results immediately, setting the…",2,[[["self"],["usize"]]]],[0,"impls","rand_core","Helper functions for implementing `RngCore` functions.",null,null],[5,"next_u64_via_u32","rand_core::impls","Implement `next_u64` via `next_u32`, little-endian order.",null,[[["r"]],["u64"]]],[5,"fill_bytes_via_next","","Implement `fill_bytes` via `next_u64` and `next_u32`,…",null,[[["r"]]]],[5,"fill_via_u32_chunks","","Implement `fill_bytes` by reading chunks from the output…",null,[[]]],[5,"fill_via_u64_chunks","","Implement `fill_bytes` by reading chunks from the output…",null,[[]]],[5,"next_u32_via_fill","","Implement `next_u32` via `fill_bytes`, little-endian order.",null,[[["r"]],["u32"]]],[5,"next_u64_via_fill","","Implement `next_u64` via `fill_bytes`, little-endian order.",null,[[["r"]],["u64"]]],[0,"le","rand_core","Little-Endian utilities",null,null],[5,"read_u32_into","rand_core::le","Reads unsigned 32 bit integers from `src` into `dst`.…",null,[[]]],[5,"read_u64_into","","Reads unsigned 64 bit integers from `src` into `dst`.…",null,[[]]],[8,"RngCore","rand_core","The core of a random number generator.",null,null],[10,"next_u32","","Return the next random `u32`.",4,[[["self"]],["u32"]]],[10,"next_u64","","Return the next random `u64`.",4,[[["self"]],["u64"]]],[10,"fill_bytes","","Fill `dest` with random data.",4,[[["self"]]]],[10,"try_fill_bytes","","Fill `dest` entirely with random data.",4,[[["self"]],[["result",["error"]],["error"]]]],[8,"CryptoRng","","A marker trait used to indicate that an [`RngCore`] or…",null,null],[8,"SeedableRng","","A random number generator that can be explicitly seeded.",null,null],[16,"Seed","","Seed type, which is restricted to types…",5,null],[10,"from_seed","","Create a new PRNG using the given seed.",5,[[],["self"]]],[11,"seed_from_u64","","Create a new PRNG using a `u64` seed.",5,[[["u64"]],["self"]]],[11,"from_rng","","Create a new PRNG seeded from another `Rng`.",5,[[["rngcore"]],[["result",["error"]],["error"]]]],[11,"from_entropy","","Creates a new instance of the RNG seeded via [`getrandom`].",5,[[],["self"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,[[["self"],["t"]]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"from","rand_core::block","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"next_u32","","",1,[[["self"]],["u32"]]],[11,"next_u64","","",1,[[["self"]],["u64"]]],[11,"fill_bytes","","",1,[[["self"]]]],[11,"try_fill_bytes","","",1,[[["self"]],[["result",["error"]],["error"]]]],[11,"next_u32","","",2,[[["self"]],["u32"]]],[11,"next_u64","","",2,[[["self"]],["u64"]]],[11,"fill_bytes","","",2,[[["self"]]]],[11,"try_fill_bytes","","",2,[[["self"]],[["result",["error"]],["error"]]]],[11,"next_u32","rand_core","",6,[[["self"]],["u32"]]],[11,"next_u64","","",6,[[["self"]],["u64"]]],[11,"fill_bytes","","",6,[[["self"]]]],[11,"try_fill_bytes","","",6,[[["self"]],[["result",["error"]],["error"]]]],[11,"from_seed","rand_core::block","",1,[[],["self"]]],[11,"seed_from_u64","","",1,[[["u64"]],["self"]]],[11,"from_rng","","",1,[[["rngcore"]],[["result",["error"]],["error"]]]],[11,"from_seed","","",2,[[],["self"]]],[11,"seed_from_u64","","",2,[[["u64"]],["self"]]],[11,"from_rng","","",2,[[["rngcore"]],[["result",["error"]],["error"]]]],[11,"from","rand_core","",0,[[["nonzerou32"]],["self"]]],[11,"from","","",0,[[["error"]],["self"]]],[11,"clone","rand_core::block","",1,[[["self"]],["blockrng"]]],[11,"clone","","",2,[[["self"]],["blockrng64"]]],[11,"clone","rand_core","",6,[[["self"]],["osrng"]]],[11,"default","","",6,[[],["osrng"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","rand_core::block","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","rand_core","",6,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"source","","",0,[[["self"]],[["option",["error"]],["error"]]]],[11,"read","","",4,[[["self"]],[["error"],["usize"],["result",["usize","error"]]]]]],"p":[[3,"Error"],[3,"BlockRng"],[3,"BlockRng64"],[8,"BlockRngCore"],[8,"RngCore"],[8,"SeedableRng"],[3,"OsRng"]]};
searchIndex["regex"] = {"doc":"This crate provides a library for parsing, compiling, and…","i":[[3,"RegexSetBuilder","regex","A configurable builder for a set of regular expressions.",null,null],[3,"RegexBuilder","","A configurable builder for a regular expression.",null,null],[3,"RegexSet","","Match multiple (possibly overlapping) regular expressions…",null,null],[3,"SetMatches","","A set of matches returned by a regex set.",null,null],[3,"SetMatchesIntoIter","","An owned iterator over the set of matches from a regex set.",null,null],[3,"SetMatchesIter","","A borrowed iterator over the set of matches from a regex…",null,null],[3,"CaptureLocations","","CaptureLocations is a low level representation of the raw…",null,null],[3,"CaptureMatches","","An iterator that yields all non-overlapping capture groups…",null,null],[3,"CaptureNames","","An iterator over the names of all possible captures.",null,null],[3,"Captures","","Captures represents a group of captured strings for a…",null,null],[3,"Match","","Match represents a single match of a regex in a haystack.",null,null],[3,"Matches","","An iterator over all non-overlapping matches for a…",null,null],[3,"NoExpand","","`NoExpand` indicates literal string replacement.",null,null],[12,"0","","",0,null],[3,"Regex","","A compiled regular expression for matching Unicode strings.",null,null],[3,"ReplacerRef","","By-reference adaptor for a `Replacer`",null,null],[3,"Split","","Yields all substrings delimited by a regular expression…",null,null],[3,"SplitN","","Yields at most `N` substrings delimited by a regular…",null,null],[3,"SubCaptureMatches","","An iterator that yields all capturing matches in the order…",null,null],[4,"Error","","An error that occurred during parsing or compiling a…",null,null],[13,"Syntax","","A syntax error.",1,null],[13,"CompiledTooBig","","The compiled program exceeded the set size limit. The…",1,null],[5,"escape","","Escapes all regular expression meta characters in `text`.",null,[[["str"]],["string"]]],[0,"bytes","","Match regular expressions on arbitrary bytes.",null,null],[3,"RegexBuilder","regex::bytes","A configurable builder for a regular expression.",null,null],[3,"RegexSetBuilder","","A configurable builder for a set of regular expressions.",null,null],[3,"Match","","Match represents a single match of a regex in a haystack.",null,null],[3,"Regex","","A compiled regular expression for matching arbitrary bytes.",null,null],[3,"Matches","","An iterator over all non-overlapping matches for a…",null,null],[3,"CaptureMatches","","An iterator that yields all non-overlapping capture groups…",null,null],[3,"Split","","Yields all substrings delimited by a regular expression…",null,null],[3,"SplitN","","Yields at most `N` substrings delimited by a regular…",null,null],[3,"CaptureNames","","An iterator over the names of all possible captures.",null,null],[3,"CaptureLocations","","CaptureLocations is a low level representation of the raw…",null,null],[3,"Captures","","Captures represents a group of captured byte strings for a…",null,null],[3,"SubCaptureMatches","","An iterator that yields all capturing matches in the order…",null,null],[3,"ReplacerRef","","By-reference adaptor for a `Replacer`",null,null],[3,"NoExpand","","`NoExpand` indicates literal byte string replacement.",null,null],[12,"0","","",2,null],[3,"RegexSet","","Match multiple (possibly overlapping) regular expressions…",null,null],[3,"SetMatches","","A set of matches returned by a regex set.",null,null],[3,"SetMatchesIntoIter","","An owned iterator over the set of matches from a regex set.",null,null],[3,"SetMatchesIter","","A borrowed iterator over the set of matches from a regex…",null,null],[8,"Replacer","","Replacer describes types that can be used to replace…",null,null],[10,"replace_append","","Appends text to `dst` to replace the current match.",3,[[["self"],["captures"],["vec"]]]],[11,"no_expansion","","Return a fixed unchanging replacement byte string.",3,[[["self"]],[["cow"],["option",["cow"]]]]],[11,"by_ref","","Return a `Replacer` that borrows and wraps this `Replacer`.",3,[[["self"]],["replacerref"]]],[11,"new","","Create a new regular expression builder with the given…",4,[[["str"]],["regexbuilder"]]],[11,"build","","Consume the builder and compile the regular expression.",4,[[["self"]],[["regex"],["error"],["result",["regex","error"]]]]],[11,"case_insensitive","","Set the value for the case insensitive (`i`) flag.",4,[[["self"],["bool"]],["regexbuilder"]]],[11,"multi_line","","Set the value for the multi-line matching (`m`) flag.",4,[[["self"],["bool"]],["regexbuilder"]]],[11,"dot_matches_new_line","","Set the value for the any character (`s`) flag, where in…",4,[[["self"],["bool"]],["regexbuilder"]]],[11,"swap_greed","","Set the value for the greedy swap (`U`) flag.",4,[[["self"],["bool"]],["regexbuilder"]]],[11,"ignore_whitespace","","Set the value for the ignore whitespace (`x`) flag.",4,[[["self"],["bool"]],["regexbuilder"]]],[11,"unicode","","Set the value for the Unicode (`u`) flag.",4,[[["self"],["bool"]],["regexbuilder"]]],[11,"octal","","Whether to support octal syntax or not.",4,[[["self"],["bool"]],["regexbuilder"]]],[11,"size_limit","","Set the approximate size limit of the compiled regular…",4,[[["self"],["usize"]],["regexbuilder"]]],[11,"dfa_size_limit","","Set the approximate size of the cache used by the DFA.",4,[[["self"],["usize"]],["regexbuilder"]]],[11,"nest_limit","","Set the nesting limit for this parser.",4,[[["self"],["u32"]],["regexbuilder"]]],[11,"new","regex","Create a new regular expression builder with the given…",5,[[["str"]],["regexbuilder"]]],[11,"build","","Consume the builder and compile the regular expression.",5,[[["self"]],[["regex"],["error"],["result",["regex","error"]]]]],[11,"case_insensitive","","Set the value for the case insensitive (`i`) flag.",5,[[["self"],["bool"]],["regexbuilder"]]],[11,"multi_line","","Set the value for the multi-line matching (`m`) flag.",5,[[["self"],["bool"]],["regexbuilder"]]],[11,"dot_matches_new_line","","Set the value for the any character (`s`) flag, where in…",5,[[["self"],["bool"]],["regexbuilder"]]],[11,"swap_greed","","Set the value for the greedy swap (`U`) flag.",5,[[["self"],["bool"]],["regexbuilder"]]],[11,"ignore_whitespace","","Set the value for the ignore whitespace (`x`) flag.",5,[[["self"],["bool"]],["regexbuilder"]]],[11,"unicode","","Set the value for the Unicode (`u`) flag.",5,[[["self"],["bool"]],["regexbuilder"]]],[11,"octal","","Whether to support octal syntax or not.",5,[[["self"],["bool"]],["regexbuilder"]]],[11,"size_limit","","Set the approximate size limit of the compiled regular…",5,[[["self"],["usize"]],["regexbuilder"]]],[11,"dfa_size_limit","","Set the approximate size of the cache used by the DFA.",5,[[["self"],["usize"]],["regexbuilder"]]],[11,"nest_limit","","Set the nesting limit for this parser.",5,[[["self"],["u32"]],["regexbuilder"]]],[11,"new","regex::bytes","Create a new regular expression builder with the given…",6,[[["i"]],["regexsetbuilder"]]],[11,"build","","Consume the builder and compile the regular expressions…",6,[[["self"]],[["result",["regexset","error"]],["error"],["regexset"]]]],[11,"case_insensitive","","Set the value for the case insensitive (`i`) flag.",6,[[["self"],["bool"]],["regexsetbuilder"]]],[11,"multi_line","","Set the value for the multi-line matching (`m`) flag.",6,[[["self"],["bool"]],["regexsetbuilder"]]],[11,"dot_matches_new_line","","Set the value for the any character (`s`) flag, where in…",6,[[["self"],["bool"]],["regexsetbuilder"]]],[11,"swap_greed","","Set the value for the greedy swap (`U`) flag.",6,[[["self"],["bool"]],["regexsetbuilder"]]],[11,"ignore_whitespace","","Set the value for the ignore whitespace (`x`) flag.",6,[[["self"],["bool"]],["regexsetbuilder"]]],[11,"unicode","","Set the value for the Unicode (`u`) flag.",6,[[["self"],["bool"]],["regexsetbuilder"]]],[11,"octal","","Whether to support octal syntax or not.",6,[[["self"],["bool"]],["regexsetbuilder"]]],[11,"size_limit","","Set the approximate size limit of the compiled regular…",6,[[["self"],["usize"]],["regexsetbuilder"]]],[11,"dfa_size_limit","","Set the approximate size of the cache used by the DFA.",6,[[["self"],["usize"]],["regexsetbuilder"]]],[11,"nest_limit","","Set the nesting limit for this parser.",6,[[["self"],["u32"]],["regexsetbuilder"]]],[11,"new","regex","Create a new regular expression builder with the given…",7,[[["i"]],["regexsetbuilder"]]],[11,"build","","Consume the builder and compile the regular expressions…",7,[[["self"]],[["result",["regexset","error"]],["error"],["regexset"]]]],[11,"case_insensitive","","Set the value for the case insensitive (`i`) flag.",7,[[["self"],["bool"]],["regexsetbuilder"]]],[11,"multi_line","","Set the value for the multi-line matching (`m`) flag.",7,[[["self"],["bool"]],["regexsetbuilder"]]],[11,"dot_matches_new_line","","Set the value for the any character (`s`) flag, where in…",7,[[["self"],["bool"]],["regexsetbuilder"]]],[11,"swap_greed","","Set the value for the greedy swap (`U`) flag.",7,[[["self"],["bool"]],["regexsetbuilder"]]],[11,"ignore_whitespace","","Set the value for the ignore whitespace (`x`) flag.",7,[[["self"],["bool"]],["regexsetbuilder"]]],[11,"unicode","","Set the value for the Unicode (`u`) flag.",7,[[["self"],["bool"]],["regexsetbuilder"]]],[11,"octal","","Whether to support octal syntax or not.",7,[[["self"],["bool"]],["regexsetbuilder"]]],[11,"size_limit","","Set the approximate size limit of the compiled regular…",7,[[["self"],["usize"]],["regexsetbuilder"]]],[11,"dfa_size_limit","","Set the approximate size of the cache used by the DFA.",7,[[["self"],["usize"]],["regexsetbuilder"]]],[11,"nest_limit","","Set the nesting limit for this parser.",7,[[["self"],["u32"]],["regexsetbuilder"]]],[11,"no_expansion","regex::bytes","Return a fixed unchanging replacement byte string.",3,[[["self"]],[["cow"],["option",["cow"]]]]],[11,"by_ref","","Return a `Replacer` that borrows and wraps this `Replacer`.",3,[[["self"]],["replacerref"]]],[11,"start","","Returns the starting byte offset of the match in the…",8,[[["self"]],["usize"]]],[11,"end","","Returns the ending byte offset of the match in the haystack.",8,[[["self"]],["usize"]]],[11,"range","","Returns the range over the starting and ending byte…",8,[[["self"]],[["range",["usize"]],["usize"]]]],[11,"as_bytes","","Returns the matched text.",8,[[["self"]]]],[11,"new","","Compiles a regular expression. Once compiled, it can be…",9,[[["str"]],[["regex"],["error"],["result",["regex","error"]]]]],[11,"is_match","","Returns true if and only if the regex matches the string…",9,[[["self"]],["bool"]]],[11,"find","","Returns the start and end byte range of the leftmost-first…",9,[[["self"]],[["match"],["option",["match"]]]]],[11,"find_iter","","Returns an iterator for each successive non-overlapping…",9,[[["self"]],["matches"]]],[11,"captures","","Returns the capture groups corresponding to the…",9,[[["self"]],[["captures"],["option",["captures"]]]]],[11,"captures_iter","","Returns an iterator over all the non-overlapping capture…",9,[[["self"]],["capturematches"]]],[11,"split","","Returns an iterator of substrings of `text` delimited by a…",9,[[["self"]],["split"]]],[11,"splitn","","Returns an iterator of at most `limit` substrings of…",9,[[["self"],["usize"]],["splitn"]]],[11,"replace","","Replaces the leftmost-first match with the replacement…",9,[[["replacer"],["self"]],["cow"]]],[11,"replace_all","","Replaces all non-overlapping matches in `text` with the…",9,[[["replacer"],["self"]],["cow"]]],[11,"replacen","","Replaces at most `limit` non-overlapping matches in `text`…",9,[[["replacer"],["usize"],["self"]],["cow"]]],[11,"shortest_match","","Returns the end location of a match in the text given.",9,[[["self"]],[["usize"],["option",["usize"]]]]],[11,"shortest_match_at","","Returns the same as shortest_match, but starts the search…",9,[[["self"],["usize"]],[["usize"],["option",["usize"]]]]],[11,"is_match_at","","Returns the same as is_match, but starts the search at the…",9,[[["self"],["usize"]],["bool"]]],[11,"find_at","","Returns the same as find, but starts the search at the…",9,[[["self"],["usize"]],[["match"],["option",["match"]]]]],[11,"captures_read","","This is like `captures`, but uses `CaptureLocations`…",9,[[["capturelocations"],["self"]],[["match"],["option",["match"]]]]],[11,"captures_read_at","","Returns the same as `captures_read`, but starts the search…",9,[[["capturelocations"],["usize"],["self"]],[["match"],["option",["match"]]]]],[11,"as_str","","Returns the original string of this regex.",9,[[["self"]],["str"]]],[11,"capture_names","","Returns an iterator over the capture names.",9,[[["self"]],["capturenames"]]],[11,"captures_len","","Returns the number of captures.",9,[[["self"]],["usize"]]],[11,"capture_locations","","Returns an empty set of capture locations that can be…",9,[[["self"]],["capturelocations"]]],[11,"get","","Returns the start and end positions of the Nth capture…",10,[[["self"],["usize"]],["option"]]],[11,"len","","Returns the total number of capturing groups.",10,[[["self"]],["usize"]]],[11,"get","","Returns the match associated with the capture group at…",11,[[["self"],["usize"]],[["match"],["option",["match"]]]]],[11,"name","","Returns the match for the capture group named `name`. If…",11,[[["str"],["self"]],[["match"],["option",["match"]]]]],[11,"iter","","An iterator that yields all capturing matches in the order…",11,[[["self"]],["subcapturematches"]]],[11,"expand","","Expands all instances of `$name` in `replacement` to the…",11,[[["vec"],["self"]]]],[11,"len","","Returns the number of captured groups.",11,[[["self"]],["usize"]]],[11,"new","regex","Create a new regex set with the given regular expressions.",12,[[["i"]],[["result",["regexset","error"]],["error"],["regexset"]]]],[11,"is_match","","Returns true if and only if one of the regexes in this set…",12,[[["str"],["self"]],["bool"]]],[11,"matches","","Returns the set of regular expressions that match in the…",12,[[["str"],["self"]],["setmatches"]]],[11,"len","","Returns the total number of regular expressions in this set.",12,[[["self"]],["usize"]]],[11,"patterns","","Returns the patterns that this set will match on.",12,[[["self"]]]],[11,"matched_any","","Whether this set contains any matches.",13,[[["self"]],["bool"]]],[11,"matched","","Whether the regex at the given index matched.",13,[[["self"],["usize"]],["bool"]]],[11,"len","","The total number of regexes in the set that created these…",13,[[["self"]],["usize"]]],[11,"iter","","Returns an iterator over indexes in the regex that matched.",13,[[["self"]],["setmatchesiter"]]],[11,"new","regex::bytes","Create a new regex set with the given regular expressions.",14,[[["i"]],[["result",["regexset","error"]],["error"],["regexset"]]]],[11,"is_match","","Returns true if and only if one of the regexes in this set…",14,[[["self"]],["bool"]]],[11,"matches","","Returns the set of regular expressions that match in the…",14,[[["self"]],["setmatches"]]],[11,"len","","Returns the total number of regular expressions in this set.",14,[[["self"]],["usize"]]],[11,"patterns","","Returns the patterns that this set will match on.",14,[[["self"]]]],[11,"matched_any","","Whether this set contains any matches.",15,[[["self"]],["bool"]]],[11,"matched","","Whether the regex at the given index matched.",15,[[["self"],["usize"]],["bool"]]],[11,"len","","The total number of regexes in the set that created these…",15,[[["self"]],["usize"]]],[11,"iter","","Returns an iterator over indexes in the regex that matched.",15,[[["self"]],["setmatchesiter"]]],[11,"start","regex","Returns the starting byte offset of the match in the…",16,[[["self"]],["usize"]]],[11,"end","","Returns the ending byte offset of the match in the haystack.",16,[[["self"]],["usize"]]],[11,"range","","Returns the range over the starting and ending byte…",16,[[["self"]],[["range",["usize"]],["usize"]]]],[11,"as_str","","Returns the matched text.",16,[[["self"]],["str"]]],[11,"new","","Compiles a regular expression. Once compiled, it can be…",17,[[["str"]],[["regex"],["error"],["result",["regex","error"]]]]],[11,"is_match","","Returns true if and only if the regex matches the string…",17,[[["str"],["self"]],["bool"]]],[11,"find","","Returns the start and end byte range of the leftmost-first…",17,[[["str"],["self"]],[["match"],["option",["match"]]]]],[11,"find_iter","","Returns an iterator for each successive non-overlapping…",17,[[["str"],["self"]],["matches"]]],[11,"captures","","Returns the capture groups corresponding to the…",17,[[["str"],["self"]],[["captures"],["option",["captures"]]]]],[11,"captures_iter","","Returns an iterator over all the non-overlapping capture…",17,[[["str"],["self"]],["capturematches"]]],[11,"split","","Returns an iterator of substrings of `text` delimited by a…",17,[[["str"],["self"]],["split"]]],[11,"splitn","","Returns an iterator of at most `limit` substrings of…",17,[[["str"],["self"],["usize"]],["splitn"]]],[11,"replace","","Replaces the leftmost-first match with the replacement…",17,[[["str"],["self"],["replacer"]],[["str"],["cow",["str"]]]]],[11,"replace_all","","Replaces all non-overlapping matches in `text` with the…",17,[[["str"],["self"],["replacer"]],[["str"],["cow",["str"]]]]],[11,"replacen","","Replaces at most `limit` non-overlapping matches in `text`…",17,[[["usize"],["str"],["self"],["replacer"]],[["str"],["cow",["str"]]]]],[11,"shortest_match","","Returns the end location of a match in the text given.",17,[[["str"],["self"]],[["usize"],["option",["usize"]]]]],[11,"shortest_match_at","","Returns the same as shortest_match, but starts the search…",17,[[["str"],["self"],["usize"]],[["usize"],["option",["usize"]]]]],[11,"is_match_at","","Returns the same as is_match, but starts the search at the…",17,[[["str"],["self"],["usize"]],["bool"]]],[11,"find_at","","Returns the same as find, but starts the search at the…",17,[[["str"],["self"],["usize"]],[["match"],["option",["match"]]]]],[11,"captures_read","","This is like `captures`, but uses `CaptureLocations`…",17,[[["str"],["self"],["capturelocations"]],[["match"],["option",["match"]]]]],[11,"captures_read_at","","Returns the same as captures, but starts the search at the…",17,[[["usize"],["str"],["self"],["capturelocations"]],[["match"],["option",["match"]]]]],[11,"as_str","","Returns the original string of this regex.",17,[[["self"]],["str"]]],[11,"capture_names","","Returns an iterator over the capture names.",17,[[["self"]],["capturenames"]]],[11,"captures_len","","Returns the number of captures.",17,[[["self"]],["usize"]]],[11,"capture_locations","","Returns an empty set of capture locations that can be…",17,[[["self"]],["capturelocations"]]],[11,"get","","Returns the start and end positions of the Nth capture…",18,[[["self"],["usize"]],["option"]]],[11,"len","","Returns the total number of capturing groups.",18,[[["self"]],["usize"]]],[11,"get","","Returns the match associated with the capture group at…",19,[[["self"],["usize"]],[["match"],["option",["match"]]]]],[11,"name","","Returns the match for the capture group named `name`. If…",19,[[["str"],["self"]],[["match"],["option",["match"]]]]],[11,"iter","","An iterator that yields all capturing matches in the order…",19,[[["self"]],["subcapturematches"]]],[11,"expand","","Expands all instances of `$name` in `replacement` to the…",19,[[["str"],["string"],["self"]]]],[11,"len","","Returns the number of captured groups.",19,[[["self"]],["usize"]]],[8,"Replacer","","Replacer describes types that can be used to replace…",null,null],[10,"replace_append","","Appends text to `dst` to replace the current match.",20,[[["string"],["self"],["captures"]]]],[11,"no_expansion","","Return a fixed unchanging replacement string.",20,[[["self"]],[["option",["cow"]],["cow",["str"]]]]],[11,"by_ref","","Return a `Replacer` that borrows and wraps this `Replacer`.",20,[[["self"]],["replacerref"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[],["u"]]],[11,"to_owned","","",12,[[["self"]],["t"]]],[11,"clone_into","","",12,[[["self"],["t"]]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"try_into","","",12,[[],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"type_id","","",12,[[["self"]],["typeid"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"into","","",13,[[],["u"]]],[11,"into_iter","","",13,[[],["i"]]],[11,"to_owned","","",13,[[["self"]],["t"]]],[11,"clone_into","","",13,[[["self"],["t"]]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"try_into","","",13,[[],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"type_id","","",13,[[["self"]],["typeid"]]],[11,"from","","",21,[[["t"]],["t"]]],[11,"into","","",21,[[],["u"]]],[11,"into_iter","","",21,[[],["i"]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"try_into","","",21,[[],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"type_id","","",21,[[["self"]],["typeid"]]],[11,"from","","",22,[[["t"]],["t"]]],[11,"into","","",22,[[],["u"]]],[11,"into_iter","","",22,[[],["i"]]],[11,"to_owned","","",22,[[["self"]],["t"]]],[11,"clone_into","","",22,[[["self"],["t"]]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"try_into","","",22,[[],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"type_id","","",22,[[["self"]],["typeid"]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"into","","",18,[[],["u"]]],[11,"to_owned","","",18,[[["self"]],["t"]]],[11,"clone_into","","",18,[[["self"],["t"]]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"try_into","","",18,[[],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"type_id","","",18,[[["self"]],["typeid"]]],[11,"from","","",23,[[["t"]],["t"]]],[11,"into","","",23,[[],["u"]]],[11,"into_iter","","",23,[[],["i"]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"try_into","","",23,[[],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"type_id","","",23,[[["self"]],["typeid"]]],[11,"from","","",24,[[["t"]],["t"]]],[11,"into","","",24,[[],["u"]]],[11,"into_iter","","",24,[[],["i"]]],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"try_into","","",24,[[],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"type_id","","",24,[[["self"]],["typeid"]]],[11,"from","","",19,[[["t"]],["t"]]],[11,"into","","",19,[[],["u"]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"try_into","","",19,[[],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"type_id","","",19,[[["self"]],["typeid"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"into","","",16,[[],["u"]]],[11,"to_owned","","",16,[[["self"]],["t"]]],[11,"clone_into","","",16,[[["self"],["t"]]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"try_into","","",16,[[],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"type_id","","",16,[[["self"]],["typeid"]]],[11,"from","","",25,[[["t"]],["t"]]],[11,"into","","",25,[[],["u"]]],[11,"into_iter","","",25,[[],["i"]]],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"try_into","","",25,[[],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"type_id","","",25,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"into","","",17,[[],["u"]]],[11,"to_owned","","",17,[[["self"]],["t"]]],[11,"clone_into","","",17,[[["self"],["t"]]]],[11,"to_string","","",17,[[["self"]],["string"]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"try_into","","",17,[[],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"type_id","","",17,[[["self"]],["typeid"]]],[11,"from","","",26,[[["t"]],["t"]]],[11,"into","","",26,[[],["u"]]],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"try_into","","",26,[[],["result"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"type_id","","",26,[[["self"]],["typeid"]]],[11,"from","","",27,[[["t"]],["t"]]],[11,"into","","",27,[[],["u"]]],[11,"into_iter","","",27,[[],["i"]]],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"try_into","","",27,[[],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"type_id","","",27,[[["self"]],["typeid"]]],[11,"from","","",28,[[["t"]],["t"]]],[11,"into","","",28,[[],["u"]]],[11,"into_iter","","",28,[[],["i"]]],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"try_into","","",28,[[],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"type_id","","",28,[[["self"]],["typeid"]]],[11,"from","","",29,[[["t"]],["t"]]],[11,"into","","",29,[[],["u"]]],[11,"into_iter","","",29,[[],["i"]]],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"try_into","","",29,[[],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"type_id","","",29,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"to_string","","",1,[[["self"]],["string"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","regex::bytes","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,[[["self"],["t"]]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[],["u"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,[[["self"],["t"]]]],[11,"to_string","","",9,[[["self"]],["string"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"from","","",30,[[["t"]],["t"]]],[11,"into","","",30,[[],["u"]]],[11,"into_iter","","",30,[[],["i"]]],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"try_into","","",30,[[],["result"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"type_id","","",30,[[["self"]],["typeid"]]],[11,"from","","",31,[[["t"]],["t"]]],[11,"into","","",31,[[],["u"]]],[11,"into_iter","","",31,[[],["i"]]],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"try_into","","",31,[[],["result"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"type_id","","",31,[[["self"]],["typeid"]]],[11,"from","","",32,[[["t"]],["t"]]],[11,"into","","",32,[[],["u"]]],[11,"into_iter","","",32,[[],["i"]]],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"try_into","","",32,[[],["result"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"type_id","","",32,[[["self"]],["typeid"]]],[11,"from","","",33,[[["t"]],["t"]]],[11,"into","","",33,[[],["u"]]],[11,"into_iter","","",33,[[],["i"]]],[11,"try_from","","",33,[[["u"]],["result"]]],[11,"try_into","","",33,[[],["result"]]],[11,"borrow","","",33,[[["self"]],["t"]]],[11,"borrow_mut","","",33,[[["self"]],["t"]]],[11,"type_id","","",33,[[["self"]],["typeid"]]],[11,"from","","",34,[[["t"]],["t"]]],[11,"into","","",34,[[],["u"]]],[11,"into_iter","","",34,[[],["i"]]],[11,"try_from","","",34,[[["u"]],["result"]]],[11,"try_into","","",34,[[],["result"]]],[11,"borrow","","",34,[[["self"]],["t"]]],[11,"borrow_mut","","",34,[[["self"]],["t"]]],[11,"type_id","","",34,[[["self"]],["typeid"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[],["u"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,[[["self"],["t"]]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[],["u"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"try_into","","",11,[[],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"type_id","","",11,[[["self"]],["typeid"]]],[11,"from","","",35,[[["t"]],["t"]]],[11,"into","","",35,[[],["u"]]],[11,"into_iter","","",35,[[],["i"]]],[11,"try_from","","",35,[[["u"]],["result"]]],[11,"try_into","","",35,[[],["result"]]],[11,"borrow","","",35,[[["self"]],["t"]]],[11,"borrow_mut","","",35,[[["self"]],["t"]]],[11,"type_id","","",35,[[["self"]],["typeid"]]],[11,"from","","",36,[[["t"]],["t"]]],[11,"into","","",36,[[],["u"]]],[11,"try_from","","",36,[[["u"]],["result"]]],[11,"try_into","","",36,[[],["result"]]],[11,"borrow","","",36,[[["self"]],["t"]]],[11,"borrow_mut","","",36,[[["self"]],["t"]]],[11,"type_id","","",36,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"into","","",14,[[],["u"]]],[11,"to_owned","","",14,[[["self"]],["t"]]],[11,"clone_into","","",14,[[["self"],["t"]]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"try_into","","",14,[[],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"type_id","","",14,[[["self"]],["typeid"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"into","","",15,[[],["u"]]],[11,"into_iter","","",15,[[],["i"]]],[11,"to_owned","","",15,[[["self"]],["t"]]],[11,"clone_into","","",15,[[["self"],["t"]]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"try_into","","",15,[[],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"type_id","","",15,[[["self"]],["typeid"]]],[11,"from","","",37,[[["t"]],["t"]]],[11,"into","","",37,[[],["u"]]],[11,"into_iter","","",37,[[],["i"]]],[11,"try_from","","",37,[[["u"]],["result"]]],[11,"try_into","","",37,[[],["result"]]],[11,"borrow","","",37,[[["self"]],["t"]]],[11,"borrow_mut","","",37,[[["self"]],["t"]]],[11,"type_id","","",37,[[["self"]],["typeid"]]],[11,"from","","",38,[[["t"]],["t"]]],[11,"into","","",38,[[],["u"]]],[11,"into_iter","","",38,[[],["i"]]],[11,"to_owned","","",38,[[["self"]],["t"]]],[11,"clone_into","","",38,[[["self"],["t"]]]],[11,"try_from","","",38,[[["u"]],["result"]]],[11,"try_into","","",38,[[],["result"]]],[11,"borrow","","",38,[[["self"]],["t"]]],[11,"borrow_mut","","",38,[[["self"]],["t"]]],[11,"type_id","","",38,[[["self"]],["typeid"]]],[11,"replace_append","","",36,[[["self"],["captures"],["vec"]]]],[11,"no_expansion","","",36,[[["self"]],[["cow"],["option",["cow"]]]]],[11,"replace_append","","",2,[[["self"],["captures"],["vec"]]]],[11,"no_expansion","","",2,[[["self"]],[["option",["cow"]],["cow"]]]],[11,"replace_append","regex","",26,[[["string"],["self"],["captures"]]]],[11,"no_expansion","","",26,[[["self"]],[["option",["cow"]],["cow",["str"]]]]],[11,"replace_append","","",0,[[["string"],["self"],["captures"]]]],[11,"no_expansion","","",0,[[["self"]],[["option",["cow"]],["cow",["str"]]]]],[11,"next_back","","",21,[[["self"]],[["usize"],["option",["usize"]]]]],[11,"next_back","","",22,[[["self"]],[["usize"],["option",["usize"]]]]],[11,"next_back","regex::bytes","",37,[[["self"]],[["usize"],["option",["usize"]]]]],[11,"next_back","","",38,[[["self"]],[["usize"],["option",["usize"]]]]],[11,"into_iter","regex","",13,[[]]],[11,"into_iter","regex::bytes","",15,[[]]],[11,"next","","",30,[[["self"]],[["match"],["option",["match"]]]]],[11,"next","","",31,[[["self"]],[["captures"],["option",["captures"]]]]],[11,"next","","",32,[[["self"]],["option"]]],[11,"next","","",33,[[["self"]],["option"]]],[11,"next","","",34,[[["self"]],[["option",["option"]],["option",["str"]]]]],[11,"size_hint","","",34,[[["self"]]]],[11,"next","","",35,[[["self"]],[["option",["option"]],["option",["match"]]]]],[11,"next","regex","",21,[[["self"]],[["usize"],["option",["usize"]]]]],[11,"size_hint","","",21,[[["self"]]]],[11,"next","","",22,[[["self"]],[["usize"],["option",["usize"]]]]],[11,"size_hint","","",22,[[["self"]]]],[11,"next","regex::bytes","",37,[[["self"]],[["usize"],["option",["usize"]]]]],[11,"size_hint","","",37,[[["self"]]]],[11,"next","","",38,[[["self"]],[["usize"],["option",["usize"]]]]],[11,"size_hint","","",38,[[["self"]]]],[11,"next","regex","",24,[[["self"]],[["option",["option"]],["option",["str"]]]]],[11,"size_hint","","",24,[[["self"]]]],[11,"next","","",27,[[["self"]],[["str"],["option",["str"]]]]],[11,"next","","",28,[[["self"]],[["str"],["option",["str"]]]]],[11,"next","","",29,[[["self"]],[["option",["option"]],["option",["match"]]]]],[11,"next","","",23,[[["self"]],[["captures"],["option",["captures"]]]]],[11,"next","","",25,[[["self"]],[["match"],["option",["match"]]]]],[11,"clone","","",1,[[["self"]],["error"]]],[11,"clone","regex::bytes","",8,[[["self"]],["match"]]],[11,"clone","","",9,[[["self"]],["regex"]]],[11,"clone","","",10,[[["self"]],["capturelocations"]]],[11,"clone","regex","",12,[[["self"]],["regexset"]]],[11,"clone","","",13,[[["self"]],["setmatches"]]],[11,"clone","","",22,[[["self"]],["setmatchesiter"]]],[11,"clone","regex::bytes","",14,[[["self"]],["regexset"]]],[11,"clone","","",15,[[["self"]],["setmatches"]]],[11,"clone","","",38,[[["self"]],["setmatchesiter"]]],[11,"clone","regex","",16,[[["self"]],["match"]]],[11,"clone","","",17,[[["self"]],["regex"]]],[11,"clone","","",18,[[["self"]],["capturelocations"]]],[11,"eq","","",1,[[["self"],["error"]],["bool"]]],[11,"ne","","",1,[[["self"],["error"]],["bool"]]],[11,"eq","regex::bytes","",8,[[["match"],["self"]],["bool"]]],[11,"ne","","",8,[[["match"],["self"]],["bool"]]],[11,"eq","regex","",16,[[["self"],["match"]],["bool"]]],[11,"ne","","",16,[[["self"],["match"]],["bool"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","regex::bytes","",8,[[["formatter"],["self"]],["result"]]],[11,"fmt","","Shows the original regular expression.",9,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",10,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",11,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",36,[[["formatter"],["self"]],["result"]]],[11,"fmt","regex","",13,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",12,[[["formatter"],["self"]],["result"]]],[11,"fmt","regex::bytes","",15,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",14,[[["formatter"],["self"]],["result"]]],[11,"fmt","regex","",16,[[["formatter"],["self"]],["result"]]],[11,"fmt","","Shows the original regular expression.",17,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",18,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",19,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",26,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","regex::bytes","Shows the original regular expression.",9,[[["formatter"],["self"]],["result"]]],[11,"fmt","regex","Shows the original regular expression.",17,[[["formatter"],["self"]],["result"]]],[11,"index","regex::bytes","",11,[[["self"],["usize"]]]],[11,"index","","",11,[[["str"],["self"]]]],[11,"index","regex","",19,[[["self"],["usize"]],["str"]]],[11,"index","","",19,[[["str"],["self"]],["str"]]],[11,"from_str","regex::bytes","Attempts to parse a string into a regular expression",9,[[["str"]],[["regex"],["error"],["result",["regex","error"]]]]],[11,"from_str","regex","Attempts to parse a string into a regular expression",17,[[["str"]],[["regex"],["error"],["result",["regex","error"]]]]],[11,"description","","",1,[[["self"]],["str"]]],[11,"no_expansion","","Return a fixed unchanging replacement string.",20,[[["self"]],[["option",["cow"]],["cow",["str"]]]]],[11,"by_ref","","Return a `Replacer` that borrows and wraps this `Replacer`.",20,[[["self"]],["replacerref"]]]],"p":[[3,"NoExpand"],[4,"Error"],[3,"NoExpand"],[8,"Replacer"],[3,"RegexBuilder"],[3,"RegexBuilder"],[3,"RegexSetBuilder"],[3,"RegexSetBuilder"],[3,"Match"],[3,"Regex"],[3,"CaptureLocations"],[3,"Captures"],[3,"RegexSet"],[3,"SetMatches"],[3,"RegexSet"],[3,"SetMatches"],[3,"Match"],[3,"Regex"],[3,"CaptureLocations"],[3,"Captures"],[8,"Replacer"],[3,"SetMatchesIntoIter"],[3,"SetMatchesIter"],[3,"CaptureMatches"],[3,"CaptureNames"],[3,"Matches"],[3,"ReplacerRef"],[3,"Split"],[3,"SplitN"],[3,"SubCaptureMatches"],[3,"Matches"],[3,"CaptureMatches"],[3,"Split"],[3,"SplitN"],[3,"CaptureNames"],[3,"SubCaptureMatches"],[3,"ReplacerRef"],[3,"SetMatchesIntoIter"],[3,"SetMatchesIter"]]};
searchIndex["regex_syntax"] = {"doc":"This crate provides a robust regular expression parser.","i":[[3,"Parser","regex_syntax","A convenience parser for regular expressions.",null,null],[3,"ParserBuilder","","A builder for a regular expression parser.",null,null],[3,"UnicodeWordError","","An error that occurs when the Unicode-aware `\\w` class is…",null,null],[4,"Error","","This error type encompasses any error that can be returned…",null,null],[13,"Parse","","An error that occurred while translating concrete syntax…",0,null],[13,"Translate","","An error that occurred while translating abstract syntax…",0,null],[5,"escape","","Escapes all regular expression meta characters in `text`.",null,[[["str"]],["string"]]],[5,"escape_into","","Escapes all meta characters in `text` and writes the…",null,[[["str"],["string"]]]],[5,"is_meta_character","","Returns true if the give character has significance in a…",null,[[["char"]],["bool"]]],[5,"is_word_character","","Returns true if and only if the given character is a…",null,[[["char"]],["bool"]]],[5,"try_is_word_character","","Returns true if and only if the given character is a…",null,[[["char"]],[["result",["bool","unicodeworderror"]],["unicodeworderror"],["bool"]]]],[5,"is_word_byte","","Returns true if and only if the given character is an…",null,[[["u8"]],["bool"]]],[0,"ast","","Defines an abstract syntax for regular expressions.",null,null],[3,"Error","regex_syntax::ast","An error that occurred while parsing a regular expression…",null,null],[3,"Span","","Span represents the position information of a single AST…",null,null],[12,"start","","The start byte offset.",1,null],[12,"end","","The end byte offset.",1,null],[3,"Position","","A single position in a regular expression.",null,null],[12,"offset","","The absolute offset of this position, starting at `0` from…",2,null],[12,"line","","The line number, starting at `1`.",2,null],[12,"column","","The approximate column number, starting at `1`.",2,null],[3,"WithComments","","An abstract syntax tree for a singular expression along…",null,null],[12,"ast","","The actual ast.",3,null],[12,"comments","","All comments found in the original regular expression.",3,null],[3,"Comment","","A comment from a regular expression with an associated span.",null,null],[12,"span","","The span of this comment, including the beginning `#` and…",4,null],[12,"comment","","The comment text, starting with the first character…",4,null],[3,"Alternation","","An alternation of regular expressions.",null,null],[12,"span","","The span of this alternation.",5,null],[12,"asts","","The alternate regular expressions.",5,null],[3,"Concat","","A concatenation of regular expressions.",null,null],[12,"span","","The span of this concatenation.",6,null],[12,"asts","","The concatenation regular expressions.",6,null],[3,"Literal","","A single literal expression.",null,null],[12,"span","","The span of this literal.",7,null],[12,"kind","","The kind of this literal.",7,null],[12,"c","","The Unicode scalar value corresponding to this literal.",7,null],[3,"ClassPerl","","A Perl character class.",null,null],[12,"span","","The span of this class.",8,null],[12,"kind","","The kind of Perl class.",8,null],[12,"negated","","Whether the class is negated or not. e.g., `\\d` is not…",8,null],[3,"ClassAscii","","An ASCII character class.",null,null],[12,"span","","The span of this class.",9,null],[12,"kind","","The kind of ASCII class.",9,null],[12,"negated","","Whether the class is negated or not. e.g., `[[:alpha:]]`…",9,null],[3,"ClassUnicode","","A Unicode character class.",null,null],[12,"span","","The span of this class.",10,null],[12,"negated","","Whether this class is negated or not.",10,null],[12,"kind","","The kind of Unicode class.",10,null],[3,"ClassBracketed","","A bracketed character class, e.g., `[a-z0-9]`.",null,null],[12,"span","","The span of this class.",11,null],[12,"negated","","Whether this class is negated or not. e.g., `[a]` is not…",11,null],[12,"kind","","The type of this set. A set is either a normal union of…",11,null],[3,"ClassSetRange","","A single character class range in a set.",null,null],[12,"span","","The span of this range.",12,null],[12,"start","","The start of this range.",12,null],[12,"end","","The end of this range.",12,null],[3,"ClassSetUnion","","A union of items inside a character class set.",null,null],[12,"span","","The span of the items in this operation. e.g., the…",13,null],[12,"items","","The sequence of items that make up this union.",13,null],[3,"ClassSetBinaryOp","","A Unicode character class set operation.",null,null],[12,"span","","The span of this operation. e.g., the `a-z--[h-p]` in…",14,null],[12,"kind","","The type of this set operation.",14,null],[12,"lhs","","The left hand side of the operation.",14,null],[12,"rhs","","The right hand side of the operation.",14,null],[3,"Assertion","","A single zero-width assertion.",null,null],[12,"span","","The span of this assertion.",15,null],[12,"kind","","The assertion kind, e.g., `\\b` or `^`.",15,null],[3,"Repetition","","A repetition operation applied to a regular expression.",null,null],[12,"span","","The span of this operation.",16,null],[12,"op","","The actual operation.",16,null],[12,"greedy","","Whether this operation was applied greedily or not.",16,null],[12,"ast","","The regular expression under repetition.",16,null],[3,"RepetitionOp","","The repetition operator itself.",null,null],[12,"span","","The span of this operator. This includes things like `+`,…",17,null],[12,"kind","","The type of operation.",17,null],[3,"Group","","A grouped regular expression.",null,null],[12,"span","","The span of this group.",18,null],[12,"kind","","The kind of this group.",18,null],[12,"ast","","The regular expression in this group.",18,null],[3,"CaptureName","","A capture name.",null,null],[12,"span","","The span of this capture name.",19,null],[12,"name","","The capture name.",19,null],[12,"index","","The capture index.",19,null],[3,"SetFlags","","A group of flags that is not applied to a particular…",null,null],[12,"span","","The span of these flags, including the grouping parentheses.",20,null],[12,"flags","","The actual sequence of flags.",20,null],[3,"Flags","","A group of flags.",null,null],[12,"span","","The span of this group of flags.",21,null],[12,"items","","A sequence of flag items. Each item is either a flag or a…",21,null],[3,"FlagsItem","","A single item in a group of flags.",null,null],[12,"span","","The span of this item.",22,null],[12,"kind","","The kind of this item.",22,null],[4,"ErrorKind","","The type of an error that occurred while building an AST.",null,null],[13,"CaptureLimitExceeded","","The capturing group limit was exceeded.",23,null],[13,"ClassEscapeInvalid","","An invalid escape sequence was found in a character class…",23,null],[13,"ClassRangeInvalid","","An invalid character class range was found. An invalid…",23,null],[13,"ClassRangeLiteral","","An invalid range boundary was found in a character class.…",23,null],[13,"ClassUnclosed","","An opening `[` was found with no corresponding closing `]`.",23,null],[13,"DecimalEmpty","","Note that this error variant is no longer used. Namely, a…",23,null],[13,"DecimalInvalid","","An invalid decimal number was given where one was expected.",23,null],[13,"EscapeHexEmpty","","A bracketed hex literal was empty.",23,null],[13,"EscapeHexInvalid","","A bracketed hex literal did not correspond to a Unicode…",23,null],[13,"EscapeHexInvalidDigit","","An invalid hexadecimal digit was found.",23,null],[13,"EscapeUnexpectedEof","","EOF was found before an escape sequence was completed.",23,null],[13,"EscapeUnrecognized","","An unrecognized escape sequence.",23,null],[13,"FlagDanglingNegation","","A dangling negation was used when setting flags, e.g., `i-`.",23,null],[13,"FlagDuplicate","","A flag was used twice, e.g., `i-i`.",23,null],[12,"original","regex_syntax::ast::ErrorKind","The position of the original flag. The error position…",24,null],[13,"FlagRepeatedNegation","regex_syntax::ast","The negation operator was used twice, e.g., `-i-s`.",23,null],[12,"original","regex_syntax::ast::ErrorKind","The position of the original negation operator. The error…",25,null],[13,"FlagUnexpectedEof","regex_syntax::ast","Expected a flag but got EOF, e.g., `(?`.",23,null],[13,"FlagUnrecognized","","Unrecognized flag, e.g., `a`.",23,null],[13,"GroupNameDuplicate","","A duplicate capture name was found.",23,null],[12,"original","regex_syntax::ast::ErrorKind","The position of the initial occurrence of the capture…",26,null],[13,"GroupNameEmpty","regex_syntax::ast","A capture group name is empty, e.g., `(?P<>abc)`.",23,null],[13,"GroupNameInvalid","","An invalid character was seen for a capture group name.…",23,null],[13,"GroupNameUnexpectedEof","","A closing `>` could not be found for a capture group name.",23,null],[13,"GroupUnclosed","","An unclosed group, e.g., `(ab`.",23,null],[13,"GroupUnopened","","An unopened group, e.g., `ab)`.",23,null],[13,"NestLimitExceeded","","The nest limit was exceeded. The limit stored here is the…",23,null],[13,"RepetitionCountInvalid","","The range provided in a counted repetition operator is…",23,null],[13,"RepetitionCountDecimalEmpty","","An opening `{` was not followed by a valid decimal value.…",23,null],[13,"RepetitionCountUnclosed","","An opening `{` was found with no corresponding closing `}`.",23,null],[13,"RepetitionMissing","","A repetition operator was applied to a missing…",23,null],[13,"UnicodeClassInvalid","","The Unicode class is not valid. This typically occurs when…",23,null],[13,"UnsupportedBackreference","","When octal support is disabled, this error is produced…",23,null],[13,"UnsupportedLookAround","","When syntax similar to PCRE's look-around is used, this…",23,null],[4,"Ast","","An abstract syntax tree for a single regular expression.",null,null],[13,"Empty","","An empty regex that matches everything.",27,null],[13,"Flags","","A set of flags, e.g., `(?is)`.",27,null],[13,"Literal","","A single character literal, which includes escape sequences.",27,null],[13,"Dot","","The \"any character\" class.",27,null],[13,"Assertion","","A single zero-width assertion.",27,null],[13,"Class","","A single character class. This includes all forms of…",27,null],[13,"Repetition","","A repetition operator applied to an arbitrary regular…",27,null],[13,"Group","","A grouped regular expression.",27,null],[13,"Alternation","","An alternation of regular expressions.",27,null],[13,"Concat","","A concatenation of regular expressions.",27,null],[4,"LiteralKind","","The kind of a single literal expression.",null,null],[13,"Verbatim","","The literal is written verbatim, e.g., `a` or `☃`.",28,null],[13,"Punctuation","","The literal is written as an escape because it is…",28,null],[13,"Octal","","The literal is written as an octal escape, e.g., `\\141`.",28,null],[13,"HexFixed","","The literal is written as a hex code with a fixed number…",28,null],[13,"HexBrace","","The literal is written as a hex code with a bracketed…",28,null],[13,"Special","","The literal is written as a specially recognized escape,…",28,null],[4,"SpecialLiteralKind","","The type of a special literal.",null,null],[13,"Bell","","Bell, spelled `\\a` (`\\x07`).",29,null],[13,"FormFeed","","Form feed, spelled `\\f` (`\\x0C`).",29,null],[13,"Tab","","Tab, spelled `\\t` (`\\x09`).",29,null],[13,"LineFeed","","Line feed, spelled `\\n` (`\\x0A`).",29,null],[13,"CarriageReturn","","Carriage return, spelled `\\r` (`\\x0D`).",29,null],[13,"VerticalTab","","Vertical tab, spelled `\\v` (`\\x0B`).",29,null],[13,"Space","","Space, spelled `\\ ` (`\\x20`). Note that this can only…",29,null],[4,"HexLiteralKind","","The type of a Unicode hex literal.",null,null],[13,"X","","A `\\x` prefix. When used without brackets, this form is…",30,null],[13,"UnicodeShort","","A `\\u` prefix. When used without brackets, this form is…",30,null],[13,"UnicodeLong","","A `\\U` prefix. When used without brackets, this form is…",30,null],[4,"Class","","A single character class expression.",null,null],[13,"Unicode","","A Unicode character class, e.g., `\\pL` or `\\p{Greek}`.",31,null],[13,"Perl","","A perl character class, e.g., `\\d` or `\\W`.",31,null],[13,"Bracketed","","A bracketed character class set, which may contain zero or…",31,null],[4,"ClassPerlKind","","The available Perl character classes.",null,null],[13,"Digit","","Decimal numbers.",32,null],[13,"Space","","Whitespace.",32,null],[13,"Word","","Word characters.",32,null],[4,"ClassAsciiKind","","The available ASCII character classes.",null,null],[13,"Alnum","","`[0-9A-Za-z]`",33,null],[13,"Alpha","","`[A-Za-z]`",33,null],[13,"Ascii","","`[\\x00-\\x7F]`",33,null],[13,"Blank","","`[ \\t]`",33,null],[13,"Cntrl","","`[\\x00-\\x1F\\x7F]`",33,null],[13,"Digit","","`[0-9]`",33,null],[13,"Graph","","`[!-~]`",33,null],[13,"Lower","","`[a-z]`",33,null],[13,"Print","","`[ -~]`",33,null],[13,"Punct","","`[!-/:-@\\[-`{-~]`",33,null],[13,"Space","","`[\\t\\n\\v\\f\\r ]`",33,null],[13,"Upper","","`[A-Z]`",33,null],[13,"Word","","`[0-9A-Za-z_]`",33,null],[13,"Xdigit","","`[0-9A-Fa-f]`",33,null],[4,"ClassUnicodeKind","","The available forms of Unicode character classes.",null,null],[13,"OneLetter","","A one letter abbreviated class, e.g., `\\pN`.",34,null],[13,"Named","","A binary property, general category or script. The string…",34,null],[13,"NamedValue","","A property name and an associated value.",34,null],[12,"op","regex_syntax::ast::ClassUnicodeKind","The type of Unicode op used to associate `name` with…",35,null],[12,"name","","The property name (which may be empty).",35,null],[12,"value","","The property value (which may be empty).",35,null],[4,"ClassUnicodeOpKind","regex_syntax::ast","The type of op used in a Unicode character class.",null,null],[13,"Equal","","A property set to a specific value, e.g.,…",36,null],[13,"Colon","","A property set to a specific value using a colon, e.g.,…",36,null],[13,"NotEqual","","A property that isn't a particular value, e.g.,…",36,null],[4,"ClassSet","","A character class set.",null,null],[13,"Item","","An item, which can be a single literal, range, nested…",37,null],[13,"BinaryOp","","A single binary operation (i.e., &&, -- or ~~).",37,null],[4,"ClassSetItem","","A single component of a character class set.",null,null],[13,"Empty","","An empty item.",38,null],[13,"Literal","","A single literal.",38,null],[13,"Range","","A range between two literals.",38,null],[13,"Ascii","","An ASCII character class, e.g., `[:alnum:]` or `[:punct:]`.",38,null],[13,"Unicode","","A Unicode character class, e.g., `\\pL` or `\\p{Greek}`.",38,null],[13,"Perl","","A perl character class, e.g., `\\d` or `\\W`.",38,null],[13,"Bracketed","","A bracketed character class set, which may contain zero or…",38,null],[13,"Union","","A union of items.",38,null],[4,"ClassSetBinaryOpKind","","The type of a Unicode character class set operation.",null,null],[13,"Intersection","","The intersection of two sets, e.g., `\\pN&&[a-z]`.",39,null],[13,"Difference","","The difference of two sets, e.g., `\\pN--[0-9]`.",39,null],[13,"SymmetricDifference","","The symmetric difference of two sets. The symmetric…",39,null],[4,"AssertionKind","","An assertion kind.",null,null],[13,"StartLine","","`^`",40,null],[13,"EndLine","","`$`",40,null],[13,"StartText","","`\\A`",40,null],[13,"EndText","","`\\z`",40,null],[13,"WordBoundary","","`\\b`",40,null],[13,"NotWordBoundary","","`\\B`",40,null],[4,"RepetitionKind","","The kind of a repetition operator.",null,null],[13,"ZeroOrOne","","`?`",41,null],[13,"ZeroOrMore","","`*`",41,null],[13,"OneOrMore","","`+`",41,null],[13,"Range","","`{m,n}`",41,null],[4,"RepetitionRange","","A range repetition operator.",null,null],[13,"Exactly","","`{m}`",42,null],[13,"AtLeast","","`{m,}`",42,null],[13,"Bounded","","`{m,n}`",42,null],[4,"GroupKind","","The kind of a group.",null,null],[13,"CaptureIndex","","`(a)`",43,null],[13,"CaptureName","","`(?P<name>a)`",43,null],[13,"NonCapturing","","`(?:a)` and `(?i:a)`",43,null],[4,"FlagsItemKind","","The kind of an item in a group of flags.",null,null],[13,"Negation","","A negation operator applied to all subsequent flags in the…",44,null],[13,"Flag","","A single flag in a group.",44,null],[4,"Flag","","A single flag.",null,null],[13,"CaseInsensitive","","`i`",45,null],[13,"MultiLine","","`m`",45,null],[13,"DotMatchesNewLine","","`s`",45,null],[13,"SwapGreed","","`U`",45,null],[13,"Unicode","","`u`",45,null],[13,"IgnoreWhitespace","","`x`",45,null],[5,"visit","","Executes an implementation of `Visitor` in constant stack…",null,[[["ast"],["visitor"]],["result"]]],[0,"parse","","This module provides a regular expression parser.",null,null],[3,"ParserBuilder","regex_syntax::ast::parse","A builder for a regular expression parser.",null,null],[3,"Parser","","A regular expression parser.",null,null],[11,"new","","Create a new parser builder with a default configuration.",46,[[],["parserbuilder"]]],[11,"build","","Build a parser from this configuration with the given…",46,[[["self"]],["parser"]]],[11,"nest_limit","","Set the nesting limit for this parser.",46,[[["self"],["u32"]],["parserbuilder"]]],[11,"octal","","Whether to support octal syntax or not.",46,[[["self"],["bool"]],["parserbuilder"]]],[11,"ignore_whitespace","","Enable verbose mode in the regular expression.",46,[[["self"],["bool"]],["parserbuilder"]]],[11,"new","","Create a new parser with a default configuration.",47,[[],["parser"]]],[11,"parse","","Parse the regular expression into an abstract syntax tree.",47,[[["str"],["self"]],[["result",["ast","error"]],["ast"],["error"]]]],[11,"parse_with_comments","","Parse the regular expression and return an abstract syntax…",47,[[["str"],["self"]],[["result",["withcomments","error"]],["withcomments"],["error"]]]],[0,"print","regex_syntax::ast","This module provides a regular expression printer for `Ast`.",null,null],[3,"Printer","regex_syntax::ast::print","A printer for a regular expression abstract syntax tree.",null,null],[11,"new","","Create a new printer.",48,[[],["printer"]]],[11,"print","","Print the given `Ast` to the given writer. The writer must…",48,[[["ast"],["self"],["write"]],["result"]]],[8,"Visitor","regex_syntax::ast","A trait for visiting an abstract syntax tree (AST) in…",null,null],[16,"Output","","The result of visiting an AST.",49,null],[16,"Err","","An error that visiting an AST might return.",49,null],[10,"finish","","All implementors of `Visitor` must provide a `finish`…",49,[[],["result"]]],[11,"start","","This method is called before beginning traversal of the AST.",49,[[["self"]]]],[11,"visit_pre","","This method is called on an `Ast` before descending into…",49,[[["ast"],["self"]],["result"]]],[11,"visit_post","","This method is called on an `Ast` after descending all of…",49,[[["ast"],["self"]],["result"]]],[11,"visit_alternation_in","","This method is called between child nodes of an…",49,[[["self"]],["result"]]],[11,"visit_class_set_item_pre","","This method is called on every `ClassSetItem` before…",49,[[["classsetitem"],["self"]],["result"]]],[11,"visit_class_set_item_post","","This method is called on every `ClassSetItem` after…",49,[[["classsetitem"],["self"]],["result"]]],[11,"visit_class_set_binary_op_pre","","This method is called on every `ClassSetBinaryOp` before…",49,[[["self"],["classsetbinaryop"]],["result"]]],[11,"visit_class_set_binary_op_post","","This method is called on every `ClassSetBinaryOp` after…",49,[[["self"],["classsetbinaryop"]],["result"]]],[11,"visit_class_set_binary_op_in","","This method is called between the left hand and right hand…",49,[[["self"],["classsetbinaryop"]],["result"]]],[11,"kind","","Return the type of this error.",50,[[["self"]],["errorkind"]]],[11,"pattern","","The original pattern string in which this error occurred.",50,[[["self"]],["str"]]],[11,"span","","Return the span at which this error occurred.",50,[[["self"]],["span"]]],[11,"auxiliary_span","","Return an auxiliary span. This span exists only for some…",50,[[["self"]],[["option",["span"]],["span"]]]],[11,"new","","Create a new span with the given positions.",1,[[["position"]],["span"]]],[11,"splat","","Create a new span using the given position as the start…",1,[[["position"]],["span"]]],[11,"with_start","","Create a new span by replacing the starting the position…",1,[[["position"]],["span"]]],[11,"with_end","","Create a new span by replacing the ending the position…",1,[[["position"]],["span"]]],[11,"is_one_line","","Returns true if and only if this span occurs on a single…",1,[[["self"]],["bool"]]],[11,"is_empty","","Returns true if and only if this span is empty. That is,…",1,[[["self"]],["bool"]]],[11,"new","","Create a new position with the given information.",2,[[["usize"]],["position"]]],[11,"span","","Return the span of this abstract syntax tree.",27,[[["self"]],["span"]]],[11,"is_empty","","Return true if and only if this Ast is empty.",27,[[["self"]],["bool"]]],[11,"into_ast","","Return this alternation as an AST.",5,[[],["ast"]]],[11,"into_ast","","Return this concatenation as an AST.",6,[[],["ast"]]],[11,"byte","","If this literal was written as a `\\x` hex escape, then…",7,[[["self"]],[["option",["u8"]],["u8"]]]],[11,"digits","","The number of digits that must be used with this literal…",30,[[["self"]],["u32"]]],[11,"span","","Return the span of this character class.",31,[[["self"]],["span"]]],[11,"from_name","","Return the corresponding ClassAsciiKind variant for the…",33,[[["str"]],[["option",["classasciikind"]],["classasciikind"]]]],[11,"is_negated","","Returns true if this class has been negated.",10,[[["self"]],["bool"]]],[11,"is_equal","","Whether the op is an equality op or not.",36,[[["self"]],["bool"]]],[11,"union","","Build a set from a union.",37,[[["classsetunion"]],["classset"]]],[11,"span","","Return the span of this character class set.",37,[[["self"]],["span"]]],[11,"span","","Return the span of this character class set item.",38,[[["self"]],["span"]]],[11,"is_valid","","Returns true if and only if this character class range is…",12,[[["self"]],["bool"]]],[11,"push","","Push a new item in this union.",13,[[["self"],["classsetitem"]]]],[11,"into_item","","Return this union as a character class set item.",13,[[],["classsetitem"]]],[11,"is_valid","","Returns true if and only if this repetition range is valid.",42,[[["self"]],["bool"]]],[11,"flags","","If this group is non-capturing, then this returns the…",18,[[["self"]],[["option",["flags"]],["flags"]]]],[11,"is_capturing","","Returns true if and only if this group is capturing.",18,[[["self"]],["bool"]]],[11,"capture_index","","Returns the capture index of this group, if this is a…",18,[[["self"]],[["u32"],["option",["u32"]]]]],[11,"add_item","","Add the given item to this sequence of flags.",21,[[["self"],["flagsitem"]],[["usize"],["option",["usize"]]]]],[11,"flag_state","","Returns the state of the given flag in this set.",21,[[["self"],["flag"]],[["bool"],["option",["bool"]]]]],[11,"is_negation","","Returns true if and only if this item is a negation…",44,[[["self"]],["bool"]]],[0,"hir","regex_syntax","Defines a high-level intermediate representation for…",null,null],[3,"CaseFoldError","regex_syntax::hir","An error that occurs when Unicode-aware simple case…",null,null],[3,"Error","","An error that can occur while translating an `Ast` to a…",null,null],[3,"Hir","","A high-level intermediate representation (HIR) for a…",null,null],[3,"ClassUnicode","","A set of characters represented by Unicode scalar values.",null,null],[3,"ClassUnicodeIter","","An iterator over all ranges in a Unicode character class.",null,null],[3,"ClassUnicodeRange","","A single range of characters represented by Unicode scalar…",null,null],[3,"ClassBytes","","A set of characters represented by arbitrary bytes (where…",null,null],[3,"ClassBytesIter","","An iterator over all ranges in a byte character class.",null,null],[3,"ClassBytesRange","","A single range of characters represented by arbitrary bytes.",null,null],[3,"Group","","The high-level intermediate representation for a group.",null,null],[12,"kind","","The kind of this group. If it is a capturing group, then…",51,null],[12,"hir","","The expression inside the capturing group, which may be…",51,null],[3,"Repetition","","The high-level intermediate representation of a repetition…",null,null],[12,"kind","","The kind of this repetition operator.",52,null],[12,"greedy","","Whether this repetition operator is greedy or not. A…",52,null],[12,"hir","","The expression being repeated.",52,null],[4,"ErrorKind","","The type of an error that occurred while building an `Hir`.",null,null],[13,"UnicodeNotAllowed","","This error occurs when a Unicode feature is used when…",53,null],[13,"InvalidUtf8","","This error occurs when translating a pattern that could…",53,null],[13,"UnicodePropertyNotFound","","This occurs when an unrecognized Unicode property name…",53,null],[13,"UnicodePropertyValueNotFound","","This occurs when an unrecognized Unicode property value…",53,null],[13,"UnicodePerlClassNotFound","","This occurs when a Unicode-aware Perl character class…",53,null],[13,"UnicodeCaseUnavailable","","This occurs when the Unicode simple case mapping tables…",53,null],[13,"EmptyClassNotAllowed","","This occurs when the translator attempts to construct a…",53,null],[4,"HirKind","","The kind of an arbitrary `Hir` expression.",null,null],[13,"Empty","","The empty regular expression, which matches everything,…",54,null],[13,"Literal","","A single literal character that matches exactly this…",54,null],[13,"Class","","A single character class that matches any of the…",54,null],[13,"Anchor","","An anchor assertion. An anchor assertion match always has…",54,null],[13,"WordBoundary","","A word boundary assertion, which may or may not be Unicode…",54,null],[13,"Repetition","","A repetition operation applied to a child expression.",54,null],[13,"Group","","A possibly capturing group, which contains a child…",54,null],[13,"Concat","","A concatenation of expressions. A concatenation always has…",54,null],[13,"Alternation","","An alternation of expressions. An alternation always has…",54,null],[4,"Literal","","The high-level intermediate representation of a literal.",null,null],[13,"Unicode","","A single character represented by a Unicode scalar value.",55,null],[13,"Byte","","A single character represented by an arbitrary byte.",55,null],[4,"Class","","The high-level intermediate representation of a character…",null,null],[13,"Unicode","","A set of characters represented by Unicode scalar values.",56,null],[13,"Bytes","","A set of characters represented by arbitrary bytes (one…",56,null],[4,"Anchor","","The high-level intermediate representation for an anchor…",null,null],[13,"StartLine","","Match the beginning of a line or the beginning of text.…",57,null],[13,"EndLine","","Match the end of a line or the end of text. Specifically,…",57,null],[13,"StartText","","Match the beginning of text. Specifically, this matches at…",57,null],[13,"EndText","","Match the end of text. Specifically, this matches at the…",57,null],[4,"WordBoundary","","The high-level intermediate representation for a…",null,null],[13,"Unicode","","Match a Unicode-aware word boundary. That is, this matches…",58,null],[13,"UnicodeNegate","","Match a Unicode-aware negation of a word boundary.",58,null],[13,"Ascii","","Match an ASCII-only word boundary. That is, this matches a…",58,null],[13,"AsciiNegate","","Match an ASCII-only negation of a word boundary.",58,null],[4,"GroupKind","","The kind of group.",null,null],[13,"CaptureIndex","","A normal unnamed capturing group.",59,null],[13,"CaptureName","","A named capturing group.",59,null],[12,"name","regex_syntax::hir::GroupKind","The name of the group.",60,null],[12,"index","","The capture index of the group.",60,null],[13,"NonCapturing","regex_syntax::hir","A non-capturing group.",59,null],[4,"RepetitionKind","","The kind of a repetition operator.",null,null],[13,"ZeroOrOne","","Matches a sub-expression zero or one times.",61,null],[13,"ZeroOrMore","","Matches a sub-expression zero or more times.",61,null],[13,"OneOrMore","","Matches a sub-expression one or more times.",61,null],[13,"Range","","Matches a sub-expression within a bounded range of times.",61,null],[4,"RepetitionRange","","The kind of a counted repetition operator.",null,null],[13,"Exactly","","Matches a sub-expression exactly this many times.",62,null],[13,"AtLeast","","Matches a sub-expression at least this many times.",62,null],[13,"Bounded","","Matches a sub-expression at least `m` times and at most…",62,null],[5,"visit","","Executes an implementation of `Visitor` in constant stack…",null,[[["hir"],["visitor"]],["result"]]],[0,"literal","","Provides routines for extracting literal prefixes and…",null,null],[3,"Literals","regex_syntax::hir::literal","A set of literal byte strings extracted from a regular…",null,null],[3,"Literal","","A single member of a set of literals extracted from a…",null,null],[11,"empty","","Returns a new empty set of literals using default limits.",63,[[],["literals"]]],[11,"prefixes","","Returns a set of literal prefixes extracted from the given…",63,[[["hir"]],["literals"]]],[11,"suffixes","","Returns a set of literal suffixes extracted from the given…",63,[[["hir"]],["literals"]]],[11,"limit_size","","Get the approximate size limit (in bytes) of this set.",63,[[["self"]],["usize"]]],[11,"set_limit_size","","Set the approximate size limit (in bytes) of this set.",63,[[["self"],["usize"]],["literals"]]],[11,"limit_class","","Get the character class size limit for this set.",63,[[["self"]],["usize"]]],[11,"set_limit_class","","Limits the size of character(or byte) classes considered.",63,[[["self"],["usize"]],["literals"]]],[11,"literals","","Returns the set of literals as a slice. Its order is…",63,[[["self"]]]],[11,"min_len","","Returns the length of the smallest literal.",63,[[["self"]],[["usize"],["option",["usize"]]]]],[11,"all_complete","","Returns true if all members in this set are complete.",63,[[["self"]],["bool"]]],[11,"any_complete","","Returns true if any member in this set is complete.",63,[[["self"]],["bool"]]],[11,"contains_empty","","Returns true if this set contains an empty literal.",63,[[["self"]],["bool"]]],[11,"is_empty","","Returns true if this set is empty or if all of its members…",63,[[["self"]],["bool"]]],[11,"to_empty","","Returns a new empty set of literals using this set's limits.",63,[[["self"]],["literals"]]],[11,"longest_common_prefix","","Returns the longest common prefix of all members in this…",63,[[["self"]]]],[11,"longest_common_suffix","","Returns the longest common suffix of all members in this…",63,[[["self"]]]],[11,"trim_suffix","","Returns a new set of literals with the given number of…",63,[[["self"],["usize"]],[["option",["literals"]],["literals"]]]],[11,"unambiguous_prefixes","","Returns a new set of prefixes of this set of literals that…",63,[[["self"]],["literals"]]],[11,"unambiguous_suffixes","","Returns a new set of suffixes of this set of literals that…",63,[[["self"]],["literals"]]],[11,"union_prefixes","","Unions the prefixes from the given expression to this set.",63,[[["hir"],["self"]],["bool"]]],[11,"union_suffixes","","Unions the suffixes from the given expression to this set.",63,[[["hir"],["self"]],["bool"]]],[11,"union","","Unions this set with another set.",63,[[["self"],["literals"]],["bool"]]],[11,"cross_product","","Extends this set with another set.",63,[[["self"],["literals"]],["bool"]]],[11,"cross_add","","Extends each literal in this set with the bytes given.",63,[[["self"]],["bool"]]],[11,"add","","Adds the given literal to this set.",63,[[["literal"],["self"]],["bool"]]],[11,"add_char_class","","Extends each literal in this set with the character class…",63,[[["self"],["classunicode"]],["bool"]]],[11,"add_byte_class","","Extends each literal in this set with the byte class given.",63,[[["classbytes"],["self"]],["bool"]]],[11,"cut","","Cuts every member of this set. When a member is cut, it…",63,[[["self"]]]],[11,"reverse","","Reverses all members in place.",63,[[["self"]]]],[11,"clear","","Clears this set of all members.",63,[[["self"]]]],[11,"new","","Returns a new complete literal with the bytes given.",64,[[["vec",["u8"]],["u8"]],["literal"]]],[11,"empty","","Returns a new complete empty literal.",64,[[],["literal"]]],[11,"is_cut","","Returns true if this literal was \"cut.\"",64,[[["self"]],["bool"]]],[11,"cut","","Cuts this literal.",64,[[["self"]]]],[0,"print","regex_syntax::hir","This module provides a regular expression printer for `Hir`.",null,null],[3,"Printer","regex_syntax::hir::print","A printer for a regular expression's high-level…",null,null],[11,"new","","Create a new printer.",65,[[],["printer"]]],[11,"print","","Print the given `Ast` to the given writer. The writer must…",65,[[["hir"],["self"],["write"]],["result"]]],[0,"translate","regex_syntax::hir","Defines a translator that converts an `Ast` to an `Hir`.",null,null],[3,"TranslatorBuilder","regex_syntax::hir::translate","A builder for constructing an AST->HIR translator.",null,null],[3,"Translator","","A translator maps abstract syntax to a high level…",null,null],[11,"new","","Create a new translator builder with a default c…",66,[[],["translatorbuilder"]]],[11,"build","","Build a translator using the current configuration.",66,[[["self"]],["translator"]]],[11,"allow_invalid_utf8","","When enabled, translation will permit the construction of…",66,[[["self"],["bool"]],["translatorbuilder"]]],[11,"case_insensitive","","Enable or disable the case insensitive flag (`i`) by…",66,[[["self"],["bool"]],["translatorbuilder"]]],[11,"multi_line","","Enable or disable the multi-line matching flag (`m`) by…",66,[[["self"],["bool"]],["translatorbuilder"]]],[11,"dot_matches_new_line","","Enable or disable the \"dot matches any character\" flag…",66,[[["self"],["bool"]],["translatorbuilder"]]],[11,"swap_greed","","Enable or disable the \"swap greed\" flag (`U`) by default.",66,[[["self"],["bool"]],["translatorbuilder"]]],[11,"unicode","","Enable or disable the Unicode flag (`u`) by default.",66,[[["self"],["bool"]],["translatorbuilder"]]],[11,"new","","Create a new translator using the default configuration.",67,[[],["translator"]]],[11,"translate","","Translate the given abstract syntax tree (AST) into a high…",67,[[["str"],["self"],["ast"]],[["result",["hir","error"]],["hir"],["error"]]]],[8,"Visitor","regex_syntax::hir","A trait for visiting the high-level IR (HIR) in depth…",null,null],[16,"Output","","The result of visiting an HIR.",68,null],[16,"Err","","An error that visiting an HIR might return.",68,null],[10,"finish","","All implementors of `Visitor` must provide a `finish`…",68,[[],["result"]]],[11,"start","","This method is called before beginning traversal of the HIR.",68,[[["self"]]]],[11,"visit_pre","","This method is called on an `Hir` before descending into…",68,[[["hir"],["self"]],["result"]]],[11,"visit_post","","This method is called on an `Hir` after descending all of…",68,[[["hir"],["self"]],["result"]]],[11,"visit_alternation_in","","This method is called between child nodes of an alternation.",68,[[["self"]],["result"]]],[11,"kind","","Return the type of this error.",69,[[["self"]],["errorkind"]]],[11,"pattern","","The original pattern string in which this error occurred.",69,[[["self"]],["str"]]],[11,"span","","Return the span at which this error occurred.",69,[[["self"]],["span"]]],[11,"kind","","Returns a reference to the underlying HIR kind.",70,[[["self"]],["hirkind"]]],[11,"into_kind","","Consumes ownership of this HIR expression and returns its…",70,[[],["hirkind"]]],[11,"empty","","Returns an empty HIR expression.",70,[[],["hir"]]],[11,"literal","","Creates a literal HIR expression.",70,[[["literal"]],["hir"]]],[11,"class","","Creates a class HIR expression.",70,[[["class"]],["hir"]]],[11,"anchor","","Creates an anchor assertion HIR expression.",70,[[["anchor"]],["hir"]]],[11,"word_boundary","","Creates a word boundary assertion HIR expression.",70,[[["wordboundary"]],["hir"]]],[11,"repetition","","Creates a repetition HIR expression.",70,[[["repetition"]],["hir"]]],[11,"group","","Creates a group HIR expression.",70,[[["group"]],["hir"]]],[11,"concat","","Returns the concatenation of the given expressions.",70,[[["vec",["hir"]],["hir"]],["hir"]]],[11,"alternation","","Returns the alternation of the given expressions.",70,[[["vec",["hir"]],["hir"]],["hir"]]],[11,"dot","","Build an HIR expression for `.`.",70,[[["bool"]],["hir"]]],[11,"any","","Build an HIR expression for `(?s).`.",70,[[["bool"]],["hir"]]],[11,"is_always_utf8","","Return true if and only if this HIR will always match…",70,[[["self"]],["bool"]]],[11,"is_all_assertions","","Returns true if and only if this entire HIR expression is…",70,[[["self"]],["bool"]]],[11,"is_anchored_start","","Return true if and only if this HIR is required to match…",70,[[["self"]],["bool"]]],[11,"is_anchored_end","","Return true if and only if this HIR is required to match…",70,[[["self"]],["bool"]]],[11,"is_line_anchored_start","","Return true if and only if this HIR is required to match…",70,[[["self"]],["bool"]]],[11,"is_line_anchored_end","","Return true if and only if this HIR is required to match…",70,[[["self"]],["bool"]]],[11,"is_any_anchored_start","","Return true if and only if this HIR contains any…",70,[[["self"]],["bool"]]],[11,"is_any_anchored_end","","Return true if and only if this HIR contains any…",70,[[["self"]],["bool"]]],[11,"is_match_empty","","Return true if and only if the empty string is part of the…",70,[[["self"]],["bool"]]],[11,"is_literal","","Return true if and only if this HIR is a simple literal.…",70,[[["self"]],["bool"]]],[11,"is_alternation_literal","","Return true if and only if this HIR is either a simple…",70,[[["self"]],["bool"]]],[11,"is_empty","","Return true if and only if this HIR is the empty regular…",54,[[["self"]],["bool"]]],[11,"has_subexprs","","Returns true if and only if this kind has any (including…",54,[[["self"]],["bool"]]],[11,"is_unicode","","Returns true if and only if this literal corresponds to a…",55,[[["self"]],["bool"]]],[11,"case_fold_simple","","Apply Unicode simple case folding to this character class,…",56,[[["self"]]]],[11,"negate","","Negate this character class in place.",56,[[["self"]]]],[11,"is_always_utf8","","Returns true if and only if this character class will only…",56,[[["self"]],["bool"]]],[11,"new","","Create a new class from a sequence of ranges.",71,[[["i"]],["classunicode"]]],[11,"empty","","Create a new class with no ranges.",71,[[],["classunicode"]]],[11,"push","","Add a new range to this set.",71,[[["self"],["classunicoderange"]]]],[11,"iter","","Return an iterator over all ranges in this class.",71,[[["self"]],["classunicodeiter"]]],[11,"ranges","","Return the underlying ranges as a slice.",71,[[["self"]]]],[11,"case_fold_simple","","Expand this character class such that it contains all case…",71,[[["self"]]]],[11,"try_case_fold_simple","","Expand this character class such that it contains all case…",71,[[["self"]],[["result",["casefolderror"]],["casefolderror"]]]],[11,"negate","","Negate this character class.",71,[[["self"]]]],[11,"union","","Union this character class with the given character class,…",71,[[["self"],["classunicode"]]]],[11,"intersect","","Intersect this character class with the given character…",71,[[["self"],["classunicode"]]]],[11,"difference","","Subtract the given character class from this character…",71,[[["self"],["classunicode"]]]],[11,"symmetric_difference","","Compute the symmetric difference of the given character…",71,[[["self"],["classunicode"]]]],[11,"is_all_ascii","","Returns true if and only if this character class will…",71,[[["self"]],["bool"]]],[11,"new","","Create a new Unicode scalar value range for a character…",72,[[["char"]],["classunicoderange"]]],[11,"start","","Return the start of this range.",72,[[["self"]],["char"]]],[11,"end","","Return the end of this range.",72,[[["self"]],["char"]]],[11,"new","","Create a new class from a sequence of ranges.",73,[[["i"]],["classbytes"]]],[11,"empty","","Create a new class with no ranges.",73,[[],["classbytes"]]],[11,"push","","Add a new range to this set.",73,[[["self"],["classbytesrange"]]]],[11,"iter","","Return an iterator over all ranges in this class.",73,[[["self"]],["classbytesiter"]]],[11,"ranges","","Return the underlying ranges as a slice.",73,[[["self"]]]],[11,"case_fold_simple","","Expand this character class such that it contains all case…",73,[[["self"]]]],[11,"negate","","Negate this byte class.",73,[[["self"]]]],[11,"union","","Union this byte class with the given byte class, in place.",73,[[["self"],["classbytes"]]]],[11,"intersect","","Intersect this byte class with the given byte class, in…",73,[[["self"],["classbytes"]]]],[11,"difference","","Subtract the given byte class from this byte class, in…",73,[[["self"],["classbytes"]]]],[11,"symmetric_difference","","Compute the symmetric difference of the given byte…",73,[[["self"],["classbytes"]]]],[11,"is_all_ascii","","Returns true if and only if this character class will…",73,[[["self"]],["bool"]]],[11,"new","","Create a new byte range for a character class.",74,[[["u8"]],["classbytesrange"]]],[11,"start","","Return the start of this range.",74,[[["self"]],["u8"]]],[11,"end","","Return the end of this range.",74,[[["self"]],["u8"]]],[11,"is_negated","","Returns true if and only if this word boundary assertion…",58,[[["self"]],["bool"]]],[11,"is_match_empty","","Returns true if and only if this repetition operator makes…",52,[[["self"]],["bool"]]],[11,"new","regex_syntax","Create a new parser builder with a default configuration.",75,[[],["parserbuilder"]]],[11,"build","","Build a parser from this configuration with the given…",75,[[["self"]],["parser"]]],[11,"nest_limit","","Set the nesting limit for this parser.",75,[[["self"],["u32"]],["parserbuilder"]]],[11,"octal","","Whether to support octal syntax or not.",75,[[["self"],["bool"]],["parserbuilder"]]],[11,"allow_invalid_utf8","","When enabled, the parser will permit the construction of a…",75,[[["self"],["bool"]],["parserbuilder"]]],[11,"ignore_whitespace","","Enable verbose mode in the regular expression.",75,[[["self"],["bool"]],["parserbuilder"]]],[11,"case_insensitive","","Enable or disable the case insensitive flag by default.",75,[[["self"],["bool"]],["parserbuilder"]]],[11,"multi_line","","Enable or disable the multi-line matching flag by default.",75,[[["self"],["bool"]],["parserbuilder"]]],[11,"dot_matches_new_line","","Enable or disable the \"dot matches any character\" flag by…",75,[[["self"],["bool"]],["parserbuilder"]]],[11,"swap_greed","","Enable or disable the \"swap greed\" flag by default.",75,[[["self"],["bool"]],["parserbuilder"]]],[11,"unicode","","Enable or disable the Unicode flag (`u`) by default.",75,[[["self"],["bool"]],["parserbuilder"]]],[11,"new","","Create a new parser with a default configuration.",76,[[],["parser"]]],[11,"parse","","Parse the regular expression into a high level…",76,[[["str"],["self"]],[["result",["hir"]],["hir"]]]],[0,"utf8","","Converts ranges of Unicode scalar values to equivalent…",null,null],[3,"Utf8Range","regex_syntax::utf8","A single inclusive range of UTF-8 bytes.",null,null],[12,"start","","Start of byte range (inclusive).",77,null],[12,"end","","End of byte range (inclusive).",77,null],[3,"Utf8Sequences","","An iterator over ranges of matching UTF-8 byte sequences.",null,null],[4,"Utf8Sequence","","Utf8Sequence represents a sequence of byte ranges.",null,null],[13,"One","","One byte range.",78,null],[13,"Two","","Two successive byte ranges.",78,null],[13,"Three","","Three successive byte ranges.",78,null],[13,"Four","","Four successive byte ranges.",78,null],[11,"as_slice","","Returns the underlying sequence of byte ranges as a slice.",78,[[["self"]]]],[11,"len","","Returns the number of byte ranges in this sequence.",78,[[["self"]],["usize"]]],[11,"reverse","","Reverses the ranges in this sequence.",78,[[["self"]]]],[11,"matches","","Returns true if and only if a prefix of `bytes` matches…",78,[[["self"]],["bool"]]],[11,"matches","","Returns true if and only if the given byte is in this range.",77,[[["self"],["u8"]],["bool"]]],[11,"new","","Create a new iterator over UTF-8 byte ranges for the…",79,[[["char"]],["self"]]],[6,"Result","regex_syntax","A type alias for dealing with errors returned by this crate.",null,null],[11,"from","","",76,[[["t"]],["t"]]],[11,"into","","",76,[[],["u"]]],[11,"to_owned","","",76,[[["self"]],["t"]]],[11,"clone_into","","",76,[[["self"],["t"]]]],[11,"try_from","","",76,[[["u"]],["result"]]],[11,"try_into","","",76,[[],["result"]]],[11,"borrow","","",76,[[["self"]],["t"]]],[11,"borrow_mut","","",76,[[["self"]],["t"]]],[11,"type_id","","",76,[[["self"]],["typeid"]]],[11,"from","","",75,[[["t"]],["t"]]],[11,"into","","",75,[[],["u"]]],[11,"to_owned","","",75,[[["self"]],["t"]]],[11,"clone_into","","",75,[[["self"],["t"]]]],[11,"try_from","","",75,[[["u"]],["result"]]],[11,"try_into","","",75,[[],["result"]]],[11,"borrow","","",75,[[["self"]],["t"]]],[11,"borrow_mut","","",75,[[["self"]],["t"]]],[11,"type_id","","",75,[[["self"]],["typeid"]]],[11,"from","","",80,[[["t"]],["t"]]],[11,"into","","",80,[[],["u"]]],[11,"to_string","","",80,[[["self"]],["string"]]],[11,"try_from","","",80,[[["u"]],["result"]]],[11,"try_into","","",80,[[],["result"]]],[11,"borrow","","",80,[[["self"]],["t"]]],[11,"borrow_mut","","",80,[[["self"]],["t"]]],[11,"type_id","","",80,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","regex_syntax::ast","",50,[[["t"]],["t"]]],[11,"into","","",50,[[],["u"]]],[11,"to_owned","","",50,[[["self"]],["t"]]],[11,"clone_into","","",50,[[["self"],["t"]]]],[11,"to_string","","",50,[[["self"]],["string"]]],[11,"try_from","","",50,[[["u"]],["result"]]],[11,"try_into","","",50,[[],["result"]]],[11,"borrow","","",50,[[["self"]],["t"]]],[11,"borrow_mut","","",50,[[["self"]],["t"]]],[11,"type_id","","",50,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,[[["self"],["t"]]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,[[["self"],["t"]]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,[[["self"],["t"]]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,[[["self"],["t"]]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,[[["self"],["t"]]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[],["u"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,[[["self"],["t"]]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[],["u"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,[[["self"],["t"]]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[],["u"]]],[11,"to_owned","","",11,[[["self"]],["t"]]],[11,"clone_into","","",11,[[["self"],["t"]]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"try_into","","",11,[[],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"type_id","","",11,[[["self"]],["typeid"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[],["u"]]],[11,"to_owned","","",12,[[["self"]],["t"]]],[11,"clone_into","","",12,[[["self"],["t"]]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"try_into","","",12,[[],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"type_id","","",12,[[["self"]],["typeid"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"into","","",13,[[],["u"]]],[11,"to_owned","","",13,[[["self"]],["t"]]],[11,"clone_into","","",13,[[["self"],["t"]]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"try_into","","",13,[[],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"type_id","","",13,[[["self"]],["typeid"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"into","","",14,[[],["u"]]],[11,"to_owned","","",14,[[["self"]],["t"]]],[11,"clone_into","","",14,[[["self"],["t"]]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"try_into","","",14,[[],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"type_id","","",14,[[["self"]],["typeid"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"into","","",15,[[],["u"]]],[11,"to_owned","","",15,[[["self"]],["t"]]],[11,"clone_into","","",15,[[["self"],["t"]]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"try_into","","",15,[[],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"type_id","","",15,[[["self"]],["typeid"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"into","","",16,[[],["u"]]],[11,"to_owned","","",16,[[["self"]],["t"]]],[11,"clone_into","","",16,[[["self"],["t"]]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"try_into","","",16,[[],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"type_id","","",16,[[["self"]],["typeid"]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"into","","",17,[[],["u"]]],[11,"to_owned","","",17,[[["self"]],["t"]]],[11,"clone_into","","",17,[[["self"],["t"]]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"try_into","","",17,[[],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"type_id","","",17,[[["self"]],["typeid"]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"into","","",18,[[],["u"]]],[11,"to_owned","","",18,[[["self"]],["t"]]],[11,"clone_into","","",18,[[["self"],["t"]]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"try_into","","",18,[[],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"type_id","","",18,[[["self"]],["typeid"]]],[11,"from","","",19,[[["t"]],["t"]]],[11,"into","","",19,[[],["u"]]],[11,"to_owned","","",19,[[["self"]],["t"]]],[11,"clone_into","","",19,[[["self"],["t"]]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"try_into","","",19,[[],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"type_id","","",19,[[["self"]],["typeid"]]],[11,"from","","",20,[[["t"]],["t"]]],[11,"into","","",20,[[],["u"]]],[11,"to_owned","","",20,[[["self"]],["t"]]],[11,"clone_into","","",20,[[["self"],["t"]]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"try_into","","",20,[[],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"type_id","","",20,[[["self"]],["typeid"]]],[11,"from","","",21,[[["t"]],["t"]]],[11,"into","","",21,[[],["u"]]],[11,"to_owned","","",21,[[["self"]],["t"]]],[11,"clone_into","","",21,[[["self"],["t"]]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"try_into","","",21,[[],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"type_id","","",21,[[["self"]],["typeid"]]],[11,"from","","",22,[[["t"]],["t"]]],[11,"into","","",22,[[],["u"]]],[11,"to_owned","","",22,[[["self"]],["t"]]],[11,"clone_into","","",22,[[["self"],["t"]]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"try_into","","",22,[[],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"type_id","","",22,[[["self"]],["typeid"]]],[11,"from","","",23,[[["t"]],["t"]]],[11,"into","","",23,[[],["u"]]],[11,"to_owned","","",23,[[["self"]],["t"]]],[11,"clone_into","","",23,[[["self"],["t"]]]],[11,"to_string","","",23,[[["self"]],["string"]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"try_into","","",23,[[],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"type_id","","",23,[[["self"]],["typeid"]]],[11,"from","","",27,[[["t"]],["t"]]],[11,"into","","",27,[[],["u"]]],[11,"to_owned","","",27,[[["self"]],["t"]]],[11,"clone_into","","",27,[[["self"],["t"]]]],[11,"to_string","","",27,[[["self"]],["string"]]],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"try_into","","",27,[[],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"type_id","","",27,[[["self"]],["typeid"]]],[11,"from","","",28,[[["t"]],["t"]]],[11,"into","","",28,[[],["u"]]],[11,"to_owned","","",28,[[["self"]],["t"]]],[11,"clone_into","","",28,[[["self"],["t"]]]],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"try_into","","",28,[[],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"type_id","","",28,[[["self"]],["typeid"]]],[11,"from","","",29,[[["t"]],["t"]]],[11,"into","","",29,[[],["u"]]],[11,"to_owned","","",29,[[["self"]],["t"]]],[11,"clone_into","","",29,[[["self"],["t"]]]],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"try_into","","",29,[[],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"type_id","","",29,[[["self"]],["typeid"]]],[11,"from","","",30,[[["t"]],["t"]]],[11,"into","","",30,[[],["u"]]],[11,"to_owned","","",30,[[["self"]],["t"]]],[11,"clone_into","","",30,[[["self"],["t"]]]],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"try_into","","",30,[[],["result"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"type_id","","",30,[[["self"]],["typeid"]]],[11,"from","","",31,[[["t"]],["t"]]],[11,"into","","",31,[[],["u"]]],[11,"to_owned","","",31,[[["self"]],["t"]]],[11,"clone_into","","",31,[[["self"],["t"]]]],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"try_into","","",31,[[],["result"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"type_id","","",31,[[["self"]],["typeid"]]],[11,"from","","",32,[[["t"]],["t"]]],[11,"into","","",32,[[],["u"]]],[11,"to_owned","","",32,[[["self"]],["t"]]],[11,"clone_into","","",32,[[["self"],["t"]]]],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"try_into","","",32,[[],["result"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"type_id","","",32,[[["self"]],["typeid"]]],[11,"from","","",33,[[["t"]],["t"]]],[11,"into","","",33,[[],["u"]]],[11,"to_owned","","",33,[[["self"]],["t"]]],[11,"clone_into","","",33,[[["self"],["t"]]]],[11,"try_from","","",33,[[["u"]],["result"]]],[11,"try_into","","",33,[[],["result"]]],[11,"borrow","","",33,[[["self"]],["t"]]],[11,"borrow_mut","","",33,[[["self"]],["t"]]],[11,"type_id","","",33,[[["self"]],["typeid"]]],[11,"from","","",34,[[["t"]],["t"]]],[11,"into","","",34,[[],["u"]]],[11,"to_owned","","",34,[[["self"]],["t"]]],[11,"clone_into","","",34,[[["self"],["t"]]]],[11,"try_from","","",34,[[["u"]],["result"]]],[11,"try_into","","",34,[[],["result"]]],[11,"borrow","","",34,[[["self"]],["t"]]],[11,"borrow_mut","","",34,[[["self"]],["t"]]],[11,"type_id","","",34,[[["self"]],["typeid"]]],[11,"from","","",36,[[["t"]],["t"]]],[11,"into","","",36,[[],["u"]]],[11,"to_owned","","",36,[[["self"]],["t"]]],[11,"clone_into","","",36,[[["self"],["t"]]]],[11,"try_from","","",36,[[["u"]],["result"]]],[11,"try_into","","",36,[[],["result"]]],[11,"borrow","","",36,[[["self"]],["t"]]],[11,"borrow_mut","","",36,[[["self"]],["t"]]],[11,"type_id","","",36,[[["self"]],["typeid"]]],[11,"from","","",37,[[["t"]],["t"]]],[11,"into","","",37,[[],["u"]]],[11,"to_owned","","",37,[[["self"]],["t"]]],[11,"clone_into","","",37,[[["self"],["t"]]]],[11,"try_from","","",37,[[["u"]],["result"]]],[11,"try_into","","",37,[[],["result"]]],[11,"borrow","","",37,[[["self"]],["t"]]],[11,"borrow_mut","","",37,[[["self"]],["t"]]],[11,"type_id","","",37,[[["self"]],["typeid"]]],[11,"from","","",38,[[["t"]],["t"]]],[11,"into","","",38,[[],["u"]]],[11,"to_owned","","",38,[[["self"]],["t"]]],[11,"clone_into","","",38,[[["self"],["t"]]]],[11,"try_from","","",38,[[["u"]],["result"]]],[11,"try_into","","",38,[[],["result"]]],[11,"borrow","","",38,[[["self"]],["t"]]],[11,"borrow_mut","","",38,[[["self"]],["t"]]],[11,"type_id","","",38,[[["self"]],["typeid"]]],[11,"from","","",39,[[["t"]],["t"]]],[11,"into","","",39,[[],["u"]]],[11,"to_owned","","",39,[[["self"]],["t"]]],[11,"clone_into","","",39,[[["self"],["t"]]]],[11,"try_from","","",39,[[["u"]],["result"]]],[11,"try_into","","",39,[[],["result"]]],[11,"borrow","","",39,[[["self"]],["t"]]],[11,"borrow_mut","","",39,[[["self"]],["t"]]],[11,"type_id","","",39,[[["self"]],["typeid"]]],[11,"from","","",40,[[["t"]],["t"]]],[11,"into","","",40,[[],["u"]]],[11,"to_owned","","",40,[[["self"]],["t"]]],[11,"clone_into","","",40,[[["self"],["t"]]]],[11,"try_from","","",40,[[["u"]],["result"]]],[11,"try_into","","",40,[[],["result"]]],[11,"borrow","","",40,[[["self"]],["t"]]],[11,"borrow_mut","","",40,[[["self"]],["t"]]],[11,"type_id","","",40,[[["self"]],["typeid"]]],[11,"from","","",41,[[["t"]],["t"]]],[11,"into","","",41,[[],["u"]]],[11,"to_owned","","",41,[[["self"]],["t"]]],[11,"clone_into","","",41,[[["self"],["t"]]]],[11,"try_from","","",41,[[["u"]],["result"]]],[11,"try_into","","",41,[[],["result"]]],[11,"borrow","","",41,[[["self"]],["t"]]],[11,"borrow_mut","","",41,[[["self"]],["t"]]],[11,"type_id","","",41,[[["self"]],["typeid"]]],[11,"from","","",42,[[["t"]],["t"]]],[11,"into","","",42,[[],["u"]]],[11,"to_owned","","",42,[[["self"]],["t"]]],[11,"clone_into","","",42,[[["self"],["t"]]]],[11,"try_from","","",42,[[["u"]],["result"]]],[11,"try_into","","",42,[[],["result"]]],[11,"borrow","","",42,[[["self"]],["t"]]],[11,"borrow_mut","","",42,[[["self"]],["t"]]],[11,"type_id","","",42,[[["self"]],["typeid"]]],[11,"from","","",43,[[["t"]],["t"]]],[11,"into","","",43,[[],["u"]]],[11,"to_owned","","",43,[[["self"]],["t"]]],[11,"clone_into","","",43,[[["self"],["t"]]]],[11,"try_from","","",43,[[["u"]],["result"]]],[11,"try_into","","",43,[[],["result"]]],[11,"borrow","","",43,[[["self"]],["t"]]],[11,"borrow_mut","","",43,[[["self"]],["t"]]],[11,"type_id","","",43,[[["self"]],["typeid"]]],[11,"from","","",44,[[["t"]],["t"]]],[11,"into","","",44,[[],["u"]]],[11,"to_owned","","",44,[[["self"]],["t"]]],[11,"clone_into","","",44,[[["self"],["t"]]]],[11,"try_from","","",44,[[["u"]],["result"]]],[11,"try_into","","",44,[[],["result"]]],[11,"borrow","","",44,[[["self"]],["t"]]],[11,"borrow_mut","","",44,[[["self"]],["t"]]],[11,"type_id","","",44,[[["self"]],["typeid"]]],[11,"from","","",45,[[["t"]],["t"]]],[11,"into","","",45,[[],["u"]]],[11,"to_owned","","",45,[[["self"]],["t"]]],[11,"clone_into","","",45,[[["self"],["t"]]]],[11,"try_from","","",45,[[["u"]],["result"]]],[11,"try_into","","",45,[[],["result"]]],[11,"borrow","","",45,[[["self"]],["t"]]],[11,"borrow_mut","","",45,[[["self"]],["t"]]],[11,"type_id","","",45,[[["self"]],["typeid"]]],[11,"from","regex_syntax::ast::parse","",46,[[["t"]],["t"]]],[11,"into","","",46,[[],["u"]]],[11,"to_owned","","",46,[[["self"]],["t"]]],[11,"clone_into","","",46,[[["self"],["t"]]]],[11,"try_from","","",46,[[["u"]],["result"]]],[11,"try_into","","",46,[[],["result"]]],[11,"borrow","","",46,[[["self"]],["t"]]],[11,"borrow_mut","","",46,[[["self"]],["t"]]],[11,"type_id","","",46,[[["self"]],["typeid"]]],[11,"from","","",47,[[["t"]],["t"]]],[11,"into","","",47,[[],["u"]]],[11,"to_owned","","",47,[[["self"]],["t"]]],[11,"clone_into","","",47,[[["self"],["t"]]]],[11,"try_from","","",47,[[["u"]],["result"]]],[11,"try_into","","",47,[[],["result"]]],[11,"borrow","","",47,[[["self"]],["t"]]],[11,"borrow_mut","","",47,[[["self"]],["t"]]],[11,"type_id","","",47,[[["self"]],["typeid"]]],[11,"from","regex_syntax::ast::print","",48,[[["t"]],["t"]]],[11,"into","","",48,[[],["u"]]],[11,"try_from","","",48,[[["u"]],["result"]]],[11,"try_into","","",48,[[],["result"]]],[11,"borrow","","",48,[[["self"]],["t"]]],[11,"borrow_mut","","",48,[[["self"]],["t"]]],[11,"type_id","","",48,[[["self"]],["typeid"]]],[11,"from","regex_syntax::hir","",81,[[["t"]],["t"]]],[11,"into","","",81,[[],["u"]]],[11,"to_string","","",81,[[["self"]],["string"]]],[11,"try_from","","",81,[[["u"]],["result"]]],[11,"try_into","","",81,[[],["result"]]],[11,"borrow","","",81,[[["self"]],["t"]]],[11,"borrow_mut","","",81,[[["self"]],["t"]]],[11,"type_id","","",81,[[["self"]],["typeid"]]],[11,"from","","",69,[[["t"]],["t"]]],[11,"into","","",69,[[],["u"]]],[11,"to_owned","","",69,[[["self"]],["t"]]],[11,"clone_into","","",69,[[["self"],["t"]]]],[11,"to_string","","",69,[[["self"]],["string"]]],[11,"try_from","","",69,[[["u"]],["result"]]],[11,"try_into","","",69,[[],["result"]]],[11,"borrow","","",69,[[["self"]],["t"]]],[11,"borrow_mut","","",69,[[["self"]],["t"]]],[11,"type_id","","",69,[[["self"]],["typeid"]]],[11,"from","","",70,[[["t"]],["t"]]],[11,"into","","",70,[[],["u"]]],[11,"to_owned","","",70,[[["self"]],["t"]]],[11,"clone_into","","",70,[[["self"],["t"]]]],[11,"to_string","","",70,[[["self"]],["string"]]],[11,"try_from","","",70,[[["u"]],["result"]]],[11,"try_into","","",70,[[],["result"]]],[11,"borrow","","",70,[[["self"]],["t"]]],[11,"borrow_mut","","",70,[[["self"]],["t"]]],[11,"type_id","","",70,[[["self"]],["typeid"]]],[11,"from","","",71,[[["t"]],["t"]]],[11,"into","","",71,[[],["u"]]],[11,"to_owned","","",71,[[["self"]],["t"]]],[11,"clone_into","","",71,[[["self"],["t"]]]],[11,"try_from","","",71,[[["u"]],["result"]]],[11,"try_into","","",71,[[],["result"]]],[11,"borrow","","",71,[[["self"]],["t"]]],[11,"borrow_mut","","",71,[[["self"]],["t"]]],[11,"type_id","","",71,[[["self"]],["typeid"]]],[11,"from","","",82,[[["t"]],["t"]]],[11,"into","","",82,[[],["u"]]],[11,"into_iter","","",82,[[],["i"]]],[11,"try_from","","",82,[[["u"]],["result"]]],[11,"try_into","","",82,[[],["result"]]],[11,"borrow","","",82,[[["self"]],["t"]]],[11,"borrow_mut","","",82,[[["self"]],["t"]]],[11,"type_id","","",82,[[["self"]],["typeid"]]],[11,"from","","",72,[[["t"]],["t"]]],[11,"into","","",72,[[],["u"]]],[11,"to_owned","","",72,[[["self"]],["t"]]],[11,"clone_into","","",72,[[["self"],["t"]]]],[11,"try_from","","",72,[[["u"]],["result"]]],[11,"try_into","","",72,[[],["result"]]],[11,"borrow","","",72,[[["self"]],["t"]]],[11,"borrow_mut","","",72,[[["self"]],["t"]]],[11,"type_id","","",72,[[["self"]],["typeid"]]],[11,"from","","",73,[[["t"]],["t"]]],[11,"into","","",73,[[],["u"]]],[11,"to_owned","","",73,[[["self"]],["t"]]],[11,"clone_into","","",73,[[["self"],["t"]]]],[11,"try_from","","",73,[[["u"]],["result"]]],[11,"try_into","","",73,[[],["result"]]],[11,"borrow","","",73,[[["self"]],["t"]]],[11,"borrow_mut","","",73,[[["self"]],["t"]]],[11,"type_id","","",73,[[["self"]],["typeid"]]],[11,"from","","",83,[[["t"]],["t"]]],[11,"into","","",83,[[],["u"]]],[11,"into_iter","","",83,[[],["i"]]],[11,"try_from","","",83,[[["u"]],["result"]]],[11,"try_into","","",83,[[],["result"]]],[11,"borrow","","",83,[[["self"]],["t"]]],[11,"borrow_mut","","",83,[[["self"]],["t"]]],[11,"type_id","","",83,[[["self"]],["typeid"]]],[11,"from","","",74,[[["t"]],["t"]]],[11,"into","","",74,[[],["u"]]],[11,"to_owned","","",74,[[["self"]],["t"]]],[11,"clone_into","","",74,[[["self"],["t"]]]],[11,"try_from","","",74,[[["u"]],["result"]]],[11,"try_into","","",74,[[],["result"]]],[11,"borrow","","",74,[[["self"]],["t"]]],[11,"borrow_mut","","",74,[[["self"]],["t"]]],[11,"type_id","","",74,[[["self"]],["typeid"]]],[11,"from","","",51,[[["t"]],["t"]]],[11,"into","","",51,[[],["u"]]],[11,"to_owned","","",51,[[["self"]],["t"]]],[11,"clone_into","","",51,[[["self"],["t"]]]],[11,"try_from","","",51,[[["u"]],["result"]]],[11,"try_into","","",51,[[],["result"]]],[11,"borrow","","",51,[[["self"]],["t"]]],[11,"borrow_mut","","",51,[[["self"]],["t"]]],[11,"type_id","","",51,[[["self"]],["typeid"]]],[11,"from","","",52,[[["t"]],["t"]]],[11,"into","","",52,[[],["u"]]],[11,"to_owned","","",52,[[["self"]],["t"]]],[11,"clone_into","","",52,[[["self"],["t"]]]],[11,"try_from","","",52,[[["u"]],["result"]]],[11,"try_into","","",52,[[],["result"]]],[11,"borrow","","",52,[[["self"]],["t"]]],[11,"borrow_mut","","",52,[[["self"]],["t"]]],[11,"type_id","","",52,[[["self"]],["typeid"]]],[11,"from","","",53,[[["t"]],["t"]]],[11,"into","","",53,[[],["u"]]],[11,"to_owned","","",53,[[["self"]],["t"]]],[11,"clone_into","","",53,[[["self"],["t"]]]],[11,"to_string","","",53,[[["self"]],["string"]]],[11,"try_from","","",53,[[["u"]],["result"]]],[11,"try_into","","",53,[[],["result"]]],[11,"borrow","","",53,[[["self"]],["t"]]],[11,"borrow_mut","","",53,[[["self"]],["t"]]],[11,"type_id","","",53,[[["self"]],["typeid"]]],[11,"from","","",54,[[["t"]],["t"]]],[11,"into","","",54,[[],["u"]]],[11,"to_owned","","",54,[[["self"]],["t"]]],[11,"clone_into","","",54,[[["self"],["t"]]]],[11,"try_from","","",54,[[["u"]],["result"]]],[11,"try_into","","",54,[[],["result"]]],[11,"borrow","","",54,[[["self"]],["t"]]],[11,"borrow_mut","","",54,[[["self"]],["t"]]],[11,"type_id","","",54,[[["self"]],["typeid"]]],[11,"from","","",55,[[["t"]],["t"]]],[11,"into","","",55,[[],["u"]]],[11,"to_owned","","",55,[[["self"]],["t"]]],[11,"clone_into","","",55,[[["self"],["t"]]]],[11,"try_from","","",55,[[["u"]],["result"]]],[11,"try_into","","",55,[[],["result"]]],[11,"borrow","","",55,[[["self"]],["t"]]],[11,"borrow_mut","","",55,[[["self"]],["t"]]],[11,"type_id","","",55,[[["self"]],["typeid"]]],[11,"from","","",56,[[["t"]],["t"]]],[11,"into","","",56,[[],["u"]]],[11,"to_owned","","",56,[[["self"]],["t"]]],[11,"clone_into","","",56,[[["self"],["t"]]]],[11,"try_from","","",56,[[["u"]],["result"]]],[11,"try_into","","",56,[[],["result"]]],[11,"borrow","","",56,[[["self"]],["t"]]],[11,"borrow_mut","","",56,[[["self"]],["t"]]],[11,"type_id","","",56,[[["self"]],["typeid"]]],[11,"from","","",57,[[["t"]],["t"]]],[11,"into","","",57,[[],["u"]]],[11,"to_owned","","",57,[[["self"]],["t"]]],[11,"clone_into","","",57,[[["self"],["t"]]]],[11,"try_from","","",57,[[["u"]],["result"]]],[11,"try_into","","",57,[[],["result"]]],[11,"borrow","","",57,[[["self"]],["t"]]],[11,"borrow_mut","","",57,[[["self"]],["t"]]],[11,"type_id","","",57,[[["self"]],["typeid"]]],[11,"from","","",58,[[["t"]],["t"]]],[11,"into","","",58,[[],["u"]]],[11,"to_owned","","",58,[[["self"]],["t"]]],[11,"clone_into","","",58,[[["self"],["t"]]]],[11,"try_from","","",58,[[["u"]],["result"]]],[11,"try_into","","",58,[[],["result"]]],[11,"borrow","","",58,[[["self"]],["t"]]],[11,"borrow_mut","","",58,[[["self"]],["t"]]],[11,"type_id","","",58,[[["self"]],["typeid"]]],[11,"from","","",59,[[["t"]],["t"]]],[11,"into","","",59,[[],["u"]]],[11,"to_owned","","",59,[[["self"]],["t"]]],[11,"clone_into","","",59,[[["self"],["t"]]]],[11,"try_from","","",59,[[["u"]],["result"]]],[11,"try_into","","",59,[[],["result"]]],[11,"borrow","","",59,[[["self"]],["t"]]],[11,"borrow_mut","","",59,[[["self"]],["t"]]],[11,"type_id","","",59,[[["self"]],["typeid"]]],[11,"from","","",61,[[["t"]],["t"]]],[11,"into","","",61,[[],["u"]]],[11,"to_owned","","",61,[[["self"]],["t"]]],[11,"clone_into","","",61,[[["self"],["t"]]]],[11,"try_from","","",61,[[["u"]],["result"]]],[11,"try_into","","",61,[[],["result"]]],[11,"borrow","","",61,[[["self"]],["t"]]],[11,"borrow_mut","","",61,[[["self"]],["t"]]],[11,"type_id","","",61,[[["self"]],["typeid"]]],[11,"from","","",62,[[["t"]],["t"]]],[11,"into","","",62,[[],["u"]]],[11,"to_owned","","",62,[[["self"]],["t"]]],[11,"clone_into","","",62,[[["self"],["t"]]]],[11,"try_from","","",62,[[["u"]],["result"]]],[11,"try_into","","",62,[[],["result"]]],[11,"borrow","","",62,[[["self"]],["t"]]],[11,"borrow_mut","","",62,[[["self"]],["t"]]],[11,"type_id","","",62,[[["self"]],["typeid"]]],[11,"from","regex_syntax::hir::literal","",63,[[["t"]],["t"]]],[11,"into","","",63,[[],["u"]]],[11,"to_owned","","",63,[[["self"]],["t"]]],[11,"clone_into","","",63,[[["self"],["t"]]]],[11,"try_from","","",63,[[["u"]],["result"]]],[11,"try_into","","",63,[[],["result"]]],[11,"borrow","","",63,[[["self"]],["t"]]],[11,"borrow_mut","","",63,[[["self"]],["t"]]],[11,"type_id","","",63,[[["self"]],["typeid"]]],[11,"from","","",64,[[["t"]],["t"]]],[11,"into","","",64,[[],["u"]]],[11,"to_owned","","",64,[[["self"]],["t"]]],[11,"clone_into","","",64,[[["self"],["t"]]]],[11,"try_from","","",64,[[["u"]],["result"]]],[11,"try_into","","",64,[[],["result"]]],[11,"borrow","","",64,[[["self"]],["t"]]],[11,"borrow_mut","","",64,[[["self"]],["t"]]],[11,"type_id","","",64,[[["self"]],["typeid"]]],[11,"from","regex_syntax::hir::print","",65,[[["t"]],["t"]]],[11,"into","","",65,[[],["u"]]],[11,"try_from","","",65,[[["u"]],["result"]]],[11,"try_into","","",65,[[],["result"]]],[11,"borrow","","",65,[[["self"]],["t"]]],[11,"borrow_mut","","",65,[[["self"]],["t"]]],[11,"type_id","","",65,[[["self"]],["typeid"]]],[11,"from","regex_syntax::hir::translate","",66,[[["t"]],["t"]]],[11,"into","","",66,[[],["u"]]],[11,"to_owned","","",66,[[["self"]],["t"]]],[11,"clone_into","","",66,[[["self"],["t"]]]],[11,"try_from","","",66,[[["u"]],["result"]]],[11,"try_into","","",66,[[],["result"]]],[11,"borrow","","",66,[[["self"]],["t"]]],[11,"borrow_mut","","",66,[[["self"]],["t"]]],[11,"type_id","","",66,[[["self"]],["typeid"]]],[11,"from","","",67,[[["t"]],["t"]]],[11,"into","","",67,[[],["u"]]],[11,"to_owned","","",67,[[["self"]],["t"]]],[11,"clone_into","","",67,[[["self"],["t"]]]],[11,"try_from","","",67,[[["u"]],["result"]]],[11,"try_into","","",67,[[],["result"]]],[11,"borrow","","",67,[[["self"]],["t"]]],[11,"borrow_mut","","",67,[[["self"]],["t"]]],[11,"type_id","","",67,[[["self"]],["typeid"]]],[11,"from","regex_syntax::utf8","",77,[[["t"]],["t"]]],[11,"into","","",77,[[],["u"]]],[11,"to_owned","","",77,[[["self"]],["t"]]],[11,"clone_into","","",77,[[["self"],["t"]]]],[11,"try_from","","",77,[[["u"]],["result"]]],[11,"try_into","","",77,[[],["result"]]],[11,"borrow","","",77,[[["self"]],["t"]]],[11,"borrow_mut","","",77,[[["self"]],["t"]]],[11,"type_id","","",77,[[["self"]],["typeid"]]],[11,"from","","",79,[[["t"]],["t"]]],[11,"into","","",79,[[],["u"]]],[11,"into_iter","","",79,[[],["i"]]],[11,"try_from","","",79,[[["u"]],["result"]]],[11,"try_into","","",79,[[],["result"]]],[11,"borrow","","",79,[[["self"]],["t"]]],[11,"borrow_mut","","",79,[[["self"]],["t"]]],[11,"type_id","","",79,[[["self"]],["typeid"]]],[11,"from","","",78,[[["t"]],["t"]]],[11,"into","","",78,[[],["u"]]],[11,"to_owned","","",78,[[["self"]],["t"]]],[11,"clone_into","","",78,[[["self"],["t"]]]],[11,"try_from","","",78,[[["u"]],["result"]]],[11,"try_into","","",78,[[],["result"]]],[11,"borrow","","",78,[[["self"]],["t"]]],[11,"borrow_mut","","",78,[[["self"]],["t"]]],[11,"type_id","","",78,[[["self"]],["typeid"]]],[11,"drop","regex_syntax::ast","",27,[[["self"]]]],[11,"drop","","",37,[[["self"]]]],[11,"drop","regex_syntax::hir","",70,[[["self"]]]],[11,"as_ref","regex_syntax::hir::literal","",64,[[["self"]]]],[11,"from","regex_syntax","",0,[[["error"]],["error"]]],[11,"from","","",0,[[["error"]],["error"]]],[11,"next","regex_syntax::hir","",82,[[["self"]],[["option",["classunicoderange"]],["classunicoderange"]]]],[11,"next","","",83,[[["self"]],[["classbytesrange"],["option",["classbytesrange"]]]]],[11,"next","regex_syntax::utf8","",79,[[["self"]],["option"]]],[11,"clone","regex_syntax::ast::parse","",46,[[["self"]],["parserbuilder"]]],[11,"clone","","",47,[[["self"]],["parser"]]],[11,"clone","regex_syntax::ast","",50,[[["self"]],["error"]]],[11,"clone","","",23,[[["self"]],["errorkind"]]],[11,"clone","","",1,[[["self"]],["span"]]],[11,"clone","","",2,[[["self"]],["position"]]],[11,"clone","","",3,[[["self"]],["withcomments"]]],[11,"clone","","",4,[[["self"]],["comment"]]],[11,"clone","","",27,[[["self"]],["ast"]]],[11,"clone","","",5,[[["self"]],["alternation"]]],[11,"clone","","",6,[[["self"]],["concat"]]],[11,"clone","","",7,[[["self"]],["literal"]]],[11,"clone","","",28,[[["self"]],["literalkind"]]],[11,"clone","","",29,[[["self"]],["specialliteralkind"]]],[11,"clone","","",30,[[["self"]],["hexliteralkind"]]],[11,"clone","","",31,[[["self"]],["class"]]],[11,"clone","","",8,[[["self"]],["classperl"]]],[11,"clone","","",32,[[["self"]],["classperlkind"]]],[11,"clone","","",9,[[["self"]],["classascii"]]],[11,"clone","","",33,[[["self"]],["classasciikind"]]],[11,"clone","","",10,[[["self"]],["classunicode"]]],[11,"clone","","",34,[[["self"]],["classunicodekind"]]],[11,"clone","","",36,[[["self"]],["classunicodeopkind"]]],[11,"clone","","",11,[[["self"]],["classbracketed"]]],[11,"clone","","",37,[[["self"]],["classset"]]],[11,"clone","","",38,[[["self"]],["classsetitem"]]],[11,"clone","","",12,[[["self"]],["classsetrange"]]],[11,"clone","","",13,[[["self"]],["classsetunion"]]],[11,"clone","","",14,[[["self"]],["classsetbinaryop"]]],[11,"clone","","",39,[[["self"]],["classsetbinaryopkind"]]],[11,"clone","","",15,[[["self"]],["assertion"]]],[11,"clone","","",40,[[["self"]],["assertionkind"]]],[11,"clone","","",16,[[["self"]],["repetition"]]],[11,"clone","","",17,[[["self"]],["repetitionop"]]],[11,"clone","","",41,[[["self"]],["repetitionkind"]]],[11,"clone","","",42,[[["self"]],["repetitionrange"]]],[11,"clone","","",18,[[["self"]],["group"]]],[11,"clone","","",43,[[["self"]],["groupkind"]]],[11,"clone","","",19,[[["self"]],["capturename"]]],[11,"clone","","",20,[[["self"]],["setflags"]]],[11,"clone","","",21,[[["self"]],["flags"]]],[11,"clone","","",22,[[["self"]],["flagsitem"]]],[11,"clone","","",44,[[["self"]],["flagsitemkind"]]],[11,"clone","","",45,[[["self"]],["flag"]]],[11,"clone","regex_syntax","",0,[[["self"]],["error"]]],[11,"clone","regex_syntax::hir::literal","",63,[[["self"]],["literals"]]],[11,"clone","","",64,[[["self"]],["literal"]]],[11,"clone","regex_syntax::hir::translate","",66,[[["self"]],["translatorbuilder"]]],[11,"clone","","",67,[[["self"]],["translator"]]],[11,"clone","regex_syntax::hir","",69,[[["self"]],["error"]]],[11,"clone","","",53,[[["self"]],["errorkind"]]],[11,"clone","","",70,[[["self"]],["hir"]]],[11,"clone","","",54,[[["self"]],["hirkind"]]],[11,"clone","","",55,[[["self"]],["literal"]]],[11,"clone","","",56,[[["self"]],["class"]]],[11,"clone","","",71,[[["self"]],["classunicode"]]],[11,"clone","","",72,[[["self"]],["classunicoderange"]]],[11,"clone","","",73,[[["self"]],["classbytes"]]],[11,"clone","","",74,[[["self"]],["classbytesrange"]]],[11,"clone","","",57,[[["self"]],["anchor"]]],[11,"clone","","",58,[[["self"]],["wordboundary"]]],[11,"clone","","",51,[[["self"]],["group"]]],[11,"clone","","",59,[[["self"]],["groupkind"]]],[11,"clone","","",52,[[["self"]],["repetition"]]],[11,"clone","","",61,[[["self"]],["repetitionkind"]]],[11,"clone","","",62,[[["self"]],["repetitionrange"]]],[11,"clone","regex_syntax","",75,[[["self"]],["parserbuilder"]]],[11,"clone","","",76,[[["self"]],["parser"]]],[11,"clone","regex_syntax::utf8","",78,[[["self"]],["utf8sequence"]]],[11,"clone","","",77,[[["self"]],["utf8range"]]],[11,"default","regex_syntax::ast::parse","",46,[[],["parserbuilder"]]],[11,"default","regex_syntax::hir::translate","",66,[[],["translatorbuilder"]]],[11,"default","regex_syntax::hir","",72,[[],["classunicoderange"]]],[11,"default","","",74,[[],["classbytesrange"]]],[11,"default","regex_syntax","",75,[[],["parserbuilder"]]],[11,"cmp","regex_syntax::ast","",1,[[["self"],["span"]],["ordering"]]],[11,"cmp","","",2,[[["position"],["self"]],["ordering"]]],[11,"cmp","regex_syntax::hir::literal","",64,[[["literal"],["self"]],["ordering"]]],[11,"cmp","regex_syntax::hir","",72,[[["classunicoderange"],["self"]],["ordering"]]],[11,"cmp","","",74,[[["self"],["classbytesrange"]],["ordering"]]],[11,"cmp","regex_syntax::utf8","",78,[[["self"],["utf8sequence"]],["ordering"]]],[11,"cmp","","",77,[[["self"],["utf8range"]],["ordering"]]],[11,"eq","regex_syntax::ast","",50,[[["error"],["self"]],["bool"]]],[11,"ne","","",50,[[["error"],["self"]],["bool"]]],[11,"eq","","",23,[[["self"],["errorkind"]],["bool"]]],[11,"ne","","",23,[[["self"],["errorkind"]],["bool"]]],[11,"eq","","",1,[[["self"],["span"]],["bool"]]],[11,"ne","","",1,[[["self"],["span"]],["bool"]]],[11,"eq","","",2,[[["position"],["self"]],["bool"]]],[11,"ne","","",2,[[["position"],["self"]],["bool"]]],[11,"eq","","",3,[[["self"],["withcomments"]],["bool"]]],[11,"ne","","",3,[[["self"],["withcomments"]],["bool"]]],[11,"eq","","",4,[[["comment"],["self"]],["bool"]]],[11,"ne","","",4,[[["comment"],["self"]],["bool"]]],[11,"eq","","",27,[[["ast"],["self"]],["bool"]]],[11,"ne","","",27,[[["ast"],["self"]],["bool"]]],[11,"eq","","",5,[[["self"],["alternation"]],["bool"]]],[11,"ne","","",5,[[["self"],["alternation"]],["bool"]]],[11,"eq","","",6,[[["self"],["concat"]],["bool"]]],[11,"ne","","",6,[[["self"],["concat"]],["bool"]]],[11,"eq","","",7,[[["self"],["literal"]],["bool"]]],[11,"ne","","",7,[[["self"],["literal"]],["bool"]]],[11,"eq","","",28,[[["literalkind"],["self"]],["bool"]]],[11,"ne","","",28,[[["literalkind"],["self"]],["bool"]]],[11,"eq","","",29,[[["specialliteralkind"],["self"]],["bool"]]],[11,"eq","","",30,[[["hexliteralkind"],["self"]],["bool"]]],[11,"eq","","",31,[[["self"],["class"]],["bool"]]],[11,"ne","","",31,[[["self"],["class"]],["bool"]]],[11,"eq","","",8,[[["self"],["classperl"]],["bool"]]],[11,"ne","","",8,[[["self"],["classperl"]],["bool"]]],[11,"eq","","",32,[[["self"],["classperlkind"]],["bool"]]],[11,"eq","","",9,[[["classascii"],["self"]],["bool"]]],[11,"ne","","",9,[[["classascii"],["self"]],["bool"]]],[11,"eq","","",33,[[["classasciikind"],["self"]],["bool"]]],[11,"eq","","",10,[[["classunicode"],["self"]],["bool"]]],[11,"ne","","",10,[[["classunicode"],["self"]],["bool"]]],[11,"eq","","",34,[[["classunicodekind"],["self"]],["bool"]]],[11,"ne","","",34,[[["classunicodekind"],["self"]],["bool"]]],[11,"eq","","",36,[[["self"],["classunicodeopkind"]],["bool"]]],[11,"eq","","",11,[[["classbracketed"],["self"]],["bool"]]],[11,"ne","","",11,[[["classbracketed"],["self"]],["bool"]]],[11,"eq","","",37,[[["self"],["classset"]],["bool"]]],[11,"ne","","",37,[[["self"],["classset"]],["bool"]]],[11,"eq","","",38,[[["classsetitem"],["self"]],["bool"]]],[11,"ne","","",38,[[["classsetitem"],["self"]],["bool"]]],[11,"eq","","",12,[[["self"],["classsetrange"]],["bool"]]],[11,"ne","","",12,[[["self"],["classsetrange"]],["bool"]]],[11,"eq","","",13,[[["classsetunion"],["self"]],["bool"]]],[11,"ne","","",13,[[["classsetunion"],["self"]],["bool"]]],[11,"eq","","",14,[[["self"],["classsetbinaryop"]],["bool"]]],[11,"ne","","",14,[[["self"],["classsetbinaryop"]],["bool"]]],[11,"eq","","",39,[[["classsetbinaryopkind"],["self"]],["bool"]]],[11,"eq","","",15,[[["assertion"],["self"]],["bool"]]],[11,"ne","","",15,[[["assertion"],["self"]],["bool"]]],[11,"eq","","",40,[[["self"],["assertionkind"]],["bool"]]],[11,"eq","","",16,[[["self"],["repetition"]],["bool"]]],[11,"ne","","",16,[[["self"],["repetition"]],["bool"]]],[11,"eq","","",17,[[["repetitionop"],["self"]],["bool"]]],[11,"ne","","",17,[[["repetitionop"],["self"]],["bool"]]],[11,"eq","","",41,[[["repetitionkind"],["self"]],["bool"]]],[11,"ne","","",41,[[["repetitionkind"],["self"]],["bool"]]],[11,"eq","","",42,[[["repetitionrange"],["self"]],["bool"]]],[11,"ne","","",42,[[["repetitionrange"],["self"]],["bool"]]],[11,"eq","","",18,[[["self"],["group"]],["bool"]]],[11,"ne","","",18,[[["self"],["group"]],["bool"]]],[11,"eq","","",43,[[["groupkind"],["self"]],["bool"]]],[11,"ne","","",43,[[["groupkind"],["self"]],["bool"]]],[11,"eq","","",19,[[["capturename"],["self"]],["bool"]]],[11,"ne","","",19,[[["capturename"],["self"]],["bool"]]],[11,"eq","","",20,[[["setflags"],["self"]],["bool"]]],[11,"ne","","",20,[[["setflags"],["self"]],["bool"]]],[11,"eq","","",21,[[["self"],["flags"]],["bool"]]],[11,"ne","","",21,[[["self"],["flags"]],["bool"]]],[11,"eq","","",22,[[["flagsitem"],["self"]],["bool"]]],[11,"ne","","",22,[[["flagsitem"],["self"]],["bool"]]],[11,"eq","","",44,[[["flagsitemkind"],["self"]],["bool"]]],[11,"ne","","",44,[[["flagsitemkind"],["self"]],["bool"]]],[11,"eq","","",45,[[["flag"],["self"]],["bool"]]],[11,"eq","regex_syntax","",0,[[["error"],["self"]],["bool"]]],[11,"ne","","",0,[[["error"],["self"]],["bool"]]],[11,"eq","regex_syntax::hir::literal","",63,[[["self"],["literals"]],["bool"]]],[11,"ne","","",63,[[["self"],["literals"]],["bool"]]],[11,"eq","","",64,[[["literal"],["self"]],["bool"]]],[11,"eq","regex_syntax::hir","",69,[[["self"],["error"]],["bool"]]],[11,"ne","","",69,[[["self"],["error"]],["bool"]]],[11,"eq","","",53,[[["errorkind"],["self"]],["bool"]]],[11,"eq","","",70,[[["hir"],["self"]],["bool"]]],[11,"ne","","",70,[[["hir"],["self"]],["bool"]]],[11,"eq","","",54,[[["self"],["hirkind"]],["bool"]]],[11,"ne","","",54,[[["self"],["hirkind"]],["bool"]]],[11,"eq","","",55,[[["self"],["literal"]],["bool"]]],[11,"ne","","",55,[[["self"],["literal"]],["bool"]]],[11,"eq","","",56,[[["self"],["class"]],["bool"]]],[11,"ne","","",56,[[["self"],["class"]],["bool"]]],[11,"eq","","",71,[[["self"],["classunicode"]],["bool"]]],[11,"ne","","",71,[[["self"],["classunicode"]],["bool"]]],[11,"eq","","",72,[[["classunicoderange"],["self"]],["bool"]]],[11,"ne","","",72,[[["classunicoderange"],["self"]],["bool"]]],[11,"eq","","",73,[[["classbytes"],["self"]],["bool"]]],[11,"ne","","",73,[[["classbytes"],["self"]],["bool"]]],[11,"eq","","",74,[[["self"],["classbytesrange"]],["bool"]]],[11,"ne","","",74,[[["self"],["classbytesrange"]],["bool"]]],[11,"eq","","",57,[[["self"],["anchor"]],["bool"]]],[11,"eq","","",58,[[["self"],["wordboundary"]],["bool"]]],[11,"eq","","",51,[[["group"],["self"]],["bool"]]],[11,"ne","","",51,[[["group"],["self"]],["bool"]]],[11,"eq","","",59,[[["self"],["groupkind"]],["bool"]]],[11,"ne","","",59,[[["self"],["groupkind"]],["bool"]]],[11,"eq","","",52,[[["repetition"],["self"]],["bool"]]],[11,"ne","","",52,[[["repetition"],["self"]],["bool"]]],[11,"eq","","",61,[[["self"],["repetitionkind"]],["bool"]]],[11,"ne","","",61,[[["self"],["repetitionkind"]],["bool"]]],[11,"eq","","",62,[[["self"],["repetitionrange"]],["bool"]]],[11,"ne","","",62,[[["self"],["repetitionrange"]],["bool"]]],[11,"eq","regex_syntax::utf8","",78,[[["self"],["utf8sequence"]],["bool"]]],[11,"ne","","",78,[[["self"],["utf8sequence"]],["bool"]]],[11,"eq","","",77,[[["self"],["utf8range"]],["bool"]]],[11,"ne","","",77,[[["self"],["utf8range"]],["bool"]]],[11,"partial_cmp","regex_syntax::ast","",1,[[["self"],["span"]],[["ordering"],["option",["ordering"]]]]],[11,"partial_cmp","","",2,[[["position"],["self"]],[["ordering"],["option",["ordering"]]]]],[11,"partial_cmp","regex_syntax::hir::literal","",64,[[["literal"],["self"]],[["ordering"],["option",["ordering"]]]]],[11,"partial_cmp","regex_syntax::hir","",72,[[["classunicoderange"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",72,[[["classunicoderange"],["self"]],["bool"]]],[11,"le","","",72,[[["classunicoderange"],["self"]],["bool"]]],[11,"gt","","",72,[[["classunicoderange"],["self"]],["bool"]]],[11,"ge","","",72,[[["classunicoderange"],["self"]],["bool"]]],[11,"partial_cmp","","",74,[[["self"],["classbytesrange"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",74,[[["self"],["classbytesrange"]],["bool"]]],[11,"le","","",74,[[["self"],["classbytesrange"]],["bool"]]],[11,"gt","","",74,[[["self"],["classbytesrange"]],["bool"]]],[11,"ge","","",74,[[["self"],["classbytesrange"]],["bool"]]],[11,"partial_cmp","regex_syntax::utf8","",78,[[["self"],["utf8sequence"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",78,[[["self"],["utf8sequence"]],["bool"]]],[11,"le","","",78,[[["self"],["utf8sequence"]],["bool"]]],[11,"gt","","",78,[[["self"],["utf8sequence"]],["bool"]]],[11,"ge","","",78,[[["self"],["utf8sequence"]],["bool"]]],[11,"partial_cmp","","",77,[[["self"],["utf8range"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",77,[[["self"],["utf8range"]],["bool"]]],[11,"le","","",77,[[["self"],["utf8range"]],["bool"]]],[11,"gt","","",77,[[["self"],["utf8range"]],["bool"]]],[11,"ge","","",77,[[["self"],["utf8range"]],["bool"]]],[11,"deref","regex_syntax::hir::literal","",64,[[["self"]],["vec"]]],[11,"deref_mut","","",64,[[["self"]],["vec"]]],[11,"fmt","regex_syntax::ast::parse","",46,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",47,[[["formatter"],["self"]],["result"]]],[11,"fmt","regex_syntax::ast::print","",48,[[["formatter"],["self"]],["result"]]],[11,"fmt","regex_syntax::ast","",50,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",23,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",27,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",6,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",7,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",28,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",29,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",30,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",31,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",8,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",32,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",9,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",33,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",10,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",34,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",36,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",11,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",37,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",38,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",12,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",13,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",14,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",39,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",15,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",40,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",16,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",17,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",41,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",42,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",18,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",43,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",19,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",20,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",21,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",22,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",44,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",45,[[["formatter"],["self"]],["result"]]],[11,"fmt","regex_syntax","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","regex_syntax::hir::literal","",63,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",64,[[["formatter"],["self"]],["result"]]],[11,"fmt","regex_syntax::hir::print","",65,[[["formatter"],["self"]],["result"]]],[11,"fmt","regex_syntax::hir::translate","",66,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",67,[[["formatter"],["self"]],["result"]]],[11,"fmt","regex_syntax::hir","",69,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",53,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",70,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",54,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",55,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",56,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",71,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",82,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",72,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",73,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",83,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",74,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",57,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",58,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",51,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",59,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",52,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",61,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",62,[[["formatter"],["self"]],["result"]]],[11,"fmt","regex_syntax","",75,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",76,[[["formatter"],["self"]],["result"]]],[11,"fmt","regex_syntax::hir","",81,[[["formatter"],["self"]],["result"]]],[11,"fmt","regex_syntax","",80,[[["formatter"],["self"]],["result"]]],[11,"fmt","regex_syntax::utf8","",78,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",77,[[["formatter"],["self"]],["result"]]],[11,"fmt","regex_syntax::ast","",50,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",23,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",27,[[["formatter"],["self"]],["result"]]],[11,"fmt","regex_syntax","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","regex_syntax::hir","",69,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",53,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",70,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",81,[[["formatter"],["self"]],["result"]]],[11,"fmt","regex_syntax","",80,[[["formatter"],["self"]],["result"]]],[11,"description","regex_syntax::ast","",50,[[["self"]],["str"]]],[11,"description","regex_syntax","",0,[[["self"]],["str"]]],[11,"description","regex_syntax::hir","",69,[[["self"]],["str"]]],[11,"start","regex_syntax::ast","This method is called before beginning traversal of the AST.",49,[[["self"]]]],[11,"visit_pre","","This method is called on an `Ast` before descending into…",49,[[["ast"],["self"]],["result"]]],[11,"visit_post","","This method is called on an `Ast` after descending all of…",49,[[["ast"],["self"]],["result"]]],[11,"visit_alternation_in","","This method is called between child nodes of an…",49,[[["self"]],["result"]]],[11,"visit_class_set_item_pre","","This method is called on every `ClassSetItem` before…",49,[[["classsetitem"],["self"]],["result"]]],[11,"visit_class_set_item_post","","This method is called on every `ClassSetItem` after…",49,[[["classsetitem"],["self"]],["result"]]],[11,"visit_class_set_binary_op_pre","","This method is called on every `ClassSetBinaryOp` before…",49,[[["self"],["classsetbinaryop"]],["result"]]],[11,"visit_class_set_binary_op_post","","This method is called on every `ClassSetBinaryOp` after…",49,[[["self"],["classsetbinaryop"]],["result"]]],[11,"visit_class_set_binary_op_in","","This method is called between the left hand and right hand…",49,[[["self"],["classsetbinaryop"]],["result"]]],[11,"start","regex_syntax::hir","This method is called before beginning traversal of the HIR.",68,[[["self"]]]],[11,"visit_pre","","This method is called on an `Hir` before descending into…",68,[[["hir"],["self"]],["result"]]],[11,"visit_post","","This method is called on an `Hir` after descending all of…",68,[[["hir"],["self"]],["result"]]],[11,"visit_alternation_in","","This method is called between child nodes of an alternation.",68,[[["self"]],["result"]]]],"p":[[4,"Error"],[3,"Span"],[3,"Position"],[3,"WithComments"],[3,"Comment"],[3,"Alternation"],[3,"Concat"],[3,"Literal"],[3,"ClassPerl"],[3,"ClassAscii"],[3,"ClassUnicode"],[3,"ClassBracketed"],[3,"ClassSetRange"],[3,"ClassSetUnion"],[3,"ClassSetBinaryOp"],[3,"Assertion"],[3,"Repetition"],[3,"RepetitionOp"],[3,"Group"],[3,"CaptureName"],[3,"SetFlags"],[3,"Flags"],[3,"FlagsItem"],[4,"ErrorKind"],[13,"FlagDuplicate"],[13,"FlagRepeatedNegation"],[13,"GroupNameDuplicate"],[4,"Ast"],[4,"LiteralKind"],[4,"SpecialLiteralKind"],[4,"HexLiteralKind"],[4,"Class"],[4,"ClassPerlKind"],[4,"ClassAsciiKind"],[4,"ClassUnicodeKind"],[13,"NamedValue"],[4,"ClassUnicodeOpKind"],[4,"ClassSet"],[4,"ClassSetItem"],[4,"ClassSetBinaryOpKind"],[4,"AssertionKind"],[4,"RepetitionKind"],[4,"RepetitionRange"],[4,"GroupKind"],[4,"FlagsItemKind"],[4,"Flag"],[3,"ParserBuilder"],[3,"Parser"],[3,"Printer"],[8,"Visitor"],[3,"Error"],[3,"Group"],[3,"Repetition"],[4,"ErrorKind"],[4,"HirKind"],[4,"Literal"],[4,"Class"],[4,"Anchor"],[4,"WordBoundary"],[4,"GroupKind"],[13,"CaptureName"],[4,"RepetitionKind"],[4,"RepetitionRange"],[3,"Literals"],[3,"Literal"],[3,"Printer"],[3,"TranslatorBuilder"],[3,"Translator"],[8,"Visitor"],[3,"Error"],[3,"Hir"],[3,"ClassUnicode"],[3,"ClassUnicodeRange"],[3,"ClassBytes"],[3,"ClassBytesRange"],[3,"ParserBuilder"],[3,"Parser"],[3,"Utf8Range"],[4,"Utf8Sequence"],[3,"Utf8Sequences"],[3,"UnicodeWordError"],[3,"CaseFoldError"],[3,"ClassUnicodeIter"],[3,"ClassBytesIter"]]};
searchIndex["rustc_demangle"] = {"doc":"Demangle Rust compiler symbol names.","i":[[3,"Demangle","rustc_demangle","Representation of a demangled symbol name.",null,null],[3,"TryDemangleError","","Error returned from the `try_demangle` function below when…",null,null],[5,"demangle","","De-mangles a Rust symbol into a more readable version",null,[[["str"]],["demangle"]]],[5,"try_demangle","","The same as `demangle`, except return an `Err` if the…",null,[[["str"]],[["trydemangleerror"],["result",["demangle","trydemangleerror"]],["demangle"]]]],[11,"as_str","","Returns the underlying string that's being demangled.",0,[[["self"]],["str"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"into","","",0,[[],["u"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"into","","",1,[[],["u"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"clone","","",1,[[["self"]],["trydemangleerror"]]]],"p":[[3,"Demangle"],[3,"TryDemangleError"]]};
searchIndex["ryu"] = {"doc":"![github] ![crates-io] ![docs-rs]","i":[[3,"Buffer","ryu","Safe API for formatting floating point numbers to text.",null,null],[11,"new","","This is a cheap operation; you don't need to worry about…",0,[[],["self"]]],[11,"format","","Print a floating point number into this buffer and return…",0,[[["float"],["self"]],["str"]]],[11,"format_finite","","Print a floating point number into this buffer and return…",0,[[["float"],["self"]],["str"]]],[0,"raw","","Unsafe functions that mirror the API of the C…",null,null],[5,"format32","ryu::raw","Print f32 to the given buffer and return number of bytes…",null,[[["f32"]],["usize"]]],[5,"format64","","Print f64 to the given buffer and return number of bytes…",null,[[["f64"]],["usize"]]],[8,"Float","ryu","A floating point number, f32 or f64, that can be written…",null,null],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"into","","",0,[[],["u"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"clone","","",0,[[["self"]],["self"]]],[11,"default","","",0,[[],["self"]]]],"p":[[3,"Buffer"]]};
searchIndex["safemem"] = {"doc":"Safe wrappers for memory-accessing functions like…","i":[[5,"copy_over","safemem","Copy `len` elements from `src_idx` to `dest_idx`. Ranges…",null,[[["usize"]]]],[5,"write_bytes","","Safe wrapper for `std::ptr::write_bytes()`/`memset()`.",null,[[["u8"]]]],[5,"prepend","","Prepend `elems` to `vec`, resizing if necessary.",null,[[["vec"]]]]],"p":[]};
searchIndex["serde"] = {"doc":"Serde","i":[[0,"de","serde","Generic data structure deserialization framework.",null,null],[3,"IgnoredAny","serde::de","An efficient way of discarding data from a deserializer.",null,null],[4,"Unexpected","","`Unexpected` represents an unexpected invocation of any…",null,null],[13,"Bool","","The input contained a boolean value that was not expected.",0,null],[13,"Unsigned","","The input contained an unsigned integer `u8`, `u16`, `u32`…",0,null],[13,"Signed","","The input contained a signed integer `i8`, `i16`, `i32` or…",0,null],[13,"Float","","The input contained a floating point `f32` or `f64` that…",0,null],[13,"Char","","The input contained a `char` that was not expected.",0,null],[13,"Str","","The input contained a `&str` or `String` that was not…",0,null],[13,"Bytes","","The input contained a `&[u8]` or `Vec<u8>` that was not…",0,null],[13,"Unit","","The input contained a unit `()` that was not expected.",0,null],[13,"Option","","The input contained an `Option<T>` that was not expected.",0,null],[13,"NewtypeStruct","","The input contained a newtype struct that was not expected.",0,null],[13,"Seq","","The input contained a sequence that was not expected.",0,null],[13,"Map","","The input contained a map that was not expected.",0,null],[13,"Enum","","The input contained an enum that was not expected.",0,null],[13,"UnitVariant","","The input contained a unit variant that was not expected.",0,null],[13,"NewtypeVariant","","The input contained a newtype variant that was not expected.",0,null],[13,"TupleVariant","","The input contained a tuple variant that was not expected.",0,null],[13,"StructVariant","","The input contained a struct variant that was not expected.",0,null],[13,"Other","","A message stating what uncategorized thing the input…",0,null],[0,"value","","Building blocks for deserializing basic values using the…",null,null],[3,"Error","serde::de::value","A minimal representation of all possible errors that can…",null,null],[3,"UnitDeserializer","","A deserializer holding a `()`.",null,null],[3,"BoolDeserializer","","A deserializer holding a `bool`.",null,null],[3,"I8Deserializer","","A deserializer holding an `i8`.",null,null],[3,"I16Deserializer","","A deserializer holding an `i16`.",null,null],[3,"I32Deserializer","","A deserializer holding an `i32`.",null,null],[3,"I64Deserializer","","A deserializer holding an `i64`.",null,null],[3,"IsizeDeserializer","","A deserializer holding an `isize`.",null,null],[3,"U8Deserializer","","A deserializer holding a `u8`.",null,null],[3,"U16Deserializer","","A deserializer holding a `u16`.",null,null],[3,"U64Deserializer","","A deserializer holding a `u64`.",null,null],[3,"UsizeDeserializer","","A deserializer holding a `usize`.",null,null],[3,"F32Deserializer","","A deserializer holding an `f32`.",null,null],[3,"F64Deserializer","","A deserializer holding an `f64`.",null,null],[3,"CharDeserializer","","A deserializer holding a `char`.",null,null],[3,"I128Deserializer","","A deserializer holding an `i128`.",null,null],[3,"U128Deserializer","","A deserializer holding a `u128`.",null,null],[3,"U32Deserializer","","A deserializer holding a `u32`.",null,null],[3,"StrDeserializer","","A deserializer holding a `&str`.",null,null],[3,"BorrowedStrDeserializer","","A deserializer holding a `&str` with a lifetime tied to…",null,null],[3,"StringDeserializer","","A deserializer holding a `String`.",null,null],[3,"CowStrDeserializer","","A deserializer holding a `Cow<str>`.",null,null],[3,"BorrowedBytesDeserializer","","A deserializer holding a `&[u8]` with a lifetime tied to…",null,null],[3,"SeqDeserializer","","A deserializer that iterates over a sequence.",null,null],[3,"SeqAccessDeserializer","","A deserializer holding a `SeqAccess`.",null,null],[3,"MapDeserializer","","A deserializer that iterates over a map.",null,null],[3,"MapAccessDeserializer","","A deserializer holding a `MapAccess`.",null,null],[11,"new","","Create a new borrowed deserializer from the given string.",1,[[["str"]],["borrowedstrdeserializer"]]],[11,"new","","Create a new borrowed deserializer from the given byte…",2,[[],["borrowedbytesdeserializer"]]],[11,"new","","Construct a new `SeqDeserializer<I, E>`.",3,[[["i"]],["self"]]],[11,"end","","Check for remaining elements after passing a…",3,[[],["result"]]],[11,"new","","Construct a new `SeqAccessDeserializer<A>`.",4,[[["a"]],["self"]]],[11,"new","","Construct a new `MapDeserializer<I, E>`.",5,[[["i"]],["self"]]],[11,"end","","Check for remaining elements after passing a…",5,[[],["result"]]],[11,"new","","Construct a new `MapAccessDeserializer<A>`.",6,[[["a"]],["self"]]],[8,"Error","serde::de","The `Error` trait allows `Deserialize` implementations to…",null,null],[10,"custom","","Raised when there is general error when deserializing a…",7,[[["t"]],["self"]]],[11,"invalid_type","","Raised when a `Deserialize` receives a type different from…",7,[[["unexpected"],["expected"]],["self"]]],[11,"invalid_value","","Raised when a `Deserialize` receives a value of the right…",7,[[["unexpected"],["expected"]],["self"]]],[11,"invalid_length","","Raised when deserializing a sequence or map and the input…",7,[[["usize"],["expected"]],["self"]]],[11,"unknown_variant","","Raised when a `Deserialize` enum type received a variant…",7,[[["str"]],["self"]]],[11,"unknown_field","","Raised when a `Deserialize` struct type received a field…",7,[[["str"]],["self"]]],[11,"missing_field","","Raised when a `Deserialize` struct type expected to…",7,[[["str"]],["self"]]],[11,"duplicate_field","","Raised when a `Deserialize` struct type received more than…",7,[[["str"]],["self"]]],[8,"Expected","","`Expected` represents an explanation of what data a…",null,null],[10,"fmt","","Format an explanation of what data was being expected.…",8,[[["formatter"],["self"]],["result"]]],[8,"Deserialize","","A data structure that can be deserialized from any data…",null,null],[10,"deserialize","","Deserialize this value from the given Serde deserializer.",9,[[["d"]],["result"]]],[8,"DeserializeOwned","","A data structure that can be deserialized without…",null,null],[8,"DeserializeSeed","","`DeserializeSeed` is the stateful form of the…",null,null],[16,"Value","","The type produced by using this seed.",10,null],[10,"deserialize","","Equivalent to the more common `Deserialize::deserialize`…",10,[[["d"]],["result"]]],[8,"Deserializer","","A data format that can deserialize any data structure…",null,null],[16,"Error","","The error type that can be returned if some error occurs…",11,null],[10,"deserialize_any","","Require the `Deserializer` to figure out how to drive the…",11,[[["v"]],["result"]]],[10,"deserialize_bool","","Hint that the `Deserialize` type is expecting a `bool`…",11,[[["v"]],["result"]]],[10,"deserialize_i8","","Hint that the `Deserialize` type is expecting an `i8` value.",11,[[["v"]],["result"]]],[10,"deserialize_i16","","Hint that the `Deserialize` type is expecting an `i16`…",11,[[["v"]],["result"]]],[10,"deserialize_i32","","Hint that the `Deserialize` type is expecting an `i32`…",11,[[["v"]],["result"]]],[10,"deserialize_i64","","Hint that the `Deserialize` type is expecting an `i64`…",11,[[["v"]],["result"]]],[11,"deserialize_i128","","Hint that the `Deserialize` type is expecting an `i128`…",11,[[["v"]],["result"]]],[10,"deserialize_u8","","Hint that the `Deserialize` type is expecting a `u8` value.",11,[[["v"]],["result"]]],[10,"deserialize_u16","","Hint that the `Deserialize` type is expecting a `u16` value.",11,[[["v"]],["result"]]],[10,"deserialize_u32","","Hint that the `Deserialize` type is expecting a `u32` value.",11,[[["v"]],["result"]]],[10,"deserialize_u64","","Hint that the `Deserialize` type is expecting a `u64` value.",11,[[["v"]],["result"]]],[11,"deserialize_u128","","Hint that the `Deserialize` type is expecting an `u128`…",11,[[["v"]],["result"]]],[10,"deserialize_f32","","Hint that the `Deserialize` type is expecting a `f32` value.",11,[[["v"]],["result"]]],[10,"deserialize_f64","","Hint that the `Deserialize` type is expecting a `f64` value.",11,[[["v"]],["result"]]],[10,"deserialize_char","","Hint that the `Deserialize` type is expecting a `char`…",11,[[["v"]],["result"]]],[10,"deserialize_str","","Hint that the `Deserialize` type is expecting a string…",11,[[["v"]],["result"]]],[10,"deserialize_string","","Hint that the `Deserialize` type is expecting a string…",11,[[["v"]],["result"]]],[10,"deserialize_bytes","","Hint that the `Deserialize` type is expecting a byte array…",11,[[["v"]],["result"]]],[10,"deserialize_byte_buf","","Hint that the `Deserialize` type is expecting a byte array…",11,[[["v"]],["result"]]],[10,"deserialize_option","","Hint that the `Deserialize` type is expecting an optional…",11,[[["v"]],["result"]]],[10,"deserialize_unit","","Hint that the `Deserialize` type is expecting a unit value.",11,[[["v"]],["result"]]],[10,"deserialize_unit_struct","","Hint that the `Deserialize` type is expecting a unit…",11,[[["str"],["v"]],["result"]]],[10,"deserialize_newtype_struct","","Hint that the `Deserialize` type is expecting a newtype…",11,[[["str"],["v"]],["result"]]],[10,"deserialize_seq","","Hint that the `Deserialize` type is expecting a sequence…",11,[[["v"]],["result"]]],[10,"deserialize_tuple","","Hint that the `Deserialize` type is expecting a sequence…",11,[[["usize"],["v"]],["result"]]],[10,"deserialize_tuple_struct","","Hint that the `Deserialize` type is expecting a tuple…",11,[[["str"],["usize"],["v"]],["result"]]],[10,"deserialize_map","","Hint that the `Deserialize` type is expecting a map of…",11,[[["v"]],["result"]]],[10,"deserialize_struct","","Hint that the `Deserialize` type is expecting a struct…",11,[[["str"],["v"]],["result"]]],[10,"deserialize_enum","","Hint that the `Deserialize` type is expecting an enum…",11,[[["str"],["v"]],["result"]]],[10,"deserialize_identifier","","Hint that the `Deserialize` type is expecting the name of…",11,[[["v"]],["result"]]],[10,"deserialize_ignored_any","","Hint that the `Deserialize` type needs to deserialize a…",11,[[["v"]],["result"]]],[11,"is_human_readable","","Determine whether `Deserialize` implementations should…",11,[[["self"]],["bool"]]],[8,"Visitor","","This trait represents a visitor that walks through a…",null,null],[16,"Value","","The value produced by this visitor.",12,null],[10,"expecting","","Format a message stating what data this Visitor expects to…",12,[[["formatter"],["self"]],["result"]]],[11,"visit_bool","","The input contains a boolean.",12,[[["bool"]],["result"]]],[11,"visit_i8","","The input contains an `i8`.",12,[[["i8"]],["result"]]],[11,"visit_i16","","The input contains an `i16`.",12,[[["i16"]],["result"]]],[11,"visit_i32","","The input contains an `i32`.",12,[[["i32"]],["result"]]],[11,"visit_i64","","The input contains an `i64`.",12,[[["i64"]],["result"]]],[11,"visit_i128","","The input contains a `i128`.",12,[[["i128"]],["result"]]],[11,"visit_u8","","The input contains a `u8`.",12,[[["u8"]],["result"]]],[11,"visit_u16","","The input contains a `u16`.",12,[[["u16"]],["result"]]],[11,"visit_u32","","The input contains a `u32`.",12,[[["u32"]],["result"]]],[11,"visit_u64","","The input contains a `u64`.",12,[[["u64"]],["result"]]],[11,"visit_u128","","The input contains a `u128`.",12,[[["u128"]],["result"]]],[11,"visit_f32","","The input contains an `f32`.",12,[[["f32"]],["result"]]],[11,"visit_f64","","The input contains an `f64`.",12,[[["f64"]],["result"]]],[11,"visit_char","","The input contains a `char`.",12,[[["char"]],["result"]]],[11,"visit_str","","The input contains a string. The lifetime of the string is…",12,[[["str"]],["result"]]],[11,"visit_borrowed_str","","The input contains a string that lives at least as long as…",12,[[["str"]],["result"]]],[11,"visit_string","","The input contains a string and ownership of the string is…",12,[[["string"]],["result"]]],[11,"visit_bytes","","The input contains a byte array. The lifetime of the byte…",12,[[],["result"]]],[11,"visit_borrowed_bytes","","The input contains a byte array that lives at least as…",12,[[],["result"]]],[11,"visit_byte_buf","","The input contains a byte array and ownership of the byte…",12,[[["vec",["u8"]],["u8"]],["result"]]],[11,"visit_none","","The input contains an optional that is absent.",12,[[],["result"]]],[11,"visit_some","","The input contains an optional that is present.",12,[[["d"]],["result"]]],[11,"visit_unit","","The input contains a unit `()`.",12,[[],["result"]]],[11,"visit_newtype_struct","","The input contains a newtype struct.",12,[[["d"]],["result"]]],[11,"visit_seq","","The input contains a sequence of elements.",12,[[["a"]],["result"]]],[11,"visit_map","","The input contains a key-value map.",12,[[["a"]],["result"]]],[11,"visit_enum","","The input contains an enum.",12,[[["a"]],["result"]]],[8,"SeqAccess","","Provides a `Visitor` access to each element of a sequence…",null,null],[16,"Error","","The error type that can be returned if some error occurs…",13,null],[10,"next_element_seed","","This returns `Ok(Some(value))` for the next value in the…",13,[[["self"],["t"]],[["option"],["result",["option"]]]]],[11,"next_element","","This returns `Ok(Some(value))` for the next value in the…",13,[[["self"]],[["result",["option"]],["option"]]]],[11,"size_hint","","Returns the number of elements remaining in the sequence,…",13,[[["self"]],[["usize"],["option",["usize"]]]]],[8,"MapAccess","","Provides a `Visitor` access to each entry of a map in the…",null,null],[16,"Error","","The error type that can be returned if some error occurs…",14,null],[10,"next_key_seed","","This returns `Ok(Some(key))` for the next key in the map,…",14,[[["self"],["k"]],[["result",["option"]],["option"]]]],[10,"next_value_seed","","This returns a `Ok(value)` for the next value in the map.",14,[[["self"],["v"]],["result"]]],[11,"next_entry_seed","","This returns `Ok(Some((key, value)))` for the next…",14,[[["self"],["k"],["v"]],[["result",["option"]],["option"]]]],[11,"next_key","","This returns `Ok(Some(key))` for the next key in the map,…",14,[[["self"]],[["result",["option"]],["option"]]]],[11,"next_value","","This returns a `Ok(value)` for the next value in the map.",14,[[["self"]],["result"]]],[11,"next_entry","","This returns `Ok(Some((key, value)))` for the next…",14,[[["self"]],[["option"],["result",["option"]]]]],[11,"size_hint","","Returns the number of entries remaining in the map, if…",14,[[["self"]],[["usize"],["option",["usize"]]]]],[8,"EnumAccess","","Provides a `Visitor` access to the data of an enum in the…",null,null],[16,"Error","","The error type that can be returned if some error occurs…",15,null],[16,"Variant","","The `Visitor` that will be used to deserialize the content…",15,null],[10,"variant_seed","","`variant` is called to identify which variant to…",15,[[["v"]],["result"]]],[11,"variant","","`variant` is called to identify which variant to…",15,[[],["result"]]],[8,"VariantAccess","","`VariantAccess` is a visitor that is created by the…",null,null],[16,"Error","","The error type that can be returned if some error occurs…",16,null],[10,"unit_variant","","Called when deserializing a variant with no values.",16,[[],["result"]]],[10,"newtype_variant_seed","","Called when deserializing a variant with a single value.",16,[[["t"]],["result"]]],[11,"newtype_variant","","Called when deserializing a variant with a single value.",16,[[],["result"]]],[10,"tuple_variant","","Called when deserializing a tuple-like variant.",16,[[["usize"],["v"]],["result"]]],[10,"struct_variant","","Called when deserializing a struct-like variant.",16,[[["v"]],["result"]]],[8,"IntoDeserializer","","Converts an existing value into a `Deserializer` from…",null,null],[16,"Deserializer","","The type of the deserializer being converted into.",17,null],[10,"into_deserializer","","Convert this value into a deserializer.",17,[[]]],[0,"ser","serde","Generic data structure serialization framework.",null,null],[3,"Impossible","serde::ser","Helper type for implementing a `Serializer` that does not…",null,null],[8,"Error","","Trait used by `Serialize` implementations to generically…",null,null],[10,"custom","","Used when a [`Serialize`] implementation encounters any…",18,[[["t"]],["self"]]],[8,"Serialize","","A data structure that can be serialized into any data…",null,null],[10,"serialize","","Serialize this value into the given Serde serializer.",19,[[["s"],["self"]],["result"]]],[8,"Serializer","","A data format that can serialize any data structure…",null,null],[16,"Ok","","The output type produced by this `Serializer` during…",20,null],[16,"Error","","The error type when some error occurs during serialization.",20,null],[16,"SerializeSeq","","Type returned from [`serialize_seq`] for serializing the…",20,null],[16,"SerializeTuple","","Type returned from [`serialize_tuple`] for serializing the…",20,null],[16,"SerializeTupleStruct","","Type returned from [`serialize_tuple_struct`] for…",20,null],[16,"SerializeTupleVariant","","Type returned from [`serialize_tuple_variant`] for…",20,null],[16,"SerializeMap","","Type returned from [`serialize_map`] for serializing the…",20,null],[16,"SerializeStruct","","Type returned from [`serialize_struct`] for serializing…",20,null],[16,"SerializeStructVariant","","Type returned from [`serialize_struct_variant`] for…",20,null],[10,"serialize_bool","","Serialize a `bool` value.",20,[[["bool"]],["result"]]],[10,"serialize_i8","","Serialize an `i8` value.",20,[[["i8"]],["result"]]],[10,"serialize_i16","","Serialize an `i16` value.",20,[[["i16"]],["result"]]],[10,"serialize_i32","","Serialize an `i32` value.",20,[[["i32"]],["result"]]],[10,"serialize_i64","","Serialize an `i64` value.",20,[[["i64"]],["result"]]],[11,"serialize_i128","","Serialize an `i128` value.",20,[[["i128"]],["result"]]],[10,"serialize_u8","","Serialize a `u8` value.",20,[[["u8"]],["result"]]],[10,"serialize_u16","","Serialize a `u16` value.",20,[[["u16"]],["result"]]],[10,"serialize_u32","","Serialize a `u32` value.",20,[[["u32"]],["result"]]],[10,"serialize_u64","","Serialize a `u64` value.",20,[[["u64"]],["result"]]],[11,"serialize_u128","","Serialize a `u128` value.",20,[[["u128"]],["result"]]],[10,"serialize_f32","","Serialize an `f32` value.",20,[[["f32"]],["result"]]],[10,"serialize_f64","","Serialize an `f64` value.",20,[[["f64"]],["result"]]],[10,"serialize_char","","Serialize a character.",20,[[["char"]],["result"]]],[10,"serialize_str","","Serialize a `&str`.",20,[[["str"]],["result"]]],[10,"serialize_bytes","","Serialize a chunk of raw byte data.",20,[[],["result"]]],[10,"serialize_none","","Serialize a [`None`] value.",20,[[],["result"]]],[10,"serialize_some","","Serialize a [`Some(T)`] value.",20,[[["t"]],["result"]]],[10,"serialize_unit","","Serialize a `()` value.",20,[[],["result"]]],[10,"serialize_unit_struct","","Serialize a unit struct like `struct Unit` or…",20,[[["str"]],["result"]]],[10,"serialize_unit_variant","","Serialize a unit variant like `E::A` in `enum E { A, B }`.",20,[[["str"],["u32"]],["result"]]],[10,"serialize_newtype_struct","","Serialize a newtype struct like `struct Millimeters(u8)`.",20,[[["str"],["t"]],["result"]]],[10,"serialize_newtype_variant","","Serialize a newtype variant like `E::N` in `enum E { N(u8)…",20,[[["str"],["u32"],["t"]],["result"]]],[10,"serialize_seq","","Begin to serialize a variably sized sequence. This call…",20,[[["usize"],["option",["usize"]]],["result"]]],[10,"serialize_tuple","","Begin to serialize a statically sized sequence whose…",20,[[["usize"]],["result"]]],[10,"serialize_tuple_struct","","Begin to serialize a tuple struct like `struct Rgb(u8, u8,…",20,[[["str"],["usize"]],["result"]]],[10,"serialize_tuple_variant","","Begin to serialize a tuple variant like `E::T` in `enum E…",20,[[["str"],["u32"],["usize"]],["result"]]],[10,"serialize_map","","Begin to serialize a map. This call must be followed by…",20,[[["usize"],["option",["usize"]]],["result"]]],[10,"serialize_struct","","Begin to serialize a struct like `struct Rgb { r: u8, g:…",20,[[["str"],["usize"]],["result"]]],[10,"serialize_struct_variant","","Begin to serialize a struct variant like `E::S` in `enum E…",20,[[["str"],["u32"],["usize"]],["result"]]],[11,"collect_seq","","Collect an iterator as a sequence.",20,[[["i"]],["result"]]],[11,"collect_map","","Collect an iterator as a map.",20,[[["i"]],["result"]]],[11,"collect_str","","Serialize a string produced by an implementation of…",20,[[["t"]],["result"]]],[11,"is_human_readable","","Determine whether `Serialize` implementations should…",20,[[["self"]],["bool"]]],[8,"SerializeSeq","","Returned from `Serializer::serialize_seq`.",null,null],[16,"Ok","","Must match the `Ok` type of our `Serializer`.",21,null],[16,"Error","","Must match the `Error` type of our `Serializer`.",21,null],[10,"serialize_element","","Serialize a sequence element.",21,[[["self"],["t"]],["result"]]],[10,"end","","Finish serializing a sequence.",21,[[],["result"]]],[8,"SerializeTuple","","Returned from `Serializer::serialize_tuple`.",null,null],[16,"Ok","","Must match the `Ok` type of our `Serializer`.",22,null],[16,"Error","","Must match the `Error` type of our `Serializer`.",22,null],[10,"serialize_element","","Serialize a tuple element.",22,[[["self"],["t"]],["result"]]],[10,"end","","Finish serializing a tuple.",22,[[],["result"]]],[8,"SerializeTupleStruct","","Returned from `Serializer::serialize_tuple_struct`.",null,null],[16,"Ok","","Must match the `Ok` type of our `Serializer`.",23,null],[16,"Error","","Must match the `Error` type of our `Serializer`.",23,null],[10,"serialize_field","","Serialize a tuple struct field.",23,[[["self"],["t"]],["result"]]],[10,"end","","Finish serializing a tuple struct.",23,[[],["result"]]],[8,"SerializeTupleVariant","","Returned from `Serializer::serialize_tuple_variant`.",null,null],[16,"Ok","","Must match the `Ok` type of our `Serializer`.",24,null],[16,"Error","","Must match the `Error` type of our `Serializer`.",24,null],[10,"serialize_field","","Serialize a tuple variant field.",24,[[["self"],["t"]],["result"]]],[10,"end","","Finish serializing a tuple variant.",24,[[],["result"]]],[8,"SerializeMap","","Returned from `Serializer::serialize_map`.",null,null],[16,"Ok","","Must match the `Ok` type of our `Serializer`.",25,null],[16,"Error","","Must match the `Error` type of our `Serializer`.",25,null],[10,"serialize_key","","Serialize a map key.",25,[[["self"],["t"]],["result"]]],[10,"serialize_value","","Serialize a map value.",25,[[["self"],["t"]],["result"]]],[11,"serialize_entry","","Serialize a map entry consisting of a key and a value.",25,[[["k"],["self"],["v"]],["result"]]],[10,"end","","Finish serializing a map.",25,[[],["result"]]],[8,"SerializeStruct","","Returned from `Serializer::serialize_struct`.",null,null],[16,"Ok","","Must match the `Ok` type of our `Serializer`.",26,null],[16,"Error","","Must match the `Error` type of our `Serializer`.",26,null],[10,"serialize_field","","Serialize a struct field.",26,[[["self"],["str"],["t"]],["result"]]],[11,"skip_field","","Indicate that a struct field has been skipped.",26,[[["self"],["str"]],["result"]]],[10,"end","","Finish serializing a struct.",26,[[],["result"]]],[8,"SerializeStructVariant","","Returned from `Serializer::serialize_struct_variant`.",null,null],[16,"Ok","","Must match the `Ok` type of our `Serializer`.",27,null],[16,"Error","","Must match the `Error` type of our `Serializer`.",27,null],[10,"serialize_field","","Serialize a struct variant field.",27,[[["self"],["str"],["t"]],["result"]]],[11,"skip_field","","Indicate that a struct variant field has been skipped.",27,[[["self"],["str"]],["result"]]],[10,"end","","Finish serializing a struct variant.",27,[[],["result"]]],[8,"Deserialize","serde","A data structure that can be deserialized from any data…",null,null],[10,"deserialize","","Deserialize this value from the given Serde deserializer.",9,[[["d"]],["result"]]],[8,"Deserializer","","A data format that can deserialize any data structure…",null,null],[16,"Error","","The error type that can be returned if some error occurs…",11,null],[10,"deserialize_any","","Require the `Deserializer` to figure out how to drive the…",11,[[["v"]],["result"]]],[10,"deserialize_bool","","Hint that the `Deserialize` type is expecting a `bool`…",11,[[["v"]],["result"]]],[10,"deserialize_i8","","Hint that the `Deserialize` type is expecting an `i8` value.",11,[[["v"]],["result"]]],[10,"deserialize_i16","","Hint that the `Deserialize` type is expecting an `i16`…",11,[[["v"]],["result"]]],[10,"deserialize_i32","","Hint that the `Deserialize` type is expecting an `i32`…",11,[[["v"]],["result"]]],[10,"deserialize_i64","","Hint that the `Deserialize` type is expecting an `i64`…",11,[[["v"]],["result"]]],[11,"deserialize_i128","","Hint that the `Deserialize` type is expecting an `i128`…",11,[[["v"]],["result"]]],[10,"deserialize_u8","","Hint that the `Deserialize` type is expecting a `u8` value.",11,[[["v"]],["result"]]],[10,"deserialize_u16","","Hint that the `Deserialize` type is expecting a `u16` value.",11,[[["v"]],["result"]]],[10,"deserialize_u32","","Hint that the `Deserialize` type is expecting a `u32` value.",11,[[["v"]],["result"]]],[10,"deserialize_u64","","Hint that the `Deserialize` type is expecting a `u64` value.",11,[[["v"]],["result"]]],[11,"deserialize_u128","","Hint that the `Deserialize` type is expecting an `u128`…",11,[[["v"]],["result"]]],[10,"deserialize_f32","","Hint that the `Deserialize` type is expecting a `f32` value.",11,[[["v"]],["result"]]],[10,"deserialize_f64","","Hint that the `Deserialize` type is expecting a `f64` value.",11,[[["v"]],["result"]]],[10,"deserialize_char","","Hint that the `Deserialize` type is expecting a `char`…",11,[[["v"]],["result"]]],[10,"deserialize_str","","Hint that the `Deserialize` type is expecting a string…",11,[[["v"]],["result"]]],[10,"deserialize_string","","Hint that the `Deserialize` type is expecting a string…",11,[[["v"]],["result"]]],[10,"deserialize_bytes","","Hint that the `Deserialize` type is expecting a byte array…",11,[[["v"]],["result"]]],[10,"deserialize_byte_buf","","Hint that the `Deserialize` type is expecting a byte array…",11,[[["v"]],["result"]]],[10,"deserialize_option","","Hint that the `Deserialize` type is expecting an optional…",11,[[["v"]],["result"]]],[10,"deserialize_unit","","Hint that the `Deserialize` type is expecting a unit value.",11,[[["v"]],["result"]]],[10,"deserialize_unit_struct","","Hint that the `Deserialize` type is expecting a unit…",11,[[["str"],["v"]],["result"]]],[10,"deserialize_newtype_struct","","Hint that the `Deserialize` type is expecting a newtype…",11,[[["str"],["v"]],["result"]]],[10,"deserialize_seq","","Hint that the `Deserialize` type is expecting a sequence…",11,[[["v"]],["result"]]],[10,"deserialize_tuple","","Hint that the `Deserialize` type is expecting a sequence…",11,[[["usize"],["v"]],["result"]]],[10,"deserialize_tuple_struct","","Hint that the `Deserialize` type is expecting a tuple…",11,[[["str"],["usize"],["v"]],["result"]]],[10,"deserialize_map","","Hint that the `Deserialize` type is expecting a map of…",11,[[["v"]],["result"]]],[10,"deserialize_struct","","Hint that the `Deserialize` type is expecting a struct…",11,[[["str"],["v"]],["result"]]],[10,"deserialize_enum","","Hint that the `Deserialize` type is expecting an enum…",11,[[["str"],["v"]],["result"]]],[10,"deserialize_identifier","","Hint that the `Deserialize` type is expecting the name of…",11,[[["v"]],["result"]]],[10,"deserialize_ignored_any","","Hint that the `Deserialize` type needs to deserialize a…",11,[[["v"]],["result"]]],[11,"is_human_readable","","Determine whether `Deserialize` implementations should…",11,[[["self"]],["bool"]]],[8,"Serialize","","A data structure that can be serialized into any data…",null,null],[10,"serialize","","Serialize this value into the given Serde serializer.",19,[[["s"],["self"]],["result"]]],[8,"Serializer","","A data format that can serialize any data structure…",null,null],[16,"Ok","","The output type produced by this `Serializer` during…",20,null],[16,"Error","","The error type when some error occurs during serialization.",20,null],[16,"SerializeSeq","","Type returned from [`serialize_seq`] for serializing the…",20,null],[16,"SerializeTuple","","Type returned from [`serialize_tuple`] for serializing the…",20,null],[16,"SerializeTupleStruct","","Type returned from [`serialize_tuple_struct`] for…",20,null],[16,"SerializeTupleVariant","","Type returned from [`serialize_tuple_variant`] for…",20,null],[16,"SerializeMap","","Type returned from [`serialize_map`] for serializing the…",20,null],[16,"SerializeStruct","","Type returned from [`serialize_struct`] for serializing…",20,null],[16,"SerializeStructVariant","","Type returned from [`serialize_struct_variant`] for…",20,null],[10,"serialize_bool","","Serialize a `bool` value.",20,[[["bool"]],["result"]]],[10,"serialize_i8","","Serialize an `i8` value.",20,[[["i8"]],["result"]]],[10,"serialize_i16","","Serialize an `i16` value.",20,[[["i16"]],["result"]]],[10,"serialize_i32","","Serialize an `i32` value.",20,[[["i32"]],["result"]]],[10,"serialize_i64","","Serialize an `i64` value.",20,[[["i64"]],["result"]]],[11,"serialize_i128","","Serialize an `i128` value.",20,[[["i128"]],["result"]]],[10,"serialize_u8","","Serialize a `u8` value.",20,[[["u8"]],["result"]]],[10,"serialize_u16","","Serialize a `u16` value.",20,[[["u16"]],["result"]]],[10,"serialize_u32","","Serialize a `u32` value.",20,[[["u32"]],["result"]]],[10,"serialize_u64","","Serialize a `u64` value.",20,[[["u64"]],["result"]]],[11,"serialize_u128","","Serialize a `u128` value.",20,[[["u128"]],["result"]]],[10,"serialize_f32","","Serialize an `f32` value.",20,[[["f32"]],["result"]]],[10,"serialize_f64","","Serialize an `f64` value.",20,[[["f64"]],["result"]]],[10,"serialize_char","","Serialize a character.",20,[[["char"]],["result"]]],[10,"serialize_str","","Serialize a `&str`.",20,[[["str"]],["result"]]],[10,"serialize_bytes","","Serialize a chunk of raw byte data.",20,[[],["result"]]],[10,"serialize_none","","Serialize a [`None`] value.",20,[[],["result"]]],[10,"serialize_some","","Serialize a [`Some(T)`] value.",20,[[["t"]],["result"]]],[10,"serialize_unit","","Serialize a `()` value.",20,[[],["result"]]],[10,"serialize_unit_struct","","Serialize a unit struct like `struct Unit` or…",20,[[["str"]],["result"]]],[10,"serialize_unit_variant","","Serialize a unit variant like `E::A` in `enum E { A, B }`.",20,[[["str"],["u32"]],["result"]]],[10,"serialize_newtype_struct","","Serialize a newtype struct like `struct Millimeters(u8)`.",20,[[["str"],["t"]],["result"]]],[10,"serialize_newtype_variant","","Serialize a newtype variant like `E::N` in `enum E { N(u8)…",20,[[["str"],["u32"],["t"]],["result"]]],[10,"serialize_seq","","Begin to serialize a variably sized sequence. This call…",20,[[["usize"],["option",["usize"]]],["result"]]],[10,"serialize_tuple","","Begin to serialize a statically sized sequence whose…",20,[[["usize"]],["result"]]],[10,"serialize_tuple_struct","","Begin to serialize a tuple struct like `struct Rgb(u8, u8,…",20,[[["str"],["usize"]],["result"]]],[10,"serialize_tuple_variant","","Begin to serialize a tuple variant like `E::T` in `enum E…",20,[[["str"],["u32"],["usize"]],["result"]]],[10,"serialize_map","","Begin to serialize a map. This call must be followed by…",20,[[["usize"],["option",["usize"]]],["result"]]],[10,"serialize_struct","","Begin to serialize a struct like `struct Rgb { r: u8, g:…",20,[[["str"],["usize"]],["result"]]],[10,"serialize_struct_variant","","Begin to serialize a struct variant like `E::S` in `enum E…",20,[[["str"],["u32"],["usize"]],["result"]]],[11,"collect_seq","","Collect an iterator as a sequence.",20,[[["i"]],["result"]]],[11,"collect_map","","Collect an iterator as a map.",20,[[["i"]],["result"]]],[11,"collect_str","","Serialize a string produced by an implementation of…",20,[[["t"]],["result"]]],[11,"is_human_readable","","Determine whether `Serialize` implementations should…",20,[[["self"]],["bool"]]],[14,"forward_to_deserialize_any","","Helper macro when implementing the `Deserializer` part of…",null,null],[14,"serde_if_integer128","","Conditional compilation depending on whether Serde is…",null,null],[11,"fmt","serde::de","",28,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"from","","",28,[[["t"]],["t"]]],[11,"into","","",28,[[],["u"]]],[11,"to_owned","","",28,[[["self"]],["t"]]],[11,"clone_into","","",28,[[["self"],["t"]]]],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"try_into","","",28,[[],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"type_id","","",28,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","serde::de::value","",29,[[["t"]],["t"]]],[11,"into","","",29,[[],["u"]]],[11,"to_owned","","",29,[[["self"]],["t"]]],[11,"clone_into","","",29,[[["self"],["t"]]]],[11,"to_string","","",29,[[["self"]],["string"]]],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"try_into","","",29,[[],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"type_id","","",29,[[["self"]],["typeid"]]],[11,"from","","",30,[[["t"]],["t"]]],[11,"into","","",30,[[],["u"]]],[11,"to_owned","","",30,[[["self"]],["t"]]],[11,"clone_into","","",30,[[["self"],["t"]]]],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"try_into","","",30,[[],["result"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"type_id","","",30,[[["self"]],["typeid"]]],[11,"from","","",31,[[["t"]],["t"]]],[11,"into","","",31,[[],["u"]]],[11,"to_owned","","",31,[[["self"]],["t"]]],[11,"clone_into","","",31,[[["self"],["t"]]]],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"try_into","","",31,[[],["result"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"type_id","","",31,[[["self"]],["typeid"]]],[11,"from","","",32,[[["t"]],["t"]]],[11,"into","","",32,[[],["u"]]],[11,"to_owned","","",32,[[["self"]],["t"]]],[11,"clone_into","","",32,[[["self"],["t"]]]],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"try_into","","",32,[[],["result"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"type_id","","",32,[[["self"]],["typeid"]]],[11,"from","","",33,[[["t"]],["t"]]],[11,"into","","",33,[[],["u"]]],[11,"to_owned","","",33,[[["self"]],["t"]]],[11,"clone_into","","",33,[[["self"],["t"]]]],[11,"try_from","","",33,[[["u"]],["result"]]],[11,"try_into","","",33,[[],["result"]]],[11,"borrow","","",33,[[["self"]],["t"]]],[11,"borrow_mut","","",33,[[["self"]],["t"]]],[11,"type_id","","",33,[[["self"]],["typeid"]]],[11,"from","","",34,[[["t"]],["t"]]],[11,"into","","",34,[[],["u"]]],[11,"to_owned","","",34,[[["self"]],["t"]]],[11,"clone_into","","",34,[[["self"],["t"]]]],[11,"try_from","","",34,[[["u"]],["result"]]],[11,"try_into","","",34,[[],["result"]]],[11,"borrow","","",34,[[["self"]],["t"]]],[11,"borrow_mut","","",34,[[["self"]],["t"]]],[11,"type_id","","",34,[[["self"]],["typeid"]]],[11,"from","","",35,[[["t"]],["t"]]],[11,"into","","",35,[[],["u"]]],[11,"to_owned","","",35,[[["self"]],["t"]]],[11,"clone_into","","",35,[[["self"],["t"]]]],[11,"try_from","","",35,[[["u"]],["result"]]],[11,"try_into","","",35,[[],["result"]]],[11,"borrow","","",35,[[["self"]],["t"]]],[11,"borrow_mut","","",35,[[["self"]],["t"]]],[11,"type_id","","",35,[[["self"]],["typeid"]]],[11,"from","","",36,[[["t"]],["t"]]],[11,"into","","",36,[[],["u"]]],[11,"to_owned","","",36,[[["self"]],["t"]]],[11,"clone_into","","",36,[[["self"],["t"]]]],[11,"try_from","","",36,[[["u"]],["result"]]],[11,"try_into","","",36,[[],["result"]]],[11,"borrow","","",36,[[["self"]],["t"]]],[11,"borrow_mut","","",36,[[["self"]],["t"]]],[11,"type_id","","",36,[[["self"]],["typeid"]]],[11,"from","","",37,[[["t"]],["t"]]],[11,"into","","",37,[[],["u"]]],[11,"to_owned","","",37,[[["self"]],["t"]]],[11,"clone_into","","",37,[[["self"],["t"]]]],[11,"try_from","","",37,[[["u"]],["result"]]],[11,"try_into","","",37,[[],["result"]]],[11,"borrow","","",37,[[["self"]],["t"]]],[11,"borrow_mut","","",37,[[["self"]],["t"]]],[11,"type_id","","",37,[[["self"]],["typeid"]]],[11,"from","","",38,[[["t"]],["t"]]],[11,"into","","",38,[[],["u"]]],[11,"to_owned","","",38,[[["self"]],["t"]]],[11,"clone_into","","",38,[[["self"],["t"]]]],[11,"try_from","","",38,[[["u"]],["result"]]],[11,"try_into","","",38,[[],["result"]]],[11,"borrow","","",38,[[["self"]],["t"]]],[11,"borrow_mut","","",38,[[["self"]],["t"]]],[11,"type_id","","",38,[[["self"]],["typeid"]]],[11,"from","","",39,[[["t"]],["t"]]],[11,"into","","",39,[[],["u"]]],[11,"to_owned","","",39,[[["self"]],["t"]]],[11,"clone_into","","",39,[[["self"],["t"]]]],[11,"try_from","","",39,[[["u"]],["result"]]],[11,"try_into","","",39,[[],["result"]]],[11,"borrow","","",39,[[["self"]],["t"]]],[11,"borrow_mut","","",39,[[["self"]],["t"]]],[11,"type_id","","",39,[[["self"]],["typeid"]]],[11,"from","","",40,[[["t"]],["t"]]],[11,"into","","",40,[[],["u"]]],[11,"to_owned","","",40,[[["self"]],["t"]]],[11,"clone_into","","",40,[[["self"],["t"]]]],[11,"try_from","","",40,[[["u"]],["result"]]],[11,"try_into","","",40,[[],["result"]]],[11,"borrow","","",40,[[["self"]],["t"]]],[11,"borrow_mut","","",40,[[["self"]],["t"]]],[11,"type_id","","",40,[[["self"]],["typeid"]]],[11,"from","","",41,[[["t"]],["t"]]],[11,"into","","",41,[[],["u"]]],[11,"to_owned","","",41,[[["self"]],["t"]]],[11,"clone_into","","",41,[[["self"],["t"]]]],[11,"try_from","","",41,[[["u"]],["result"]]],[11,"try_into","","",41,[[],["result"]]],[11,"borrow","","",41,[[["self"]],["t"]]],[11,"borrow_mut","","",41,[[["self"]],["t"]]],[11,"type_id","","",41,[[["self"]],["typeid"]]],[11,"from","","",42,[[["t"]],["t"]]],[11,"into","","",42,[[],["u"]]],[11,"to_owned","","",42,[[["self"]],["t"]]],[11,"clone_into","","",42,[[["self"],["t"]]]],[11,"try_from","","",42,[[["u"]],["result"]]],[11,"try_into","","",42,[[],["result"]]],[11,"borrow","","",42,[[["self"]],["t"]]],[11,"borrow_mut","","",42,[[["self"]],["t"]]],[11,"type_id","","",42,[[["self"]],["typeid"]]],[11,"from","","",43,[[["t"]],["t"]]],[11,"into","","",43,[[],["u"]]],[11,"to_owned","","",43,[[["self"]],["t"]]],[11,"clone_into","","",43,[[["self"],["t"]]]],[11,"try_from","","",43,[[["u"]],["result"]]],[11,"try_into","","",43,[[],["result"]]],[11,"borrow","","",43,[[["self"]],["t"]]],[11,"borrow_mut","","",43,[[["self"]],["t"]]],[11,"type_id","","",43,[[["self"]],["typeid"]]],[11,"from","","",44,[[["t"]],["t"]]],[11,"into","","",44,[[],["u"]]],[11,"to_owned","","",44,[[["self"]],["t"]]],[11,"clone_into","","",44,[[["self"],["t"]]]],[11,"try_from","","",44,[[["u"]],["result"]]],[11,"try_into","","",44,[[],["result"]]],[11,"borrow","","",44,[[["self"]],["t"]]],[11,"borrow_mut","","",44,[[["self"]],["t"]]],[11,"type_id","","",44,[[["self"]],["typeid"]]],[11,"from","","",45,[[["t"]],["t"]]],[11,"into","","",45,[[],["u"]]],[11,"to_owned","","",45,[[["self"]],["t"]]],[11,"clone_into","","",45,[[["self"],["t"]]]],[11,"try_from","","",45,[[["u"]],["result"]]],[11,"try_into","","",45,[[],["result"]]],[11,"borrow","","",45,[[["self"]],["t"]]],[11,"borrow_mut","","",45,[[["self"]],["t"]]],[11,"type_id","","",45,[[["self"]],["typeid"]]],[11,"from","","",46,[[["t"]],["t"]]],[11,"into","","",46,[[],["u"]]],[11,"to_owned","","",46,[[["self"]],["t"]]],[11,"clone_into","","",46,[[["self"],["t"]]]],[11,"try_from","","",46,[[["u"]],["result"]]],[11,"try_into","","",46,[[],["result"]]],[11,"borrow","","",46,[[["self"]],["t"]]],[11,"borrow_mut","","",46,[[["self"]],["t"]]],[11,"type_id","","",46,[[["self"]],["typeid"]]],[11,"from","","",47,[[["t"]],["t"]]],[11,"into","","",47,[[],["u"]]],[11,"to_owned","","",47,[[["self"]],["t"]]],[11,"clone_into","","",47,[[["self"],["t"]]]],[11,"try_from","","",47,[[["u"]],["result"]]],[11,"try_into","","",47,[[],["result"]]],[11,"borrow","","",47,[[["self"]],["t"]]],[11,"borrow_mut","","",47,[[["self"]],["t"]]],[11,"type_id","","",47,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",48,[[["t"]],["t"]]],[11,"into","","",48,[[],["u"]]],[11,"to_owned","","",48,[[["self"]],["t"]]],[11,"clone_into","","",48,[[["self"],["t"]]]],[11,"try_from","","",48,[[["u"]],["result"]]],[11,"try_into","","",48,[[],["result"]]],[11,"borrow","","",48,[[["self"]],["t"]]],[11,"borrow_mut","","",48,[[["self"]],["t"]]],[11,"type_id","","",48,[[["self"]],["typeid"]]],[11,"from","","",49,[[["t"]],["t"]]],[11,"into","","",49,[[],["u"]]],[11,"to_owned","","",49,[[["self"]],["t"]]],[11,"clone_into","","",49,[[["self"],["t"]]]],[11,"try_from","","",49,[[["u"]],["result"]]],[11,"try_into","","",49,[[],["result"]]],[11,"borrow","","",49,[[["self"]],["t"]]],[11,"borrow_mut","","",49,[[["self"]],["t"]]],[11,"type_id","","",49,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,[[["self"],["t"]]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,[[["self"],["t"]]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,[[["self"],["t"]]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"from","serde::ser","",50,[[["t"]],["t"]]],[11,"into","","",50,[[],["u"]]],[11,"try_from","","",50,[[["u"]],["result"]]],[11,"try_into","","",50,[[],["result"]]],[11,"borrow","","",50,[[["self"]],["t"]]],[11,"borrow_mut","","",50,[[["self"]],["t"]]],[11,"type_id","","",50,[[["self"]],["typeid"]]],[11,"deserialize","serde::de","",28,[[["d"]],[["ignoredany"],["result",["ignoredany"]]]]],[11,"deserialize_bool","serde::de::value","",30,[[["v"]],["result"]]],[11,"deserialize_i8","","",30,[[["v"]],["result"]]],[11,"deserialize_i16","","",30,[[["v"]],["result"]]],[11,"deserialize_i32","","",30,[[["v"]],["result"]]],[11,"deserialize_i64","","",30,[[["v"]],["result"]]],[11,"deserialize_i128","","",30,[[["v"]],["result"]]],[11,"deserialize_u8","","",30,[[["v"]],["result"]]],[11,"deserialize_u16","","",30,[[["v"]],["result"]]],[11,"deserialize_u32","","",30,[[["v"]],["result"]]],[11,"deserialize_u64","","",30,[[["v"]],["result"]]],[11,"deserialize_u128","","",30,[[["v"]],["result"]]],[11,"deserialize_f32","","",30,[[["v"]],["result"]]],[11,"deserialize_f64","","",30,[[["v"]],["result"]]],[11,"deserialize_char","","",30,[[["v"]],["result"]]],[11,"deserialize_str","","",30,[[["v"]],["result"]]],[11,"deserialize_string","","",30,[[["v"]],["result"]]],[11,"deserialize_bytes","","",30,[[["v"]],["result"]]],[11,"deserialize_byte_buf","","",30,[[["v"]],["result"]]],[11,"deserialize_unit","","",30,[[["v"]],["result"]]],[11,"deserialize_unit_struct","","",30,[[["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",30,[[["str"],["v"]],["result"]]],[11,"deserialize_seq","","",30,[[["v"]],["result"]]],[11,"deserialize_tuple","","",30,[[["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",30,[[["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",30,[[["v"]],["result"]]],[11,"deserialize_struct","","",30,[[["str"],["v"]],["result"]]],[11,"deserialize_enum","","",30,[[["str"],["v"]],["result"]]],[11,"deserialize_identifier","","",30,[[["v"]],["result"]]],[11,"deserialize_ignored_any","","",30,[[["v"]],["result"]]],[11,"deserialize_any","","",30,[[["v"]],["result"]]],[11,"deserialize_option","","",30,[[["v"]],["result"]]],[11,"deserialize_bool","","",31,[[["v"]],["result"]]],[11,"deserialize_i8","","",31,[[["v"]],["result"]]],[11,"deserialize_i16","","",31,[[["v"]],["result"]]],[11,"deserialize_i32","","",31,[[["v"]],["result"]]],[11,"deserialize_i64","","",31,[[["v"]],["result"]]],[11,"deserialize_i128","","",31,[[["v"]],["result"]]],[11,"deserialize_u8","","",31,[[["v"]],["result"]]],[11,"deserialize_u16","","",31,[[["v"]],["result"]]],[11,"deserialize_u32","","",31,[[["v"]],["result"]]],[11,"deserialize_u64","","",31,[[["v"]],["result"]]],[11,"deserialize_u128","","",31,[[["v"]],["result"]]],[11,"deserialize_f32","","",31,[[["v"]],["result"]]],[11,"deserialize_f64","","",31,[[["v"]],["result"]]],[11,"deserialize_char","","",31,[[["v"]],["result"]]],[11,"deserialize_str","","",31,[[["v"]],["result"]]],[11,"deserialize_string","","",31,[[["v"]],["result"]]],[11,"deserialize_bytes","","",31,[[["v"]],["result"]]],[11,"deserialize_byte_buf","","",31,[[["v"]],["result"]]],[11,"deserialize_option","","",31,[[["v"]],["result"]]],[11,"deserialize_unit","","",31,[[["v"]],["result"]]],[11,"deserialize_unit_struct","","",31,[[["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",31,[[["str"],["v"]],["result"]]],[11,"deserialize_seq","","",31,[[["v"]],["result"]]],[11,"deserialize_tuple","","",31,[[["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",31,[[["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",31,[[["v"]],["result"]]],[11,"deserialize_struct","","",31,[[["str"],["v"]],["result"]]],[11,"deserialize_enum","","",31,[[["str"],["v"]],["result"]]],[11,"deserialize_identifier","","",31,[[["v"]],["result"]]],[11,"deserialize_ignored_any","","",31,[[["v"]],["result"]]],[11,"deserialize_any","","",31,[[["v"]],["result"]]],[11,"deserialize_bool","","",32,[[["v"]],["result"]]],[11,"deserialize_i8","","",32,[[["v"]],["result"]]],[11,"deserialize_i16","","",32,[[["v"]],["result"]]],[11,"deserialize_i32","","",32,[[["v"]],["result"]]],[11,"deserialize_i64","","",32,[[["v"]],["result"]]],[11,"deserialize_i128","","",32,[[["v"]],["result"]]],[11,"deserialize_u8","","",32,[[["v"]],["result"]]],[11,"deserialize_u16","","",32,[[["v"]],["result"]]],[11,"deserialize_u32","","",32,[[["v"]],["result"]]],[11,"deserialize_u64","","",32,[[["v"]],["result"]]],[11,"deserialize_u128","","",32,[[["v"]],["result"]]],[11,"deserialize_f32","","",32,[[["v"]],["result"]]],[11,"deserialize_f64","","",32,[[["v"]],["result"]]],[11,"deserialize_char","","",32,[[["v"]],["result"]]],[11,"deserialize_str","","",32,[[["v"]],["result"]]],[11,"deserialize_string","","",32,[[["v"]],["result"]]],[11,"deserialize_bytes","","",32,[[["v"]],["result"]]],[11,"deserialize_byte_buf","","",32,[[["v"]],["result"]]],[11,"deserialize_option","","",32,[[["v"]],["result"]]],[11,"deserialize_unit","","",32,[[["v"]],["result"]]],[11,"deserialize_unit_struct","","",32,[[["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",32,[[["str"],["v"]],["result"]]],[11,"deserialize_seq","","",32,[[["v"]],["result"]]],[11,"deserialize_tuple","","",32,[[["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",32,[[["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",32,[[["v"]],["result"]]],[11,"deserialize_struct","","",32,[[["str"],["v"]],["result"]]],[11,"deserialize_enum","","",32,[[["str"],["v"]],["result"]]],[11,"deserialize_identifier","","",32,[[["v"]],["result"]]],[11,"deserialize_ignored_any","","",32,[[["v"]],["result"]]],[11,"deserialize_any","","",32,[[["v"]],["result"]]],[11,"deserialize_bool","","",33,[[["v"]],["result"]]],[11,"deserialize_i8","","",33,[[["v"]],["result"]]],[11,"deserialize_i16","","",33,[[["v"]],["result"]]],[11,"deserialize_i32","","",33,[[["v"]],["result"]]],[11,"deserialize_i64","","",33,[[["v"]],["result"]]],[11,"deserialize_i128","","",33,[[["v"]],["result"]]],[11,"deserialize_u8","","",33,[[["v"]],["result"]]],[11,"deserialize_u16","","",33,[[["v"]],["result"]]],[11,"deserialize_u32","","",33,[[["v"]],["result"]]],[11,"deserialize_u64","","",33,[[["v"]],["result"]]],[11,"deserialize_u128","","",33,[[["v"]],["result"]]],[11,"deserialize_f32","","",33,[[["v"]],["result"]]],[11,"deserialize_f64","","",33,[[["v"]],["result"]]],[11,"deserialize_char","","",33,[[["v"]],["result"]]],[11,"deserialize_str","","",33,[[["v"]],["result"]]],[11,"deserialize_string","","",33,[[["v"]],["result"]]],[11,"deserialize_bytes","","",33,[[["v"]],["result"]]],[11,"deserialize_byte_buf","","",33,[[["v"]],["result"]]],[11,"deserialize_option","","",33,[[["v"]],["result"]]],[11,"deserialize_unit","","",33,[[["v"]],["result"]]],[11,"deserialize_unit_struct","","",33,[[["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",33,[[["str"],["v"]],["result"]]],[11,"deserialize_seq","","",33,[[["v"]],["result"]]],[11,"deserialize_tuple","","",33,[[["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",33,[[["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",33,[[["v"]],["result"]]],[11,"deserialize_struct","","",33,[[["str"],["v"]],["result"]]],[11,"deserialize_enum","","",33,[[["str"],["v"]],["result"]]],[11,"deserialize_identifier","","",33,[[["v"]],["result"]]],[11,"deserialize_ignored_any","","",33,[[["v"]],["result"]]],[11,"deserialize_any","","",33,[[["v"]],["result"]]],[11,"deserialize_bool","","",34,[[["v"]],["result"]]],[11,"deserialize_i8","","",34,[[["v"]],["result"]]],[11,"deserialize_i16","","",34,[[["v"]],["result"]]],[11,"deserialize_i32","","",34,[[["v"]],["result"]]],[11,"deserialize_i64","","",34,[[["v"]],["result"]]],[11,"deserialize_i128","","",34,[[["v"]],["result"]]],[11,"deserialize_u8","","",34,[[["v"]],["result"]]],[11,"deserialize_u16","","",34,[[["v"]],["result"]]],[11,"deserialize_u32","","",34,[[["v"]],["result"]]],[11,"deserialize_u64","","",34,[[["v"]],["result"]]],[11,"deserialize_u128","","",34,[[["v"]],["result"]]],[11,"deserialize_f32","","",34,[[["v"]],["result"]]],[11,"deserialize_f64","","",34,[[["v"]],["result"]]],[11,"deserialize_char","","",34,[[["v"]],["result"]]],[11,"deserialize_str","","",34,[[["v"]],["result"]]],[11,"deserialize_string","","",34,[[["v"]],["result"]]],[11,"deserialize_bytes","","",34,[[["v"]],["result"]]],[11,"deserialize_byte_buf","","",34,[[["v"]],["result"]]],[11,"deserialize_option","","",34,[[["v"]],["result"]]],[11,"deserialize_unit","","",34,[[["v"]],["result"]]],[11,"deserialize_unit_struct","","",34,[[["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",34,[[["str"],["v"]],["result"]]],[11,"deserialize_seq","","",34,[[["v"]],["result"]]],[11,"deserialize_tuple","","",34,[[["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",34,[[["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",34,[[["v"]],["result"]]],[11,"deserialize_struct","","",34,[[["str"],["v"]],["result"]]],[11,"deserialize_enum","","",34,[[["str"],["v"]],["result"]]],[11,"deserialize_identifier","","",34,[[["v"]],["result"]]],[11,"deserialize_ignored_any","","",34,[[["v"]],["result"]]],[11,"deserialize_any","","",34,[[["v"]],["result"]]],[11,"deserialize_bool","","",35,[[["v"]],["result"]]],[11,"deserialize_i8","","",35,[[["v"]],["result"]]],[11,"deserialize_i16","","",35,[[["v"]],["result"]]],[11,"deserialize_i32","","",35,[[["v"]],["result"]]],[11,"deserialize_i64","","",35,[[["v"]],["result"]]],[11,"deserialize_i128","","",35,[[["v"]],["result"]]],[11,"deserialize_u8","","",35,[[["v"]],["result"]]],[11,"deserialize_u16","","",35,[[["v"]],["result"]]],[11,"deserialize_u32","","",35,[[["v"]],["result"]]],[11,"deserialize_u64","","",35,[[["v"]],["result"]]],[11,"deserialize_u128","","",35,[[["v"]],["result"]]],[11,"deserialize_f32","","",35,[[["v"]],["result"]]],[11,"deserialize_f64","","",35,[[["v"]],["result"]]],[11,"deserialize_char","","",35,[[["v"]],["result"]]],[11,"deserialize_str","","",35,[[["v"]],["result"]]],[11,"deserialize_string","","",35,[[["v"]],["result"]]],[11,"deserialize_bytes","","",35,[[["v"]],["result"]]],[11,"deserialize_byte_buf","","",35,[[["v"]],["result"]]],[11,"deserialize_option","","",35,[[["v"]],["result"]]],[11,"deserialize_unit","","",35,[[["v"]],["result"]]],[11,"deserialize_unit_struct","","",35,[[["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",35,[[["str"],["v"]],["result"]]],[11,"deserialize_seq","","",35,[[["v"]],["result"]]],[11,"deserialize_tuple","","",35,[[["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",35,[[["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",35,[[["v"]],["result"]]],[11,"deserialize_struct","","",35,[[["str"],["v"]],["result"]]],[11,"deserialize_enum","","",35,[[["str"],["v"]],["result"]]],[11,"deserialize_identifier","","",35,[[["v"]],["result"]]],[11,"deserialize_ignored_any","","",35,[[["v"]],["result"]]],[11,"deserialize_any","","",35,[[["v"]],["result"]]],[11,"deserialize_bool","","",36,[[["v"]],["result"]]],[11,"deserialize_i8","","",36,[[["v"]],["result"]]],[11,"deserialize_i16","","",36,[[["v"]],["result"]]],[11,"deserialize_i32","","",36,[[["v"]],["result"]]],[11,"deserialize_i64","","",36,[[["v"]],["result"]]],[11,"deserialize_i128","","",36,[[["v"]],["result"]]],[11,"deserialize_u8","","",36,[[["v"]],["result"]]],[11,"deserialize_u16","","",36,[[["v"]],["result"]]],[11,"deserialize_u32","","",36,[[["v"]],["result"]]],[11,"deserialize_u64","","",36,[[["v"]],["result"]]],[11,"deserialize_u128","","",36,[[["v"]],["result"]]],[11,"deserialize_f32","","",36,[[["v"]],["result"]]],[11,"deserialize_f64","","",36,[[["v"]],["result"]]],[11,"deserialize_char","","",36,[[["v"]],["result"]]],[11,"deserialize_str","","",36,[[["v"]],["result"]]],[11,"deserialize_string","","",36,[[["v"]],["result"]]],[11,"deserialize_bytes","","",36,[[["v"]],["result"]]],[11,"deserialize_byte_buf","","",36,[[["v"]],["result"]]],[11,"deserialize_option","","",36,[[["v"]],["result"]]],[11,"deserialize_unit","","",36,[[["v"]],["result"]]],[11,"deserialize_unit_struct","","",36,[[["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",36,[[["str"],["v"]],["result"]]],[11,"deserialize_seq","","",36,[[["v"]],["result"]]],[11,"deserialize_tuple","","",36,[[["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",36,[[["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",36,[[["v"]],["result"]]],[11,"deserialize_struct","","",36,[[["str"],["v"]],["result"]]],[11,"deserialize_enum","","",36,[[["str"],["v"]],["result"]]],[11,"deserialize_identifier","","",36,[[["v"]],["result"]]],[11,"deserialize_ignored_any","","",36,[[["v"]],["result"]]],[11,"deserialize_any","","",36,[[["v"]],["result"]]],[11,"deserialize_bool","","",37,[[["v"]],["result"]]],[11,"deserialize_i8","","",37,[[["v"]],["result"]]],[11,"deserialize_i16","","",37,[[["v"]],["result"]]],[11,"deserialize_i32","","",37,[[["v"]],["result"]]],[11,"deserialize_i64","","",37,[[["v"]],["result"]]],[11,"deserialize_i128","","",37,[[["v"]],["result"]]],[11,"deserialize_u8","","",37,[[["v"]],["result"]]],[11,"deserialize_u16","","",37,[[["v"]],["result"]]],[11,"deserialize_u32","","",37,[[["v"]],["result"]]],[11,"deserialize_u64","","",37,[[["v"]],["result"]]],[11,"deserialize_u128","","",37,[[["v"]],["result"]]],[11,"deserialize_f32","","",37,[[["v"]],["result"]]],[11,"deserialize_f64","","",37,[[["v"]],["result"]]],[11,"deserialize_char","","",37,[[["v"]],["result"]]],[11,"deserialize_str","","",37,[[["v"]],["result"]]],[11,"deserialize_string","","",37,[[["v"]],["result"]]],[11,"deserialize_bytes","","",37,[[["v"]],["result"]]],[11,"deserialize_byte_buf","","",37,[[["v"]],["result"]]],[11,"deserialize_option","","",37,[[["v"]],["result"]]],[11,"deserialize_unit","","",37,[[["v"]],["result"]]],[11,"deserialize_unit_struct","","",37,[[["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",37,[[["str"],["v"]],["result"]]],[11,"deserialize_seq","","",37,[[["v"]],["result"]]],[11,"deserialize_tuple","","",37,[[["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",37,[[["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",37,[[["v"]],["result"]]],[11,"deserialize_struct","","",37,[[["str"],["v"]],["result"]]],[11,"deserialize_enum","","",37,[[["str"],["v"]],["result"]]],[11,"deserialize_identifier","","",37,[[["v"]],["result"]]],[11,"deserialize_ignored_any","","",37,[[["v"]],["result"]]],[11,"deserialize_any","","",37,[[["v"]],["result"]]],[11,"deserialize_bool","","",38,[[["v"]],["result"]]],[11,"deserialize_i8","","",38,[[["v"]],["result"]]],[11,"deserialize_i16","","",38,[[["v"]],["result"]]],[11,"deserialize_i32","","",38,[[["v"]],["result"]]],[11,"deserialize_i64","","",38,[[["v"]],["result"]]],[11,"deserialize_i128","","",38,[[["v"]],["result"]]],[11,"deserialize_u8","","",38,[[["v"]],["result"]]],[11,"deserialize_u16","","",38,[[["v"]],["result"]]],[11,"deserialize_u32","","",38,[[["v"]],["result"]]],[11,"deserialize_u64","","",38,[[["v"]],["result"]]],[11,"deserialize_u128","","",38,[[["v"]],["result"]]],[11,"deserialize_f32","","",38,[[["v"]],["result"]]],[11,"deserialize_f64","","",38,[[["v"]],["result"]]],[11,"deserialize_char","","",38,[[["v"]],["result"]]],[11,"deserialize_str","","",38,[[["v"]],["result"]]],[11,"deserialize_string","","",38,[[["v"]],["result"]]],[11,"deserialize_bytes","","",38,[[["v"]],["result"]]],[11,"deserialize_byte_buf","","",38,[[["v"]],["result"]]],[11,"deserialize_option","","",38,[[["v"]],["result"]]],[11,"deserialize_unit","","",38,[[["v"]],["result"]]],[11,"deserialize_unit_struct","","",38,[[["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",38,[[["str"],["v"]],["result"]]],[11,"deserialize_seq","","",38,[[["v"]],["result"]]],[11,"deserialize_tuple","","",38,[[["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",38,[[["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",38,[[["v"]],["result"]]],[11,"deserialize_struct","","",38,[[["str"],["v"]],["result"]]],[11,"deserialize_enum","","",38,[[["str"],["v"]],["result"]]],[11,"deserialize_identifier","","",38,[[["v"]],["result"]]],[11,"deserialize_ignored_any","","",38,[[["v"]],["result"]]],[11,"deserialize_any","","",38,[[["v"]],["result"]]],[11,"deserialize_bool","","",39,[[["v"]],["result"]]],[11,"deserialize_i8","","",39,[[["v"]],["result"]]],[11,"deserialize_i16","","",39,[[["v"]],["result"]]],[11,"deserialize_i32","","",39,[[["v"]],["result"]]],[11,"deserialize_i64","","",39,[[["v"]],["result"]]],[11,"deserialize_i128","","",39,[[["v"]],["result"]]],[11,"deserialize_u8","","",39,[[["v"]],["result"]]],[11,"deserialize_u16","","",39,[[["v"]],["result"]]],[11,"deserialize_u32","","",39,[[["v"]],["result"]]],[11,"deserialize_u64","","",39,[[["v"]],["result"]]],[11,"deserialize_u128","","",39,[[["v"]],["result"]]],[11,"deserialize_f32","","",39,[[["v"]],["result"]]],[11,"deserialize_f64","","",39,[[["v"]],["result"]]],[11,"deserialize_char","","",39,[[["v"]],["result"]]],[11,"deserialize_str","","",39,[[["v"]],["result"]]],[11,"deserialize_string","","",39,[[["v"]],["result"]]],[11,"deserialize_bytes","","",39,[[["v"]],["result"]]],[11,"deserialize_byte_buf","","",39,[[["v"]],["result"]]],[11,"deserialize_option","","",39,[[["v"]],["result"]]],[11,"deserialize_unit","","",39,[[["v"]],["result"]]],[11,"deserialize_unit_struct","","",39,[[["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",39,[[["str"],["v"]],["result"]]],[11,"deserialize_seq","","",39,[[["v"]],["result"]]],[11,"deserialize_tuple","","",39,[[["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",39,[[["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",39,[[["v"]],["result"]]],[11,"deserialize_struct","","",39,[[["str"],["v"]],["result"]]],[11,"deserialize_enum","","",39,[[["str"],["v"]],["result"]]],[11,"deserialize_identifier","","",39,[[["v"]],["result"]]],[11,"deserialize_ignored_any","","",39,[[["v"]],["result"]]],[11,"deserialize_any","","",39,[[["v"]],["result"]]],[11,"deserialize_bool","","",40,[[["v"]],["result"]]],[11,"deserialize_i8","","",40,[[["v"]],["result"]]],[11,"deserialize_i16","","",40,[[["v"]],["result"]]],[11,"deserialize_i32","","",40,[[["v"]],["result"]]],[11,"deserialize_i64","","",40,[[["v"]],["result"]]],[11,"deserialize_i128","","",40,[[["v"]],["result"]]],[11,"deserialize_u8","","",40,[[["v"]],["result"]]],[11,"deserialize_u16","","",40,[[["v"]],["result"]]],[11,"deserialize_u32","","",40,[[["v"]],["result"]]],[11,"deserialize_u64","","",40,[[["v"]],["result"]]],[11,"deserialize_u128","","",40,[[["v"]],["result"]]],[11,"deserialize_f32","","",40,[[["v"]],["result"]]],[11,"deserialize_f64","","",40,[[["v"]],["result"]]],[11,"deserialize_char","","",40,[[["v"]],["result"]]],[11,"deserialize_str","","",40,[[["v"]],["result"]]],[11,"deserialize_string","","",40,[[["v"]],["result"]]],[11,"deserialize_bytes","","",40,[[["v"]],["result"]]],[11,"deserialize_byte_buf","","",40,[[["v"]],["result"]]],[11,"deserialize_option","","",40,[[["v"]],["result"]]],[11,"deserialize_unit","","",40,[[["v"]],["result"]]],[11,"deserialize_unit_struct","","",40,[[["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",40,[[["str"],["v"]],["result"]]],[11,"deserialize_seq","","",40,[[["v"]],["result"]]],[11,"deserialize_tuple","","",40,[[["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",40,[[["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",40,[[["v"]],["result"]]],[11,"deserialize_struct","","",40,[[["str"],["v"]],["result"]]],[11,"deserialize_enum","","",40,[[["str"],["v"]],["result"]]],[11,"deserialize_identifier","","",40,[[["v"]],["result"]]],[11,"deserialize_ignored_any","","",40,[[["v"]],["result"]]],[11,"deserialize_any","","",40,[[["v"]],["result"]]],[11,"deserialize_bool","","",41,[[["v"]],["result"]]],[11,"deserialize_i8","","",41,[[["v"]],["result"]]],[11,"deserialize_i16","","",41,[[["v"]],["result"]]],[11,"deserialize_i32","","",41,[[["v"]],["result"]]],[11,"deserialize_i64","","",41,[[["v"]],["result"]]],[11,"deserialize_i128","","",41,[[["v"]],["result"]]],[11,"deserialize_u8","","",41,[[["v"]],["result"]]],[11,"deserialize_u16","","",41,[[["v"]],["result"]]],[11,"deserialize_u32","","",41,[[["v"]],["result"]]],[11,"deserialize_u64","","",41,[[["v"]],["result"]]],[11,"deserialize_u128","","",41,[[["v"]],["result"]]],[11,"deserialize_f32","","",41,[[["v"]],["result"]]],[11,"deserialize_f64","","",41,[[["v"]],["result"]]],[11,"deserialize_char","","",41,[[["v"]],["result"]]],[11,"deserialize_str","","",41,[[["v"]],["result"]]],[11,"deserialize_string","","",41,[[["v"]],["result"]]],[11,"deserialize_bytes","","",41,[[["v"]],["result"]]],[11,"deserialize_byte_buf","","",41,[[["v"]],["result"]]],[11,"deserialize_option","","",41,[[["v"]],["result"]]],[11,"deserialize_unit","","",41,[[["v"]],["result"]]],[11,"deserialize_unit_struct","","",41,[[["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",41,[[["str"],["v"]],["result"]]],[11,"deserialize_seq","","",41,[[["v"]],["result"]]],[11,"deserialize_tuple","","",41,[[["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",41,[[["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",41,[[["v"]],["result"]]],[11,"deserialize_struct","","",41,[[["str"],["v"]],["result"]]],[11,"deserialize_enum","","",41,[[["str"],["v"]],["result"]]],[11,"deserialize_identifier","","",41,[[["v"]],["result"]]],[11,"deserialize_ignored_any","","",41,[[["v"]],["result"]]],[11,"deserialize_any","","",41,[[["v"]],["result"]]],[11,"deserialize_bool","","",42,[[["v"]],["result"]]],[11,"deserialize_i8","","",42,[[["v"]],["result"]]],[11,"deserialize_i16","","",42,[[["v"]],["result"]]],[11,"deserialize_i32","","",42,[[["v"]],["result"]]],[11,"deserialize_i64","","",42,[[["v"]],["result"]]],[11,"deserialize_i128","","",42,[[["v"]],["result"]]],[11,"deserialize_u8","","",42,[[["v"]],["result"]]],[11,"deserialize_u16","","",42,[[["v"]],["result"]]],[11,"deserialize_u32","","",42,[[["v"]],["result"]]],[11,"deserialize_u64","","",42,[[["v"]],["result"]]],[11,"deserialize_u128","","",42,[[["v"]],["result"]]],[11,"deserialize_f32","","",42,[[["v"]],["result"]]],[11,"deserialize_f64","","",42,[[["v"]],["result"]]],[11,"deserialize_char","","",42,[[["v"]],["result"]]],[11,"deserialize_str","","",42,[[["v"]],["result"]]],[11,"deserialize_string","","",42,[[["v"]],["result"]]],[11,"deserialize_bytes","","",42,[[["v"]],["result"]]],[11,"deserialize_byte_buf","","",42,[[["v"]],["result"]]],[11,"deserialize_option","","",42,[[["v"]],["result"]]],[11,"deserialize_unit","","",42,[[["v"]],["result"]]],[11,"deserialize_unit_struct","","",42,[[["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",42,[[["str"],["v"]],["result"]]],[11,"deserialize_seq","","",42,[[["v"]],["result"]]],[11,"deserialize_tuple","","",42,[[["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",42,[[["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",42,[[["v"]],["result"]]],[11,"deserialize_struct","","",42,[[["str"],["v"]],["result"]]],[11,"deserialize_enum","","",42,[[["str"],["v"]],["result"]]],[11,"deserialize_identifier","","",42,[[["v"]],["result"]]],[11,"deserialize_ignored_any","","",42,[[["v"]],["result"]]],[11,"deserialize_any","","",42,[[["v"]],["result"]]],[11,"deserialize_bool","","",43,[[["v"]],["result"]]],[11,"deserialize_i8","","",43,[[["v"]],["result"]]],[11,"deserialize_i16","","",43,[[["v"]],["result"]]],[11,"deserialize_i32","","",43,[[["v"]],["result"]]],[11,"deserialize_i64","","",43,[[["v"]],["result"]]],[11,"deserialize_i128","","",43,[[["v"]],["result"]]],[11,"deserialize_u8","","",43,[[["v"]],["result"]]],[11,"deserialize_u16","","",43,[[["v"]],["result"]]],[11,"deserialize_u32","","",43,[[["v"]],["result"]]],[11,"deserialize_u64","","",43,[[["v"]],["result"]]],[11,"deserialize_u128","","",43,[[["v"]],["result"]]],[11,"deserialize_f32","","",43,[[["v"]],["result"]]],[11,"deserialize_f64","","",43,[[["v"]],["result"]]],[11,"deserialize_char","","",43,[[["v"]],["result"]]],[11,"deserialize_str","","",43,[[["v"]],["result"]]],[11,"deserialize_string","","",43,[[["v"]],["result"]]],[11,"deserialize_bytes","","",43,[[["v"]],["result"]]],[11,"deserialize_byte_buf","","",43,[[["v"]],["result"]]],[11,"deserialize_option","","",43,[[["v"]],["result"]]],[11,"deserialize_unit","","",43,[[["v"]],["result"]]],[11,"deserialize_unit_struct","","",43,[[["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",43,[[["str"],["v"]],["result"]]],[11,"deserialize_seq","","",43,[[["v"]],["result"]]],[11,"deserialize_tuple","","",43,[[["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",43,[[["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",43,[[["v"]],["result"]]],[11,"deserialize_struct","","",43,[[["str"],["v"]],["result"]]],[11,"deserialize_enum","","",43,[[["str"],["v"]],["result"]]],[11,"deserialize_identifier","","",43,[[["v"]],["result"]]],[11,"deserialize_ignored_any","","",43,[[["v"]],["result"]]],[11,"deserialize_any","","",43,[[["v"]],["result"]]],[11,"deserialize_bool","","",44,[[["v"]],["result"]]],[11,"deserialize_i8","","",44,[[["v"]],["result"]]],[11,"deserialize_i16","","",44,[[["v"]],["result"]]],[11,"deserialize_i32","","",44,[[["v"]],["result"]]],[11,"deserialize_i64","","",44,[[["v"]],["result"]]],[11,"deserialize_i128","","",44,[[["v"]],["result"]]],[11,"deserialize_u8","","",44,[[["v"]],["result"]]],[11,"deserialize_u16","","",44,[[["v"]],["result"]]],[11,"deserialize_u32","","",44,[[["v"]],["result"]]],[11,"deserialize_u64","","",44,[[["v"]],["result"]]],[11,"deserialize_u128","","",44,[[["v"]],["result"]]],[11,"deserialize_f32","","",44,[[["v"]],["result"]]],[11,"deserialize_f64","","",44,[[["v"]],["result"]]],[11,"deserialize_char","","",44,[[["v"]],["result"]]],[11,"deserialize_str","","",44,[[["v"]],["result"]]],[11,"deserialize_string","","",44,[[["v"]],["result"]]],[11,"deserialize_bytes","","",44,[[["v"]],["result"]]],[11,"deserialize_byte_buf","","",44,[[["v"]],["result"]]],[11,"deserialize_option","","",44,[[["v"]],["result"]]],[11,"deserialize_unit","","",44,[[["v"]],["result"]]],[11,"deserialize_unit_struct","","",44,[[["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",44,[[["str"],["v"]],["result"]]],[11,"deserialize_seq","","",44,[[["v"]],["result"]]],[11,"deserialize_tuple","","",44,[[["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",44,[[["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",44,[[["v"]],["result"]]],[11,"deserialize_struct","","",44,[[["str"],["v"]],["result"]]],[11,"deserialize_enum","","",44,[[["str"],["v"]],["result"]]],[11,"deserialize_identifier","","",44,[[["v"]],["result"]]],[11,"deserialize_ignored_any","","",44,[[["v"]],["result"]]],[11,"deserialize_any","","",44,[[["v"]],["result"]]],[11,"deserialize_bool","","",45,[[["v"]],["result"]]],[11,"deserialize_i8","","",45,[[["v"]],["result"]]],[11,"deserialize_i16","","",45,[[["v"]],["result"]]],[11,"deserialize_i32","","",45,[[["v"]],["result"]]],[11,"deserialize_i64","","",45,[[["v"]],["result"]]],[11,"deserialize_i128","","",45,[[["v"]],["result"]]],[11,"deserialize_u8","","",45,[[["v"]],["result"]]],[11,"deserialize_u16","","",45,[[["v"]],["result"]]],[11,"deserialize_u32","","",45,[[["v"]],["result"]]],[11,"deserialize_u64","","",45,[[["v"]],["result"]]],[11,"deserialize_u128","","",45,[[["v"]],["result"]]],[11,"deserialize_f32","","",45,[[["v"]],["result"]]],[11,"deserialize_f64","","",45,[[["v"]],["result"]]],[11,"deserialize_char","","",45,[[["v"]],["result"]]],[11,"deserialize_str","","",45,[[["v"]],["result"]]],[11,"deserialize_string","","",45,[[["v"]],["result"]]],[11,"deserialize_bytes","","",45,[[["v"]],["result"]]],[11,"deserialize_byte_buf","","",45,[[["v"]],["result"]]],[11,"deserialize_option","","",45,[[["v"]],["result"]]],[11,"deserialize_unit","","",45,[[["v"]],["result"]]],[11,"deserialize_unit_struct","","",45,[[["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",45,[[["str"],["v"]],["result"]]],[11,"deserialize_seq","","",45,[[["v"]],["result"]]],[11,"deserialize_tuple","","",45,[[["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",45,[[["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",45,[[["v"]],["result"]]],[11,"deserialize_struct","","",45,[[["str"],["v"]],["result"]]],[11,"deserialize_enum","","",45,[[["str"],["v"]],["result"]]],[11,"deserialize_identifier","","",45,[[["v"]],["result"]]],[11,"deserialize_ignored_any","","",45,[[["v"]],["result"]]],[11,"deserialize_any","","",45,[[["v"]],["result"]]],[11,"deserialize_bool","","",46,[[["v"]],["result"]]],[11,"deserialize_i8","","",46,[[["v"]],["result"]]],[11,"deserialize_i16","","",46,[[["v"]],["result"]]],[11,"deserialize_i32","","",46,[[["v"]],["result"]]],[11,"deserialize_i64","","",46,[[["v"]],["result"]]],[11,"deserialize_i128","","",46,[[["v"]],["result"]]],[11,"deserialize_u8","","",46,[[["v"]],["result"]]],[11,"deserialize_u16","","",46,[[["v"]],["result"]]],[11,"deserialize_u32","","",46,[[["v"]],["result"]]],[11,"deserialize_u64","","",46,[[["v"]],["result"]]],[11,"deserialize_u128","","",46,[[["v"]],["result"]]],[11,"deserialize_f32","","",46,[[["v"]],["result"]]],[11,"deserialize_f64","","",46,[[["v"]],["result"]]],[11,"deserialize_char","","",46,[[["v"]],["result"]]],[11,"deserialize_str","","",46,[[["v"]],["result"]]],[11,"deserialize_string","","",46,[[["v"]],["result"]]],[11,"deserialize_bytes","","",46,[[["v"]],["result"]]],[11,"deserialize_byte_buf","","",46,[[["v"]],["result"]]],[11,"deserialize_option","","",46,[[["v"]],["result"]]],[11,"deserialize_unit","","",46,[[["v"]],["result"]]],[11,"deserialize_unit_struct","","",46,[[["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",46,[[["str"],["v"]],["result"]]],[11,"deserialize_seq","","",46,[[["v"]],["result"]]],[11,"deserialize_tuple","","",46,[[["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",46,[[["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",46,[[["v"]],["result"]]],[11,"deserialize_struct","","",46,[[["str"],["v"]],["result"]]],[11,"deserialize_identifier","","",46,[[["v"]],["result"]]],[11,"deserialize_ignored_any","","",46,[[["v"]],["result"]]],[11,"deserialize_any","","",46,[[["v"]],["result"]]],[11,"deserialize_enum","","",46,[[["str"],["v"]],["result"]]],[11,"deserialize_any","","",47,[[["v"]],["result"]]],[11,"deserialize_enum","","",47,[[["str"],["v"]],["result"]]],[11,"deserialize_bool","","",47,[[["v"]],["result"]]],[11,"deserialize_i8","","",47,[[["v"]],["result"]]],[11,"deserialize_i16","","",47,[[["v"]],["result"]]],[11,"deserialize_i32","","",47,[[["v"]],["result"]]],[11,"deserialize_i64","","",47,[[["v"]],["result"]]],[11,"deserialize_i128","","",47,[[["v"]],["result"]]],[11,"deserialize_u8","","",47,[[["v"]],["result"]]],[11,"deserialize_u16","","",47,[[["v"]],["result"]]],[11,"deserialize_u32","","",47,[[["v"]],["result"]]],[11,"deserialize_u64","","",47,[[["v"]],["result"]]],[11,"deserialize_u128","","",47,[[["v"]],["result"]]],[11,"deserialize_f32","","",47,[[["v"]],["result"]]],[11,"deserialize_f64","","",47,[[["v"]],["result"]]],[11,"deserialize_char","","",47,[[["v"]],["result"]]],[11,"deserialize_str","","",47,[[["v"]],["result"]]],[11,"deserialize_string","","",47,[[["v"]],["result"]]],[11,"deserialize_bytes","","",47,[[["v"]],["result"]]],[11,"deserialize_byte_buf","","",47,[[["v"]],["result"]]],[11,"deserialize_option","","",47,[[["v"]],["result"]]],[11,"deserialize_unit","","",47,[[["v"]],["result"]]],[11,"deserialize_unit_struct","","",47,[[["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",47,[[["str"],["v"]],["result"]]],[11,"deserialize_seq","","",47,[[["v"]],["result"]]],[11,"deserialize_tuple","","",47,[[["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",47,[[["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",47,[[["v"]],["result"]]],[11,"deserialize_struct","","",47,[[["str"],["v"]],["result"]]],[11,"deserialize_identifier","","",47,[[["v"]],["result"]]],[11,"deserialize_ignored_any","","",47,[[["v"]],["result"]]],[11,"deserialize_any","","",1,[[["v"]],["result"]]],[11,"deserialize_enum","","",1,[[["str"],["v"]],["result"]]],[11,"deserialize_bool","","",1,[[["v"]],["result"]]],[11,"deserialize_i8","","",1,[[["v"]],["result"]]],[11,"deserialize_i16","","",1,[[["v"]],["result"]]],[11,"deserialize_i32","","",1,[[["v"]],["result"]]],[11,"deserialize_i64","","",1,[[["v"]],["result"]]],[11,"deserialize_i128","","",1,[[["v"]],["result"]]],[11,"deserialize_u8","","",1,[[["v"]],["result"]]],[11,"deserialize_u16","","",1,[[["v"]],["result"]]],[11,"deserialize_u32","","",1,[[["v"]],["result"]]],[11,"deserialize_u64","","",1,[[["v"]],["result"]]],[11,"deserialize_u128","","",1,[[["v"]],["result"]]],[11,"deserialize_f32","","",1,[[["v"]],["result"]]],[11,"deserialize_f64","","",1,[[["v"]],["result"]]],[11,"deserialize_char","","",1,[[["v"]],["result"]]],[11,"deserialize_str","","",1,[[["v"]],["result"]]],[11,"deserialize_string","","",1,[[["v"]],["result"]]],[11,"deserialize_bytes","","",1,[[["v"]],["result"]]],[11,"deserialize_byte_buf","","",1,[[["v"]],["result"]]],[11,"deserialize_option","","",1,[[["v"]],["result"]]],[11,"deserialize_unit","","",1,[[["v"]],["result"]]],[11,"deserialize_unit_struct","","",1,[[["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",1,[[["str"],["v"]],["result"]]],[11,"deserialize_seq","","",1,[[["v"]],["result"]]],[11,"deserialize_tuple","","",1,[[["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",1,[[["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",1,[[["v"]],["result"]]],[11,"deserialize_struct","","",1,[[["str"],["v"]],["result"]]],[11,"deserialize_identifier","","",1,[[["v"]],["result"]]],[11,"deserialize_ignored_any","","",1,[[["v"]],["result"]]],[11,"deserialize_any","","",48,[[["v"]],["result"]]],[11,"deserialize_enum","","",48,[[["str"],["v"]],["result"]]],[11,"deserialize_bool","","",48,[[["v"]],["result"]]],[11,"deserialize_i8","","",48,[[["v"]],["result"]]],[11,"deserialize_i16","","",48,[[["v"]],["result"]]],[11,"deserialize_i32","","",48,[[["v"]],["result"]]],[11,"deserialize_i64","","",48,[[["v"]],["result"]]],[11,"deserialize_i128","","",48,[[["v"]],["result"]]],[11,"deserialize_u8","","",48,[[["v"]],["result"]]],[11,"deserialize_u16","","",48,[[["v"]],["result"]]],[11,"deserialize_u32","","",48,[[["v"]],["result"]]],[11,"deserialize_u64","","",48,[[["v"]],["result"]]],[11,"deserialize_u128","","",48,[[["v"]],["result"]]],[11,"deserialize_f32","","",48,[[["v"]],["result"]]],[11,"deserialize_f64","","",48,[[["v"]],["result"]]],[11,"deserialize_char","","",48,[[["v"]],["result"]]],[11,"deserialize_str","","",48,[[["v"]],["result"]]],[11,"deserialize_string","","",48,[[["v"]],["result"]]],[11,"deserialize_bytes","","",48,[[["v"]],["result"]]],[11,"deserialize_byte_buf","","",48,[[["v"]],["result"]]],[11,"deserialize_option","","",48,[[["v"]],["result"]]],[11,"deserialize_unit","","",48,[[["v"]],["result"]]],[11,"deserialize_unit_struct","","",48,[[["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",48,[[["str"],["v"]],["result"]]],[11,"deserialize_seq","","",48,[[["v"]],["result"]]],[11,"deserialize_tuple","","",48,[[["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",48,[[["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",48,[[["v"]],["result"]]],[11,"deserialize_struct","","",48,[[["str"],["v"]],["result"]]],[11,"deserialize_identifier","","",48,[[["v"]],["result"]]],[11,"deserialize_ignored_any","","",48,[[["v"]],["result"]]],[11,"deserialize_any","","",49,[[["v"]],["result"]]],[11,"deserialize_enum","","",49,[[["str"],["v"]],["result"]]],[11,"deserialize_bool","","",49,[[["v"]],["result"]]],[11,"deserialize_i8","","",49,[[["v"]],["result"]]],[11,"deserialize_i16","","",49,[[["v"]],["result"]]],[11,"deserialize_i32","","",49,[[["v"]],["result"]]],[11,"deserialize_i64","","",49,[[["v"]],["result"]]],[11,"deserialize_i128","","",49,[[["v"]],["result"]]],[11,"deserialize_u8","","",49,[[["v"]],["result"]]],[11,"deserialize_u16","","",49,[[["v"]],["result"]]],[11,"deserialize_u32","","",49,[[["v"]],["result"]]],[11,"deserialize_u64","","",49,[[["v"]],["result"]]],[11,"deserialize_u128","","",49,[[["v"]],["result"]]],[11,"deserialize_f32","","",49,[[["v"]],["result"]]],[11,"deserialize_f64","","",49,[[["v"]],["result"]]],[11,"deserialize_char","","",49,[[["v"]],["result"]]],[11,"deserialize_str","","",49,[[["v"]],["result"]]],[11,"deserialize_string","","",49,[[["v"]],["result"]]],[11,"deserialize_bytes","","",49,[[["v"]],["result"]]],[11,"deserialize_byte_buf","","",49,[[["v"]],["result"]]],[11,"deserialize_option","","",49,[[["v"]],["result"]]],[11,"deserialize_unit","","",49,[[["v"]],["result"]]],[11,"deserialize_unit_struct","","",49,[[["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",49,[[["str"],["v"]],["result"]]],[11,"deserialize_seq","","",49,[[["v"]],["result"]]],[11,"deserialize_tuple","","",49,[[["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",49,[[["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",49,[[["v"]],["result"]]],[11,"deserialize_struct","","",49,[[["str"],["v"]],["result"]]],[11,"deserialize_identifier","","",49,[[["v"]],["result"]]],[11,"deserialize_ignored_any","","",49,[[["v"]],["result"]]],[11,"deserialize_any","","",2,[[["v"]],["result"]]],[11,"deserialize_bool","","",2,[[["v"]],["result"]]],[11,"deserialize_i8","","",2,[[["v"]],["result"]]],[11,"deserialize_i16","","",2,[[["v"]],["result"]]],[11,"deserialize_i32","","",2,[[["v"]],["result"]]],[11,"deserialize_i64","","",2,[[["v"]],["result"]]],[11,"deserialize_i128","","",2,[[["v"]],["result"]]],[11,"deserialize_u8","","",2,[[["v"]],["result"]]],[11,"deserialize_u16","","",2,[[["v"]],["result"]]],[11,"deserialize_u32","","",2,[[["v"]],["result"]]],[11,"deserialize_u64","","",2,[[["v"]],["result"]]],[11,"deserialize_u128","","",2,[[["v"]],["result"]]],[11,"deserialize_f32","","",2,[[["v"]],["result"]]],[11,"deserialize_f64","","",2,[[["v"]],["result"]]],[11,"deserialize_char","","",2,[[["v"]],["result"]]],[11,"deserialize_str","","",2,[[["v"]],["result"]]],[11,"deserialize_string","","",2,[[["v"]],["result"]]],[11,"deserialize_bytes","","",2,[[["v"]],["result"]]],[11,"deserialize_byte_buf","","",2,[[["v"]],["result"]]],[11,"deserialize_option","","",2,[[["v"]],["result"]]],[11,"deserialize_unit","","",2,[[["v"]],["result"]]],[11,"deserialize_unit_struct","","",2,[[["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",2,[[["str"],["v"]],["result"]]],[11,"deserialize_seq","","",2,[[["v"]],["result"]]],[11,"deserialize_tuple","","",2,[[["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",2,[[["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",2,[[["v"]],["result"]]],[11,"deserialize_struct","","",2,[[["str"],["v"]],["result"]]],[11,"deserialize_identifier","","",2,[[["v"]],["result"]]],[11,"deserialize_ignored_any","","",2,[[["v"]],["result"]]],[11,"deserialize_enum","","",2,[[["str"],["v"]],["result"]]],[11,"deserialize_any","","",3,[[["v"]],["result"]]],[11,"deserialize_bool","","",3,[[["v"]],["result"]]],[11,"deserialize_i8","","",3,[[["v"]],["result"]]],[11,"deserialize_i16","","",3,[[["v"]],["result"]]],[11,"deserialize_i32","","",3,[[["v"]],["result"]]],[11,"deserialize_i64","","",3,[[["v"]],["result"]]],[11,"deserialize_i128","","",3,[[["v"]],["result"]]],[11,"deserialize_u8","","",3,[[["v"]],["result"]]],[11,"deserialize_u16","","",3,[[["v"]],["result"]]],[11,"deserialize_u32","","",3,[[["v"]],["result"]]],[11,"deserialize_u64","","",3,[[["v"]],["result"]]],[11,"deserialize_u128","","",3,[[["v"]],["result"]]],[11,"deserialize_f32","","",3,[[["v"]],["result"]]],[11,"deserialize_f64","","",3,[[["v"]],["result"]]],[11,"deserialize_char","","",3,[[["v"]],["result"]]],[11,"deserialize_str","","",3,[[["v"]],["result"]]],[11,"deserialize_string","","",3,[[["v"]],["result"]]],[11,"deserialize_bytes","","",3,[[["v"]],["result"]]],[11,"deserialize_byte_buf","","",3,[[["v"]],["result"]]],[11,"deserialize_option","","",3,[[["v"]],["result"]]],[11,"deserialize_unit","","",3,[[["v"]],["result"]]],[11,"deserialize_unit_struct","","",3,[[["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",3,[[["str"],["v"]],["result"]]],[11,"deserialize_seq","","",3,[[["v"]],["result"]]],[11,"deserialize_tuple","","",3,[[["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",3,[[["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",3,[[["v"]],["result"]]],[11,"deserialize_struct","","",3,[[["str"],["v"]],["result"]]],[11,"deserialize_enum","","",3,[[["str"],["v"]],["result"]]],[11,"deserialize_identifier","","",3,[[["v"]],["result"]]],[11,"deserialize_ignored_any","","",3,[[["v"]],["result"]]],[11,"deserialize_any","","",4,[[["v"]],["result"]]],[11,"deserialize_bool","","",4,[[["v"]],["result"]]],[11,"deserialize_i8","","",4,[[["v"]],["result"]]],[11,"deserialize_i16","","",4,[[["v"]],["result"]]],[11,"deserialize_i32","","",4,[[["v"]],["result"]]],[11,"deserialize_i64","","",4,[[["v"]],["result"]]],[11,"deserialize_i128","","",4,[[["v"]],["result"]]],[11,"deserialize_u8","","",4,[[["v"]],["result"]]],[11,"deserialize_u16","","",4,[[["v"]],["result"]]],[11,"deserialize_u32","","",4,[[["v"]],["result"]]],[11,"deserialize_u64","","",4,[[["v"]],["result"]]],[11,"deserialize_u128","","",4,[[["v"]],["result"]]],[11,"deserialize_f32","","",4,[[["v"]],["result"]]],[11,"deserialize_f64","","",4,[[["v"]],["result"]]],[11,"deserialize_char","","",4,[[["v"]],["result"]]],[11,"deserialize_str","","",4,[[["v"]],["result"]]],[11,"deserialize_string","","",4,[[["v"]],["result"]]],[11,"deserialize_bytes","","",4,[[["v"]],["result"]]],[11,"deserialize_byte_buf","","",4,[[["v"]],["result"]]],[11,"deserialize_option","","",4,[[["v"]],["result"]]],[11,"deserialize_unit","","",4,[[["v"]],["result"]]],[11,"deserialize_unit_struct","","",4,[[["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",4,[[["str"],["v"]],["result"]]],[11,"deserialize_seq","","",4,[[["v"]],["result"]]],[11,"deserialize_tuple","","",4,[[["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",4,[[["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",4,[[["v"]],["result"]]],[11,"deserialize_struct","","",4,[[["str"],["v"]],["result"]]],[11,"deserialize_enum","","",4,[[["str"],["v"]],["result"]]],[11,"deserialize_identifier","","",4,[[["v"]],["result"]]],[11,"deserialize_ignored_any","","",4,[[["v"]],["result"]]],[11,"deserialize_any","","",5,[[["v"]],["result"]]],[11,"deserialize_seq","","",5,[[["v"]],["result"]]],[11,"deserialize_tuple","","",5,[[["usize"],["v"]],["result"]]],[11,"deserialize_bool","","",5,[[["v"]],["result"]]],[11,"deserialize_i8","","",5,[[["v"]],["result"]]],[11,"deserialize_i16","","",5,[[["v"]],["result"]]],[11,"deserialize_i32","","",5,[[["v"]],["result"]]],[11,"deserialize_i64","","",5,[[["v"]],["result"]]],[11,"deserialize_i128","","",5,[[["v"]],["result"]]],[11,"deserialize_u8","","",5,[[["v"]],["result"]]],[11,"deserialize_u16","","",5,[[["v"]],["result"]]],[11,"deserialize_u32","","",5,[[["v"]],["result"]]],[11,"deserialize_u64","","",5,[[["v"]],["result"]]],[11,"deserialize_u128","","",5,[[["v"]],["result"]]],[11,"deserialize_f32","","",5,[[["v"]],["result"]]],[11,"deserialize_f64","","",5,[[["v"]],["result"]]],[11,"deserialize_char","","",5,[[["v"]],["result"]]],[11,"deserialize_str","","",5,[[["v"]],["result"]]],[11,"deserialize_string","","",5,[[["v"]],["result"]]],[11,"deserialize_bytes","","",5,[[["v"]],["result"]]],[11,"deserialize_byte_buf","","",5,[[["v"]],["result"]]],[11,"deserialize_option","","",5,[[["v"]],["result"]]],[11,"deserialize_unit","","",5,[[["v"]],["result"]]],[11,"deserialize_unit_struct","","",5,[[["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",5,[[["str"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",5,[[["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",5,[[["v"]],["result"]]],[11,"deserialize_struct","","",5,[[["str"],["v"]],["result"]]],[11,"deserialize_enum","","",5,[[["str"],["v"]],["result"]]],[11,"deserialize_identifier","","",5,[[["v"]],["result"]]],[11,"deserialize_ignored_any","","",5,[[["v"]],["result"]]],[11,"deserialize_any","","",6,[[["v"]],["result"]]],[11,"deserialize_enum","","",6,[[["str"],["v"]],["result"]]],[11,"deserialize_bool","","",6,[[["v"]],["result"]]],[11,"deserialize_i8","","",6,[[["v"]],["result"]]],[11,"deserialize_i16","","",6,[[["v"]],["result"]]],[11,"deserialize_i32","","",6,[[["v"]],["result"]]],[11,"deserialize_i64","","",6,[[["v"]],["result"]]],[11,"deserialize_i128","","",6,[[["v"]],["result"]]],[11,"deserialize_u8","","",6,[[["v"]],["result"]]],[11,"deserialize_u16","","",6,[[["v"]],["result"]]],[11,"deserialize_u32","","",6,[[["v"]],["result"]]],[11,"deserialize_u64","","",6,[[["v"]],["result"]]],[11,"deserialize_u128","","",6,[[["v"]],["result"]]],[11,"deserialize_f32","","",6,[[["v"]],["result"]]],[11,"deserialize_f64","","",6,[[["v"]],["result"]]],[11,"deserialize_char","","",6,[[["v"]],["result"]]],[11,"deserialize_str","","",6,[[["v"]],["result"]]],[11,"deserialize_string","","",6,[[["v"]],["result"]]],[11,"deserialize_bytes","","",6,[[["v"]],["result"]]],[11,"deserialize_byte_buf","","",6,[[["v"]],["result"]]],[11,"deserialize_option","","",6,[[["v"]],["result"]]],[11,"deserialize_unit","","",6,[[["v"]],["result"]]],[11,"deserialize_unit_struct","","",6,[[["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",6,[[["str"],["v"]],["result"]]],[11,"deserialize_seq","","",6,[[["v"]],["result"]]],[11,"deserialize_tuple","","",6,[[["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",6,[[["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",6,[[["v"]],["result"]]],[11,"deserialize_struct","","",6,[[["str"],["v"]],["result"]]],[11,"deserialize_identifier","","",6,[[["v"]],["result"]]],[11,"deserialize_ignored_any","","",6,[[["v"]],["result"]]],[11,"expecting","serde::de","",28,[[["formatter"],["self"]],["result"]]],[11,"visit_bool","","",28,[[["bool"]],["result"]]],[11,"visit_i64","","",28,[[["i64"]],["result"]]],[11,"visit_u64","","",28,[[["u64"]],["result"]]],[11,"visit_f64","","",28,[[["f64"]],["result"]]],[11,"visit_str","","",28,[[["str"]],["result"]]],[11,"visit_none","","",28,[[],["result"]]],[11,"visit_some","","",28,[[["d"]],["result"]]],[11,"visit_newtype_struct","","",28,[[["d"]],["result"]]],[11,"visit_unit","","",28,[[],["result"]]],[11,"visit_seq","","",28,[[["a"]],["result"]]],[11,"visit_map","","",28,[[["a"]],["result"]]],[11,"visit_bytes","","",28,[[],["result"]]],[11,"visit_enum","","",28,[[["a"]],["result"]]],[11,"next_element_seed","serde::de::value","",3,[[["self"],["v"]],[["option"],["result",["option"]]]]],[11,"size_hint","","",3,[[["self"]],[["usize"],["option",["usize"]]]]],[11,"next_element_seed","","",5,[[["self"],["t"]],[["option"],["result",["option"]]]]],[11,"size_hint","","",5,[[["self"]],[["usize"],["option",["usize"]]]]],[11,"next_key_seed","","",5,[[["self"],["t"]],[["option"],["result",["option"]]]]],[11,"next_value_seed","","",5,[[["self"],["t"]],["result"]]],[11,"next_entry_seed","","",5,[[["tv"],["self"],["tk"]],[["result",["option"]],["option"]]]],[11,"size_hint","","",5,[[["self"]],[["usize"],["option",["usize"]]]]],[11,"variant_seed","","",46,[[["t"]],["result"]]],[11,"variant_seed","","",47,[[["t"]],["result"]]],[11,"variant_seed","","",1,[[["t"]],["result"]]],[11,"variant_seed","","",48,[[["t"]],["result"]]],[11,"variant_seed","","",49,[[["t"]],["result"]]],[11,"variant_seed","","",6,[[["t"]],["result"]]],[11,"serialize_element","serde::ser","",50,[[["self"],["t"]],["result"]]],[11,"end","","",50,[[],["result"]]],[11,"serialize_element","","",50,[[["self"],["t"]],["result"]]],[11,"end","","",50,[[],["result"]]],[11,"serialize_field","","",50,[[["self"],["t"]],["result"]]],[11,"end","","",50,[[],["result"]]],[11,"serialize_field","","",50,[[["self"],["t"]],["result"]]],[11,"end","","",50,[[],["result"]]],[11,"serialize_key","","",50,[[["self"],["t"]],["result"]]],[11,"serialize_value","","",50,[[["self"],["t"]],["result"]]],[11,"end","","",50,[[],["result"]]],[11,"serialize_field","","",50,[[["self"],["str"],["t"]],["result"]]],[11,"end","","",50,[[],["result"]]],[11,"serialize_field","","",50,[[["self"],["str"],["t"]],["result"]]],[11,"end","","",50,[[],["result"]]],[11,"custom","serde::de::value","",29,[[["t"]],["self"]]],[11,"custom","","",29,[[["t"]],["self"]]],[11,"clone","","",29,[[["self"]],["error"]]],[11,"clone","","",30,[[["self"]],["self"]]],[11,"clone","","",31,[[["self"]],["self"]]],[11,"clone","","",32,[[["self"]],["self"]]],[11,"clone","","",33,[[["self"]],["self"]]],[11,"clone","","",34,[[["self"]],["self"]]],[11,"clone","","",35,[[["self"]],["self"]]],[11,"clone","","",36,[[["self"]],["self"]]],[11,"clone","","",37,[[["self"]],["self"]]],[11,"clone","","",38,[[["self"]],["self"]]],[11,"clone","","",39,[[["self"]],["self"]]],[11,"clone","","",40,[[["self"]],["self"]]],[11,"clone","","",41,[[["self"]],["self"]]],[11,"clone","","",42,[[["self"]],["self"]]],[11,"clone","","",43,[[["self"]],["self"]]],[11,"clone","","",44,[[["self"]],["self"]]],[11,"clone","","",45,[[["self"]],["self"]]],[11,"clone","","",46,[[["self"]],["self"]]],[11,"clone","","",47,[[["self"]],["self"]]],[11,"clone","","",1,[[["self"]],["self"]]],[11,"clone","","",48,[[["self"]],["self"]]],[11,"clone","","",49,[[["self"]],["self"]]],[11,"clone","","",2,[[["self"]],["self"]]],[11,"clone","","",3,[[["self"]],["seqdeserializer"]]],[11,"clone","","",4,[[["self"]],["seqaccessdeserializer"]]],[11,"clone","","",5,[[["self"]],["self"]]],[11,"clone","","",6,[[["self"]],["mapaccessdeserializer"]]],[11,"clone","serde::de","",28,[[["self"]],["ignoredany"]]],[11,"clone","","",0,[[["self"]],["unexpected"]]],[11,"default","","",28,[[],["ignoredany"]]],[11,"eq","serde::de::value","",29,[[["self"],["error"]],["bool"]]],[11,"ne","","",29,[[["self"],["error"]],["bool"]]],[11,"eq","serde::de","",0,[[["unexpected"],["self"]],["bool"]]],[11,"ne","","",0,[[["unexpected"],["self"]],["bool"]]],[11,"fmt","serde::de::value","",29,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",30,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",31,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",32,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",33,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",34,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",35,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",36,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",37,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",38,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",39,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",40,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",41,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",42,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",43,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",44,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",45,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",46,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",47,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",48,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",49,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",6,[[["formatter"],["self"]],["result"]]],[11,"fmt","serde::de","",28,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","serde::de::value","",29,[[["formatter"],["self"]],[["result",["error"]],["error"]]]],[11,"fmt","serde::de","",0,[[["formatter"],["self"]],[["result",["error"]],["error"]]]],[11,"fmt","","",8,[[["formatter"],["self"]],["result"]]],[11,"description","serde::de::value","",29,[[["self"]],["str"]]]],"p":[[4,"Unexpected"],[3,"BorrowedStrDeserializer"],[3,"BorrowedBytesDeserializer"],[3,"SeqDeserializer"],[3,"SeqAccessDeserializer"],[3,"MapDeserializer"],[3,"MapAccessDeserializer"],[8,"Error"],[8,"Expected"],[8,"Deserialize"],[8,"DeserializeSeed"],[8,"Deserializer"],[8,"Visitor"],[8,"SeqAccess"],[8,"MapAccess"],[8,"EnumAccess"],[8,"VariantAccess"],[8,"IntoDeserializer"],[8,"Error"],[8,"Serialize"],[8,"Serializer"],[8,"SerializeSeq"],[8,"SerializeTuple"],[8,"SerializeTupleStruct"],[8,"SerializeTupleVariant"],[8,"SerializeMap"],[8,"SerializeStruct"],[8,"SerializeStructVariant"],[3,"IgnoredAny"],[3,"Error"],[3,"UnitDeserializer"],[3,"BoolDeserializer"],[3,"I8Deserializer"],[3,"I16Deserializer"],[3,"I32Deserializer"],[3,"I64Deserializer"],[3,"IsizeDeserializer"],[3,"U8Deserializer"],[3,"U16Deserializer"],[3,"U64Deserializer"],[3,"UsizeDeserializer"],[3,"F32Deserializer"],[3,"F64Deserializer"],[3,"CharDeserializer"],[3,"I128Deserializer"],[3,"U128Deserializer"],[3,"U32Deserializer"],[3,"StrDeserializer"],[3,"StringDeserializer"],[3,"CowStrDeserializer"],[3,"Impossible"]]};
searchIndex["serde_derive"] = {"doc":"This crate provides Serde's two derive macros.","i":[[24,"Serialize","serde_derive","",null,null],[24,"Deserialize","","",null,null]],"p":[]};
searchIndex["serde_json"] = {"doc":"Serde JSON","i":[[3,"Deserializer","serde_json","A structure that deserializes JSON into Rust values.",null,null],[3,"StreamDeserializer","","Iterator that deserializes a stream into multiple JSON…",null,null],[3,"Error","","This type represents all possible errors that can occur…",null,null],[3,"Serializer","","A structure for serializing Rust values into JSON.",null,null],[3,"Map","","Represents a JSON key/value type.",null,null],[3,"Number","","Represents a JSON number, whether integer or floating point.",null,null],[4,"Value","","Represents any valid JSON value.",null,null],[13,"Null","","Represents a JSON null value.",0,null],[13,"Bool","","Represents a JSON boolean.",0,null],[13,"Number","","Represents a JSON number, whether integer or floating point.",0,null],[13,"String","","Represents a JSON string.",0,null],[13,"Array","","Represents a JSON array.",0,null],[13,"Object","","Represents a JSON object.",0,null],[5,"from_reader","","Deserialize an instance of type `T` from an IO stream of…",null,[[["r"]],["result"]]],[5,"from_slice","","Deserialize an instance of type `T` from bytes of JSON text.",null,[[],["result"]]],[5,"from_str","","Deserialize an instance of type `T` from a string of JSON…",null,[[["str"]],["result"]]],[5,"to_string","","Serialize the given data structure as a String of JSON.",null,[[["t"]],[["result",["string"]],["string"]]]],[5,"to_string_pretty","","Serialize the given data structure as a pretty-printed…",null,[[["t"]],[["result",["string"]],["string"]]]],[5,"to_vec","","Serialize the given data structure as a JSON byte vector.",null,[[["t"]],[["result",["vec"]],["vec",["u8"]]]]],[5,"to_vec_pretty","","Serialize the given data structure as a pretty-printed…",null,[[["t"]],[["result",["vec"]],["vec",["u8"]]]]],[5,"to_writer","","Serialize the given data structure as JSON into the IO…",null,[[["w"],["t"]],["result"]]],[5,"to_writer_pretty","","Serialize the given data structure as pretty-printed JSON…",null,[[["w"],["t"]],["result"]]],[5,"from_value","","Interpret a `serde_json::Value` as an instance of type `T`.",null,[[["value"]],[["error"],["result",["error"]]]]],[5,"to_value","","Convert a `T` into `serde_json::Value` which is an enum…",null,[[["t"]],[["error"],["result",["value","error"]],["value"]]]],[0,"de","","Deserialize JSON data to a Rust data structure.",null,null],[3,"SliceRead","serde_json::de","JSON input source that reads from a slice of bytes.",null,null],[3,"StrRead","","JSON input source that reads from a UTF-8 string.",null,null],[3,"IoRead","","JSON input source that reads from a std::io input stream.",null,null],[3,"Deserializer","","A structure that deserializes JSON into Rust values.",null,null],[3,"StreamDeserializer","","Iterator that deserializes a stream into multiple JSON…",null,null],[5,"from_reader","","Deserialize an instance of type `T` from an IO stream of…",null,[[["r"]],["result"]]],[5,"from_slice","","Deserialize an instance of type `T` from bytes of JSON text.",null,[[],["result"]]],[5,"from_str","","Deserialize an instance of type `T` from a string of JSON…",null,[[["str"]],["result"]]],[8,"Read","","Trait used by the deserializer for iterating over input.…",null,null],[11,"new","","Create a JSON deserializer from one of the possible…",1,[[["r"]],["self"]]],[11,"from_reader","","Creates a JSON deserializer from an `io::Read`.",1,[[["r"]],["self"]]],[11,"from_slice","","Creates a JSON deserializer from a `&[u8]`.",1,[[],["self"]]],[11,"from_str","","Creates a JSON deserializer from a `&str`.",1,[[["str"]],["self"]]],[11,"end","","The `Deserializer::end` method should be called after a…",1,[[["self"]],["result"]]],[11,"into_iter","","Turn a JSON deserializer into an iterator over values of…",1,[[],["streamdeserializer"]]],[11,"new","","Create a JSON stream deserializer from one of the possible…",2,[[["r"]],["self"]]],[11,"byte_offset","","Returns the number of bytes so far deserialized into a…",2,[[["self"]],["usize"]]],[0,"error","serde_json","When serializing or deserializing JSON goes wrong.",null,null],[3,"Error","serde_json::error","This type represents all possible errors that can occur…",null,null],[4,"Category","","Categorizes the cause of a `serde_json::Error`.",null,null],[13,"Io","","The error was caused by a failure to read or write bytes…",3,null],[13,"Syntax","","The error was caused by input that was not syntactically…",3,null],[13,"Data","","The error was caused by input data that was semantically…",3,null],[13,"Eof","","The error was caused by prematurely reaching the end of…",3,null],[6,"Result","","Alias for a `Result` with the error type…",null,null],[11,"line","","One-based line number at which the error was detected.",4,[[["self"]],["usize"]]],[11,"column","","One-based column number at which the error was detected.",4,[[["self"]],["usize"]]],[11,"classify","","Categorizes the cause of this error.",4,[[["self"]],["category"]]],[11,"is_io","","Returns true if this error was caused by a failure to read…",4,[[["self"]],["bool"]]],[11,"is_syntax","","Returns true if this error was caused by input that was…",4,[[["self"]],["bool"]]],[11,"is_data","","Returns true if this error was caused by input data that…",4,[[["self"]],["bool"]]],[11,"is_eof","","Returns true if this error was caused by prematurely…",4,[[["self"]],["bool"]]],[0,"map","serde_json","A map of String to serde_json::Value.",null,null],[3,"Map","serde_json::map","Represents a JSON key/value type.",null,null],[3,"VacantEntry","","A vacant Entry. It is part of the [`Entry`] enum.",null,null],[3,"OccupiedEntry","","An occupied Entry. It is part of the [`Entry`] enum.",null,null],[3,"Iter","","An iterator over a serde_json::Map's entries.",null,null],[3,"IterMut","","A mutable iterator over a serde_json::Map's entries.",null,null],[3,"IntoIter","","An owning iterator over a serde_json::Map's entries.",null,null],[3,"Keys","","An iterator over a serde_json::Map's keys.",null,null],[3,"Values","","An iterator over a serde_json::Map's values.",null,null],[3,"ValuesMut","","A mutable iterator over a serde_json::Map's values.",null,null],[4,"Entry","","A view into a single entry in a map, which may either be…",null,null],[13,"Vacant","","A vacant Entry.",5,null],[13,"Occupied","","An occupied Entry.",5,null],[11,"new","","Makes a new empty Map.",6,[[],["self"]]],[11,"with_capacity","","Makes a new empty Map with the given initial capacity.",6,[[["usize"]],["self"]]],[11,"clear","","Clears the map, removing all values.",6,[[["self"]]]],[11,"get","","Returns a reference to the value corresponding to the key.",6,[[["self"],["q"]],[["value"],["option",["value"]]]]],[11,"contains_key","","Returns true if the map contains a value for the specified…",6,[[["self"],["q"]],["bool"]]],[11,"get_mut","","Returns a mutable reference to the value corresponding to…",6,[[["self"],["q"]],[["option",["value"]],["value"]]]],[11,"insert","","Inserts a key-value pair into the map.",6,[[["self"],["value"],["string"]],[["option",["value"]],["value"]]]],[11,"remove","","Removes a key from the map, returning the value at the key…",6,[[["self"],["q"]],[["option",["value"]],["value"]]]],[11,"append","","Moves all elements from other into Self, leaving other…",6,[[["self"]]]],[11,"entry","","Gets the given key's corresponding entry in the map for…",6,[[["self"],["s"]],["entry"]]],[11,"len","","Returns the number of elements in the map.",6,[[["self"]],["usize"]]],[11,"is_empty","","Returns true if the map contains no elements.",6,[[["self"]],["bool"]]],[11,"iter","","Gets an iterator over the entries of the map.",6,[[["self"]],["iter"]]],[11,"iter_mut","","Gets a mutable iterator over the entries of the map.",6,[[["self"]],["itermut"]]],[11,"keys","","Gets an iterator over the keys of the map.",6,[[["self"]],["keys"]]],[11,"values","","Gets an iterator over the values of the map.",6,[[["self"]],["values"]]],[11,"values_mut","","Gets an iterator over mutable values of the map.",6,[[["self"]],["valuesmut"]]],[11,"key","","Returns a reference to this entry's key.",5,[[["self"]],["string"]]],[11,"or_insert","","Ensures a value is in the entry by inserting the default…",5,[[["value"]],["value"]]],[11,"or_insert_with","","Ensures a value is in the entry by inserting the result of…",5,[[["f"]],["value"]]],[11,"key","","Gets a reference to the key that would be used when…",7,[[["self"]],["string"]]],[11,"insert","","Sets the value of the entry with the VacantEntry's key,…",7,[[["value"]],["value"]]],[11,"key","","Gets a reference to the key in the entry.",8,[[["self"]],["string"]]],[11,"get","","Gets a reference to the value in the entry.",8,[[["self"]],["value"]]],[11,"get_mut","","Gets a mutable reference to the value in the entry.",8,[[["self"]],["value"]]],[11,"into_mut","","Converts the entry into a mutable reference to its value.",8,[[],["value"]]],[11,"insert","","Sets the value of the entry with the `OccupiedEntry`'s…",8,[[["self"],["value"]],["value"]]],[11,"remove","","Takes the value of the entry out of the map, and returns it.",8,[[],["value"]]],[0,"ser","serde_json","Serialize a Rust data structure into JSON data.",null,null],[3,"Serializer","serde_json::ser","A structure for serializing Rust values into JSON.",null,null],[3,"CompactFormatter","","This structure compacts a JSON value with no extra…",null,null],[3,"PrettyFormatter","","This structure pretty prints a JSON value to make it human…",null,null],[4,"CharEscape","","Represents a character escape code in a type-safe manner.",null,null],[13,"Quote","","An escaped quote `\"`",9,null],[13,"ReverseSolidus","","An escaped reverse solidus `\\`",9,null],[13,"Solidus","","An escaped solidus `/`",9,null],[13,"Backspace","","An escaped backspace character (usually escaped as `\\b`)",9,null],[13,"FormFeed","","An escaped form feed character (usually escaped as `\\f`)",9,null],[13,"LineFeed","","An escaped line feed character (usually escaped as `\\n`)",9,null],[13,"CarriageReturn","","An escaped carriage return character (usually escaped as…",9,null],[13,"Tab","","An escaped tab character (usually escaped as `\\t`)",9,null],[13,"AsciiControl","","An escaped ASCII plane control character (usually escaped…",9,null],[5,"to_writer","","Serialize the given data structure as JSON into the IO…",null,[[["w"],["t"]],["result"]]],[5,"to_writer_pretty","","Serialize the given data structure as pretty-printed JSON…",null,[[["w"],["t"]],["result"]]],[5,"to_vec","","Serialize the given data structure as a JSON byte vector.",null,[[["t"]],[["result",["vec"]],["vec",["u8"]]]]],[5,"to_vec_pretty","","Serialize the given data structure as a pretty-printed…",null,[[["t"]],[["result",["vec"]],["vec",["u8"]]]]],[5,"to_string","","Serialize the given data structure as a String of JSON.",null,[[["t"]],[["result",["string"]],["string"]]]],[5,"to_string_pretty","","Serialize the given data structure as a pretty-printed…",null,[[["t"]],[["result",["string"]],["string"]]]],[8,"Formatter","","This trait abstracts away serializing the JSON control…",null,null],[11,"write_null","","Writes a `null` value to the specified writer.",10,[[["w"],["self"]],["result"]]],[11,"write_bool","","Writes a `true` or `false` value to the specified writer.",10,[[["w"],["self"],["bool"]],["result"]]],[11,"write_i8","","Writes an integer value like `-123` to the specified writer.",10,[[["w"],["self"],["i8"]],["result"]]],[11,"write_i16","","Writes an integer value like `-123` to the specified writer.",10,[[["w"],["self"],["i16"]],["result"]]],[11,"write_i32","","Writes an integer value like `-123` to the specified writer.",10,[[["w"],["self"],["i32"]],["result"]]],[11,"write_i64","","Writes an integer value like `-123` to the specified writer.",10,[[["w"],["self"],["i64"]],["result"]]],[11,"write_u8","","Writes an integer value like `123` to the specified writer.",10,[[["w"],["self"],["u8"]],["result"]]],[11,"write_u16","","Writes an integer value like `123` to the specified writer.",10,[[["w"],["self"],["u16"]],["result"]]],[11,"write_u32","","Writes an integer value like `123` to the specified writer.",10,[[["w"],["self"],["u32"]],["result"]]],[11,"write_u64","","Writes an integer value like `123` to the specified writer.",10,[[["w"],["self"],["u64"]],["result"]]],[11,"write_f32","","Writes a floating point value like `-31.26e+12` to the…",10,[[["w"],["self"],["f32"]],["result"]]],[11,"write_f64","","Writes a floating point value like `-31.26e+12` to the…",10,[[["w"],["self"],["f64"]],["result"]]],[11,"write_number_str","","Writes a number that has already been rendered to a string.",10,[[["w"],["self"],["str"]],["result"]]],[11,"begin_string","","Called before each series of `write_string_fragment` and…",10,[[["w"],["self"]],["result"]]],[11,"end_string","","Called after each series of `write_string_fragment` and…",10,[[["w"],["self"]],["result"]]],[11,"write_string_fragment","","Writes a string fragment that doesn't need any escaping to…",10,[[["w"],["self"],["str"]],["result"]]],[11,"write_char_escape","","Writes a character escape code to the specified writer.",10,[[["w"],["self"],["charescape"]],["result"]]],[11,"begin_array","","Called before every array. Writes a `[` to the specified…",10,[[["w"],["self"]],["result"]]],[11,"end_array","","Called after every array. Writes a `]` to the specified…",10,[[["w"],["self"]],["result"]]],[11,"begin_array_value","","Called before every array value. Writes a `,` if needed to…",10,[[["w"],["self"],["bool"]],["result"]]],[11,"end_array_value","","Called after every array value.",10,[[["w"],["self"]],["result"]]],[11,"begin_object","","Called before every object. Writes a `{` to the specified…",10,[[["w"],["self"]],["result"]]],[11,"end_object","","Called after every object. Writes a `}` to the specified…",10,[[["w"],["self"]],["result"]]],[11,"begin_object_key","","Called before every object key.",10,[[["w"],["self"],["bool"]],["result"]]],[11,"end_object_key","","Called after every object key. A `:` should be written to…",10,[[["w"],["self"]],["result"]]],[11,"begin_object_value","","Called before every object value. A `:` should be written…",10,[[["w"],["self"]],["result"]]],[11,"end_object_value","","Called after every object value.",10,[[["w"],["self"]],["result"]]],[11,"write_raw_fragment","","Writes a raw JSON fragment that doesn't need any escaping…",10,[[["w"],["self"],["str"]],["result"]]],[11,"new","","Creates a new JSON serializer.",11,[[["w"]],["self"]]],[11,"pretty","","Creates a new JSON pretty print serializer.",11,[[["w"]],["self"]]],[11,"with_formatter","","Creates a new JSON visitor whose output will be written to…",11,[[["w"],["f"]],["self"]]],[11,"into_inner","","Unwrap the `Writer` from the `Serializer`.",11,[[],["w"]]],[11,"new","","Construct a pretty printer formatter that defaults to…",12,[[],["self"]]],[11,"with_indent","","Construct a pretty printer formatter that uses the…",12,[[],["self"]]],[0,"value","serde_json","The Value enum, a loosely typed way of representing any…",null,null],[3,"Serializer","serde_json::value","Serializer whose output is a `Value`.",null,null],[3,"Number","","Represents a JSON number, whether integer or floating point.",null,null],[4,"Value","","Represents any valid JSON value.",null,null],[13,"Null","","Represents a JSON null value.",0,null],[13,"Bool","","Represents a JSON boolean.",0,null],[13,"Number","","Represents a JSON number, whether integer or floating point.",0,null],[13,"String","","Represents a JSON string.",0,null],[13,"Array","","Represents a JSON array.",0,null],[13,"Object","","Represents a JSON object.",0,null],[5,"to_value","","Convert a `T` into `serde_json::Value` which is an enum…",null,[[["t"]],[["error"],["result",["value","error"]],["value"]]]],[5,"from_value","","Interpret a `serde_json::Value` as an instance of type `T`.",null,[[["value"]],[["error"],["result",["error"]]]]],[8,"Index","","A type that can be used to index into a `serde_json::Value`.",null,null],[11,"get","","Index into a JSON array or map. A string index can be used…",0,[[["self"],["index"]],[["value"],["option",["value"]]]]],[11,"get_mut","","Mutably index into a JSON array or map. A string index can…",0,[[["self"],["index"]],[["option",["value"]],["value"]]]],[11,"is_object","","Returns true if the `Value` is an Object. Returns false…",0,[[["self"]],["bool"]]],[11,"as_object","","If the `Value` is an Object, returns the associated Map.…",0,[[["self"]],[["option",["map"]],["map"]]]],[11,"as_object_mut","","If the `Value` is an Object, returns the associated…",0,[[["self"]],[["map"],["option",["map"]]]]],[11,"is_array","","Returns true if the `Value` is an Array. Returns false…",0,[[["self"]],["bool"]]],[11,"as_array","","If the `Value` is an Array, returns the associated vector.…",0,[[["self"]],[["vec"],["option",["vec"]]]]],[11,"as_array_mut","","If the `Value` is an Array, returns the associated mutable…",0,[[["self"]],[["vec"],["option",["vec"]]]]],[11,"is_string","","Returns true if the `Value` is a String. Returns false…",0,[[["self"]],["bool"]]],[11,"as_str","","If the `Value` is a String, returns the associated str.…",0,[[["self"]],[["str"],["option",["str"]]]]],[11,"is_number","","Returns true if the `Value` is a Number. Returns false…",0,[[["self"]],["bool"]]],[11,"is_i64","","Returns true if the `Value` is an integer between…",0,[[["self"]],["bool"]]],[11,"is_u64","","Returns true if the `Value` is an integer between zero and…",0,[[["self"]],["bool"]]],[11,"is_f64","","Returns true if the `Value` is a number that can be…",0,[[["self"]],["bool"]]],[11,"as_i64","","If the `Value` is an integer, represent it as i64 if…",0,[[["self"]],[["i64"],["option",["i64"]]]]],[11,"as_u64","","If the `Value` is an integer, represent it as u64 if…",0,[[["self"]],[["option",["u64"]],["u64"]]]],[11,"as_f64","","If the `Value` is a number, represent it as f64 if…",0,[[["self"]],[["f64"],["option",["f64"]]]]],[11,"is_boolean","","Returns true if the `Value` is a Boolean. Returns false…",0,[[["self"]],["bool"]]],[11,"as_bool","","If the `Value` is a Boolean, returns the associated bool.…",0,[[["self"]],[["bool"],["option",["bool"]]]]],[11,"is_null","","Returns true if the `Value` is a Null. Returns false…",0,[[["self"]],["bool"]]],[11,"as_null","","If the `Value` is a Null, returns (). Returns None…",0,[[["self"]],["option"]]],[11,"pointer","","Looks up a value by a JSON Pointer.",0,[[["str"],["self"]],[["value"],["option",["value"]]]]],[11,"pointer_mut","","Looks up a value by a JSON Pointer and returns a mutable…",0,[[["str"],["self"]],[["option",["value"]],["value"]]]],[11,"take","","Takes the value out of the `Value`, leaving a `Null` in…",0,[[["self"]],["value"]]],[11,"is_i64","serde_json","Returns true if the `Number` is an integer between…",13,[[["self"]],["bool"]]],[11,"is_u64","","Returns true if the `Number` is an integer between zero…",13,[[["self"]],["bool"]]],[11,"is_f64","","Returns true if the `Number` can be represented by f64.",13,[[["self"]],["bool"]]],[11,"as_i64","","If the `Number` is an integer, represent it as i64 if…",13,[[["self"]],[["i64"],["option",["i64"]]]]],[11,"as_u64","","If the `Number` is an integer, represent it as u64 if…",13,[[["self"]],[["option",["u64"]],["u64"]]]],[11,"as_f64","","Represents the number as f64 if possible. Returns None…",13,[[["self"]],[["f64"],["option",["f64"]]]]],[11,"from_f64","","Converts a finite `f64` to a `Number`. Infinite or NaN…",13,[[["f64"]],[["number"],["option",["number"]]]]],[11,"new","serde_json::de","Create a JSON input source to read from a std::io input…",14,[[["r"]],["self"]]],[11,"new","","Create a JSON input source to read from a slice of bytes.",15,[[],["self"]]],[11,"new","","Create a JSON input source to read from a UTF-8 string.",16,[[["str"]],["self"]]],[6,"Result","serde_json","Alias for a `Result` with the error type…",null,null],[14,"json","","Construct a `serde_json::Value` from a JSON literal.",null,null],[11,"from","serde_json::de","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"into_iter","","",2,[[],["i"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","serde_json::error","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"to_string","","",4,[[["self"]],["string"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","serde_json::ser","",11,[[["t"]],["t"]]],[11,"into","","",11,[[],["u"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"try_into","","",11,[[],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"type_id","","",11,[[["self"]],["typeid"]]],[11,"from","serde_json::map","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"into_iter","","",6,[[],["i"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,[[["self"],["t"]]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"from","serde_json","",13,[[["t"]],["t"]]],[11,"into","","",13,[[],["u"]]],[11,"to_owned","","",13,[[["self"]],["t"]]],[11,"clone_into","","",13,[[["self"],["t"]]]],[11,"to_string","","",13,[[["self"]],["string"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"try_into","","",13,[[],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"type_id","","",13,[[["self"]],["typeid"]]],[11,"from","serde_json::value","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","serde_json::de","",15,[[["t"]],["t"]]],[11,"into","","",15,[[],["u"]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"try_into","","",15,[[],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"type_id","","",15,[[["self"]],["typeid"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"into","","",16,[[],["u"]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"try_into","","",16,[[],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"type_id","","",16,[[["self"]],["typeid"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"into","","",14,[[],["u"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"try_into","","",14,[[],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"type_id","","",14,[[["self"]],["typeid"]]],[11,"from","serde_json::error","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","serde_json::map","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"into","","",17,[[],["u"]]],[11,"into_iter","","",17,[[],["i"]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"try_into","","",17,[[],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"type_id","","",17,[[["self"]],["typeid"]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"into","","",18,[[],["u"]]],[11,"into_iter","","",18,[[],["i"]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"try_into","","",18,[[],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"type_id","","",18,[[["self"]],["typeid"]]],[11,"from","","",19,[[["t"]],["t"]]],[11,"into","","",19,[[],["u"]]],[11,"into_iter","","",19,[[],["i"]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"try_into","","",19,[[],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"type_id","","",19,[[["self"]],["typeid"]]],[11,"from","","",20,[[["t"]],["t"]]],[11,"into","","",20,[[],["u"]]],[11,"into_iter","","",20,[[],["i"]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"try_into","","",20,[[],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"type_id","","",20,[[["self"]],["typeid"]]],[11,"from","","",21,[[["t"]],["t"]]],[11,"into","","",21,[[],["u"]]],[11,"into_iter","","",21,[[],["i"]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"try_into","","",21,[[],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"type_id","","",21,[[["self"]],["typeid"]]],[11,"from","","",22,[[["t"]],["t"]]],[11,"into","","",22,[[],["u"]]],[11,"into_iter","","",22,[[],["i"]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"try_into","","",22,[[],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"type_id","","",22,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"from","serde_json::ser","",23,[[["t"]],["t"]]],[11,"into","","",23,[[],["u"]]],[11,"to_owned","","",23,[[["self"]],["t"]]],[11,"clone_into","","",23,[[["self"],["t"]]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"try_into","","",23,[[],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"type_id","","",23,[[["self"]],["typeid"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[],["u"]]],[11,"to_owned","","",12,[[["self"]],["t"]]],[11,"clone_into","","",12,[[["self"],["t"]]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"try_into","","",12,[[],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"type_id","","",12,[[["self"]],["typeid"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[],["u"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"from","serde_json::value","",24,[[["t"]],["t"]]],[11,"into","","",24,[[],["u"]]],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"try_into","","",24,[[],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"type_id","","",24,[[["self"]],["typeid"]]],[11,"begin_array","serde_json::ser","",12,[[["w"],["self"]],["result"]]],[11,"end_array","","",12,[[["w"],["self"]],["result"]]],[11,"begin_array_value","","",12,[[["w"],["self"],["bool"]],["result"]]],[11,"end_array_value","","",12,[[["w"],["self"]],["result"]]],[11,"begin_object","","",12,[[["w"],["self"]],["result"]]],[11,"end_object","","",12,[[["w"],["self"]],["result"]]],[11,"begin_object_key","","",12,[[["w"],["self"],["bool"]],["result"]]],[11,"begin_object_value","","",12,[[["w"],["self"]],["result"]]],[11,"end_object_value","","",12,[[["w"],["self"]],["result"]]],[11,"next","serde_json::de","",14,[[["self"]],[["result",["option"]],["option",["u8"]]]]],[11,"peek","","",14,[[["self"]],[["result",["option"]],["option",["u8"]]]]],[11,"discard","","",14,[[["self"]]]],[11,"position","","",14,[[["self"]],["position"]]],[11,"peek_position","","",14,[[["self"]],["position"]]],[11,"byte_offset","","",14,[[["self"]],["usize"]]],[11,"parse_str","","",14,[[["vec"],["self"]],[["result",["reference"]],["reference",["str"]]]]],[11,"parse_str_raw","","",14,[[["vec"],["self"]],[["result",["reference"]],["reference"]]]],[11,"ignore_str","","",14,[[["self"]],["result"]]],[11,"decode_hex_escape","","",14,[[["self"]],[["u16"],["result",["u16"]]]]],[11,"set_failed","","",14,[[["self"],["bool"]]]],[11,"next","","",15,[[["self"]],[["result",["option"]],["option",["u8"]]]]],[11,"peek","","",15,[[["self"]],[["result",["option"]],["option",["u8"]]]]],[11,"discard","","",15,[[["self"]]]],[11,"position","","",15,[[["self"]],["position"]]],[11,"peek_position","","",15,[[["self"]],["position"]]],[11,"byte_offset","","",15,[[["self"]],["usize"]]],[11,"parse_str","","",15,[[["vec"],["self"]],[["reference",["str"]],["result",["reference"]]]]],[11,"parse_str_raw","","",15,[[["vec"],["self"]],[["result",["reference"]],["reference"]]]],[11,"ignore_str","","",15,[[["self"]],["result"]]],[11,"decode_hex_escape","","",15,[[["self"]],[["u16"],["result",["u16"]]]]],[11,"set_failed","","",15,[[["self"],["bool"]]]],[11,"next","","",16,[[["self"]],[["result",["option"]],["option",["u8"]]]]],[11,"peek","","",16,[[["self"]],[["result",["option"]],["option",["u8"]]]]],[11,"discard","","",16,[[["self"]]]],[11,"position","","",16,[[["self"]],["position"]]],[11,"peek_position","","",16,[[["self"]],["position"]]],[11,"byte_offset","","",16,[[["self"]],["usize"]]],[11,"parse_str","","",16,[[["vec"],["self"]],[["reference",["str"]],["result",["reference"]]]]],[11,"parse_str_raw","","",16,[[["vec"],["self"]],[["result",["reference"]],["reference"]]]],[11,"ignore_str","","",16,[[["self"]],["result"]]],[11,"decode_hex_escape","","",16,[[["self"]],[["u16"],["result",["u16"]]]]],[11,"set_failed","","",16,[[["self"],["bool"]]]],[11,"from","serde_json::value","",0,[[["i8"]],["self"]]],[11,"from","","",0,[[["i16"]],["self"]]],[11,"from","","",0,[[["i32"]],["self"]]],[11,"from","","",0,[[["i64"]],["self"]]],[11,"from","","",0,[[["isize"]],["self"]]],[11,"from","","",0,[[["u8"]],["self"]]],[11,"from","","",0,[[["u16"]],["self"]]],[11,"from","","",0,[[["u32"]],["self"]]],[11,"from","","",0,[[["u64"]],["self"]]],[11,"from","","",0,[[["usize"]],["self"]]],[11,"from","","Convert 32-bit floating point number to `Value`",0,[[["f32"]],["self"]]],[11,"from","","Convert 64-bit floating point number to `Value`",0,[[["f64"]],["self"]]],[11,"from","","Convert boolean to `Value`",0,[[["bool"]],["self"]]],[11,"from","","Convert `String` to `Value`",0,[[["string"]],["self"]]],[11,"from","","Convert string slice to `Value`",0,[[["str"]],["self"]]],[11,"from","","Convert copy-on-write string to `Value`",0,[[["str"],["cow",["str"]]],["self"]]],[11,"from","","Convert map (with string keys) to `Value`",0,[[["map",["string","value"]],["value"],["string"]],["self"]]],[11,"from","","Convert a `Vec` to `Value`",0,[[["vec"]],["self"]]],[11,"from","","Convert a slice to `Value`",0,[[],["self"]]],[11,"from","","Convert `()` to `Value`",0,[[],["self"]]],[11,"from","serde_json","",13,[[["u8"]],["self"]]],[11,"from","","",13,[[["u16"]],["self"]]],[11,"from","","",13,[[["u32"]],["self"]]],[11,"from","","",13,[[["u64"]],["self"]]],[11,"from","","",13,[[["usize"]],["self"]]],[11,"from","","",13,[[["i8"]],["self"]]],[11,"from","","",13,[[["i16"]],["self"]]],[11,"from","","",13,[[["i32"]],["self"]]],[11,"from","","",13,[[["i64"]],["self"]]],[11,"from","","",13,[[["isize"]],["self"]]],[11,"next_back","serde_json::map","",17,[[["self"]],["option"]]],[11,"next_back","","",18,[[["self"]],["option"]]],[11,"next_back","","",19,[[["self"]],["option"]]],[11,"next_back","","",20,[[["self"]],["option"]]],[11,"next_back","","",21,[[["self"]],["option"]]],[11,"next_back","","",22,[[["self"]],["option"]]],[11,"len","","",17,[[["self"]],["usize"]]],[11,"len","","",18,[[["self"]],["usize"]]],[11,"len","","",19,[[["self"]],["usize"]]],[11,"len","","",20,[[["self"]],["usize"]]],[11,"len","","",21,[[["self"]],["usize"]]],[11,"len","","",22,[[["self"]],["usize"]]],[11,"extend","","",6,[[["self"],["t"]]]],[11,"into_iter","","",6,[[]]],[11,"next","serde_json::de","",2,[[["self"]],[["option",["result"]],["result"]]]],[11,"next","serde_json::map","",17,[[["self"]],["option"]]],[11,"size_hint","","",17,[[["self"]]]],[11,"next","","",18,[[["self"]],["option"]]],[11,"size_hint","","",18,[[["self"]]]],[11,"next","","",19,[[["self"]],["option"]]],[11,"size_hint","","",19,[[["self"]]]],[11,"next","","",20,[[["self"]],["option"]]],[11,"size_hint","","",20,[[["self"]]]],[11,"next","","",21,[[["self"]],["option"]]],[11,"size_hint","","",21,[[["self"]]]],[11,"next","","",22,[[["self"]],["option"]]],[11,"size_hint","","",22,[[["self"]]]],[11,"clone","serde_json::error","",3,[[["self"]],["category"]]],[11,"clone","serde_json::map","",6,[[["self"]],["self"]]],[11,"clone","serde_json::ser","",23,[[["self"]],["compactformatter"]]],[11,"clone","","",12,[[["self"]],["prettyformatter"]]],[11,"clone","serde_json::value","",0,[[["self"]],["value"]]],[11,"clone","serde_json","",13,[[["self"]],["number"]]],[11,"default","serde_json::map","",6,[[],["self"]]],[11,"default","serde_json::ser","",12,[[],["self"]]],[11,"default","serde_json::value","",0,[[],["value"]]],[11,"eq","serde_json::error","",3,[[["self"],["category"]],["bool"]]],[11,"eq","serde_json::map","",6,[[["self"]],["bool"]]],[11,"eq","serde_json::value","",0,[[["value"],["self"]],["bool"]]],[11,"ne","","",0,[[["value"],["self"]],["bool"]]],[11,"eq","","",0,[[["str"],["self"]],["bool"]]],[11,"eq","","",0,[[["self"],["str"]],["bool"]]],[11,"eq","","",0,[[["string"],["self"]],["bool"]]],[11,"eq","","",0,[[["i8"],["self"]],["bool"]]],[11,"eq","","",0,[[["self"],["i16"]],["bool"]]],[11,"eq","","",0,[[["self"],["i32"]],["bool"]]],[11,"eq","","",0,[[["i64"],["self"]],["bool"]]],[11,"eq","","",0,[[["isize"],["self"]],["bool"]]],[11,"eq","","",0,[[["self"],["u8"]],["bool"]]],[11,"eq","","",0,[[["u16"],["self"]],["bool"]]],[11,"eq","","",0,[[["u32"],["self"]],["bool"]]],[11,"eq","","",0,[[["self"],["u64"]],["bool"]]],[11,"eq","","",0,[[["self"],["usize"]],["bool"]]],[11,"eq","","",0,[[["f32"],["self"]],["bool"]]],[11,"eq","","",0,[[["f64"],["self"]],["bool"]]],[11,"eq","","",0,[[["self"],["bool"]],["bool"]]],[11,"eq","serde_json","",13,[[["number"],["self"]],["bool"]]],[11,"ne","","",13,[[["number"],["self"]],["bool"]]],[11,"fmt","serde_json::error","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","serde_json::map","",6,[[["formatter"],["self"]],[["result",["error"]],["error"]]]],[11,"fmt","serde_json::ser","",23,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",12,[[["formatter"],["self"]],["result"]]],[11,"fmt","serde_json::value","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","serde_json","",13,[[["formatter"],["self"]],["result"]]],[11,"fmt","serde_json::error","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","serde_json::value","Display a JSON value as a string.",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","serde_json","",13,[[["formatter"],["self"]],["result"]]],[11,"index","serde_json::map","",6,[[["self"],["q"]],["value"]]],[11,"index","serde_json::value","Index into a `serde_json::Value` using the syntax…",0,[[["i"],["self"]],["value"]]],[11,"index_mut","serde_json::map","",6,[[["self"],["q"]],["value"]]],[11,"index_mut","serde_json::value","Write into a `serde_json::Value` using the syntax…",0,[[["self"],["i"]],["value"]]],[11,"from_iter","serde_json::map","",6,[[["t"]],["self"]]],[11,"from_iter","serde_json::value","Convert an iteratable type to a `Value`",0,[[["intoiterator"]],["self"]]],[11,"from_str","serde_json","",13,[[["str"]],["result"]]],[11,"from_str","serde_json::value","",0,[[["str"]],[["error"],["result",["value","error"]],["value"]]]],[11,"source","serde_json::error","",4,[[["self"]],[["error"],["option",["error"]]]]],[11,"deserialize_any","serde_json::value","",0,[[["v"]],[["error"],["result",["error"]]]]],[11,"deserialize_i8","","",0,[[["v"]],[["error"],["result",["error"]]]]],[11,"deserialize_i16","","",0,[[["v"]],[["error"],["result",["error"]]]]],[11,"deserialize_i32","","",0,[[["v"]],[["error"],["result",["error"]]]]],[11,"deserialize_i64","","",0,[[["v"]],[["error"],["result",["error"]]]]],[11,"deserialize_u8","","",0,[[["v"]],[["error"],["result",["error"]]]]],[11,"deserialize_u16","","",0,[[["v"]],[["error"],["result",["error"]]]]],[11,"deserialize_u32","","",0,[[["v"]],[["error"],["result",["error"]]]]],[11,"deserialize_u64","","",0,[[["v"]],[["error"],["result",["error"]]]]],[11,"deserialize_f32","","",0,[[["v"]],[["error"],["result",["error"]]]]],[11,"deserialize_f64","","",0,[[["v"]],[["error"],["result",["error"]]]]],[11,"deserialize_i128","","",0,[[["v"]],[["error"],["result",["error"]]]]],[11,"deserialize_u128","","",0,[[["v"]],[["error"],["result",["error"]]]]],[11,"deserialize_option","","",0,[[["v"]],[["error"],["result",["error"]]]]],[11,"deserialize_enum","","",0,[[["str"],["v"]],[["error"],["result",["error"]]]]],[11,"deserialize_newtype_struct","","",0,[[["str"],["v"]],[["error"],["result",["error"]]]]],[11,"deserialize_bool","","",0,[[["v"]],[["error"],["result",["error"]]]]],[11,"deserialize_char","","",0,[[["v"]],[["error"],["result",["error"]]]]],[11,"deserialize_str","","",0,[[["v"]],[["error"],["result",["error"]]]]],[11,"deserialize_string","","",0,[[["v"]],[["error"],["result",["error"]]]]],[11,"deserialize_bytes","","",0,[[["v"]],[["error"],["result",["error"]]]]],[11,"deserialize_byte_buf","","",0,[[["v"]],[["error"],["result",["error"]]]]],[11,"deserialize_unit","","",0,[[["v"]],[["error"],["result",["error"]]]]],[11,"deserialize_unit_struct","","",0,[[["str"],["v"]],[["error"],["result",["error"]]]]],[11,"deserialize_seq","","",0,[[["v"]],[["error"],["result",["error"]]]]],[11,"deserialize_tuple","","",0,[[["usize"],["v"]],[["error"],["result",["error"]]]]],[11,"deserialize_tuple_struct","","",0,[[["str"],["usize"],["v"]],[["error"],["result",["error"]]]]],[11,"deserialize_map","","",0,[[["v"]],[["error"],["result",["error"]]]]],[11,"deserialize_struct","","",0,[[["str"],["v"]],[["error"],["result",["error"]]]]],[11,"deserialize_identifier","","",0,[[["v"]],[["error"],["result",["error"]]]]],[11,"deserialize_ignored_any","","",0,[[["v"]],[["error"],["result",["error"]]]]],[11,"deserialize_any","serde_json","",13,[[["v"]],[["error"],["result",["error"]]]]],[11,"deserialize_i8","","",13,[[["v"]],[["error"],["result",["error"]]]]],[11,"deserialize_i16","","",13,[[["v"]],[["error"],["result",["error"]]]]],[11,"deserialize_i32","","",13,[[["v"]],[["error"],["result",["error"]]]]],[11,"deserialize_i64","","",13,[[["v"]],[["error"],["result",["error"]]]]],[11,"deserialize_u8","","",13,[[["v"]],[["error"],["result",["error"]]]]],[11,"deserialize_u16","","",13,[[["v"]],[["error"],["result",["error"]]]]],[11,"deserialize_u32","","",13,[[["v"]],[["error"],["result",["error"]]]]],[11,"deserialize_u64","","",13,[[["v"]],[["error"],["result",["error"]]]]],[11,"deserialize_f32","","",13,[[["v"]],[["error"],["result",["error"]]]]],[11,"deserialize_f64","","",13,[[["v"]],[["error"],["result",["error"]]]]],[11,"deserialize_i128","","",13,[[["v"]],[["error"],["result",["error"]]]]],[11,"deserialize_u128","","",13,[[["v"]],[["error"],["result",["error"]]]]],[11,"deserialize_bool","","",13,[[["v"]],["result"]]],[11,"deserialize_char","","",13,[[["v"]],["result"]]],[11,"deserialize_str","","",13,[[["v"]],["result"]]],[11,"deserialize_string","","",13,[[["v"]],["result"]]],[11,"deserialize_bytes","","",13,[[["v"]],["result"]]],[11,"deserialize_byte_buf","","",13,[[["v"]],["result"]]],[11,"deserialize_option","","",13,[[["v"]],["result"]]],[11,"deserialize_unit","","",13,[[["v"]],["result"]]],[11,"deserialize_unit_struct","","",13,[[["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",13,[[["str"],["v"]],["result"]]],[11,"deserialize_seq","","",13,[[["v"]],["result"]]],[11,"deserialize_tuple","","",13,[[["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",13,[[["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",13,[[["v"]],["result"]]],[11,"deserialize_struct","","",13,[[["str"],["v"]],["result"]]],[11,"deserialize_enum","","",13,[[["str"],["v"]],["result"]]],[11,"deserialize_identifier","","",13,[[["v"]],["result"]]],[11,"deserialize_ignored_any","","",13,[[["v"]],["result"]]],[11,"into_deserializer","serde_json::value","",0,[[]]],[11,"custom","serde_json::error","",4,[[["display"]],["error"]]],[11,"serialize","serde_json::map","",6,[[["s"],["self"]],["result"]]],[11,"serialize","serde_json::value","",0,[[["s"],["self"]],["result"]]],[11,"serialize","serde_json","",13,[[["s"],["self"]],["result"]]],[11,"serialize_bool","serde_json::value","",24,[[["bool"]],[["result",["value"]],["value"]]]],[11,"serialize_i8","","",24,[[["i8"]],[["result",["value"]],["value"]]]],[11,"serialize_i16","","",24,[[["i16"]],[["result",["value"]],["value"]]]],[11,"serialize_i32","","",24,[[["i32"]],[["result",["value"]],["value"]]]],[11,"serialize_i64","","",24,[[["i64"]],[["result",["value"]],["value"]]]],[11,"serialize_u8","","",24,[[["u8"]],[["result",["value"]],["value"]]]],[11,"serialize_u16","","",24,[[["u16"]],[["result",["value"]],["value"]]]],[11,"serialize_u32","","",24,[[["u32"]],[["result",["value"]],["value"]]]],[11,"serialize_u64","","",24,[[["u64"]],[["result",["value"]],["value"]]]],[11,"serialize_f32","","",24,[[["f32"]],[["result",["value"]],["value"]]]],[11,"serialize_f64","","",24,[[["f64"]],[["result",["value"]],["value"]]]],[11,"serialize_char","","",24,[[["char"]],[["result",["value"]],["value"]]]],[11,"serialize_str","","",24,[[["str"]],[["result",["value"]],["value"]]]],[11,"serialize_bytes","","",24,[[],[["result",["value"]],["value"]]]],[11,"serialize_unit","","",24,[[],[["result",["value"]],["value"]]]],[11,"serialize_unit_struct","","",24,[[["str"]],[["result",["value"]],["value"]]]],[11,"serialize_unit_variant","","",24,[[["str"],["u32"]],[["result",["value"]],["value"]]]],[11,"serialize_newtype_struct","","",24,[[["str"],["t"]],[["result",["value"]],["value"]]]],[11,"serialize_newtype_variant","","",24,[[["str"],["u32"],["t"]],[["result",["value"]],["value"]]]],[11,"serialize_none","","",24,[[],[["result",["value"]],["value"]]]],[11,"serialize_some","","",24,[[["t"]],[["result",["value"]],["value"]]]],[11,"serialize_seq","","",24,[[["usize"],["option",["usize"]]],["result"]]],[11,"serialize_tuple","","",24,[[["usize"]],["result"]]],[11,"serialize_tuple_struct","","",24,[[["str"],["usize"]],["result"]]],[11,"serialize_tuple_variant","","",24,[[["str"],["u32"],["usize"]],["result"]]],[11,"serialize_map","","",24,[[["usize"],["option",["usize"]]],["result"]]],[11,"serialize_struct","","",24,[[["str"],["usize"]],["result"]]],[11,"serialize_struct_variant","","",24,[[["str"],["u32"],["usize"]],["result"]]],[11,"collect_str","","",24,[[["t"]],[["result",["value"]],["value"]]]],[11,"deserialize","serde_json::map","",6,[[["d"]],["result"]]],[11,"deserialize","serde_json::value","",0,[[["d"]],[["result",["value"]],["value"]]]],[11,"deserialize","serde_json","",13,[[["d"]],[["result",["number"]],["number"]]]],[11,"custom","serde_json::error","",4,[[["display"]],["error"]]],[11,"invalid_type","","",4,[[["expected"],["unexpected"]],["self"]]]],"p":[[4,"Value"],[3,"Deserializer"],[3,"StreamDeserializer"],[4,"Category"],[3,"Error"],[4,"Entry"],[3,"Map"],[3,"VacantEntry"],[3,"OccupiedEntry"],[4,"CharEscape"],[8,"Formatter"],[3,"Serializer"],[3,"PrettyFormatter"],[3,"Number"],[3,"IoRead"],[3,"SliceRead"],[3,"StrRead"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"Keys"],[3,"Values"],[3,"ValuesMut"],[3,"CompactFormatter"],[3,"Serializer"]]};
searchIndex["siphasher"] = {"doc":"","i":[[0,"sip","siphasher","An implementation of SipHash.",null,null],[3,"SipHasher13","siphasher::sip","An implementation of SipHash 1-3.",null,null],[3,"SipHasher24","","An implementation of SipHash 2-4.",null,null],[3,"SipHasher","","An implementation of SipHash 2-4.",null,null],[11,"new","","Creates a new `SipHasher` with the two initial keys set to…",0,[[],["siphasher"]]],[11,"new_with_keys","","Creates a `SipHasher` that is keyed off the provided keys.",0,[[["u64"]],["siphasher"]]],[11,"keys","","Get the keys used by this hasher",0,[[["self"]]]],[11,"new","","Creates a new `SipHasher13` with the two initial keys set…",1,[[],["siphasher13"]]],[11,"new_with_keys","","Creates a `SipHasher13` that is keyed off the provided keys.",1,[[["u64"]],["siphasher13"]]],[11,"keys","","Get the keys used by this hasher",1,[[["self"]]]],[11,"new","","Creates a new `SipHasher24` with the two initial keys set…",2,[[],["siphasher24"]]],[11,"new_with_keys","","Creates a `SipHasher24` that is keyed off the provided keys.",2,[[["u64"]],["siphasher24"]]],[11,"keys","","Get the keys used by this hasher",2,[[["self"]]]],[0,"sip128","siphasher","An implementation of SipHash with a 128-bit output.",null,null],[3,"Hash128","siphasher::sip128","A 128-bit (2x64) hash output",null,null],[12,"h1","","",3,null],[12,"h2","","",3,null],[3,"SipHasher13","","An implementation of SipHash128 1-3.",null,null],[3,"SipHasher24","","An implementation of SipHash128 2-4.",null,null],[3,"SipHasher","","An implementation of SipHash128 2-4.",null,null],[8,"Hasher128","","",null,null],[10,"finish128","","Return a 128-bit hash",4,[[["self"]],["hash128"]]],[11,"new","","Creates a new `SipHasher` with the two initial keys set to…",5,[[],["siphasher"]]],[11,"new_with_keys","","Creates a `SipHasher` that is keyed off the provided keys.",5,[[["u64"]],["siphasher"]]],[11,"keys","","Get the keys used by this hasher",5,[[["self"]]]],[11,"new","","Creates a new `SipHasher13` with the two initial keys set…",6,[[],["siphasher13"]]],[11,"new_with_keys","","Creates a `SipHasher13` that is keyed off the provided keys.",6,[[["u64"]],["siphasher13"]]],[11,"keys","","Get the keys used by this hasher",6,[[["self"]]]],[11,"new","","Creates a new `SipHasher24` with the two initial keys set…",7,[[],["siphasher24"]]],[11,"new_with_keys","","Creates a `SipHasher24` that is keyed off the provided keys.",7,[[["u64"]],["siphasher24"]]],[11,"keys","","Get the keys used by this hasher",7,[[["self"]]]],[11,"as_bytes","","Convert into a 16-bytes vector",3,[[["self"]]]],[11,"as_u128","","Convert into a `u128`",3,[[["self"]],["u128"]]],[11,"as_u64","","Convert into `(u64, u64)`",3,[[["self"]]]],[11,"from","siphasher::sip","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"into","","",1,[[],["u"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"into","","",2,[[],["u"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"into","","",0,[[],["u"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","siphasher::sip128","",3,[[["t"]],["t"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"into","","",3,[[],["u"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"into","","",6,[[],["u"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"into","","",7,[[],["u"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"into","","",5,[[],["u"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"finish128","","Return a 128-bit hash",5,[[["self"]],["hash128"]]],[11,"finish128","","Return a 128-bit hash",6,[[["self"]],["hash128"]]],[11,"finish128","","Return a 128-bit hash",7,[[["self"]],["hash128"]]],[11,"from","","",3,[[["u128"]],["self"]]],[11,"fmt","siphasher::sip","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","siphasher::sip128","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",6,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",7,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",5,[[["formatter"],["self"]],["result"]]],[11,"write","siphasher::sip","",0,[[["self"]]]],[11,"finish","","",0,[[["self"]],["u64"]]],[11,"write","","",1,[[["self"]]]],[11,"finish","","",1,[[["self"]],["u64"]]],[11,"write","","",2,[[["self"]]]],[11,"finish","","",2,[[["self"]],["u64"]]],[11,"write","siphasher::sip128","",5,[[["self"]]]],[11,"finish","","",5,[[["self"]],["u64"]]],[11,"write","","",6,[[["self"]]]],[11,"finish","","",6,[[["self"]],["u64"]]],[11,"write","","",7,[[["self"]]]],[11,"finish","","",7,[[["self"]],["u64"]]],[11,"into","","",3,[[],["u128"]]],[11,"clone","siphasher::sip","",1,[[["self"]],["siphasher13"]]],[11,"clone","","",2,[[["self"]],["siphasher24"]]],[11,"clone","","",0,[[["self"]],["siphasher"]]],[11,"clone","siphasher::sip128","",3,[[["self"]],["hash128"]]],[11,"clone","","",6,[[["self"]],["siphasher13"]]],[11,"clone","","",7,[[["self"]],["siphasher24"]]],[11,"clone","","",5,[[["self"]],["siphasher"]]],[11,"default","siphasher::sip","",1,[[],["siphasher13"]]],[11,"default","","",2,[[],["siphasher24"]]],[11,"default","","",0,[[],["siphasher"]]],[11,"default","siphasher::sip128","",3,[[],["hash128"]]],[11,"default","","",6,[[],["siphasher13"]]],[11,"default","","",7,[[],["siphasher24"]]],[11,"default","","",5,[[],["siphasher"]]]],"p":[[3,"SipHasher"],[3,"SipHasher13"],[3,"SipHasher24"],[3,"Hash128"],[8,"Hasher128"],[3,"SipHasher"],[3,"SipHasher13"],[3,"SipHasher24"]]};
searchIndex["smallvec"] = {"doc":"Small vectors in various sizes. These store a certain…","i":[[3,"Drain","smallvec","An iterator that removes the items from a `SmallVec` and…",null,null],[3,"SmallVec","","A `Vec`-like container that can store a small number of…",null,null],[3,"IntoIter","","An iterator that consumes a `SmallVec` and yields its…",null,null],[4,"CollectionAllocErr","","Error type for APIs with fallible heap allocation",null,null],[13,"CapacityOverflow","","Overflow `usize::MAX` or other error during size computation",0,null],[13,"AllocErr","","The allocator return an error",0,null],[12,"layout","smallvec::CollectionAllocErr","The layout that was passed to the allocator",1,null],[8,"ExtendFromSlice","smallvec","Trait to be implemented by a collection that can be…",null,null],[10,"extend_from_slice","","Extends a collection from a slice of its element type",2,[[["self"]]]],[8,"Array","","Types that can be used as the backing store for a SmallVec",null,null],[16,"Item","","The type of the array's elements.",3,null],[10,"size","","Returns the number of items the array can hold.",3,[[],["usize"]]],[8,"ToSmallVec","","Convenience trait for constructing a `SmallVec`",null,null],[10,"to_smallvec","","Construct a new `SmallVec` from a slice.",4,[[["self"]],["smallvec"]]],[11,"new","","Construct an empty vector",5,[[],["smallvec"]]],[11,"with_capacity","","Construct an empty vector with enough capacity…",5,[[["usize"]],["self"]]],[11,"from_vec","","Construct a new `SmallVec` from a `Vec<A::Item>`.",5,[[["vec"]],["smallvec"]]],[11,"from_buf","","Constructs a new `SmallVec` on the stack from an `A`…",5,[[["a"]],["smallvec"]]],[11,"from_buf_and_len","","Constructs a new `SmallVec` on the stack from an `A`…",5,[[["a"],["usize"]],["smallvec"]]],[11,"from_buf_and_len_unchecked","","Constructs a new `SmallVec` on the stack from an `A`…",5,[[["maybeuninit"],["usize"]],["smallvec"]]],[11,"set_len","","Sets the length of a vector.",5,[[["self"],["usize"]]]],[11,"inline_size","","The maximum number of elements this vector can hold inline",5,[[["self"]],["usize"]]],[11,"len","","The number of elements stored in the vector",5,[[["self"]],["usize"]]],[11,"is_empty","","Returns `true` if the vector is empty",5,[[["self"]],["bool"]]],[11,"capacity","","The number of items the vector can hold without reallocating",5,[[["self"]],["usize"]]],[11,"spilled","","Returns `true` if the data has spilled into a separate…",5,[[["self"]],["bool"]]],[11,"drain","","Creates a draining iterator that removes the specified…",5,[[["self"],["r"]],["drain"]]],[11,"push","","Append an item to the vector.",5,[[["self"]]]],[11,"pop","","Remove an item from the end of the vector and return it,…",5,[[["self"]],["option"]]],[11,"grow","","Re-allocate to set the capacity to `max(new_cap,…",5,[[["self"],["usize"]]]],[11,"try_grow","","Re-allocate to set the capacity to `max(new_cap,…",5,[[["self"],["usize"]],[["result",["collectionallocerr"]],["collectionallocerr"]]]],[11,"reserve","","Reserve capacity for `additional` more elements to be…",5,[[["self"],["usize"]]]],[11,"try_reserve","","Reserve capacity for `additional` more elements to be…",5,[[["self"],["usize"]],[["result",["collectionallocerr"]],["collectionallocerr"]]]],[11,"reserve_exact","","Reserve the minimum capacity for `additional` more…",5,[[["self"],["usize"]]]],[11,"try_reserve_exact","","Reserve the minimum capacity for `additional` more…",5,[[["self"],["usize"]],[["result",["collectionallocerr"]],["collectionallocerr"]]]],[11,"shrink_to_fit","","Shrink the capacity of the vector as much as possible.",5,[[["self"]]]],[11,"truncate","","Shorten the vector, keeping the first `len` elements and…",5,[[["self"],["usize"]]]],[11,"as_slice","","Extracts a slice containing the entire vector.",5,[[["self"]]]],[11,"as_mut_slice","","Extracts a mutable slice of the entire vector.",5,[[["self"]]]],[11,"swap_remove","","Remove the element at position `index`, replacing it with…",5,[[["self"],["usize"]]]],[11,"clear","","Remove all elements from the vector.",5,[[["self"]]]],[11,"remove","","Remove and return the element at position `index`,…",5,[[["self"],["usize"]]]],[11,"insert","","Insert an element at position `index`, shifting all…",5,[[["self"],["usize"]]]],[11,"insert_many","","Insert multiple elements at position `index`, shifting all…",5,[[["self"],["usize"],["intoiterator"]]]],[11,"into_vec","","Convert a SmallVec to a Vec, without reallocating if the…",5,[[],["vec"]]],[11,"into_boxed_slice","","Converts a `SmallVec` into a `Box<[T]>` without…",5,[[],["box"]]],[11,"into_inner","","Convert the SmallVec into an `A` if possible. Otherwise…",5,[[],["result"]]],[11,"retain","","Retains only the elements specified by the predicate.",5,[[["self"],["fnmut"]]]],[11,"dedup","","Removes consecutive duplicate elements.",5,[[["self"]]]],[11,"dedup_by","","Removes consecutive duplicate elements using the given…",5,[[["self"],["f"]]]],[11,"dedup_by_key","","Removes consecutive elements that map to the same key.",5,[[["self"],["f"]]]],[11,"from_raw_parts","","Creates a `SmallVec` directly from the raw components of…",5,[[["usize"]],["smallvec"]]],[11,"from_slice","","Copy the elements from a slice into a new `SmallVec`.",5,[[],["self"]]],[11,"insert_from_slice","","Copy elements from a slice into the vector at position…",5,[[["self"],["usize"]]]],[11,"extend_from_slice","","Copy elements from a slice and append them to the vector.",5,[[["self"]]]],[11,"resize","","Resizes the vector so that its length is equal to `len`.",5,[[["self"],["usize"]]]],[11,"from_elem","","Creates a `SmallVec` with `n` copies of `elem`. ``` use…",5,[[["usize"]],["self"]]],[11,"as_slice","","Returns the remaining items of this iterator as a slice.",6,[[["self"]]]],[11,"as_mut_slice","","Returns the remaining items of this iterator as a mutable…",6,[[["self"]]]],[14,"smallvec","","Creates a [`SmallVec`] containing the arguments.",null,null],[11,"from","","",7,[[["t"]],["t"]]],[11,"into_iter","","",7,[[],["i"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"into","","",7,[[],["u"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",5,[[],["t"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into_iter","","",5,[[],["i"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"into","","",5,[[],["u"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,[[["self"],["t"]]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into_iter","","",6,[[],["i"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"into","","",6,[[],["u"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,[[["self"],["t"]]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"into","","",0,[[],["u"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"extend_from_slice","","",5,[[["self"]]]],[11,"deref","","",5,[[["self"]]]],[11,"deref_mut","","",5,[[["self"]]]],[11,"from","","",0,[[["layouterr"]],["self"]]],[11,"from","","",5,[[],["smallvec"]]],[11,"from","","",5,[[["vec"]],["smallvec"]]],[11,"from","","",5,[[["a"]],["smallvec"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[11,"eq","","",5,[[["smallvec"],["self"]],["bool"]]],[11,"cmp","","",5,[[["self"],["smallvec"]],["ordering"]]],[11,"partial_cmp","","",5,[[["self"],["smallvec"]],[["ordering"],["option",["ordering"]]]]],[11,"drop","","",7,[[["self"]]]],[11,"drop","","",5,[[["self"]]]],[11,"drop","","",6,[[["self"]]]],[11,"index","","",5,[[["i"],["self"]]]],[11,"index_mut","","",5,[[["self"],["i"]]]],[11,"hash","","",5,[[["self"],["h"]]]],[11,"next","","",7,[[["self"]],["option"]]],[11,"size_hint","","",7,[[["self"]]]],[11,"next","","",6,[[["self"]],["option"]]],[11,"size_hint","","",6,[[["self"]]]],[11,"next_back","","",7,[[["self"]],["option"]]],[11,"next_back","","",6,[[["self"]],["option"]]],[11,"extend","","",5,[[["self"],["intoiterator"]]]],[11,"from_iter","","",5,[[["intoiterator"]],["smallvec"]]],[11,"into_iter","","",5,[[]]],[11,"len","","",7,[[["self"]],["usize"]]],[11,"as_ref","","",5,[[["self"]]]],[11,"as_mut","","",5,[[["self"]]]],[11,"clone","","",5,[[["self"]],["smallvec"]]],[11,"clone","","",6,[[["self"]],["intoiter"]]],[11,"default","","",5,[[],["smallvec"]]],[11,"borrow","","",5,[[["self"]]]],[11,"borrow_mut","","",5,[[["self"]]]]],"p":[[4,"CollectionAllocErr"],[13,"AllocErr"],[8,"ExtendFromSlice"],[8,"Array"],[8,"ToSmallVec"],[3,"SmallVec"],[3,"IntoIter"],[3,"Drain"]]};
searchIndex["soft_ascii_string"] = {"doc":"This crate provides char, str and string wrappers which…","i":[[3,"SoftAsciiChar","soft_ascii_string","a `char` wrapper with a \"is us-ascii\" soft constraint",null,null],[3,"SoftAsciiStr","","A `str` wrapper adding a \"is us-ascii\" soft constraint.",null,null],[3,"SoftAsciiChars","","a wrapper around `Chars` turning each char into a…",null,null],[3,"SoftAsciiCharIndices","","a wrapper around `CharsIndices` turning each char into a…",null,null],[3,"SoftAsciiLines","","a wrapper around `Lines` turning each line into a…",null,null],[3,"SoftAsciiSplitWhitespace","","a wrapper around `SplitWhitespace` turning each section…",null,null],[3,"SoftAsciiString","","a `String` wrapper with an additional \"is us-ascii\" soft…",null,null],[0,"error","","",null,null],[3,"StringFromStrError","soft_ascii_string::error","Error returned if FromStr failed",null,null],[3,"FromSourceError","","Error returned if creating a SoftAsciiStr/SoftAsciiString…",null,null],[11,"new","","creates a new FromSourceError",0,[[["s"]],["self"]]],[11,"source","","returns a reference to the source",0,[[["self"]],["s"]]],[11,"into_source","","returns the source",0,[[],["s"]]],[11,"from_unchecked","soft_ascii_string","",1,[[["char"]],["self"]]],[11,"from_char_unchecked","","",1,[[["char"]],["self"]]],[11,"from_char","","",1,[[["char"]],[["result",["fromsourceerror"]],["fromsourceerror",["char"]]]]],[11,"is_ascii","","",1,[[],["bool"]]],[11,"revalidate_soft_constraint","","",1,[[],[["result",["char"]],["char"]]]],[11,"is_digit","","",1,[[["u32"]],["bool"]]],[11,"to_digit","","",1,[[["u32"]],[["u32"],["option",["u32"]]]]],[11,"escape_unicode","","",1,[[],["escapeunicode"]]],[11,"escape_debug","","",1,[[],["escapedebug"]]],[11,"escape_default","","",1,[[],["escapedefault"]]],[11,"len_utf8","","",1,[[],["usize"]]],[11,"len_utf16","","",1,[[],["usize"]]],[11,"encode_utf8","","",1,[[],["str"]]],[11,"encode_utf16","","",1,[[]]],[11,"is_alphabetic","","",1,[[],["bool"]]],[11,"is_lowercase","","",1,[[],["bool"]]],[11,"is_uppercase","","",1,[[],["bool"]]],[11,"is_whitespace","","",1,[[],["bool"]]],[11,"is_alphanumeric","","",1,[[],["bool"]]],[11,"is_control","","",1,[[],["bool"]]],[11,"is_numeric","","",1,[[],["bool"]]],[11,"to_lowercase","","",1,[[],["tolowercase"]]],[11,"to_uppercase","","",1,[[],["touppercase"]]],[11,"from_unchecked","","",2,[[["str"]],["softasciistr"]]],[11,"from_str_unchecked","","",2,[[["str"]],["softasciistr"]]],[11,"from_unchecked_mut","","",2,[[["str"]],["softasciistr"]]],[11,"from_str","","",2,[[["str"]],[["fromsourceerror",["str"]],["self"],["result",["fromsourceerror"]]]]],[11,"revalidate_soft_constraint","","reruns checks if the \"is us-ascii\" soft constraint is…",2,[[["self"]],[["fromsourceerror",["str"]],["self"],["result",["fromsourceerror"]]]]],[11,"as_str","","",2,[[["self"]],["str"]]],[11,"into_soft_ascii_string","","",2,[[["box",["softasciistr"]],["softasciistr"]],["softasciistring"]]],[11,"from_boxed_str","","",2,[[["str"],["box",["str"]]],[["box",["softasciistr"]],["softasciistr"]]]],[11,"into_boxed_str","","",2,[[["box",["softasciistr"]],["softasciistr"]],[["str"],["box",["str"]]]]],[11,"lines","","",2,[[["self"]],["softasciilines"]]],[11,"split_whitespace","","",2,[[["self"]],["softasciisplitwhitespace"]]],[11,"char_indices","","",2,[[["self"]],["softasciicharindices"]]],[11,"chars","","",2,[[["self"]],["softasciichars"]]],[11,"split_at","","",2,[[["self"],["usize"]]]],[11,"slice_unchecked","","",2,[[["self"],["usize"]],["softasciistr"]]],[11,"get_unchecked","","Proxy of [`std::str::get_unchecked`].",2,[[["i"],["self"]],["softasciistr"]]],[11,"inner_str_mut","","returns a mutable `str` reference to the inner buffer",2,[[["self"]],["str"]]],[11,"parse","","",2,[[["self"]],["result"]]],[11,"to_lowercase","","",2,[[["self"]],["softasciistring"]]],[11,"to_uppercase","","",2,[[["self"]],["softasciistring"]]],[11,"repeat","","",2,[[["self"],["usize"]],["softasciistring"]]],[11,"trim_right","","",2,[[["self"]],["softasciistr"]]],[11,"trim_left","","",2,[[["self"]],["softasciistr"]]],[11,"trim_end","","",2,[[["self"]],["softasciistr"]]],[11,"trim_start","","",2,[[["self"]],["softasciistr"]]],[11,"trim","","",2,[[["self"]],["softasciistr"]]],[11,"len","","",2,[[["self"]],["usize"]]],[11,"is_empty","","",2,[[["self"]],["bool"]]],[11,"is_char_boundary","","",2,[[["self"],["usize"]],["bool"]]],[11,"as_ptr","","",2,[[["self"]]]],[11,"encode_utf16","","",2,[[["self"]],["encodeutf16"]]],[11,"is_ascii","","",2,[[["self"]],["bool"]]],[11,"as_bytes","","",2,[[["self"]]]],[11,"from_unchecked","","",3,[[["into",["string"]],["string"]],["self"]]],[11,"from_string_unchecked","","",3,[[["into",["string"]],["string"]],["self"]]],[11,"from_string","","",3,[[["s"]],[["result",["fromsourceerror"]],["fromsourceerror"]]]],[11,"new","","",3,[[],["self"]]],[11,"with_capacity","","",3,[[["usize"]],["self"]]],[11,"revalidate_soft_constraint","","",3,[[],[["result",["softasciistring","string"]],["softasciistring"],["string"]]]],[11,"inner_string_mut","","",3,[[["self"]],["string"]]],[11,"inner_string","","",3,[[["self"]],["string"]]],[11,"push_str","","",3,[[["self"],["softasciistr"]]]],[11,"into_bytes","","",3,[[],[["vec",["u8"]],["u8"]]]],[11,"push","","",3,[[["self"],["softasciichar"]]]],[11,"pop","","",3,[[["self"]],[["softasciichar"],["option",["softasciichar"]]]]],[11,"remove","","",3,[[["self"],["usize"]],["softasciichar"]]],[11,"insert","","",3,[[["self"],["usize"],["softasciichar"]]]],[11,"insert_str","","",3,[[["self"],["usize"],["softasciistr"]]]],[11,"as_soft_ascii_str","","",3,[[["self"]],["softasciistr"]]],[11,"as_soft_ascii_str_mut","","",3,[[["self"]],["softasciistr"]]],[11,"split_off","","",3,[[["self"],["usize"]],["softasciistring"]]],[11,"into_boxed_soft_ascii_str","","",3,[[],[["box",["softasciistr"]],["softasciistr"]]]],[11,"into_boxed_str","","",3,[[],[["str"],["box",["str"]]]]],[11,"is_ascii","","",3,[[["self"]],["bool"]]],[11,"as_bytes","","",3,[[["self"]]]],[11,"capacity","","",3,[[["self"]],["usize"]]],[11,"len","","",3,[[["self"]],["usize"]]],[11,"as_str","","",3,[[["self"]],["str"]]],[11,"is_empty","","",3,[[["self"]],["bool"]]],[11,"reserve","","",3,[[["self"],["usize"]]]],[11,"reserve_exact","","",3,[[["self"],["usize"]]]],[11,"shrink_to_fit","","",3,[[["self"]]]],[11,"truncate","","",3,[[["self"],["usize"]]]],[11,"clear","","",3,[[["self"]]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"to_string","","",1,[[["self"]],["string"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"to_string","","",2,[[["self"]],["string"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"into_iter","","",4,[[],["i"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,[[["self"],["t"]]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"into_iter","","",5,[[],["i"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,[[["self"],["t"]]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"into_iter","","",6,[[],["i"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,[[["self"],["t"]]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"into_iter","","",7,[[],["i"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,[[["self"],["t"]]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"to_string","","",3,[[["self"]],["string"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","soft_ascii_string::error","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,[[["self"],["t"]]]],[11,"to_string","","",8,[[["self"]],["string"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"as_ref","soft_ascii_string","",2,[[["self"]],["self"]]],[11,"as_ref","","",2,[[["self"]],["str"]]],[11,"as_ref","","",2,[[["self"]]]],[11,"as_ref","","",2,[[["self"]],["osstr"]]],[11,"as_ref","","",2,[[["self"]],["path"]]],[11,"as_ref","","",3,[[["self"]],["softasciistr"]]],[11,"as_ref","","",3,[[["self"]],["str"]]],[11,"as_ref","","",3,[[["self"]]]],[11,"as_ref","","",3,[[["self"]],["osstr"]]],[11,"as_ref","","",3,[[["self"]],["path"]]],[11,"from","","",4,[[["softasciistr"]],["softasciichars"]]],[11,"from","","",5,[[["softasciistr"]],["softasciicharindices"]]],[11,"from","","",6,[[["softasciistr"]],["softasciilines"]]],[11,"from","","",7,[[["softasciistr"]],["softasciisplitwhitespace"]]],[11,"from","","",3,[[["cow",["softasciistr"]],["softasciistr"]],["self"]]],[11,"from","","",3,[[["softasciistr"]],["self"]]],[11,"from","","",3,[[["box",["softasciistr"]],["softasciistr"]],["softasciistring"]]],[11,"into","","",1,[[],["char"]]],[11,"into","","",3,[[],[["vec",["u8"]],["u8"]]]],[11,"into","","",3,[[],["string"]]],[11,"next_back","","",4,[[["self"]],["option"]]],[11,"next_back","","",5,[[["self"]],["option"]]],[11,"next_back","","",6,[[["self"]],["option"]]],[11,"next_back","","",7,[[["self"]],["option"]]],[11,"extend","","",3,[[["self"],["i"]]]],[11,"extend","","",3,[[["self"],["i"]]]],[11,"extend","","",3,[[["self"],["i"]]]],[11,"extend","","",3,[[["self"],["i"]]]],[11,"extend","","",3,[[["self"],["i"]]]],[11,"next","","",4,[[["self"]],["option"]]],[11,"count","","",4,[[],["usize"]]],[11,"size_hint","","",4,[[["self"]]]],[11,"last","","",4,[[],["option"]]],[11,"next","","",5,[[["self"]],["option"]]],[11,"count","","",5,[[],["usize"]]],[11,"size_hint","","",5,[[["self"]]]],[11,"last","","",5,[[],["option"]]],[11,"next","","",6,[[["self"]],["option"]]],[11,"size_hint","","",6,[[["self"]]]],[11,"next","","",7,[[["self"]],["option"]]],[11,"clone","soft_ascii_string::error","",8,[[["self"]],["stringfromstrerror"]]],[11,"clone","","",0,[[["self"]],["fromsourceerror"]]],[11,"clone","soft_ascii_string","",1,[[["self"]],["softasciichar"]]],[11,"clone","","",4,[[["self"]],["softasciichars"]]],[11,"clone","","",5,[[["self"]],["softasciicharindices"]]],[11,"clone","","",6,[[["self"]],["softasciilines"]]],[11,"clone","","",7,[[["self"]],["softasciisplitwhitespace"]]],[11,"clone","","",3,[[["self"]],["softasciistring"]]],[11,"default","","",1,[[],["softasciichar"]]],[11,"default","","",3,[[],["softasciistring"]]],[11,"cmp","","",1,[[["softasciichar"],["self"]],["ordering"]]],[11,"cmp","","",2,[[["self"],["softasciistr"]],["ordering"]]],[11,"cmp","","",3,[[["self"],["softasciistring"]],["ordering"]]],[11,"eq","soft_ascii_string::error","",8,[[["self"],["stringfromstrerror"]],["bool"]]],[11,"eq","","",0,[[["fromsourceerror"],["self"]],["bool"]]],[11,"ne","","",0,[[["fromsourceerror"],["self"]],["bool"]]],[11,"eq","soft_ascii_string","",1,[[["softasciichar"],["self"]],["bool"]]],[11,"ne","","",1,[[["softasciichar"],["self"]],["bool"]]],[11,"eq","","",1,[[["self"],["char"]],["bool"]]],[11,"eq","","",2,[[["self"],["softasciistr"]],["bool"]]],[11,"ne","","",2,[[["self"],["softasciistr"]],["bool"]]],[11,"eq","","",2,[[["self"],["softasciistring"]],["bool"]]],[11,"eq","","",2,[[["string"],["self"]],["bool"]]],[11,"eq","","",2,[[["str"],["self"]],["bool"]]],[11,"eq","","",2,[[["cow"],["self"]],["bool"]]],[11,"eq","","",2,[[["cow"],["self"]],["bool"]]],[11,"eq","","",2,[[["osstring"],["self"]],["bool"]]],[11,"eq","","",2,[[["osstr"],["self"]],["bool"]]],[11,"eq","","",3,[[["self"],["softasciistring"]],["bool"]]],[11,"ne","","",3,[[["self"],["softasciistring"]],["bool"]]],[11,"eq","","",3,[[["str"],["self"]],["bool"]]],[11,"eq","","",3,[[["str"],["self"]],["bool"]]],[11,"eq","","",3,[[["string"],["self"]],["bool"]]],[11,"eq","","",3,[[["softasciistr"],["self"]],["bool"]]],[11,"eq","","",3,[[["cow"],["self"]],["bool"]]],[11,"eq","","",3,[[["cow"],["self"]],["bool"]]],[11,"partial_cmp","","",1,[[["softasciichar"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",1,[[["softasciichar"],["self"]],["bool"]]],[11,"le","","",1,[[["softasciichar"],["self"]],["bool"]]],[11,"gt","","",1,[[["softasciichar"],["self"]],["bool"]]],[11,"ge","","",1,[[["softasciichar"],["self"]],["bool"]]],[11,"partial_cmp","","",2,[[["self"],["softasciistr"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",2,[[["self"],["softasciistr"]],["bool"]]],[11,"le","","",2,[[["self"],["softasciistr"]],["bool"]]],[11,"gt","","",2,[[["self"],["softasciistr"]],["bool"]]],[11,"ge","","",2,[[["self"],["softasciistr"]],["bool"]]],[11,"partial_cmp","","",3,[[["self"],["softasciistring"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",3,[[["self"],["softasciistring"]],["bool"]]],[11,"le","","",3,[[["self"],["softasciistring"]],["bool"]]],[11,"gt","","",3,[[["self"],["softasciistring"]],["bool"]]],[11,"ge","","",3,[[["self"],["softasciistring"]],["bool"]]],[11,"to_owned","","",2,[[["self"]],["softasciistring"]]],[11,"deref","","",3,[[["self"]]]],[11,"deref_mut","","",3,[[["self"]]]],[11,"fmt","soft_ascii_string::error","",8,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","soft_ascii_string","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",6,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","soft_ascii_string::error","",8,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","soft_ascii_string","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"add","","",3,[[["softasciistr"]],["self"]]],[11,"add_assign","","",3,[[["softasciistr"],["self"]]]],[11,"index","","",2,[[["range",["usize"]],["self"],["usize"]]]],[11,"index","","",2,[[["rangefrom",["usize"]],["self"],["usize"]]]],[11,"index","","",2,[[["rangeto",["usize"]],["self"],["usize"]]]],[11,"index","","",2,[[["self"],["rangefull"]]]],[11,"index","","",3,[[["range",["usize"]],["self"],["usize"]]]],[11,"index","","",3,[[["rangefrom",["usize"]],["self"],["usize"]]]],[11,"index","","",3,[[["rangeto",["usize"]],["self"],["usize"]]]],[11,"index","","",3,[[["self"],["rangefull"]]]],[11,"index_mut","","",3,[[["range",["usize"]],["self"],["usize"]]]],[11,"index_mut","","",3,[[["rangefrom",["usize"]],["self"],["usize"]]]],[11,"index_mut","","",3,[[["self"],["rangeto",["usize"]],["usize"]]]],[11,"index_mut","","",3,[[["self"],["rangefull"]]]],[11,"hash","soft_ascii_string::error","",8,[[["self"],["__h"]]]],[11,"hash","","",0,[[["self"],["__h"]]]],[11,"hash","soft_ascii_string","",1,[[["self"],["__h"]]]],[11,"hash","","",2,[[["self"],["__h"]]]],[11,"hash","","",3,[[["self"],["__h"]]]],[11,"from_iter","","",3,[[["i"]],["self"]]],[11,"from_iter","","",3,[[["i"]],["self"]]],[11,"from_iter","","",3,[[["i"]],["self"]]],[11,"from_iter","","",3,[[["i"]],["self"]]],[11,"from_iter","","",3,[[["i"]],["self"]]],[11,"from_str","","",3,[[["str"]],["result"]]],[11,"borrow","","",3,[[["self"]],["str"]]],[11,"borrow","","",3,[[["self"]],["softasciistr"]]],[11,"description","soft_ascii_string::error","",8,[[["self"]],["str"]]],[11,"description","","",0,[[["self"]],["str"]]],[11,"to_socket_addrs","soft_ascii_string","",2,[[["self"]],[["result",["intoiter"]],["intoiter",["socketaddr"]]]]],[11,"to_socket_addrs","","",3,[[["self"]],[["result",["intoiter"]],["intoiter",["socketaddr"]]]]]],"p":[[3,"FromSourceError"],[3,"SoftAsciiChar"],[3,"SoftAsciiStr"],[3,"SoftAsciiString"],[3,"SoftAsciiChars"],[3,"SoftAsciiCharIndices"],[3,"SoftAsciiLines"],[3,"SoftAsciiSplitWhitespace"],[3,"StringFromStrError"]]};
searchIndex["stable_deref_trait"] = {"doc":"This module defines an unsafe marker trait, StableDeref,…","i":[[8,"StableDeref","stable_deref_trait","An unsafe marker trait for types that deref to a stable…",null,null],[8,"CloneStableDeref","","An unsafe marker trait for types where clones deref to the…",null,null]],"p":[]};
searchIndex["strsim"] = {"doc":"This library implements string similarity metrics.","i":[[4,"StrSimError","strsim","",null,null],[13,"DifferentLengthArgs","","",0,null],[5,"hamming","","Calculates the number of positions in the two strings…",null,[[["str"]],["hammingresult"]]],[5,"jaro","","Calculates the Jaro similarity between two strings. The…",null,[[["str"]],["f64"]]],[5,"jaro_winkler","","Like Jaro but gives a boost to strings that have a common…",null,[[["str"]],["f64"]]],[5,"levenshtein","","Calculates the minimum number of insertions, deletions,…",null,[[["str"]],["usize"]]],[5,"normalized_levenshtein","","Calculates a normalized score of the Levenshtein algorithm…",null,[[["str"]],["f64"]]],[5,"osa_distance","","Like Levenshtein but allows for adjacent transpositions.…",null,[[["str"]],["usize"]]],[5,"damerau_levenshtein","","Like optimal string alignment, but substrings can be…",null,[[["str"]],["usize"]]],[5,"normalized_damerau_levenshtein","","Calculates a normalized score of the Damerau–Levenshtein…",null,[[["str"]],["f64"]]],[6,"HammingResult","","",null,null],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"eq","","",0,[[["self"],["strsimerror"]],["bool"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]]],"p":[[4,"StrSimError"]]};
searchIndex["syn"] = {"doc":"![github] ![crates-io] ![docs-rs]","i":[[3,"Ident","syn","A word of Rust code, which may be a keyword or legal…",null,null],[3,"Attribute","","An attribute like `#[repr(transparent)]`.",null,null],[12,"pound_token","","",0,null],[12,"style","","",0,null],[12,"bracket_token","","",0,null],[12,"path","","",0,null],[12,"tokens","","",0,null],[3,"MetaList","","A structured list within an attribute, like `derive(Copy,…",null,null],[12,"path","","",1,null],[12,"paren_token","","",1,null],[12,"nested","","",1,null],[3,"MetaNameValue","","A name-value pair within an attribute, like `feature =…",null,null],[12,"path","","",2,null],[12,"eq_token","","",2,null],[12,"lit","","",2,null],[3,"Field","","A field of a struct or enum variant.",null,null],[12,"attrs","","Attributes tagged on the field.",3,null],[12,"vis","","Visibility of the field.",3,null],[12,"ident","","Name of the field, if any.",3,null],[12,"colon_token","","",3,null],[12,"ty","","Type of the field.",3,null],[3,"FieldsNamed","","Named fields of a struct or struct variant such as `Point…",null,null],[12,"brace_token","","",4,null],[12,"named","","",4,null],[3,"FieldsUnnamed","","Unnamed fields of a tuple struct or tuple variant such as…",null,null],[12,"paren_token","","",5,null],[12,"unnamed","","",5,null],[3,"Variant","","An enum variant.",null,null],[12,"attrs","","Attributes tagged on the variant.",6,null],[12,"ident","","Name of the variant.",6,null],[12,"fields","","Content stored in the variant.",6,null],[12,"discriminant","","Explicit discriminant: `Variant = 1`",6,null],[3,"VisCrate","","A crate-level visibility: `crate`.",null,null],[12,"crate_token","","",7,null],[3,"VisPublic","","A public visibility level: `pub`.",null,null],[12,"pub_token","","",8,null],[3,"VisRestricted","","A visibility level restricted to some path: `pub(self)` or…",null,null],[12,"pub_token","","",9,null],[12,"paren_token","","",9,null],[12,"in_token","","",9,null],[12,"path","","",9,null],[3,"ExprArray","","A slice literal expression: `[a, b, c, d]`.",null,null],[3,"ExprAssign","","An assignment expression: `a = compute()`.",null,null],[3,"ExprAssignOp","","A compound assignment expression: `counter += 1`.",null,null],[3,"ExprAsync","","An async block: `async { ... }`.",null,null],[3,"ExprAwait","","An await expression: `fut.await`.",null,null],[3,"ExprBinary","","A binary operation: `a + b`, `a * b`.",null,null],[12,"attrs","","",10,null],[12,"left","","",10,null],[12,"op","","",10,null],[12,"right","","",10,null],[3,"ExprBlock","","A blocked scope: `{ ... }`.",null,null],[3,"ExprBox","","A box expression: `box f`.",null,null],[3,"ExprBreak","","A `break`, with an optional label to break and an optional…",null,null],[3,"ExprCall","","A function call expression: `invoke(a, b)`.",null,null],[12,"attrs","","",11,null],[12,"func","","",11,null],[12,"paren_token","","",11,null],[12,"args","","",11,null],[3,"ExprCast","","A cast expression: `foo as f64`.",null,null],[12,"attrs","","",12,null],[12,"expr","","",12,null],[12,"as_token","","",12,null],[12,"ty","","",12,null],[3,"ExprClosure","","A closure expression: `|a, b| a + b`.",null,null],[3,"ExprContinue","","A `continue`, with an optional label.",null,null],[3,"ExprField","","Access of a named struct field (`obj.k`) or unnamed tuple…",null,null],[12,"attrs","","",13,null],[12,"base","","",13,null],[12,"dot_token","","",13,null],[12,"member","","",13,null],[3,"ExprForLoop","","A for loop: `for pat in expr { ... }`.",null,null],[3,"ExprGroup","","An expression contained within invisible delimiters.",null,null],[3,"ExprIf","","An `if` expression with an optional `else` block: `if expr…",null,null],[3,"ExprIndex","","A square bracketed indexing expression: `vector[2]`.",null,null],[12,"attrs","","",14,null],[12,"expr","","",14,null],[12,"bracket_token","","",14,null],[12,"index","","",14,null],[3,"ExprLet","","A `let` guard: `let Some(x) = opt`.",null,null],[3,"ExprLit","","A literal in place of an expression: `1`, `\"foo\"`.",null,null],[12,"attrs","","",15,null],[12,"lit","","",15,null],[3,"ExprLoop","","Conditionless loop: `loop { ... }`.",null,null],[3,"ExprMacro","","A macro invocation expression: `format!(\"{}\", q)`.",null,null],[3,"ExprMatch","","A `match` expression: `match n { Some(n) => {}, None => {}…",null,null],[3,"ExprMethodCall","","A method call expression: `x.foo::<T>(a, b)`.",null,null],[3,"ExprParen","","A parenthesized expression: `(a + b)`.",null,null],[12,"attrs","","",16,null],[12,"paren_token","","",16,null],[12,"expr","","",16,null],[3,"ExprPath","","A path like `std::mem::replace` possibly containing…",null,null],[12,"attrs","","",17,null],[12,"qself","","",17,null],[12,"path","","",17,null],[3,"ExprRange","","A range expression: `1..2`, `1..`, `..2`, `1..=2`, `..=2`.",null,null],[3,"ExprReference","","A referencing operation: `&a` or `&mut a`.",null,null],[3,"ExprRepeat","","An array literal constructed from one repeated element:…",null,null],[3,"ExprReturn","","A `return`, with an optional value to be returned.",null,null],[3,"ExprStruct","","A struct literal expression: `Point { x: 1, y: 1 }`.",null,null],[3,"ExprTry","","A try-expression: `expr?`.",null,null],[3,"ExprTryBlock","","A try block: `try { ... }`.",null,null],[3,"ExprTuple","","A tuple expression: `(a, b, c, d)`.",null,null],[3,"ExprType","","A type ascription expression: `foo: f64`.",null,null],[3,"ExprUnary","","A unary operation: `!x`, `*x`.",null,null],[12,"attrs","","",18,null],[12,"op","","",18,null],[12,"expr","","",18,null],[3,"ExprUnsafe","","An unsafe block: `unsafe { ... }`.",null,null],[3,"ExprWhile","","A while loop: `while expr { ... }`.",null,null],[3,"ExprYield","","A yield expression: `yield expr`.",null,null],[3,"Index","","The index of an unnamed tuple struct field.",null,null],[12,"index","","",19,null],[12,"span","","",19,null],[3,"BoundLifetimes","","A set of bound lifetimes: `for<'a, 'b, 'c>`.",null,null],[12,"for_token","","",20,null],[12,"lt_token","","",20,null],[12,"lifetimes","","",20,null],[12,"gt_token","","",20,null],[3,"ConstParam","","A const generic parameter: `const LENGTH: usize`.",null,null],[12,"attrs","","",21,null],[12,"const_token","","",21,null],[12,"ident","","",21,null],[12,"colon_token","","",21,null],[12,"ty","","",21,null],[12,"eq_token","","",21,null],[12,"default","","",21,null],[3,"Generics","","Lifetimes and type parameters attached to a declaration of…",null,null],[12,"lt_token","","",22,null],[12,"params","","",22,null],[12,"gt_token","","",22,null],[12,"where_clause","","",22,null],[3,"LifetimeDef","","A lifetime definition: `'a: 'b + 'c + 'd`.",null,null],[12,"attrs","","",23,null],[12,"lifetime","","",23,null],[12,"colon_token","","",23,null],[12,"bounds","","",23,null],[3,"PredicateEq","","An equality predicate in a `where` clause (unsupported).",null,null],[12,"lhs_ty","","",24,null],[12,"eq_token","","",24,null],[12,"rhs_ty","","",24,null],[3,"PredicateLifetime","","A lifetime predicate in a `where` clause: `'a: 'b + 'c`.",null,null],[12,"lifetime","","",25,null],[12,"colon_token","","",25,null],[12,"bounds","","",25,null],[3,"PredicateType","","A type predicate in a `where` clause: `for<'c> Foo<'c>:…",null,null],[12,"lifetimes","","Any lifetimes from a `for` binding",26,null],[12,"bounded_ty","","The type being bounded",26,null],[12,"colon_token","","",26,null],[12,"bounds","","Trait and lifetime bounds (`Clone+Send+'static`)",26,null],[3,"TraitBound","","A trait used as a bound on a type parameter.",null,null],[12,"paren_token","","",27,null],[12,"modifier","","",27,null],[12,"lifetimes","","The `for<'a>` in `for<'a> Foo<&'a T>`",27,null],[12,"path","","The `Foo<&'a T>` in `for<'a> Foo<&'a T>`",27,null],[3,"TypeParam","","A generic type parameter: `T: Into<String>`.",null,null],[12,"attrs","","",28,null],[12,"ident","","",28,null],[12,"colon_token","","",28,null],[12,"bounds","","",28,null],[12,"eq_token","","",28,null],[12,"default","","",28,null],[3,"WhereClause","","A `where` clause in a definition: `where T:…",null,null],[12,"where_token","","",29,null],[12,"predicates","","",29,null],[3,"ImplGenerics","","Returned by `Generics::split_for_impl`.",null,null],[3,"Turbofish","","Returned by `TypeGenerics::as_turbofish`.",null,null],[3,"TypeGenerics","","Returned by `Generics::split_for_impl`.",null,null],[3,"Lifetime","","A Rust lifetime: `'a`.",null,null],[12,"apostrophe","","",30,null],[12,"ident","","",30,null],[3,"LitBool","","A boolean literal: `true` or `false`.",null,null],[12,"value","","",31,null],[12,"span","","",31,null],[3,"LitByte","","A byte literal: `b'f'`.",null,null],[3,"LitByteStr","","A byte string literal: `b\"foo\"`.",null,null],[3,"LitChar","","A character literal: `'a'`.",null,null],[3,"LitFloat","","A floating point literal: `1f64` or `1.0e10f64`.",null,null],[3,"LitInt","","An integer literal: `1` or `1u16`.",null,null],[3,"LitStr","","A UTF-8 string literal: `\"foo\"`.",null,null],[3,"Macro","","A macro invocation: `println!(\"{}\", mac)`.",null,null],[12,"path","","",32,null],[12,"bang_token","","",32,null],[12,"delimiter","","",32,null],[12,"tokens","","",32,null],[3,"DataEnum","","An enum input to a `proc_macro_derive` macro.",null,null],[12,"enum_token","","",33,null],[12,"brace_token","","",33,null],[12,"variants","","",33,null],[3,"DataStruct","","A struct input to a `proc_macro_derive` macro.",null,null],[12,"struct_token","","",34,null],[12,"fields","","",34,null],[12,"semi_token","","",34,null],[3,"DataUnion","","An untagged union input to a `proc_macro_derive` macro.",null,null],[12,"union_token","","",35,null],[12,"fields","","",35,null],[3,"DeriveInput","","Data structure sent to a `proc_macro_derive` macro.",null,null],[12,"attrs","","Attributes tagged on the whole struct or enum.",36,null],[12,"vis","","Visibility of the struct or enum.",36,null],[12,"ident","","Name of the struct or enum.",36,null],[12,"generics","","Generics required to complete the definition.",36,null],[12,"data","","Data within the struct or enum.",36,null],[3,"Abi","","The binary interface of a function: `extern \"C\"`.",null,null],[12,"extern_token","","",37,null],[12,"name","","",37,null],[3,"BareFnArg","","An argument in a function type: the `usize` in `fn(usize)…",null,null],[12,"attrs","","",38,null],[12,"name","","",38,null],[12,"ty","","",38,null],[3,"TypeArray","","A fixed size array type: `[T; n]`.",null,null],[12,"bracket_token","","",39,null],[12,"elem","","",39,null],[12,"semi_token","","",39,null],[12,"len","","",39,null],[3,"TypeBareFn","","A bare function type: `fn(usize) -> bool`.",null,null],[12,"lifetimes","","",40,null],[12,"unsafety","","",40,null],[12,"abi","","",40,null],[12,"fn_token","","",40,null],[12,"paren_token","","",40,null],[12,"inputs","","",40,null],[12,"variadic","","",40,null],[12,"output","","",40,null],[3,"TypeGroup","","A type contained within invisible delimiters.",null,null],[12,"group_token","","",41,null],[12,"elem","","",41,null],[3,"TypeImplTrait","","An `impl Bound1 + Bound2 + Bound3` type where `Bound` is a…",null,null],[12,"impl_token","","",42,null],[12,"bounds","","",42,null],[3,"TypeInfer","","Indication that a type should be inferred by the compiler:…",null,null],[12,"underscore_token","","",43,null],[3,"TypeMacro","","A macro in the type position.",null,null],[12,"mac","","",44,null],[3,"TypeNever","","The never type: `!`.",null,null],[12,"bang_token","","",45,null],[3,"TypeParen","","A parenthesized type equivalent to the inner type.",null,null],[12,"paren_token","","",46,null],[12,"elem","","",46,null],[3,"TypePath","","A path like `std::slice::Iter`, optionally qualified with…",null,null],[12,"qself","","",47,null],[12,"path","","",47,null],[3,"TypePtr","","A raw pointer type: `*const T` or `*mut T`.",null,null],[12,"star_token","","",48,null],[12,"const_token","","",48,null],[12,"mutability","","",48,null],[12,"elem","","",48,null],[3,"TypeReference","","A reference type: `&'a T` or `&'a mut T`.",null,null],[12,"and_token","","",49,null],[12,"lifetime","","",49,null],[12,"mutability","","",49,null],[12,"elem","","",49,null],[3,"TypeSlice","","A dynamically sized slice type: `[T]`.",null,null],[12,"bracket_token","","",50,null],[12,"elem","","",50,null],[3,"TypeTraitObject","","A trait object type `Bound1 + Bound2 + Bound3` where…",null,null],[12,"dyn_token","","",51,null],[12,"bounds","","",51,null],[3,"TypeTuple","","A tuple type: `(A, B, C, String)`.",null,null],[12,"paren_token","","",52,null],[12,"elems","","",52,null],[3,"Variadic","","The variadic argument of a foreign function.",null,null],[12,"attrs","","",53,null],[12,"dots","","",53,null],[3,"AngleBracketedGenericArguments","","Angle bracketed arguments of a path segment: the `<K, V>`…",null,null],[12,"colon2_token","","",54,null],[12,"lt_token","","",54,null],[12,"args","","",54,null],[12,"gt_token","","",54,null],[3,"Binding","","A binding (equality constraint) on an associated type:…",null,null],[12,"ident","","",55,null],[12,"eq_token","","",55,null],[12,"ty","","",55,null],[3,"Constraint","","An associated type bound: `Iterator<Item: Display>`.",null,null],[12,"ident","","",56,null],[12,"colon_token","","",56,null],[12,"bounds","","",56,null],[3,"ParenthesizedGenericArguments","","Arguments of a function path segment: the `(A, B) -> C` in…",null,null],[12,"paren_token","","",57,null],[12,"inputs","","`(A, B)`",57,null],[12,"output","","`C`",57,null],[3,"Path","","A path at which a named item is exported (e.g.…",null,null],[12,"leading_colon","","",58,null],[12,"segments","","",58,null],[3,"PathSegment","","A segment of a path together with any path arguments on…",null,null],[12,"ident","","",59,null],[12,"arguments","","",59,null],[3,"QSelf","","The explicit Self type in a qualified path: the `T` in `<T…",null,null],[12,"lt_token","","",60,null],[12,"ty","","",60,null],[12,"position","","",60,null],[12,"as_token","","",60,null],[12,"gt_token","","",60,null],[3,"Error","","Error returned when a Syn parser cannot parse the input…",null,null],[4,"AttrStyle","","Distinguishes between attributes that decorate an item and…",null,null],[13,"Outer","","",61,null],[13,"Inner","","",61,null],[4,"Meta","","Content of a compile-time structured attribute.",null,null],[13,"Path","","",62,null],[13,"List","","A structured list within an attribute, like `derive(Copy,…",62,null],[13,"NameValue","","A name-value pair within an attribute, like `feature =…",62,null],[4,"NestedMeta","","Element of a compile-time attribute list.",null,null],[13,"Meta","","A structured meta item, like the `Copy` in…",63,null],[13,"Lit","","A Rust literal, like the `\"new_name\"` in…",63,null],[4,"Fields","","Data stored within an enum variant or struct.",null,null],[13,"Named","","Named fields of a struct or struct variant such as `Point…",64,null],[13,"Unnamed","","Unnamed fields of a tuple struct or tuple variant such as…",64,null],[13,"Unit","","Unit struct or unit variant such as `None`.",64,null],[4,"Visibility","","The visibility level of an item: inherited or `pub` or…",null,null],[13,"Public","","A public visibility level: `pub`.",65,null],[13,"Crate","","A crate-level visibility: `crate`.",65,null],[13,"Restricted","","A visibility level restricted to some path: `pub(self)` or…",65,null],[13,"Inherited","","An inherited visibility, which usually means private.",65,null],[4,"Expr","","A Rust expression.",null,null],[13,"Array","","A slice literal expression: `[a, b, c, d]`.",66,null],[13,"Assign","","An assignment expression: `a = compute()`.",66,null],[13,"AssignOp","","A compound assignment expression: `counter += 1`.",66,null],[13,"Async","","An async block: `async { ... }`.",66,null],[13,"Await","","An await expression: `fut.await`.",66,null],[13,"Binary","","A binary operation: `a + b`, `a * b`.",66,null],[13,"Block","","A blocked scope: `{ ... }`.",66,null],[13,"Box","","A box expression: `box f`.",66,null],[13,"Break","","A `break`, with an optional label to break and an optional…",66,null],[13,"Call","","A function call expression: `invoke(a, b)`.",66,null],[13,"Cast","","A cast expression: `foo as f64`.",66,null],[13,"Closure","","A closure expression: `|a, b| a + b`.",66,null],[13,"Continue","","A `continue`, with an optional label.",66,null],[13,"Field","","Access of a named struct field (`obj.k`) or unnamed tuple…",66,null],[13,"ForLoop","","A for loop: `for pat in expr { ... }`.",66,null],[13,"Group","","An expression contained within invisible delimiters.",66,null],[13,"If","","An `if` expression with an optional `else` block: `if expr…",66,null],[13,"Index","","A square bracketed indexing expression: `vector[2]`.",66,null],[13,"Let","","A `let` guard: `let Some(x) = opt`.",66,null],[13,"Lit","","A literal in place of an expression: `1`, `\"foo\"`.",66,null],[13,"Loop","","Conditionless loop: `loop { ... }`.",66,null],[13,"Macro","","A macro invocation expression: `format!(\"{}\", q)`.",66,null],[13,"Match","","A `match` expression: `match n { Some(n) => {}, None => {}…",66,null],[13,"MethodCall","","A method call expression: `x.foo::<T>(a, b)`.",66,null],[13,"Paren","","A parenthesized expression: `(a + b)`.",66,null],[13,"Path","","A path like `std::mem::replace` possibly containing…",66,null],[13,"Range","","A range expression: `1..2`, `1..`, `..2`, `1..=2`, `..=2`.",66,null],[13,"Reference","","A referencing operation: `&a` or `&mut a`.",66,null],[13,"Repeat","","An array literal constructed from one repeated element:…",66,null],[13,"Return","","A `return`, with an optional value to be returned.",66,null],[13,"Struct","","A struct literal expression: `Point { x: 1, y: 1 }`.",66,null],[13,"Try","","A try-expression: `expr?`.",66,null],[13,"TryBlock","","A try block: `try { ... }`.",66,null],[13,"Tuple","","A tuple expression: `(a, b, c, d)`.",66,null],[13,"Type","","A type ascription expression: `foo: f64`.",66,null],[13,"Unary","","A unary operation: `!x`, `*x`.",66,null],[13,"Unsafe","","An unsafe block: `unsafe { ... }`.",66,null],[13,"Verbatim","","Tokens in expression position not interpreted by Syn.",66,null],[13,"While","","A while loop: `while expr { ... }`.",66,null],[13,"Yield","","A yield expression: `yield expr`.",66,null],[4,"Member","","A struct or tuple struct field accessed in a struct…",null,null],[13,"Named","","A named field like `self.x`.",67,null],[13,"Unnamed","","An unnamed field like `self.0`.",67,null],[4,"GenericParam","","A generic type parameter, lifetime, or const generic: `T:…",null,null],[13,"Type","","A generic type parameter: `T: Into<String>`.",68,null],[13,"Lifetime","","A lifetime definition: `'a: 'b + 'c + 'd`.",68,null],[13,"Const","","A const generic parameter: `const LENGTH: usize`.",68,null],[4,"TraitBoundModifier","","A modifier on a trait bound, currently only used for the…",null,null],[13,"None","","",69,null],[13,"Maybe","","",69,null],[4,"TypeParamBound","","A trait or lifetime used as a bound on a type parameter.",null,null],[13,"Trait","","",70,null],[13,"Lifetime","","",70,null],[4,"WherePredicate","","A single predicate in a `where` clause: `T:…",null,null],[13,"Type","","A type predicate in a `where` clause: `for<'c> Foo<'c>:…",71,null],[13,"Lifetime","","A lifetime predicate in a `where` clause: `'a: 'b + 'c`.",71,null],[13,"Eq","","An equality predicate in a `where` clause (unsupported).",71,null],[4,"Lit","","A Rust literal such as a string or integer or boolean.",null,null],[13,"Str","","A UTF-8 string literal: `\"foo\"`.",72,null],[13,"ByteStr","","A byte string literal: `b\"foo\"`.",72,null],[13,"Byte","","A byte literal: `b'f'`.",72,null],[13,"Char","","A character literal: `'a'`.",72,null],[13,"Int","","An integer literal: `1` or `1u16`.",72,null],[13,"Float","","A floating point literal: `1f64` or `1.0e10f64`.",72,null],[13,"Bool","","A boolean literal: `true` or `false`.",72,null],[13,"Verbatim","","A raw token literal not interpreted by Syn.",72,null],[4,"StrStyle","","The style of a string literal, either plain quoted or a…",null,null],[13,"Cooked","","An ordinary string like `\"data\"`.",73,null],[13,"Raw","","A raw string like `r##\"data\"##`.",73,null],[4,"MacroDelimiter","","A grouping token that surrounds a macro body: `m!(...)` or…",null,null],[13,"Paren","","",74,null],[13,"Brace","","",74,null],[13,"Bracket","","",74,null],[4,"Data","","The storage of a struct, enum or union data structure.",null,null],[13,"Struct","","A struct input to a `proc_macro_derive` macro.",75,null],[13,"Enum","","An enum input to a `proc_macro_derive` macro.",75,null],[13,"Union","","An untagged union input to a `proc_macro_derive` macro.",75,null],[4,"BinOp","","A binary operator: `+`, `+=`, `&`.",null,null],[13,"Add","","The `+` operator (addition)",76,null],[13,"Sub","","The `-` operator (subtraction)",76,null],[13,"Mul","","The `*` operator (multiplication)",76,null],[13,"Div","","The `/` operator (division)",76,null],[13,"Rem","","The `%` operator (modulus)",76,null],[13,"And","","The `&&` operator (logical and)",76,null],[13,"Or","","The `||` operator (logical or)",76,null],[13,"BitXor","","The `^` operator (bitwise xor)",76,null],[13,"BitAnd","","The `&` operator (bitwise and)",76,null],[13,"BitOr","","The `|` operator (bitwise or)",76,null],[13,"Shl","","The `<<` operator (shift left)",76,null],[13,"Shr","","The `>>` operator (shift right)",76,null],[13,"Eq","","The `==` operator (equality)",76,null],[13,"Lt","","The `<` operator (less than)",76,null],[13,"Le","","The `<=` operator (less than or equal to)",76,null],[13,"Ne","","The `!=` operator (not equal to)",76,null],[13,"Ge","","The `>=` operator (greater than or equal to)",76,null],[13,"Gt","","The `>` operator (greater than)",76,null],[13,"AddEq","","The `+=` operator",76,null],[13,"SubEq","","The `-=` operator",76,null],[13,"MulEq","","The `*=` operator",76,null],[13,"DivEq","","The `/=` operator",76,null],[13,"RemEq","","The `%=` operator",76,null],[13,"BitXorEq","","The `^=` operator",76,null],[13,"BitAndEq","","The `&=` operator",76,null],[13,"BitOrEq","","The `|=` operator",76,null],[13,"ShlEq","","The `<<=` operator",76,null],[13,"ShrEq","","The `>>=` operator",76,null],[4,"UnOp","","A unary operator: `*`, `!`, `-`.",null,null],[13,"Deref","","The `*` operator for dereferencing",77,null],[13,"Not","","The `!` operator for logical inversion",77,null],[13,"Neg","","The `-` operator for negation",77,null],[4,"ReturnType","","Return type of a function signature.",null,null],[13,"Default","","Return type is not specified.",78,null],[13,"Type","","A particular type is returned.",78,null],[4,"Type","","The possible types that a Rust value could have.",null,null],[13,"Array","","A fixed size array type: `[T; n]`.",79,null],[13,"BareFn","","A bare function type: `fn(usize) -> bool`.",79,null],[13,"Group","","A type contained within invisible delimiters.",79,null],[13,"ImplTrait","","An `impl Bound1 + Bound2 + Bound3` type where `Bound` is a…",79,null],[13,"Infer","","Indication that a type should be inferred by the compiler:…",79,null],[13,"Macro","","A macro in the type position.",79,null],[13,"Never","","The never type: `!`.",79,null],[13,"Paren","","A parenthesized type equivalent to the inner type.",79,null],[13,"Path","","A path like `std::slice::Iter`, optionally qualified with…",79,null],[13,"Ptr","","A raw pointer type: `*const T` or `*mut T`.",79,null],[13,"Reference","","A reference type: `&'a T` or `&'a mut T`.",79,null],[13,"Slice","","A dynamically sized slice type: `[T]`.",79,null],[13,"TraitObject","","A trait object type `Bound1 + Bound2 + Bound3` where…",79,null],[13,"Tuple","","A tuple type: `(A, B, C, String)`.",79,null],[13,"Verbatim","","Tokens in type position not interpreted by Syn.",79,null],[4,"GenericArgument","","An individual generic argument, like `'a`, `T`, or `Item =…",null,null],[13,"Lifetime","","A lifetime argument.",80,null],[13,"Type","","A type argument.",80,null],[13,"Binding","","A binding (equality constraint) on an associated type: the…",80,null],[13,"Constraint","","An associated type bound: `Iterator<Item: Display>`.",80,null],[13,"Const","","A const expression. Must be inside of a block.",80,null],[4,"PathArguments","","Angle bracketed or parenthesized arguments of a path…",null,null],[13,"None","","",81,null],[13,"AngleBracketed","","The `<'a, T>` in `std::slice::iter<'a, T>`.",81,null],[13,"Parenthesized","","The `(A, B) -> C` in `Fn(A, B) -> C`.",81,null],[5,"parse","","Parse tokens of source code into the chosen syntax tree…",null,[[["tokenstream"]],[["result"],["parse"]]]],[5,"parse2","","Parse a proc-macro2 token stream into the chosen syntax…",null,[[["tokenstream"]],[["result"],["parse"]]]],[5,"parse_str","","Parse a string of Rust code into the chosen syntax tree…",null,[[["str"]],[["result"],["parse"]]]],[0,"token","","Tokens representing Rust punctuation, keywords, and…",null,null],[3,"Underscore","syn::token","`_`",null,null],[12,"spans","","",82,null],[3,"Abstract","","`abstract`",null,null],[12,"span","","",83,null],[3,"As","","`as`",null,null],[12,"span","","",84,null],[3,"Async","","`async`",null,null],[12,"span","","",85,null],[3,"Auto","","`auto`",null,null],[12,"span","","",86,null],[3,"Await","","`await`",null,null],[12,"span","","",87,null],[3,"Become","","`become`",null,null],[12,"span","","",88,null],[3,"Box","","`box`",null,null],[12,"span","","",89,null],[3,"Break","","`break`",null,null],[12,"span","","",90,null],[3,"Const","","`const`",null,null],[12,"span","","",91,null],[3,"Continue","","`continue`",null,null],[12,"span","","",92,null],[3,"Crate","","`crate`",null,null],[12,"span","","",93,null],[3,"Default","","`default`",null,null],[12,"span","","",94,null],[3,"Do","","`do`",null,null],[12,"span","","",95,null],[3,"Dyn","","`dyn`",null,null],[12,"span","","",96,null],[3,"Else","","`else`",null,null],[12,"span","","",97,null],[3,"Enum","","`enum`",null,null],[12,"span","","",98,null],[3,"Extern","","`extern`",null,null],[12,"span","","",99,null],[3,"Final","","`final`",null,null],[12,"span","","",100,null],[3,"Fn","","`fn`",null,null],[12,"span","","",101,null],[3,"For","","`for`",null,null],[12,"span","","",102,null],[3,"If","","`if`",null,null],[12,"span","","",103,null],[3,"Impl","","`impl`",null,null],[12,"span","","",104,null],[3,"In","","`in`",null,null],[12,"span","","",105,null],[3,"Let","","`let`",null,null],[12,"span","","",106,null],[3,"Loop","","`loop`",null,null],[12,"span","","",107,null],[3,"Macro","","`macro`",null,null],[12,"span","","",108,null],[3,"Match","","`match`",null,null],[12,"span","","",109,null],[3,"Mod","","`mod`",null,null],[12,"span","","",110,null],[3,"Move","","`move`",null,null],[12,"span","","",111,null],[3,"Mut","","`mut`",null,null],[12,"span","","",112,null],[3,"Override","","`override`",null,null],[12,"span","","",113,null],[3,"Priv","","`priv`",null,null],[12,"span","","",114,null],[3,"Pub","","`pub`",null,null],[12,"span","","",115,null],[3,"Ref","","`ref`",null,null],[12,"span","","",116,null],[3,"Return","","`return`",null,null],[12,"span","","",117,null],[3,"SelfType","","`Self`",null,null],[12,"span","","",118,null],[3,"SelfValue","","`self`",null,null],[12,"span","","",119,null],[3,"Static","","`static`",null,null],[12,"span","","",120,null],[3,"Struct","","`struct`",null,null],[12,"span","","",121,null],[3,"Super","","`super`",null,null],[12,"span","","",122,null],[3,"Trait","","`trait`",null,null],[12,"span","","",123,null],[3,"Try","","`try`",null,null],[12,"span","","",124,null],[3,"Type","","`type`",null,null],[12,"span","","",125,null],[3,"Typeof","","`typeof`",null,null],[12,"span","","",126,null],[3,"Union","","`union`",null,null],[12,"span","","",127,null],[3,"Unsafe","","`unsafe`",null,null],[12,"span","","",128,null],[3,"Unsized","","`unsized`",null,null],[12,"span","","",129,null],[3,"Use","","`use`",null,null],[12,"span","","",130,null],[3,"Virtual","","`virtual`",null,null],[12,"span","","",131,null],[3,"Where","","`where`",null,null],[12,"span","","",132,null],[3,"While","","`while`",null,null],[12,"span","","",133,null],[3,"Yield","","`yield`",null,null],[12,"span","","",134,null],[3,"Add","","`+`",null,null],[12,"spans","","",135,null],[3,"AddEq","","`+=`",null,null],[12,"spans","","",136,null],[3,"And","","`&`",null,null],[12,"spans","","",137,null],[3,"AndAnd","","`&&`",null,null],[12,"spans","","",138,null],[3,"AndEq","","`&=`",null,null],[12,"spans","","",139,null],[3,"At","","`@`",null,null],[12,"spans","","",140,null],[3,"Bang","","`!`",null,null],[12,"spans","","",141,null],[3,"Caret","","`^`",null,null],[12,"spans","","",142,null],[3,"CaretEq","","`^=`",null,null],[12,"spans","","",143,null],[3,"Colon","","`:`",null,null],[12,"spans","","",144,null],[3,"Colon2","","`::`",null,null],[12,"spans","","",145,null],[3,"Comma","","`,`",null,null],[12,"spans","","",146,null],[3,"Div","","`/`",null,null],[12,"spans","","",147,null],[3,"DivEq","","`/=`",null,null],[12,"spans","","",148,null],[3,"Dollar","","`$`",null,null],[12,"spans","","",149,null],[3,"Dot","","`.`",null,null],[12,"spans","","",150,null],[3,"Dot2","","`..`",null,null],[12,"spans","","",151,null],[3,"Dot3","","`...`",null,null],[12,"spans","","",152,null],[3,"DotDotEq","","`..=`",null,null],[12,"spans","","",153,null],[3,"Eq","","`=`",null,null],[12,"spans","","",154,null],[3,"EqEq","","`==`",null,null],[12,"spans","","",155,null],[3,"Ge","","`>=`",null,null],[12,"spans","","",156,null],[3,"Gt","","`>`",null,null],[12,"spans","","",157,null],[3,"Le","","`<=`",null,null],[12,"spans","","",158,null],[3,"Lt","","`<`",null,null],[12,"spans","","",159,null],[3,"MulEq","","`*=`",null,null],[12,"spans","","",160,null],[3,"Ne","","`!=`",null,null],[12,"spans","","",161,null],[3,"Or","","`|`",null,null],[12,"spans","","",162,null],[3,"OrEq","","`|=`",null,null],[12,"spans","","",163,null],[3,"OrOr","","`||`",null,null],[12,"spans","","",164,null],[3,"Pound","","`#`",null,null],[12,"spans","","",165,null],[3,"Question","","`?`",null,null],[12,"spans","","",166,null],[3,"RArrow","","`->`",null,null],[12,"spans","","",167,null],[3,"LArrow","","`<-`",null,null],[12,"spans","","",168,null],[3,"Rem","","`%`",null,null],[12,"spans","","",169,null],[3,"RemEq","","`%=`",null,null],[12,"spans","","",170,null],[3,"FatArrow","","`=>`",null,null],[12,"spans","","",171,null],[3,"Semi","","`;`",null,null],[12,"spans","","",172,null],[3,"Shl","","`<<`",null,null],[12,"spans","","",173,null],[3,"ShlEq","","`<<=`",null,null],[12,"spans","","",174,null],[3,"Shr","","`>>`",null,null],[12,"spans","","",175,null],[3,"ShrEq","","`>>=`",null,null],[12,"spans","","",176,null],[3,"Star","","`*`",null,null],[12,"spans","","",177,null],[3,"Sub","","`-`",null,null],[12,"spans","","",178,null],[3,"SubEq","","`-=`",null,null],[12,"spans","","",179,null],[3,"Tilde","","`~`",null,null],[12,"spans","","",180,null],[3,"Brace","","`{...}`",null,null],[12,"span","","",181,null],[3,"Bracket","","`[...]`",null,null],[12,"span","","",182,null],[3,"Paren","","`(...)`",null,null],[12,"span","","",183,null],[3,"Group","","None-delimited group",null,null],[12,"span","","",184,null],[8,"Token","","Marker trait for types that represent single tokens.",null,null],[11,"surround","","",181,[[["f"],["self"],["tokenstream"]]]],[11,"surround","","",182,[[["f"],["self"],["tokenstream"]]]],[11,"surround","","",183,[[["f"],["self"],["tokenstream"]]]],[11,"surround","","",184,[[["f"],["self"],["tokenstream"]]]],[11,"parse_meta","syn","Parses the content of the attribute, consisting of the…",0,[[["self"]],[["result",["meta"]],["meta"]]]],[11,"parse_args","","Parse the arguments to the attribute as a syntax tree.",0,[[["self"]],[["result"],["parse"]]]],[11,"parse_args_with","","Parse the arguments to the attribute using the given parser.",0,[[["self"],["parser"]],["result"]]],[11,"parse_outer","","Parses zero or more outer attributes from the stream.",0,[[["parsestream"]],[["result",["vec"]],["vec"]]]],[11,"parse_inner","","Parses zero or more inner attributes from the stream.",0,[[["parsestream"]],[["result",["vec"]],["vec"]]]],[11,"path","","Returns the identifier that begins this structured meta…",62,[[["self"]],["path"]]],[11,"parse_named","","Parses a named (braced struct) field.",3,[[["parsestream"]],["result"]]],[11,"parse_unnamed","","Parses an unnamed (tuple struct) field.",3,[[["parsestream"]],["result"]]],[11,"iter","","Get an iterator over the borrowed [`Field`] items in this…",64,[[["self"]],[["field"],["iter",["field"]]]]],[11,"iter_mut","","Get an iterator over the mutably borrowed [`Field`] items…",64,[[["self"]],[["itermut",["field"]],["field"]]]],[11,"len","","Returns the number of fields.",64,[[["self"]],["usize"]]],[11,"is_empty","","Returns `true` if there are zero fields.",64,[[["self"]],["bool"]]],[11,"type_params","","Returns an Iterator<Item = &TypeParam> over the type…",22,[[["self"]],["typeparams"]]],[11,"type_params_mut","","Returns an Iterator<Item = &mut TypeParam> over the type…",22,[[["self"]],["typeparamsmut"]]],[11,"lifetimes","","Returns an Iterator<Item = &LifetimeDef> over the lifetime…",22,[[["self"]],["lifetimes"]]],[11,"lifetimes_mut","","Returns an Iterator<Item = &mut LifetimeDef> over the…",22,[[["self"]],["lifetimesmut"]]],[11,"const_params","","Returns an Iterator<Item = &ConstParam> over the constant…",22,[[["self"]],["constparams"]]],[11,"const_params_mut","","Returns an Iterator<Item = &mut ConstParam> over the…",22,[[["self"]],["constparamsmut"]]],[11,"make_where_clause","","Initializes an empty `where`-clause if there is not one…",22,[[["self"]],["whereclause"]]],[11,"split_for_impl","","Split a type's generics into the pieces required for…",22,[[["self"]]]],[11,"as_turbofish","","Turn a type's generics like `<X, Y>` into a turbofish like…",185,[[["self"]],["turbofish"]]],[11,"new","","",23,[[["lifetime"]],["self"]]],[11,"new","","Panics",30,[[["str"],["span"]],["self"]]],[11,"new","","Interpret a Syn literal from a proc-macro2 literal.",72,[[["literal"]],["self"]]],[11,"suffix","","",72,[[["self"]],["str"]]],[11,"new","","",186,[[["str"],["span"]],["self"]]],[11,"value","","",186,[[["self"]],["string"]]],[11,"parse","","Parse a syntax tree node from the content of this string…",186,[[["self"]],[["result"],["parse"]]]],[11,"parse_with","","Invoke parser on the content of this string literal.",186,[[["self"],["parser"]],["result"]]],[11,"span","","",186,[[["self"]],["span"]]],[11,"set_span","","",186,[[["self"],["span"]]]],[11,"suffix","","",186,[[["self"]],["str"]]],[11,"new","","",187,[[["span"]],["self"]]],[11,"value","","",187,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"span","","",187,[[["self"]],["span"]]],[11,"set_span","","",187,[[["self"],["span"]]]],[11,"suffix","","",187,[[["self"]],["str"]]],[11,"new","","",188,[[["span"],["u8"]],["self"]]],[11,"value","","",188,[[["self"]],["u8"]]],[11,"span","","",188,[[["self"]],["span"]]],[11,"set_span","","",188,[[["self"],["span"]]]],[11,"suffix","","",188,[[["self"]],["str"]]],[11,"new","","",189,[[["span"],["char"]],["self"]]],[11,"value","","",189,[[["self"]],["char"]]],[11,"span","","",189,[[["self"]],["span"]]],[11,"set_span","","",189,[[["self"],["span"]]]],[11,"suffix","","",189,[[["self"]],["str"]]],[11,"new","","",190,[[["str"],["span"]],["self"]]],[11,"base10_digits","","",190,[[["self"]],["str"]]],[11,"base10_parse","","Parses the literal into a selected number type.",190,[[["self"]],["result"]]],[11,"suffix","","",190,[[["self"]],["str"]]],[11,"span","","",190,[[["self"]],["span"]]],[11,"set_span","","",190,[[["self"],["span"]]]],[11,"new","","",191,[[["str"],["span"]],["self"]]],[11,"base10_digits","","",191,[[["self"]],["str"]]],[11,"base10_parse","","",191,[[["self"]],["result"]]],[11,"suffix","","",191,[[["self"]],["str"]]],[11,"span","","",191,[[["self"]],["span"]]],[11,"set_span","","",191,[[["self"],["span"]]]],[11,"parse_body","","Parse the tokens within the macro invocation's delimiters…",32,[[["self"]],[["result"],["parse"]]]],[11,"parse_body_with","","Parse the tokens within the macro invocation's delimiters…",32,[[["self"],["parser"]],["result"]]],[11,"without_plus","","In some positions, types may not contain the `+`…",79,[[["parsestream"]],["result"]]],[11,"without_plus","","",78,[[["parsestream"]],["result"]]],[11,"without_plus","","",51,[[["parsestream"]],["result"]]],[11,"parse_mod_style","","Parse a `Path` containing no path arguments on any of its…",58,[[["parsestream"]],["result"]]],[11,"is_ident","","Determines whether this is a path of length 1 equal to the…",58,[[["i"],["self"]],["bool"]]],[11,"get_ident","","If this path consists of a single ident, returns the ident.",58,[[["self"]],[["ident"],["option",["ident"]]]]],[11,"is_empty","","",81,[[["self"]],["bool"]]],[0,"buffer","","A stably addressed token buffer supporting efficient…",null,null],[3,"TokenBuffer","syn::buffer","A buffer that can be efficiently traversed multiple times,…",null,null],[3,"Cursor","","A cheaply copyable cursor into a `TokenBuffer`.",null,null],[11,"new","","Creates a `TokenBuffer` containing all the tokens from the…",192,[[["tokenstream"]],["tokenbuffer"]]],[11,"new2","","Creates a `TokenBuffer` containing all the tokens from the…",192,[[["tokenstream"]],["tokenbuffer"]]],[11,"begin","","Creates a cursor referencing the first token in the buffer…",192,[[["self"]],["cursor"]]],[11,"empty","","Creates a cursor referencing a static empty TokenStream.",193,[[],["self"]]],[11,"eof","","Checks whether the cursor is currently pointing at the end…",193,[[],["bool"]]],[11,"group","","If the cursor is pointing at a `Group` with the given…",193,[[["delimiter"]],["option"]]],[11,"ident","","If the cursor is pointing at a `Ident`, returns it along…",193,[[],["option"]]],[11,"punct","","If the cursor is pointing at an `Punct`, returns it along…",193,[[],["option"]]],[11,"literal","","If the cursor is pointing at a `Literal`, return it along…",193,[[],["option"]]],[11,"lifetime","","If the cursor is pointing at a `Lifetime`, returns it…",193,[[],["option"]]],[11,"token_stream","","Copies all remaining tokens visible from this cursor into…",193,[[],["tokenstream"]]],[11,"token_tree","","If the cursor is pointing at a `TokenTree`, returns it…",193,[[],["option"]]],[11,"span","","Returns the `Span` of the current token, or…",193,[[],["span"]]],[0,"ext","syn","Extension traits to provide parsing methods on foreign…",null,null],[8,"IdentExt","syn::ext","Additional methods for `Ident` not provided by proc-macro2…",null,null],[10,"parse_any","","Parses any identifier including keywords.",194,[[["parsestream"]],["result"]]],[18,"peek_any","","Peeks any identifier including keywords. Usage:…",194,null],[10,"unraw","","Strips the raw marker `r#`, if any, from the beginning of…",194,[[["self"]],["ident"]]],[0,"punctuated","syn","A punctuated sequence of syntax tree nodes separated by…",null,null],[3,"Punctuated","syn::punctuated","A punctuated sequence of syntax tree nodes of type `T`…",null,null],[3,"Pairs","","An iterator over borrowed pairs of type `Pair<&T, &P>`.",null,null],[3,"PairsMut","","An iterator over mutably borrowed pairs of type `Pair<&mut…",null,null],[3,"IntoPairs","","An iterator over owned pairs of type `Pair<T, P>`.",null,null],[3,"IntoIter","","An iterator over owned values of type `T`.",null,null],[3,"Iter","","An iterator over borrowed values of type `&T`.",null,null],[3,"IterMut","","An iterator over mutably borrowed values of type `&mut T`.",null,null],[4,"Pair","","A single syntax tree node of type `T` followed by its…",null,null],[13,"Punctuated","","",195,null],[13,"End","","",195,null],[11,"new","","Creates an empty punctuated sequence.",196,[[],["punctuated"]]],[11,"is_empty","","Determines whether this punctuated sequence is empty,…",196,[[["self"]],["bool"]]],[11,"len","","Returns the number of syntax tree nodes in this punctuated…",196,[[["self"]],["usize"]]],[11,"first","","Borrows the first element in this sequence.",196,[[["self"]],[["t"],["option"]]]],[11,"first_mut","","Mutably borrows the first element in this sequence.",196,[[["self"]],[["option"],["t"]]]],[11,"last","","Borrows the last element in this sequence.",196,[[["self"]],[["t"],["option"]]]],[11,"last_mut","","Mutably borrows the last element in this sequence.",196,[[["self"]],[["option"],["t"]]]],[11,"iter","","Returns an iterator over borrowed syntax tree nodes of…",196,[[["self"]],["iter"]]],[11,"iter_mut","","Returns an iterator over mutably borrowed syntax tree…",196,[[["self"]],["itermut"]]],[11,"pairs","","Returns an iterator over the contents of this sequence as…",196,[[["self"]],["pairs"]]],[11,"pairs_mut","","Returns an iterator over the contents of this sequence as…",196,[[["self"]],["pairsmut"]]],[11,"into_pairs","","Returns an iterator over the contents of this sequence as…",196,[[],["intopairs"]]],[11,"push_value","","Appends a syntax tree node onto the end of this punctuated…",196,[[["self"],["t"]]]],[11,"push_punct","","Appends a trailing punctuation onto the end of this…",196,[[["self"],["p"]]]],[11,"pop","","Removes the last punctuated pair from this sequence, or…",196,[[["self"]],[["pair"],["option",["pair"]]]]],[11,"trailing_punct","","Determines whether this punctuated sequence ends with a…",196,[[["self"]],["bool"]]],[11,"empty_or_trailing","","Returns true if either this `Punctuated` is empty, or it…",196,[[["self"]],["bool"]]],[11,"push","","Appends a syntax tree node onto the end of this punctuated…",196,[[["self"],["t"]]]],[11,"insert","","Inserts an element at position `index`.",196,[[["self"],["usize"],["t"]]]],[11,"clear","","Clears the sequence of all values and punctuation, making…",196,[[["self"]]]],[11,"parse_terminated","","Parses zero or more occurrences of `T` separated by…",196,[[["parsestream"]],["result"]]],[11,"parse_terminated_with","","Parses zero or more occurrences of `T` using the given…",196,[[["parsestream"]],["result"]]],[11,"parse_separated_nonempty","","Parses one or more occurrences of `T` separated by…",196,[[["parsestream"]],["result"]]],[11,"parse_separated_nonempty_with","","Parses one or more occurrences of `T` using the given…",196,[[["parsestream"]],["result"]]],[11,"into_value","","Extracts the syntax tree node from this punctuated pair,…",195,[[],["t"]]],[11,"value","","Borrows the syntax tree node from this punctuated pair.",195,[[["self"]],["t"]]],[11,"value_mut","","Mutably borrows the syntax tree node from this punctuated…",195,[[["self"]],["t"]]],[11,"punct","","Borrows the punctuation from this punctuated pair, unless…",195,[[["self"]],[["option"],["p"]]]],[11,"new","","Creates a punctuated pair out of a syntax tree node and an…",195,[[["t"],["option"]],["self"]]],[11,"into_tuple","","Produces this punctuated pair as a tuple of syntax tree…",195,[[]]],[0,"spanned","syn","A trait that can provide the `Span` of the complete…",null,null],[8,"Spanned","syn::spanned","A trait that can provide the `Span` of the complete…",null,null],[10,"span","","Returns a `Span` covering the complete contents of this…",197,[[["self"]],["span"]]],[0,"visit","syn","Syntax tree traversal to walk a shared borrow of a syntax…",null,null],[5,"visit_abi","syn::visit","",null,[[["abi"],["v"]]]],[5,"visit_angle_bracketed_generic_arguments","","",null,[[["v"],["anglebracketedgenericarguments"]]]],[5,"visit_attr_style","","",null,[[["v"],["attrstyle"]]]],[5,"visit_attribute","","",null,[[["attribute"],["v"]]]],[5,"visit_bare_fn_arg","","",null,[[["barefnarg"],["v"]]]],[5,"visit_bin_op","","",null,[[["binop"],["v"]]]],[5,"visit_binding","","",null,[[["binding"],["v"]]]],[5,"visit_bound_lifetimes","","",null,[[["v"],["boundlifetimes"]]]],[5,"visit_const_param","","",null,[[["v"],["constparam"]]]],[5,"visit_constraint","","",null,[[["constraint"],["v"]]]],[5,"visit_data","","",null,[[["v"],["data"]]]],[5,"visit_data_enum","","",null,[[["dataenum"],["v"]]]],[5,"visit_data_struct","","",null,[[["datastruct"],["v"]]]],[5,"visit_data_union","","",null,[[["dataunion"],["v"]]]],[5,"visit_derive_input","","",null,[[["deriveinput"],["v"]]]],[5,"visit_expr","","",null,[[["v"],["expr"]]]],[5,"visit_expr_binary","","",null,[[["exprbinary"],["v"]]]],[5,"visit_expr_call","","",null,[[["exprcall"],["v"]]]],[5,"visit_expr_cast","","",null,[[["v"],["exprcast"]]]],[5,"visit_expr_field","","",null,[[["v"],["exprfield"]]]],[5,"visit_expr_index","","",null,[[["exprindex"],["v"]]]],[5,"visit_expr_lit","","",null,[[["v"],["exprlit"]]]],[5,"visit_expr_paren","","",null,[[["exprparen"],["v"]]]],[5,"visit_expr_path","","",null,[[["exprpath"],["v"]]]],[5,"visit_expr_unary","","",null,[[["exprunary"],["v"]]]],[5,"visit_field","","",null,[[["v"],["field"]]]],[5,"visit_fields","","",null,[[["v"],["fields"]]]],[5,"visit_fields_named","","",null,[[["v"],["fieldsnamed"]]]],[5,"visit_fields_unnamed","","",null,[[["v"],["fieldsunnamed"]]]],[5,"visit_generic_argument","","",null,[[["genericargument"],["v"]]]],[5,"visit_generic_param","","",null,[[["genericparam"],["v"]]]],[5,"visit_generics","","",null,[[["generics"],["v"]]]],[5,"visit_ident","","",null,[[["ident"],["v"]]]],[5,"visit_index","","",null,[[["index"],["v"]]]],[5,"visit_lifetime","","",null,[[["lifetime"],["v"]]]],[5,"visit_lifetime_def","","",null,[[["lifetimedef"],["v"]]]],[5,"visit_lit","","",null,[[["lit"],["v"]]]],[5,"visit_lit_bool","","",null,[[["v"],["litbool"]]]],[5,"visit_lit_byte","","",null,[[["litbyte"],["v"]]]],[5,"visit_lit_byte_str","","",null,[[["v"],["litbytestr"]]]],[5,"visit_lit_char","","",null,[[["litchar"],["v"]]]],[5,"visit_lit_float","","",null,[[["v"],["litfloat"]]]],[5,"visit_lit_int","","",null,[[["v"],["litint"]]]],[5,"visit_lit_str","","",null,[[["litstr"],["v"]]]],[5,"visit_macro","","",null,[[["macro"],["v"]]]],[5,"visit_macro_delimiter","","",null,[[["v"],["macrodelimiter"]]]],[5,"visit_member","","",null,[[["v"],["member"]]]],[5,"visit_meta","","",null,[[["meta"],["v"]]]],[5,"visit_meta_list","","",null,[[["v"],["metalist"]]]],[5,"visit_meta_name_value","","",null,[[["v"],["metanamevalue"]]]],[5,"visit_nested_meta","","",null,[[["nestedmeta"],["v"]]]],[5,"visit_parenthesized_generic_arguments","","",null,[[["v"],["parenthesizedgenericarguments"]]]],[5,"visit_path","","",null,[[["path"],["v"]]]],[5,"visit_path_arguments","","",null,[[["patharguments"],["v"]]]],[5,"visit_path_segment","","",null,[[["pathsegment"],["v"]]]],[5,"visit_predicate_eq","","",null,[[["predicateeq"],["v"]]]],[5,"visit_predicate_lifetime","","",null,[[["predicatelifetime"],["v"]]]],[5,"visit_predicate_type","","",null,[[["predicatetype"],["v"]]]],[5,"visit_qself","","",null,[[["qself"],["v"]]]],[5,"visit_return_type","","",null,[[["v"],["returntype"]]]],[5,"visit_span","","",null,[[["v"],["span"]]]],[5,"visit_trait_bound","","",null,[[["traitbound"],["v"]]]],[5,"visit_trait_bound_modifier","","",null,[[["traitboundmodifier"],["v"]]]],[5,"visit_type","","",null,[[["type"],["v"]]]],[5,"visit_type_array","","",null,[[["v"],["typearray"]]]],[5,"visit_type_bare_fn","","",null,[[["v"],["typebarefn"]]]],[5,"visit_type_group","","",null,[[["typegroup"],["v"]]]],[5,"visit_type_impl_trait","","",null,[[["typeimpltrait"],["v"]]]],[5,"visit_type_infer","","",null,[[["v"],["typeinfer"]]]],[5,"visit_type_macro","","",null,[[["typemacro"],["v"]]]],[5,"visit_type_never","","",null,[[["typenever"],["v"]]]],[5,"visit_type_param","","",null,[[["typeparam"],["v"]]]],[5,"visit_type_param_bound","","",null,[[["typeparambound"],["v"]]]],[5,"visit_type_paren","","",null,[[["v"],["typeparen"]]]],[5,"visit_type_path","","",null,[[["v"],["typepath"]]]],[5,"visit_type_ptr","","",null,[[["v"],["typeptr"]]]],[5,"visit_type_reference","","",null,[[["v"],["typereference"]]]],[5,"visit_type_slice","","",null,[[["typeslice"],["v"]]]],[5,"visit_type_trait_object","","",null,[[["v"],["typetraitobject"]]]],[5,"visit_type_tuple","","",null,[[["typetuple"],["v"]]]],[5,"visit_un_op","","",null,[[["unop"],["v"]]]],[5,"visit_variadic","","",null,[[["v"],["variadic"]]]],[5,"visit_variant","","",null,[[["variant"],["v"]]]],[5,"visit_vis_crate","","",null,[[["viscrate"],["v"]]]],[5,"visit_vis_public","","",null,[[["vispublic"],["v"]]]],[5,"visit_vis_restricted","","",null,[[["visrestricted"],["v"]]]],[5,"visit_visibility","","",null,[[["v"],["visibility"]]]],[5,"visit_where_clause","","",null,[[["v"],["whereclause"]]]],[5,"visit_where_predicate","","",null,[[["v"],["wherepredicate"]]]],[8,"Visit","","Syntax tree traversal to walk a shared borrow of a syntax…",null,null],[11,"visit_abi","","",198,[[["abi"],["self"]]]],[11,"visit_angle_bracketed_generic_arguments","","",198,[[["self"],["anglebracketedgenericarguments"]]]],[11,"visit_attr_style","","",198,[[["self"],["attrstyle"]]]],[11,"visit_attribute","","",198,[[["attribute"],["self"]]]],[11,"visit_bare_fn_arg","","",198,[[["barefnarg"],["self"]]]],[11,"visit_bin_op","","",198,[[["self"],["binop"]]]],[11,"visit_binding","","",198,[[["binding"],["self"]]]],[11,"visit_bound_lifetimes","","",198,[[["self"],["boundlifetimes"]]]],[11,"visit_const_param","","",198,[[["self"],["constparam"]]]],[11,"visit_constraint","","",198,[[["constraint"],["self"]]]],[11,"visit_data","","",198,[[["self"],["data"]]]],[11,"visit_data_enum","","",198,[[["self"],["dataenum"]]]],[11,"visit_data_struct","","",198,[[["self"],["datastruct"]]]],[11,"visit_data_union","","",198,[[["dataunion"],["self"]]]],[11,"visit_derive_input","","",198,[[["deriveinput"],["self"]]]],[11,"visit_expr","","",198,[[["self"],["expr"]]]],[11,"visit_expr_binary","","",198,[[["exprbinary"],["self"]]]],[11,"visit_expr_call","","",198,[[["self"],["exprcall"]]]],[11,"visit_expr_cast","","",198,[[["self"],["exprcast"]]]],[11,"visit_expr_field","","",198,[[["self"],["exprfield"]]]],[11,"visit_expr_index","","",198,[[["exprindex"],["self"]]]],[11,"visit_expr_lit","","",198,[[["self"],["exprlit"]]]],[11,"visit_expr_paren","","",198,[[["exprparen"],["self"]]]],[11,"visit_expr_path","","",198,[[["self"],["exprpath"]]]],[11,"visit_expr_unary","","",198,[[["self"],["exprunary"]]]],[11,"visit_field","","",198,[[["self"],["field"]]]],[11,"visit_fields","","",198,[[["self"],["fields"]]]],[11,"visit_fields_named","","",198,[[["self"],["fieldsnamed"]]]],[11,"visit_fields_unnamed","","",198,[[["self"],["fieldsunnamed"]]]],[11,"visit_generic_argument","","",198,[[["genericargument"],["self"]]]],[11,"visit_generic_param","","",198,[[["self"],["genericparam"]]]],[11,"visit_generics","","",198,[[["self"],["generics"]]]],[11,"visit_ident","","",198,[[["self"],["ident"]]]],[11,"visit_index","","",198,[[["self"],["index"]]]],[11,"visit_lifetime","","",198,[[["self"],["lifetime"]]]],[11,"visit_lifetime_def","","",198,[[["self"],["lifetimedef"]]]],[11,"visit_lit","","",198,[[["self"],["lit"]]]],[11,"visit_lit_bool","","",198,[[["self"],["litbool"]]]],[11,"visit_lit_byte","","",198,[[["litbyte"],["self"]]]],[11,"visit_lit_byte_str","","",198,[[["self"],["litbytestr"]]]],[11,"visit_lit_char","","",198,[[["self"],["litchar"]]]],[11,"visit_lit_float","","",198,[[["self"],["litfloat"]]]],[11,"visit_lit_int","","",198,[[["self"],["litint"]]]],[11,"visit_lit_str","","",198,[[["self"],["litstr"]]]],[11,"visit_macro","","",198,[[["macro"],["self"]]]],[11,"visit_macro_delimiter","","",198,[[["self"],["macrodelimiter"]]]],[11,"visit_member","","",198,[[["self"],["member"]]]],[11,"visit_meta","","",198,[[["self"],["meta"]]]],[11,"visit_meta_list","","",198,[[["self"],["metalist"]]]],[11,"visit_meta_name_value","","",198,[[["self"],["metanamevalue"]]]],[11,"visit_nested_meta","","",198,[[["self"],["nestedmeta"]]]],[11,"visit_parenthesized_generic_arguments","","",198,[[["self"],["parenthesizedgenericarguments"]]]],[11,"visit_path","","",198,[[["self"],["path"]]]],[11,"visit_path_arguments","","",198,[[["self"],["patharguments"]]]],[11,"visit_path_segment","","",198,[[["self"],["pathsegment"]]]],[11,"visit_predicate_eq","","",198,[[["predicateeq"],["self"]]]],[11,"visit_predicate_lifetime","","",198,[[["predicatelifetime"],["self"]]]],[11,"visit_predicate_type","","",198,[[["predicatetype"],["self"]]]],[11,"visit_qself","","",198,[[["self"],["qself"]]]],[11,"visit_return_type","","",198,[[["self"],["returntype"]]]],[11,"visit_span","","",198,[[["self"],["span"]]]],[11,"visit_trait_bound","","",198,[[["traitbound"],["self"]]]],[11,"visit_trait_bound_modifier","","",198,[[["self"],["traitboundmodifier"]]]],[11,"visit_type","","",198,[[["self"],["type"]]]],[11,"visit_type_array","","",198,[[["self"],["typearray"]]]],[11,"visit_type_bare_fn","","",198,[[["self"],["typebarefn"]]]],[11,"visit_type_group","","",198,[[["self"],["typegroup"]]]],[11,"visit_type_impl_trait","","",198,[[["typeimpltrait"],["self"]]]],[11,"visit_type_infer","","",198,[[["self"],["typeinfer"]]]],[11,"visit_type_macro","","",198,[[["self"],["typemacro"]]]],[11,"visit_type_never","","",198,[[["self"],["typenever"]]]],[11,"visit_type_param","","",198,[[["self"],["typeparam"]]]],[11,"visit_type_param_bound","","",198,[[["self"],["typeparambound"]]]],[11,"visit_type_paren","","",198,[[["self"],["typeparen"]]]],[11,"visit_type_path","","",198,[[["self"],["typepath"]]]],[11,"visit_type_ptr","","",198,[[["self"],["typeptr"]]]],[11,"visit_type_reference","","",198,[[["self"],["typereference"]]]],[11,"visit_type_slice","","",198,[[["self"],["typeslice"]]]],[11,"visit_type_trait_object","","",198,[[["self"],["typetraitobject"]]]],[11,"visit_type_tuple","","",198,[[["typetuple"],["self"]]]],[11,"visit_un_op","","",198,[[["self"],["unop"]]]],[11,"visit_variadic","","",198,[[["self"],["variadic"]]]],[11,"visit_variant","","",198,[[["variant"],["self"]]]],[11,"visit_vis_crate","","",198,[[["viscrate"],["self"]]]],[11,"visit_vis_public","","",198,[[["vispublic"],["self"]]]],[11,"visit_vis_restricted","","",198,[[["self"],["visrestricted"]]]],[11,"visit_visibility","","",198,[[["self"],["visibility"]]]],[11,"visit_where_clause","","",198,[[["self"],["whereclause"]]]],[11,"visit_where_predicate","","",198,[[["self"],["wherepredicate"]]]],[0,"parse","syn","Parsing interface for parsing a token stream into a syntax…",null,null],[3,"Error","syn::parse","Error returned when a Syn parser cannot parse the input…",null,null],[3,"Lookahead1","","Support for checking the next token in a stream to decide…",null,null],[3,"ParseBuffer","","Cursor position within a buffered token stream.",null,null],[3,"StepCursor","","Cursor state associated with speculative parsing.",null,null],[3,"Nothing","","An empty syntax tree node that consumes no tokens when…",null,null],[0,"discouraged","","Extensions to the parsing API with niche applicability.",null,null],[8,"Speculative","syn::parse::discouraged","Extensions to the `ParseStream` API to support speculative…",null,null],[10,"advance_to","","Advance this parse stream to the position of a forked…",199,[[["self"]]]],[6,"Result","syn::parse","The result of a Syn parser.",null,null],[6,"ParseStream","","Input to a Syn parser function.",null,null],[8,"Peek","","Types that can be parsed by looking at just one token.",null,null],[8,"Parse","","Parsing interface implemented by all types that can be…",null,null],[10,"parse","","",200,[[["parsestream"]],["result"]]],[8,"Parser","","Parser that can parse Rust tokens into a particular syntax…",null,null],[16,"Output","","",201,null],[10,"parse2","","Parse a proc-macro2 token stream into the chosen syntax…",201,[[["tokenstream"]],["result"]]],[11,"parse","","Parse tokens of source code into the chosen syntax tree…",201,[[["tokenstream"]],["result"]]],[11,"parse_str","","Parse a string of Rust code into the chosen syntax tree…",201,[[["str"]],["result"]]],[11,"error","","Triggers an error at the current position of the parse…",202,[[["display"]],["error"]]],[11,"parse","","Parses a syntax tree node of type `T`, advancing the…",203,[[["self"]],[["result"],["parse"]]]],[11,"call","","Calls the given parser function to parse a syntax tree…",203,[[["self"]],["result"]]],[11,"peek","","Looks at the next token in the parse stream to determine…",203,[[["self"],["peek"]],["bool"]]],[11,"peek2","","Looks at the second-next token in the parse stream.",203,[[["self"],["peek"]],["bool"]]],[11,"peek3","","Looks at the third-next token in the parse stream.",203,[[["self"],["peek"]],["bool"]]],[11,"parse_terminated","","Parses zero or more occurrences of `T` separated by…",203,[[["self"]],[["result",["punctuated"]],["punctuated"]]]],[11,"is_empty","","Returns whether there are tokens remaining in this stream.",203,[[["self"]],["bool"]]],[11,"lookahead1","","Constructs a helper for peeking at the next token in this…",203,[[["self"]],["lookahead1"]]],[11,"fork","","Forks a parse stream so that parsing tokens out of either…",203,[[["self"]],["self"]]],[11,"error","","Triggers an error at the current position of the parse…",203,[[["self"],["display"]],["error"]]],[11,"step","","Speculatively parses tokens from this parse stream,…",203,[[["self"],["f"]],["result"]]],[11,"span","","Returns the `Span` of the next token in the parse stream,…",203,[[["self"]],["span"]]],[11,"cursor","","Provides low-level access to the token representation…",203,[[["self"]],["cursor"]]],[11,"new","syn","Usually the [`ParseStream::error`] method will be used…",204,[[["span"],["display"]],["self"]]],[11,"new_spanned","","Creates an error with the specified message spanning the…",204,[[["totokens"],["display"]],["self"]]],[11,"span","","The source location of the error.",204,[[["self"]],["span"]]],[11,"to_compile_error","","Render the error as an invocation of [`compile_error!`].",204,[[["self"]],["tokenstream"]]],[11,"combine","","Add another error message to self such that when…",204,[[["self"],["error"]]]],[6,"AttributeArgs","","Conventional argument type associated with an invocation…",null,null],[6,"Result","","The result of a Syn parser.",null,null],[14,"parenthesized","","Parse a set of parentheses and expose their content to…",null,null],[14,"braced","","Parse a set of curly braces and expose their content to…",null,null],[14,"bracketed","","Parse a set of square brackets and expose their content to…",null,null],[14,"Token","","A type-macro that expands to the name of the Rust type…",null,null],[14,"parse_quote","","Quasi-quotation macro that accepts input like the…",null,null],[14,"parse_macro_input","","Parse the input TokenStream of a macro, triggering a…",null,null],[14,"custom_keyword","","Define a type that supports parsing and printing a given…",null,null],[14,"custom_punctuation","","Define a type that supports parsing and printing a…",null,null],[11,"peek","","",205,[[["cursor"]],["bool"]]],[11,"display","","",205,[[],["str"]]],[11,"span","","",205,[[["self"]],["span"]]],[11,"from","","",205,[[["t"]],["t"]]],[11,"into","","",205,[[],["u"]]],[11,"to_owned","","",205,[[["self"]],["t"]]],[11,"clone_into","","",205,[[["self"],["t"]]]],[11,"to_string","","",205,[[["self"]],["string"]]],[11,"try_from","","",205,[[["u"]],["result"]]],[11,"try_into","","",205,[[],["result"]]],[11,"borrow","","",205,[[["self"]],["t"]]],[11,"borrow_mut","","",205,[[["self"]],["t"]]],[11,"type_id","","",205,[[["self"]],["typeid"]]],[11,"span","","",0,[[["self"]],["span"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"span","","",1,[[["self"]],["span"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"span","","",2,[[["self"]],["span"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"span","","",3,[[["self"]],["span"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"span","","",4,[[["self"]],["span"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,[[["self"],["t"]]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"span","","",5,[[["self"]],["span"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,[[["self"],["t"]]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"span","","",6,[[["self"]],["span"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,[[["self"],["t"]]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"span","","",7,[[["self"]],["span"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,[[["self"],["t"]]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"span","","",8,[[["self"]],["span"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,[[["self"],["t"]]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"span","","",9,[[["self"]],["span"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[],["u"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,[[["self"],["t"]]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"span","","",206,[[["self"]],["span"]]],[11,"from","","",206,[[["t"]],["t"]]],[11,"into","","",206,[[],["u"]]],[11,"to_owned","","",206,[[["self"]],["t"]]],[11,"clone_into","","",206,[[["self"],["t"]]]],[11,"try_from","","",206,[[["u"]],["result"]]],[11,"try_into","","",206,[[],["result"]]],[11,"borrow","","",206,[[["self"]],["t"]]],[11,"borrow_mut","","",206,[[["self"]],["t"]]],[11,"type_id","","",206,[[["self"]],["typeid"]]],[11,"span","","",207,[[["self"]],["span"]]],[11,"from","","",207,[[["t"]],["t"]]],[11,"into","","",207,[[],["u"]]],[11,"to_owned","","",207,[[["self"]],["t"]]],[11,"clone_into","","",207,[[["self"],["t"]]]],[11,"try_from","","",207,[[["u"]],["result"]]],[11,"try_into","","",207,[[],["result"]]],[11,"borrow","","",207,[[["self"]],["t"]]],[11,"borrow_mut","","",207,[[["self"]],["t"]]],[11,"type_id","","",207,[[["self"]],["typeid"]]],[11,"span","","",208,[[["self"]],["span"]]],[11,"from","","",208,[[["t"]],["t"]]],[11,"into","","",208,[[],["u"]]],[11,"to_owned","","",208,[[["self"]],["t"]]],[11,"clone_into","","",208,[[["self"],["t"]]]],[11,"try_from","","",208,[[["u"]],["result"]]],[11,"try_into","","",208,[[],["result"]]],[11,"borrow","","",208,[[["self"]],["t"]]],[11,"borrow_mut","","",208,[[["self"]],["t"]]],[11,"type_id","","",208,[[["self"]],["typeid"]]],[11,"span","","",209,[[["self"]],["span"]]],[11,"from","","",209,[[["t"]],["t"]]],[11,"into","","",209,[[],["u"]]],[11,"to_owned","","",209,[[["self"]],["t"]]],[11,"clone_into","","",209,[[["self"],["t"]]]],[11,"try_from","","",209,[[["u"]],["result"]]],[11,"try_into","","",209,[[],["result"]]],[11,"borrow","","",209,[[["self"]],["t"]]],[11,"borrow_mut","","",209,[[["self"]],["t"]]],[11,"type_id","","",209,[[["self"]],["typeid"]]],[11,"span","","",210,[[["self"]],["span"]]],[11,"from","","",210,[[["t"]],["t"]]],[11,"into","","",210,[[],["u"]]],[11,"to_owned","","",210,[[["self"]],["t"]]],[11,"clone_into","","",210,[[["self"],["t"]]]],[11,"try_from","","",210,[[["u"]],["result"]]],[11,"try_into","","",210,[[],["result"]]],[11,"borrow","","",210,[[["self"]],["t"]]],[11,"borrow_mut","","",210,[[["self"]],["t"]]],[11,"type_id","","",210,[[["self"]],["typeid"]]],[11,"span","","",10,[[["self"]],["span"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[],["u"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,[[["self"],["t"]]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"span","","",211,[[["self"]],["span"]]],[11,"from","","",211,[[["t"]],["t"]]],[11,"into","","",211,[[],["u"]]],[11,"to_owned","","",211,[[["self"]],["t"]]],[11,"clone_into","","",211,[[["self"],["t"]]]],[11,"try_from","","",211,[[["u"]],["result"]]],[11,"try_into","","",211,[[],["result"]]],[11,"borrow","","",211,[[["self"]],["t"]]],[11,"borrow_mut","","",211,[[["self"]],["t"]]],[11,"type_id","","",211,[[["self"]],["typeid"]]],[11,"span","","",212,[[["self"]],["span"]]],[11,"from","","",212,[[["t"]],["t"]]],[11,"into","","",212,[[],["u"]]],[11,"to_owned","","",212,[[["self"]],["t"]]],[11,"clone_into","","",212,[[["self"],["t"]]]],[11,"try_from","","",212,[[["u"]],["result"]]],[11,"try_into","","",212,[[],["result"]]],[11,"borrow","","",212,[[["self"]],["t"]]],[11,"borrow_mut","","",212,[[["self"]],["t"]]],[11,"type_id","","",212,[[["self"]],["typeid"]]],[11,"span","","",213,[[["self"]],["span"]]],[11,"from","","",213,[[["t"]],["t"]]],[11,"into","","",213,[[],["u"]]],[11,"to_owned","","",213,[[["self"]],["t"]]],[11,"clone_into","","",213,[[["self"],["t"]]]],[11,"try_from","","",213,[[["u"]],["result"]]],[11,"try_into","","",213,[[],["result"]]],[11,"borrow","","",213,[[["self"]],["t"]]],[11,"borrow_mut","","",213,[[["self"]],["t"]]],[11,"type_id","","",213,[[["self"]],["typeid"]]],[11,"span","","",11,[[["self"]],["span"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[],["u"]]],[11,"to_owned","","",11,[[["self"]],["t"]]],[11,"clone_into","","",11,[[["self"],["t"]]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"try_into","","",11,[[],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"type_id","","",11,[[["self"]],["typeid"]]],[11,"span","","",12,[[["self"]],["span"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[],["u"]]],[11,"to_owned","","",12,[[["self"]],["t"]]],[11,"clone_into","","",12,[[["self"],["t"]]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"try_into","","",12,[[],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"type_id","","",12,[[["self"]],["typeid"]]],[11,"span","","",214,[[["self"]],["span"]]],[11,"from","","",214,[[["t"]],["t"]]],[11,"into","","",214,[[],["u"]]],[11,"to_owned","","",214,[[["self"]],["t"]]],[11,"clone_into","","",214,[[["self"],["t"]]]],[11,"try_from","","",214,[[["u"]],["result"]]],[11,"try_into","","",214,[[],["result"]]],[11,"borrow","","",214,[[["self"]],["t"]]],[11,"borrow_mut","","",214,[[["self"]],["t"]]],[11,"type_id","","",214,[[["self"]],["typeid"]]],[11,"span","","",215,[[["self"]],["span"]]],[11,"from","","",215,[[["t"]],["t"]]],[11,"into","","",215,[[],["u"]]],[11,"to_owned","","",215,[[["self"]],["t"]]],[11,"clone_into","","",215,[[["self"],["t"]]]],[11,"try_from","","",215,[[["u"]],["result"]]],[11,"try_into","","",215,[[],["result"]]],[11,"borrow","","",215,[[["self"]],["t"]]],[11,"borrow_mut","","",215,[[["self"]],["t"]]],[11,"type_id","","",215,[[["self"]],["typeid"]]],[11,"span","","",13,[[["self"]],["span"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"into","","",13,[[],["u"]]],[11,"to_owned","","",13,[[["self"]],["t"]]],[11,"clone_into","","",13,[[["self"],["t"]]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"try_into","","",13,[[],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"type_id","","",13,[[["self"]],["typeid"]]],[11,"span","","",216,[[["self"]],["span"]]],[11,"from","","",216,[[["t"]],["t"]]],[11,"into","","",216,[[],["u"]]],[11,"to_owned","","",216,[[["self"]],["t"]]],[11,"clone_into","","",216,[[["self"],["t"]]]],[11,"try_from","","",216,[[["u"]],["result"]]],[11,"try_into","","",216,[[],["result"]]],[11,"borrow","","",216,[[["self"]],["t"]]],[11,"borrow_mut","","",216,[[["self"]],["t"]]],[11,"type_id","","",216,[[["self"]],["typeid"]]],[11,"span","","",217,[[["self"]],["span"]]],[11,"from","","",217,[[["t"]],["t"]]],[11,"into","","",217,[[],["u"]]],[11,"to_owned","","",217,[[["self"]],["t"]]],[11,"clone_into","","",217,[[["self"],["t"]]]],[11,"try_from","","",217,[[["u"]],["result"]]],[11,"try_into","","",217,[[],["result"]]],[11,"borrow","","",217,[[["self"]],["t"]]],[11,"borrow_mut","","",217,[[["self"]],["t"]]],[11,"type_id","","",217,[[["self"]],["typeid"]]],[11,"span","","",218,[[["self"]],["span"]]],[11,"from","","",218,[[["t"]],["t"]]],[11,"into","","",218,[[],["u"]]],[11,"to_owned","","",218,[[["self"]],["t"]]],[11,"clone_into","","",218,[[["self"],["t"]]]],[11,"try_from","","",218,[[["u"]],["result"]]],[11,"try_into","","",218,[[],["result"]]],[11,"borrow","","",218,[[["self"]],["t"]]],[11,"borrow_mut","","",218,[[["self"]],["t"]]],[11,"type_id","","",218,[[["self"]],["typeid"]]],[11,"span","","",14,[[["self"]],["span"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"into","","",14,[[],["u"]]],[11,"to_owned","","",14,[[["self"]],["t"]]],[11,"clone_into","","",14,[[["self"],["t"]]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"try_into","","",14,[[],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"type_id","","",14,[[["self"]],["typeid"]]],[11,"span","","",219,[[["self"]],["span"]]],[11,"from","","",219,[[["t"]],["t"]]],[11,"into","","",219,[[],["u"]]],[11,"to_owned","","",219,[[["self"]],["t"]]],[11,"clone_into","","",219,[[["self"],["t"]]]],[11,"try_from","","",219,[[["u"]],["result"]]],[11,"try_into","","",219,[[],["result"]]],[11,"borrow","","",219,[[["self"]],["t"]]],[11,"borrow_mut","","",219,[[["self"]],["t"]]],[11,"type_id","","",219,[[["self"]],["typeid"]]],[11,"span","","",15,[[["self"]],["span"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"into","","",15,[[],["u"]]],[11,"to_owned","","",15,[[["self"]],["t"]]],[11,"clone_into","","",15,[[["self"],["t"]]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"try_into","","",15,[[],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"type_id","","",15,[[["self"]],["typeid"]]],[11,"span","","",220,[[["self"]],["span"]]],[11,"from","","",220,[[["t"]],["t"]]],[11,"into","","",220,[[],["u"]]],[11,"to_owned","","",220,[[["self"]],["t"]]],[11,"clone_into","","",220,[[["self"],["t"]]]],[11,"try_from","","",220,[[["u"]],["result"]]],[11,"try_into","","",220,[[],["result"]]],[11,"borrow","","",220,[[["self"]],["t"]]],[11,"borrow_mut","","",220,[[["self"]],["t"]]],[11,"type_id","","",220,[[["self"]],["typeid"]]],[11,"span","","",221,[[["self"]],["span"]]],[11,"from","","",221,[[["t"]],["t"]]],[11,"into","","",221,[[],["u"]]],[11,"to_owned","","",221,[[["self"]],["t"]]],[11,"clone_into","","",221,[[["self"],["t"]]]],[11,"try_from","","",221,[[["u"]],["result"]]],[11,"try_into","","",221,[[],["result"]]],[11,"borrow","","",221,[[["self"]],["t"]]],[11,"borrow_mut","","",221,[[["self"]],["t"]]],[11,"type_id","","",221,[[["self"]],["typeid"]]],[11,"span","","",222,[[["self"]],["span"]]],[11,"from","","",222,[[["t"]],["t"]]],[11,"into","","",222,[[],["u"]]],[11,"to_owned","","",222,[[["self"]],["t"]]],[11,"clone_into","","",222,[[["self"],["t"]]]],[11,"try_from","","",222,[[["u"]],["result"]]],[11,"try_into","","",222,[[],["result"]]],[11,"borrow","","",222,[[["self"]],["t"]]],[11,"borrow_mut","","",222,[[["self"]],["t"]]],[11,"type_id","","",222,[[["self"]],["typeid"]]],[11,"span","","",223,[[["self"]],["span"]]],[11,"from","","",223,[[["t"]],["t"]]],[11,"into","","",223,[[],["u"]]],[11,"to_owned","","",223,[[["self"]],["t"]]],[11,"clone_into","","",223,[[["self"],["t"]]]],[11,"try_from","","",223,[[["u"]],["result"]]],[11,"try_into","","",223,[[],["result"]]],[11,"borrow","","",223,[[["self"]],["t"]]],[11,"borrow_mut","","",223,[[["self"]],["t"]]],[11,"type_id","","",223,[[["self"]],["typeid"]]],[11,"span","","",16,[[["self"]],["span"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"into","","",16,[[],["u"]]],[11,"to_owned","","",16,[[["self"]],["t"]]],[11,"clone_into","","",16,[[["self"],["t"]]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"try_into","","",16,[[],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"type_id","","",16,[[["self"]],["typeid"]]],[11,"span","","",17,[[["self"]],["span"]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"into","","",17,[[],["u"]]],[11,"to_owned","","",17,[[["self"]],["t"]]],[11,"clone_into","","",17,[[["self"],["t"]]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"try_into","","",17,[[],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"type_id","","",17,[[["self"]],["typeid"]]],[11,"span","","",224,[[["self"]],["span"]]],[11,"from","","",224,[[["t"]],["t"]]],[11,"into","","",224,[[],["u"]]],[11,"to_owned","","",224,[[["self"]],["t"]]],[11,"clone_into","","",224,[[["self"],["t"]]]],[11,"try_from","","",224,[[["u"]],["result"]]],[11,"try_into","","",224,[[],["result"]]],[11,"borrow","","",224,[[["self"]],["t"]]],[11,"borrow_mut","","",224,[[["self"]],["t"]]],[11,"type_id","","",224,[[["self"]],["typeid"]]],[11,"span","","",225,[[["self"]],["span"]]],[11,"from","","",225,[[["t"]],["t"]]],[11,"into","","",225,[[],["u"]]],[11,"to_owned","","",225,[[["self"]],["t"]]],[11,"clone_into","","",225,[[["self"],["t"]]]],[11,"try_from","","",225,[[["u"]],["result"]]],[11,"try_into","","",225,[[],["result"]]],[11,"borrow","","",225,[[["self"]],["t"]]],[11,"borrow_mut","","",225,[[["self"]],["t"]]],[11,"type_id","","",225,[[["self"]],["typeid"]]],[11,"span","","",226,[[["self"]],["span"]]],[11,"from","","",226,[[["t"]],["t"]]],[11,"into","","",226,[[],["u"]]],[11,"to_owned","","",226,[[["self"]],["t"]]],[11,"clone_into","","",226,[[["self"],["t"]]]],[11,"try_from","","",226,[[["u"]],["result"]]],[11,"try_into","","",226,[[],["result"]]],[11,"borrow","","",226,[[["self"]],["t"]]],[11,"borrow_mut","","",226,[[["self"]],["t"]]],[11,"type_id","","",226,[[["self"]],["typeid"]]],[11,"span","","",227,[[["self"]],["span"]]],[11,"from","","",227,[[["t"]],["t"]]],[11,"into","","",227,[[],["u"]]],[11,"to_owned","","",227,[[["self"]],["t"]]],[11,"clone_into","","",227,[[["self"],["t"]]]],[11,"try_from","","",227,[[["u"]],["result"]]],[11,"try_into","","",227,[[],["result"]]],[11,"borrow","","",227,[[["self"]],["t"]]],[11,"borrow_mut","","",227,[[["self"]],["t"]]],[11,"type_id","","",227,[[["self"]],["typeid"]]],[11,"span","","",228,[[["self"]],["span"]]],[11,"from","","",228,[[["t"]],["t"]]],[11,"into","","",228,[[],["u"]]],[11,"to_owned","","",228,[[["self"]],["t"]]],[11,"clone_into","","",228,[[["self"],["t"]]]],[11,"try_from","","",228,[[["u"]],["result"]]],[11,"try_into","","",228,[[],["result"]]],[11,"borrow","","",228,[[["self"]],["t"]]],[11,"borrow_mut","","",228,[[["self"]],["t"]]],[11,"type_id","","",228,[[["self"]],["typeid"]]],[11,"span","","",229,[[["self"]],["span"]]],[11,"from","","",229,[[["t"]],["t"]]],[11,"into","","",229,[[],["u"]]],[11,"to_owned","","",229,[[["self"]],["t"]]],[11,"clone_into","","",229,[[["self"],["t"]]]],[11,"try_from","","",229,[[["u"]],["result"]]],[11,"try_into","","",229,[[],["result"]]],[11,"borrow","","",229,[[["self"]],["t"]]],[11,"borrow_mut","","",229,[[["self"]],["t"]]],[11,"type_id","","",229,[[["self"]],["typeid"]]],[11,"span","","",230,[[["self"]],["span"]]],[11,"from","","",230,[[["t"]],["t"]]],[11,"into","","",230,[[],["u"]]],[11,"to_owned","","",230,[[["self"]],["t"]]],[11,"clone_into","","",230,[[["self"],["t"]]]],[11,"try_from","","",230,[[["u"]],["result"]]],[11,"try_into","","",230,[[],["result"]]],[11,"borrow","","",230,[[["self"]],["t"]]],[11,"borrow_mut","","",230,[[["self"]],["t"]]],[11,"type_id","","",230,[[["self"]],["typeid"]]],[11,"span","","",231,[[["self"]],["span"]]],[11,"from","","",231,[[["t"]],["t"]]],[11,"into","","",231,[[],["u"]]],[11,"to_owned","","",231,[[["self"]],["t"]]],[11,"clone_into","","",231,[[["self"],["t"]]]],[11,"try_from","","",231,[[["u"]],["result"]]],[11,"try_into","","",231,[[],["result"]]],[11,"borrow","","",231,[[["self"]],["t"]]],[11,"borrow_mut","","",231,[[["self"]],["t"]]],[11,"type_id","","",231,[[["self"]],["typeid"]]],[11,"span","","",232,[[["self"]],["span"]]],[11,"from","","",232,[[["t"]],["t"]]],[11,"into","","",232,[[],["u"]]],[11,"to_owned","","",232,[[["self"]],["t"]]],[11,"clone_into","","",232,[[["self"],["t"]]]],[11,"try_from","","",232,[[["u"]],["result"]]],[11,"try_into","","",232,[[],["result"]]],[11,"borrow","","",232,[[["self"]],["t"]]],[11,"borrow_mut","","",232,[[["self"]],["t"]]],[11,"type_id","","",232,[[["self"]],["typeid"]]],[11,"span","","",18,[[["self"]],["span"]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"into","","",18,[[],["u"]]],[11,"to_owned","","",18,[[["self"]],["t"]]],[11,"clone_into","","",18,[[["self"],["t"]]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"try_into","","",18,[[],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"type_id","","",18,[[["self"]],["typeid"]]],[11,"span","","",233,[[["self"]],["span"]]],[11,"from","","",233,[[["t"]],["t"]]],[11,"into","","",233,[[],["u"]]],[11,"to_owned","","",233,[[["self"]],["t"]]],[11,"clone_into","","",233,[[["self"],["t"]]]],[11,"try_from","","",233,[[["u"]],["result"]]],[11,"try_into","","",233,[[],["result"]]],[11,"borrow","","",233,[[["self"]],["t"]]],[11,"borrow_mut","","",233,[[["self"]],["t"]]],[11,"type_id","","",233,[[["self"]],["typeid"]]],[11,"span","","",234,[[["self"]],["span"]]],[11,"from","","",234,[[["t"]],["t"]]],[11,"into","","",234,[[],["u"]]],[11,"to_owned","","",234,[[["self"]],["t"]]],[11,"clone_into","","",234,[[["self"],["t"]]]],[11,"try_from","","",234,[[["u"]],["result"]]],[11,"try_into","","",234,[[],["result"]]],[11,"borrow","","",234,[[["self"]],["t"]]],[11,"borrow_mut","","",234,[[["self"]],["t"]]],[11,"type_id","","",234,[[["self"]],["typeid"]]],[11,"span","","",235,[[["self"]],["span"]]],[11,"from","","",235,[[["t"]],["t"]]],[11,"into","","",235,[[],["u"]]],[11,"to_owned","","",235,[[["self"]],["t"]]],[11,"clone_into","","",235,[[["self"],["t"]]]],[11,"try_from","","",235,[[["u"]],["result"]]],[11,"try_into","","",235,[[],["result"]]],[11,"borrow","","",235,[[["self"]],["t"]]],[11,"borrow_mut","","",235,[[["self"]],["t"]]],[11,"type_id","","",235,[[["self"]],["typeid"]]],[11,"span","","",19,[[["self"]],["span"]]],[11,"from","","",19,[[["t"]],["t"]]],[11,"into","","",19,[[],["u"]]],[11,"to_owned","","",19,[[["self"]],["t"]]],[11,"clone_into","","",19,[[["self"],["t"]]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"try_into","","",19,[[],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"type_id","","",19,[[["self"]],["typeid"]]],[11,"span","","",20,[[["self"]],["span"]]],[11,"from","","",20,[[["t"]],["t"]]],[11,"into","","",20,[[],["u"]]],[11,"to_owned","","",20,[[["self"]],["t"]]],[11,"clone_into","","",20,[[["self"],["t"]]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"try_into","","",20,[[],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"type_id","","",20,[[["self"]],["typeid"]]],[11,"span","","",21,[[["self"]],["span"]]],[11,"from","","",21,[[["t"]],["t"]]],[11,"into","","",21,[[],["u"]]],[11,"to_owned","","",21,[[["self"]],["t"]]],[11,"clone_into","","",21,[[["self"],["t"]]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"try_into","","",21,[[],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"type_id","","",21,[[["self"]],["typeid"]]],[11,"span","","",22,[[["self"]],["span"]]],[11,"from","","",22,[[["t"]],["t"]]],[11,"into","","",22,[[],["u"]]],[11,"to_owned","","",22,[[["self"]],["t"]]],[11,"clone_into","","",22,[[["self"],["t"]]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"try_into","","",22,[[],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"type_id","","",22,[[["self"]],["typeid"]]],[11,"span","","",23,[[["self"]],["span"]]],[11,"from","","",23,[[["t"]],["t"]]],[11,"into","","",23,[[],["u"]]],[11,"to_owned","","",23,[[["self"]],["t"]]],[11,"clone_into","","",23,[[["self"],["t"]]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"try_into","","",23,[[],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"type_id","","",23,[[["self"]],["typeid"]]],[11,"span","","",24,[[["self"]],["span"]]],[11,"from","","",24,[[["t"]],["t"]]],[11,"into","","",24,[[],["u"]]],[11,"to_owned","","",24,[[["self"]],["t"]]],[11,"clone_into","","",24,[[["self"],["t"]]]],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"try_into","","",24,[[],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"type_id","","",24,[[["self"]],["typeid"]]],[11,"span","","",25,[[["self"]],["span"]]],[11,"from","","",25,[[["t"]],["t"]]],[11,"into","","",25,[[],["u"]]],[11,"to_owned","","",25,[[["self"]],["t"]]],[11,"clone_into","","",25,[[["self"],["t"]]]],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"try_into","","",25,[[],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"type_id","","",25,[[["self"]],["typeid"]]],[11,"span","","",26,[[["self"]],["span"]]],[11,"from","","",26,[[["t"]],["t"]]],[11,"into","","",26,[[],["u"]]],[11,"to_owned","","",26,[[["self"]],["t"]]],[11,"clone_into","","",26,[[["self"],["t"]]]],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"try_into","","",26,[[],["result"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"type_id","","",26,[[["self"]],["typeid"]]],[11,"span","","",27,[[["self"]],["span"]]],[11,"from","","",27,[[["t"]],["t"]]],[11,"into","","",27,[[],["u"]]],[11,"to_owned","","",27,[[["self"]],["t"]]],[11,"clone_into","","",27,[[["self"],["t"]]]],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"try_into","","",27,[[],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"type_id","","",27,[[["self"]],["typeid"]]],[11,"span","","",28,[[["self"]],["span"]]],[11,"from","","",28,[[["t"]],["t"]]],[11,"into","","",28,[[],["u"]]],[11,"to_owned","","",28,[[["self"]],["t"]]],[11,"clone_into","","",28,[[["self"],["t"]]]],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"try_into","","",28,[[],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"type_id","","",28,[[["self"]],["typeid"]]],[11,"span","","",29,[[["self"]],["span"]]],[11,"from","","",29,[[["t"]],["t"]]],[11,"into","","",29,[[],["u"]]],[11,"to_owned","","",29,[[["self"]],["t"]]],[11,"clone_into","","",29,[[["self"],["t"]]]],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"try_into","","",29,[[],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"type_id","","",29,[[["self"]],["typeid"]]],[11,"span","","",236,[[["self"]],["span"]]],[11,"from","","",236,[[["t"]],["t"]]],[11,"into","","",236,[[],["u"]]],[11,"to_owned","","",236,[[["self"]],["t"]]],[11,"clone_into","","",236,[[["self"],["t"]]]],[11,"try_from","","",236,[[["u"]],["result"]]],[11,"try_into","","",236,[[],["result"]]],[11,"borrow","","",236,[[["self"]],["t"]]],[11,"borrow_mut","","",236,[[["self"]],["t"]]],[11,"type_id","","",236,[[["self"]],["typeid"]]],[11,"span","","",237,[[["self"]],["span"]]],[11,"from","","",237,[[["t"]],["t"]]],[11,"into","","",237,[[],["u"]]],[11,"to_owned","","",237,[[["self"]],["t"]]],[11,"clone_into","","",237,[[["self"],["t"]]]],[11,"try_from","","",237,[[["u"]],["result"]]],[11,"try_into","","",237,[[],["result"]]],[11,"borrow","","",237,[[["self"]],["t"]]],[11,"borrow_mut","","",237,[[["self"]],["t"]]],[11,"type_id","","",237,[[["self"]],["typeid"]]],[11,"span","","",185,[[["self"]],["span"]]],[11,"from","","",185,[[["t"]],["t"]]],[11,"into","","",185,[[],["u"]]],[11,"to_owned","","",185,[[["self"]],["t"]]],[11,"clone_into","","",185,[[["self"],["t"]]]],[11,"try_from","","",185,[[["u"]],["result"]]],[11,"try_into","","",185,[[],["result"]]],[11,"borrow","","",185,[[["self"]],["t"]]],[11,"borrow_mut","","",185,[[["self"]],["t"]]],[11,"type_id","","",185,[[["self"]],["typeid"]]],[11,"peek","","",30,[[["cursor"]],["bool"]]],[11,"display","","",30,[[],["str"]]],[11,"span","","",30,[[["self"]],["span"]]],[11,"from","","",30,[[["t"]],["t"]]],[11,"into","","",30,[[],["u"]]],[11,"to_owned","","",30,[[["self"]],["t"]]],[11,"clone_into","","",30,[[["self"],["t"]]]],[11,"to_string","","",30,[[["self"]],["string"]]],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"try_into","","",30,[[],["result"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"type_id","","",30,[[["self"]],["typeid"]]],[11,"peek","","",31,[[["cursor"]],["bool"]]],[11,"display","","",31,[[],["str"]]],[11,"span","","",31,[[["self"]],["span"]]],[11,"from","","",31,[[["t"]],["t"]]],[11,"into","","",31,[[],["u"]]],[11,"to_owned","","",31,[[["self"]],["t"]]],[11,"clone_into","","",31,[[["self"],["t"]]]],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"try_into","","",31,[[],["result"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"type_id","","",31,[[["self"]],["typeid"]]],[11,"peek","","",188,[[["cursor"]],["bool"]]],[11,"display","","",188,[[],["str"]]],[11,"span","","",188,[[["self"]],["span"]]],[11,"from","","",188,[[["t"]],["t"]]],[11,"into","","",188,[[],["u"]]],[11,"to_owned","","",188,[[["self"]],["t"]]],[11,"clone_into","","",188,[[["self"],["t"]]]],[11,"try_from","","",188,[[["u"]],["result"]]],[11,"try_into","","",188,[[],["result"]]],[11,"borrow","","",188,[[["self"]],["t"]]],[11,"borrow_mut","","",188,[[["self"]],["t"]]],[11,"type_id","","",188,[[["self"]],["typeid"]]],[11,"peek","","",187,[[["cursor"]],["bool"]]],[11,"display","","",187,[[],["str"]]],[11,"span","","",187,[[["self"]],["span"]]],[11,"from","","",187,[[["t"]],["t"]]],[11,"into","","",187,[[],["u"]]],[11,"to_owned","","",187,[[["self"]],["t"]]],[11,"clone_into","","",187,[[["self"],["t"]]]],[11,"try_from","","",187,[[["u"]],["result"]]],[11,"try_into","","",187,[[],["result"]]],[11,"borrow","","",187,[[["self"]],["t"]]],[11,"borrow_mut","","",187,[[["self"]],["t"]]],[11,"type_id","","",187,[[["self"]],["typeid"]]],[11,"peek","","",189,[[["cursor"]],["bool"]]],[11,"display","","",189,[[],["str"]]],[11,"span","","",189,[[["self"]],["span"]]],[11,"from","","",189,[[["t"]],["t"]]],[11,"into","","",189,[[],["u"]]],[11,"to_owned","","",189,[[["self"]],["t"]]],[11,"clone_into","","",189,[[["self"],["t"]]]],[11,"try_from","","",189,[[["u"]],["result"]]],[11,"try_into","","",189,[[],["result"]]],[11,"borrow","","",189,[[["self"]],["t"]]],[11,"borrow_mut","","",189,[[["self"]],["t"]]],[11,"type_id","","",189,[[["self"]],["typeid"]]],[11,"peek","","",191,[[["cursor"]],["bool"]]],[11,"display","","",191,[[],["str"]]],[11,"span","","",191,[[["self"]],["span"]]],[11,"from","","",191,[[["t"]],["t"]]],[11,"into","","",191,[[],["u"]]],[11,"to_owned","","",191,[[["self"]],["t"]]],[11,"clone_into","","",191,[[["self"],["t"]]]],[11,"to_string","","",191,[[["self"]],["string"]]],[11,"try_from","","",191,[[["u"]],["result"]]],[11,"try_into","","",191,[[],["result"]]],[11,"borrow","","",191,[[["self"]],["t"]]],[11,"borrow_mut","","",191,[[["self"]],["t"]]],[11,"type_id","","",191,[[["self"]],["typeid"]]],[11,"peek","","",190,[[["cursor"]],["bool"]]],[11,"display","","",190,[[],["str"]]],[11,"span","","",190,[[["self"]],["span"]]],[11,"from","","",190,[[["t"]],["t"]]],[11,"into","","",190,[[],["u"]]],[11,"to_owned","","",190,[[["self"]],["t"]]],[11,"clone_into","","",190,[[["self"],["t"]]]],[11,"to_string","","",190,[[["self"]],["string"]]],[11,"try_from","","",190,[[["u"]],["result"]]],[11,"try_into","","",190,[[],["result"]]],[11,"borrow","","",190,[[["self"]],["t"]]],[11,"borrow_mut","","",190,[[["self"]],["t"]]],[11,"type_id","","",190,[[["self"]],["typeid"]]],[11,"peek","","",186,[[["cursor"]],["bool"]]],[11,"display","","",186,[[],["str"]]],[11,"span","","",186,[[["self"]],["span"]]],[11,"from","","",186,[[["t"]],["t"]]],[11,"into","","",186,[[],["u"]]],[11,"to_owned","","",186,[[["self"]],["t"]]],[11,"clone_into","","",186,[[["self"],["t"]]]],[11,"try_from","","",186,[[["u"]],["result"]]],[11,"try_into","","",186,[[],["result"]]],[11,"borrow","","",186,[[["self"]],["t"]]],[11,"borrow_mut","","",186,[[["self"]],["t"]]],[11,"type_id","","",186,[[["self"]],["typeid"]]],[11,"span","","",32,[[["self"]],["span"]]],[11,"from","","",32,[[["t"]],["t"]]],[11,"into","","",32,[[],["u"]]],[11,"to_owned","","",32,[[["self"]],["t"]]],[11,"clone_into","","",32,[[["self"],["t"]]]],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"try_into","","",32,[[],["result"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"type_id","","",32,[[["self"]],["typeid"]]],[11,"from","","",33,[[["t"]],["t"]]],[11,"into","","",33,[[],["u"]]],[11,"to_owned","","",33,[[["self"]],["t"]]],[11,"clone_into","","",33,[[["self"],["t"]]]],[11,"try_from","","",33,[[["u"]],["result"]]],[11,"try_into","","",33,[[],["result"]]],[11,"borrow","","",33,[[["self"]],["t"]]],[11,"borrow_mut","","",33,[[["self"]],["t"]]],[11,"type_id","","",33,[[["self"]],["typeid"]]],[11,"from","","",34,[[["t"]],["t"]]],[11,"into","","",34,[[],["u"]]],[11,"to_owned","","",34,[[["self"]],["t"]]],[11,"clone_into","","",34,[[["self"],["t"]]]],[11,"try_from","","",34,[[["u"]],["result"]]],[11,"try_into","","",34,[[],["result"]]],[11,"borrow","","",34,[[["self"]],["t"]]],[11,"borrow_mut","","",34,[[["self"]],["t"]]],[11,"type_id","","",34,[[["self"]],["typeid"]]],[11,"from","","",35,[[["t"]],["t"]]],[11,"into","","",35,[[],["u"]]],[11,"to_owned","","",35,[[["self"]],["t"]]],[11,"clone_into","","",35,[[["self"],["t"]]]],[11,"try_from","","",35,[[["u"]],["result"]]],[11,"try_into","","",35,[[],["result"]]],[11,"borrow","","",35,[[["self"]],["t"]]],[11,"borrow_mut","","",35,[[["self"]],["t"]]],[11,"type_id","","",35,[[["self"]],["typeid"]]],[11,"span","","",36,[[["self"]],["span"]]],[11,"from","","",36,[[["t"]],["t"]]],[11,"into","","",36,[[],["u"]]],[11,"to_owned","","",36,[[["self"]],["t"]]],[11,"clone_into","","",36,[[["self"],["t"]]]],[11,"try_from","","",36,[[["u"]],["result"]]],[11,"try_into","","",36,[[],["result"]]],[11,"borrow","","",36,[[["self"]],["t"]]],[11,"borrow_mut","","",36,[[["self"]],["t"]]],[11,"type_id","","",36,[[["self"]],["typeid"]]],[11,"span","","",37,[[["self"]],["span"]]],[11,"from","","",37,[[["t"]],["t"]]],[11,"into","","",37,[[],["u"]]],[11,"to_owned","","",37,[[["self"]],["t"]]],[11,"clone_into","","",37,[[["self"],["t"]]]],[11,"try_from","","",37,[[["u"]],["result"]]],[11,"try_into","","",37,[[],["result"]]],[11,"borrow","","",37,[[["self"]],["t"]]],[11,"borrow_mut","","",37,[[["self"]],["t"]]],[11,"type_id","","",37,[[["self"]],["typeid"]]],[11,"span","","",38,[[["self"]],["span"]]],[11,"from","","",38,[[["t"]],["t"]]],[11,"into","","",38,[[],["u"]]],[11,"to_owned","","",38,[[["self"]],["t"]]],[11,"clone_into","","",38,[[["self"],["t"]]]],[11,"try_from","","",38,[[["u"]],["result"]]],[11,"try_into","","",38,[[],["result"]]],[11,"borrow","","",38,[[["self"]],["t"]]],[11,"borrow_mut","","",38,[[["self"]],["t"]]],[11,"type_id","","",38,[[["self"]],["typeid"]]],[11,"span","","",39,[[["self"]],["span"]]],[11,"from","","",39,[[["t"]],["t"]]],[11,"into","","",39,[[],["u"]]],[11,"to_owned","","",39,[[["self"]],["t"]]],[11,"clone_into","","",39,[[["self"],["t"]]]],[11,"try_from","","",39,[[["u"]],["result"]]],[11,"try_into","","",39,[[],["result"]]],[11,"borrow","","",39,[[["self"]],["t"]]],[11,"borrow_mut","","",39,[[["self"]],["t"]]],[11,"type_id","","",39,[[["self"]],["typeid"]]],[11,"span","","",40,[[["self"]],["span"]]],[11,"from","","",40,[[["t"]],["t"]]],[11,"into","","",40,[[],["u"]]],[11,"to_owned","","",40,[[["self"]],["t"]]],[11,"clone_into","","",40,[[["self"],["t"]]]],[11,"try_from","","",40,[[["u"]],["result"]]],[11,"try_into","","",40,[[],["result"]]],[11,"borrow","","",40,[[["self"]],["t"]]],[11,"borrow_mut","","",40,[[["self"]],["t"]]],[11,"type_id","","",40,[[["self"]],["typeid"]]],[11,"span","","",41,[[["self"]],["span"]]],[11,"from","","",41,[[["t"]],["t"]]],[11,"into","","",41,[[],["u"]]],[11,"to_owned","","",41,[[["self"]],["t"]]],[11,"clone_into","","",41,[[["self"],["t"]]]],[11,"try_from","","",41,[[["u"]],["result"]]],[11,"try_into","","",41,[[],["result"]]],[11,"borrow","","",41,[[["self"]],["t"]]],[11,"borrow_mut","","",41,[[["self"]],["t"]]],[11,"type_id","","",41,[[["self"]],["typeid"]]],[11,"span","","",42,[[["self"]],["span"]]],[11,"from","","",42,[[["t"]],["t"]]],[11,"into","","",42,[[],["u"]]],[11,"to_owned","","",42,[[["self"]],["t"]]],[11,"clone_into","","",42,[[["self"],["t"]]]],[11,"try_from","","",42,[[["u"]],["result"]]],[11,"try_into","","",42,[[],["result"]]],[11,"borrow","","",42,[[["self"]],["t"]]],[11,"borrow_mut","","",42,[[["self"]],["t"]]],[11,"type_id","","",42,[[["self"]],["typeid"]]],[11,"span","","",43,[[["self"]],["span"]]],[11,"from","","",43,[[["t"]],["t"]]],[11,"into","","",43,[[],["u"]]],[11,"to_owned","","",43,[[["self"]],["t"]]],[11,"clone_into","","",43,[[["self"],["t"]]]],[11,"try_from","","",43,[[["u"]],["result"]]],[11,"try_into","","",43,[[],["result"]]],[11,"borrow","","",43,[[["self"]],["t"]]],[11,"borrow_mut","","",43,[[["self"]],["t"]]],[11,"type_id","","",43,[[["self"]],["typeid"]]],[11,"span","","",44,[[["self"]],["span"]]],[11,"from","","",44,[[["t"]],["t"]]],[11,"into","","",44,[[],["u"]]],[11,"to_owned","","",44,[[["self"]],["t"]]],[11,"clone_into","","",44,[[["self"],["t"]]]],[11,"try_from","","",44,[[["u"]],["result"]]],[11,"try_into","","",44,[[],["result"]]],[11,"borrow","","",44,[[["self"]],["t"]]],[11,"borrow_mut","","",44,[[["self"]],["t"]]],[11,"type_id","","",44,[[["self"]],["typeid"]]],[11,"span","","",45,[[["self"]],["span"]]],[11,"from","","",45,[[["t"]],["t"]]],[11,"into","","",45,[[],["u"]]],[11,"to_owned","","",45,[[["self"]],["t"]]],[11,"clone_into","","",45,[[["self"],["t"]]]],[11,"try_from","","",45,[[["u"]],["result"]]],[11,"try_into","","",45,[[],["result"]]],[11,"borrow","","",45,[[["self"]],["t"]]],[11,"borrow_mut","","",45,[[["self"]],["t"]]],[11,"type_id","","",45,[[["self"]],["typeid"]]],[11,"span","","",46,[[["self"]],["span"]]],[11,"from","","",46,[[["t"]],["t"]]],[11,"into","","",46,[[],["u"]]],[11,"to_owned","","",46,[[["self"]],["t"]]],[11,"clone_into","","",46,[[["self"],["t"]]]],[11,"try_from","","",46,[[["u"]],["result"]]],[11,"try_into","","",46,[[],["result"]]],[11,"borrow","","",46,[[["self"]],["t"]]],[11,"borrow_mut","","",46,[[["self"]],["t"]]],[11,"type_id","","",46,[[["self"]],["typeid"]]],[11,"span","","",47,[[["self"]],["span"]]],[11,"from","","",47,[[["t"]],["t"]]],[11,"into","","",47,[[],["u"]]],[11,"to_owned","","",47,[[["self"]],["t"]]],[11,"clone_into","","",47,[[["self"],["t"]]]],[11,"try_from","","",47,[[["u"]],["result"]]],[11,"try_into","","",47,[[],["result"]]],[11,"borrow","","",47,[[["self"]],["t"]]],[11,"borrow_mut","","",47,[[["self"]],["t"]]],[11,"type_id","","",47,[[["self"]],["typeid"]]],[11,"span","","",48,[[["self"]],["span"]]],[11,"from","","",48,[[["t"]],["t"]]],[11,"into","","",48,[[],["u"]]],[11,"to_owned","","",48,[[["self"]],["t"]]],[11,"clone_into","","",48,[[["self"],["t"]]]],[11,"try_from","","",48,[[["u"]],["result"]]],[11,"try_into","","",48,[[],["result"]]],[11,"borrow","","",48,[[["self"]],["t"]]],[11,"borrow_mut","","",48,[[["self"]],["t"]]],[11,"type_id","","",48,[[["self"]],["typeid"]]],[11,"span","","",49,[[["self"]],["span"]]],[11,"from","","",49,[[["t"]],["t"]]],[11,"into","","",49,[[],["u"]]],[11,"to_owned","","",49,[[["self"]],["t"]]],[11,"clone_into","","",49,[[["self"],["t"]]]],[11,"try_from","","",49,[[["u"]],["result"]]],[11,"try_into","","",49,[[],["result"]]],[11,"borrow","","",49,[[["self"]],["t"]]],[11,"borrow_mut","","",49,[[["self"]],["t"]]],[11,"type_id","","",49,[[["self"]],["typeid"]]],[11,"span","","",50,[[["self"]],["span"]]],[11,"from","","",50,[[["t"]],["t"]]],[11,"into","","",50,[[],["u"]]],[11,"to_owned","","",50,[[["self"]],["t"]]],[11,"clone_into","","",50,[[["self"],["t"]]]],[11,"try_from","","",50,[[["u"]],["result"]]],[11,"try_into","","",50,[[],["result"]]],[11,"borrow","","",50,[[["self"]],["t"]]],[11,"borrow_mut","","",50,[[["self"]],["t"]]],[11,"type_id","","",50,[[["self"]],["typeid"]]],[11,"span","","",51,[[["self"]],["span"]]],[11,"from","","",51,[[["t"]],["t"]]],[11,"into","","",51,[[],["u"]]],[11,"to_owned","","",51,[[["self"]],["t"]]],[11,"clone_into","","",51,[[["self"],["t"]]]],[11,"try_from","","",51,[[["u"]],["result"]]],[11,"try_into","","",51,[[],["result"]]],[11,"borrow","","",51,[[["self"]],["t"]]],[11,"borrow_mut","","",51,[[["self"]],["t"]]],[11,"type_id","","",51,[[["self"]],["typeid"]]],[11,"span","","",52,[[["self"]],["span"]]],[11,"from","","",52,[[["t"]],["t"]]],[11,"into","","",52,[[],["u"]]],[11,"to_owned","","",52,[[["self"]],["t"]]],[11,"clone_into","","",52,[[["self"],["t"]]]],[11,"try_from","","",52,[[["u"]],["result"]]],[11,"try_into","","",52,[[],["result"]]],[11,"borrow","","",52,[[["self"]],["t"]]],[11,"borrow_mut","","",52,[[["self"]],["t"]]],[11,"type_id","","",52,[[["self"]],["typeid"]]],[11,"span","","",53,[[["self"]],["span"]]],[11,"from","","",53,[[["t"]],["t"]]],[11,"into","","",53,[[],["u"]]],[11,"to_owned","","",53,[[["self"]],["t"]]],[11,"clone_into","","",53,[[["self"],["t"]]]],[11,"try_from","","",53,[[["u"]],["result"]]],[11,"try_into","","",53,[[],["result"]]],[11,"borrow","","",53,[[["self"]],["t"]]],[11,"borrow_mut","","",53,[[["self"]],["t"]]],[11,"type_id","","",53,[[["self"]],["typeid"]]],[11,"span","","",54,[[["self"]],["span"]]],[11,"from","","",54,[[["t"]],["t"]]],[11,"into","","",54,[[],["u"]]],[11,"to_owned","","",54,[[["self"]],["t"]]],[11,"clone_into","","",54,[[["self"],["t"]]]],[11,"try_from","","",54,[[["u"]],["result"]]],[11,"try_into","","",54,[[],["result"]]],[11,"borrow","","",54,[[["self"]],["t"]]],[11,"borrow_mut","","",54,[[["self"]],["t"]]],[11,"type_id","","",54,[[["self"]],["typeid"]]],[11,"span","","",55,[[["self"]],["span"]]],[11,"from","","",55,[[["t"]],["t"]]],[11,"into","","",55,[[],["u"]]],[11,"to_owned","","",55,[[["self"]],["t"]]],[11,"clone_into","","",55,[[["self"],["t"]]]],[11,"try_from","","",55,[[["u"]],["result"]]],[11,"try_into","","",55,[[],["result"]]],[11,"borrow","","",55,[[["self"]],["t"]]],[11,"borrow_mut","","",55,[[["self"]],["t"]]],[11,"type_id","","",55,[[["self"]],["typeid"]]],[11,"span","","",56,[[["self"]],["span"]]],[11,"from","","",56,[[["t"]],["t"]]],[11,"into","","",56,[[],["u"]]],[11,"to_owned","","",56,[[["self"]],["t"]]],[11,"clone_into","","",56,[[["self"],["t"]]]],[11,"try_from","","",56,[[["u"]],["result"]]],[11,"try_into","","",56,[[],["result"]]],[11,"borrow","","",56,[[["self"]],["t"]]],[11,"borrow_mut","","",56,[[["self"]],["t"]]],[11,"type_id","","",56,[[["self"]],["typeid"]]],[11,"span","","",57,[[["self"]],["span"]]],[11,"from","","",57,[[["t"]],["t"]]],[11,"into","","",57,[[],["u"]]],[11,"to_owned","","",57,[[["self"]],["t"]]],[11,"clone_into","","",57,[[["self"],["t"]]]],[11,"try_from","","",57,[[["u"]],["result"]]],[11,"try_into","","",57,[[],["result"]]],[11,"borrow","","",57,[[["self"]],["t"]]],[11,"borrow_mut","","",57,[[["self"]],["t"]]],[11,"type_id","","",57,[[["self"]],["typeid"]]],[11,"span","","",58,[[["self"]],["span"]]],[11,"from","","",58,[[["t"]],["t"]]],[11,"into","","",58,[[],["u"]]],[11,"to_owned","","",58,[[["self"]],["t"]]],[11,"clone_into","","",58,[[["self"],["t"]]]],[11,"try_from","","",58,[[["u"]],["result"]]],[11,"try_into","","",58,[[],["result"]]],[11,"borrow","","",58,[[["self"]],["t"]]],[11,"borrow_mut","","",58,[[["self"]],["t"]]],[11,"type_id","","",58,[[["self"]],["typeid"]]],[11,"span","","",59,[[["self"]],["span"]]],[11,"from","","",59,[[["t"]],["t"]]],[11,"into","","",59,[[],["u"]]],[11,"to_owned","","",59,[[["self"]],["t"]]],[11,"clone_into","","",59,[[["self"],["t"]]]],[11,"try_from","","",59,[[["u"]],["result"]]],[11,"try_into","","",59,[[],["result"]]],[11,"borrow","","",59,[[["self"]],["t"]]],[11,"borrow_mut","","",59,[[["self"]],["t"]]],[11,"type_id","","",59,[[["self"]],["typeid"]]],[11,"from","","",60,[[["t"]],["t"]]],[11,"into","","",60,[[],["u"]]],[11,"to_owned","","",60,[[["self"]],["t"]]],[11,"clone_into","","",60,[[["self"],["t"]]]],[11,"try_from","","",60,[[["u"]],["result"]]],[11,"try_into","","",60,[[],["result"]]],[11,"borrow","","",60,[[["self"]],["t"]]],[11,"borrow_mut","","",60,[[["self"]],["t"]]],[11,"type_id","","",60,[[["self"]],["typeid"]]],[11,"from","","",204,[[["t"]],["t"]]],[11,"into","","",204,[[],["u"]]],[11,"into_iter","","",204,[[],["i"]]],[11,"to_owned","","",204,[[["self"]],["t"]]],[11,"clone_into","","",204,[[["self"],["t"]]]],[11,"to_string","","",204,[[["self"]],["string"]]],[11,"try_from","","",204,[[["u"]],["result"]]],[11,"try_into","","",204,[[],["result"]]],[11,"borrow","","",204,[[["self"]],["t"]]],[11,"borrow_mut","","",204,[[["self"]],["t"]]],[11,"type_id","","",204,[[["self"]],["typeid"]]],[11,"from","","",61,[[["t"]],["t"]]],[11,"into","","",61,[[],["u"]]],[11,"to_owned","","",61,[[["self"]],["t"]]],[11,"clone_into","","",61,[[["self"],["t"]]]],[11,"try_from","","",61,[[["u"]],["result"]]],[11,"try_into","","",61,[[],["result"]]],[11,"borrow","","",61,[[["self"]],["t"]]],[11,"borrow_mut","","",61,[[["self"]],["t"]]],[11,"type_id","","",61,[[["self"]],["typeid"]]],[11,"span","","",62,[[["self"]],["span"]]],[11,"from","","",62,[[["t"]],["t"]]],[11,"into","","",62,[[],["u"]]],[11,"to_owned","","",62,[[["self"]],["t"]]],[11,"clone_into","","",62,[[["self"],["t"]]]],[11,"try_from","","",62,[[["u"]],["result"]]],[11,"try_into","","",62,[[],["result"]]],[11,"borrow","","",62,[[["self"]],["t"]]],[11,"borrow_mut","","",62,[[["self"]],["t"]]],[11,"type_id","","",62,[[["self"]],["typeid"]]],[11,"span","","",63,[[["self"]],["span"]]],[11,"from","","",63,[[["t"]],["t"]]],[11,"into","","",63,[[],["u"]]],[11,"to_owned","","",63,[[["self"]],["t"]]],[11,"clone_into","","",63,[[["self"],["t"]]]],[11,"try_from","","",63,[[["u"]],["result"]]],[11,"try_into","","",63,[[],["result"]]],[11,"borrow","","",63,[[["self"]],["t"]]],[11,"borrow_mut","","",63,[[["self"]],["t"]]],[11,"type_id","","",63,[[["self"]],["typeid"]]],[11,"span","","",64,[[["self"]],["span"]]],[11,"from","","",64,[[["t"]],["t"]]],[11,"into","","",64,[[],["u"]]],[11,"into_iter","","",64,[[],["i"]]],[11,"to_owned","","",64,[[["self"]],["t"]]],[11,"clone_into","","",64,[[["self"],["t"]]]],[11,"try_from","","",64,[[["u"]],["result"]]],[11,"try_into","","",64,[[],["result"]]],[11,"borrow","","",64,[[["self"]],["t"]]],[11,"borrow_mut","","",64,[[["self"]],["t"]]],[11,"type_id","","",64,[[["self"]],["typeid"]]],[11,"span","","",65,[[["self"]],["span"]]],[11,"from","","",65,[[["t"]],["t"]]],[11,"into","","",65,[[],["u"]]],[11,"to_owned","","",65,[[["self"]],["t"]]],[11,"clone_into","","",65,[[["self"],["t"]]]],[11,"try_from","","",65,[[["u"]],["result"]]],[11,"try_into","","",65,[[],["result"]]],[11,"borrow","","",65,[[["self"]],["t"]]],[11,"borrow_mut","","",65,[[["self"]],["t"]]],[11,"type_id","","",65,[[["self"]],["typeid"]]],[11,"span","","",66,[[["self"]],["span"]]],[11,"from","","",66,[[["t"]],["t"]]],[11,"into","","",66,[[],["u"]]],[11,"to_owned","","",66,[[["self"]],["t"]]],[11,"clone_into","","",66,[[["self"],["t"]]]],[11,"try_from","","",66,[[["u"]],["result"]]],[11,"try_into","","",66,[[],["result"]]],[11,"borrow","","",66,[[["self"]],["t"]]],[11,"borrow_mut","","",66,[[["self"]],["t"]]],[11,"type_id","","",66,[[["self"]],["typeid"]]],[11,"span","","",67,[[["self"]],["span"]]],[11,"from","","",67,[[["t"]],["t"]]],[11,"into","","",67,[[],["u"]]],[11,"to_owned","","",67,[[["self"]],["t"]]],[11,"clone_into","","",67,[[["self"],["t"]]]],[11,"try_from","","",67,[[["u"]],["result"]]],[11,"try_into","","",67,[[],["result"]]],[11,"borrow","","",67,[[["self"]],["t"]]],[11,"borrow_mut","","",67,[[["self"]],["t"]]],[11,"type_id","","",67,[[["self"]],["typeid"]]],[11,"span","","",68,[[["self"]],["span"]]],[11,"from","","",68,[[["t"]],["t"]]],[11,"into","","",68,[[],["u"]]],[11,"to_owned","","",68,[[["self"]],["t"]]],[11,"clone_into","","",68,[[["self"],["t"]]]],[11,"try_from","","",68,[[["u"]],["result"]]],[11,"try_into","","",68,[[],["result"]]],[11,"borrow","","",68,[[["self"]],["t"]]],[11,"borrow_mut","","",68,[[["self"]],["t"]]],[11,"type_id","","",68,[[["self"]],["typeid"]]],[11,"span","","",69,[[["self"]],["span"]]],[11,"from","","",69,[[["t"]],["t"]]],[11,"into","","",69,[[],["u"]]],[11,"to_owned","","",69,[[["self"]],["t"]]],[11,"clone_into","","",69,[[["self"],["t"]]]],[11,"try_from","","",69,[[["u"]],["result"]]],[11,"try_into","","",69,[[],["result"]]],[11,"borrow","","",69,[[["self"]],["t"]]],[11,"borrow_mut","","",69,[[["self"]],["t"]]],[11,"type_id","","",69,[[["self"]],["typeid"]]],[11,"span","","",70,[[["self"]],["span"]]],[11,"from","","",70,[[["t"]],["t"]]],[11,"into","","",70,[[],["u"]]],[11,"to_owned","","",70,[[["self"]],["t"]]],[11,"clone_into","","",70,[[["self"],["t"]]]],[11,"try_from","","",70,[[["u"]],["result"]]],[11,"try_into","","",70,[[],["result"]]],[11,"borrow","","",70,[[["self"]],["t"]]],[11,"borrow_mut","","",70,[[["self"]],["t"]]],[11,"type_id","","",70,[[["self"]],["typeid"]]],[11,"span","","",71,[[["self"]],["span"]]],[11,"from","","",71,[[["t"]],["t"]]],[11,"into","","",71,[[],["u"]]],[11,"to_owned","","",71,[[["self"]],["t"]]],[11,"clone_into","","",71,[[["self"],["t"]]]],[11,"try_from","","",71,[[["u"]],["result"]]],[11,"try_into","","",71,[[],["result"]]],[11,"borrow","","",71,[[["self"]],["t"]]],[11,"borrow_mut","","",71,[[["self"]],["t"]]],[11,"type_id","","",71,[[["self"]],["typeid"]]],[11,"peek","","",72,[[["cursor"]],["bool"]]],[11,"display","","",72,[[],["str"]]],[11,"span","","",72,[[["self"]],["span"]]],[11,"from","","",72,[[["t"]],["t"]]],[11,"into","","",72,[[],["u"]]],[11,"to_owned","","",72,[[["self"]],["t"]]],[11,"clone_into","","",72,[[["self"],["t"]]]],[11,"try_from","","",72,[[["u"]],["result"]]],[11,"try_into","","",72,[[],["result"]]],[11,"borrow","","",72,[[["self"]],["t"]]],[11,"borrow_mut","","",72,[[["self"]],["t"]]],[11,"type_id","","",72,[[["self"]],["typeid"]]],[11,"from","","",73,[[["t"]],["t"]]],[11,"into","","",73,[[],["u"]]],[11,"to_owned","","",73,[[["self"]],["t"]]],[11,"clone_into","","",73,[[["self"],["t"]]]],[11,"try_from","","",73,[[["u"]],["result"]]],[11,"try_into","","",73,[[],["result"]]],[11,"borrow","","",73,[[["self"]],["t"]]],[11,"borrow_mut","","",73,[[["self"]],["t"]]],[11,"type_id","","",73,[[["self"]],["typeid"]]],[11,"from","","",74,[[["t"]],["t"]]],[11,"into","","",74,[[],["u"]]],[11,"to_owned","","",74,[[["self"]],["t"]]],[11,"clone_into","","",74,[[["self"],["t"]]]],[11,"try_from","","",74,[[["u"]],["result"]]],[11,"try_into","","",74,[[],["result"]]],[11,"borrow","","",74,[[["self"]],["t"]]],[11,"borrow_mut","","",74,[[["self"]],["t"]]],[11,"type_id","","",74,[[["self"]],["typeid"]]],[11,"from","","",75,[[["t"]],["t"]]],[11,"into","","",75,[[],["u"]]],[11,"to_owned","","",75,[[["self"]],["t"]]],[11,"clone_into","","",75,[[["self"],["t"]]]],[11,"try_from","","",75,[[["u"]],["result"]]],[11,"try_into","","",75,[[],["result"]]],[11,"borrow","","",75,[[["self"]],["t"]]],[11,"borrow_mut","","",75,[[["self"]],["t"]]],[11,"type_id","","",75,[[["self"]],["typeid"]]],[11,"span","","",76,[[["self"]],["span"]]],[11,"from","","",76,[[["t"]],["t"]]],[11,"into","","",76,[[],["u"]]],[11,"to_owned","","",76,[[["self"]],["t"]]],[11,"clone_into","","",76,[[["self"],["t"]]]],[11,"try_from","","",76,[[["u"]],["result"]]],[11,"try_into","","",76,[[],["result"]]],[11,"borrow","","",76,[[["self"]],["t"]]],[11,"borrow_mut","","",76,[[["self"]],["t"]]],[11,"type_id","","",76,[[["self"]],["typeid"]]],[11,"span","","",77,[[["self"]],["span"]]],[11,"from","","",77,[[["t"]],["t"]]],[11,"into","","",77,[[],["u"]]],[11,"to_owned","","",77,[[["self"]],["t"]]],[11,"clone_into","","",77,[[["self"],["t"]]]],[11,"try_from","","",77,[[["u"]],["result"]]],[11,"try_into","","",77,[[],["result"]]],[11,"borrow","","",77,[[["self"]],["t"]]],[11,"borrow_mut","","",77,[[["self"]],["t"]]],[11,"type_id","","",77,[[["self"]],["typeid"]]],[11,"span","","",78,[[["self"]],["span"]]],[11,"from","","",78,[[["t"]],["t"]]],[11,"into","","",78,[[],["u"]]],[11,"to_owned","","",78,[[["self"]],["t"]]],[11,"clone_into","","",78,[[["self"],["t"]]]],[11,"try_from","","",78,[[["u"]],["result"]]],[11,"try_into","","",78,[[],["result"]]],[11,"borrow","","",78,[[["self"]],["t"]]],[11,"borrow_mut","","",78,[[["self"]],["t"]]],[11,"type_id","","",78,[[["self"]],["typeid"]]],[11,"span","","",79,[[["self"]],["span"]]],[11,"from","","",79,[[["t"]],["t"]]],[11,"into","","",79,[[],["u"]]],[11,"to_owned","","",79,[[["self"]],["t"]]],[11,"clone_into","","",79,[[["self"],["t"]]]],[11,"try_from","","",79,[[["u"]],["result"]]],[11,"try_into","","",79,[[],["result"]]],[11,"borrow","","",79,[[["self"]],["t"]]],[11,"borrow_mut","","",79,[[["self"]],["t"]]],[11,"type_id","","",79,[[["self"]],["typeid"]]],[11,"span","","",80,[[["self"]],["span"]]],[11,"from","","",80,[[["t"]],["t"]]],[11,"into","","",80,[[],["u"]]],[11,"to_owned","","",80,[[["self"]],["t"]]],[11,"clone_into","","",80,[[["self"],["t"]]]],[11,"try_from","","",80,[[["u"]],["result"]]],[11,"try_into","","",80,[[],["result"]]],[11,"borrow","","",80,[[["self"]],["t"]]],[11,"borrow_mut","","",80,[[["self"]],["t"]]],[11,"type_id","","",80,[[["self"]],["typeid"]]],[11,"span","","",81,[[["self"]],["span"]]],[11,"from","","",81,[[["t"]],["t"]]],[11,"into","","",81,[[],["u"]]],[11,"to_owned","","",81,[[["self"]],["t"]]],[11,"clone_into","","",81,[[["self"],["t"]]]],[11,"try_from","","",81,[[["u"]],["result"]]],[11,"try_into","","",81,[[],["result"]]],[11,"borrow","","",81,[[["self"]],["t"]]],[11,"borrow_mut","","",81,[[["self"]],["t"]]],[11,"type_id","","",81,[[["self"]],["typeid"]]],[11,"peek","syn::token","",82,[[["cursor"]],["bool"]]],[11,"display","","",82,[[],["str"]]],[11,"span","","",82,[[["self"]],["span"]]],[11,"from","","",82,[[["t"]],["t"]]],[11,"into","","",82,[[],["u"]]],[11,"to_owned","","",82,[[["self"]],["t"]]],[11,"clone_into","","",82,[[["self"],["t"]]]],[11,"try_from","","",82,[[["u"]],["result"]]],[11,"try_into","","",82,[[],["result"]]],[11,"borrow","","",82,[[["self"]],["t"]]],[11,"borrow_mut","","",82,[[["self"]],["t"]]],[11,"type_id","","",82,[[["self"]],["typeid"]]],[11,"peek","","",83,[[["cursor"]],["bool"]]],[11,"display","","",83,[[],["str"]]],[11,"span","","",83,[[["self"]],["span"]]],[11,"from","","",83,[[["t"]],["t"]]],[11,"into","","",83,[[],["u"]]],[11,"to_owned","","",83,[[["self"]],["t"]]],[11,"clone_into","","",83,[[["self"],["t"]]]],[11,"try_from","","",83,[[["u"]],["result"]]],[11,"try_into","","",83,[[],["result"]]],[11,"borrow","","",83,[[["self"]],["t"]]],[11,"borrow_mut","","",83,[[["self"]],["t"]]],[11,"type_id","","",83,[[["self"]],["typeid"]]],[11,"peek","","",84,[[["cursor"]],["bool"]]],[11,"display","","",84,[[],["str"]]],[11,"span","","",84,[[["self"]],["span"]]],[11,"from","","",84,[[["t"]],["t"]]],[11,"into","","",84,[[],["u"]]],[11,"to_owned","","",84,[[["self"]],["t"]]],[11,"clone_into","","",84,[[["self"],["t"]]]],[11,"try_from","","",84,[[["u"]],["result"]]],[11,"try_into","","",84,[[],["result"]]],[11,"borrow","","",84,[[["self"]],["t"]]],[11,"borrow_mut","","",84,[[["self"]],["t"]]],[11,"type_id","","",84,[[["self"]],["typeid"]]],[11,"peek","","",85,[[["cursor"]],["bool"]]],[11,"display","","",85,[[],["str"]]],[11,"span","","",85,[[["self"]],["span"]]],[11,"from","","",85,[[["t"]],["t"]]],[11,"into","","",85,[[],["u"]]],[11,"to_owned","","",85,[[["self"]],["t"]]],[11,"clone_into","","",85,[[["self"],["t"]]]],[11,"try_from","","",85,[[["u"]],["result"]]],[11,"try_into","","",85,[[],["result"]]],[11,"borrow","","",85,[[["self"]],["t"]]],[11,"borrow_mut","","",85,[[["self"]],["t"]]],[11,"type_id","","",85,[[["self"]],["typeid"]]],[11,"peek","","",86,[[["cursor"]],["bool"]]],[11,"display","","",86,[[],["str"]]],[11,"span","","",86,[[["self"]],["span"]]],[11,"from","","",86,[[["t"]],["t"]]],[11,"into","","",86,[[],["u"]]],[11,"to_owned","","",86,[[["self"]],["t"]]],[11,"clone_into","","",86,[[["self"],["t"]]]],[11,"try_from","","",86,[[["u"]],["result"]]],[11,"try_into","","",86,[[],["result"]]],[11,"borrow","","",86,[[["self"]],["t"]]],[11,"borrow_mut","","",86,[[["self"]],["t"]]],[11,"type_id","","",86,[[["self"]],["typeid"]]],[11,"peek","","",87,[[["cursor"]],["bool"]]],[11,"display","","",87,[[],["str"]]],[11,"span","","",87,[[["self"]],["span"]]],[11,"from","","",87,[[["t"]],["t"]]],[11,"into","","",87,[[],["u"]]],[11,"to_owned","","",87,[[["self"]],["t"]]],[11,"clone_into","","",87,[[["self"],["t"]]]],[11,"try_from","","",87,[[["u"]],["result"]]],[11,"try_into","","",87,[[],["result"]]],[11,"borrow","","",87,[[["self"]],["t"]]],[11,"borrow_mut","","",87,[[["self"]],["t"]]],[11,"type_id","","",87,[[["self"]],["typeid"]]],[11,"peek","","",88,[[["cursor"]],["bool"]]],[11,"display","","",88,[[],["str"]]],[11,"span","","",88,[[["self"]],["span"]]],[11,"from","","",88,[[["t"]],["t"]]],[11,"into","","",88,[[],["u"]]],[11,"to_owned","","",88,[[["self"]],["t"]]],[11,"clone_into","","",88,[[["self"],["t"]]]],[11,"try_from","","",88,[[["u"]],["result"]]],[11,"try_into","","",88,[[],["result"]]],[11,"borrow","","",88,[[["self"]],["t"]]],[11,"borrow_mut","","",88,[[["self"]],["t"]]],[11,"type_id","","",88,[[["self"]],["typeid"]]],[11,"peek","","",89,[[["cursor"]],["bool"]]],[11,"display","","",89,[[],["str"]]],[11,"span","","",89,[[["self"]],["span"]]],[11,"from","","",89,[[["t"]],["t"]]],[11,"into","","",89,[[],["u"]]],[11,"to_owned","","",89,[[["self"]],["t"]]],[11,"clone_into","","",89,[[["self"],["t"]]]],[11,"try_from","","",89,[[["u"]],["result"]]],[11,"try_into","","",89,[[],["result"]]],[11,"borrow","","",89,[[["self"]],["t"]]],[11,"borrow_mut","","",89,[[["self"]],["t"]]],[11,"type_id","","",89,[[["self"]],["typeid"]]],[11,"peek","","",90,[[["cursor"]],["bool"]]],[11,"display","","",90,[[],["str"]]],[11,"span","","",90,[[["self"]],["span"]]],[11,"from","","",90,[[["t"]],["t"]]],[11,"into","","",90,[[],["u"]]],[11,"to_owned","","",90,[[["self"]],["t"]]],[11,"clone_into","","",90,[[["self"],["t"]]]],[11,"try_from","","",90,[[["u"]],["result"]]],[11,"try_into","","",90,[[],["result"]]],[11,"borrow","","",90,[[["self"]],["t"]]],[11,"borrow_mut","","",90,[[["self"]],["t"]]],[11,"type_id","","",90,[[["self"]],["typeid"]]],[11,"peek","","",91,[[["cursor"]],["bool"]]],[11,"display","","",91,[[],["str"]]],[11,"span","","",91,[[["self"]],["span"]]],[11,"from","","",91,[[["t"]],["t"]]],[11,"into","","",91,[[],["u"]]],[11,"to_owned","","",91,[[["self"]],["t"]]],[11,"clone_into","","",91,[[["self"],["t"]]]],[11,"try_from","","",91,[[["u"]],["result"]]],[11,"try_into","","",91,[[],["result"]]],[11,"borrow","","",91,[[["self"]],["t"]]],[11,"borrow_mut","","",91,[[["self"]],["t"]]],[11,"type_id","","",91,[[["self"]],["typeid"]]],[11,"peek","","",92,[[["cursor"]],["bool"]]],[11,"display","","",92,[[],["str"]]],[11,"span","","",92,[[["self"]],["span"]]],[11,"from","","",92,[[["t"]],["t"]]],[11,"into","","",92,[[],["u"]]],[11,"to_owned","","",92,[[["self"]],["t"]]],[11,"clone_into","","",92,[[["self"],["t"]]]],[11,"try_from","","",92,[[["u"]],["result"]]],[11,"try_into","","",92,[[],["result"]]],[11,"borrow","","",92,[[["self"]],["t"]]],[11,"borrow_mut","","",92,[[["self"]],["t"]]],[11,"type_id","","",92,[[["self"]],["typeid"]]],[11,"peek","","",93,[[["cursor"]],["bool"]]],[11,"display","","",93,[[],["str"]]],[11,"span","","",93,[[["self"]],["span"]]],[11,"from","","",93,[[["t"]],["t"]]],[11,"into","","",93,[[],["u"]]],[11,"to_owned","","",93,[[["self"]],["t"]]],[11,"clone_into","","",93,[[["self"],["t"]]]],[11,"try_from","","",93,[[["u"]],["result"]]],[11,"try_into","","",93,[[],["result"]]],[11,"borrow","","",93,[[["self"]],["t"]]],[11,"borrow_mut","","",93,[[["self"]],["t"]]],[11,"type_id","","",93,[[["self"]],["typeid"]]],[11,"peek","","",94,[[["cursor"]],["bool"]]],[11,"display","","",94,[[],["str"]]],[11,"span","","",94,[[["self"]],["span"]]],[11,"from","","",94,[[["t"]],["t"]]],[11,"into","","",94,[[],["u"]]],[11,"to_owned","","",94,[[["self"]],["t"]]],[11,"clone_into","","",94,[[["self"],["t"]]]],[11,"try_from","","",94,[[["u"]],["result"]]],[11,"try_into","","",94,[[],["result"]]],[11,"borrow","","",94,[[["self"]],["t"]]],[11,"borrow_mut","","",94,[[["self"]],["t"]]],[11,"type_id","","",94,[[["self"]],["typeid"]]],[11,"peek","","",95,[[["cursor"]],["bool"]]],[11,"display","","",95,[[],["str"]]],[11,"span","","",95,[[["self"]],["span"]]],[11,"from","","",95,[[["t"]],["t"]]],[11,"into","","",95,[[],["u"]]],[11,"to_owned","","",95,[[["self"]],["t"]]],[11,"clone_into","","",95,[[["self"],["t"]]]],[11,"try_from","","",95,[[["u"]],["result"]]],[11,"try_into","","",95,[[],["result"]]],[11,"borrow","","",95,[[["self"]],["t"]]],[11,"borrow_mut","","",95,[[["self"]],["t"]]],[11,"type_id","","",95,[[["self"]],["typeid"]]],[11,"peek","","",96,[[["cursor"]],["bool"]]],[11,"display","","",96,[[],["str"]]],[11,"span","","",96,[[["self"]],["span"]]],[11,"from","","",96,[[["t"]],["t"]]],[11,"into","","",96,[[],["u"]]],[11,"to_owned","","",96,[[["self"]],["t"]]],[11,"clone_into","","",96,[[["self"],["t"]]]],[11,"try_from","","",96,[[["u"]],["result"]]],[11,"try_into","","",96,[[],["result"]]],[11,"borrow","","",96,[[["self"]],["t"]]],[11,"borrow_mut","","",96,[[["self"]],["t"]]],[11,"type_id","","",96,[[["self"]],["typeid"]]],[11,"peek","","",97,[[["cursor"]],["bool"]]],[11,"display","","",97,[[],["str"]]],[11,"span","","",97,[[["self"]],["span"]]],[11,"from","","",97,[[["t"]],["t"]]],[11,"into","","",97,[[],["u"]]],[11,"to_owned","","",97,[[["self"]],["t"]]],[11,"clone_into","","",97,[[["self"],["t"]]]],[11,"try_from","","",97,[[["u"]],["result"]]],[11,"try_into","","",97,[[],["result"]]],[11,"borrow","","",97,[[["self"]],["t"]]],[11,"borrow_mut","","",97,[[["self"]],["t"]]],[11,"type_id","","",97,[[["self"]],["typeid"]]],[11,"peek","","",98,[[["cursor"]],["bool"]]],[11,"display","","",98,[[],["str"]]],[11,"span","","",98,[[["self"]],["span"]]],[11,"from","","",98,[[["t"]],["t"]]],[11,"into","","",98,[[],["u"]]],[11,"to_owned","","",98,[[["self"]],["t"]]],[11,"clone_into","","",98,[[["self"],["t"]]]],[11,"try_from","","",98,[[["u"]],["result"]]],[11,"try_into","","",98,[[],["result"]]],[11,"borrow","","",98,[[["self"]],["t"]]],[11,"borrow_mut","","",98,[[["self"]],["t"]]],[11,"type_id","","",98,[[["self"]],["typeid"]]],[11,"peek","","",99,[[["cursor"]],["bool"]]],[11,"display","","",99,[[],["str"]]],[11,"span","","",99,[[["self"]],["span"]]],[11,"from","","",99,[[["t"]],["t"]]],[11,"into","","",99,[[],["u"]]],[11,"to_owned","","",99,[[["self"]],["t"]]],[11,"clone_into","","",99,[[["self"],["t"]]]],[11,"try_from","","",99,[[["u"]],["result"]]],[11,"try_into","","",99,[[],["result"]]],[11,"borrow","","",99,[[["self"]],["t"]]],[11,"borrow_mut","","",99,[[["self"]],["t"]]],[11,"type_id","","",99,[[["self"]],["typeid"]]],[11,"peek","","",100,[[["cursor"]],["bool"]]],[11,"display","","",100,[[],["str"]]],[11,"span","","",100,[[["self"]],["span"]]],[11,"from","","",100,[[["t"]],["t"]]],[11,"into","","",100,[[],["u"]]],[11,"to_owned","","",100,[[["self"]],["t"]]],[11,"clone_into","","",100,[[["self"],["t"]]]],[11,"try_from","","",100,[[["u"]],["result"]]],[11,"try_into","","",100,[[],["result"]]],[11,"borrow","","",100,[[["self"]],["t"]]],[11,"borrow_mut","","",100,[[["self"]],["t"]]],[11,"type_id","","",100,[[["self"]],["typeid"]]],[11,"peek","","",101,[[["cursor"]],["bool"]]],[11,"display","","",101,[[],["str"]]],[11,"span","","",101,[[["self"]],["span"]]],[11,"from","","",101,[[["t"]],["t"]]],[11,"into","","",101,[[],["u"]]],[11,"to_owned","","",101,[[["self"]],["t"]]],[11,"clone_into","","",101,[[["self"],["t"]]]],[11,"try_from","","",101,[[["u"]],["result"]]],[11,"try_into","","",101,[[],["result"]]],[11,"borrow","","",101,[[["self"]],["t"]]],[11,"borrow_mut","","",101,[[["self"]],["t"]]],[11,"type_id","","",101,[[["self"]],["typeid"]]],[11,"peek","","",102,[[["cursor"]],["bool"]]],[11,"display","","",102,[[],["str"]]],[11,"span","","",102,[[["self"]],["span"]]],[11,"from","","",102,[[["t"]],["t"]]],[11,"into","","",102,[[],["u"]]],[11,"to_owned","","",102,[[["self"]],["t"]]],[11,"clone_into","","",102,[[["self"],["t"]]]],[11,"try_from","","",102,[[["u"]],["result"]]],[11,"try_into","","",102,[[],["result"]]],[11,"borrow","","",102,[[["self"]],["t"]]],[11,"borrow_mut","","",102,[[["self"]],["t"]]],[11,"type_id","","",102,[[["self"]],["typeid"]]],[11,"peek","","",103,[[["cursor"]],["bool"]]],[11,"display","","",103,[[],["str"]]],[11,"span","","",103,[[["self"]],["span"]]],[11,"from","","",103,[[["t"]],["t"]]],[11,"into","","",103,[[],["u"]]],[11,"to_owned","","",103,[[["self"]],["t"]]],[11,"clone_into","","",103,[[["self"],["t"]]]],[11,"try_from","","",103,[[["u"]],["result"]]],[11,"try_into","","",103,[[],["result"]]],[11,"borrow","","",103,[[["self"]],["t"]]],[11,"borrow_mut","","",103,[[["self"]],["t"]]],[11,"type_id","","",103,[[["self"]],["typeid"]]],[11,"peek","","",104,[[["cursor"]],["bool"]]],[11,"display","","",104,[[],["str"]]],[11,"span","","",104,[[["self"]],["span"]]],[11,"from","","",104,[[["t"]],["t"]]],[11,"into","","",104,[[],["u"]]],[11,"to_owned","","",104,[[["self"]],["t"]]],[11,"clone_into","","",104,[[["self"],["t"]]]],[11,"try_from","","",104,[[["u"]],["result"]]],[11,"try_into","","",104,[[],["result"]]],[11,"borrow","","",104,[[["self"]],["t"]]],[11,"borrow_mut","","",104,[[["self"]],["t"]]],[11,"type_id","","",104,[[["self"]],["typeid"]]],[11,"peek","","",105,[[["cursor"]],["bool"]]],[11,"display","","",105,[[],["str"]]],[11,"span","","",105,[[["self"]],["span"]]],[11,"from","","",105,[[["t"]],["t"]]],[11,"into","","",105,[[],["u"]]],[11,"to_owned","","",105,[[["self"]],["t"]]],[11,"clone_into","","",105,[[["self"],["t"]]]],[11,"try_from","","",105,[[["u"]],["result"]]],[11,"try_into","","",105,[[],["result"]]],[11,"borrow","","",105,[[["self"]],["t"]]],[11,"borrow_mut","","",105,[[["self"]],["t"]]],[11,"type_id","","",105,[[["self"]],["typeid"]]],[11,"peek","","",106,[[["cursor"]],["bool"]]],[11,"display","","",106,[[],["str"]]],[11,"span","","",106,[[["self"]],["span"]]],[11,"from","","",106,[[["t"]],["t"]]],[11,"into","","",106,[[],["u"]]],[11,"to_owned","","",106,[[["self"]],["t"]]],[11,"clone_into","","",106,[[["self"],["t"]]]],[11,"try_from","","",106,[[["u"]],["result"]]],[11,"try_into","","",106,[[],["result"]]],[11,"borrow","","",106,[[["self"]],["t"]]],[11,"borrow_mut","","",106,[[["self"]],["t"]]],[11,"type_id","","",106,[[["self"]],["typeid"]]],[11,"peek","","",107,[[["cursor"]],["bool"]]],[11,"display","","",107,[[],["str"]]],[11,"span","","",107,[[["self"]],["span"]]],[11,"from","","",107,[[["t"]],["t"]]],[11,"into","","",107,[[],["u"]]],[11,"to_owned","","",107,[[["self"]],["t"]]],[11,"clone_into","","",107,[[["self"],["t"]]]],[11,"try_from","","",107,[[["u"]],["result"]]],[11,"try_into","","",107,[[],["result"]]],[11,"borrow","","",107,[[["self"]],["t"]]],[11,"borrow_mut","","",107,[[["self"]],["t"]]],[11,"type_id","","",107,[[["self"]],["typeid"]]],[11,"peek","","",108,[[["cursor"]],["bool"]]],[11,"display","","",108,[[],["str"]]],[11,"span","","",108,[[["self"]],["span"]]],[11,"from","","",108,[[["t"]],["t"]]],[11,"into","","",108,[[],["u"]]],[11,"to_owned","","",108,[[["self"]],["t"]]],[11,"clone_into","","",108,[[["self"],["t"]]]],[11,"try_from","","",108,[[["u"]],["result"]]],[11,"try_into","","",108,[[],["result"]]],[11,"borrow","","",108,[[["self"]],["t"]]],[11,"borrow_mut","","",108,[[["self"]],["t"]]],[11,"type_id","","",108,[[["self"]],["typeid"]]],[11,"peek","","",109,[[["cursor"]],["bool"]]],[11,"display","","",109,[[],["str"]]],[11,"span","","",109,[[["self"]],["span"]]],[11,"from","","",109,[[["t"]],["t"]]],[11,"into","","",109,[[],["u"]]],[11,"to_owned","","",109,[[["self"]],["t"]]],[11,"clone_into","","",109,[[["self"],["t"]]]],[11,"try_from","","",109,[[["u"]],["result"]]],[11,"try_into","","",109,[[],["result"]]],[11,"borrow","","",109,[[["self"]],["t"]]],[11,"borrow_mut","","",109,[[["self"]],["t"]]],[11,"type_id","","",109,[[["self"]],["typeid"]]],[11,"peek","","",110,[[["cursor"]],["bool"]]],[11,"display","","",110,[[],["str"]]],[11,"span","","",110,[[["self"]],["span"]]],[11,"from","","",110,[[["t"]],["t"]]],[11,"into","","",110,[[],["u"]]],[11,"to_owned","","",110,[[["self"]],["t"]]],[11,"clone_into","","",110,[[["self"],["t"]]]],[11,"try_from","","",110,[[["u"]],["result"]]],[11,"try_into","","",110,[[],["result"]]],[11,"borrow","","",110,[[["self"]],["t"]]],[11,"borrow_mut","","",110,[[["self"]],["t"]]],[11,"type_id","","",110,[[["self"]],["typeid"]]],[11,"peek","","",111,[[["cursor"]],["bool"]]],[11,"display","","",111,[[],["str"]]],[11,"span","","",111,[[["self"]],["span"]]],[11,"from","","",111,[[["t"]],["t"]]],[11,"into","","",111,[[],["u"]]],[11,"to_owned","","",111,[[["self"]],["t"]]],[11,"clone_into","","",111,[[["self"],["t"]]]],[11,"try_from","","",111,[[["u"]],["result"]]],[11,"try_into","","",111,[[],["result"]]],[11,"borrow","","",111,[[["self"]],["t"]]],[11,"borrow_mut","","",111,[[["self"]],["t"]]],[11,"type_id","","",111,[[["self"]],["typeid"]]],[11,"peek","","",112,[[["cursor"]],["bool"]]],[11,"display","","",112,[[],["str"]]],[11,"span","","",112,[[["self"]],["span"]]],[11,"from","","",112,[[["t"]],["t"]]],[11,"into","","",112,[[],["u"]]],[11,"to_owned","","",112,[[["self"]],["t"]]],[11,"clone_into","","",112,[[["self"],["t"]]]],[11,"try_from","","",112,[[["u"]],["result"]]],[11,"try_into","","",112,[[],["result"]]],[11,"borrow","","",112,[[["self"]],["t"]]],[11,"borrow_mut","","",112,[[["self"]],["t"]]],[11,"type_id","","",112,[[["self"]],["typeid"]]],[11,"peek","","",113,[[["cursor"]],["bool"]]],[11,"display","","",113,[[],["str"]]],[11,"span","","",113,[[["self"]],["span"]]],[11,"from","","",113,[[["t"]],["t"]]],[11,"into","","",113,[[],["u"]]],[11,"to_owned","","",113,[[["self"]],["t"]]],[11,"clone_into","","",113,[[["self"],["t"]]]],[11,"try_from","","",113,[[["u"]],["result"]]],[11,"try_into","","",113,[[],["result"]]],[11,"borrow","","",113,[[["self"]],["t"]]],[11,"borrow_mut","","",113,[[["self"]],["t"]]],[11,"type_id","","",113,[[["self"]],["typeid"]]],[11,"peek","","",114,[[["cursor"]],["bool"]]],[11,"display","","",114,[[],["str"]]],[11,"span","","",114,[[["self"]],["span"]]],[11,"from","","",114,[[["t"]],["t"]]],[11,"into","","",114,[[],["u"]]],[11,"to_owned","","",114,[[["self"]],["t"]]],[11,"clone_into","","",114,[[["self"],["t"]]]],[11,"try_from","","",114,[[["u"]],["result"]]],[11,"try_into","","",114,[[],["result"]]],[11,"borrow","","",114,[[["self"]],["t"]]],[11,"borrow_mut","","",114,[[["self"]],["t"]]],[11,"type_id","","",114,[[["self"]],["typeid"]]],[11,"peek","","",115,[[["cursor"]],["bool"]]],[11,"display","","",115,[[],["str"]]],[11,"span","","",115,[[["self"]],["span"]]],[11,"from","","",115,[[["t"]],["t"]]],[11,"into","","",115,[[],["u"]]],[11,"to_owned","","",115,[[["self"]],["t"]]],[11,"clone_into","","",115,[[["self"],["t"]]]],[11,"try_from","","",115,[[["u"]],["result"]]],[11,"try_into","","",115,[[],["result"]]],[11,"borrow","","",115,[[["self"]],["t"]]],[11,"borrow_mut","","",115,[[["self"]],["t"]]],[11,"type_id","","",115,[[["self"]],["typeid"]]],[11,"peek","","",116,[[["cursor"]],["bool"]]],[11,"display","","",116,[[],["str"]]],[11,"span","","",116,[[["self"]],["span"]]],[11,"from","","",116,[[["t"]],["t"]]],[11,"into","","",116,[[],["u"]]],[11,"to_owned","","",116,[[["self"]],["t"]]],[11,"clone_into","","",116,[[["self"],["t"]]]],[11,"try_from","","",116,[[["u"]],["result"]]],[11,"try_into","","",116,[[],["result"]]],[11,"borrow","","",116,[[["self"]],["t"]]],[11,"borrow_mut","","",116,[[["self"]],["t"]]],[11,"type_id","","",116,[[["self"]],["typeid"]]],[11,"peek","","",117,[[["cursor"]],["bool"]]],[11,"display","","",117,[[],["str"]]],[11,"span","","",117,[[["self"]],["span"]]],[11,"from","","",117,[[["t"]],["t"]]],[11,"into","","",117,[[],["u"]]],[11,"to_owned","","",117,[[["self"]],["t"]]],[11,"clone_into","","",117,[[["self"],["t"]]]],[11,"try_from","","",117,[[["u"]],["result"]]],[11,"try_into","","",117,[[],["result"]]],[11,"borrow","","",117,[[["self"]],["t"]]],[11,"borrow_mut","","",117,[[["self"]],["t"]]],[11,"type_id","","",117,[[["self"]],["typeid"]]],[11,"peek","","",118,[[["cursor"]],["bool"]]],[11,"display","","",118,[[],["str"]]],[11,"span","","",118,[[["self"]],["span"]]],[11,"from","","",118,[[["t"]],["t"]]],[11,"into","","",118,[[],["u"]]],[11,"to_owned","","",118,[[["self"]],["t"]]],[11,"clone_into","","",118,[[["self"],["t"]]]],[11,"try_from","","",118,[[["u"]],["result"]]],[11,"try_into","","",118,[[],["result"]]],[11,"borrow","","",118,[[["self"]],["t"]]],[11,"borrow_mut","","",118,[[["self"]],["t"]]],[11,"type_id","","",118,[[["self"]],["typeid"]]],[11,"peek","","",119,[[["cursor"]],["bool"]]],[11,"display","","",119,[[],["str"]]],[11,"span","","",119,[[["self"]],["span"]]],[11,"from","","",119,[[["t"]],["t"]]],[11,"into","","",119,[[],["u"]]],[11,"to_owned","","",119,[[["self"]],["t"]]],[11,"clone_into","","",119,[[["self"],["t"]]]],[11,"try_from","","",119,[[["u"]],["result"]]],[11,"try_into","","",119,[[],["result"]]],[11,"borrow","","",119,[[["self"]],["t"]]],[11,"borrow_mut","","",119,[[["self"]],["t"]]],[11,"type_id","","",119,[[["self"]],["typeid"]]],[11,"peek","","",120,[[["cursor"]],["bool"]]],[11,"display","","",120,[[],["str"]]],[11,"span","","",120,[[["self"]],["span"]]],[11,"from","","",120,[[["t"]],["t"]]],[11,"into","","",120,[[],["u"]]],[11,"to_owned","","",120,[[["self"]],["t"]]],[11,"clone_into","","",120,[[["self"],["t"]]]],[11,"try_from","","",120,[[["u"]],["result"]]],[11,"try_into","","",120,[[],["result"]]],[11,"borrow","","",120,[[["self"]],["t"]]],[11,"borrow_mut","","",120,[[["self"]],["t"]]],[11,"type_id","","",120,[[["self"]],["typeid"]]],[11,"peek","","",121,[[["cursor"]],["bool"]]],[11,"display","","",121,[[],["str"]]],[11,"span","","",121,[[["self"]],["span"]]],[11,"from","","",121,[[["t"]],["t"]]],[11,"into","","",121,[[],["u"]]],[11,"to_owned","","",121,[[["self"]],["t"]]],[11,"clone_into","","",121,[[["self"],["t"]]]],[11,"try_from","","",121,[[["u"]],["result"]]],[11,"try_into","","",121,[[],["result"]]],[11,"borrow","","",121,[[["self"]],["t"]]],[11,"borrow_mut","","",121,[[["self"]],["t"]]],[11,"type_id","","",121,[[["self"]],["typeid"]]],[11,"peek","","",122,[[["cursor"]],["bool"]]],[11,"display","","",122,[[],["str"]]],[11,"span","","",122,[[["self"]],["span"]]],[11,"from","","",122,[[["t"]],["t"]]],[11,"into","","",122,[[],["u"]]],[11,"to_owned","","",122,[[["self"]],["t"]]],[11,"clone_into","","",122,[[["self"],["t"]]]],[11,"try_from","","",122,[[["u"]],["result"]]],[11,"try_into","","",122,[[],["result"]]],[11,"borrow","","",122,[[["self"]],["t"]]],[11,"borrow_mut","","",122,[[["self"]],["t"]]],[11,"type_id","","",122,[[["self"]],["typeid"]]],[11,"peek","","",123,[[["cursor"]],["bool"]]],[11,"display","","",123,[[],["str"]]],[11,"span","","",123,[[["self"]],["span"]]],[11,"from","","",123,[[["t"]],["t"]]],[11,"into","","",123,[[],["u"]]],[11,"to_owned","","",123,[[["self"]],["t"]]],[11,"clone_into","","",123,[[["self"],["t"]]]],[11,"try_from","","",123,[[["u"]],["result"]]],[11,"try_into","","",123,[[],["result"]]],[11,"borrow","","",123,[[["self"]],["t"]]],[11,"borrow_mut","","",123,[[["self"]],["t"]]],[11,"type_id","","",123,[[["self"]],["typeid"]]],[11,"peek","","",124,[[["cursor"]],["bool"]]],[11,"display","","",124,[[],["str"]]],[11,"span","","",124,[[["self"]],["span"]]],[11,"from","","",124,[[["t"]],["t"]]],[11,"into","","",124,[[],["u"]]],[11,"to_owned","","",124,[[["self"]],["t"]]],[11,"clone_into","","",124,[[["self"],["t"]]]],[11,"try_from","","",124,[[["u"]],["result"]]],[11,"try_into","","",124,[[],["result"]]],[11,"borrow","","",124,[[["self"]],["t"]]],[11,"borrow_mut","","",124,[[["self"]],["t"]]],[11,"type_id","","",124,[[["self"]],["typeid"]]],[11,"peek","","",125,[[["cursor"]],["bool"]]],[11,"display","","",125,[[],["str"]]],[11,"span","","",125,[[["self"]],["span"]]],[11,"from","","",125,[[["t"]],["t"]]],[11,"into","","",125,[[],["u"]]],[11,"to_owned","","",125,[[["self"]],["t"]]],[11,"clone_into","","",125,[[["self"],["t"]]]],[11,"try_from","","",125,[[["u"]],["result"]]],[11,"try_into","","",125,[[],["result"]]],[11,"borrow","","",125,[[["self"]],["t"]]],[11,"borrow_mut","","",125,[[["self"]],["t"]]],[11,"type_id","","",125,[[["self"]],["typeid"]]],[11,"peek","","",126,[[["cursor"]],["bool"]]],[11,"display","","",126,[[],["str"]]],[11,"span","","",126,[[["self"]],["span"]]],[11,"from","","",126,[[["t"]],["t"]]],[11,"into","","",126,[[],["u"]]],[11,"to_owned","","",126,[[["self"]],["t"]]],[11,"clone_into","","",126,[[["self"],["t"]]]],[11,"try_from","","",126,[[["u"]],["result"]]],[11,"try_into","","",126,[[],["result"]]],[11,"borrow","","",126,[[["self"]],["t"]]],[11,"borrow_mut","","",126,[[["self"]],["t"]]],[11,"type_id","","",126,[[["self"]],["typeid"]]],[11,"peek","","",127,[[["cursor"]],["bool"]]],[11,"display","","",127,[[],["str"]]],[11,"span","","",127,[[["self"]],["span"]]],[11,"from","","",127,[[["t"]],["t"]]],[11,"into","","",127,[[],["u"]]],[11,"to_owned","","",127,[[["self"]],["t"]]],[11,"clone_into","","",127,[[["self"],["t"]]]],[11,"try_from","","",127,[[["u"]],["result"]]],[11,"try_into","","",127,[[],["result"]]],[11,"borrow","","",127,[[["self"]],["t"]]],[11,"borrow_mut","","",127,[[["self"]],["t"]]],[11,"type_id","","",127,[[["self"]],["typeid"]]],[11,"peek","","",128,[[["cursor"]],["bool"]]],[11,"display","","",128,[[],["str"]]],[11,"span","","",128,[[["self"]],["span"]]],[11,"from","","",128,[[["t"]],["t"]]],[11,"into","","",128,[[],["u"]]],[11,"to_owned","","",128,[[["self"]],["t"]]],[11,"clone_into","","",128,[[["self"],["t"]]]],[11,"try_from","","",128,[[["u"]],["result"]]],[11,"try_into","","",128,[[],["result"]]],[11,"borrow","","",128,[[["self"]],["t"]]],[11,"borrow_mut","","",128,[[["self"]],["t"]]],[11,"type_id","","",128,[[["self"]],["typeid"]]],[11,"peek","","",129,[[["cursor"]],["bool"]]],[11,"display","","",129,[[],["str"]]],[11,"span","","",129,[[["self"]],["span"]]],[11,"from","","",129,[[["t"]],["t"]]],[11,"into","","",129,[[],["u"]]],[11,"to_owned","","",129,[[["self"]],["t"]]],[11,"clone_into","","",129,[[["self"],["t"]]]],[11,"try_from","","",129,[[["u"]],["result"]]],[11,"try_into","","",129,[[],["result"]]],[11,"borrow","","",129,[[["self"]],["t"]]],[11,"borrow_mut","","",129,[[["self"]],["t"]]],[11,"type_id","","",129,[[["self"]],["typeid"]]],[11,"peek","","",130,[[["cursor"]],["bool"]]],[11,"display","","",130,[[],["str"]]],[11,"span","","",130,[[["self"]],["span"]]],[11,"from","","",130,[[["t"]],["t"]]],[11,"into","","",130,[[],["u"]]],[11,"to_owned","","",130,[[["self"]],["t"]]],[11,"clone_into","","",130,[[["self"],["t"]]]],[11,"try_from","","",130,[[["u"]],["result"]]],[11,"try_into","","",130,[[],["result"]]],[11,"borrow","","",130,[[["self"]],["t"]]],[11,"borrow_mut","","",130,[[["self"]],["t"]]],[11,"type_id","","",130,[[["self"]],["typeid"]]],[11,"peek","","",131,[[["cursor"]],["bool"]]],[11,"display","","",131,[[],["str"]]],[11,"span","","",131,[[["self"]],["span"]]],[11,"from","","",131,[[["t"]],["t"]]],[11,"into","","",131,[[],["u"]]],[11,"to_owned","","",131,[[["self"]],["t"]]],[11,"clone_into","","",131,[[["self"],["t"]]]],[11,"try_from","","",131,[[["u"]],["result"]]],[11,"try_into","","",131,[[],["result"]]],[11,"borrow","","",131,[[["self"]],["t"]]],[11,"borrow_mut","","",131,[[["self"]],["t"]]],[11,"type_id","","",131,[[["self"]],["typeid"]]],[11,"peek","","",132,[[["cursor"]],["bool"]]],[11,"display","","",132,[[],["str"]]],[11,"span","","",132,[[["self"]],["span"]]],[11,"from","","",132,[[["t"]],["t"]]],[11,"into","","",132,[[],["u"]]],[11,"to_owned","","",132,[[["self"]],["t"]]],[11,"clone_into","","",132,[[["self"],["t"]]]],[11,"try_from","","",132,[[["u"]],["result"]]],[11,"try_into","","",132,[[],["result"]]],[11,"borrow","","",132,[[["self"]],["t"]]],[11,"borrow_mut","","",132,[[["self"]],["t"]]],[11,"type_id","","",132,[[["self"]],["typeid"]]],[11,"peek","","",133,[[["cursor"]],["bool"]]],[11,"display","","",133,[[],["str"]]],[11,"span","","",133,[[["self"]],["span"]]],[11,"from","","",133,[[["t"]],["t"]]],[11,"into","","",133,[[],["u"]]],[11,"to_owned","","",133,[[["self"]],["t"]]],[11,"clone_into","","",133,[[["self"],["t"]]]],[11,"try_from","","",133,[[["u"]],["result"]]],[11,"try_into","","",133,[[],["result"]]],[11,"borrow","","",133,[[["self"]],["t"]]],[11,"borrow_mut","","",133,[[["self"]],["t"]]],[11,"type_id","","",133,[[["self"]],["typeid"]]],[11,"peek","","",134,[[["cursor"]],["bool"]]],[11,"display","","",134,[[],["str"]]],[11,"span","","",134,[[["self"]],["span"]]],[11,"from","","",134,[[["t"]],["t"]]],[11,"into","","",134,[[],["u"]]],[11,"to_owned","","",134,[[["self"]],["t"]]],[11,"clone_into","","",134,[[["self"],["t"]]]],[11,"try_from","","",134,[[["u"]],["result"]]],[11,"try_into","","",134,[[],["result"]]],[11,"borrow","","",134,[[["self"]],["t"]]],[11,"borrow_mut","","",134,[[["self"]],["t"]]],[11,"type_id","","",134,[[["self"]],["typeid"]]],[11,"peek","","",135,[[["cursor"]],["bool"]]],[11,"display","","",135,[[],["str"]]],[11,"span","","",135,[[["self"]],["span"]]],[11,"from","","",135,[[["t"]],["t"]]],[11,"into","","",135,[[],["u"]]],[11,"to_owned","","",135,[[["self"]],["t"]]],[11,"clone_into","","",135,[[["self"],["t"]]]],[11,"try_from","","",135,[[["u"]],["result"]]],[11,"try_into","","",135,[[],["result"]]],[11,"borrow","","",135,[[["self"]],["t"]]],[11,"borrow_mut","","",135,[[["self"]],["t"]]],[11,"type_id","","",135,[[["self"]],["typeid"]]],[11,"peek","","",136,[[["cursor"]],["bool"]]],[11,"display","","",136,[[],["str"]]],[11,"span","","",136,[[["self"]],["span"]]],[11,"from","","",136,[[["t"]],["t"]]],[11,"into","","",136,[[],["u"]]],[11,"to_owned","","",136,[[["self"]],["t"]]],[11,"clone_into","","",136,[[["self"],["t"]]]],[11,"try_from","","",136,[[["u"]],["result"]]],[11,"try_into","","",136,[[],["result"]]],[11,"borrow","","",136,[[["self"]],["t"]]],[11,"borrow_mut","","",136,[[["self"]],["t"]]],[11,"type_id","","",136,[[["self"]],["typeid"]]],[11,"peek","","",137,[[["cursor"]],["bool"]]],[11,"display","","",137,[[],["str"]]],[11,"span","","",137,[[["self"]],["span"]]],[11,"from","","",137,[[["t"]],["t"]]],[11,"into","","",137,[[],["u"]]],[11,"to_owned","","",137,[[["self"]],["t"]]],[11,"clone_into","","",137,[[["self"],["t"]]]],[11,"try_from","","",137,[[["u"]],["result"]]],[11,"try_into","","",137,[[],["result"]]],[11,"borrow","","",137,[[["self"]],["t"]]],[11,"borrow_mut","","",137,[[["self"]],["t"]]],[11,"type_id","","",137,[[["self"]],["typeid"]]],[11,"peek","","",138,[[["cursor"]],["bool"]]],[11,"display","","",138,[[],["str"]]],[11,"span","","",138,[[["self"]],["span"]]],[11,"from","","",138,[[["t"]],["t"]]],[11,"into","","",138,[[],["u"]]],[11,"to_owned","","",138,[[["self"]],["t"]]],[11,"clone_into","","",138,[[["self"],["t"]]]],[11,"try_from","","",138,[[["u"]],["result"]]],[11,"try_into","","",138,[[],["result"]]],[11,"borrow","","",138,[[["self"]],["t"]]],[11,"borrow_mut","","",138,[[["self"]],["t"]]],[11,"type_id","","",138,[[["self"]],["typeid"]]],[11,"peek","","",139,[[["cursor"]],["bool"]]],[11,"display","","",139,[[],["str"]]],[11,"span","","",139,[[["self"]],["span"]]],[11,"from","","",139,[[["t"]],["t"]]],[11,"into","","",139,[[],["u"]]],[11,"to_owned","","",139,[[["self"]],["t"]]],[11,"clone_into","","",139,[[["self"],["t"]]]],[11,"try_from","","",139,[[["u"]],["result"]]],[11,"try_into","","",139,[[],["result"]]],[11,"borrow","","",139,[[["self"]],["t"]]],[11,"borrow_mut","","",139,[[["self"]],["t"]]],[11,"type_id","","",139,[[["self"]],["typeid"]]],[11,"peek","","",140,[[["cursor"]],["bool"]]],[11,"display","","",140,[[],["str"]]],[11,"span","","",140,[[["self"]],["span"]]],[11,"from","","",140,[[["t"]],["t"]]],[11,"into","","",140,[[],["u"]]],[11,"to_owned","","",140,[[["self"]],["t"]]],[11,"clone_into","","",140,[[["self"],["t"]]]],[11,"try_from","","",140,[[["u"]],["result"]]],[11,"try_into","","",140,[[],["result"]]],[11,"borrow","","",140,[[["self"]],["t"]]],[11,"borrow_mut","","",140,[[["self"]],["t"]]],[11,"type_id","","",140,[[["self"]],["typeid"]]],[11,"peek","","",141,[[["cursor"]],["bool"]]],[11,"display","","",141,[[],["str"]]],[11,"span","","",141,[[["self"]],["span"]]],[11,"from","","",141,[[["t"]],["t"]]],[11,"into","","",141,[[],["u"]]],[11,"to_owned","","",141,[[["self"]],["t"]]],[11,"clone_into","","",141,[[["self"],["t"]]]],[11,"try_from","","",141,[[["u"]],["result"]]],[11,"try_into","","",141,[[],["result"]]],[11,"borrow","","",141,[[["self"]],["t"]]],[11,"borrow_mut","","",141,[[["self"]],["t"]]],[11,"type_id","","",141,[[["self"]],["typeid"]]],[11,"peek","","",142,[[["cursor"]],["bool"]]],[11,"display","","",142,[[],["str"]]],[11,"span","","",142,[[["self"]],["span"]]],[11,"from","","",142,[[["t"]],["t"]]],[11,"into","","",142,[[],["u"]]],[11,"to_owned","","",142,[[["self"]],["t"]]],[11,"clone_into","","",142,[[["self"],["t"]]]],[11,"try_from","","",142,[[["u"]],["result"]]],[11,"try_into","","",142,[[],["result"]]],[11,"borrow","","",142,[[["self"]],["t"]]],[11,"borrow_mut","","",142,[[["self"]],["t"]]],[11,"type_id","","",142,[[["self"]],["typeid"]]],[11,"peek","","",143,[[["cursor"]],["bool"]]],[11,"display","","",143,[[],["str"]]],[11,"span","","",143,[[["self"]],["span"]]],[11,"from","","",143,[[["t"]],["t"]]],[11,"into","","",143,[[],["u"]]],[11,"to_owned","","",143,[[["self"]],["t"]]],[11,"clone_into","","",143,[[["self"],["t"]]]],[11,"try_from","","",143,[[["u"]],["result"]]],[11,"try_into","","",143,[[],["result"]]],[11,"borrow","","",143,[[["self"]],["t"]]],[11,"borrow_mut","","",143,[[["self"]],["t"]]],[11,"type_id","","",143,[[["self"]],["typeid"]]],[11,"peek","","",144,[[["cursor"]],["bool"]]],[11,"display","","",144,[[],["str"]]],[11,"span","","",144,[[["self"]],["span"]]],[11,"from","","",144,[[["t"]],["t"]]],[11,"into","","",144,[[],["u"]]],[11,"to_owned","","",144,[[["self"]],["t"]]],[11,"clone_into","","",144,[[["self"],["t"]]]],[11,"try_from","","",144,[[["u"]],["result"]]],[11,"try_into","","",144,[[],["result"]]],[11,"borrow","","",144,[[["self"]],["t"]]],[11,"borrow_mut","","",144,[[["self"]],["t"]]],[11,"type_id","","",144,[[["self"]],["typeid"]]],[11,"peek","","",145,[[["cursor"]],["bool"]]],[11,"display","","",145,[[],["str"]]],[11,"span","","",145,[[["self"]],["span"]]],[11,"from","","",145,[[["t"]],["t"]]],[11,"into","","",145,[[],["u"]]],[11,"to_owned","","",145,[[["self"]],["t"]]],[11,"clone_into","","",145,[[["self"],["t"]]]],[11,"try_from","","",145,[[["u"]],["result"]]],[11,"try_into","","",145,[[],["result"]]],[11,"borrow","","",145,[[["self"]],["t"]]],[11,"borrow_mut","","",145,[[["self"]],["t"]]],[11,"type_id","","",145,[[["self"]],["typeid"]]],[11,"peek","","",146,[[["cursor"]],["bool"]]],[11,"display","","",146,[[],["str"]]],[11,"span","","",146,[[["self"]],["span"]]],[11,"from","","",146,[[["t"]],["t"]]],[11,"into","","",146,[[],["u"]]],[11,"to_owned","","",146,[[["self"]],["t"]]],[11,"clone_into","","",146,[[["self"],["t"]]]],[11,"try_from","","",146,[[["u"]],["result"]]],[11,"try_into","","",146,[[],["result"]]],[11,"borrow","","",146,[[["self"]],["t"]]],[11,"borrow_mut","","",146,[[["self"]],["t"]]],[11,"type_id","","",146,[[["self"]],["typeid"]]],[11,"peek","","",147,[[["cursor"]],["bool"]]],[11,"display","","",147,[[],["str"]]],[11,"span","","",147,[[["self"]],["span"]]],[11,"from","","",147,[[["t"]],["t"]]],[11,"into","","",147,[[],["u"]]],[11,"to_owned","","",147,[[["self"]],["t"]]],[11,"clone_into","","",147,[[["self"],["t"]]]],[11,"try_from","","",147,[[["u"]],["result"]]],[11,"try_into","","",147,[[],["result"]]],[11,"borrow","","",147,[[["self"]],["t"]]],[11,"borrow_mut","","",147,[[["self"]],["t"]]],[11,"type_id","","",147,[[["self"]],["typeid"]]],[11,"peek","","",148,[[["cursor"]],["bool"]]],[11,"display","","",148,[[],["str"]]],[11,"span","","",148,[[["self"]],["span"]]],[11,"from","","",148,[[["t"]],["t"]]],[11,"into","","",148,[[],["u"]]],[11,"to_owned","","",148,[[["self"]],["t"]]],[11,"clone_into","","",148,[[["self"],["t"]]]],[11,"try_from","","",148,[[["u"]],["result"]]],[11,"try_into","","",148,[[],["result"]]],[11,"borrow","","",148,[[["self"]],["t"]]],[11,"borrow_mut","","",148,[[["self"]],["t"]]],[11,"type_id","","",148,[[["self"]],["typeid"]]],[11,"peek","","",149,[[["cursor"]],["bool"]]],[11,"display","","",149,[[],["str"]]],[11,"span","","",149,[[["self"]],["span"]]],[11,"from","","",149,[[["t"]],["t"]]],[11,"into","","",149,[[],["u"]]],[11,"to_owned","","",149,[[["self"]],["t"]]],[11,"clone_into","","",149,[[["self"],["t"]]]],[11,"try_from","","",149,[[["u"]],["result"]]],[11,"try_into","","",149,[[],["result"]]],[11,"borrow","","",149,[[["self"]],["t"]]],[11,"borrow_mut","","",149,[[["self"]],["t"]]],[11,"type_id","","",149,[[["self"]],["typeid"]]],[11,"peek","","",150,[[["cursor"]],["bool"]]],[11,"display","","",150,[[],["str"]]],[11,"span","","",150,[[["self"]],["span"]]],[11,"from","","",150,[[["t"]],["t"]]],[11,"into","","",150,[[],["u"]]],[11,"to_owned","","",150,[[["self"]],["t"]]],[11,"clone_into","","",150,[[["self"],["t"]]]],[11,"try_from","","",150,[[["u"]],["result"]]],[11,"try_into","","",150,[[],["result"]]],[11,"borrow","","",150,[[["self"]],["t"]]],[11,"borrow_mut","","",150,[[["self"]],["t"]]],[11,"type_id","","",150,[[["self"]],["typeid"]]],[11,"peek","","",151,[[["cursor"]],["bool"]]],[11,"display","","",151,[[],["str"]]],[11,"span","","",151,[[["self"]],["span"]]],[11,"from","","",151,[[["t"]],["t"]]],[11,"into","","",151,[[],["u"]]],[11,"to_owned","","",151,[[["self"]],["t"]]],[11,"clone_into","","",151,[[["self"],["t"]]]],[11,"try_from","","",151,[[["u"]],["result"]]],[11,"try_into","","",151,[[],["result"]]],[11,"borrow","","",151,[[["self"]],["t"]]],[11,"borrow_mut","","",151,[[["self"]],["t"]]],[11,"type_id","","",151,[[["self"]],["typeid"]]],[11,"peek","","",152,[[["cursor"]],["bool"]]],[11,"display","","",152,[[],["str"]]],[11,"span","","",152,[[["self"]],["span"]]],[11,"from","","",152,[[["t"]],["t"]]],[11,"into","","",152,[[],["u"]]],[11,"to_owned","","",152,[[["self"]],["t"]]],[11,"clone_into","","",152,[[["self"],["t"]]]],[11,"try_from","","",152,[[["u"]],["result"]]],[11,"try_into","","",152,[[],["result"]]],[11,"borrow","","",152,[[["self"]],["t"]]],[11,"borrow_mut","","",152,[[["self"]],["t"]]],[11,"type_id","","",152,[[["self"]],["typeid"]]],[11,"peek","","",153,[[["cursor"]],["bool"]]],[11,"display","","",153,[[],["str"]]],[11,"span","","",153,[[["self"]],["span"]]],[11,"from","","",153,[[["t"]],["t"]]],[11,"into","","",153,[[],["u"]]],[11,"to_owned","","",153,[[["self"]],["t"]]],[11,"clone_into","","",153,[[["self"],["t"]]]],[11,"try_from","","",153,[[["u"]],["result"]]],[11,"try_into","","",153,[[],["result"]]],[11,"borrow","","",153,[[["self"]],["t"]]],[11,"borrow_mut","","",153,[[["self"]],["t"]]],[11,"type_id","","",153,[[["self"]],["typeid"]]],[11,"peek","","",154,[[["cursor"]],["bool"]]],[11,"display","","",154,[[],["str"]]],[11,"span","","",154,[[["self"]],["span"]]],[11,"from","","",154,[[["t"]],["t"]]],[11,"into","","",154,[[],["u"]]],[11,"to_owned","","",154,[[["self"]],["t"]]],[11,"clone_into","","",154,[[["self"],["t"]]]],[11,"try_from","","",154,[[["u"]],["result"]]],[11,"try_into","","",154,[[],["result"]]],[11,"borrow","","",154,[[["self"]],["t"]]],[11,"borrow_mut","","",154,[[["self"]],["t"]]],[11,"type_id","","",154,[[["self"]],["typeid"]]],[11,"peek","","",155,[[["cursor"]],["bool"]]],[11,"display","","",155,[[],["str"]]],[11,"span","","",155,[[["self"]],["span"]]],[11,"from","","",155,[[["t"]],["t"]]],[11,"into","","",155,[[],["u"]]],[11,"to_owned","","",155,[[["self"]],["t"]]],[11,"clone_into","","",155,[[["self"],["t"]]]],[11,"try_from","","",155,[[["u"]],["result"]]],[11,"try_into","","",155,[[],["result"]]],[11,"borrow","","",155,[[["self"]],["t"]]],[11,"borrow_mut","","",155,[[["self"]],["t"]]],[11,"type_id","","",155,[[["self"]],["typeid"]]],[11,"peek","","",156,[[["cursor"]],["bool"]]],[11,"display","","",156,[[],["str"]]],[11,"span","","",156,[[["self"]],["span"]]],[11,"from","","",156,[[["t"]],["t"]]],[11,"into","","",156,[[],["u"]]],[11,"to_owned","","",156,[[["self"]],["t"]]],[11,"clone_into","","",156,[[["self"],["t"]]]],[11,"try_from","","",156,[[["u"]],["result"]]],[11,"try_into","","",156,[[],["result"]]],[11,"borrow","","",156,[[["self"]],["t"]]],[11,"borrow_mut","","",156,[[["self"]],["t"]]],[11,"type_id","","",156,[[["self"]],["typeid"]]],[11,"peek","","",157,[[["cursor"]],["bool"]]],[11,"display","","",157,[[],["str"]]],[11,"span","","",157,[[["self"]],["span"]]],[11,"from","","",157,[[["t"]],["t"]]],[11,"into","","",157,[[],["u"]]],[11,"to_owned","","",157,[[["self"]],["t"]]],[11,"clone_into","","",157,[[["self"],["t"]]]],[11,"try_from","","",157,[[["u"]],["result"]]],[11,"try_into","","",157,[[],["result"]]],[11,"borrow","","",157,[[["self"]],["t"]]],[11,"borrow_mut","","",157,[[["self"]],["t"]]],[11,"type_id","","",157,[[["self"]],["typeid"]]],[11,"peek","","",158,[[["cursor"]],["bool"]]],[11,"display","","",158,[[],["str"]]],[11,"span","","",158,[[["self"]],["span"]]],[11,"from","","",158,[[["t"]],["t"]]],[11,"into","","",158,[[],["u"]]],[11,"to_owned","","",158,[[["self"]],["t"]]],[11,"clone_into","","",158,[[["self"],["t"]]]],[11,"try_from","","",158,[[["u"]],["result"]]],[11,"try_into","","",158,[[],["result"]]],[11,"borrow","","",158,[[["self"]],["t"]]],[11,"borrow_mut","","",158,[[["self"]],["t"]]],[11,"type_id","","",158,[[["self"]],["typeid"]]],[11,"peek","","",159,[[["cursor"]],["bool"]]],[11,"display","","",159,[[],["str"]]],[11,"span","","",159,[[["self"]],["span"]]],[11,"from","","",159,[[["t"]],["t"]]],[11,"into","","",159,[[],["u"]]],[11,"to_owned","","",159,[[["self"]],["t"]]],[11,"clone_into","","",159,[[["self"],["t"]]]],[11,"try_from","","",159,[[["u"]],["result"]]],[11,"try_into","","",159,[[],["result"]]],[11,"borrow","","",159,[[["self"]],["t"]]],[11,"borrow_mut","","",159,[[["self"]],["t"]]],[11,"type_id","","",159,[[["self"]],["typeid"]]],[11,"peek","","",160,[[["cursor"]],["bool"]]],[11,"display","","",160,[[],["str"]]],[11,"span","","",160,[[["self"]],["span"]]],[11,"from","","",160,[[["t"]],["t"]]],[11,"into","","",160,[[],["u"]]],[11,"to_owned","","",160,[[["self"]],["t"]]],[11,"clone_into","","",160,[[["self"],["t"]]]],[11,"try_from","","",160,[[["u"]],["result"]]],[11,"try_into","","",160,[[],["result"]]],[11,"borrow","","",160,[[["self"]],["t"]]],[11,"borrow_mut","","",160,[[["self"]],["t"]]],[11,"type_id","","",160,[[["self"]],["typeid"]]],[11,"peek","","",161,[[["cursor"]],["bool"]]],[11,"display","","",161,[[],["str"]]],[11,"span","","",161,[[["self"]],["span"]]],[11,"from","","",161,[[["t"]],["t"]]],[11,"into","","",161,[[],["u"]]],[11,"to_owned","","",161,[[["self"]],["t"]]],[11,"clone_into","","",161,[[["self"],["t"]]]],[11,"try_from","","",161,[[["u"]],["result"]]],[11,"try_into","","",161,[[],["result"]]],[11,"borrow","","",161,[[["self"]],["t"]]],[11,"borrow_mut","","",161,[[["self"]],["t"]]],[11,"type_id","","",161,[[["self"]],["typeid"]]],[11,"peek","","",162,[[["cursor"]],["bool"]]],[11,"display","","",162,[[],["str"]]],[11,"span","","",162,[[["self"]],["span"]]],[11,"from","","",162,[[["t"]],["t"]]],[11,"into","","",162,[[],["u"]]],[11,"to_owned","","",162,[[["self"]],["t"]]],[11,"clone_into","","",162,[[["self"],["t"]]]],[11,"try_from","","",162,[[["u"]],["result"]]],[11,"try_into","","",162,[[],["result"]]],[11,"borrow","","",162,[[["self"]],["t"]]],[11,"borrow_mut","","",162,[[["self"]],["t"]]],[11,"type_id","","",162,[[["self"]],["typeid"]]],[11,"peek","","",163,[[["cursor"]],["bool"]]],[11,"display","","",163,[[],["str"]]],[11,"span","","",163,[[["self"]],["span"]]],[11,"from","","",163,[[["t"]],["t"]]],[11,"into","","",163,[[],["u"]]],[11,"to_owned","","",163,[[["self"]],["t"]]],[11,"clone_into","","",163,[[["self"],["t"]]]],[11,"try_from","","",163,[[["u"]],["result"]]],[11,"try_into","","",163,[[],["result"]]],[11,"borrow","","",163,[[["self"]],["t"]]],[11,"borrow_mut","","",163,[[["self"]],["t"]]],[11,"type_id","","",163,[[["self"]],["typeid"]]],[11,"peek","","",164,[[["cursor"]],["bool"]]],[11,"display","","",164,[[],["str"]]],[11,"span","","",164,[[["self"]],["span"]]],[11,"from","","",164,[[["t"]],["t"]]],[11,"into","","",164,[[],["u"]]],[11,"to_owned","","",164,[[["self"]],["t"]]],[11,"clone_into","","",164,[[["self"],["t"]]]],[11,"try_from","","",164,[[["u"]],["result"]]],[11,"try_into","","",164,[[],["result"]]],[11,"borrow","","",164,[[["self"]],["t"]]],[11,"borrow_mut","","",164,[[["self"]],["t"]]],[11,"type_id","","",164,[[["self"]],["typeid"]]],[11,"peek","","",165,[[["cursor"]],["bool"]]],[11,"display","","",165,[[],["str"]]],[11,"span","","",165,[[["self"]],["span"]]],[11,"from","","",165,[[["t"]],["t"]]],[11,"into","","",165,[[],["u"]]],[11,"to_owned","","",165,[[["self"]],["t"]]],[11,"clone_into","","",165,[[["self"],["t"]]]],[11,"try_from","","",165,[[["u"]],["result"]]],[11,"try_into","","",165,[[],["result"]]],[11,"borrow","","",165,[[["self"]],["t"]]],[11,"borrow_mut","","",165,[[["self"]],["t"]]],[11,"type_id","","",165,[[["self"]],["typeid"]]],[11,"peek","","",166,[[["cursor"]],["bool"]]],[11,"display","","",166,[[],["str"]]],[11,"span","","",166,[[["self"]],["span"]]],[11,"from","","",166,[[["t"]],["t"]]],[11,"into","","",166,[[],["u"]]],[11,"to_owned","","",166,[[["self"]],["t"]]],[11,"clone_into","","",166,[[["self"],["t"]]]],[11,"try_from","","",166,[[["u"]],["result"]]],[11,"try_into","","",166,[[],["result"]]],[11,"borrow","","",166,[[["self"]],["t"]]],[11,"borrow_mut","","",166,[[["self"]],["t"]]],[11,"type_id","","",166,[[["self"]],["typeid"]]],[11,"peek","","",167,[[["cursor"]],["bool"]]],[11,"display","","",167,[[],["str"]]],[11,"span","","",167,[[["self"]],["span"]]],[11,"from","","",167,[[["t"]],["t"]]],[11,"into","","",167,[[],["u"]]],[11,"to_owned","","",167,[[["self"]],["t"]]],[11,"clone_into","","",167,[[["self"],["t"]]]],[11,"try_from","","",167,[[["u"]],["result"]]],[11,"try_into","","",167,[[],["result"]]],[11,"borrow","","",167,[[["self"]],["t"]]],[11,"borrow_mut","","",167,[[["self"]],["t"]]],[11,"type_id","","",167,[[["self"]],["typeid"]]],[11,"peek","","",168,[[["cursor"]],["bool"]]],[11,"display","","",168,[[],["str"]]],[11,"span","","",168,[[["self"]],["span"]]],[11,"from","","",168,[[["t"]],["t"]]],[11,"into","","",168,[[],["u"]]],[11,"to_owned","","",168,[[["self"]],["t"]]],[11,"clone_into","","",168,[[["self"],["t"]]]],[11,"try_from","","",168,[[["u"]],["result"]]],[11,"try_into","","",168,[[],["result"]]],[11,"borrow","","",168,[[["self"]],["t"]]],[11,"borrow_mut","","",168,[[["self"]],["t"]]],[11,"type_id","","",168,[[["self"]],["typeid"]]],[11,"peek","","",169,[[["cursor"]],["bool"]]],[11,"display","","",169,[[],["str"]]],[11,"span","","",169,[[["self"]],["span"]]],[11,"from","","",169,[[["t"]],["t"]]],[11,"into","","",169,[[],["u"]]],[11,"to_owned","","",169,[[["self"]],["t"]]],[11,"clone_into","","",169,[[["self"],["t"]]]],[11,"try_from","","",169,[[["u"]],["result"]]],[11,"try_into","","",169,[[],["result"]]],[11,"borrow","","",169,[[["self"]],["t"]]],[11,"borrow_mut","","",169,[[["self"]],["t"]]],[11,"type_id","","",169,[[["self"]],["typeid"]]],[11,"peek","","",170,[[["cursor"]],["bool"]]],[11,"display","","",170,[[],["str"]]],[11,"span","","",170,[[["self"]],["span"]]],[11,"from","","",170,[[["t"]],["t"]]],[11,"into","","",170,[[],["u"]]],[11,"to_owned","","",170,[[["self"]],["t"]]],[11,"clone_into","","",170,[[["self"],["t"]]]],[11,"try_from","","",170,[[["u"]],["result"]]],[11,"try_into","","",170,[[],["result"]]],[11,"borrow","","",170,[[["self"]],["t"]]],[11,"borrow_mut","","",170,[[["self"]],["t"]]],[11,"type_id","","",170,[[["self"]],["typeid"]]],[11,"peek","","",171,[[["cursor"]],["bool"]]],[11,"display","","",171,[[],["str"]]],[11,"span","","",171,[[["self"]],["span"]]],[11,"from","","",171,[[["t"]],["t"]]],[11,"into","","",171,[[],["u"]]],[11,"to_owned","","",171,[[["self"]],["t"]]],[11,"clone_into","","",171,[[["self"],["t"]]]],[11,"try_from","","",171,[[["u"]],["result"]]],[11,"try_into","","",171,[[],["result"]]],[11,"borrow","","",171,[[["self"]],["t"]]],[11,"borrow_mut","","",171,[[["self"]],["t"]]],[11,"type_id","","",171,[[["self"]],["typeid"]]],[11,"peek","","",172,[[["cursor"]],["bool"]]],[11,"display","","",172,[[],["str"]]],[11,"span","","",172,[[["self"]],["span"]]],[11,"from","","",172,[[["t"]],["t"]]],[11,"into","","",172,[[],["u"]]],[11,"to_owned","","",172,[[["self"]],["t"]]],[11,"clone_into","","",172,[[["self"],["t"]]]],[11,"try_from","","",172,[[["u"]],["result"]]],[11,"try_into","","",172,[[],["result"]]],[11,"borrow","","",172,[[["self"]],["t"]]],[11,"borrow_mut","","",172,[[["self"]],["t"]]],[11,"type_id","","",172,[[["self"]],["typeid"]]],[11,"peek","","",173,[[["cursor"]],["bool"]]],[11,"display","","",173,[[],["str"]]],[11,"span","","",173,[[["self"]],["span"]]],[11,"from","","",173,[[["t"]],["t"]]],[11,"into","","",173,[[],["u"]]],[11,"to_owned","","",173,[[["self"]],["t"]]],[11,"clone_into","","",173,[[["self"],["t"]]]],[11,"try_from","","",173,[[["u"]],["result"]]],[11,"try_into","","",173,[[],["result"]]],[11,"borrow","","",173,[[["self"]],["t"]]],[11,"borrow_mut","","",173,[[["self"]],["t"]]],[11,"type_id","","",173,[[["self"]],["typeid"]]],[11,"peek","","",174,[[["cursor"]],["bool"]]],[11,"display","","",174,[[],["str"]]],[11,"span","","",174,[[["self"]],["span"]]],[11,"from","","",174,[[["t"]],["t"]]],[11,"into","","",174,[[],["u"]]],[11,"to_owned","","",174,[[["self"]],["t"]]],[11,"clone_into","","",174,[[["self"],["t"]]]],[11,"try_from","","",174,[[["u"]],["result"]]],[11,"try_into","","",174,[[],["result"]]],[11,"borrow","","",174,[[["self"]],["t"]]],[11,"borrow_mut","","",174,[[["self"]],["t"]]],[11,"type_id","","",174,[[["self"]],["typeid"]]],[11,"peek","","",175,[[["cursor"]],["bool"]]],[11,"display","","",175,[[],["str"]]],[11,"span","","",175,[[["self"]],["span"]]],[11,"from","","",175,[[["t"]],["t"]]],[11,"into","","",175,[[],["u"]]],[11,"to_owned","","",175,[[["self"]],["t"]]],[11,"clone_into","","",175,[[["self"],["t"]]]],[11,"try_from","","",175,[[["u"]],["result"]]],[11,"try_into","","",175,[[],["result"]]],[11,"borrow","","",175,[[["self"]],["t"]]],[11,"borrow_mut","","",175,[[["self"]],["t"]]],[11,"type_id","","",175,[[["self"]],["typeid"]]],[11,"peek","","",176,[[["cursor"]],["bool"]]],[11,"display","","",176,[[],["str"]]],[11,"span","","",176,[[["self"]],["span"]]],[11,"from","","",176,[[["t"]],["t"]]],[11,"into","","",176,[[],["u"]]],[11,"to_owned","","",176,[[["self"]],["t"]]],[11,"clone_into","","",176,[[["self"],["t"]]]],[11,"try_from","","",176,[[["u"]],["result"]]],[11,"try_into","","",176,[[],["result"]]],[11,"borrow","","",176,[[["self"]],["t"]]],[11,"borrow_mut","","",176,[[["self"]],["t"]]],[11,"type_id","","",176,[[["self"]],["typeid"]]],[11,"peek","","",177,[[["cursor"]],["bool"]]],[11,"display","","",177,[[],["str"]]],[11,"span","","",177,[[["self"]],["span"]]],[11,"from","","",177,[[["t"]],["t"]]],[11,"into","","",177,[[],["u"]]],[11,"to_owned","","",177,[[["self"]],["t"]]],[11,"clone_into","","",177,[[["self"],["t"]]]],[11,"try_from","","",177,[[["u"]],["result"]]],[11,"try_into","","",177,[[],["result"]]],[11,"borrow","","",177,[[["self"]],["t"]]],[11,"borrow_mut","","",177,[[["self"]],["t"]]],[11,"type_id","","",177,[[["self"]],["typeid"]]],[11,"peek","","",178,[[["cursor"]],["bool"]]],[11,"display","","",178,[[],["str"]]],[11,"span","","",178,[[["self"]],["span"]]],[11,"from","","",178,[[["t"]],["t"]]],[11,"into","","",178,[[],["u"]]],[11,"to_owned","","",178,[[["self"]],["t"]]],[11,"clone_into","","",178,[[["self"],["t"]]]],[11,"try_from","","",178,[[["u"]],["result"]]],[11,"try_into","","",178,[[],["result"]]],[11,"borrow","","",178,[[["self"]],["t"]]],[11,"borrow_mut","","",178,[[["self"]],["t"]]],[11,"type_id","","",178,[[["self"]],["typeid"]]],[11,"peek","","",179,[[["cursor"]],["bool"]]],[11,"display","","",179,[[],["str"]]],[11,"span","","",179,[[["self"]],["span"]]],[11,"from","","",179,[[["t"]],["t"]]],[11,"into","","",179,[[],["u"]]],[11,"to_owned","","",179,[[["self"]],["t"]]],[11,"clone_into","","",179,[[["self"],["t"]]]],[11,"try_from","","",179,[[["u"]],["result"]]],[11,"try_into","","",179,[[],["result"]]],[11,"borrow","","",179,[[["self"]],["t"]]],[11,"borrow_mut","","",179,[[["self"]],["t"]]],[11,"type_id","","",179,[[["self"]],["typeid"]]],[11,"peek","","",180,[[["cursor"]],["bool"]]],[11,"display","","",180,[[],["str"]]],[11,"span","","",180,[[["self"]],["span"]]],[11,"from","","",180,[[["t"]],["t"]]],[11,"into","","",180,[[],["u"]]],[11,"to_owned","","",180,[[["self"]],["t"]]],[11,"clone_into","","",180,[[["self"],["t"]]]],[11,"try_from","","",180,[[["u"]],["result"]]],[11,"try_into","","",180,[[],["result"]]],[11,"borrow","","",180,[[["self"]],["t"]]],[11,"borrow_mut","","",180,[[["self"]],["t"]]],[11,"type_id","","",180,[[["self"]],["typeid"]]],[11,"peek","","",181,[[["cursor"]],["bool"]]],[11,"display","","",181,[[],["str"]]],[11,"from","","",181,[[["t"]],["t"]]],[11,"into","","",181,[[],["u"]]],[11,"to_owned","","",181,[[["self"]],["t"]]],[11,"clone_into","","",181,[[["self"],["t"]]]],[11,"try_from","","",181,[[["u"]],["result"]]],[11,"try_into","","",181,[[],["result"]]],[11,"borrow","","",181,[[["self"]],["t"]]],[11,"borrow_mut","","",181,[[["self"]],["t"]]],[11,"type_id","","",181,[[["self"]],["typeid"]]],[11,"peek","","",182,[[["cursor"]],["bool"]]],[11,"display","","",182,[[],["str"]]],[11,"from","","",182,[[["t"]],["t"]]],[11,"into","","",182,[[],["u"]]],[11,"to_owned","","",182,[[["self"]],["t"]]],[11,"clone_into","","",182,[[["self"],["t"]]]],[11,"try_from","","",182,[[["u"]],["result"]]],[11,"try_into","","",182,[[],["result"]]],[11,"borrow","","",182,[[["self"]],["t"]]],[11,"borrow_mut","","",182,[[["self"]],["t"]]],[11,"type_id","","",182,[[["self"]],["typeid"]]],[11,"peek","","",183,[[["cursor"]],["bool"]]],[11,"display","","",183,[[],["str"]]],[11,"from","","",183,[[["t"]],["t"]]],[11,"into","","",183,[[],["u"]]],[11,"to_owned","","",183,[[["self"]],["t"]]],[11,"clone_into","","",183,[[["self"],["t"]]]],[11,"try_from","","",183,[[["u"]],["result"]]],[11,"try_into","","",183,[[],["result"]]],[11,"borrow","","",183,[[["self"]],["t"]]],[11,"borrow_mut","","",183,[[["self"]],["t"]]],[11,"type_id","","",183,[[["self"]],["typeid"]]],[11,"peek","","",184,[[["cursor"]],["bool"]]],[11,"display","","",184,[[],["str"]]],[11,"from","","",184,[[["t"]],["t"]]],[11,"into","","",184,[[],["u"]]],[11,"to_owned","","",184,[[["self"]],["t"]]],[11,"clone_into","","",184,[[["self"],["t"]]]],[11,"try_from","","",184,[[["u"]],["result"]]],[11,"try_into","","",184,[[],["result"]]],[11,"borrow","","",184,[[["self"]],["t"]]],[11,"borrow_mut","","",184,[[["self"]],["t"]]],[11,"type_id","","",184,[[["self"]],["typeid"]]],[11,"from","syn::buffer","",192,[[["t"]],["t"]]],[11,"into","","",192,[[],["u"]]],[11,"try_from","","",192,[[["u"]],["result"]]],[11,"try_into","","",192,[[],["result"]]],[11,"borrow","","",192,[[["self"]],["t"]]],[11,"borrow_mut","","",192,[[["self"]],["t"]]],[11,"type_id","","",192,[[["self"]],["typeid"]]],[11,"from","","",193,[[["t"]],["t"]]],[11,"into","","",193,[[],["u"]]],[11,"to_owned","","",193,[[["self"]],["t"]]],[11,"clone_into","","",193,[[["self"],["t"]]]],[11,"try_from","","",193,[[["u"]],["result"]]],[11,"try_into","","",193,[[],["result"]]],[11,"borrow","","",193,[[["self"]],["t"]]],[11,"borrow_mut","","",193,[[["self"]],["t"]]],[11,"type_id","","",193,[[["self"]],["typeid"]]],[11,"span","syn::punctuated","",196,[[["self"]],["span"]]],[11,"from","","",196,[[["t"]],["t"]]],[11,"into","","",196,[[],["u"]]],[11,"into_iter","","",196,[[],["i"]]],[11,"to_owned","","",196,[[["self"]],["t"]]],[11,"clone_into","","",196,[[["self"],["t"]]]],[11,"try_from","","",196,[[["u"]],["result"]]],[11,"try_into","","",196,[[],["result"]]],[11,"borrow","","",196,[[["self"]],["t"]]],[11,"borrow_mut","","",196,[[["self"]],["t"]]],[11,"type_id","","",196,[[["self"]],["typeid"]]],[11,"from","","",238,[[["t"]],["t"]]],[11,"into","","",238,[[],["u"]]],[11,"into_iter","","",238,[[],["i"]]],[11,"to_owned","","",238,[[["self"]],["t"]]],[11,"clone_into","","",238,[[["self"],["t"]]]],[11,"try_from","","",238,[[["u"]],["result"]]],[11,"try_into","","",238,[[],["result"]]],[11,"borrow","","",238,[[["self"]],["t"]]],[11,"borrow_mut","","",238,[[["self"]],["t"]]],[11,"type_id","","",238,[[["self"]],["typeid"]]],[11,"from","","",239,[[["t"]],["t"]]],[11,"into","","",239,[[],["u"]]],[11,"into_iter","","",239,[[],["i"]]],[11,"try_from","","",239,[[["u"]],["result"]]],[11,"try_into","","",239,[[],["result"]]],[11,"borrow","","",239,[[["self"]],["t"]]],[11,"borrow_mut","","",239,[[["self"]],["t"]]],[11,"type_id","","",239,[[["self"]],["typeid"]]],[11,"from","","",240,[[["t"]],["t"]]],[11,"into","","",240,[[],["u"]]],[11,"into_iter","","",240,[[],["i"]]],[11,"to_owned","","",240,[[["self"]],["t"]]],[11,"clone_into","","",240,[[["self"],["t"]]]],[11,"try_from","","",240,[[["u"]],["result"]]],[11,"try_into","","",240,[[],["result"]]],[11,"borrow","","",240,[[["self"]],["t"]]],[11,"borrow_mut","","",240,[[["self"]],["t"]]],[11,"type_id","","",240,[[["self"]],["typeid"]]],[11,"from","","",241,[[["t"]],["t"]]],[11,"into","","",241,[[],["u"]]],[11,"into_iter","","",241,[[],["i"]]],[11,"to_owned","","",241,[[["self"]],["t"]]],[11,"clone_into","","",241,[[["self"],["t"]]]],[11,"try_from","","",241,[[["u"]],["result"]]],[11,"try_into","","",241,[[],["result"]]],[11,"borrow","","",241,[[["self"]],["t"]]],[11,"borrow_mut","","",241,[[["self"]],["t"]]],[11,"type_id","","",241,[[["self"]],["typeid"]]],[11,"from","","",242,[[["t"]],["t"]]],[11,"into","","",242,[[],["u"]]],[11,"into_iter","","",242,[[],["i"]]],[11,"to_owned","","",242,[[["self"]],["t"]]],[11,"clone_into","","",242,[[["self"],["t"]]]],[11,"try_from","","",242,[[["u"]],["result"]]],[11,"try_into","","",242,[[],["result"]]],[11,"borrow","","",242,[[["self"]],["t"]]],[11,"borrow_mut","","",242,[[["self"]],["t"]]],[11,"type_id","","",242,[[["self"]],["typeid"]]],[11,"from","","",243,[[["t"]],["t"]]],[11,"into","","",243,[[],["u"]]],[11,"into_iter","","",243,[[],["i"]]],[11,"try_from","","",243,[[["u"]],["result"]]],[11,"try_into","","",243,[[],["result"]]],[11,"borrow","","",243,[[["self"]],["t"]]],[11,"borrow_mut","","",243,[[["self"]],["t"]]],[11,"type_id","","",243,[[["self"]],["typeid"]]],[11,"span","","",195,[[["self"]],["span"]]],[11,"from","","",195,[[["t"]],["t"]]],[11,"into","","",195,[[],["u"]]],[11,"to_owned","","",195,[[["self"]],["t"]]],[11,"clone_into","","",195,[[["self"],["t"]]]],[11,"try_from","","",195,[[["u"]],["result"]]],[11,"try_into","","",195,[[],["result"]]],[11,"borrow","","",195,[[["self"]],["t"]]],[11,"borrow_mut","","",195,[[["self"]],["t"]]],[11,"type_id","","",195,[[["self"]],["typeid"]]],[11,"from","syn::parse","",244,[[["t"]],["t"]]],[11,"into","","",244,[[],["u"]]],[11,"try_from","","",244,[[["u"]],["result"]]],[11,"try_into","","",244,[[],["result"]]],[11,"borrow","","",244,[[["self"]],["t"]]],[11,"borrow_mut","","",244,[[["self"]],["t"]]],[11,"type_id","","",244,[[["self"]],["typeid"]]],[11,"from","","",203,[[["t"]],["t"]]],[11,"into","","",203,[[],["u"]]],[11,"to_string","","",203,[[["self"]],["string"]]],[11,"try_from","","",203,[[["u"]],["result"]]],[11,"try_into","","",203,[[],["result"]]],[11,"borrow","","",203,[[["self"]],["t"]]],[11,"borrow_mut","","",203,[[["self"]],["t"]]],[11,"type_id","","",203,[[["self"]],["typeid"]]],[11,"from","","",202,[[["t"]],["t"]]],[11,"into","","",202,[[],["u"]]],[11,"to_owned","","",202,[[["self"]],["t"]]],[11,"clone_into","","",202,[[["self"],["t"]]]],[11,"try_from","","",202,[[["u"]],["result"]]],[11,"try_into","","",202,[[],["result"]]],[11,"borrow","","",202,[[["self"]],["t"]]],[11,"borrow_mut","","",202,[[["self"]],["t"]]],[11,"type_id","","",202,[[["self"]],["typeid"]]],[11,"from","","",245,[[["t"]],["t"]]],[11,"into","","",245,[[],["u"]]],[11,"try_from","","",245,[[["u"]],["result"]]],[11,"try_into","","",245,[[],["result"]]],[11,"borrow","","",245,[[["self"]],["t"]]],[11,"borrow_mut","","",245,[[["self"]],["t"]]],[11,"type_id","","",245,[[["self"]],["typeid"]]],[11,"fmt","syn","",205,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",205,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"cmp","","",205,[[["ident"],["self"]],["ordering"]]],[11,"clone","","",205,[[["self"]],["ident"]]],[11,"eq","","",205,[[["t"],["self"]],["bool"]]],[11,"eq","","",205,[[["ident"],["self"]],["bool"]]],[11,"hash","","",205,[[["self"],["h"]]]],[11,"partial_cmp","","",205,[[["ident"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"to_tokens","","",205,[[["tokenstream"],["self"]]]],[11,"span","","",205,[[["self"]],[["span"],["option",["span"]]]]],[11,"fmt","","",205,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"peek","","",30,[[["cursor"]],["bool"]]],[11,"display","","",30,[[],["str"]]],[11,"peek","","",72,[[["cursor"]],["bool"]]],[11,"display","","",72,[[],["str"]]],[11,"peek","","",186,[[["cursor"]],["bool"]]],[11,"display","","",186,[[],["str"]]],[11,"peek","","",187,[[["cursor"]],["bool"]]],[11,"display","","",187,[[],["str"]]],[11,"peek","","",188,[[["cursor"]],["bool"]]],[11,"display","","",188,[[],["str"]]],[11,"peek","","",189,[[["cursor"]],["bool"]]],[11,"display","","",189,[[],["str"]]],[11,"peek","","",190,[[["cursor"]],["bool"]]],[11,"display","","",190,[[],["str"]]],[11,"peek","","",191,[[["cursor"]],["bool"]]],[11,"display","","",191,[[],["str"]]],[11,"peek","","",31,[[["cursor"]],["bool"]]],[11,"display","","",31,[[],["str"]]],[11,"peek","syn::token","",82,[[["cursor"]],["bool"]]],[11,"display","","",82,[[],["str"]]],[11,"peek","","",183,[[["cursor"]],["bool"]]],[11,"display","","",183,[[],["str"]]],[11,"peek","","",181,[[["cursor"]],["bool"]]],[11,"display","","",181,[[],["str"]]],[11,"peek","","",182,[[["cursor"]],["bool"]]],[11,"display","","",182,[[],["str"]]],[11,"peek","","",184,[[["cursor"]],["bool"]]],[11,"display","","",184,[[],["str"]]],[11,"peek","","",83,[[["cursor"]],["bool"]]],[11,"display","","",83,[[],["str"]]],[11,"peek","","",84,[[["cursor"]],["bool"]]],[11,"display","","",84,[[],["str"]]],[11,"peek","","",85,[[["cursor"]],["bool"]]],[11,"display","","",85,[[],["str"]]],[11,"peek","","",86,[[["cursor"]],["bool"]]],[11,"display","","",86,[[],["str"]]],[11,"peek","","",87,[[["cursor"]],["bool"]]],[11,"display","","",87,[[],["str"]]],[11,"peek","","",88,[[["cursor"]],["bool"]]],[11,"display","","",88,[[],["str"]]],[11,"peek","","",89,[[["cursor"]],["bool"]]],[11,"display","","",89,[[],["str"]]],[11,"peek","","",90,[[["cursor"]],["bool"]]],[11,"display","","",90,[[],["str"]]],[11,"peek","","",91,[[["cursor"]],["bool"]]],[11,"display","","",91,[[],["str"]]],[11,"peek","","",92,[[["cursor"]],["bool"]]],[11,"display","","",92,[[],["str"]]],[11,"peek","","",93,[[["cursor"]],["bool"]]],[11,"display","","",93,[[],["str"]]],[11,"peek","","",94,[[["cursor"]],["bool"]]],[11,"display","","",94,[[],["str"]]],[11,"peek","","",95,[[["cursor"]],["bool"]]],[11,"display","","",95,[[],["str"]]],[11,"peek","","",96,[[["cursor"]],["bool"]]],[11,"display","","",96,[[],["str"]]],[11,"peek","","",97,[[["cursor"]],["bool"]]],[11,"display","","",97,[[],["str"]]],[11,"peek","","",98,[[["cursor"]],["bool"]]],[11,"display","","",98,[[],["str"]]],[11,"peek","","",99,[[["cursor"]],["bool"]]],[11,"display","","",99,[[],["str"]]],[11,"peek","","",100,[[["cursor"]],["bool"]]],[11,"display","","",100,[[],["str"]]],[11,"peek","","",101,[[["cursor"]],["bool"]]],[11,"display","","",101,[[],["str"]]],[11,"peek","","",102,[[["cursor"]],["bool"]]],[11,"display","","",102,[[],["str"]]],[11,"peek","","",103,[[["cursor"]],["bool"]]],[11,"display","","",103,[[],["str"]]],[11,"peek","","",104,[[["cursor"]],["bool"]]],[11,"display","","",104,[[],["str"]]],[11,"peek","","",105,[[["cursor"]],["bool"]]],[11,"display","","",105,[[],["str"]]],[11,"peek","","",106,[[["cursor"]],["bool"]]],[11,"display","","",106,[[],["str"]]],[11,"peek","","",107,[[["cursor"]],["bool"]]],[11,"display","","",107,[[],["str"]]],[11,"peek","","",108,[[["cursor"]],["bool"]]],[11,"display","","",108,[[],["str"]]],[11,"peek","","",109,[[["cursor"]],["bool"]]],[11,"display","","",109,[[],["str"]]],[11,"peek","","",110,[[["cursor"]],["bool"]]],[11,"display","","",110,[[],["str"]]],[11,"peek","","",111,[[["cursor"]],["bool"]]],[11,"display","","",111,[[],["str"]]],[11,"peek","","",112,[[["cursor"]],["bool"]]],[11,"display","","",112,[[],["str"]]],[11,"peek","","",113,[[["cursor"]],["bool"]]],[11,"display","","",113,[[],["str"]]],[11,"peek","","",114,[[["cursor"]],["bool"]]],[11,"display","","",114,[[],["str"]]],[11,"peek","","",115,[[["cursor"]],["bool"]]],[11,"display","","",115,[[],["str"]]],[11,"peek","","",116,[[["cursor"]],["bool"]]],[11,"display","","",116,[[],["str"]]],[11,"peek","","",117,[[["cursor"]],["bool"]]],[11,"display","","",117,[[],["str"]]],[11,"peek","","",118,[[["cursor"]],["bool"]]],[11,"display","","",118,[[],["str"]]],[11,"peek","","",119,[[["cursor"]],["bool"]]],[11,"display","","",119,[[],["str"]]],[11,"peek","","",120,[[["cursor"]],["bool"]]],[11,"display","","",120,[[],["str"]]],[11,"peek","","",121,[[["cursor"]],["bool"]]],[11,"display","","",121,[[],["str"]]],[11,"peek","","",122,[[["cursor"]],["bool"]]],[11,"display","","",122,[[],["str"]]],[11,"peek","","",123,[[["cursor"]],["bool"]]],[11,"display","","",123,[[],["str"]]],[11,"peek","","",124,[[["cursor"]],["bool"]]],[11,"display","","",124,[[],["str"]]],[11,"peek","","",125,[[["cursor"]],["bool"]]],[11,"display","","",125,[[],["str"]]],[11,"peek","","",126,[[["cursor"]],["bool"]]],[11,"display","","",126,[[],["str"]]],[11,"peek","","",127,[[["cursor"]],["bool"]]],[11,"display","","",127,[[],["str"]]],[11,"peek","","",128,[[["cursor"]],["bool"]]],[11,"display","","",128,[[],["str"]]],[11,"peek","","",129,[[["cursor"]],["bool"]]],[11,"display","","",129,[[],["str"]]],[11,"peek","","",130,[[["cursor"]],["bool"]]],[11,"display","","",130,[[],["str"]]],[11,"peek","","",131,[[["cursor"]],["bool"]]],[11,"display","","",131,[[],["str"]]],[11,"peek","","",132,[[["cursor"]],["bool"]]],[11,"display","","",132,[[],["str"]]],[11,"peek","","",133,[[["cursor"]],["bool"]]],[11,"display","","",133,[[],["str"]]],[11,"peek","","",134,[[["cursor"]],["bool"]]],[11,"display","","",134,[[],["str"]]],[11,"peek","","",135,[[["cursor"]],["bool"]]],[11,"display","","",135,[[],["str"]]],[11,"peek","","",136,[[["cursor"]],["bool"]]],[11,"display","","",136,[[],["str"]]],[11,"peek","","",137,[[["cursor"]],["bool"]]],[11,"display","","",137,[[],["str"]]],[11,"peek","","",138,[[["cursor"]],["bool"]]],[11,"display","","",138,[[],["str"]]],[11,"peek","","",139,[[["cursor"]],["bool"]]],[11,"display","","",139,[[],["str"]]],[11,"peek","","",140,[[["cursor"]],["bool"]]],[11,"display","","",140,[[],["str"]]],[11,"peek","","",141,[[["cursor"]],["bool"]]],[11,"display","","",141,[[],["str"]]],[11,"peek","","",142,[[["cursor"]],["bool"]]],[11,"display","","",142,[[],["str"]]],[11,"peek","","",143,[[["cursor"]],["bool"]]],[11,"display","","",143,[[],["str"]]],[11,"peek","","",144,[[["cursor"]],["bool"]]],[11,"display","","",144,[[],["str"]]],[11,"peek","","",145,[[["cursor"]],["bool"]]],[11,"display","","",145,[[],["str"]]],[11,"peek","","",146,[[["cursor"]],["bool"]]],[11,"display","","",146,[[],["str"]]],[11,"peek","","",147,[[["cursor"]],["bool"]]],[11,"display","","",147,[[],["str"]]],[11,"peek","","",148,[[["cursor"]],["bool"]]],[11,"display","","",148,[[],["str"]]],[11,"peek","","",149,[[["cursor"]],["bool"]]],[11,"display","","",149,[[],["str"]]],[11,"peek","","",150,[[["cursor"]],["bool"]]],[11,"display","","",150,[[],["str"]]],[11,"peek","","",151,[[["cursor"]],["bool"]]],[11,"display","","",151,[[],["str"]]],[11,"peek","","",152,[[["cursor"]],["bool"]]],[11,"display","","",152,[[],["str"]]],[11,"peek","","",153,[[["cursor"]],["bool"]]],[11,"display","","",153,[[],["str"]]],[11,"peek","","",154,[[["cursor"]],["bool"]]],[11,"display","","",154,[[],["str"]]],[11,"peek","","",155,[[["cursor"]],["bool"]]],[11,"display","","",155,[[],["str"]]],[11,"peek","","",156,[[["cursor"]],["bool"]]],[11,"display","","",156,[[],["str"]]],[11,"peek","","",157,[[["cursor"]],["bool"]]],[11,"display","","",157,[[],["str"]]],[11,"peek","","",158,[[["cursor"]],["bool"]]],[11,"display","","",158,[[],["str"]]],[11,"peek","","",159,[[["cursor"]],["bool"]]],[11,"display","","",159,[[],["str"]]],[11,"peek","","",160,[[["cursor"]],["bool"]]],[11,"display","","",160,[[],["str"]]],[11,"peek","","",161,[[["cursor"]],["bool"]]],[11,"display","","",161,[[],["str"]]],[11,"peek","","",162,[[["cursor"]],["bool"]]],[11,"display","","",162,[[],["str"]]],[11,"peek","","",163,[[["cursor"]],["bool"]]],[11,"display","","",163,[[],["str"]]],[11,"peek","","",164,[[["cursor"]],["bool"]]],[11,"display","","",164,[[],["str"]]],[11,"peek","","",165,[[["cursor"]],["bool"]]],[11,"display","","",165,[[],["str"]]],[11,"peek","","",166,[[["cursor"]],["bool"]]],[11,"display","","",166,[[],["str"]]],[11,"peek","","",167,[[["cursor"]],["bool"]]],[11,"display","","",167,[[],["str"]]],[11,"peek","","",168,[[["cursor"]],["bool"]]],[11,"display","","",168,[[],["str"]]],[11,"peek","","",169,[[["cursor"]],["bool"]]],[11,"display","","",169,[[],["str"]]],[11,"peek","","",170,[[["cursor"]],["bool"]]],[11,"display","","",170,[[],["str"]]],[11,"peek","","",171,[[["cursor"]],["bool"]]],[11,"display","","",171,[[],["str"]]],[11,"peek","","",172,[[["cursor"]],["bool"]]],[11,"display","","",172,[[],["str"]]],[11,"peek","","",173,[[["cursor"]],["bool"]]],[11,"display","","",173,[[],["str"]]],[11,"peek","","",174,[[["cursor"]],["bool"]]],[11,"display","","",174,[[],["str"]]],[11,"peek","","",175,[[["cursor"]],["bool"]]],[11,"display","","",175,[[],["str"]]],[11,"peek","","",176,[[["cursor"]],["bool"]]],[11,"display","","",176,[[],["str"]]],[11,"peek","","",177,[[["cursor"]],["bool"]]],[11,"display","","",177,[[],["str"]]],[11,"peek","","",178,[[["cursor"]],["bool"]]],[11,"display","","",178,[[],["str"]]],[11,"peek","","",179,[[["cursor"]],["bool"]]],[11,"display","","",179,[[],["str"]]],[11,"peek","","",180,[[["cursor"]],["bool"]]],[11,"display","","",180,[[],["str"]]],[11,"peek","syn","",205,[[["cursor"]],["bool"]]],[11,"display","","",205,[[],["str"]]],[11,"parse_any","","",205,[[["parsestream"]],["result"]]],[11,"unraw","","",205,[[["self"]],["ident"]]],[11,"advance_to","syn::parse","",203,[[["self"]]]],[11,"parse","syn::token","",82,[[["parsestream"]],["result"]]],[11,"parse","","",83,[[["parsestream"]],["result"]]],[11,"parse","","",84,[[["parsestream"]],["result"]]],[11,"parse","","",85,[[["parsestream"]],["result"]]],[11,"parse","","",86,[[["parsestream"]],["result"]]],[11,"parse","","",87,[[["parsestream"]],["result"]]],[11,"parse","","",88,[[["parsestream"]],["result"]]],[11,"parse","","",89,[[["parsestream"]],["result"]]],[11,"parse","","",90,[[["parsestream"]],["result"]]],[11,"parse","","",91,[[["parsestream"]],["result"]]],[11,"parse","","",92,[[["parsestream"]],["result"]]],[11,"parse","","",93,[[["parsestream"]],["result"]]],[11,"parse","","",94,[[["parsestream"]],["result"]]],[11,"parse","","",95,[[["parsestream"]],["result"]]],[11,"parse","","",96,[[["parsestream"]],["result"]]],[11,"parse","","",97,[[["parsestream"]],["result"]]],[11,"parse","","",98,[[["parsestream"]],["result"]]],[11,"parse","","",99,[[["parsestream"]],["result"]]],[11,"parse","","",100,[[["parsestream"]],["result"]]],[11,"parse","","",101,[[["parsestream"]],["result"]]],[11,"parse","","",102,[[["parsestream"]],["result"]]],[11,"parse","","",103,[[["parsestream"]],["result"]]],[11,"parse","","",104,[[["parsestream"]],["result"]]],[11,"parse","","",105,[[["parsestream"]],["result"]]],[11,"parse","","",106,[[["parsestream"]],["result"]]],[11,"parse","","",107,[[["parsestream"]],["result"]]],[11,"parse","","",108,[[["parsestream"]],["result"]]],[11,"parse","","",109,[[["parsestream"]],["result"]]],[11,"parse","","",110,[[["parsestream"]],["result"]]],[11,"parse","","",111,[[["parsestream"]],["result"]]],[11,"parse","","",112,[[["parsestream"]],["result"]]],[11,"parse","","",113,[[["parsestream"]],["result"]]],[11,"parse","","",114,[[["parsestream"]],["result"]]],[11,"parse","","",115,[[["parsestream"]],["result"]]],[11,"parse","","",116,[[["parsestream"]],["result"]]],[11,"parse","","",117,[[["parsestream"]],["result"]]],[11,"parse","","",118,[[["parsestream"]],["result"]]],[11,"parse","","",119,[[["parsestream"]],["result"]]],[11,"parse","","",120,[[["parsestream"]],["result"]]],[11,"parse","","",121,[[["parsestream"]],["result"]]],[11,"parse","","",122,[[["parsestream"]],["result"]]],[11,"parse","","",123,[[["parsestream"]],["result"]]],[11,"parse","","",124,[[["parsestream"]],["result"]]],[11,"parse","","",125,[[["parsestream"]],["result"]]],[11,"parse","","",126,[[["parsestream"]],["result"]]],[11,"parse","","",127,[[["parsestream"]],["result"]]],[11,"parse","","",128,[[["parsestream"]],["result"]]],[11,"parse","","",129,[[["parsestream"]],["result"]]],[11,"parse","","",130,[[["parsestream"]],["result"]]],[11,"parse","","",131,[[["parsestream"]],["result"]]],[11,"parse","","",132,[[["parsestream"]],["result"]]],[11,"parse","","",133,[[["parsestream"]],["result"]]],[11,"parse","","",134,[[["parsestream"]],["result"]]],[11,"parse","","",135,[[["parsestream"]],["result"]]],[11,"parse","","",136,[[["parsestream"]],["result"]]],[11,"parse","","",137,[[["parsestream"]],["result"]]],[11,"parse","","",138,[[["parsestream"]],["result"]]],[11,"parse","","",139,[[["parsestream"]],["result"]]],[11,"parse","","",140,[[["parsestream"]],["result"]]],[11,"parse","","",141,[[["parsestream"]],["result"]]],[11,"parse","","",142,[[["parsestream"]],["result"]]],[11,"parse","","",143,[[["parsestream"]],["result"]]],[11,"parse","","",144,[[["parsestream"]],["result"]]],[11,"parse","","",145,[[["parsestream"]],["result"]]],[11,"parse","","",146,[[["parsestream"]],["result"]]],[11,"parse","","",147,[[["parsestream"]],["result"]]],[11,"parse","","",148,[[["parsestream"]],["result"]]],[11,"parse","","",149,[[["parsestream"]],["result"]]],[11,"parse","","",150,[[["parsestream"]],["result"]]],[11,"parse","","",151,[[["parsestream"]],["result"]]],[11,"parse","","",152,[[["parsestream"]],["result"]]],[11,"parse","","",153,[[["parsestream"]],["result"]]],[11,"parse","","",154,[[["parsestream"]],["result"]]],[11,"parse","","",155,[[["parsestream"]],["result"]]],[11,"parse","","",156,[[["parsestream"]],["result"]]],[11,"parse","","",157,[[["parsestream"]],["result"]]],[11,"parse","","",158,[[["parsestream"]],["result"]]],[11,"parse","","",159,[[["parsestream"]],["result"]]],[11,"parse","","",160,[[["parsestream"]],["result"]]],[11,"parse","","",161,[[["parsestream"]],["result"]]],[11,"parse","","",162,[[["parsestream"]],["result"]]],[11,"parse","","",163,[[["parsestream"]],["result"]]],[11,"parse","","",164,[[["parsestream"]],["result"]]],[11,"parse","","",165,[[["parsestream"]],["result"]]],[11,"parse","","",166,[[["parsestream"]],["result"]]],[11,"parse","","",167,[[["parsestream"]],["result"]]],[11,"parse","","",168,[[["parsestream"]],["result"]]],[11,"parse","","",169,[[["parsestream"]],["result"]]],[11,"parse","","",170,[[["parsestream"]],["result"]]],[11,"parse","","",171,[[["parsestream"]],["result"]]],[11,"parse","","",172,[[["parsestream"]],["result"]]],[11,"parse","","",173,[[["parsestream"]],["result"]]],[11,"parse","","",174,[[["parsestream"]],["result"]]],[11,"parse","","",175,[[["parsestream"]],["result"]]],[11,"parse","","",176,[[["parsestream"]],["result"]]],[11,"parse","","",177,[[["parsestream"]],["result"]]],[11,"parse","","",178,[[["parsestream"]],["result"]]],[11,"parse","","",179,[[["parsestream"]],["result"]]],[11,"parse","","",180,[[["parsestream"]],["result"]]],[11,"parse","syn","",205,[[["parsestream"]],["result"]]],[11,"parse","","",62,[[["parsestream"]],["result"]]],[11,"parse","","",1,[[["parsestream"]],["result"]]],[11,"parse","","",2,[[["parsestream"]],["result"]]],[11,"parse","","",63,[[["parsestream"]],["result"]]],[11,"parse","","",6,[[["parsestream"]],["result"]]],[11,"parse","","",4,[[["parsestream"]],["result"]]],[11,"parse","","",5,[[["parsestream"]],["result"]]],[11,"parse","","",65,[[["parsestream"]],["result"]]],[11,"parse","","",66,[[["parsestream"]],["result"]]],[11,"parse","","",15,[[["parsestream"]],["result"]]],[11,"parse","","",17,[[["parsestream"]],["result"]]],[11,"parse","","",67,[[["parsestream"]],["result"]]],[11,"parse","","",19,[[["parsestream"]],["result"]]],[11,"parse","","",22,[[["parsestream"]],["result"]]],[11,"parse","","",68,[[["parsestream"]],["result"]]],[11,"parse","","",23,[[["parsestream"]],["result"]]],[11,"parse","","",20,[[["parsestream"]],["result"]]],[11,"parse","","",28,[[["parsestream"]],["result"]]],[11,"parse","","",70,[[["parsestream"]],["result"]]],[11,"parse","","",27,[[["parsestream"]],["result"]]],[11,"parse","","",69,[[["parsestream"]],["result"]]],[11,"parse","","",21,[[["parsestream"]],["result"]]],[11,"parse","","",29,[[["parsestream"]],["result"]]],[11,"parse","","",71,[[["parsestream"]],["result"]]],[11,"parse","","",30,[[["parsestream"]],["result"]]],[11,"parse","","",72,[[["parsestream"]],["result"]]],[11,"parse","","",186,[[["parsestream"]],["result"]]],[11,"parse","","",187,[[["parsestream"]],["result"]]],[11,"parse","","",188,[[["parsestream"]],["result"]]],[11,"parse","","",189,[[["parsestream"]],["result"]]],[11,"parse","","",190,[[["parsestream"]],["result"]]],[11,"parse","","",191,[[["parsestream"]],["result"]]],[11,"parse","","",31,[[["parsestream"]],["result"]]],[11,"parse","","",32,[[["parsestream"]],["result"]]],[11,"parse","","",36,[[["parsestream"]],["result"]]],[11,"parse","","",76,[[["parsestream"]],["result"]]],[11,"parse","","",77,[[["parsestream"]],["result"]]],[11,"parse","","",79,[[["parsestream"]],["result"]]],[11,"parse","","",50,[[["parsestream"]],["result"]]],[11,"parse","","",39,[[["parsestream"]],["result"]]],[11,"parse","","",48,[[["parsestream"]],["result"]]],[11,"parse","","",49,[[["parsestream"]],["result"]]],[11,"parse","","",40,[[["parsestream"]],["result"]]],[11,"parse","","",45,[[["parsestream"]],["result"]]],[11,"parse","","",43,[[["parsestream"]],["result"]]],[11,"parse","","",52,[[["parsestream"]],["result"]]],[11,"parse","","",44,[[["parsestream"]],["result"]]],[11,"parse","","",47,[[["parsestream"]],["result"]]],[11,"parse","","",78,[[["parsestream"]],["result"]]],[11,"parse","","",51,[[["parsestream"]],["result"]]],[11,"parse","","",42,[[["parsestream"]],["result"]]],[11,"parse","","",41,[[["parsestream"]],["result"]]],[11,"parse","","",46,[[["parsestream"]],["result"]]],[11,"parse","","",38,[[["parsestream"]],["result"]]],[11,"parse","","",37,[[["parsestream"]],["result"]]],[11,"parse","","",58,[[["parsestream"]],["result"]]],[11,"parse","","",80,[[["parsestream"]],["result"]]],[11,"parse","","",54,[[["parsestream"]],["result"]]],[11,"parse","","",57,[[["parsestream"]],["result"]]],[11,"parse","","",59,[[["parsestream"]],["result"]]],[11,"parse","","",55,[[["parsestream"]],["result"]]],[11,"parse","syn::parse","",245,[[["parsestream"]],["result"]]],[11,"drop","","",203,[[["self"]]]],[11,"from","syn","",205,[[["selfvalue"]],["ident"]]],[11,"from","","",205,[[["selftype"]],["ident"]]],[11,"from","","",205,[[["super"]],["ident"]]],[11,"from","","",205,[[["crate"]],["ident"]]],[11,"from","","",205,[[["extern"]],["ident"]]],[11,"from","","",205,[[["underscore"]],["ident"]]],[11,"from","","",62,[[["path"]],["meta"]]],[11,"from","","",62,[[["metalist"]],["meta"]]],[11,"from","","",62,[[["metanamevalue"]],["meta"]]],[11,"from","","",63,[[["meta"]],["nestedmeta"]]],[11,"from","","",63,[[["lit"]],["nestedmeta"]]],[11,"from","","",64,[[["fieldsnamed"]],["fields"]]],[11,"from","","",64,[[["fieldsunnamed"]],["fields"]]],[11,"from","","",65,[[["vispublic"]],["visibility"]]],[11,"from","","",65,[[["viscrate"]],["visibility"]]],[11,"from","","",65,[[["visrestricted"]],["visibility"]]],[11,"from","","",66,[[["exprarray"]],["expr"]]],[11,"from","","",66,[[["exprassign"]],["expr"]]],[11,"from","","",66,[[["exprassignop"]],["expr"]]],[11,"from","","",66,[[["exprasync"]],["expr"]]],[11,"from","","",66,[[["exprawait"]],["expr"]]],[11,"from","","",66,[[["exprbinary"]],["expr"]]],[11,"from","","",66,[[["exprblock"]],["expr"]]],[11,"from","","",66,[[["exprbox"]],["expr"]]],[11,"from","","",66,[[["exprbreak"]],["expr"]]],[11,"from","","",66,[[["exprcall"]],["expr"]]],[11,"from","","",66,[[["exprcast"]],["expr"]]],[11,"from","","",66,[[["exprclosure"]],["expr"]]],[11,"from","","",66,[[["exprcontinue"]],["expr"]]],[11,"from","","",66,[[["exprfield"]],["expr"]]],[11,"from","","",66,[[["exprforloop"]],["expr"]]],[11,"from","","",66,[[["exprgroup"]],["expr"]]],[11,"from","","",66,[[["exprif"]],["expr"]]],[11,"from","","",66,[[["exprindex"]],["expr"]]],[11,"from","","",66,[[["exprlet"]],["expr"]]],[11,"from","","",66,[[["exprlit"]],["expr"]]],[11,"from","","",66,[[["exprloop"]],["expr"]]],[11,"from","","",66,[[["exprmacro"]],["expr"]]],[11,"from","","",66,[[["exprmatch"]],["expr"]]],[11,"from","","",66,[[["exprmethodcall"]],["expr"]]],[11,"from","","",66,[[["exprparen"]],["expr"]]],[11,"from","","",66,[[["exprpath"]],["expr"]]],[11,"from","","",66,[[["exprrange"]],["expr"]]],[11,"from","","",66,[[["exprreference"]],["expr"]]],[11,"from","","",66,[[["exprrepeat"]],["expr"]]],[11,"from","","",66,[[["exprreturn"]],["expr"]]],[11,"from","","",66,[[["exprstruct"]],["expr"]]],[11,"from","","",66,[[["exprtry"]],["expr"]]],[11,"from","","",66,[[["exprtryblock"]],["expr"]]],[11,"from","","",66,[[["exprtuple"]],["expr"]]],[11,"from","","",66,[[["exprtype"]],["expr"]]],[11,"from","","",66,[[["exprunary"]],["expr"]]],[11,"from","","",66,[[["exprunsafe"]],["expr"]]],[11,"from","","",66,[[["exprwhile"]],["expr"]]],[11,"from","","",66,[[["expryield"]],["expr"]]],[11,"from","","",19,[[["usize"]],["index"]]],[11,"from","","",68,[[["typeparam"]],["genericparam"]]],[11,"from","","",68,[[["lifetimedef"]],["genericparam"]]],[11,"from","","",68,[[["constparam"]],["genericparam"]]],[11,"from","","",28,[[["ident"]],["self"]]],[11,"from","","",70,[[["traitbound"]],["typeparambound"]]],[11,"from","","",70,[[["lifetime"]],["typeparambound"]]],[11,"from","","",71,[[["predicatetype"]],["wherepredicate"]]],[11,"from","","",71,[[["predicatelifetime"]],["wherepredicate"]]],[11,"from","","",71,[[["predicateeq"]],["wherepredicate"]]],[11,"from","","",72,[[["litstr"]],["lit"]]],[11,"from","","",72,[[["litbytestr"]],["lit"]]],[11,"from","","",72,[[["litbyte"]],["lit"]]],[11,"from","","",72,[[["litchar"]],["lit"]]],[11,"from","","",72,[[["litint"]],["lit"]]],[11,"from","","",72,[[["litfloat"]],["lit"]]],[11,"from","","",72,[[["litbool"]],["lit"]]],[11,"from","","",190,[[["literal"]],["self"]]],[11,"from","","",191,[[["literal"]],["self"]]],[11,"from","","",75,[[["datastruct"]],["data"]]],[11,"from","","",75,[[["dataenum"]],["data"]]],[11,"from","","",75,[[["dataunion"]],["data"]]],[11,"from","","",79,[[["typearray"]],["type"]]],[11,"from","","",79,[[["typebarefn"]],["type"]]],[11,"from","","",79,[[["typegroup"]],["type"]]],[11,"from","","",79,[[["typeimpltrait"]],["type"]]],[11,"from","","",79,[[["typeinfer"]],["type"]]],[11,"from","","",79,[[["typemacro"]],["type"]]],[11,"from","","",79,[[["typenever"]],["type"]]],[11,"from","","",79,[[["typeparen"]],["type"]]],[11,"from","","",79,[[["typepath"]],["type"]]],[11,"from","","",79,[[["typeptr"]],["type"]]],[11,"from","","",79,[[["typereference"]],["type"]]],[11,"from","","",79,[[["typeslice"]],["type"]]],[11,"from","","",79,[[["typetraitobject"]],["type"]]],[11,"from","","",79,[[["typetuple"]],["type"]]],[11,"from","","",58,[[["t"]],["self"]]],[11,"from","","",59,[[["t"]],["self"]]],[11,"from","","",204,[[["lexerror"]],["self"]]],[11,"next_back","syn::punctuated","",238,[[["self"]],["option"]]],[11,"next_back","","",239,[[["self"]],["option"]]],[11,"next_back","","",240,[[["self"]],["option"]]],[11,"next_back","","",241,[[["self"]],["option"]]],[11,"next_back","","",242,[[["self"]],["option"]]],[11,"next_back","","",243,[[["self"]],["option"]]],[11,"len","","",238,[[["self"]],["usize"]]],[11,"len","","",239,[[["self"]],["usize"]]],[11,"len","","",240,[[["self"]],["usize"]]],[11,"len","","",241,[[["self"]],["usize"]]],[11,"len","","",242,[[["self"]],["usize"]]],[11,"len","","",243,[[["self"]],["usize"]]],[11,"extend","","",196,[[["self"],["intoiterator"]]]],[11,"extend","","",196,[[["intoiterator"],["self"]]]],[11,"extend","syn","",204,[[["self"],["intoiterator"]]]],[11,"into_iter","","",64,[[]]],[11,"into_iter","syn::punctuated","",196,[[]]],[11,"into_iter","syn","",204,[[]]],[11,"next","syn::punctuated","",238,[[["self"]],["option"]]],[11,"size_hint","","",238,[[["self"]]]],[11,"next","","",239,[[["self"]],["option"]]],[11,"size_hint","","",239,[[["self"]]]],[11,"next","","",240,[[["self"]],["option"]]],[11,"size_hint","","",240,[[["self"]]]],[11,"next","","",241,[[["self"]],["option"]]],[11,"size_hint","","",241,[[["self"]]]],[11,"next","","",242,[[["self"]],["option"]]],[11,"size_hint","","",242,[[["self"]]]],[11,"next","","",243,[[["self"]],["option"]]],[11,"size_hint","","",243,[[["self"]]]],[11,"clone","syn::token","",82,[[["self"]],["underscore"]]],[11,"clone","","",83,[[["self"]],["abstract"]]],[11,"clone","","",84,[[["self"]],["as"]]],[11,"clone","","",85,[[["self"]],["async"]]],[11,"clone","","",86,[[["self"]],["auto"]]],[11,"clone","","",87,[[["self"]],["await"]]],[11,"clone","","",88,[[["self"]],["become"]]],[11,"clone","","",89,[[["self"]],["box"]]],[11,"clone","","",90,[[["self"]],["break"]]],[11,"clone","","",91,[[["self"]],["const"]]],[11,"clone","","",92,[[["self"]],["continue"]]],[11,"clone","","",93,[[["self"]],["crate"]]],[11,"clone","","",94,[[["self"]],["default"]]],[11,"clone","","",95,[[["self"]],["do"]]],[11,"clone","","",96,[[["self"]],["dyn"]]],[11,"clone","","",97,[[["self"]],["else"]]],[11,"clone","","",98,[[["self"]],["enum"]]],[11,"clone","","",99,[[["self"]],["extern"]]],[11,"clone","","",100,[[["self"]],["final"]]],[11,"clone","","",101,[[["self"]],["fn"]]],[11,"clone","","",102,[[["self"]],["for"]]],[11,"clone","","",103,[[["self"]],["if"]]],[11,"clone","","",104,[[["self"]],["impl"]]],[11,"clone","","",105,[[["self"]],["in"]]],[11,"clone","","",106,[[["self"]],["let"]]],[11,"clone","","",107,[[["self"]],["loop"]]],[11,"clone","","",108,[[["self"]],["macro"]]],[11,"clone","","",109,[[["self"]],["match"]]],[11,"clone","","",110,[[["self"]],["mod"]]],[11,"clone","","",111,[[["self"]],["move"]]],[11,"clone","","",112,[[["self"]],["mut"]]],[11,"clone","","",113,[[["self"]],["override"]]],[11,"clone","","",114,[[["self"]],["priv"]]],[11,"clone","","",115,[[["self"]],["pub"]]],[11,"clone","","",116,[[["self"]],["ref"]]],[11,"clone","","",117,[[["self"]],["return"]]],[11,"clone","","",118,[[["self"]],["selftype"]]],[11,"clone","","",119,[[["self"]],["selfvalue"]]],[11,"clone","","",120,[[["self"]],["static"]]],[11,"clone","","",121,[[["self"]],["struct"]]],[11,"clone","","",122,[[["self"]],["super"]]],[11,"clone","","",123,[[["self"]],["trait"]]],[11,"clone","","",124,[[["self"]],["try"]]],[11,"clone","","",125,[[["self"]],["type"]]],[11,"clone","","",126,[[["self"]],["typeof"]]],[11,"clone","","",127,[[["self"]],["union"]]],[11,"clone","","",128,[[["self"]],["unsafe"]]],[11,"clone","","",129,[[["self"]],["unsized"]]],[11,"clone","","",130,[[["self"]],["use"]]],[11,"clone","","",131,[[["self"]],["virtual"]]],[11,"clone","","",132,[[["self"]],["where"]]],[11,"clone","","",133,[[["self"]],["while"]]],[11,"clone","","",134,[[["self"]],["yield"]]],[11,"clone","","",135,[[["self"]],["add"]]],[11,"clone","","",136,[[["self"]],["addeq"]]],[11,"clone","","",137,[[["self"]],["and"]]],[11,"clone","","",138,[[["self"]],["andand"]]],[11,"clone","","",139,[[["self"]],["andeq"]]],[11,"clone","","",140,[[["self"]],["at"]]],[11,"clone","","",141,[[["self"]],["bang"]]],[11,"clone","","",142,[[["self"]],["caret"]]],[11,"clone","","",143,[[["self"]],["careteq"]]],[11,"clone","","",144,[[["self"]],["colon"]]],[11,"clone","","",145,[[["self"]],["colon2"]]],[11,"clone","","",146,[[["self"]],["comma"]]],[11,"clone","","",147,[[["self"]],["div"]]],[11,"clone","","",148,[[["self"]],["diveq"]]],[11,"clone","","",149,[[["self"]],["dollar"]]],[11,"clone","","",150,[[["self"]],["dot"]]],[11,"clone","","",151,[[["self"]],["dot2"]]],[11,"clone","","",152,[[["self"]],["dot3"]]],[11,"clone","","",153,[[["self"]],["dotdoteq"]]],[11,"clone","","",154,[[["self"]],["eq"]]],[11,"clone","","",155,[[["self"]],["eqeq"]]],[11,"clone","","",156,[[["self"]],["ge"]]],[11,"clone","","",157,[[["self"]],["gt"]]],[11,"clone","","",158,[[["self"]],["le"]]],[11,"clone","","",159,[[["self"]],["lt"]]],[11,"clone","","",160,[[["self"]],["muleq"]]],[11,"clone","","",161,[[["self"]],["ne"]]],[11,"clone","","",162,[[["self"]],["or"]]],[11,"clone","","",163,[[["self"]],["oreq"]]],[11,"clone","","",164,[[["self"]],["oror"]]],[11,"clone","","",165,[[["self"]],["pound"]]],[11,"clone","","",166,[[["self"]],["question"]]],[11,"clone","","",167,[[["self"]],["rarrow"]]],[11,"clone","","",168,[[["self"]],["larrow"]]],[11,"clone","","",169,[[["self"]],["rem"]]],[11,"clone","","",170,[[["self"]],["remeq"]]],[11,"clone","","",171,[[["self"]],["fatarrow"]]],[11,"clone","","",172,[[["self"]],["semi"]]],[11,"clone","","",173,[[["self"]],["shl"]]],[11,"clone","","",174,[[["self"]],["shleq"]]],[11,"clone","","",175,[[["self"]],["shr"]]],[11,"clone","","",176,[[["self"]],["shreq"]]],[11,"clone","","",177,[[["self"]],["star"]]],[11,"clone","","",178,[[["self"]],["sub"]]],[11,"clone","","",179,[[["self"]],["subeq"]]],[11,"clone","","",180,[[["self"]],["tilde"]]],[11,"clone","","",181,[[["self"]],["brace"]]],[11,"clone","","",182,[[["self"]],["bracket"]]],[11,"clone","","",183,[[["self"]],["paren"]]],[11,"clone","","",184,[[["self"]],["group"]]],[11,"clone","syn","",0,[[["self"]],["attribute"]]],[11,"clone","","",61,[[["self"]],["attrstyle"]]],[11,"clone","","",62,[[["self"]],["meta"]]],[11,"clone","","",1,[[["self"]],["metalist"]]],[11,"clone","","",2,[[["self"]],["metanamevalue"]]],[11,"clone","","",63,[[["self"]],["nestedmeta"]]],[11,"clone","","",6,[[["self"]],["variant"]]],[11,"clone","","",64,[[["self"]],["fields"]]],[11,"clone","","",4,[[["self"]],["fieldsnamed"]]],[11,"clone","","",5,[[["self"]],["fieldsunnamed"]]],[11,"clone","","",3,[[["self"]],["field"]]],[11,"clone","","",65,[[["self"]],["visibility"]]],[11,"clone","","",8,[[["self"]],["vispublic"]]],[11,"clone","","",7,[[["self"]],["viscrate"]]],[11,"clone","","",9,[[["self"]],["visrestricted"]]],[11,"clone","","",66,[[["self"]],["expr"]]],[11,"clone","","",206,[[["self"]],["exprarray"]]],[11,"clone","","",207,[[["self"]],["exprassign"]]],[11,"clone","","",208,[[["self"]],["exprassignop"]]],[11,"clone","","",209,[[["self"]],["exprasync"]]],[11,"clone","","",210,[[["self"]],["exprawait"]]],[11,"clone","","",10,[[["self"]],["exprbinary"]]],[11,"clone","","",211,[[["self"]],["exprblock"]]],[11,"clone","","",212,[[["self"]],["exprbox"]]],[11,"clone","","",213,[[["self"]],["exprbreak"]]],[11,"clone","","",11,[[["self"]],["exprcall"]]],[11,"clone","","",12,[[["self"]],["exprcast"]]],[11,"clone","","",214,[[["self"]],["exprclosure"]]],[11,"clone","","",215,[[["self"]],["exprcontinue"]]],[11,"clone","","",13,[[["self"]],["exprfield"]]],[11,"clone","","",216,[[["self"]],["exprforloop"]]],[11,"clone","","",217,[[["self"]],["exprgroup"]]],[11,"clone","","",218,[[["self"]],["exprif"]]],[11,"clone","","",14,[[["self"]],["exprindex"]]],[11,"clone","","",219,[[["self"]],["exprlet"]]],[11,"clone","","",15,[[["self"]],["exprlit"]]],[11,"clone","","",220,[[["self"]],["exprloop"]]],[11,"clone","","",221,[[["self"]],["exprmacro"]]],[11,"clone","","",222,[[["self"]],["exprmatch"]]],[11,"clone","","",223,[[["self"]],["exprmethodcall"]]],[11,"clone","","",16,[[["self"]],["exprparen"]]],[11,"clone","","",17,[[["self"]],["exprpath"]]],[11,"clone","","",224,[[["self"]],["exprrange"]]],[11,"clone","","",225,[[["self"]],["exprreference"]]],[11,"clone","","",226,[[["self"]],["exprrepeat"]]],[11,"clone","","",227,[[["self"]],["exprreturn"]]],[11,"clone","","",228,[[["self"]],["exprstruct"]]],[11,"clone","","",229,[[["self"]],["exprtry"]]],[11,"clone","","",230,[[["self"]],["exprtryblock"]]],[11,"clone","","",231,[[["self"]],["exprtuple"]]],[11,"clone","","",232,[[["self"]],["exprtype"]]],[11,"clone","","",18,[[["self"]],["exprunary"]]],[11,"clone","","",233,[[["self"]],["exprunsafe"]]],[11,"clone","","",234,[[["self"]],["exprwhile"]]],[11,"clone","","",235,[[["self"]],["expryield"]]],[11,"clone","","",67,[[["self"]],["member"]]],[11,"clone","","",19,[[["self"]],["index"]]],[11,"clone","","",22,[[["self"]],["generics"]]],[11,"clone","","",68,[[["self"]],["genericparam"]]],[11,"clone","","",28,[[["self"]],["typeparam"]]],[11,"clone","","",23,[[["self"]],["lifetimedef"]]],[11,"clone","","",21,[[["self"]],["constparam"]]],[11,"clone","","",236,[[["self"]],["implgenerics"]]],[11,"clone","","",185,[[["self"]],["typegenerics"]]],[11,"clone","","",237,[[["self"]],["turbofish"]]],[11,"clone","","",20,[[["self"]],["boundlifetimes"]]],[11,"clone","","",70,[[["self"]],["typeparambound"]]],[11,"clone","","",27,[[["self"]],["traitbound"]]],[11,"clone","","",69,[[["self"]],["traitboundmodifier"]]],[11,"clone","","",29,[[["self"]],["whereclause"]]],[11,"clone","","",71,[[["self"]],["wherepredicate"]]],[11,"clone","","",26,[[["self"]],["predicatetype"]]],[11,"clone","","",25,[[["self"]],["predicatelifetime"]]],[11,"clone","","",24,[[["self"]],["predicateeq"]]],[11,"clone","","",30,[[["self"]],["lifetime"]]],[11,"clone","","",72,[[["self"]],["lit"]]],[11,"clone","","",186,[[["self"]],["litstr"]]],[11,"clone","","",187,[[["self"]],["litbytestr"]]],[11,"clone","","",188,[[["self"]],["litbyte"]]],[11,"clone","","",189,[[["self"]],["litchar"]]],[11,"clone","","",190,[[["self"]],["litint"]]],[11,"clone","","",191,[[["self"]],["litfloat"]]],[11,"clone","","",31,[[["self"]],["litbool"]]],[11,"clone","","",73,[[["self"]],["strstyle"]]],[11,"clone","","",32,[[["self"]],["macro"]]],[11,"clone","","",74,[[["self"]],["macrodelimiter"]]],[11,"clone","","",36,[[["self"]],["deriveinput"]]],[11,"clone","","",75,[[["self"]],["data"]]],[11,"clone","","",34,[[["self"]],["datastruct"]]],[11,"clone","","",33,[[["self"]],["dataenum"]]],[11,"clone","","",35,[[["self"]],["dataunion"]]],[11,"clone","","",76,[[["self"]],["binop"]]],[11,"clone","","",77,[[["self"]],["unop"]]],[11,"clone","","",79,[[["self"]],["type"]]],[11,"clone","","",39,[[["self"]],["typearray"]]],[11,"clone","","",40,[[["self"]],["typebarefn"]]],[11,"clone","","",41,[[["self"]],["typegroup"]]],[11,"clone","","",42,[[["self"]],["typeimpltrait"]]],[11,"clone","","",43,[[["self"]],["typeinfer"]]],[11,"clone","","",44,[[["self"]],["typemacro"]]],[11,"clone","","",45,[[["self"]],["typenever"]]],[11,"clone","","",46,[[["self"]],["typeparen"]]],[11,"clone","","",47,[[["self"]],["typepath"]]],[11,"clone","","",48,[[["self"]],["typeptr"]]],[11,"clone","","",49,[[["self"]],["typereference"]]],[11,"clone","","",50,[[["self"]],["typeslice"]]],[11,"clone","","",51,[[["self"]],["typetraitobject"]]],[11,"clone","","",52,[[["self"]],["typetuple"]]],[11,"clone","","",37,[[["self"]],["abi"]]],[11,"clone","","",38,[[["self"]],["barefnarg"]]],[11,"clone","","",53,[[["self"]],["variadic"]]],[11,"clone","","",78,[[["self"]],["returntype"]]],[11,"clone","","",58,[[["self"]],["path"]]],[11,"clone","","",59,[[["self"]],["pathsegment"]]],[11,"clone","","",81,[[["self"]],["patharguments"]]],[11,"clone","","",80,[[["self"]],["genericargument"]]],[11,"clone","","",54,[[["self"]],["anglebracketedgenericarguments"]]],[11,"clone","","",55,[[["self"]],["binding"]]],[11,"clone","","",56,[[["self"]],["constraint"]]],[11,"clone","","",57,[[["self"]],["parenthesizedgenericarguments"]]],[11,"clone","","",60,[[["self"]],["qself"]]],[11,"clone","syn::buffer","",193,[[["self"]],["cursor"]]],[11,"clone","syn::punctuated","",196,[[["self"]],["punctuated"]]],[11,"clone","","",238,[[["self"]],["self"]]],[11,"clone","","",240,[[["self"]],["intopairs"]]],[11,"clone","","",241,[[["self"]],["intoiter"]]],[11,"clone","","",242,[[["self"]],["self"]]],[11,"clone","","",195,[[["self"]],["pair"]]],[11,"clone","syn::parse","",202,[[["self"]],["stepcursor"]]],[11,"clone","syn","",204,[[["self"]],["error"]]],[11,"default","syn::token","",82,[[],["self"]]],[11,"default","","",83,[[],["self"]]],[11,"default","","",84,[[],["self"]]],[11,"default","","",85,[[],["self"]]],[11,"default","","",86,[[],["self"]]],[11,"default","","",87,[[],["self"]]],[11,"default","","",88,[[],["self"]]],[11,"default","","",89,[[],["self"]]],[11,"default","","",90,[[],["self"]]],[11,"default","","",91,[[],["self"]]],[11,"default","","",92,[[],["self"]]],[11,"default","","",93,[[],["self"]]],[11,"default","","",94,[[],["self"]]],[11,"default","","",95,[[],["self"]]],[11,"default","","",96,[[],["self"]]],[11,"default","","",97,[[],["self"]]],[11,"default","","",98,[[],["self"]]],[11,"default","","",99,[[],["self"]]],[11,"default","","",100,[[],["self"]]],[11,"default","","",101,[[],["self"]]],[11,"default","","",102,[[],["self"]]],[11,"default","","",103,[[],["self"]]],[11,"default","","",104,[[],["self"]]],[11,"default","","",105,[[],["self"]]],[11,"default","","",106,[[],["self"]]],[11,"default","","",107,[[],["self"]]],[11,"default","","",108,[[],["self"]]],[11,"default","","",109,[[],["self"]]],[11,"default","","",110,[[],["self"]]],[11,"default","","",111,[[],["self"]]],[11,"default","","",112,[[],["self"]]],[11,"default","","",113,[[],["self"]]],[11,"default","","",114,[[],["self"]]],[11,"default","","",115,[[],["self"]]],[11,"default","","",116,[[],["self"]]],[11,"default","","",117,[[],["self"]]],[11,"default","","",118,[[],["self"]]],[11,"default","","",119,[[],["self"]]],[11,"default","","",120,[[],["self"]]],[11,"default","","",121,[[],["self"]]],[11,"default","","",122,[[],["self"]]],[11,"default","","",123,[[],["self"]]],[11,"default","","",124,[[],["self"]]],[11,"default","","",125,[[],["self"]]],[11,"default","","",126,[[],["self"]]],[11,"default","","",127,[[],["self"]]],[11,"default","","",128,[[],["self"]]],[11,"default","","",129,[[],["self"]]],[11,"default","","",130,[[],["self"]]],[11,"default","","",131,[[],["self"]]],[11,"default","","",132,[[],["self"]]],[11,"default","","",133,[[],["self"]]],[11,"default","","",134,[[],["self"]]],[11,"default","","",135,[[],["self"]]],[11,"default","","",136,[[],["self"]]],[11,"default","","",137,[[],["self"]]],[11,"default","","",138,[[],["self"]]],[11,"default","","",139,[[],["self"]]],[11,"default","","",140,[[],["self"]]],[11,"default","","",141,[[],["self"]]],[11,"default","","",142,[[],["self"]]],[11,"default","","",143,[[],["self"]]],[11,"default","","",144,[[],["self"]]],[11,"default","","",145,[[],["self"]]],[11,"default","","",146,[[],["self"]]],[11,"default","","",147,[[],["self"]]],[11,"default","","",148,[[],["self"]]],[11,"default","","",149,[[],["self"]]],[11,"default","","",150,[[],["self"]]],[11,"default","","",151,[[],["self"]]],[11,"default","","",152,[[],["self"]]],[11,"default","","",153,[[],["self"]]],[11,"default","","",154,[[],["self"]]],[11,"default","","",155,[[],["self"]]],[11,"default","","",156,[[],["self"]]],[11,"default","","",157,[[],["self"]]],[11,"default","","",158,[[],["self"]]],[11,"default","","",159,[[],["self"]]],[11,"default","","",160,[[],["self"]]],[11,"default","","",161,[[],["self"]]],[11,"default","","",162,[[],["self"]]],[11,"default","","",163,[[],["self"]]],[11,"default","","",164,[[],["self"]]],[11,"default","","",165,[[],["self"]]],[11,"default","","",166,[[],["self"]]],[11,"default","","",167,[[],["self"]]],[11,"default","","",168,[[],["self"]]],[11,"default","","",169,[[],["self"]]],[11,"default","","",170,[[],["self"]]],[11,"default","","",171,[[],["self"]]],[11,"default","","",172,[[],["self"]]],[11,"default","","",173,[[],["self"]]],[11,"default","","",174,[[],["self"]]],[11,"default","","",175,[[],["self"]]],[11,"default","","",176,[[],["self"]]],[11,"default","","",177,[[],["self"]]],[11,"default","","",178,[[],["self"]]],[11,"default","","",179,[[],["self"]]],[11,"default","","",180,[[],["self"]]],[11,"default","","",181,[[],["self"]]],[11,"default","","",182,[[],["self"]]],[11,"default","","",183,[[],["self"]]],[11,"default","","",184,[[],["self"]]],[11,"default","syn","",22,[[],["generics"]]],[11,"default","","",20,[[],["boundlifetimes"]]],[11,"default","","",81,[[],["self"]]],[11,"default","syn::punctuated","",196,[[],["self"]]],[11,"cmp","syn","",30,[[["lifetime"],["self"]],["ordering"]]],[11,"eq","syn::token","",82,[[["self"],["underscore"]],["bool"]]],[11,"eq","","",83,[[["abstract"],["self"]],["bool"]]],[11,"eq","","",84,[[["as"],["self"]],["bool"]]],[11,"eq","","",85,[[["self"],["async"]],["bool"]]],[11,"eq","","",86,[[["auto"],["self"]],["bool"]]],[11,"eq","","",87,[[["self"],["await"]],["bool"]]],[11,"eq","","",88,[[["become"],["self"]],["bool"]]],[11,"eq","","",89,[[["self"],["box"]],["bool"]]],[11,"eq","","",90,[[["self"],["break"]],["bool"]]],[11,"eq","","",91,[[["const"],["self"]],["bool"]]],[11,"eq","","",92,[[["continue"],["self"]],["bool"]]],[11,"eq","","",93,[[["self"],["crate"]],["bool"]]],[11,"eq","","",94,[[["self"],["default"]],["bool"]]],[11,"eq","","",95,[[["self"],["do"]],["bool"]]],[11,"eq","","",96,[[["dyn"],["self"]],["bool"]]],[11,"eq","","",97,[[["self"],["else"]],["bool"]]],[11,"eq","","",98,[[["self"],["enum"]],["bool"]]],[11,"eq","","",99,[[["extern"],["self"]],["bool"]]],[11,"eq","","",100,[[["self"],["final"]],["bool"]]],[11,"eq","","",101,[[["fn"],["self"]],["bool"]]],[11,"eq","","",102,[[["for"],["self"]],["bool"]]],[11,"eq","","",103,[[["if"],["self"]],["bool"]]],[11,"eq","","",104,[[["impl"],["self"]],["bool"]]],[11,"eq","","",105,[[["self"],["in"]],["bool"]]],[11,"eq","","",106,[[["self"],["let"]],["bool"]]],[11,"eq","","",107,[[["self"],["loop"]],["bool"]]],[11,"eq","","",108,[[["self"],["macro"]],["bool"]]],[11,"eq","","",109,[[["match"],["self"]],["bool"]]],[11,"eq","","",110,[[["self"],["mod"]],["bool"]]],[11,"eq","","",111,[[["move"],["self"]],["bool"]]],[11,"eq","","",112,[[["self"],["mut"]],["bool"]]],[11,"eq","","",113,[[["self"],["override"]],["bool"]]],[11,"eq","","",114,[[["priv"],["self"]],["bool"]]],[11,"eq","","",115,[[["self"],["pub"]],["bool"]]],[11,"eq","","",116,[[["ref"],["self"]],["bool"]]],[11,"eq","","",117,[[["return"],["self"]],["bool"]]],[11,"eq","","",118,[[["self"],["selftype"]],["bool"]]],[11,"eq","","",119,[[["selfvalue"],["self"]],["bool"]]],[11,"eq","","",120,[[["static"],["self"]],["bool"]]],[11,"eq","","",121,[[["self"],["struct"]],["bool"]]],[11,"eq","","",122,[[["self"],["super"]],["bool"]]],[11,"eq","","",123,[[["trait"],["self"]],["bool"]]],[11,"eq","","",124,[[["self"],["try"]],["bool"]]],[11,"eq","","",125,[[["type"],["self"]],["bool"]]],[11,"eq","","",126,[[["typeof"],["self"]],["bool"]]],[11,"eq","","",127,[[["union"],["self"]],["bool"]]],[11,"eq","","",128,[[["self"],["unsafe"]],["bool"]]],[11,"eq","","",129,[[["self"],["unsized"]],["bool"]]],[11,"eq","","",130,[[["self"],["use"]],["bool"]]],[11,"eq","","",131,[[["self"],["virtual"]],["bool"]]],[11,"eq","","",132,[[["where"],["self"]],["bool"]]],[11,"eq","","",133,[[["self"],["while"]],["bool"]]],[11,"eq","","",134,[[["yield"],["self"]],["bool"]]],[11,"eq","","",135,[[["self"],["add"]],["bool"]]],[11,"eq","","",136,[[["self"],["addeq"]],["bool"]]],[11,"eq","","",137,[[["and"],["self"]],["bool"]]],[11,"eq","","",138,[[["self"],["andand"]],["bool"]]],[11,"eq","","",139,[[["andeq"],["self"]],["bool"]]],[11,"eq","","",140,[[["at"],["self"]],["bool"]]],[11,"eq","","",141,[[["bang"],["self"]],["bool"]]],[11,"eq","","",142,[[["caret"],["self"]],["bool"]]],[11,"eq","","",143,[[["self"],["careteq"]],["bool"]]],[11,"eq","","",144,[[["colon"],["self"]],["bool"]]],[11,"eq","","",145,[[["colon2"],["self"]],["bool"]]],[11,"eq","","",146,[[["comma"],["self"]],["bool"]]],[11,"eq","","",147,[[["self"],["div"]],["bool"]]],[11,"eq","","",148,[[["diveq"],["self"]],["bool"]]],[11,"eq","","",149,[[["dollar"],["self"]],["bool"]]],[11,"eq","","",150,[[["self"],["dot"]],["bool"]]],[11,"eq","","",151,[[["dot2"],["self"]],["bool"]]],[11,"eq","","",152,[[["dot3"],["self"]],["bool"]]],[11,"eq","","",153,[[["self"],["dotdoteq"]],["bool"]]],[11,"eq","","",154,[[["self"],["eq"]],["bool"]]],[11,"eq","","",155,[[["eqeq"],["self"]],["bool"]]],[11,"eq","","",156,[[["ge"],["self"]],["bool"]]],[11,"eq","","",157,[[["gt"],["self"]],["bool"]]],[11,"eq","","",158,[[["le"],["self"]],["bool"]]],[11,"eq","","",159,[[["self"],["lt"]],["bool"]]],[11,"eq","","",160,[[["self"],["muleq"]],["bool"]]],[11,"eq","","",161,[[["ne"],["self"]],["bool"]]],[11,"eq","","",162,[[["self"],["or"]],["bool"]]],[11,"eq","","",163,[[["oreq"],["self"]],["bool"]]],[11,"eq","","",164,[[["oror"],["self"]],["bool"]]],[11,"eq","","",165,[[["self"],["pound"]],["bool"]]],[11,"eq","","",166,[[["self"],["question"]],["bool"]]],[11,"eq","","",167,[[["rarrow"],["self"]],["bool"]]],[11,"eq","","",168,[[["larrow"],["self"]],["bool"]]],[11,"eq","","",169,[[["self"],["rem"]],["bool"]]],[11,"eq","","",170,[[["self"],["remeq"]],["bool"]]],[11,"eq","","",171,[[["fatarrow"],["self"]],["bool"]]],[11,"eq","","",172,[[["semi"],["self"]],["bool"]]],[11,"eq","","",173,[[["self"],["shl"]],["bool"]]],[11,"eq","","",174,[[["shleq"],["self"]],["bool"]]],[11,"eq","","",175,[[["shr"],["self"]],["bool"]]],[11,"eq","","",176,[[["self"],["shreq"]],["bool"]]],[11,"eq","","",177,[[["self"],["star"]],["bool"]]],[11,"eq","","",178,[[["self"],["sub"]],["bool"]]],[11,"eq","","",179,[[["self"],["subeq"]],["bool"]]],[11,"eq","","",180,[[["tilde"],["self"]],["bool"]]],[11,"eq","","",181,[[["self"],["brace"]],["bool"]]],[11,"eq","","",182,[[["bracket"],["self"]],["bool"]]],[11,"eq","","",183,[[["paren"],["self"]],["bool"]]],[11,"eq","","",184,[[["self"],["group"]],["bool"]]],[11,"eq","syn","",0,[[["self"]],["bool"]]],[11,"eq","","",61,[[["attrstyle"],["self"]],["bool"]]],[11,"ne","","",61,[[["attrstyle"],["self"]],["bool"]]],[11,"eq","","",62,[[["meta"],["self"]],["bool"]]],[11,"ne","","",62,[[["meta"],["self"]],["bool"]]],[11,"eq","","",1,[[["self"],["metalist"]],["bool"]]],[11,"ne","","",1,[[["self"],["metalist"]],["bool"]]],[11,"eq","","",2,[[["self"],["metanamevalue"]],["bool"]]],[11,"ne","","",2,[[["self"],["metanamevalue"]],["bool"]]],[11,"eq","","",63,[[["self"],["nestedmeta"]],["bool"]]],[11,"ne","","",63,[[["self"],["nestedmeta"]],["bool"]]],[11,"eq","","",6,[[["variant"],["self"]],["bool"]]],[11,"ne","","",6,[[["variant"],["self"]],["bool"]]],[11,"eq","","",64,[[["self"],["fields"]],["bool"]]],[11,"ne","","",64,[[["self"],["fields"]],["bool"]]],[11,"eq","","",4,[[["fieldsnamed"],["self"]],["bool"]]],[11,"ne","","",4,[[["fieldsnamed"],["self"]],["bool"]]],[11,"eq","","",5,[[["fieldsunnamed"],["self"]],["bool"]]],[11,"ne","","",5,[[["fieldsunnamed"],["self"]],["bool"]]],[11,"eq","","",3,[[["field"],["self"]],["bool"]]],[11,"ne","","",3,[[["field"],["self"]],["bool"]]],[11,"eq","","",65,[[["visibility"],["self"]],["bool"]]],[11,"ne","","",65,[[["visibility"],["self"]],["bool"]]],[11,"eq","","",8,[[["vispublic"],["self"]],["bool"]]],[11,"ne","","",8,[[["vispublic"],["self"]],["bool"]]],[11,"eq","","",7,[[["viscrate"],["self"]],["bool"]]],[11,"ne","","",7,[[["viscrate"],["self"]],["bool"]]],[11,"eq","","",9,[[["visrestricted"],["self"]],["bool"]]],[11,"ne","","",9,[[["visrestricted"],["self"]],["bool"]]],[11,"eq","","",206,[[["exprarray"],["self"]],["bool"]]],[11,"ne","","",206,[[["exprarray"],["self"]],["bool"]]],[11,"eq","","",207,[[["exprassign"],["self"]],["bool"]]],[11,"ne","","",207,[[["exprassign"],["self"]],["bool"]]],[11,"eq","","",208,[[["self"],["exprassignop"]],["bool"]]],[11,"ne","","",208,[[["self"],["exprassignop"]],["bool"]]],[11,"eq","","",209,[[["self"],["exprasync"]],["bool"]]],[11,"ne","","",209,[[["self"],["exprasync"]],["bool"]]],[11,"eq","","",210,[[["self"],["exprawait"]],["bool"]]],[11,"ne","","",210,[[["self"],["exprawait"]],["bool"]]],[11,"eq","","",10,[[["self"],["exprbinary"]],["bool"]]],[11,"ne","","",10,[[["self"],["exprbinary"]],["bool"]]],[11,"eq","","",211,[[["exprblock"],["self"]],["bool"]]],[11,"ne","","",211,[[["exprblock"],["self"]],["bool"]]],[11,"eq","","",212,[[["self"],["exprbox"]],["bool"]]],[11,"ne","","",212,[[["self"],["exprbox"]],["bool"]]],[11,"eq","","",213,[[["self"],["exprbreak"]],["bool"]]],[11,"ne","","",213,[[["self"],["exprbreak"]],["bool"]]],[11,"eq","","",11,[[["exprcall"],["self"]],["bool"]]],[11,"ne","","",11,[[["exprcall"],["self"]],["bool"]]],[11,"eq","","",12,[[["self"],["exprcast"]],["bool"]]],[11,"ne","","",12,[[["self"],["exprcast"]],["bool"]]],[11,"eq","","",214,[[["self"],["exprclosure"]],["bool"]]],[11,"ne","","",214,[[["self"],["exprclosure"]],["bool"]]],[11,"eq","","",215,[[["self"],["exprcontinue"]],["bool"]]],[11,"ne","","",215,[[["self"],["exprcontinue"]],["bool"]]],[11,"eq","","",13,[[["exprfield"],["self"]],["bool"]]],[11,"ne","","",13,[[["exprfield"],["self"]],["bool"]]],[11,"eq","","",216,[[["exprforloop"],["self"]],["bool"]]],[11,"ne","","",216,[[["exprforloop"],["self"]],["bool"]]],[11,"eq","","",217,[[["self"],["exprgroup"]],["bool"]]],[11,"ne","","",217,[[["self"],["exprgroup"]],["bool"]]],[11,"eq","","",218,[[["exprif"],["self"]],["bool"]]],[11,"ne","","",218,[[["exprif"],["self"]],["bool"]]],[11,"eq","","",14,[[["exprindex"],["self"]],["bool"]]],[11,"ne","","",14,[[["exprindex"],["self"]],["bool"]]],[11,"eq","","",219,[[["exprlet"],["self"]],["bool"]]],[11,"ne","","",219,[[["exprlet"],["self"]],["bool"]]],[11,"eq","","",15,[[["self"],["exprlit"]],["bool"]]],[11,"ne","","",15,[[["self"],["exprlit"]],["bool"]]],[11,"eq","","",220,[[["exprloop"],["self"]],["bool"]]],[11,"ne","","",220,[[["exprloop"],["self"]],["bool"]]],[11,"eq","","",221,[[["exprmacro"],["self"]],["bool"]]],[11,"ne","","",221,[[["exprmacro"],["self"]],["bool"]]],[11,"eq","","",222,[[["self"],["exprmatch"]],["bool"]]],[11,"ne","","",222,[[["self"],["exprmatch"]],["bool"]]],[11,"eq","","",223,[[["exprmethodcall"],["self"]],["bool"]]],[11,"ne","","",223,[[["exprmethodcall"],["self"]],["bool"]]],[11,"eq","","",16,[[["self"],["exprparen"]],["bool"]]],[11,"ne","","",16,[[["self"],["exprparen"]],["bool"]]],[11,"eq","","",17,[[["exprpath"],["self"]],["bool"]]],[11,"ne","","",17,[[["exprpath"],["self"]],["bool"]]],[11,"eq","","",224,[[["self"],["exprrange"]],["bool"]]],[11,"ne","","",224,[[["self"],["exprrange"]],["bool"]]],[11,"eq","","",225,[[["exprreference"],["self"]],["bool"]]],[11,"ne","","",225,[[["exprreference"],["self"]],["bool"]]],[11,"eq","","",226,[[["exprrepeat"],["self"]],["bool"]]],[11,"ne","","",226,[[["exprrepeat"],["self"]],["bool"]]],[11,"eq","","",227,[[["exprreturn"],["self"]],["bool"]]],[11,"ne","","",227,[[["exprreturn"],["self"]],["bool"]]],[11,"eq","","",228,[[["self"],["exprstruct"]],["bool"]]],[11,"ne","","",228,[[["self"],["exprstruct"]],["bool"]]],[11,"eq","","",229,[[["self"],["exprtry"]],["bool"]]],[11,"ne","","",229,[[["self"],["exprtry"]],["bool"]]],[11,"eq","","",230,[[["self"],["exprtryblock"]],["bool"]]],[11,"ne","","",230,[[["self"],["exprtryblock"]],["bool"]]],[11,"eq","","",231,[[["self"],["exprtuple"]],["bool"]]],[11,"ne","","",231,[[["self"],["exprtuple"]],["bool"]]],[11,"eq","","",232,[[["exprtype"],["self"]],["bool"]]],[11,"ne","","",232,[[["exprtype"],["self"]],["bool"]]],[11,"eq","","",18,[[["self"],["exprunary"]],["bool"]]],[11,"ne","","",18,[[["self"],["exprunary"]],["bool"]]],[11,"eq","","",233,[[["exprunsafe"],["self"]],["bool"]]],[11,"ne","","",233,[[["exprunsafe"],["self"]],["bool"]]],[11,"eq","","",234,[[["self"],["exprwhile"]],["bool"]]],[11,"ne","","",234,[[["self"],["exprwhile"]],["bool"]]],[11,"eq","","",235,[[["expryield"],["self"]],["bool"]]],[11,"ne","","",235,[[["expryield"],["self"]],["bool"]]],[11,"eq","","",66,[[["self"]],["bool"]]],[11,"eq","","",67,[[["self"],["member"]],["bool"]]],[11,"ne","","",67,[[["self"],["member"]],["bool"]]],[11,"eq","","",19,[[["self"]],["bool"]]],[11,"eq","","",22,[[["self"],["generics"]],["bool"]]],[11,"ne","","",22,[[["self"],["generics"]],["bool"]]],[11,"eq","","",68,[[["self"],["genericparam"]],["bool"]]],[11,"ne","","",68,[[["self"],["genericparam"]],["bool"]]],[11,"eq","","",28,[[["typeparam"],["self"]],["bool"]]],[11,"ne","","",28,[[["typeparam"],["self"]],["bool"]]],[11,"eq","","",23,[[["lifetimedef"],["self"]],["bool"]]],[11,"ne","","",23,[[["lifetimedef"],["self"]],["bool"]]],[11,"eq","","",21,[[["self"],["constparam"]],["bool"]]],[11,"ne","","",21,[[["self"],["constparam"]],["bool"]]],[11,"eq","","",236,[[["implgenerics"],["self"]],["bool"]]],[11,"ne","","",236,[[["implgenerics"],["self"]],["bool"]]],[11,"eq","","",185,[[["self"],["typegenerics"]],["bool"]]],[11,"ne","","",185,[[["self"],["typegenerics"]],["bool"]]],[11,"eq","","",237,[[["turbofish"],["self"]],["bool"]]],[11,"ne","","",237,[[["turbofish"],["self"]],["bool"]]],[11,"eq","","",20,[[["boundlifetimes"],["self"]],["bool"]]],[11,"ne","","",20,[[["boundlifetimes"],["self"]],["bool"]]],[11,"eq","","",70,[[["self"],["typeparambound"]],["bool"]]],[11,"ne","","",70,[[["self"],["typeparambound"]],["bool"]]],[11,"eq","","",27,[[["traitbound"],["self"]],["bool"]]],[11,"ne","","",27,[[["traitbound"],["self"]],["bool"]]],[11,"eq","","",69,[[["self"],["traitboundmodifier"]],["bool"]]],[11,"ne","","",69,[[["self"],["traitboundmodifier"]],["bool"]]],[11,"eq","","",29,[[["whereclause"],["self"]],["bool"]]],[11,"ne","","",29,[[["whereclause"],["self"]],["bool"]]],[11,"eq","","",71,[[["self"],["wherepredicate"]],["bool"]]],[11,"ne","","",71,[[["self"],["wherepredicate"]],["bool"]]],[11,"eq","","",26,[[["self"],["predicatetype"]],["bool"]]],[11,"ne","","",26,[[["self"],["predicatetype"]],["bool"]]],[11,"eq","","",25,[[["self"],["predicatelifetime"]],["bool"]]],[11,"ne","","",25,[[["self"],["predicatelifetime"]],["bool"]]],[11,"eq","","",24,[[["predicateeq"],["self"]],["bool"]]],[11,"ne","","",24,[[["predicateeq"],["self"]],["bool"]]],[11,"eq","","",30,[[["lifetime"],["self"]],["bool"]]],[11,"eq","","",72,[[["self"]],["bool"]]],[11,"eq","","",186,[[["self"]],["bool"]]],[11,"eq","","",187,[[["self"]],["bool"]]],[11,"eq","","",188,[[["self"]],["bool"]]],[11,"eq","","",189,[[["self"]],["bool"]]],[11,"eq","","",190,[[["self"]],["bool"]]],[11,"eq","","",191,[[["self"]],["bool"]]],[11,"eq","","",31,[[["self"]],["bool"]]],[11,"eq","","",73,[[["strstyle"],["self"]],["bool"]]],[11,"ne","","",73,[[["strstyle"],["self"]],["bool"]]],[11,"eq","","",74,[[["self"],["macrodelimiter"]],["bool"]]],[11,"ne","","",74,[[["self"],["macrodelimiter"]],["bool"]]],[11,"eq","","",32,[[["self"]],["bool"]]],[11,"eq","","",36,[[["self"],["deriveinput"]],["bool"]]],[11,"ne","","",36,[[["self"],["deriveinput"]],["bool"]]],[11,"eq","","",75,[[["data"],["self"]],["bool"]]],[11,"ne","","",75,[[["data"],["self"]],["bool"]]],[11,"eq","","",34,[[["self"],["datastruct"]],["bool"]]],[11,"ne","","",34,[[["self"],["datastruct"]],["bool"]]],[11,"eq","","",33,[[["dataenum"],["self"]],["bool"]]],[11,"ne","","",33,[[["dataenum"],["self"]],["bool"]]],[11,"eq","","",35,[[["dataunion"],["self"]],["bool"]]],[11,"ne","","",35,[[["dataunion"],["self"]],["bool"]]],[11,"eq","","",76,[[["self"],["binop"]],["bool"]]],[11,"ne","","",76,[[["self"],["binop"]],["bool"]]],[11,"eq","","",77,[[["self"],["unop"]],["bool"]]],[11,"ne","","",77,[[["self"],["unop"]],["bool"]]],[11,"eq","","",39,[[["self"],["typearray"]],["bool"]]],[11,"ne","","",39,[[["self"],["typearray"]],["bool"]]],[11,"eq","","",40,[[["self"],["typebarefn"]],["bool"]]],[11,"ne","","",40,[[["self"],["typebarefn"]],["bool"]]],[11,"eq","","",41,[[["typegroup"],["self"]],["bool"]]],[11,"ne","","",41,[[["typegroup"],["self"]],["bool"]]],[11,"eq","","",42,[[["typeimpltrait"],["self"]],["bool"]]],[11,"ne","","",42,[[["typeimpltrait"],["self"]],["bool"]]],[11,"eq","","",43,[[["typeinfer"],["self"]],["bool"]]],[11,"ne","","",43,[[["typeinfer"],["self"]],["bool"]]],[11,"eq","","",44,[[["typemacro"],["self"]],["bool"]]],[11,"ne","","",44,[[["typemacro"],["self"]],["bool"]]],[11,"eq","","",45,[[["typenever"],["self"]],["bool"]]],[11,"ne","","",45,[[["typenever"],["self"]],["bool"]]],[11,"eq","","",46,[[["self"],["typeparen"]],["bool"]]],[11,"ne","","",46,[[["self"],["typeparen"]],["bool"]]],[11,"eq","","",47,[[["self"],["typepath"]],["bool"]]],[11,"ne","","",47,[[["self"],["typepath"]],["bool"]]],[11,"eq","","",48,[[["typeptr"],["self"]],["bool"]]],[11,"ne","","",48,[[["typeptr"],["self"]],["bool"]]],[11,"eq","","",49,[[["typereference"],["self"]],["bool"]]],[11,"ne","","",49,[[["typereference"],["self"]],["bool"]]],[11,"eq","","",50,[[["self"],["typeslice"]],["bool"]]],[11,"ne","","",50,[[["self"],["typeslice"]],["bool"]]],[11,"eq","","",51,[[["self"],["typetraitobject"]],["bool"]]],[11,"ne","","",51,[[["self"],["typetraitobject"]],["bool"]]],[11,"eq","","",52,[[["typetuple"],["self"]],["bool"]]],[11,"ne","","",52,[[["typetuple"],["self"]],["bool"]]],[11,"eq","","",79,[[["self"]],["bool"]]],[11,"eq","","",37,[[["self"],["abi"]],["bool"]]],[11,"ne","","",37,[[["self"],["abi"]],["bool"]]],[11,"eq","","",38,[[["barefnarg"],["self"]],["bool"]]],[11,"ne","","",38,[[["barefnarg"],["self"]],["bool"]]],[11,"eq","","",53,[[["self"],["variadic"]],["bool"]]],[11,"ne","","",53,[[["self"],["variadic"]],["bool"]]],[11,"eq","","",78,[[["self"],["returntype"]],["bool"]]],[11,"ne","","",78,[[["self"],["returntype"]],["bool"]]],[11,"eq","","",58,[[["self"],["path"]],["bool"]]],[11,"ne","","",58,[[["self"],["path"]],["bool"]]],[11,"eq","","",59,[[["self"],["pathsegment"]],["bool"]]],[11,"ne","","",59,[[["self"],["pathsegment"]],["bool"]]],[11,"eq","","",81,[[["patharguments"],["self"]],["bool"]]],[11,"ne","","",81,[[["patharguments"],["self"]],["bool"]]],[11,"eq","","",80,[[["self"],["genericargument"]],["bool"]]],[11,"ne","","",80,[[["self"],["genericargument"]],["bool"]]],[11,"eq","","",54,[[["anglebracketedgenericarguments"],["self"]],["bool"]]],[11,"ne","","",54,[[["anglebracketedgenericarguments"],["self"]],["bool"]]],[11,"eq","","",55,[[["binding"],["self"]],["bool"]]],[11,"ne","","",55,[[["binding"],["self"]],["bool"]]],[11,"eq","","",56,[[["constraint"],["self"]],["bool"]]],[11,"ne","","",56,[[["constraint"],["self"]],["bool"]]],[11,"eq","","",57,[[["parenthesizedgenericarguments"],["self"]],["bool"]]],[11,"ne","","",57,[[["parenthesizedgenericarguments"],["self"]],["bool"]]],[11,"eq","","",60,[[["self"],["qself"]],["bool"]]],[11,"ne","","",60,[[["self"],["qself"]],["bool"]]],[11,"eq","syn::buffer","",193,[[["cursor"],["self"]],["bool"]]],[11,"ne","","",193,[[["cursor"],["self"]],["bool"]]],[11,"eq","syn::punctuated","",196,[[["punctuated"],["self"]],["bool"]]],[11,"ne","","",196,[[["punctuated"],["self"]],["bool"]]],[11,"partial_cmp","syn","",30,[[["lifetime"],["self"]],[["ordering"],["option",["ordering"]]]]],[11,"deref","syn::token","",82,[[["self"]]]],[11,"deref","","",135,[[["self"]]]],[11,"deref","","",137,[[["self"]]]],[11,"deref","","",140,[[["self"]]]],[11,"deref","","",141,[[["self"]]]],[11,"deref","","",142,[[["self"]]]],[11,"deref","","",144,[[["self"]]]],[11,"deref","","",146,[[["self"]]]],[11,"deref","","",147,[[["self"]]]],[11,"deref","","",149,[[["self"]]]],[11,"deref","","",150,[[["self"]]]],[11,"deref","","",154,[[["self"]]]],[11,"deref","","",157,[[["self"]]]],[11,"deref","","",159,[[["self"]]]],[11,"deref","","",162,[[["self"]]]],[11,"deref","","",165,[[["self"]]]],[11,"deref","","",166,[[["self"]]]],[11,"deref","","",169,[[["self"]]]],[11,"deref","","",172,[[["self"]]]],[11,"deref","","",177,[[["self"]]]],[11,"deref","","",178,[[["self"]]]],[11,"deref","","",180,[[["self"]]]],[11,"deref","syn::parse","",202,[[["self"]]]],[11,"deref_mut","syn::token","",82,[[["self"]]]],[11,"deref_mut","","",135,[[["self"]]]],[11,"deref_mut","","",137,[[["self"]]]],[11,"deref_mut","","",140,[[["self"]]]],[11,"deref_mut","","",141,[[["self"]]]],[11,"deref_mut","","",142,[[["self"]]]],[11,"deref_mut","","",144,[[["self"]]]],[11,"deref_mut","","",146,[[["self"]]]],[11,"deref_mut","","",147,[[["self"]]]],[11,"deref_mut","","",149,[[["self"]]]],[11,"deref_mut","","",150,[[["self"]]]],[11,"deref_mut","","",154,[[["self"]]]],[11,"deref_mut","","",157,[[["self"]]]],[11,"deref_mut","","",159,[[["self"]]]],[11,"deref_mut","","",162,[[["self"]]]],[11,"deref_mut","","",165,[[["self"]]]],[11,"deref_mut","","",166,[[["self"]]]],[11,"deref_mut","","",169,[[["self"]]]],[11,"deref_mut","","",172,[[["self"]]]],[11,"deref_mut","","",177,[[["self"]]]],[11,"deref_mut","","",178,[[["self"]]]],[11,"deref_mut","","",180,[[["self"]]]],[11,"fmt","","",82,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",83,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",84,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",85,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",86,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",87,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",88,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",89,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",90,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",91,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",92,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",93,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",94,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",95,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",96,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",97,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",98,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",99,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",100,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",101,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",102,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",103,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",104,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",105,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",106,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",107,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",108,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",109,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",110,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",111,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",112,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",113,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",114,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",115,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",116,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",117,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",118,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",119,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",120,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",121,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",122,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",123,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",124,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",125,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",126,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",127,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",128,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",129,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",130,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",131,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",132,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",133,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",134,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",135,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",136,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",137,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",138,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",139,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",140,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",141,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",142,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",143,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",144,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",145,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",146,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",147,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",148,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",149,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",150,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",151,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",152,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",153,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",154,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",155,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",156,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",157,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",158,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",159,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",160,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",161,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",162,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",163,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",164,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",165,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",166,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",167,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",168,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",169,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",170,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",171,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",172,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",173,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",174,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",175,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",176,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",177,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",178,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",179,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",180,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",181,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",182,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",183,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",184,[[["formatter"],["self"]],["result"]]],[11,"fmt","syn","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",61,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",62,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",63,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",6,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",64,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",65,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",8,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",7,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",9,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",66,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",206,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",207,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",208,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",209,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",210,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",10,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",211,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",212,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",213,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",11,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",12,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",214,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",215,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",13,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",216,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",217,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",218,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",14,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",219,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",15,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",220,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",221,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",222,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",223,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",16,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",17,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",224,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",225,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",226,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",227,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",228,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",229,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",230,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",231,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",232,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",18,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",233,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",234,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",235,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",67,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",19,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",22,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",68,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",28,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",23,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",21,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",236,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",185,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",237,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",20,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",70,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",27,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",69,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",29,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",71,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",26,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",25,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",24,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",30,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",72,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",186,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",187,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",188,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",189,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",190,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",191,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",31,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",73,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",32,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",74,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",36,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",75,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",34,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",33,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",35,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",76,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",77,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",79,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",39,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",40,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",41,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",42,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",43,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",44,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",45,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",46,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",47,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",48,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",49,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",50,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",51,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",52,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",37,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",38,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",53,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",78,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",58,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",59,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",81,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",80,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",54,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",55,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",56,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",57,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",60,[[["formatter"],["self"]],["result"]]],[11,"fmt","syn::punctuated","",196,[[["formatter"],["self"]],["result"]]],[11,"fmt","syn::parse","",203,[[["formatter"],["self"]],["result"]]],[11,"fmt","syn","",204,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",30,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",190,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",191,[[["formatter"],["self"]],["result"]]],[11,"fmt","syn::parse","",203,[[["formatter"],["self"]],["result"]]],[11,"fmt","syn","",204,[[["formatter"],["self"]],["result"]]],[11,"index","syn::punctuated","",196,[[["self"],["usize"]]]],[11,"index_mut","","",196,[[["self"],["usize"]]]],[11,"hash","syn::token","",82,[[["self"],["h"]]]],[11,"hash","","",83,[[["self"],["h"]]]],[11,"hash","","",84,[[["self"],["h"]]]],[11,"hash","","",85,[[["self"],["h"]]]],[11,"hash","","",86,[[["self"],["h"]]]],[11,"hash","","",87,[[["self"],["h"]]]],[11,"hash","","",88,[[["self"],["h"]]]],[11,"hash","","",89,[[["self"],["h"]]]],[11,"hash","","",90,[[["self"],["h"]]]],[11,"hash","","",91,[[["self"],["h"]]]],[11,"hash","","",92,[[["self"],["h"]]]],[11,"hash","","",93,[[["self"],["h"]]]],[11,"hash","","",94,[[["self"],["h"]]]],[11,"hash","","",95,[[["self"],["h"]]]],[11,"hash","","",96,[[["self"],["h"]]]],[11,"hash","","",97,[[["self"],["h"]]]],[11,"hash","","",98,[[["self"],["h"]]]],[11,"hash","","",99,[[["self"],["h"]]]],[11,"hash","","",100,[[["self"],["h"]]]],[11,"hash","","",101,[[["self"],["h"]]]],[11,"hash","","",102,[[["self"],["h"]]]],[11,"hash","","",103,[[["self"],["h"]]]],[11,"hash","","",104,[[["self"],["h"]]]],[11,"hash","","",105,[[["self"],["h"]]]],[11,"hash","","",106,[[["self"],["h"]]]],[11,"hash","","",107,[[["self"],["h"]]]],[11,"hash","","",108,[[["self"],["h"]]]],[11,"hash","","",109,[[["self"],["h"]]]],[11,"hash","","",110,[[["self"],["h"]]]],[11,"hash","","",111,[[["self"],["h"]]]],[11,"hash","","",112,[[["self"],["h"]]]],[11,"hash","","",113,[[["self"],["h"]]]],[11,"hash","","",114,[[["self"],["h"]]]],[11,"hash","","",115,[[["self"],["h"]]]],[11,"hash","","",116,[[["self"],["h"]]]],[11,"hash","","",117,[[["self"],["h"]]]],[11,"hash","","",118,[[["self"],["h"]]]],[11,"hash","","",119,[[["self"],["h"]]]],[11,"hash","","",120,[[["self"],["h"]]]],[11,"hash","","",121,[[["self"],["h"]]]],[11,"hash","","",122,[[["self"],["h"]]]],[11,"hash","","",123,[[["self"],["h"]]]],[11,"hash","","",124,[[["self"],["h"]]]],[11,"hash","","",125,[[["self"],["h"]]]],[11,"hash","","",126,[[["self"],["h"]]]],[11,"hash","","",127,[[["self"],["h"]]]],[11,"hash","","",128,[[["self"],["h"]]]],[11,"hash","","",129,[[["self"],["h"]]]],[11,"hash","","",130,[[["self"],["h"]]]],[11,"hash","","",131,[[["self"],["h"]]]],[11,"hash","","",132,[[["self"],["h"]]]],[11,"hash","","",133,[[["self"],["h"]]]],[11,"hash","","",134,[[["self"],["h"]]]],[11,"hash","","",135,[[["self"],["h"]]]],[11,"hash","","",136,[[["self"],["h"]]]],[11,"hash","","",137,[[["self"],["h"]]]],[11,"hash","","",138,[[["self"],["h"]]]],[11,"hash","","",139,[[["self"],["h"]]]],[11,"hash","","",140,[[["self"],["h"]]]],[11,"hash","","",141,[[["self"],["h"]]]],[11,"hash","","",142,[[["self"],["h"]]]],[11,"hash","","",143,[[["self"],["h"]]]],[11,"hash","","",144,[[["self"],["h"]]]],[11,"hash","","",145,[[["self"],["h"]]]],[11,"hash","","",146,[[["self"],["h"]]]],[11,"hash","","",147,[[["self"],["h"]]]],[11,"hash","","",148,[[["self"],["h"]]]],[11,"hash","","",149,[[["self"],["h"]]]],[11,"hash","","",150,[[["self"],["h"]]]],[11,"hash","","",151,[[["self"],["h"]]]],[11,"hash","","",152,[[["self"],["h"]]]],[11,"hash","","",153,[[["self"],["h"]]]],[11,"hash","","",154,[[["self"],["h"]]]],[11,"hash","","",155,[[["self"],["h"]]]],[11,"hash","","",156,[[["self"],["h"]]]],[11,"hash","","",157,[[["self"],["h"]]]],[11,"hash","","",158,[[["self"],["h"]]]],[11,"hash","","",159,[[["self"],["h"]]]],[11,"hash","","",160,[[["self"],["h"]]]],[11,"hash","","",161,[[["self"],["h"]]]],[11,"hash","","",162,[[["self"],["h"]]]],[11,"hash","","",163,[[["self"],["h"]]]],[11,"hash","","",164,[[["self"],["h"]]]],[11,"hash","","",165,[[["self"],["h"]]]],[11,"hash","","",166,[[["self"],["h"]]]],[11,"hash","","",167,[[["self"],["h"]]]],[11,"hash","","",168,[[["self"],["h"]]]],[11,"hash","","",169,[[["self"],["h"]]]],[11,"hash","","",170,[[["self"],["h"]]]],[11,"hash","","",171,[[["self"],["h"]]]],[11,"hash","","",172,[[["self"],["h"]]]],[11,"hash","","",173,[[["self"],["h"]]]],[11,"hash","","",174,[[["self"],["h"]]]],[11,"hash","","",175,[[["self"],["h"]]]],[11,"hash","","",176,[[["self"],["h"]]]],[11,"hash","","",177,[[["self"],["h"]]]],[11,"hash","","",178,[[["self"],["h"]]]],[11,"hash","","",179,[[["self"],["h"]]]],[11,"hash","","",180,[[["self"],["h"]]]],[11,"hash","","",181,[[["self"],["h"]]]],[11,"hash","","",182,[[["self"],["h"]]]],[11,"hash","","",183,[[["self"],["h"]]]],[11,"hash","","",184,[[["self"],["h"]]]],[11,"hash","syn","",0,[[["self"],["h"]]]],[11,"hash","","",61,[[["self"],["__h"]]]],[11,"hash","","",62,[[["self"],["__h"]]]],[11,"hash","","",1,[[["self"],["__h"]]]],[11,"hash","","",2,[[["self"],["__h"]]]],[11,"hash","","",63,[[["self"],["__h"]]]],[11,"hash","","",6,[[["self"],["__h"]]]],[11,"hash","","",64,[[["self"],["__h"]]]],[11,"hash","","",4,[[["self"],["__h"]]]],[11,"hash","","",5,[[["self"],["__h"]]]],[11,"hash","","",3,[[["self"],["__h"]]]],[11,"hash","","",65,[[["self"],["__h"]]]],[11,"hash","","",8,[[["self"],["__h"]]]],[11,"hash","","",7,[[["self"],["__h"]]]],[11,"hash","","",9,[[["self"],["__h"]]]],[11,"hash","","",206,[[["self"],["__h"]]]],[11,"hash","","",207,[[["self"],["__h"]]]],[11,"hash","","",208,[[["self"],["__h"]]]],[11,"hash","","",209,[[["self"],["__h"]]]],[11,"hash","","",210,[[["self"],["__h"]]]],[11,"hash","","",10,[[["self"],["__h"]]]],[11,"hash","","",211,[[["self"],["__h"]]]],[11,"hash","","",212,[[["self"],["__h"]]]],[11,"hash","","",213,[[["self"],["__h"]]]],[11,"hash","","",11,[[["self"],["__h"]]]],[11,"hash","","",12,[[["self"],["__h"]]]],[11,"hash","","",214,[[["self"],["__h"]]]],[11,"hash","","",215,[[["self"],["__h"]]]],[11,"hash","","",13,[[["self"],["__h"]]]],[11,"hash","","",216,[[["self"],["__h"]]]],[11,"hash","","",217,[[["self"],["__h"]]]],[11,"hash","","",218,[[["self"],["__h"]]]],[11,"hash","","",14,[[["self"],["__h"]]]],[11,"hash","","",219,[[["self"],["__h"]]]],[11,"hash","","",15,[[["self"],["__h"]]]],[11,"hash","","",220,[[["self"],["__h"]]]],[11,"hash","","",221,[[["self"],["__h"]]]],[11,"hash","","",222,[[["self"],["__h"]]]],[11,"hash","","",223,[[["self"],["__h"]]]],[11,"hash","","",16,[[["self"],["__h"]]]],[11,"hash","","",17,[[["self"],["__h"]]]],[11,"hash","","",224,[[["self"],["__h"]]]],[11,"hash","","",225,[[["self"],["__h"]]]],[11,"hash","","",226,[[["self"],["__h"]]]],[11,"hash","","",227,[[["self"],["__h"]]]],[11,"hash","","",228,[[["self"],["__h"]]]],[11,"hash","","",229,[[["self"],["__h"]]]],[11,"hash","","",230,[[["self"],["__h"]]]],[11,"hash","","",231,[[["self"],["__h"]]]],[11,"hash","","",232,[[["self"],["__h"]]]],[11,"hash","","",18,[[["self"],["__h"]]]],[11,"hash","","",233,[[["self"],["__h"]]]],[11,"hash","","",234,[[["self"],["__h"]]]],[11,"hash","","",235,[[["self"],["__h"]]]],[11,"hash","","",66,[[["self"],["h"]]]],[11,"hash","","",67,[[["self"],["__h"]]]],[11,"hash","","",19,[[["self"],["h"]]]],[11,"hash","","",22,[[["self"],["__h"]]]],[11,"hash","","",68,[[["self"],["__h"]]]],[11,"hash","","",28,[[["self"],["__h"]]]],[11,"hash","","",23,[[["self"],["__h"]]]],[11,"hash","","",21,[[["self"],["__h"]]]],[11,"hash","","",236,[[["self"],["__h"]]]],[11,"hash","","",185,[[["self"],["__h"]]]],[11,"hash","","",237,[[["self"],["__h"]]]],[11,"hash","","",20,[[["self"],["__h"]]]],[11,"hash","","",70,[[["self"],["__h"]]]],[11,"hash","","",27,[[["self"],["__h"]]]],[11,"hash","","",69,[[["self"],["__h"]]]],[11,"hash","","",29,[[["self"],["__h"]]]],[11,"hash","","",71,[[["self"],["__h"]]]],[11,"hash","","",26,[[["self"],["__h"]]]],[11,"hash","","",25,[[["self"],["__h"]]]],[11,"hash","","",24,[[["self"],["__h"]]]],[11,"hash","","",30,[[["self"],["h"]]]],[11,"hash","","",72,[[["self"],["h"]]]],[11,"hash","","",186,[[["self"],["h"]]]],[11,"hash","","",187,[[["self"],["h"]]]],[11,"hash","","",188,[[["self"],["h"]]]],[11,"hash","","",189,[[["self"],["h"]]]],[11,"hash","","",190,[[["self"],["h"]]]],[11,"hash","","",191,[[["self"],["h"]]]],[11,"hash","","",31,[[["self"],["h"]]]],[11,"hash","","",73,[[["self"],["__h"]]]],[11,"hash","","",74,[[["self"],["__h"]]]],[11,"hash","","",32,[[["self"],["h"]]]],[11,"hash","","",36,[[["self"],["__h"]]]],[11,"hash","","",75,[[["self"],["__h"]]]],[11,"hash","","",34,[[["self"],["__h"]]]],[11,"hash","","",33,[[["self"],["__h"]]]],[11,"hash","","",35,[[["self"],["__h"]]]],[11,"hash","","",76,[[["self"],["__h"]]]],[11,"hash","","",77,[[["self"],["__h"]]]],[11,"hash","","",39,[[["self"],["__h"]]]],[11,"hash","","",40,[[["self"],["__h"]]]],[11,"hash","","",41,[[["self"],["__h"]]]],[11,"hash","","",42,[[["self"],["__h"]]]],[11,"hash","","",43,[[["self"],["__h"]]]],[11,"hash","","",44,[[["self"],["__h"]]]],[11,"hash","","",45,[[["self"],["__h"]]]],[11,"hash","","",46,[[["self"],["__h"]]]],[11,"hash","","",47,[[["self"],["__h"]]]],[11,"hash","","",48,[[["self"],["__h"]]]],[11,"hash","","",49,[[["self"],["__h"]]]],[11,"hash","","",50,[[["self"],["__h"]]]],[11,"hash","","",51,[[["self"],["__h"]]]],[11,"hash","","",52,[[["self"],["__h"]]]],[11,"hash","","",79,[[["self"],["h"]]]],[11,"hash","","",37,[[["self"],["__h"]]]],[11,"hash","","",38,[[["self"],["__h"]]]],[11,"hash","","",53,[[["self"],["__h"]]]],[11,"hash","","",78,[[["self"],["__h"]]]],[11,"hash","","",58,[[["self"],["__h"]]]],[11,"hash","","",59,[[["self"],["__h"]]]],[11,"hash","","",81,[[["self"],["__h"]]]],[11,"hash","","",80,[[["self"],["__h"]]]],[11,"hash","","",54,[[["self"],["__h"]]]],[11,"hash","","",55,[[["self"],["__h"]]]],[11,"hash","","",56,[[["self"],["__h"]]]],[11,"hash","","",57,[[["self"],["__h"]]]],[11,"hash","","",60,[[["self"],["__h"]]]],[11,"hash","syn::punctuated","",196,[[["self"],["__h"]]]],[11,"from_iter","","",196,[[["intoiterator"]],["self"]]],[11,"from_iter","","",196,[[["intoiterator"]],["self"]]],[11,"description","syn","",204,[[["self"]],["str"]]],[11,"to_tokens","syn::token","",82,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",83,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",84,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",85,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",86,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",87,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",88,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",89,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",90,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",91,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",92,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",93,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",94,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",95,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",96,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",97,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",98,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",99,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",100,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",101,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",102,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",103,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",104,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",105,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",106,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",107,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",108,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",109,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",110,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",111,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",112,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",113,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",114,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",115,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",116,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",117,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",118,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",119,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",120,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",121,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",122,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",123,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",124,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",125,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",126,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",127,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",128,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",129,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",130,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",131,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",132,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",133,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",134,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",135,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",136,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",137,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",138,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",139,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",140,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",141,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",142,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",143,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",144,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",145,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",146,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",147,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",148,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",149,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",150,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",151,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",152,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",153,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",154,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",155,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",156,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",157,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",158,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",159,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",160,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",161,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",162,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",163,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",164,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",165,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",166,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",167,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",168,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",169,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",170,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",171,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",172,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",173,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",174,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",175,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",176,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",177,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",178,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",179,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",180,[[["self"],["tokenstream"]]]],[11,"to_tokens","syn","",62,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",63,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",0,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",1,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",2,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",64,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",65,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",6,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",4,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",5,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",3,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",8,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",7,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",9,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",66,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",206,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",207,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",208,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",209,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",210,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",211,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",212,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",213,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",214,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",215,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",216,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",217,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",218,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",219,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",220,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",221,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",222,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",223,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",224,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",225,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",226,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",227,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",228,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",229,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",230,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",231,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",232,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",233,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",234,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",235,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",11,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",10,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",18,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",15,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",12,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",13,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",67,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",19,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",14,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",17,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",16,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",68,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",70,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",71,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",22,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",236,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",185,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",237,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",20,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",23,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",28,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",27,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",69,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",21,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",29,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",26,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",25,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",24,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",30,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",72,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",186,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",187,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",188,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",189,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",190,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",191,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",31,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",32,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",36,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",76,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",77,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",79,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",50,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",39,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",48,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",49,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",40,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",45,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",52,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",47,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",51,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",42,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",41,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",46,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",43,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",44,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",78,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",38,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",53,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",37,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",58,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",59,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",81,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",80,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",54,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",55,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",56,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",57,[[["self"],["tokenstream"]]]],[11,"to_tokens","syn::punctuated","",196,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",195,[[["self"],["tokenstream"]]]],[11,"fmt","syn","",67,[[["formatter"],["self"]],["result"]]],[11,"span","","",67,[[["self"]],[["option",["span"]],["span"]]]],[11,"fmt","","",19,[[["formatter"],["self"]],["result"]]],[11,"span","","",19,[[["self"]],[["option",["span"]],["span"]]]],[11,"new","","Creates a new `Ident` with the given `string` as well as…",205,[[["str"],["span"]],["ident"]]],[11,"span","","Returns the span of this `Ident`.",205,[[["self"]],["span"]]],[11,"set_span","","Configures the span of this `Ident`, possibly changing its…",205,[[["span"],["self"]]]],[11,"visit_abi","syn::visit","",198,[[["abi"],["self"]]]],[11,"visit_angle_bracketed_generic_arguments","","",198,[[["self"],["anglebracketedgenericarguments"]]]],[11,"visit_attr_style","","",198,[[["self"],["attrstyle"]]]],[11,"visit_attribute","","",198,[[["attribute"],["self"]]]],[11,"visit_bare_fn_arg","","",198,[[["barefnarg"],["self"]]]],[11,"visit_bin_op","","",198,[[["self"],["binop"]]]],[11,"visit_binding","","",198,[[["binding"],["self"]]]],[11,"visit_bound_lifetimes","","",198,[[["self"],["boundlifetimes"]]]],[11,"visit_const_param","","",198,[[["self"],["constparam"]]]],[11,"visit_constraint","","",198,[[["constraint"],["self"]]]],[11,"visit_data","","",198,[[["self"],["data"]]]],[11,"visit_data_enum","","",198,[[["self"],["dataenum"]]]],[11,"visit_data_struct","","",198,[[["self"],["datastruct"]]]],[11,"visit_data_union","","",198,[[["dataunion"],["self"]]]],[11,"visit_derive_input","","",198,[[["deriveinput"],["self"]]]],[11,"visit_expr","","",198,[[["self"],["expr"]]]],[11,"visit_expr_binary","","",198,[[["exprbinary"],["self"]]]],[11,"visit_expr_call","","",198,[[["self"],["exprcall"]]]],[11,"visit_expr_cast","","",198,[[["self"],["exprcast"]]]],[11,"visit_expr_field","","",198,[[["self"],["exprfield"]]]],[11,"visit_expr_index","","",198,[[["exprindex"],["self"]]]],[11,"visit_expr_lit","","",198,[[["self"],["exprlit"]]]],[11,"visit_expr_paren","","",198,[[["exprparen"],["self"]]]],[11,"visit_expr_path","","",198,[[["self"],["exprpath"]]]],[11,"visit_expr_unary","","",198,[[["self"],["exprunary"]]]],[11,"visit_field","","",198,[[["self"],["field"]]]],[11,"visit_fields","","",198,[[["self"],["fields"]]]],[11,"visit_fields_named","","",198,[[["self"],["fieldsnamed"]]]],[11,"visit_fields_unnamed","","",198,[[["self"],["fieldsunnamed"]]]],[11,"visit_generic_argument","","",198,[[["genericargument"],["self"]]]],[11,"visit_generic_param","","",198,[[["self"],["genericparam"]]]],[11,"visit_generics","","",198,[[["self"],["generics"]]]],[11,"visit_ident","","",198,[[["self"],["ident"]]]],[11,"visit_index","","",198,[[["self"],["index"]]]],[11,"visit_lifetime","","",198,[[["self"],["lifetime"]]]],[11,"visit_lifetime_def","","",198,[[["self"],["lifetimedef"]]]],[11,"visit_lit","","",198,[[["self"],["lit"]]]],[11,"visit_lit_bool","","",198,[[["self"],["litbool"]]]],[11,"visit_lit_byte","","",198,[[["litbyte"],["self"]]]],[11,"visit_lit_byte_str","","",198,[[["self"],["litbytestr"]]]],[11,"visit_lit_char","","",198,[[["self"],["litchar"]]]],[11,"visit_lit_float","","",198,[[["self"],["litfloat"]]]],[11,"visit_lit_int","","",198,[[["self"],["litint"]]]],[11,"visit_lit_str","","",198,[[["self"],["litstr"]]]],[11,"visit_macro","","",198,[[["macro"],["self"]]]],[11,"visit_macro_delimiter","","",198,[[["self"],["macrodelimiter"]]]],[11,"visit_member","","",198,[[["self"],["member"]]]],[11,"visit_meta","","",198,[[["self"],["meta"]]]],[11,"visit_meta_list","","",198,[[["self"],["metalist"]]]],[11,"visit_meta_name_value","","",198,[[["self"],["metanamevalue"]]]],[11,"visit_nested_meta","","",198,[[["self"],["nestedmeta"]]]],[11,"visit_parenthesized_generic_arguments","","",198,[[["self"],["parenthesizedgenericarguments"]]]],[11,"visit_path","","",198,[[["self"],["path"]]]],[11,"visit_path_arguments","","",198,[[["self"],["patharguments"]]]],[11,"visit_path_segment","","",198,[[["self"],["pathsegment"]]]],[11,"visit_predicate_eq","","",198,[[["predicateeq"],["self"]]]],[11,"visit_predicate_lifetime","","",198,[[["predicatelifetime"],["self"]]]],[11,"visit_predicate_type","","",198,[[["predicatetype"],["self"]]]],[11,"visit_qself","","",198,[[["self"],["qself"]]]],[11,"visit_return_type","","",198,[[["self"],["returntype"]]]],[11,"visit_span","","",198,[[["self"],["span"]]]],[11,"visit_trait_bound","","",198,[[["traitbound"],["self"]]]],[11,"visit_trait_bound_modifier","","",198,[[["self"],["traitboundmodifier"]]]],[11,"visit_type","","",198,[[["self"],["type"]]]],[11,"visit_type_array","","",198,[[["self"],["typearray"]]]],[11,"visit_type_bare_fn","","",198,[[["self"],["typebarefn"]]]],[11,"visit_type_group","","",198,[[["self"],["typegroup"]]]],[11,"visit_type_impl_trait","","",198,[[["typeimpltrait"],["self"]]]],[11,"visit_type_infer","","",198,[[["self"],["typeinfer"]]]],[11,"visit_type_macro","","",198,[[["self"],["typemacro"]]]],[11,"visit_type_never","","",198,[[["self"],["typenever"]]]],[11,"visit_type_param","","",198,[[["self"],["typeparam"]]]],[11,"visit_type_param_bound","","",198,[[["self"],["typeparambound"]]]],[11,"visit_type_paren","","",198,[[["self"],["typeparen"]]]],[11,"visit_type_path","","",198,[[["self"],["typepath"]]]],[11,"visit_type_ptr","","",198,[[["self"],["typeptr"]]]],[11,"visit_type_reference","","",198,[[["self"],["typereference"]]]],[11,"visit_type_slice","","",198,[[["self"],["typeslice"]]]],[11,"visit_type_trait_object","","",198,[[["self"],["typetraitobject"]]]],[11,"visit_type_tuple","","",198,[[["typetuple"],["self"]]]],[11,"visit_un_op","","",198,[[["self"],["unop"]]]],[11,"visit_variadic","","",198,[[["self"],["variadic"]]]],[11,"visit_variant","","",198,[[["variant"],["self"]]]],[11,"visit_vis_crate","","",198,[[["viscrate"],["self"]]]],[11,"visit_vis_public","","",198,[[["vispublic"],["self"]]]],[11,"visit_vis_restricted","","",198,[[["self"],["visrestricted"]]]],[11,"visit_visibility","","",198,[[["self"],["visibility"]]]],[11,"visit_where_clause","","",198,[[["self"],["whereclause"]]]],[11,"visit_where_predicate","","",198,[[["self"],["wherepredicate"]]]],[11,"peek","syn::parse","Looks at the next token in the parse stream to determine…",244,[[["self"],["peek"]],["bool"]]],[11,"error","","Triggers an error at the current position of the parse…",244,[[],["error"]]]],"p":[[3,"Attribute"],[3,"MetaList"],[3,"MetaNameValue"],[3,"Field"],[3,"FieldsNamed"],[3,"FieldsUnnamed"],[3,"Variant"],[3,"VisCrate"],[3,"VisPublic"],[3,"VisRestricted"],[3,"ExprBinary"],[3,"ExprCall"],[3,"ExprCast"],[3,"ExprField"],[3,"ExprIndex"],[3,"ExprLit"],[3,"ExprParen"],[3,"ExprPath"],[3,"ExprUnary"],[3,"Index"],[3,"BoundLifetimes"],[3,"ConstParam"],[3,"Generics"],[3,"LifetimeDef"],[3,"PredicateEq"],[3,"PredicateLifetime"],[3,"PredicateType"],[3,"TraitBound"],[3,"TypeParam"],[3,"WhereClause"],[3,"Lifetime"],[3,"LitBool"],[3,"Macro"],[3,"DataEnum"],[3,"DataStruct"],[3,"DataUnion"],[3,"DeriveInput"],[3,"Abi"],[3,"BareFnArg"],[3,"TypeArray"],[3,"TypeBareFn"],[3,"TypeGroup"],[3,"TypeImplTrait"],[3,"TypeInfer"],[3,"TypeMacro"],[3,"TypeNever"],[3,"TypeParen"],[3,"TypePath"],[3,"TypePtr"],[3,"TypeReference"],[3,"TypeSlice"],[3,"TypeTraitObject"],[3,"TypeTuple"],[3,"Variadic"],[3,"AngleBracketedGenericArguments"],[3,"Binding"],[3,"Constraint"],[3,"ParenthesizedGenericArguments"],[3,"Path"],[3,"PathSegment"],[3,"QSelf"],[4,"AttrStyle"],[4,"Meta"],[4,"NestedMeta"],[4,"Fields"],[4,"Visibility"],[4,"Expr"],[4,"Member"],[4,"GenericParam"],[4,"TraitBoundModifier"],[4,"TypeParamBound"],[4,"WherePredicate"],[4,"Lit"],[4,"StrStyle"],[4,"MacroDelimiter"],[4,"Data"],[4,"BinOp"],[4,"UnOp"],[4,"ReturnType"],[4,"Type"],[4,"GenericArgument"],[4,"PathArguments"],[3,"Underscore"],[3,"Abstract"],[3,"As"],[3,"Async"],[3,"Auto"],[3,"Await"],[3,"Become"],[3,"Box"],[3,"Break"],[3,"Const"],[3,"Continue"],[3,"Crate"],[3,"Default"],[3,"Do"],[3,"Dyn"],[3,"Else"],[3,"Enum"],[3,"Extern"],[3,"Final"],[3,"Fn"],[3,"For"],[3,"If"],[3,"Impl"],[3,"In"],[3,"Let"],[3,"Loop"],[3,"Macro"],[3,"Match"],[3,"Mod"],[3,"Move"],[3,"Mut"],[3,"Override"],[3,"Priv"],[3,"Pub"],[3,"Ref"],[3,"Return"],[3,"SelfType"],[3,"SelfValue"],[3,"Static"],[3,"Struct"],[3,"Super"],[3,"Trait"],[3,"Try"],[3,"Type"],[3,"Typeof"],[3,"Union"],[3,"Unsafe"],[3,"Unsized"],[3,"Use"],[3,"Virtual"],[3,"Where"],[3,"While"],[3,"Yield"],[3,"Add"],[3,"AddEq"],[3,"And"],[3,"AndAnd"],[3,"AndEq"],[3,"At"],[3,"Bang"],[3,"Caret"],[3,"CaretEq"],[3,"Colon"],[3,"Colon2"],[3,"Comma"],[3,"Div"],[3,"DivEq"],[3,"Dollar"],[3,"Dot"],[3,"Dot2"],[3,"Dot3"],[3,"DotDotEq"],[3,"Eq"],[3,"EqEq"],[3,"Ge"],[3,"Gt"],[3,"Le"],[3,"Lt"],[3,"MulEq"],[3,"Ne"],[3,"Or"],[3,"OrEq"],[3,"OrOr"],[3,"Pound"],[3,"Question"],[3,"RArrow"],[3,"LArrow"],[3,"Rem"],[3,"RemEq"],[3,"FatArrow"],[3,"Semi"],[3,"Shl"],[3,"ShlEq"],[3,"Shr"],[3,"ShrEq"],[3,"Star"],[3,"Sub"],[3,"SubEq"],[3,"Tilde"],[3,"Brace"],[3,"Bracket"],[3,"Paren"],[3,"Group"],[3,"TypeGenerics"],[3,"LitStr"],[3,"LitByteStr"],[3,"LitByte"],[3,"LitChar"],[3,"LitInt"],[3,"LitFloat"],[3,"TokenBuffer"],[3,"Cursor"],[8,"IdentExt"],[4,"Pair"],[3,"Punctuated"],[8,"Spanned"],[8,"Visit"],[8,"Speculative"],[8,"Parse"],[8,"Parser"],[3,"StepCursor"],[3,"ParseBuffer"],[3,"Error"],[3,"Ident"],[3,"ExprArray"],[3,"ExprAssign"],[3,"ExprAssignOp"],[3,"ExprAsync"],[3,"ExprAwait"],[3,"ExprBlock"],[3,"ExprBox"],[3,"ExprBreak"],[3,"ExprClosure"],[3,"ExprContinue"],[3,"ExprForLoop"],[3,"ExprGroup"],[3,"ExprIf"],[3,"ExprLet"],[3,"ExprLoop"],[3,"ExprMacro"],[3,"ExprMatch"],[3,"ExprMethodCall"],[3,"ExprRange"],[3,"ExprReference"],[3,"ExprRepeat"],[3,"ExprReturn"],[3,"ExprStruct"],[3,"ExprTry"],[3,"ExprTryBlock"],[3,"ExprTuple"],[3,"ExprType"],[3,"ExprUnsafe"],[3,"ExprWhile"],[3,"ExprYield"],[3,"ImplGenerics"],[3,"Turbofish"],[3,"Pairs"],[3,"PairsMut"],[3,"IntoPairs"],[3,"IntoIter"],[3,"Iter"],[3,"IterMut"],[3,"Lookahead1"],[3,"Nothing"]]};
searchIndex["synstructure"] = {"doc":"This crate provides helper types for matching against enum…","i":[[3,"BindingInfo","synstructure","Information about a specific binding. This contains both…",null,null],[12,"binding","","The name which this BindingInfo will bind to.",0,null],[12,"style","","The type of binding which this BindingInfo will create.",0,null],[3,"VariantAst","","This type is similar to `syn`'s `Variant` type, however…",null,null],[12,"attrs","","",1,null],[12,"ident","","",1,null],[12,"fields","","",1,null],[12,"discriminant","","",1,null],[3,"VariantInfo","","A wrapper around a `syn::DeriveInput`'s variant which…",null,null],[12,"prefix","","",2,null],[3,"Structure","","A wrapper around a `syn::DeriveInput` which provides…",null,null],[4,"AddBounds","","Changes how bounds are added",null,null],[13,"Both","","Add for fields and generics",3,null],[13,"Fields","","Fields only",3,null],[13,"Generics","","Generics only",3,null],[13,"None","","None",3,null],[4,"BindStyle","","The type of binding to use when generating a pattern.",null,null],[13,"Move","","`x`",4,null],[13,"MoveMut","","`mut x`",4,null],[13,"Ref","","`ref x`",4,null],[13,"RefMut","","`ref mut x`",4,null],[5,"unpretty_print","","Dumps an unpretty version of a tokenstream. Takes any type…",null,[[["display"]],["string"]]],[8,"MacroResult","","Helper trait describing values which may be returned by…",null,null],[10,"into_result","","Convert this result into a `Result` for further processing…",5,[[],[["result",["tokenstream"]],["tokenstream"]]]],[11,"into_stream","","Convert this result into a `proc_macro::TokenStream`,…",5,[[],["tokenstream"]]],[11,"ast","","Returns a reference to the underlying `syn` AST node which…",0,[[["self"]],["field"]]],[11,"pat","","Generates the pattern fragment for this field binding.",0,[[["self"]],["tokenstream"]]],[11,"referenced_ty_params","","Returns a list of the type parameters which are referenced…",0,[[["self"]],[["vec",["ident"]],["ident"]]]],[11,"bindings","","Returns a slice of the bindings in this Variant.",2,[[["self"]]]],[11,"bindings_mut","","Returns a mut slice of the bindings in this Variant.",2,[[["self"]]]],[11,"ast","","Returns a `VariantAst` object which contains references to…",2,[[["self"]],["variantast"]]],[11,"omitted_bindings","","True if any bindings were omitted due to a `filter` call.",2,[[["self"]],["bool"]]],[11,"pat","","Generates the match-arm pattern which could be used to…",2,[[["self"]],["tokenstream"]]],[11,"construct","","Generates the token stream required to construct the…",2,[[["self"],["f"]],["tokenstream"]]],[11,"each","","Runs the passed-in function once for each bound field,…",2,[[["self"],["f"]],["tokenstream"]]],[11,"fold","","Runs the passed-in function once for each bound field,…",2,[[["i"],["self"],["f"]],["tokenstream"]]],[11,"filter","","Filter the bindings created by this `Variant` object. This…",2,[[["self"],["f"]],["self"]]],[11,"remove_binding","","Remove the binding at the given index.",2,[[["self"],["usize"]],["self"]]],[11,"bind_with","","Updates the `BindStyle` for each of the passed-in fields…",2,[[["self"],["f"]],["self"]]],[11,"binding_name","","Updates the binding name for each fo the passed-in fields…",2,[[["self"],["f"]],["self"]]],[11,"referenced_ty_params","","Returns a list of the type parameters which are referenced…",2,[[["self"]],[["vec",["ident"]],["ident"]]]],[11,"new","","Create a new `Structure` with the variants and fields from…",6,[[["deriveinput"]],["self"]]],[11,"try_new","","Create a new `Structure` with the variants and fields from…",6,[[["deriveinput"]],["result"]]],[11,"variants","","Returns a slice of the variants in this Structure.",6,[[["self"]]]],[11,"variants_mut","","Returns a mut slice of the variants in this Structure.",6,[[["self"]]]],[11,"ast","","Returns a reference to the underlying `syn` AST node which…",6,[[["self"]],["deriveinput"]]],[11,"omitted_variants","","True if any variants were omitted due to a…",6,[[["self"]],["bool"]]],[11,"each","","Runs the passed-in function once for each bound field,…",6,[[["self"],["f"]],["tokenstream"]]],[11,"fold","","Runs the passed-in function once for each bound field,…",6,[[["i"],["self"],["f"]],["tokenstream"]]],[11,"each_variant","","Runs the passed-in function once for each variant, passing…",6,[[["self"],["f"]],["tokenstream"]]],[11,"filter","","Filter the bindings created by this `Structure` object.…",6,[[["self"],["f"]],["self"]]],[11,"add_where_predicate","","Specify additional where predicate bounds which should be…",6,[[["wherepredicate"],["self"]],["self"]]],[11,"add_bounds","","Specify which bounds should be generated by…",6,[[["self"],["addbounds"]],["self"]]],[11,"filter_variants","","Filter the variants matched by this `Structure` object.…",6,[[["self"],["f"]],["self"]]],[11,"remove_variant","","Remove the variant at the given index.",6,[[["self"],["usize"]],["self"]]],[11,"bind_with","","Updates the `BindStyle` for each of the passed-in fields…",6,[[["self"],["f"]],["self"]]],[11,"binding_name","","Updates the binding name for each fo the passed-in fields…",6,[[["self"],["f"]],["self"]]],[11,"referenced_ty_params","","Returns a list of the type parameters which are refrenced…",6,[[["self"]],[["vec",["ident"]],["ident"]]]],[11,"add_impl_generic","","Adds an `impl<>` generic parameter. This can be used when…",6,[[["genericparam"],["self"]],["self"]]],[11,"add_trait_bounds","","Add trait bounds for a trait with the given path for each…",6,[[["traitbound"],["option"],["addbounds"],["self"]]]],[11,"bound_impl","","NOTE: This methods' features are superceded by…",6,[[["totokens"],["self"]],["tokenstream"]]],[11,"unsafe_bound_impl","","NOTE: This methods' features are superceded by…",6,[[["totokens"],["self"]],["tokenstream"]]],[11,"unbound_impl","","NOTE: This methods' features are superceded by…",6,[[["totokens"],["self"]],["tokenstream"]]],[11,"unsafe_unbound_impl","","NOTE: This methods' features are superceded by…",6,[[["totokens"],["self"]],["tokenstream"]]],[11,"gen_impl","","Generate an impl block for the given struct. This impl…",6,[[["tokenstream"],["self"]],["tokenstream"]]],[14,"decl_derive","","The `decl_derive!` macro declares a custom derive wrapper.…",null,null],[14,"decl_attribute","","The `decl_attribute!` macro declares a custom attribute…",null,null],[14,"test_derive","","Run a test on a custom derive. This macro expands both the…",null,null],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"span","","",0,[[["self"]],["span"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,[[["self"],["t"]]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,[[["self"],["t"]]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"span","","",4,[[["self"]],["span"]]],[11,"clone","","",3,[[["self"]],["addbounds"]]],[11,"clone","","",4,[[["self"]],["bindstyle"]]],[11,"clone","","",0,[[["self"]],["bindinginfo"]]],[11,"clone","","",1,[[["self"]],["variantast"]]],[11,"clone","","",2,[[["self"]],["variantinfo"]]],[11,"clone","","",6,[[["self"]],["structure"]]],[11,"eq","","",3,[[["self"],["addbounds"]],["bool"]]],[11,"eq","","",4,[[["bindstyle"],["self"]],["bool"]]],[11,"eq","","",0,[[["self"],["bindinginfo"]],["bool"]]],[11,"ne","","",0,[[["self"],["bindinginfo"]],["bool"]]],[11,"eq","","",1,[[["variantast"],["self"]],["bool"]]],[11,"ne","","",1,[[["variantast"],["self"]],["bool"]]],[11,"eq","","",2,[[["variantinfo"],["self"]],["bool"]]],[11,"ne","","",2,[[["variantinfo"],["self"]],["bool"]]],[11,"eq","","",6,[[["structure"],["self"]],["bool"]]],[11,"ne","","",6,[[["structure"],["self"]],["bool"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",6,[[["formatter"],["self"]],["result"]]],[11,"hash","","",3,[[["self"],["__h"]]]],[11,"hash","","",4,[[["self"],["__h"]]]],[11,"hash","","",0,[[["self"],["__h"]]]],[11,"hash","","",1,[[["self"],["__h"]]]],[11,"hash","","",2,[[["self"],["__h"]]]],[11,"hash","","",6,[[["self"],["__h"]]]],[11,"to_tokens","","",4,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",0,[[["tokenstream"],["self"]]]]],"p":[[3,"BindingInfo"],[3,"VariantAst"],[3,"VariantInfo"],[4,"AddBounds"],[4,"BindStyle"],[8,"MacroResult"],[3,"Structure"]]};
searchIndex["tabwriter"] = {"doc":"This crate provides an implementation of elastic tabstops.…","i":[[3,"TabWriter","tabwriter","TabWriter wraps an arbitrary writer and aligns tabbed…",null,null],[3,"IntoInnerError","","An error returned by `into_inner`.",null,null],[4,"Alignment","","`Alignment` represents how a `TabWriter` should align text…",null,null],[13,"Left","","Text should be aligned with the left edge of the cell",0,null],[13,"Center","","Text should be centered within the cell",0,null],[13,"Right","","Text should be aligned with the right edge of the cell",0,null],[11,"new","","Create a new `TabWriter` from an existing `Writer`.",1,[[["w"]],["tabwriter"]]],[11,"minwidth","","Set the minimum width of each column. That is, all columns…",1,[[["usize"]],["tabwriter"]]],[11,"padding","","Set the padding between columns. All columns will be…",1,[[["usize"]],["tabwriter"]]],[11,"alignment","","Set the alignment of text within cells. This will effect…",1,[[["alignment"]],["tabwriter"]]],[11,"into_inner","","Unwraps this `TabWriter`, returning the underlying writer.",1,[[],[["result",["intoinnererror"]],["intoinnererror",["tabwriter"]]]]],[11,"error","","Returns the error which caused the `into_error()` call to…",2,[[["self"]],["error"]]],[11,"into_inner","","Returns the `TabWriter` instance which generated the error.",2,[[],["w"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_string","","",2,[[["self"]],["string"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"description","","",2,[[["self"]],["str"]]],[11,"cause","","",2,[[["self"]],[["error"],["option",["error"]]]]],[11,"write","","",1,[[["self"]],[["result",["usize"]],["usize"]]]],[11,"flush","","",1,[[["self"]],["result"]]]],"p":[[4,"Alignment"],[3,"TabWriter"],[3,"IntoInnerError"]]};
searchIndex["textwrap"] = {"doc":"`textwrap` provides functions for word wrapping and…","i":[[3,"HyphenSplitter","textwrap","Simple and default way to split words: splitting on…",null,null],[3,"NoHyphenation","","Use this as a [`Wrapper.splitter`] to avoid any kind of…",null,null],[3,"Wrapper","","A Wrapper holds settings for wrapping and filling text.…",null,null],[12,"width","","The width in columns at which the text will be wrapped.",0,null],[12,"initial_indent","","Indentation used for the first line of output.",0,null],[12,"subsequent_indent","","Indentation used for subsequent lines of output.",0,null],[12,"break_words","","Allow long words to be broken if they cannot fit on a…",0,null],[12,"splitter","","The method for splitting words. If the `hyphenation`…",0,null],[3,"IntoWrapIter","","An iterator over the lines of the input string which owns…",null,null],[3,"WrapIter","","An iterator over the lines of the input string which…",null,null],[5,"dedent","","Removes common leading whitespace from each line.",null,[[["str"]],["string"]]],[5,"indent","","Add prefix to each non-empty line.",null,[[["str"]],["string"]]],[5,"fill","","Fill a line of text at `width` characters. Strings are…",null,[[["str"],["usize"]],["string"]]],[5,"wrap","","Wrap a line of text at `width` characters. Strings are…",null,[[["str"],["usize"]],[["vec",["cow"]],["cow",["str"]]]]],[5,"wrap_iter","","Lazily wrap a line of text at `width` characters. Strings…",null,[[["str"],["usize"]],[["hyphensplitter"],["intowrapiter",["hyphensplitter"]]]]],[8,"WordSplitter","","An interface for splitting words.",null,null],[10,"split","","Return all possible splits of word. Each split is a triple…",1,[[["self"],["str"]],["vec"]]],[11,"new","","Create a new Wrapper for wrapping at the specified width.…",0,[[["usize"]],[["wrapper",["hyphensplitter"]],["hyphensplitter"]]]],[11,"with_splitter","","Use the given [`WordSplitter`] to create a new Wrapper for…",0,[[["s"],["usize"]],["wrapper"]]],[11,"initial_indent","","Change [`self.initial_indent`]. The initial indentation is…",0,[[["str"]],["wrapper"]]],[11,"subsequent_indent","","Change [`self.subsequent_indent`]. The subsequent…",0,[[["str"]],["wrapper"]]],[11,"break_words","","Change [`self.break_words`]. This controls if words longer…",0,[[["bool"]],["wrapper"]]],[11,"fill","","Fill a line of text at `self.width` characters. Strings…",0,[[["str"],["self"]],["string"]]],[11,"wrap","","Wrap a line of text at `self.width` characters. Strings…",0,[[["str"],["self"]],[["vec",["cow"]],["cow",["str"]]]]],[11,"wrap_iter","","Lazily wrap a line of text at `self.width` characters.…",0,[[["str"],["self"]],["wrapiter"]]],[11,"into_wrap_iter","","Lazily wrap a line of text at `self.width` characters.…",0,[[["str"]],["intowrapiter"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"into_iter","","",4,[[],["i"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"into_iter","","",5,[[],["i"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"split","","",3,[[["self"],["str"]],["vec"]]],[11,"split","","",2,[[["self"],["str"]],["vec"]]],[11,"next","","",4,[[["self"]],[["option",["cow"]],["cow",["str"]]]]],[11,"next","","",5,[[["self"]],[["option",["cow"]],["cow",["str"]]]]],[11,"clone","","",3,[[["self"]],["nohyphenation"]]],[11,"clone","","",2,[[["self"]],["hyphensplitter"]]],[11,"clone","","",0,[[["self"]],["wrapper"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",5,[[["formatter"],["self"]],["result"]]]],"p":[[3,"Wrapper"],[8,"WordSplitter"],[3,"HyphenSplitter"],[3,"NoHyphenation"],[3,"IntoWrapIter"],[3,"WrapIter"]]};
searchIndex["thread_local"] = {"doc":"Per-object thread-local storage","i":[[3,"CachedIntoIter","thread_local","An iterator that moves out of a `CachedThreadLocal`.",null,null],[3,"CachedIterMut","","Mutable iterator over the contents of a `CachedThreadLocal`.",null,null],[3,"CachedThreadLocal","","Wrapper around `ThreadLocal` which adds a fast path for a…",null,null],[3,"ThreadLocal","","Thread-local variable wrapper",null,null],[3,"IterMut","","Mutable iterator over the contents of a `ThreadLocal`.",null,null],[3,"IntoIter","","An iterator that moves out of a `ThreadLocal`.",null,null],[11,"new","","Creates a new empty `CachedThreadLocal`.",0,[[],["cachedthreadlocal"]]],[11,"get","","Returns the element for the current thread, if it exists.",0,[[["self"]],[["t"],["option"]]]],[11,"get_or","","Returns the element for the current thread, or creates it…",0,[[["self"],["f"]],["t"]]],[11,"get_or_try","","Returns the element for the current thread, or creates it…",0,[[["self"],["f"]],[["t"],["result"]]]],[11,"iter_mut","","Returns a mutable iterator over the local values of all…",0,[[["self"]],["cacheditermut"]]],[11,"clear","","Removes all thread-specific values from the `ThreadLocal`,…",0,[[["self"]]]],[11,"get_or_default","","Returns the element for the current thread, or creates a…",0,[[["self"]],["t"]]],[11,"new","","Creates a new empty `ThreadLocal`.",1,[[],["threadlocal"]]],[11,"get","","Returns the element for the current thread, if it exists.",1,[[["self"]],[["t"],["option"]]]],[11,"get_or","","Returns the element for the current thread, or creates it…",1,[[["self"],["f"]],["t"]]],[11,"get_or_try","","Returns the element for the current thread, or creates it…",1,[[["self"],["f"]],[["t"],["result"]]]],[11,"iter_mut","","Returns a mutable iterator over the local values of all…",1,[[["self"]],["itermut"]]],[11,"clear","","Removes all thread-specific values from the `ThreadLocal`,…",1,[[["self"]]]],[11,"get_or_default","","Returns the element for the current thread, or creates a…",1,[[["self"]],["t"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"into_iter","","",2,[[],["i"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"into_iter","","",3,[[],["i"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"into_iter","","",0,[[],["i"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"into_iter","","",1,[[],["i"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"into_iter","","",4,[[],["i"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"into_iter","","",5,[[],["i"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"drop","","",1,[[["self"]]]],[11,"into_iter","","",0,[[],["cachedintoiter"]]],[11,"into_iter","","",1,[[],["intoiter"]]],[11,"next","","",3,[[["self"]],[["option"],["t"]]]],[11,"size_hint","","",3,[[["self"]]]],[11,"next","","",2,[[["self"]],["option"]]],[11,"size_hint","","",2,[[["self"]]]],[11,"next","","",4,[[["self"]],[["option"],["t"]]]],[11,"size_hint","","",4,[[["self"]]]],[11,"next","","",5,[[["self"]],["option"]]],[11,"size_hint","","",5,[[["self"]]]],[11,"default","","",0,[[],["cachedthreadlocal"]]],[11,"default","","",1,[[],["threadlocal"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]]],"p":[[3,"CachedThreadLocal"],[3,"ThreadLocal"],[3,"CachedIntoIter"],[3,"CachedIterMut"],[3,"IterMut"],[3,"IntoIter"]]};
searchIndex["time"] = {"doc":"Simple time handling.","i":[[3,"Duration","time","ISO 8601 time duration with nanosecond precision. This…",null,null],[3,"OutOfRangeError","","Represents error when converting `Duration` to/from a…",null,null],[3,"Timespec","","A record specifying a time value in seconds and…",null,null],[12,"sec","","",0,null],[12,"nsec","","",0,null],[3,"PreciseTime","","An opaque structure representing a moment in time.",null,null],[3,"SteadyTime","","A structure representing a moment in time.",null,null],[3,"Tm","","Holds a calendar date and time broken down into its…",null,null],[12,"tm_sec","","Seconds after the minute - [0, 60]",1,null],[12,"tm_min","","Minutes after the hour - [0, 59]",1,null],[12,"tm_hour","","Hours after midnight - [0, 23]",1,null],[12,"tm_mday","","Day of the month - [1, 31]",1,null],[12,"tm_mon","","Months since January - [0, 11]",1,null],[12,"tm_year","","Years since 1900",1,null],[12,"tm_wday","","Days since Sunday - [0, 6]. 0 = Sunday, 1 = Monday, ..., 6…",1,null],[12,"tm_yday","","Days since January 1 - [0, 365]",1,null],[12,"tm_isdst","","Daylight Saving Time flag.",1,null],[12,"tm_utcoff","","Identifies the time zone that was used to compute this…",1,null],[12,"tm_nsec","","Nanoseconds after the second - [0, 109 - 1]",1,null],[3,"TmFmt","","A wrapper around a `Tm` and format string that implements…",null,null],[4,"ParseError","","",null,null],[13,"InvalidSecond","","",2,null],[13,"InvalidMinute","","",2,null],[13,"InvalidHour","","",2,null],[13,"InvalidDay","","",2,null],[13,"InvalidMonth","","",2,null],[13,"InvalidYear","","",2,null],[13,"InvalidDayOfWeek","","",2,null],[13,"InvalidDayOfMonth","","",2,null],[13,"InvalidDayOfYear","","",2,null],[13,"InvalidZoneOffset","","",2,null],[13,"InvalidTime","","",2,null],[13,"InvalidSecondsSinceEpoch","","",2,null],[13,"MissingFormatConverter","","",2,null],[13,"InvalidFormatSpecifier","","",2,null],[13,"UnexpectedCharacter","","",2,null],[5,"strptime","","Parses the time from the string according to the format…",null,[[["str"]],[["result",["tm","parseerror"]],["tm"],["parseerror"]]]],[5,"get_time","","Returns the current time as a `timespec` containing the…",null,[[],["timespec"]]],[5,"precise_time_ns","","Returns the current value of a high-resolution performance…",null,[[],["u64"]]],[5,"precise_time_s","","Returns the current value of a high-resolution performance…",null,[[],["f64"]]],[5,"tzset","","",null,[[]]],[5,"empty_tm","","",null,[[],["tm"]]],[5,"at_utc","","Returns the specified time in UTC",null,[[["timespec"]],["tm"]]],[5,"now_utc","","Returns the current time in UTC",null,[[],["tm"]]],[5,"at","","Returns the specified time in the local timezone",null,[[["timespec"]],["tm"]]],[5,"now","","Returns the current time in the local timezone",null,[[],["tm"]]],[5,"strftime","","Formats the time according to the format string.",null,[[["str"],["tm"]],[["string"],["parseerror"],["result",["string","parseerror"]]]]],[11,"weeks","","Makes a new `Duration` with given number of weeks.…",3,[[["i64"]],["duration"]]],[11,"days","","Makes a new `Duration` with given number of days.…",3,[[["i64"]],["duration"]]],[11,"hours","","Makes a new `Duration` with given number of hours.…",3,[[["i64"]],["duration"]]],[11,"minutes","","Makes a new `Duration` with given number of minutes.…",3,[[["i64"]],["duration"]]],[11,"seconds","","Makes a new `Duration` with given number of seconds.…",3,[[["i64"]],["duration"]]],[11,"milliseconds","","Makes a new `Duration` with given number of milliseconds.",3,[[["i64"]],["duration"]]],[11,"microseconds","","Makes a new `Duration` with given number of microseconds.",3,[[["i64"]],["duration"]]],[11,"nanoseconds","","Makes a new `Duration` with given number of nanoseconds.",3,[[["i64"]],["duration"]]],[11,"span","","Runs a closure, returning the duration of time it took to…",3,[[["f"]],["duration"]]],[11,"num_weeks","","Returns the total number of whole weeks in the duration.",3,[[["self"]],["i64"]]],[11,"num_days","","Returns the total number of whole days in the duration.",3,[[["self"]],["i64"]]],[11,"num_hours","","Returns the total number of whole hours in the duration.",3,[[["self"]],["i64"]]],[11,"num_minutes","","Returns the total number of whole minutes in the duration.",3,[[["self"]],["i64"]]],[11,"num_seconds","","Returns the total number of whole seconds in the duration.",3,[[["self"]],["i64"]]],[11,"num_milliseconds","","Returns the total number of whole milliseconds in the…",3,[[["self"]],["i64"]]],[11,"num_microseconds","","Returns the total number of whole microseconds in the…",3,[[["self"]],[["i64"],["option",["i64"]]]]],[11,"num_nanoseconds","","Returns the total number of whole nanoseconds in the…",3,[[["self"]],[["i64"],["option",["i64"]]]]],[11,"checked_add","","Add two durations, returning `None` if overflow occurred.",3,[[["self"],["duration"]],[["option",["duration"]],["duration"]]]],[11,"checked_sub","","Subtract two durations, returning `None` if overflow…",3,[[["self"],["duration"]],[["option",["duration"]],["duration"]]]],[11,"min_value","","The minimum possible `Duration`: `i64::MIN` milliseconds.",3,[[],["duration"]]],[11,"max_value","","The maximum possible `Duration`: `i64::MAX` milliseconds.",3,[[],["duration"]]],[11,"zero","","A duration where the stored seconds and nanoseconds are…",3,[[],["duration"]]],[11,"is_zero","","Returns `true` if the duration equals `Duration::zero()`.",3,[[["self"]],["bool"]]],[11,"from_std","","Creates a `time::Duration` object from `std::time::Duration`",3,[[["stdduration"]],[["result",["duration","outofrangeerror"]],["duration"],["outofrangeerror"]]]],[11,"to_std","","Creates a `std::time::Duration` object from `time::Duration`",3,[[["self"]],[["outofrangeerror"],["stdduration"],["result",["stdduration","outofrangeerror"]]]]],[11,"new","","",0,[[["i64"],["i32"]],["timespec"]]],[11,"now","","Returns a `PreciseTime` representing the current moment in…",4,[[],["precisetime"]]],[11,"to","","Returns a `Duration` representing the span of time from…",4,[[["precisetime"],["self"]],["duration"]]],[11,"now","","Returns a `SteadyTime` representing the current moment in…",5,[[],["steadytime"]]],[11,"to_timespec","","Convert time to the seconds from January 1, 1970",1,[[["self"]],["timespec"]]],[11,"to_local","","Convert time to the local timezone",1,[[["self"]],["tm"]]],[11,"to_utc","","Convert time to the UTC",1,[[["self"]],["tm"]]],[11,"ctime","","Returns a TmFmt that outputs according to the `asctime`…",1,[[["self"]],["tmfmt"]]],[11,"asctime","","Returns a TmFmt that outputs according to the `asctime`…",1,[[["self"]],["tmfmt"]]],[11,"strftime","","Formats the time according to the format string.",1,[[["str"],["self"]],[["tmfmt"],["result",["tmfmt","parseerror"]],["parseerror"]]]],[11,"rfc822","","Returns a TmFmt that outputs according to RFC 822.",1,[[["self"]],["tmfmt"]]],[11,"rfc822z","","Returns a TmFmt that outputs according to RFC 822 with…",1,[[["self"]],["tmfmt"]]],[11,"rfc3339","","Returns a TmFmt that outputs according to RFC 3339. RFC…",1,[[["self"]],["tmfmt"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"to_string","","",3,[[["self"]],["string"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,[[["self"],["t"]]]],[11,"to_string","","",6,[[["self"]],["string"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,[[["self"],["t"]]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,[[["self"],["t"]]]],[11,"to_string","","",5,[[["self"]],["string"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"to_string","","",7,[[["self"]],["string"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"to_string","","",2,[[["self"]],["string"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"clone","","",3,[[["self"]],["duration"]]],[11,"clone","","",6,[[["self"]],["outofrangeerror"]]],[11,"clone","","",0,[[["self"]],["timespec"]]],[11,"clone","","",4,[[["self"]],["precisetime"]]],[11,"clone","","",5,[[["self"]],["steadytime"]]],[11,"clone","","",1,[[["self"]],["tm"]]],[11,"clone","","",2,[[["self"]],["parseerror"]]],[11,"cmp","","",3,[[["self"],["duration"]],["ordering"]]],[11,"cmp","","",0,[[["self"],["timespec"]],["ordering"]]],[11,"cmp","","",5,[[["self"],["steadytime"]],["ordering"]]],[11,"cmp","","",1,[[["self"],["tm"]],["ordering"]]],[11,"eq","","",3,[[["self"],["duration"]],["bool"]]],[11,"ne","","",3,[[["self"],["duration"]],["bool"]]],[11,"eq","","",6,[[["outofrangeerror"],["self"]],["bool"]]],[11,"ne","","",6,[[["outofrangeerror"],["self"]],["bool"]]],[11,"eq","","",0,[[["self"],["timespec"]],["bool"]]],[11,"ne","","",0,[[["self"],["timespec"]],["bool"]]],[11,"eq","","",5,[[["self"],["steadytime"]],["bool"]]],[11,"ne","","",5,[[["self"],["steadytime"]],["bool"]]],[11,"eq","","",1,[[["self"],["tm"]],["bool"]]],[11,"ne","","",1,[[["self"],["tm"]],["bool"]]],[11,"eq","","",2,[[["parseerror"],["self"]],["bool"]]],[11,"ne","","",2,[[["parseerror"],["self"]],["bool"]]],[11,"partial_cmp","","",3,[[["self"],["duration"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",3,[[["self"],["duration"]],["bool"]]],[11,"le","","",3,[[["self"],["duration"]],["bool"]]],[11,"gt","","",3,[[["self"],["duration"]],["bool"]]],[11,"ge","","",3,[[["self"],["duration"]],["bool"]]],[11,"partial_cmp","","",0,[[["self"],["timespec"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",0,[[["self"],["timespec"]],["bool"]]],[11,"le","","",0,[[["self"],["timespec"]],["bool"]]],[11,"gt","","",0,[[["self"],["timespec"]],["bool"]]],[11,"ge","","",0,[[["self"],["timespec"]],["bool"]]],[11,"partial_cmp","","",5,[[["self"],["steadytime"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",5,[[["self"],["steadytime"]],["bool"]]],[11,"le","","",5,[[["self"],["steadytime"]],["bool"]]],[11,"gt","","",5,[[["self"],["steadytime"]],["bool"]]],[11,"ge","","",5,[[["self"],["steadytime"]],["bool"]]],[11,"partial_cmp","","",1,[[["self"],["tm"]],[["ordering"],["option",["ordering"]]]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",6,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",7,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",7,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",6,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"div","","",3,[[["i32"]],["duration"]]],[11,"sub","","",3,[[["duration"]],["duration"]]],[11,"sub","","",0,[[["duration"]],["timespec"]]],[11,"sub","","",0,[[["timespec"]],["duration"]]],[11,"sub","","",5,[[["steadytime"]],["duration"]]],[11,"sub","","",5,[[["duration"]],["steadytime"]]],[11,"sub","","The resulting Tm is in UTC.",1,[[["duration"]],["tm"]]],[11,"sub","","",1,[[["tm"]],["duration"]]],[11,"add","","",3,[[["duration"]],["duration"]]],[11,"add","","",0,[[["duration"]],["timespec"]]],[11,"add","","",5,[[["duration"]],["steadytime"]]],[11,"add","","The resulting Tm is in UTC.",1,[[["duration"]],["tm"]]],[11,"mul","","",3,[[["i32"]],["duration"]]],[11,"neg","","",3,[[],["duration"]]],[11,"hash","","",3,[[["self"],["__h"]]]],[11,"hash","","",0,[[["self"],["__h"]]]],[11,"hash","","",1,[[["self"],["__h"]]]],[11,"description","","",6,[[["self"]],["str"]]],[11,"description","","",2,[[["self"]],["str"]]]],"p":[[3,"Timespec"],[3,"Tm"],[4,"ParseError"],[3,"Duration"],[3,"PreciseTime"],[3,"SteadyTime"],[3,"OutOfRangeError"],[3,"TmFmt"]]};
searchIndex["total_order_multi_map"] = {"doc":"A multi map implementation which also keeps the total…","i":[[3,"Iter","total_order_multi_map","Iterator over TotalOrderMultimap in insertion order.",null,null],[3,"IterMut","","",null,null],[3,"Entry","","",null,null],[3,"Keys","","",null,null],[3,"Group","","A iterator over `&V::Target` values returned by…",null,null],[3,"GroupMut","","A iterator over `&mut V::Target` values returned by…",null,null],[3,"GroupedValues","","An iterator of Groups (no fixed iteration order).",null,null],[3,"GroupedValuesMut","","An iterator of Groups (no fixed iteration order).",null,null],[3,"Values","","",null,null],[3,"ValuesMut","","",null,null],[3,"TotalOrderMultiMap","","A multi map with keeps the total ordering of inserted…",null,null],[3,"EntryValues","","A type providing access to all values associated to \"some…",null,null],[3,"EntryValuesMut","","A type providing mut access to all values associated to…",null,null],[3,"SyncSendHelper","","Delegate the job of deciding about Send, Sync to rustc…",null,null],[11,"iter","","Returns a iterator over the key value pairs in insertion…",0,[[["self"]],["iter"]]],[11,"iter_mut","","",0,[[["self"]],["itermut"]]],[11,"entry","","return a entry for a given key",0,[[["self"],["k"]],["entry"]]],[11,"key","","access the key used to construct this entry",1,[[["self"]],["k"]]],[11,"value_count","","return how many values are associated with this entries key",1,[[["self"]],["usize"]]],[11,"values","","Iterate over all values already inserted for the key.",1,[[["self"]],["entryvalues"]]],[11,"values_mut","","Iterate over mutable references of values already inserted…",1,[[["self"]],["entryvaluesmut"]]],[11,"add","","Add a value to the values associated with the given keys.",1,[[["v"]],["entryvaluesmut"]]],[11,"set","","Sets a value for a given key, removing all previous…",1,[[["v"]],["vec"]]],[11,"keys","","Return an iterator the keys of this multi map.",0,[[["self"]],["keys"]]],[11,"group_iter","","Returns a iterator over all values grouped by key.",0,[[["self"]],["groupedvalues"]]],[11,"group_iter_mut","","Returns a iterator over all values grouped by key",0,[[["self"]],["groupedvaluesmut"]]],[11,"values","","Returns a iterator over the inner-values in this multi map.",0,[[["self"]],["values"]]],[11,"values_mut","","Returns a iterator over the values in this multi map.",0,[[["self"]],["valuesmut"]]],[11,"key","","",2,[[["self"]],["k"]]],[11,"key","","",3,[[["self"]],["k"]]],[11,"new","","Create a new empty map.",0,[[],["self"]]],[11,"with_capacity","","Crate a new map with a given `capacity`.",0,[[["usize"]],["self"]]],[11,"capacity","","Returns the capacity (unreliable).",0,[[["self"]],["usize"]]],[11,"reserve","","Reserves space for `n` additional elements.",0,[[["self"],["usize"]]]],[11,"reverse","","Reverses insertion order.",0,[[["self"]]]],[11,"shrink_to_fit","","Shrinks all internal containers to not contains any…",0,[[["self"]]]],[11,"len","","Returns the total number of elements.",0,[[["self"]],["usize"]]],[11,"key_count","","Returns the total number of different keys.",0,[[["self"]],["usize"]]],[11,"is_empty","","Returns `true` if the map is empty.",0,[[["self"]],["bool"]]],[11,"clear","","Empties this map.",0,[[["self"]]]],[11,"contains_key","","Returns `true` if the key is contained in the map.",0,[[["self"],["k"]],["bool"]]],[11,"get","","Returns values associated with the given key.",0,[[["self"],["k"]],["entryvalues"]]],[11,"get_mut","","Returns mutable references associated with the given key.",0,[[["self"],["k"]],["entryvaluesmut"]]],[11,"add","","Adds a value for a given key to the multi map.",0,[[["self"],["k"],["v"]],["entryvaluesmut"]]],[11,"set","","Sets the value associated with the given key.",0,[[["self"],["k"],["v"]],["vec"]]],[11,"pop","","Remove and return the element last inserted.",0,[[["self"]],["option"]]],[11,"truncate","","Keeps the first `to_len` inserted headers, removing the…",0,[[["self"],["usize"]]]],[11,"remove_all","","removes all values associated with the given key",0,[[["self"],["k"]],["bool"]]],[11,"retain","","retains only key value pairs for which `func` returns true",0,[[["fn"],["self"]]]],[11,"empty","","",4,[[],["self"]]],[11,"empty","","",5,[[],["self"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"into_iter","","",6,[[],["i"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,[[["self"],["t"]]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"into_iter","","",7,[[],["i"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"into_iter","","",8,[[],["i"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,[[["self"],["t"]]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"into_iter","","",2,[[],["i"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"into_iter","","",3,[[],["i"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[],["u"]]],[11,"into_iter","","",9,[[],["i"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,[[["self"],["t"]]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[],["u"]]],[11,"into_iter","","",10,[[],["i"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[],["u"]]],[11,"into_iter","","",11,[[],["i"]]],[11,"to_owned","","",11,[[["self"]],["t"]]],[11,"clone_into","","",11,[[["self"],["t"]]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"try_into","","",11,[[],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"type_id","","",11,[[["self"]],["typeid"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[],["u"]]],[11,"into_iter","","",12,[[],["i"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"try_into","","",12,[[],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"type_id","","",12,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"into_iter","","",0,[[],["i"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"into_iter","","",4,[[],["i"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,[[["self"],["t"]]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"into_iter","","",5,[[],["i"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"into","","",13,[[],["u"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"try_into","","",13,[[],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"type_id","","",13,[[["self"]],["typeid"]]],[11,"from","","",6,[[["itermut"]],["self"]]],[11,"from","","",11,[[["valuesmut"]],["self"]]],[11,"from","","",4,[[["entryvaluesmut"]],["self"]]],[11,"len","","",6,[[["self"]],["usize"]]],[11,"len","","",7,[[["self"]],["usize"]]],[11,"len","","",8,[[["self"]],["usize"]]],[11,"len","","",3,[[["self"]],["usize"]]],[11,"len","","",11,[[["self"]],["usize"]]],[11,"len","","",12,[[["self"]],["usize"]]],[11,"len","","",4,[[["self"]],["usize"]]],[11,"len","","",5,[[["self"]],["usize"]]],[11,"extend","","",0,[[["self"],["i"]]]],[11,"into_iter","","",0,[[]]],[11,"next","","",6,[[["self"]],["option"]]],[11,"size_hint","","",6,[[["self"]]]],[11,"next","","",7,[[["self"]],["option"]]],[11,"size_hint","","",7,[[["self"]]]],[11,"next","","",8,[[["self"]],["option"]]],[11,"size_hint","","",8,[[["self"]]]],[11,"next","","",2,[[["self"]],["option"]]],[11,"size_hint","","",2,[[["self"]]]],[11,"next","","",3,[[["self"]],["option"]]],[11,"size_hint","","",3,[[["self"]]]],[11,"next","","",9,[[["self"]],["option"]]],[11,"next","","",10,[[["self"]],["option"]]],[11,"next","","",11,[[["self"]],["option"]]],[11,"size_hint","","",11,[[["self"]]]],[11,"next","","",12,[[["self"]],["option"]]],[11,"size_hint","","",12,[[["self"]]]],[11,"next","","",4,[[["self"]],["option"]]],[11,"size_hint","","",4,[[["self"]]]],[11,"next","","",5,[[["self"]],["option"]]],[11,"size_hint","","",5,[[["self"]]]],[11,"clone","","",6,[[["self"]],["self"]]],[11,"clone","","",8,[[["self"]],["keys"]]],[11,"clone","","",2,[[["self"]],["self"]]],[11,"clone","","",9,[[["self"]],["self"]]],[11,"clone","","",11,[[["self"]],["self"]]],[11,"clone","","",0,[[["self"]],["self"]]],[11,"clone","","",4,[[["self"]],["self"]]],[11,"default","","",0,[[],["self"]]],[11,"eq","","",0,[[["self"]],["bool"]]],[11,"fmt","","",6,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",7,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",8,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",9,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",10,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",11,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",12,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",5,[[["formatter"],["self"]],["result"]]],[11,"from_iter","","",0,[[["intoiterator"]],["self"]]]],"p":[[3,"TotalOrderMultiMap"],[3,"Entry"],[3,"Group"],[3,"GroupMut"],[3,"EntryValues"],[3,"EntryValuesMut"],[3,"Iter"],[3,"IterMut"],[3,"Keys"],[3,"GroupedValues"],[3,"GroupedValuesMut"],[3,"Values"],[3,"ValuesMut"],[3,"SyncSendHelper"]]};
searchIndex["unicase"] = {"doc":"UniCase","i":[[3,"UniCase","unicase","Case Insensitive wrapper of strings.",null,null],[3,"Ascii","","Case Insensitive wrapper of Ascii strings.",null,null],[5,"eq","","Compare two string-like types for case-less equality,…",null,[[["s"]],["bool"]]],[5,"eq_ascii","","Compare two string-like types for case-less equality,…",null,[[["s"]],["bool"]]],[11,"new","","",0,[[["s"]],["ascii"]]],[11,"into_unicase","","",0,[[],["unicase"]]],[11,"into_inner","","",0,[[],["s"]]],[11,"new","","Creates a new `UniCase`.",1,[[["s"]],["unicase"]]],[11,"unicode","","Creates a new `UniCase`, skipping the ASCII check.",1,[[["s"]],["unicase"]]],[11,"ascii","","Creates a new `UniCase` which performs only ASCII case…",1,[[["s"]],["unicase"]]],[11,"is_ascii","","Return `true` if this instance will only perform ASCII…",1,[[["self"]],["bool"]]],[11,"into_inner","","Unwraps the inner value held by this `UniCase`.",1,[[],["s"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"into","","",1,[[],["u"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"to_string","","",1,[[["self"]],["string"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"into","","",0,[[],["u"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"deref","","",0,[[["self"]],["s"]]],[11,"deref","","",1,[[["self"]],["s"]]],[11,"deref_mut","","",0,[[["self"]],["s"]]],[11,"deref_mut","","",1,[[["self"]],["s"]]],[11,"from","","",1,[[["ascii"]],["self"]]],[11,"from","","",1,[[["s"]],["self"]]],[11,"from","","",1,[[["str"]],["self"]]],[11,"from","","",1,[[["string"]],["self"]]],[11,"from","","",1,[[["str"]],["self"]]],[11,"from","","",1,[[["str"],["cow",["str"]]],["self"]]],[11,"from","","",1,[[["string"]],["self"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"eq","","",0,[[["s2"],["self"]],["bool"]]],[11,"eq","","",1,[[["self"],["unicase"]],["bool"]]],[11,"cmp","","",0,[[["self"]],["ordering"]]],[11,"cmp","","",1,[[["self"]],["ordering"]]],[11,"partial_cmp","","",0,[[["self"]],[["ordering"],["option",["ordering"]]]]],[11,"partial_cmp","","",1,[[["self"]],[["ordering"],["option",["ordering"]]]]],[11,"hash","","",0,[[["self"],["h"]]]],[11,"hash","","",1,[[["self"],["h"]]]],[11,"from_str","","",0,[[["str"]],[["result",["ascii"]],["ascii"]]]],[11,"from_str","","",1,[[["str"]],[["unicase"],["result",["unicase"]]]]],[11,"as_ref","","",0,[[["self"]],["str"]]],[11,"as_ref","","",1,[[["self"]],["str"]]],[11,"into","","",1,[[],["str"]]],[11,"into","","",1,[[],["string"]]],[11,"into","","",1,[[],[["str"],["cow",["str"]]]]],[11,"clone","","",1,[[["self"]],["unicase"]]],[11,"clone","","",0,[[["self"]],["ascii"]]],[11,"default","","",0,[[],["ascii"]]],[11,"default","","",1,[[],["self"]]]],"p":[[3,"Ascii"],[3,"UniCase"]]};
searchIndex["unicode_bidi"] = {"doc":"This crate implements the [Unicode Bidirectional…","i":[[3,"ParagraphInfo","unicode_bidi","Bidi information about a single paragraph",null,null],[12,"range","","The paragraphs boundaries within the text, as byte indices.",0,null],[12,"level","","The paragraph embedding level.",0,null],[3,"InitialInfo","","Initial bidi information of the text.",null,null],[12,"text","","The text",1,null],[12,"original_classes","","The BidiClass of the character at each byte in the text.…",1,null],[12,"paragraphs","","The boundaries and level of each paragraph within the text.",1,null],[3,"BidiInfo","","Bidi information of the text.",null,null],[12,"text","","The text",2,null],[12,"original_classes","","The BidiClass of the character at each byte in the text.",2,null],[12,"levels","","The directional embedding level of each byte in the text.",2,null],[12,"paragraphs","","The boundaries and paragraph embedding level of each…",2,null],[4,"BidiClass","","Represents values of the Unicode character property…",null,null],[13,"AL","","",3,null],[13,"AN","","",3,null],[13,"B","","",3,null],[13,"BN","","",3,null],[13,"CS","","",3,null],[13,"EN","","",3,null],[13,"ES","","",3,null],[13,"ET","","",3,null],[13,"FSI","","",3,null],[13,"L","","",3,null],[13,"LRE","","",3,null],[13,"LRI","","",3,null],[13,"LRO","","",3,null],[13,"NSM","","",3,null],[13,"ON","","",3,null],[13,"PDF","","",3,null],[13,"PDI","","",3,null],[13,"R","","",3,null],[13,"RLE","","",3,null],[13,"RLI","","",3,null],[13,"RLO","","",3,null],[13,"S","","",3,null],[13,"WS","","",3,null],[5,"bidi_class","","Find the `BidiClass` of a single char.",null,[[["char"]],["bidiclass"]]],[0,"deprecated","","This module holds deprecated assets only.",null,null],[5,"visual_runs","unicode_bidi::deprecated","Find the level runs within a line and return them in…",null,[[["range",["usize"]],["usize"]],[["vec",["levelrun"]],["levelrun"]]]],[0,"format_chars","unicode_bidi","Directional Formatting Characters",null,null],[17,"ALM","unicode_bidi::format_chars","ARABIC LETTER MARK",null,null],[17,"LRM","","LEFT-TO-RIGHT MARK",null,null],[17,"RLM","","RIGHT-TO-LEFT MARK",null,null],[17,"LRI","","LEFT‑TO‑RIGHT ISOLATE",null,null],[17,"RLI","","RIGHT‑TO‑LEFT ISOLATE",null,null],[17,"FSI","","FIRST STRONG ISOLATE",null,null],[17,"PDI","","POP DIRECTIONAL ISOLATE",null,null],[17,"LRE","","LEFT-TO-RIGHT EMBEDDING",null,null],[17,"RLE","","RIGHT-TO-LEFT EMBEDDING",null,null],[17,"PDF","","POP DIRECTIONAL FORMATTING",null,null],[17,"LRO","","LEFT-TO-RIGHT OVERRIDE",null,null],[17,"RLO","","RIGHT-TO-LEFT OVERRIDE",null,null],[0,"level","unicode_bidi","Bidi Embedding Level",null,null],[3,"Level","unicode_bidi::level","Embedding Level",null,null],[4,"Error","","Errors that can occur on Level creation or mutation",null,null],[13,"OutOfRangeNumber","","Out-of-range (invalid) embedding level number.",4,null],[5,"has_rtl","","If levels has any RTL (odd) level",null,[[],["bool"]]],[17,"LTR_LEVEL","","",null,null],[17,"RTL_LEVEL","","",null,null],[17,"MAX_EXPLICIT_DEPTH","","During explicit level resolution, embedding level can go…",null,null],[17,"MAX_IMPLICIT_DEPTH","","During implicit level resolution, embedding level can go…",null,null],[11,"ltr","","New LTR level with smallest number value (0).",5,[[],["level"]]],[11,"rtl","","New RTL level with smallest number value (1).",5,[[],["level"]]],[11,"max_implicit_depth","","Maximum depth of the directional status stack during…",5,[[],["u8"]]],[11,"max_explicit_depth","","Maximum depth of the directional status stack during…",5,[[],["u8"]]],[11,"new","","Create new level, fail if number is larger than `max_depth…",5,[[["u8"]],[["result",["level","error"]],["level"],["error"]]]],[11,"new_explicit","","Create new level, fail if number is larger than `max_depth`.",5,[[["u8"]],[["result",["level","error"]],["level"],["error"]]]],[11,"number","","The level number.",5,[[["self"]],["u8"]]],[11,"is_ltr","","If this level is left-to-right.",5,[[["self"]],["bool"]]],[11,"is_rtl","","If this level is right-to-left.",5,[[["self"]],["bool"]]],[11,"raise","","Raise level by `amount`, fail if number is larger than…",5,[[["self"],["u8"]],[["result",["error"]],["error"]]]],[11,"raise_explicit","","Raise level by `amount`, fail if number is larger than…",5,[[["self"],["u8"]],[["result",["error"]],["error"]]]],[11,"lower","","Lower level by `amount`, fail if number goes below zero.",5,[[["self"],["u8"]],[["result",["error"]],["error"]]]],[11,"new_explicit_next_ltr","","The next LTR (even) level greater than this, or fail if…",5,[[["self"]],[["result",["level","error"]],["level"],["error"]]]],[11,"new_explicit_next_rtl","","The next RTL (odd) level greater than this, or fail if…",5,[[["self"]],[["result",["level","error"]],["level"],["error"]]]],[11,"new_lowest_ge_rtl","","The lowest RTL (odd) level greater than or equal to this,…",5,[[["self"]],[["result",["level","error"]],["level"],["error"]]]],[11,"bidi_class","","Generate a character type based on a level (as specified…",5,[[["self"]],["bidiclass"]]],[11,"vec","","",5,[[],[["vec",["level"]],["level"]]]],[6,"LevelRun","unicode_bidi","A maximal substring of characters with the same embedding…",null,null],[17,"UNICODE_VERSION","","The Unicode version of data",null,null],[11,"new","","Find the paragraphs and BidiClasses in a string of text.",1,[[["str"],["option",["level"]],["level"]],["initialinfo"]]],[11,"new","","Split the text into paragraphs and determine the bidi…",2,[[["str"],["option",["level"]],["level"]],["bidiinfo"]]],[11,"reordered_levels","","Re-order a line based on resolved levels and return only…",2,[[["usize"],["paragraphinfo"],["range",["usize"]],["self"]],[["vec",["level"]],["level"]]]],[11,"reordered_levels_per_char","","Re-order a line based on resolved levels and return only…",2,[[["usize"],["paragraphinfo"],["range",["usize"]],["self"]],[["vec",["level"]],["level"]]]],[11,"reorder_line","","Re-order a line based on resolved levels and return the…",2,[[["usize"],["paragraphinfo"],["range",["usize"]],["self"]],[["str"],["cow",["str"]]]]],[11,"visual_runs","","Find the level runs within a line and return them in…",2,[[["usize"],["paragraphinfo"],["range",["usize"]],["self"]]]],[11,"has_rtl","","If processed text has any computed RTL levels",2,[[["self"]],["bool"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","unicode_bidi::level","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,[[["self"],["t"]]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","Create level by number",5,[[["u8"]],["level"]]],[11,"into","","Convert to the level number",5,[[],["u8"]]],[11,"clone","","",5,[[["self"]],["level"]]],[11,"clone","unicode_bidi","",3,[[["self"]],["bidiclass"]]],[11,"cmp","unicode_bidi::level","",5,[[["level"],["self"]],["ordering"]]],[11,"eq","","",5,[[["level"],["self"]],["bool"]]],[11,"ne","","",5,[[["level"],["self"]],["bool"]]],[11,"eq","","",4,[[["error"],["self"]],["bool"]]],[11,"eq","","",5,[[["str"],["self"]],["bool"]]],[11,"eq","","",5,[[["string"],["self"]],["bool"]]],[11,"eq","unicode_bidi","",3,[[["bidiclass"],["self"]],["bool"]]],[11,"eq","","",0,[[["paragraphinfo"],["self"]],["bool"]]],[11,"ne","","",0,[[["paragraphinfo"],["self"]],["bool"]]],[11,"eq","","",1,[[["initialinfo"],["self"]],["bool"]]],[11,"ne","","",1,[[["initialinfo"],["self"]],["bool"]]],[11,"eq","","",2,[[["self"],["bidiinfo"]],["bool"]]],[11,"ne","","",2,[[["self"],["bidiinfo"]],["bool"]]],[11,"partial_cmp","unicode_bidi::level","",5,[[["level"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",5,[[["level"],["self"]],["bool"]]],[11,"le","","",5,[[["level"],["self"]],["bool"]]],[11,"gt","","",5,[[["level"],["self"]],["bool"]]],[11,"ge","","",5,[[["level"],["self"]],["bool"]]],[11,"fmt","","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","unicode_bidi","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]]],"p":[[3,"ParagraphInfo"],[3,"InitialInfo"],[3,"BidiInfo"],[4,"BidiClass"],[4,"Error"],[3,"Level"]]};
searchIndex["unicode_normalization"] = {"doc":"Unicode character composition and decomposition utilities…","i":[[3,"Decompositions","unicode_normalization","External iterator for a string decomposition's characters.",null,null],[3,"Recompositions","","External iterator for a string recomposition's characters.",null,null],[3,"StreamSafe","","UAX15-D4: This iterator keeps track of how many…",null,null],[4,"IsNormalized","","The QuickCheck algorithm can quickly determine if a text…",null,null],[13,"Yes","","The text is definitely normalized.",0,null],[13,"No","","The text is definitely not normalized.",0,null],[13,"Maybe","","The text may be normalized.",0,null],[5,"is_nfc","","Authoritatively check if a string is in NFC.",null,[[["str"]],["bool"]]],[5,"is_nfc_quick","","Quickly check if a string is in NFC, potentially returning…",null,[[["iterator"]],["isnormalized"]]],[5,"is_nfkc","","Authoritatively check if a string is in NFKC.",null,[[["str"]],["bool"]]],[5,"is_nfkc_quick","","Quickly check if a string is in NFKC.",null,[[["iterator"]],["isnormalized"]]],[5,"is_nfc_stream_safe","","Authoritatively check if a string is Stream-Safe NFC.",null,[[["str"]],["bool"]]],[5,"is_nfc_stream_safe_quick","","Quickly check if a string is Stream-Safe NFC.",null,[[["iterator"]],["isnormalized"]]],[5,"is_nfd","","Authoritatively check if a string is in NFD.",null,[[["str"]],["bool"]]],[5,"is_nfd_quick","","Quickly check if a string is in NFD.",null,[[["iterator"]],["isnormalized"]]],[5,"is_nfkd","","Authoritatively check if a string is in NFKD.",null,[[["str"]],["bool"]]],[5,"is_nfkd_quick","","Quickly check if a string is in NFKD.",null,[[["iterator"]],["isnormalized"]]],[5,"is_nfd_stream_safe","","Authoritatively check if a string is Stream-Safe NFD.",null,[[["str"]],["bool"]]],[5,"is_nfd_stream_safe_quick","","Quickly check if a string is Stream-Safe NFD.",null,[[["iterator"]],["isnormalized"]]],[0,"char","","Methods for composing and decomposing characters.",null,null],[5,"decompose_canonical","unicode_normalization::char","Compute canonical Unicode decomposition for character. See…",null,[[["char"],["f"]]]],[5,"decompose_compatible","","Compute canonical or compatible Unicode decomposition for…",null,[[["char"],["fnmut"]]]],[5,"compose","","Compose two characters into a single character, if…",null,[[["char"]],[["option",["char"]],["char"]]]],[5,"canonical_combining_class","","Look up the canonical combining class for a codepoint.",null,[[["char"]],["u8"]]],[5,"is_combining_mark","","Return whether the given character is a combining mark…",null,[[["char"]],["bool"]]],[17,"UNICODE_VERSION","unicode_normalization","",null,null],[8,"UnicodeNormalization","","Methods for iterating over strings while applying Unicode…",null,null],[10,"nfd","","Returns an iterator over the string in Unicode…",1,[[],["decompositions"]]],[10,"nfkd","","Returns an iterator over the string in Unicode…",1,[[],["decompositions"]]],[10,"nfc","","An Iterator over the string in Unicode Normalization Form…",1,[[],["recompositions"]]],[10,"nfkc","","An Iterator over the string in Unicode Normalization Form…",1,[[],["recompositions"]]],[10,"stream_safe","","An Iterator over the string with Conjoining Grapheme…",1,[[],["streamsafe"]]],[11,"nfd","","",2,[[],["decompositions"]]],[11,"nfkd","","",2,[[],["decompositions"]]],[11,"nfc","","",2,[[],["recompositions"]]],[11,"nfkc","","",2,[[],["recompositions"]]],[11,"stream_safe","","",2,[[],["streamsafe"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"into_iter","","",2,[[],["i"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"to_string","","",2,[[["self"]],["string"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"nfd","","",3,[[],["decompositions"]]],[11,"nfkd","","",3,[[],["decompositions"]]],[11,"nfc","","",3,[[],["recompositions"]]],[11,"nfkc","","",3,[[],["recompositions"]]],[11,"stream_safe","","",3,[[],["streamsafe"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"into_iter","","",3,[[],["i"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"to_string","","",3,[[["self"]],["string"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"nfd","","",4,[[],["decompositions"]]],[11,"nfkd","","",4,[[],["decompositions"]]],[11,"nfc","","",4,[[],["recompositions"]]],[11,"nfkc","","",4,[[],["recompositions"]]],[11,"stream_safe","","",4,[[],["streamsafe"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"into_iter","","",4,[[],["i"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"next","","",2,[[["self"]],[["option",["char"]],["char"]]]],[11,"size_hint","","",2,[[["self"]]]],[11,"next","","",3,[[["self"]],[["option",["char"]],["char"]]]],[11,"next","","",4,[[["self"]],[["option",["char"]],["char"]]]],[11,"clone","","",2,[[["self"]],["decompositions"]]],[11,"clone","","",3,[[["self"]],["recompositions"]]],[11,"eq","","",0,[[["isnormalized"],["self"]],["bool"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]]],"p":[[4,"IsNormalized"],[8,"UnicodeNormalization"],[3,"Decompositions"],[3,"Recompositions"],[3,"StreamSafe"]]};
searchIndex["unicode_width"] = {"doc":"Determine displayed width of `char` and `str` types…","i":[[17,"UNICODE_VERSION","unicode_width","The version of Unicode that this version of unicode-width…",null,null],[8,"UnicodeWidthChar","","Methods for determining displayed width of Unicode…",null,null],[10,"width","","Returns the character's displayed width in columns, or…",0,[[],[["option",["usize"]],["usize"]]]],[10,"width_cjk","","Returns the character's displayed width in columns, or…",0,[[],[["option",["usize"]],["usize"]]]],[8,"UnicodeWidthStr","","Methods for determining displayed width of Unicode strings.",null,null],[10,"width","","Returns the string's displayed width in columns.",1,[[["self"]],["usize"]]],[10,"width_cjk","","Returns the string's displayed width in columns.",1,[[["self"]],["usize"]]]],"p":[[8,"UnicodeWidthChar"],[8,"UnicodeWidthStr"]]};
searchIndex["unicode_xid"] = {"doc":"Determine if a `char` is a valid identifier for a parser…","i":[[17,"UNICODE_VERSION","unicode_xid","The version of Unicode that this version of unicode-xid is…",null,null],[8,"UnicodeXID","","Methods for determining if a character is a valid…",null,null],[10,"is_xid_start","","Returns whether the specified character satisfies the…",0,[[],["bool"]]],[10,"is_xid_continue","","Returns whether the specified `char` satisfies the…",0,[[],["bool"]]]],"p":[[8,"UnicodeXID"]]};
searchIndex["uuid"] = {"doc":"Generate and parse UUIDs.","i":[[3,"Builder","uuid","A builder struct for creating a UUID.",null,null],[3,"Error","","A general error that can occur when working with UUIDs.",null,null],[3,"Uuid","","A Universally Unique Identifier (UUID).",null,null],[4,"Version","","The version of the UUID, denoting the generating algorithm.",null,null],[13,"Nil","","Special case for `nil` UUID.",0,null],[13,"Mac","","Version 1: MAC address.",0,null],[13,"Dce","","Version 2: DCE Security.",0,null],[13,"Md5","","Version 3: MD5 hash.",0,null],[13,"Random","","Version 4: Random.",0,null],[13,"Sha1","","Version 5: SHA-1 hash.",0,null],[4,"Variant","","The reserved variants of UUIDs.",null,null],[13,"NCS","","Reserved by the NCS for backward compatibility.",1,null],[13,"RFC4122","","As described in the RFC4122 Specification (default).",1,null],[13,"Microsoft","","Reserved by Microsoft for backward compatibility.",1,null],[13,"Future","","Reserved for future expansion.",1,null],[11,"nil","","The 'nil UUID'.",2,[[],["self"]]],[11,"from_fields","","Creates a UUID from four field values in big-endian order.",2,[[["u16"],["u32"]],[["error"],["uuid"],["result",["uuid","error"]]]]],[11,"from_fields_le","","Creates a UUID from four field values in little-endian…",2,[[["u16"],["u32"]],[["error"],["uuid"],["result",["uuid","error"]]]]],[11,"from_u128","","Creates a UUID from a 128bit value in big-endian order.",2,[[["u128"]],["self"]]],[11,"from_u128_le","","Creates a UUID from a 128bit value in little-endian order.",2,[[["u128"]],["self"]]],[11,"from_slice","","Creates a UUID using the supplied big-endian bytes.",2,[[],[["error"],["uuid"],["result",["uuid","error"]]]]],[11,"from_bytes","","Creates a UUID using the supplied big-endian bytes.",2,[[["bytes"]],["uuid"]]],[11,"from_bytes","","Creates a `Builder` using the supplied big-endian bytes.",3,[[["bytes"]],["self"]]],[11,"from_slice","","Creates a `Builder` using the supplied big-endian bytes.",3,[[],[["error"],["result",["error"]]]]],[11,"from_fields","","Creates a `Builder` from four big-endian field values.",3,[[["u16"],["u32"]],[["error"],["result",["error"]]]]],[11,"from_u128","","Creates a `Builder` from a big-endian 128bit value.",3,[[["u128"]],["self"]]],[11,"nil","","Creates a `Builder` with an initial [`Uuid::nil`].",3,[[],["self"]]],[11,"set_variant","","Specifies the variant of the UUID.",3,[[["self"],["variant"]],["self"]]],[11,"set_version","","Specifies the version number of the UUID.",3,[[["version"],["self"]],["self"]]],[11,"build","","Hands over the internal constructed [`Uuid`].",3,[[["self"]],["uuid"]]],[11,"parse_str","","Parses a `Uuid` from a string of hexadecimal digits with…",2,[[["str"]],[["error"],["uuid"],["result",["uuid","error"]]]]],[0,"adapter","","Adapters for various formats for UUIDs",null,null],[3,"Hyphenated","uuid::adapter","An adaptor for formatting an [`Uuid`] as a hyphenated…",null,null],[3,"HyphenatedRef","","An adaptor for formatting an [`Uuid`] as a hyphenated…",null,null],[3,"Simple","","An adaptor for formatting an [`Uuid`] as a simple string.",null,null],[3,"SimpleRef","","An adaptor for formatting an [`Uuid`] as a simple string.",null,null],[3,"Urn","","An adaptor for formatting an [`Uuid`] as a URN string.",null,null],[3,"UrnRef","","An adaptor for formatting an [`Uuid`] as a URN string.",null,null],[11,"to_hyphenated","uuid","Get a [`Hyphenated`] formatter.",2,[[],["hyphenated"]]],[11,"to_hyphenated_ref","","Get a borrowed [`HyphenatedRef`] formatter.",2,[[["self"]],["hyphenatedref"]]],[11,"to_simple","","Get a [`Simple`] formatter.",2,[[],["simple"]]],[11,"to_simple_ref","","Get a borrowed [`SimpleRef`] formatter.",2,[[["self"]],["simpleref"]]],[11,"to_urn","","Get a [`Urn`] formatter.",2,[[],["urn"]]],[11,"to_urn_ref","","Get a borrowed [`UrnRef`] formatter.",2,[[["self"]],["urnref"]]],[18,"LENGTH","uuid::adapter","The length of a hyphenated [`Uuid`] string.",4,null],[11,"from_uuid","","Creates a [`Hyphenated`] from a [`Uuid`].",4,[[["uuid"]],["self"]]],[11,"encode_lower","","Writes the [`Uuid`] as a lower-case hyphenated string to…",4,[[["self"]],["str"]]],[11,"encode_upper","","Writes the [`Uuid`] as an upper-case hyphenated string to…",4,[[["self"]],["str"]]],[18,"LENGTH","","The length of a hyphenated [`Uuid`] string.",5,null],[11,"from_uuid_ref","","Creates a [`HyphenatedRef`] from a [`Uuid`] reference.",5,[[["uuid"]],["self"]]],[11,"encode_lower","","Writes the [`Uuid`] as a lower-case hyphenated string to…",5,[[["self"]],["str"]]],[11,"encode_upper","","Writes the [`Uuid`] as an upper-case hyphenated string to…",5,[[["self"]],["str"]]],[18,"LENGTH","","The length of a simple [`Uuid`] string.",6,null],[11,"from_uuid","","Creates a [`Simple`] from a [`Uuid`].",6,[[["uuid"]],["self"]]],[11,"encode_lower","","Writes the [`Uuid`] as a lower-case simple string to…",6,[[["self"]],["str"]]],[11,"encode_upper","","Writes the [`Uuid`] as an upper-case simple string to…",6,[[["self"]],["str"]]],[18,"LENGTH","","The length of a simple [`Uuid`] string.",7,null],[11,"from_uuid_ref","","Creates a [`SimpleRef`] from a [`Uuid`] reference.",7,[[["uuid"]],["self"]]],[11,"encode_lower","","Writes the [`Uuid`] as a lower-case simple string to…",7,[[["self"]],["str"]]],[11,"encode_upper","","Writes the [`Uuid`] as an upper-case simple string to…",7,[[["self"]],["str"]]],[18,"LENGTH","","The length of a URN [`Uuid`] string.",8,null],[11,"from_uuid","","Creates a [`Urn`] from a [`Uuid`].",8,[[["uuid"]],["self"]]],[11,"encode_lower","","Writes the [`Uuid`] as a lower-case URN string to…",8,[[["self"]],["str"]]],[11,"encode_upper","","Writes the [`Uuid`] as an upper-case URN string to…",8,[[["self"]],["str"]]],[18,"LENGTH","","The length of a URN [`Uuid`] string.",9,null],[11,"from_uuid_ref","","Creates a [`UrnRef`] from a [`Uuid`] reference.",9,[[["uuid"]],["self"]]],[11,"encode_lower","","Writes the [`Uuid`] as a lower-case URN string to…",9,[[["self"]],["str"]]],[11,"encode_upper","","Writes the [`Uuid`] as an upper-case URN string to…",9,[[["self"]],["str"]]],[11,"new_v4","uuid","Creates a random UUID.",2,[[],["self"]]],[6,"Bytes","","A 128-bit (16 byte) buffer containing the ID.",null,null],[18,"NAMESPACE_DNS","","UUID namespace for Domain Name System (DNS).",2,null],[18,"NAMESPACE_OID","","UUID namespace for ISO Object Identifiers (OIDs).",2,null],[18,"NAMESPACE_URL","","UUID namespace for Uniform Resource Locators (URLs).",2,null],[18,"NAMESPACE_X500","","UUID namespace for X.500 Distinguished Names (DNs).",2,null],[11,"get_variant","","Returns the variant of the UUID structure.",2,[[["self"]],[["variant"],["option",["variant"]]]]],[11,"get_version_num","","Returns the version number of the UUID.",2,[[["self"]],["usize"]]],[11,"get_version","","Returns the version of the UUID.",2,[[["self"]],[["option",["version"]],["version"]]]],[11,"as_fields","","Returns the four field values of the UUID in big-endian…",2,[[["self"]]]],[11,"to_fields_le","","Returns the four field values of the UUID in little-endian…",2,[[["self"]]]],[11,"as_u128","","Returns a 128bit value containing the UUID data.",2,[[["self"]],["u128"]]],[11,"to_u128_le","","Returns a 128bit little-endian value containing the UUID…",2,[[["self"]],["u128"]]],[11,"as_bytes","","Returns an array of 16 octets containing the UUID data.",2,[[["self"]],["bytes"]]],[11,"is_nil","","Tests if the UUID is nil.",2,[[["self"]],["bool"]]],[11,"encode_buffer","","A buffer that can be used for `encode_...` calls, that is…",2,[[]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"into","","",3,[[],["u"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"vzip","","",3,[[],["v"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"into","","",10,[[],["u"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,[[["self"],["t"]]]],[11,"to_string","","",10,[[["self"]],["string"]]],[11,"vzip","","",10,[[],["v"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"into","","",2,[[],["u"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"to_string","","",2,[[["self"]],["string"]]],[11,"vzip","","",2,[[],["v"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"into","","",0,[[],["u"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"vzip","","",0,[[],["v"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"into","","",1,[[],["u"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"to_string","","",1,[[["self"]],["string"]]],[11,"vzip","","",1,[[],["v"]]],[11,"from","uuid::adapter","",4,[[["t"]],["t"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"into","","",4,[[],["u"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,[[["self"],["t"]]]],[11,"to_string","","",4,[[["self"]],["string"]]],[11,"vzip","","",4,[[],["v"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"into","","",5,[[],["u"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,[[["self"],["t"]]]],[11,"to_string","","",5,[[["self"]],["string"]]],[11,"vzip","","",5,[[],["v"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"into","","",6,[[],["u"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,[[["self"],["t"]]]],[11,"to_string","","",6,[[["self"]],["string"]]],[11,"vzip","","",6,[[],["v"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"into","","",7,[[],["u"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,[[["self"],["t"]]]],[11,"to_string","","",7,[[["self"]],["string"]]],[11,"vzip","","",7,[[],["v"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"into","","",8,[[],["u"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,[[["self"],["t"]]]],[11,"to_string","","",8,[[["self"]],["string"]]],[11,"vzip","","",8,[[],["v"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"into","","",9,[[],["u"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,[[["self"],["t"]]]],[11,"to_string","","",9,[[["self"]],["string"]]],[11,"vzip","","",9,[[],["v"]]],[11,"from","","",4,[[["uuid"]],["self"]]],[11,"from","","",5,[[["uuid"]],["self"]]],[11,"from","","",6,[[["uuid"]],["self"]]],[11,"from","","",7,[[["uuid"]],["self"]]],[11,"from","","",8,[[["uuid"]],["self"]]],[11,"from","","",9,[[["uuid"]],["self"]]],[11,"fmt","uuid","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",10,[[["formatter"],["self"]],["result"]]],[11,"fmt","uuid::adapter","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",6,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",7,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",8,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",9,[[["formatter"],["self"]],["result"]]],[11,"fmt","uuid","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",10,[[["self"],["formatter"]],["result"]]],[11,"fmt","uuid::adapter","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",9,[[["self"],["formatter"]],["result"]]],[11,"fmt","uuid","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"eq","","",10,[[["self"],["error"]],["bool"]]],[11,"ne","","",10,[[["self"],["error"]],["bool"]]],[11,"eq","uuid::adapter","",4,[[["hyphenated"],["self"]],["bool"]]],[11,"ne","","",4,[[["hyphenated"],["self"]],["bool"]]],[11,"eq","","",5,[[["self"],["hyphenatedref"]],["bool"]]],[11,"ne","","",5,[[["self"],["hyphenatedref"]],["bool"]]],[11,"eq","","",6,[[["self"],["simple"]],["bool"]]],[11,"ne","","",6,[[["self"],["simple"]],["bool"]]],[11,"eq","","",7,[[["self"],["simpleref"]],["bool"]]],[11,"ne","","",7,[[["self"],["simpleref"]],["bool"]]],[11,"eq","","",8,[[["self"],["urn"]],["bool"]]],[11,"ne","","",8,[[["self"],["urn"]],["bool"]]],[11,"eq","","",9,[[["urnref"],["self"]],["bool"]]],[11,"ne","","",9,[[["urnref"],["self"]],["bool"]]],[11,"eq","uuid","",0,[[["version"],["self"]],["bool"]]],[11,"eq","","",1,[[["self"],["variant"]],["bool"]]],[11,"eq","","",2,[[["uuid"],["self"]],["bool"]]],[11,"ne","","",2,[[["uuid"],["self"]],["bool"]]],[11,"cmp","uuid::adapter","",4,[[["hyphenated"],["self"]],["ordering"]]],[11,"cmp","","",5,[[["self"],["hyphenatedref"]],["ordering"]]],[11,"cmp","","",6,[[["self"],["simple"]],["ordering"]]],[11,"cmp","","",7,[[["self"],["simpleref"]],["ordering"]]],[11,"cmp","","",8,[[["self"],["urn"]],["ordering"]]],[11,"cmp","","",9,[[["urnref"],["self"]],["ordering"]]],[11,"cmp","uuid","",2,[[["uuid"],["self"]],["ordering"]]],[11,"partial_cmp","uuid::adapter","",4,[[["hyphenated"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",4,[[["hyphenated"],["self"]],["bool"]]],[11,"le","","",4,[[["hyphenated"],["self"]],["bool"]]],[11,"gt","","",4,[[["hyphenated"],["self"]],["bool"]]],[11,"ge","","",4,[[["hyphenated"],["self"]],["bool"]]],[11,"partial_cmp","","",5,[[["self"],["hyphenatedref"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",5,[[["self"],["hyphenatedref"]],["bool"]]],[11,"le","","",5,[[["self"],["hyphenatedref"]],["bool"]]],[11,"gt","","",5,[[["self"],["hyphenatedref"]],["bool"]]],[11,"ge","","",5,[[["self"],["hyphenatedref"]],["bool"]]],[11,"partial_cmp","","",6,[[["self"],["simple"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",6,[[["self"],["simple"]],["bool"]]],[11,"le","","",6,[[["self"],["simple"]],["bool"]]],[11,"gt","","",6,[[["self"],["simple"]],["bool"]]],[11,"ge","","",6,[[["self"],["simple"]],["bool"]]],[11,"partial_cmp","","",7,[[["self"],["simpleref"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",7,[[["self"],["simpleref"]],["bool"]]],[11,"le","","",7,[[["self"],["simpleref"]],["bool"]]],[11,"gt","","",7,[[["self"],["simpleref"]],["bool"]]],[11,"ge","","",7,[[["self"],["simpleref"]],["bool"]]],[11,"partial_cmp","","",8,[[["self"],["urn"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",8,[[["self"],["urn"]],["bool"]]],[11,"le","","",8,[[["self"],["urn"]],["bool"]]],[11,"gt","","",8,[[["self"],["urn"]],["bool"]]],[11,"ge","","",8,[[["self"],["urn"]],["bool"]]],[11,"partial_cmp","","",9,[[["urnref"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",9,[[["urnref"],["self"]],["bool"]]],[11,"le","","",9,[[["urnref"],["self"]],["bool"]]],[11,"gt","","",9,[[["urnref"],["self"]],["bool"]]],[11,"ge","","",9,[[["urnref"],["self"]],["bool"]]],[11,"partial_cmp","uuid","",2,[[["uuid"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",2,[[["uuid"],["self"]],["bool"]]],[11,"le","","",2,[[["uuid"],["self"]],["bool"]]],[11,"gt","","",2,[[["uuid"],["self"]],["bool"]]],[11,"ge","","",2,[[["uuid"],["self"]],["bool"]]],[11,"hash","","",10,[[["self"],["__h"]]]],[11,"hash","uuid::adapter","",4,[[["self"],["__h"]]]],[11,"hash","","",5,[[["self"],["__h"]]]],[11,"hash","","",6,[[["self"],["__h"]]]],[11,"hash","","",7,[[["self"],["__h"]]]],[11,"hash","","",8,[[["self"],["__h"]]]],[11,"hash","","",9,[[["self"],["__h"]]]],[11,"hash","uuid","",2,[[["self"],["__h"]]]],[11,"from_str","","",2,[[["str"]],["result"]]],[11,"fmt","uuid::adapter","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",9,[[["self"],["formatter"]],["result"]]],[11,"fmt","uuid","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","uuid::adapter","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",9,[[["self"],["formatter"]],["result"]]],[11,"fmt","uuid","",2,[[["self"],["formatter"]],["result"]]],[11,"clone","","",10,[[["self"]],["error"]]],[11,"clone","uuid::adapter","",4,[[["self"]],["hyphenated"]]],[11,"clone","","",5,[[["self"]],["hyphenatedref"]]],[11,"clone","","",6,[[["self"]],["simple"]]],[11,"clone","","",7,[[["self"]],["simpleref"]]],[11,"clone","","",8,[[["self"]],["urn"]]],[11,"clone","","",9,[[["self"]],["urnref"]]],[11,"clone","uuid","",0,[[["self"]],["version"]]],[11,"clone","","",1,[[["self"]],["variant"]]],[11,"clone","","",2,[[["self"]],["uuid"]]],[11,"default","uuid::adapter","",4,[[],["hyphenated"]]],[11,"default","","",6,[[],["simple"]]],[11,"default","","",8,[[],["urn"]]],[11,"default","uuid","",2,[[],["self"]]],[11,"source","","",10,[[["self"]],[["option",["error"]],["error"]]]]],"p":[[4,"Version"],[4,"Variant"],[3,"Uuid"],[3,"Builder"],[3,"Hyphenated"],[3,"HyphenatedRef"],[3,"Simple"],[3,"SimpleRef"],[3,"Urn"],[3,"UrnRef"],[3,"Error"]]};
searchIndex["vec1"] = {"doc":"This crate provides a `Vec` wrapper (`Vec1`) which…","i":[[3,"Size0Error","vec1","Error returned by operations which would cause `Vec1` to…",null,null],[3,"Vec1","","`std::vec::Vec` wrapper which guarantees to have at least…",null,null],[3,"Splice","","",null,null],[11,"new","","Creates a new `Vec1` instance containing a single element.",0,[[["t"]],["self"]]],[11,"from_vec","","Tries to create a `Vec1<T>` from a `Vec<T>`.",0,[[["vec"]],[["vec"],["stdresult",["vec"]]]]],[11,"try_from_vec","","Tries to create a `Vec1<T>` from a normal `Vec<T>`.",0,[[["vec"]],[["stdresult",["size0error"]],["size0error"]]]],[11,"with_capacity","","Creates a new `Vec1` with a given capacity and a given…",0,[[["t"],["usize"]],["self"]]],[11,"into_vec","","Turns this `Vec1` into a `Vec`.",0,[[],["vec"]]],[11,"mapped","","Create a new `Vec1` by consuming `self` and mapping each…",0,[[["f"]],["vec1"]]],[11,"mapped_ref","","Create a new `Vec1` by mapping references to the elements…",0,[[["self"],["f"]],["vec1"]]],[11,"mapped_mut","","Create a new `Vec1` by mapping mutable references to the…",0,[[["self"],["f"]],["vec1"]]],[11,"try_mapped","","Create a new `Vec1` by consuming `self` and mapping each…",0,[[["f"]],[["vec1"],["result",["vec1"]]]]],[11,"try_mapped_ref","","Create a new `Vec1` by mapping references to the elements…",0,[[["self"],["f"]],[["vec1"],["result",["vec1"]]]]],[11,"try_mapped_mut","","Create a new `Vec1` by mapping mutable references to the…",0,[[["self"],["f"]],[["vec1"],["result",["vec1"]]]]],[11,"last","","Returns a reference to the last element.",0,[[["self"]],["t"]]],[11,"last_mut","","Returns a mutable reference to the last element.",0,[[["self"]],["t"]]],[11,"first","","Returns a reference to the first element.",0,[[["self"]],["t"]]],[11,"first_mut","","Returns a mutable reference to the first element.",0,[[["self"]],["t"]]],[11,"try_truncate","","Truncates the vec1 to given length.",0,[[["self"],["usize"]],[["size0error"],["stdresult",["size0error"]]]]],[11,"try_swap_remove","","Calls `swap_remove` on the inner vec if length >= 2.",0,[[["self"],["usize"]],[["size0error"],["stdresult",["size0error"]]]]],[11,"try_remove","","Calls `remove` on the inner vec if length >= 2.",0,[[["self"],["usize"]],[["size0error"],["stdresult",["size0error"]]]]],[11,"try_split_off","","Calls `split_of` on the inner vec if both resulting parts…",0,[[["self"],["usize"]],[["stdresult",["vec1","size0error"]],["vec1"],["size0error"]]]],[11,"dedup_by_key","","Calls `dedup_by_key` on the inner vec.",0,[[["self"],["f"]]]],[11,"dedup_by","","Calls `dedup_by_key` on the inner vec.",0,[[["self"],["f"]]]],[11,"try_pop","","Tries to remove the last element from the `Vec1`.",0,[[["self"]],[["size0error"],["stdresult",["size0error"]]]]],[11,"as_vec","","Return a reference to the underlying `Vec`.",0,[[["self"]],["vec"]]],[11,"splice","","Calls `splice` on the underlying vec if it will not…",0,[[["self"],["i"],["r"]],[["stdresult",["splice","size0error"]],["splice"],["size0error"]]]],[11,"to_ascii_uppercase","","Works like `&[u8].to_ascii_uppercase()` but returns a…",0,[[["self"]],[["u8"],["vec1",["u8"]]]]],[11,"to_ascii_lowercase","","Works like `&[u8].to_ascii_lowercase()` but returns a…",0,[[["self"]],[["u8"],["vec1",["u8"]]]]],[11,"reserve","","",0,[[["self"],["usize"]]]],[11,"reserve_exact","","",0,[[["self"],["usize"]]]],[11,"shrink_to_fit","","",0,[[["self"]]]],[11,"as_mut_slice","","",0,[[["self"]]]],[11,"push","","",0,[[["self"],["t"]]]],[11,"append","","",0,[[["vec"],["self"]]]],[11,"insert","","",0,[[["self"],["usize"],["t"]]]],[11,"len","","",0,[[["self"]],["usize"]]],[11,"capacity","","",0,[[["self"]],["usize"]]],[11,"as_slice","","",0,[[["self"]]]],[11,"try_resize","","Calls `resize` on the underlying `Vec` if `new_len` >= 1.",0,[[["self"],["usize"],["t"]],[["size0error"],["stdresult",["size0error"]]]]],[11,"extend_from_slice","","",0,[[["self"]]]],[11,"dedub","","",0,[[["self"]]]],[11,"dedup","","",0,[[["self"]]]],[14,"vec1","","A macro similar to `vec!` to create a `Vec1`.",null,null],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"to_string","","",1,[[["self"]],["string"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"into_iter","","",0,[[],["i"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"into_iter","","",2,[[],["i"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"as_mut","","",0,[[["self"]]]],[11,"as_mut","","",0,[[["self"]],["vec1"]]],[11,"as_ref","","",0,[[["self"]]]],[11,"as_ref","","",0,[[["self"]],["vec"]]],[11,"as_ref","","",0,[[["self"]],["vec1"]]],[11,"into","","",0,[[],["vec"]]],[11,"into","","",0,[[],["rc"]]],[11,"into","","",0,[[],["arc"]]],[11,"into","","",0,[[],["box"]]],[11,"into","","",0,[[],["vecdeque"]]],[11,"next_back","","",2,[[["self"]],["option"]]],[11,"extend","","",0,[[["self"],["i"]]]],[11,"extend","","",0,[[["self"],["i"]]]],[11,"into_iter","","",0,[[]]],[11,"next","","",2,[[["self"]],["option"]]],[11,"size_hint","","",2,[[["self"]]]],[11,"clone","","",1,[[["self"]],["size0error"]]],[11,"clone","","",0,[[["self"]],["vec1"]]],[11,"default","","",0,[[],["self"]]],[11,"cmp","","",0,[[["vec1"],["self"]],["ordering"]]],[11,"eq","","",1,[[["self"],["size0error"]],["bool"]]],[11,"eq","","",0,[[["vec1"],["self"]],["bool"]]],[11,"eq","","",0,[[["b"],["self"]],["bool"]]],[11,"partial_cmp","","",0,[[["vec1"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",0,[[["vec1"],["self"]],["bool"]]],[11,"le","","",0,[[["vec1"],["self"]],["bool"]]],[11,"gt","","",0,[[["vec1"],["self"]],["bool"]]],[11,"ge","","",0,[[["vec1"],["self"]],["bool"]]],[11,"deref","","",0,[[["self"]]]],[11,"deref_mut","","",0,[[["self"]]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"index","","",0,[[["self"],["r"]],["o"]]],[11,"index_mut","","",0,[[["self"],["r"]]]],[11,"hash","","",1,[[["self"],["__h"]]]],[11,"hash","","",0,[[["self"],["__h"]]]],[11,"try_from","","",0,[[["vec"]],["stdresult"]]],[11,"try_from","","",0,[[["box"]],["stdresult"]]],[11,"try_from","","",0,[[["binaryheap"]],["stdresult"]]],[11,"try_from","","",0,[[["string"]],["stdresult"]]],[11,"try_from","","",0,[[["str"]],["stdresult"]]],[11,"try_from","","",0,[[],["stdresult"]]],[11,"try_from","","",0,[[],["stdresult"]]],[11,"try_from","","",0,[[["vecdeque"]],["stdresult"]]],[11,"try_from","","Like `Vec`'s `From<CString>` this will treat the `'\\0'` as…",0,[[["cstring"]],["stdresult"]]],[11,"borrow","","",0,[[["self"]]]],[11,"borrow","","",0,[[["self"]],["vec"]]],[11,"borrow_mut","","",0,[[["self"]]]]],"p":[[3,"Vec1"],[3,"Size0Error"],[3,"Splice"]]};
searchIndex["vec_drain_where"] = {"doc":"Provides an alternative implementation for…","i":[[3,"VecDrainWhere","vec_drain_where","Iterator for draining a vector conditionally.",null,null],[8,"VecDrainWhereExt","","Ext. trait adding `e_drain_where` to `Vec`",null,null],[10,"e_drain_where","","Drains all elements from the vector where the predicate is…",0,[[["self"],["f"]],["vecdrainwhere"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"into_iter","","",1,[[],["i"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"drop","","If the iterator was run to completion this will set the…",1,[[["self"]]]],[11,"next","","",1,[[["self"]],["option"]]],[11,"size_hint","","",1,[[["self"]]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]]],"p":[[8,"VecDrainWhereExt"],[3,"VecDrainWhere"]]};
searchIndex["vec_map"] = {"doc":"A simple map based on a vector for small integer keys.…","i":[[3,"VecMap","vec_map","A map optimized for small integer keys.",null,null],[3,"VacantEntry","","A vacant Entry.",null,null],[3,"OccupiedEntry","","An occupied Entry.",null,null],[3,"Iter","","An iterator over the key-value pairs of a map.",null,null],[3,"IterMut","","An iterator over the key-value pairs of a map, with the…",null,null],[3,"Keys","","An iterator over the keys of a map.",null,null],[3,"Values","","An iterator over the values of a map.",null,null],[3,"ValuesMut","","An iterator over the values of a map.",null,null],[3,"IntoIter","","A consuming iterator over the key-value pairs of a map.",null,null],[3,"Drain","","A draining iterator over the key-value pairs of a map.",null,null],[4,"Entry","","A view into a single entry in a map, which may either be…",null,null],[13,"Vacant","","A vacant Entry",0,null],[13,"Occupied","","An occupied Entry",0,null],[11,"new","","Creates an empty `VecMap`.",1,[[],["self"]]],[11,"with_capacity","","Creates an empty `VecMap` with space for at least…",1,[[["usize"]],["self"]]],[11,"capacity","","Returns the number of elements the `VecMap` can hold…",1,[[["self"]],["usize"]]],[11,"reserve_len","","Reserves capacity for the given `VecMap` to contain `len`…",1,[[["self"],["usize"]]]],[11,"reserve_len_exact","","Reserves the minimum capacity for the given `VecMap` to…",1,[[["self"],["usize"]]]],[11,"shrink_to_fit","","Trims the `VecMap` of any excess capacity.",1,[[["self"]]]],[11,"keys","","Returns an iterator visiting all keys in ascending order…",1,[[["self"]],["keys"]]],[11,"values","","Returns an iterator visiting all values in ascending order…",1,[[["self"]],["values"]]],[11,"values_mut","","Returns an iterator visiting all values in ascending order…",1,[[["self"]],["valuesmut"]]],[11,"iter","","Returns an iterator visiting all key-value pairs in…",1,[[["self"]],["iter"]]],[11,"iter_mut","","Returns an iterator visiting all key-value pairs in…",1,[[["self"]],["itermut"]]],[11,"append","","Moves all elements from `other` into the map while…",1,[[["self"]]]],[11,"split_off","","Splits the collection into two at the given key.",1,[[["self"],["usize"]],["self"]]],[11,"drain","","Returns an iterator visiting all key-value pairs in…",1,[[["self"]],["drain"]]],[11,"len","","Returns the number of elements in the map.",1,[[["self"]],["usize"]]],[11,"is_empty","","Returns true if the map contains no elements.",1,[[["self"]],["bool"]]],[11,"clear","","Clears the map, removing all key-value pairs.",1,[[["self"]]]],[11,"get","","Returns a reference to the value corresponding to the key.",1,[[["self"],["usize"]],[["option"],["v"]]]],[11,"contains_key","","Returns true if the map contains a value for the specified…",1,[[["self"],["usize"]],["bool"]]],[11,"get_mut","","Returns a mutable reference to the value corresponding to…",1,[[["self"],["usize"]],[["option"],["v"]]]],[11,"insert","","Inserts a key-value pair into the map. If the key already…",1,[[["self"],["usize"],["v"]],["option"]]],[11,"remove","","Removes a key from the map, returning the value at the key…",1,[[["self"],["usize"]],["option"]]],[11,"entry","","Gets the given key's corresponding entry in the map for…",1,[[["self"],["usize"]],["entry"]]],[11,"retain","","Retains only the elements specified by the predicate.",1,[[["self"],["f"]]]],[11,"or_insert","","Ensures a value is in the entry by inserting the default…",0,[[["v"]],["v"]]],[11,"or_insert_with","","Ensures a value is in the entry by inserting the result of…",0,[[["fnonce"]],["v"]]],[11,"insert","","Sets the value of the entry with the VacantEntry's key,…",2,[[["v"]],["v"]]],[11,"get","","Gets a reference to the value in the entry.",3,[[["self"]],["v"]]],[11,"get_mut","","Gets a mutable reference to the value in the entry.",3,[[["self"]],["v"]]],[11,"into_mut","","Converts the entry into a mutable reference to its value.",3,[[],["v"]]],[11,"insert","","Sets the value of the entry with the OccupiedEntry's key,…",3,[[["self"],["v"]],["v"]]],[11,"remove","","Takes the value of the entry out of the map, and returns it.",3,[[],["v"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"into_iter","","",1,[[],["i"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"into_iter","","",4,[[],["i"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,[[["self"],["t"]]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"into_iter","","",5,[[],["i"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"into_iter","","",6,[[],["i"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,[[["self"],["t"]]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"into_iter","","",7,[[],["i"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,[[["self"],["t"]]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"into_iter","","",8,[[],["i"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[],["u"]]],[11,"into_iter","","",9,[[],["i"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[],["u"]]],[11,"into_iter","","",10,[[],["i"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"next_back","","",4,[[["self"]],["option"]]],[11,"next_back","","",5,[[["self"]],["option"]]],[11,"next_back","","",10,[[["self"]],["option"]]],[11,"next_back","","",6,[[["self"]],[["usize"],["option",["usize"]]]]],[11,"next_back","","",7,[[["self"]],[["option"],["v"]]]],[11,"next_back","","",8,[[["self"]],[["option"],["v"]]]],[11,"next_back","","",9,[[["self"]],["option"]]],[11,"extend","","",1,[[["intoiterator"],["self"]]]],[11,"extend","","",1,[[["intoiterator"],["self"]]]],[11,"into_iter","","Returns an iterator visiting all key-value pairs in…",1,[[],["intoiter"]]],[11,"next","","",4,[[["self"]],["option"]]],[11,"size_hint","","",4,[[["self"]]]],[11,"next","","",5,[[["self"]],["option"]]],[11,"size_hint","","",5,[[["self"]]]],[11,"next","","",10,[[["self"]],["option"]]],[11,"size_hint","","",10,[[["self"]]]],[11,"next","","",6,[[["self"]],[["usize"],["option",["usize"]]]]],[11,"size_hint","","",6,[[["self"]]]],[11,"next","","",7,[[["self"]],[["option"],["v"]]]],[11,"size_hint","","",7,[[["self"]]]],[11,"next","","",8,[[["self"]],[["option"],["v"]]]],[11,"size_hint","","",8,[[["self"]]]],[11,"next","","",9,[[["self"]],["option"]]],[11,"size_hint","","",9,[[["self"]]]],[11,"clone","","",1,[[["self"]],["self"]]],[11,"clone_from","","",1,[[["self"],["self"]]]],[11,"clone","","",4,[[["self"]],["iter"]]],[11,"clone","","",6,[[["self"]],["keys"]]],[11,"clone","","",7,[[["self"]],["values"]]],[11,"default","","",1,[[],["self"]]],[11,"cmp","","",1,[[["self"]],["ordering"]]],[11,"eq","","",1,[[["self"]],["bool"]]],[11,"partial_cmp","","",1,[[["self"]],[["ordering"],["option",["ordering"]]]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"index","","",1,[[["self"],["usize"]],["v"]]],[11,"index","","",1,[[["self"],["usize"]],["v"]]],[11,"index_mut","","",1,[[["self"],["usize"]],["v"]]],[11,"index_mut","","",1,[[["self"],["usize"]],["v"]]],[11,"hash","","",1,[[["self"],["h"]]]],[11,"from_iter","","",1,[[["intoiterator"]],["self"]]]],"p":[[4,"Entry"],[3,"VecMap"],[3,"VacantEntry"],[3,"OccupiedEntry"],[3,"Iter"],[3,"IterMut"],[3,"Keys"],[3,"Values"],[3,"ValuesMut"],[3,"IntoIter"],[3,"Drain"]]};
searchIndex["xml"] = {"doc":"This crate currently provides an almost XML…","i":[[3,"ParserConfig","xml","Parser configuration structure.",null,null],[12,"trim_whitespace","","Whether or not should whitespace in textual events be…",0,null],[12,"whitespace_to_characters","","Whether or not should whitespace be converted to…",0,null],[12,"cdata_to_characters","","Whether or not should CDATA be converted to characters.…",0,null],[12,"ignore_comments","","Whether or not should comments be omitted. Default is true.",0,null],[12,"coalesce_characters","","Whether or not should sequential `Characters` events be…",0,null],[12,"extra_entities","","A map of extra entities recognized by the parser. Default…",0,null],[12,"ignore_end_of_stream","","Whether or not the parser should ignore the end of stream.…",0,null],[12,"replace_unknown_entity_references","","Whether or not non-unicode entity references get replaced…",0,null],[12,"ignore_root_level_whitespace","","Whether or not whitespace at the root level of the…",0,null],[3,"EmitterConfig","","Emitter configuration structure.",null,null],[12,"line_separator","","Line separator used to separate lines in formatted output.…",1,null],[12,"indent_string","","A string which will be used for a single level of…",1,null],[12,"perform_indent","","Whether or not the emitted document should be indented.…",1,null],[12,"perform_escaping","","Whether or not characters in output events will be…",1,null],[12,"write_document_declaration","","Whether or not to write XML document declaration at the…",1,null],[12,"normalize_empty_elements","","Whether or not to convert elements with empty content to…",1,null],[12,"cdata_to_characters","","Whether or not to emit CDATA events as plain characters.…",1,null],[12,"keep_element_names_stack","","Whether or not to keep element names to support…",1,null],[12,"autopad_comments","","Whether or not to automatically insert leading and…",1,null],[12,"pad_self_closing","","Whether or not to automatically insert spaces before the…",1,null],[0,"macros","","Contains several macros used in this crate.",null,null],[0,"name","","Contains XML qualified names manipulation types and…",null,null],[3,"Name","xml::name","Represents a qualified XML name.",null,null],[12,"local_name","","A local name, e.g. `string` in `xsi:string`.",2,null],[12,"namespace","","A namespace URI, e.g. `http://www.w3.org/2000/xmlns/`.",2,null],[12,"prefix","","A name prefix, e.g. `xsi` in `xsi:string`.",2,null],[3,"ReprDisplay","","A wrapper around `Name` whose `Display` implementation…",null,null],[3,"OwnedName","","An owned variant of `Name`.",null,null],[12,"local_name","","A local name, e.g. `string` in `xsi:string`.",3,null],[12,"namespace","","A namespace URI, e.g. `http://www.w3.org/2000/xmlns/`.",3,null],[12,"prefix","","A name prefix, e.g. `xsi` in `xsi:string`.",3,null],[11,"to_owned","","Returns an owned variant of the qualified name.",2,[[["self"]],["ownedname"]]],[11,"local","","Returns a new `Name` instance representing plain local name.",2,[[["str"]],["name"]]],[11,"prefixed","","Returns a new `Name` instance with the given local name…",2,[[["str"]],["name"]]],[11,"qualified","","Returns a new `Name` instance representing a qualified…",2,[[["str"],["option",["str"]]],["name"]]],[11,"to_repr","","Returns a correct XML representation of this local name…",2,[[["self"]],["string"]]],[11,"repr_display","","Returns a structure which can be displayed with `std::fmt`…",2,[[["self"]],["reprdisplay"]]],[11,"prefix_repr","","Returns either a prefix of this name or…",2,[[["self"]],["str"]]],[11,"borrow","","Constructs a borrowed `Name` based on this owned name.",3,[[["self"]],["name"]]],[11,"local","","Returns a new `OwnedName` instance representing a plain…",3,[[["s"]],["ownedname"]]],[11,"qualified","","Returns a new `OwnedName` instance representing a…",3,[[["s1"],["option"],["s2"]],["ownedname"]]],[11,"prefix_ref","","Returns an optional prefix by reference, equivalent to…",3,[[["self"]],[["str"],["option",["str"]]]]],[11,"namespace_ref","","Returns an optional namespace by reference, equivalen to…",3,[[["self"]],[["str"],["option",["str"]]]]],[0,"attribute","xml","Contains XML attributes manipulation types and functions.",null,null],[3,"Attribute","xml::attribute","A borrowed version of an XML attribute.",null,null],[12,"name","","Attribute name.",4,null],[12,"value","","Attribute value.",4,null],[3,"OwnedAttribute","","An owned version of an XML attribute.",null,null],[12,"name","","Attribute name.",5,null],[12,"value","","Attribute value.",5,null],[11,"to_owned","","Creates an owned attribute out of this borrowed one.",4,[[["self"]],["ownedattribute"]]],[11,"new","","Creates a borrowed attribute using the provided borrowed…",4,[[["name"],["str"]],["attribute"]]],[11,"borrow","","Returns a borrowed `Attribute` out of this owned one.",5,[[["self"]],["attribute"]]],[11,"new","","Creates a new owned attribute using the provided owned…",5,[[["string"],["into",["string"]],["ownedname"]],["ownedattribute"]]],[0,"common","xml","Contains common types and functions used throughout the…",null,null],[3,"TextPosition","xml::common","Represents a position inside some textual document.",null,null],[12,"row","","Row, counting from 0",6,null],[12,"column","","Column, counting from 0",6,null],[4,"XmlVersion","","XML version enumeration.",null,null],[13,"Version10","","XML version 1.0.",7,null],[13,"Version11","","XML version 1.1.",7,null],[5,"is_whitespace_char","","Checks whether the given character is a white space…",null,[[["char"]],["bool"]]],[5,"is_whitespace_str","","Checks whether the given string is compound only by white…",null,[[["str"]],["bool"]]],[5,"is_name_start_char","","Checks whether the given character is a name start…",null,[[["char"]],["bool"]]],[5,"is_name_char","","Checks whether the given character is a name character…",null,[[["char"]],["bool"]]],[8,"Position","","Get the position in the document corresponding to the object",null,null],[10,"position","","Returns the current position or a position corresponding…",8,[[["self"]],["textposition"]]],[11,"new","","Creates a new position initialized to the beginning of the…",6,[[],["textposition"]]],[11,"advance","","Advances the position in a line",6,[[["self"],["u8"]]]],[11,"advance_to_tab","","Advances the position in a line to the next tab position",6,[[["self"],["u8"]]]],[11,"new_line","","Advances the position to the beginning of the next line",6,[[["self"]]]],[0,"escape","xml","Contains functions for performing XML special characters…",null,null],[5,"escape_str_attribute","xml::escape","Performs escaping of common XML characters inside an…",null,[[["str"]],[["str"],["cow",["str"]]]]],[5,"escape_str_pcdata","","Performs escaping of common XML characters inside PCDATA.",null,[[["str"]],[["str"],["cow",["str"]]]]],[0,"namespace","xml","Contains namespace manipulation types and functions.",null,null],[3,"Namespace","xml::namespace","Namespace is a map from prefixes to namespace URIs.",null,null],[12,"0","","",9,null],[3,"NamespaceStack","","Namespace stack is a sequence of namespaces.",null,null],[12,"0","","",10,null],[3,"NamespaceStackMappings","","An iterator over mappings from prefixes to URIs in a…",null,null],[3,"CheckedTarget","","A wrapper around `NamespaceStack` which implements…",null,null],[6,"NamespaceMappings","","An alias for iterator type for namespace mappings…",null,null],[6,"UriMapping","","A type alias for a pair of `(prefix, uri)` values returned…",null,null],[17,"NS_XMLNS_PREFIX","","Designates prefix for namespace definitions.",null,null],[17,"NS_XMLNS_URI","","Designates the standard URI for `xmlns` prefix.",null,null],[17,"NS_XML_PREFIX","","Designates prefix for a namespace containing several…",null,null],[17,"NS_XML_URI","","Designates the standard URI for `xml` prefix.",null,null],[17,"NS_NO_PREFIX","","Designates the absence of prefix in a qualified name.",null,null],[17,"NS_EMPTY_URI","","Designates an empty namespace URI, which is equivalent to…",null,null],[11,"empty","","Returns an empty namespace.",9,[[],["namespace"]]],[11,"is_empty","","Checks whether this namespace is empty.",9,[[["self"]],["bool"]]],[11,"is_essentially_empty","","Checks whether this namespace is essentially empty, that…",9,[[["self"]],["bool"]]],[11,"contains","","Checks whether this namespace mapping contains the given…",9,[[["self"],["p"]],["bool"]]],[11,"put","","Puts a mapping into this namespace.",9,[[["u"],["self"],["p"]],["bool"]]],[11,"force_put","","Puts a mapping into this namespace forcefully.",9,[[["u"],["self"],["p"]],[["option",["string"]],["string"]]]],[11,"get","","Queries the namespace for the given prefix.",9,[[["self"],["p"]],[["str"],["option",["str"]]]]],[11,"empty","","Returns an empty namespace stack.",10,[[],["namespacestack"]]],[11,"default","","Returns a namespace stack with default items in it.",10,[[],["namespacestack"]]],[11,"push_empty","","Adds an empty namespace to the top of this stack.",10,[[["self"]],["namespacestack"]]],[11,"pop","","Removes the topmost namespace in this stack.",10,[[["self"]],["namespace"]]],[11,"try_pop","","Removes the topmost namespace in this stack.",10,[[["self"]],[["namespace"],["option",["namespace"]]]]],[11,"peek_mut","","Borrows the topmost namespace mutably, leaving the stack…",10,[[["self"]],["namespace"]]],[11,"peek","","Borrows the topmost namespace immutably, leaving the stack…",10,[[["self"]],["namespace"]]],[11,"put_checked","","Puts a mapping into the topmost namespace if this stack…",10,[[["u"],["self"],["p"]],["bool"]]],[11,"put","","Puts a mapping into the topmost namespace in this stack.",10,[[["u"],["self"],["p"]],["bool"]]],[11,"get","","Performs a search for the given prefix in the whole stack.",10,[[["self"],["p"]],[["str"],["option",["str"]]]]],[11,"squash","","Combines this stack of namespaces into a single namespace.",10,[[["self"]],["namespace"]]],[11,"checked_target","","Returns an object which implements `Extend` using…",10,[[["self"]],["checkedtarget"]]],[11,"iter","","Returns an iterator over all mappings in this namespace…",10,[[["self"]],["namespacestackmappings"]]],[0,"reader","xml","Contains high-level interface for a pull-based XML parser.",null,null],[3,"ParserConfig","xml::reader","Parser configuration structure.",null,null],[12,"trim_whitespace","","Whether or not should whitespace in textual events be…",0,null],[12,"whitespace_to_characters","","Whether or not should whitespace be converted to…",0,null],[12,"cdata_to_characters","","Whether or not should CDATA be converted to characters.…",0,null],[12,"ignore_comments","","Whether or not should comments be omitted. Default is true.",0,null],[12,"coalesce_characters","","Whether or not should sequential `Characters` events be…",0,null],[12,"extra_entities","","A map of extra entities recognized by the parser. Default…",0,null],[12,"ignore_end_of_stream","","Whether or not the parser should ignore the end of stream.…",0,null],[12,"replace_unknown_entity_references","","Whether or not non-unicode entity references get replaced…",0,null],[12,"ignore_root_level_whitespace","","Whether or not whitespace at the root level of the…",0,null],[3,"Error","","An XML parsing error.",null,null],[3,"EventReader","","A wrapper around an `std::io::Read` instance which…",null,null],[3,"Events","","An iterator over XML events created from some type…",null,null],[4,"XmlEvent","","An element of an XML input stream.",null,null],[13,"StartDocument","","Corresponds to XML document declaration.",11,null],[12,"version","xml::reader::XmlEvent","XML version.",12,null],[12,"encoding","","XML document encoding.",12,null],[12,"standalone","","XML standalone declaration.",12,null],[13,"EndDocument","xml::reader","Denotes to the end of the document stream.",11,null],[13,"ProcessingInstruction","","Denotes an XML processing instruction.",11,null],[12,"name","xml::reader::XmlEvent","Processing instruction target.",13,null],[12,"data","","Processing instruction content.",13,null],[13,"StartElement","xml::reader","Denotes a beginning of an XML element.",11,null],[12,"name","xml::reader::XmlEvent","Qualified name of the element.",14,null],[12,"attributes","","A list of attributes associated with the element.",14,null],[12,"namespace","","Contents of the namespace mapping at this point of the…",14,null],[13,"EndElement","xml::reader","Denotes an end of an XML element.",11,null],[12,"name","xml::reader::XmlEvent","Qualified name of the element.",15,null],[13,"CData","xml::reader","Denotes CDATA content.",11,null],[13,"Comment","","Denotes a comment.",11,null],[13,"Characters","","Denotes character data outside of tags.",11,null],[13,"Whitespace","","Denotes a chunk of whitespace outside of tags.",11,null],[4,"ErrorKind","","",null,null],[13,"Syntax","","",16,null],[13,"Io","","",16,null],[13,"Utf8","","",16,null],[13,"UnexpectedEof","","",16,null],[11,"new","xml","Returns a new config with default values.",0,[[],["parserconfig"]]],[11,"create_reader","","Creates an XML reader with this configuration.",0,[[["read"]],[["eventreader"],["read"]]]],[11,"add_entity","","Adds a new entity mapping and returns an updated config…",0,[[["into",["string"]],["string"]],["parserconfig"]]],[11,"trim_whitespace","","Sets the field to the provided value and returns updated…",0,[[["bool"]],["parserconfig"]]],[11,"whitespace_to_characters","","Sets the field to the provided value and returns updated…",0,[[["bool"]],["parserconfig"]]],[11,"cdata_to_characters","","Sets the field to the provided value and returns updated…",0,[[["bool"]],["parserconfig"]]],[11,"ignore_comments","","Sets the field to the provided value and returns updated…",0,[[["bool"]],["parserconfig"]]],[11,"coalesce_characters","","Sets the field to the provided value and returns updated…",0,[[["bool"]],["parserconfig"]]],[11,"ignore_end_of_stream","","Sets the field to the provided value and returns updated…",0,[[["bool"]],["parserconfig"]]],[11,"replace_unknown_entity_references","","Sets the field to the provided value and returns updated…",0,[[["bool"]],["parserconfig"]]],[11,"ignore_root_level_whitespace","","Sets the field to the provided value and returns updated…",0,[[["bool"]],["parserconfig"]]],[11,"as_writer_event","xml::reader","Obtains a writer event from this reader event.",11,[[["self"]],[["option",["xmlevent"]],["xmlevent"]]]],[11,"msg","","Returns a reference to a message which is contained inside…",17,[[["self"]],["str"]]],[11,"kind","","",17,[[["self"]],["errorkind"]]],[6,"Result","","A result type yielded by `XmlReader`.",null,null],[11,"new","","Creates a new reader, consuming the given stream.",18,[[["r"]],["eventreader"]]],[11,"new_with_config","","Creates a new reader with the provded configuration,…",18,[[["parserconfig"],["r"]],["eventreader"]]],[11,"next","","Pulls and returns next XML event from the stream.",18,[[["self"]],[["xmlevent"],["result",["xmlevent"]]]]],[11,"source","","",18,[[["self"]],["r"]]],[11,"source_mut","","",18,[[["self"]],["r"]]],[11,"into_inner","","Unwraps this `EventReader`, returning the underlying reader.",18,[[],["r"]]],[11,"into_inner","","Unwraps the iterator, returning the internal `EventReader`.",19,[[],["eventreader"]]],[11,"source","","",19,[[["self"]],["r"]]],[11,"source_mut","","",19,[[["self"]],["r"]]],[11,"from_str","","A convenience method to create an `XmlReader` from a…",18,[[["str"]],["eventreader"]]],[0,"writer","xml","Contains high-level interface for an events-based XML…",null,null],[3,"EmitterConfig","xml::writer","Emitter configuration structure.",null,null],[12,"line_separator","","Line separator used to separate lines in formatted output.…",1,null],[12,"indent_string","","A string which will be used for a single level of…",1,null],[12,"perform_indent","","Whether or not the emitted document should be indented.…",1,null],[12,"perform_escaping","","Whether or not characters in output events will be…",1,null],[12,"write_document_declaration","","Whether or not to write XML document declaration at the…",1,null],[12,"normalize_empty_elements","","Whether or not to convert elements with empty content to…",1,null],[12,"cdata_to_characters","","Whether or not to emit CDATA events as plain characters.…",1,null],[12,"keep_element_names_stack","","Whether or not to keep element names to support…",1,null],[12,"autopad_comments","","Whether or not to automatically insert leading and…",1,null],[12,"pad_self_closing","","Whether or not to automatically insert spaces before the…",1,null],[3,"EventWriter","","A wrapper around an `std::io::Write` instance which emits…",null,null],[4,"Error","","An error which may be returned by `XmlWriter` when writing…",null,null],[13,"Io","","An I/O error occured in the underlying `Write` instance.",20,null],[13,"DocumentStartAlreadyEmitted","","Document declaration has already been written to the…",20,null],[13,"LastElementNameNotAvailable","","The name of the last opening element is not available.",20,null],[13,"EndElementNameIsNotEqualToLastStartElementName","","The name of the last opening element is not equal to the…",20,null],[13,"EndElementNameIsNotSpecified","","End element name is not specified when it is needed, for…",20,null],[11,"new","xml","Creates an emitter configuration with default values.",1,[[],["emitterconfig"]]],[11,"create_writer","","Creates an XML writer with this configuration.",1,[[["write"]],[["eventwriter"],["write"]]]],[11,"line_separator","","Sets the field to the provided value and returns updated…",1,[[["cow",["str"]],["into",["cow"]]],["emitterconfig"]]],[11,"indent_string","","Sets the field to the provided value and returns updated…",1,[[["cow",["str"]],["into",["cow"]]],["emitterconfig"]]],[11,"perform_indent","","Sets the field to the provided value and returns updated…",1,[[["bool"]],["emitterconfig"]]],[11,"write_document_declaration","","Sets the field to the provided value and returns updated…",1,[[["bool"]],["emitterconfig"]]],[11,"normalize_empty_elements","","Sets the field to the provided value and returns updated…",1,[[["bool"]],["emitterconfig"]]],[11,"cdata_to_characters","","Sets the field to the provided value and returns updated…",1,[[["bool"]],["emitterconfig"]]],[11,"keep_element_names_stack","","Sets the field to the provided value and returns updated…",1,[[["bool"]],["emitterconfig"]]],[11,"autopad_comments","","Sets the field to the provided value and returns updated…",1,[[["bool"]],["emitterconfig"]]],[11,"pad_self_closing","","Sets the field to the provided value and returns updated…",1,[[["bool"]],["emitterconfig"]]],[0,"events","xml::writer","Contains `XmlEvent` datatype, instances of which are…",null,null],[3,"EndElementBuilder","xml::writer::events","",null,null],[3,"StartElementBuilder","","A builder for a starting element event.",null,null],[4,"XmlEvent","","A part of an XML output stream.",null,null],[13,"StartDocument","","Corresponds to XML document declaration.",21,null],[12,"version","xml::writer::events::XmlEvent","XML version.",22,null],[12,"encoding","","XML document encoding.",22,null],[12,"standalone","","XML standalone declaration.",22,null],[13,"ProcessingInstruction","xml::writer::events","Denotes an XML processing instruction.",21,null],[12,"name","xml::writer::events::XmlEvent","Processing instruction target.",23,null],[12,"data","","Processing instruction content.",23,null],[13,"StartElement","xml::writer::events","Denotes a beginning of an XML element.",21,null],[12,"name","xml::writer::events::XmlEvent","Qualified name of the element.",24,null],[12,"attributes","","A list of attributes associated with the element.",24,null],[12,"namespace","","Contents of the namespace mapping at this point of the…",24,null],[13,"EndElement","xml::writer::events","Denotes an end of an XML element.",21,null],[12,"name","xml::writer::events::XmlEvent","Optional qualified name of the element.",25,null],[13,"CData","xml::writer::events","Denotes CDATA content.",21,null],[13,"Comment","","Denotes a comment.",21,null],[13,"Characters","","Denotes character data outside of tags.",21,null],[11,"processing_instruction","","Returns an writer event for a processing instruction.",21,[[["str"],["option",["str"]]],["xmlevent"]]],[11,"start_element","","Returns a builder for a starting element.",21,[[["s"]],["startelementbuilder"]]],[11,"end_element","","Returns a builder for an closing element.",21,[[],["endelementbuilder"]]],[11,"cdata","","Returns a CDATA event.",21,[[["str"]],["xmlevent"]]],[11,"characters","","Returns a regular characters (PCDATA) event.",21,[[["str"]],["xmlevent"]]],[11,"comment","","Returns a comment event.",21,[[["str"]],["xmlevent"]]],[11,"name","","Sets the name of this closing element.",26,[[["n"]],["endelementbuilder"]]],[11,"attr","","Sets an attribute value of this element to the given string.",27,[[["str"],["n"]],["startelementbuilder"]]],[11,"ns","","Adds a namespace to the current namespace context.",27,[[["s1"],["s2"]],["startelementbuilder"]]],[11,"default_ns","","Adds a default namespace mapping to the current namespace…",27,[[["s"]],["startelementbuilder"]]],[6,"Result","xml::writer","A result type yielded by `XmlWriter`.",null,null],[11,"new","","Creates a new `EventWriter` out of an `std::io::Write`…",28,[[["w"]],["eventwriter"]]],[11,"new_with_config","","Creates a new `EventWriter` out of an `std::io::Write`…",28,[[["w"],["emitterconfig"]],["eventwriter"]]],[11,"write","","Writes the next piece of XML document according to the…",28,[[["self"],["e"]],["result"]]],[11,"inner_mut","","Returns a mutable reference to the underlying `Writer`.",28,[[["self"]],["w"]]],[11,"into_inner","","Unwraps this `EventWriter`, returning the underlying writer.",28,[[],["w"]]],[11,"from","xml","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","xml::name","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"to_string","","",2,[[["self"]],["string"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",29,[[["t"]],["t"]]],[11,"into","","",29,[[],["u"]]],[11,"to_string","","",29,[[["self"]],["string"]]],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"try_into","","",29,[[],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"type_id","","",29,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"to_string","","",3,[[["self"]],["string"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","xml::attribute","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,[[["self"],["t"]]]],[11,"to_string","","",4,[[["self"]],["string"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,[[["self"],["t"]]]],[11,"to_string","","",5,[[["self"]],["string"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"from","xml::common","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,[[["self"],["t"]]]],[11,"to_string","","",6,[[["self"]],["string"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,[[["self"],["t"]]]],[11,"to_string","","",7,[[["self"]],["string"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"from","xml::namespace","",9,[[["t"]],["t"]]],[11,"into","","",9,[[],["u"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,[[["self"],["t"]]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[],["u"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,[[["self"],["t"]]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"from","","",30,[[["t"]],["t"]]],[11,"into","","",30,[[],["u"]]],[11,"into_iter","","",30,[[],["i"]]],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"try_into","","",30,[[],["result"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"type_id","","",30,[[["self"]],["typeid"]]],[11,"from","","",31,[[["t"]],["t"]]],[11,"into","","",31,[[],["u"]]],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"try_into","","",31,[[],["result"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"type_id","","",31,[[["self"]],["typeid"]]],[11,"from","xml::reader","",17,[[["t"]],["t"]]],[11,"into","","",17,[[],["u"]]],[11,"to_owned","","",17,[[["self"]],["t"]]],[11,"clone_into","","",17,[[["self"],["t"]]]],[11,"to_string","","",17,[[["self"]],["string"]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"try_into","","",17,[[],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"type_id","","",17,[[["self"]],["typeid"]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"into","","",18,[[],["u"]]],[11,"into_iter","","",18,[[],["i"]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"try_into","","",18,[[],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"type_id","","",18,[[["self"]],["typeid"]]],[11,"from","","",19,[[["t"]],["t"]]],[11,"into","","",19,[[],["u"]]],[11,"into_iter","","",19,[[],["i"]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"try_into","","",19,[[],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"type_id","","",19,[[["self"]],["typeid"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[],["u"]]],[11,"to_owned","","",11,[[["self"]],["t"]]],[11,"clone_into","","",11,[[["self"],["t"]]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"try_into","","",11,[[],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"type_id","","",11,[[["self"]],["typeid"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"into","","",16,[[],["u"]]],[11,"to_owned","","",16,[[["self"]],["t"]]],[11,"clone_into","","",16,[[["self"],["t"]]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"try_into","","",16,[[],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"type_id","","",16,[[["self"]],["typeid"]]],[11,"from","xml::writer","",28,[[["t"]],["t"]]],[11,"into","","",28,[[],["u"]]],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"try_into","","",28,[[],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"type_id","","",28,[[["self"]],["typeid"]]],[11,"from","","",20,[[["t"]],["t"]]],[11,"into","","",20,[[],["u"]]],[11,"to_string","","",20,[[["self"]],["string"]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"try_into","","",20,[[],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"type_id","","",20,[[["self"]],["typeid"]]],[11,"from","xml::writer::events","",26,[[["t"]],["t"]]],[11,"into","","",26,[[],["u"]]],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"try_into","","",26,[[],["result"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"type_id","","",26,[[["self"]],["typeid"]]],[11,"from","","",27,[[["t"]],["t"]]],[11,"into","","",27,[[],["u"]]],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"try_into","","",27,[[],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"type_id","","",27,[[["self"]],["typeid"]]],[11,"from","","",21,[[["t"]],["t"]]],[11,"into","","",21,[[],["u"]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"try_into","","",21,[[],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"type_id","","",21,[[["self"]],["typeid"]]],[11,"position","xml::common","",6,[[["self"]],["textposition"]]],[11,"position","xml::reader","",17,[[["self"]],["textposition"]]],[11,"position","","Returns the position of the last event produced by the…",18,[[["self"]],["textposition"]]],[11,"from","xml::name","",2,[[["str"]],["name"]]],[11,"from","","",2,[[],["name"]]],[11,"from","","",3,[[["name"]],["ownedname"]]],[11,"from","xml::reader","",17,[[],["self"]]],[11,"from","","",17,[[["error"]],["self"]]],[11,"from","xml::writer","",20,[[["error"]],["emittererror"]]],[11,"from","xml::writer::events","",21,[[["str"]],["xmlevent"]]],[11,"from","","",21,[[["endelementbuilder"]],["xmlevent"]]],[11,"from","","",21,[[["startelementbuilder"]],["xmlevent"]]],[11,"extend","xml::namespace","",9,[[["self"],["t"]]]],[11,"extend","","",10,[[["self"],["t"]]]],[11,"extend","","",31,[[["self"],["t"]]]],[11,"into_iter","xml::reader","",18,[[],["events"]]],[11,"next","xml::namespace","",30,[[["self"]],[["urimapping"],["option",["urimapping"]]]]],[11,"next","xml::reader","",19,[[["self"]],[["option",["result"]],["result",["xmlevent"]]]]],[11,"clone","xml::name","",2,[[["self"]],["name"]]],[11,"clone","","",3,[[["self"]],["ownedname"]]],[11,"clone","xml::attribute","",4,[[["self"]],["attribute"]]],[11,"clone","","",5,[[["self"]],["ownedattribute"]]],[11,"clone","xml::common","",6,[[["self"]],["textposition"]]],[11,"clone","","",7,[[["self"]],["xmlversion"]]],[11,"clone","xml::namespace","",9,[[["self"]],["namespace"]]],[11,"clone","","",10,[[["self"]],["namespacestack"]]],[11,"clone","xml","",0,[[["self"]],["parserconfig"]]],[11,"clone","xml::reader","",11,[[["self"]],["xmlevent"]]],[11,"clone","","",17,[[["self"]],["error"]]],[11,"clone","","",16,[[["self"]],["self"]]],[11,"clone","xml","",1,[[["self"]],["emitterconfig"]]],[11,"default","","",0,[[],["parserconfig"]]],[11,"default","","",1,[[],["emitterconfig"]]],[11,"eq","xml::name","",2,[[["name"],["self"]],["bool"]]],[11,"ne","","",2,[[["name"],["self"]],["bool"]]],[11,"eq","","",3,[[["ownedname"],["self"]],["bool"]]],[11,"ne","","",3,[[["ownedname"],["self"]],["bool"]]],[11,"eq","xml::attribute","",4,[[["self"],["attribute"]],["bool"]]],[11,"ne","","",4,[[["self"],["attribute"]],["bool"]]],[11,"eq","","",5,[[["ownedattribute"],["self"]],["bool"]]],[11,"ne","","",5,[[["ownedattribute"],["self"]],["bool"]]],[11,"eq","xml::common","",6,[[["textposition"],["self"]],["bool"]]],[11,"ne","","",6,[[["textposition"],["self"]],["bool"]]],[11,"eq","","",7,[[["self"],["xmlversion"]],["bool"]]],[11,"eq","xml::namespace","",9,[[["namespace"],["self"]],["bool"]]],[11,"ne","","",9,[[["namespace"],["self"]],["bool"]]],[11,"eq","","",10,[[["self"],["namespacestack"]],["bool"]]],[11,"ne","","",10,[[["self"],["namespacestack"]],["bool"]]],[11,"eq","xml","",0,[[["self"],["parserconfig"]],["bool"]]],[11,"ne","","",0,[[["self"],["parserconfig"]],["bool"]]],[11,"eq","xml::reader","",11,[[["xmlevent"],["self"]],["bool"]]],[11,"ne","","",11,[[["xmlevent"],["self"]],["bool"]]],[11,"eq","","",17,[[["self"],["error"]],["bool"]]],[11,"ne","","",17,[[["self"],["error"]],["bool"]]],[11,"eq","","",16,[[["errorkind"],["self"]],["bool"]]],[11,"eq","xml","",1,[[["self"],["emitterconfig"]],["bool"]]],[11,"ne","","",1,[[["self"],["emitterconfig"]],["bool"]]],[11,"fmt","xml::name","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","xml::attribute","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","xml::common","",6,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",7,[[["formatter"],["self"]],["result"]]],[11,"fmt","xml::namespace","",9,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",10,[[["formatter"],["self"]],["result"]]],[11,"fmt","xml","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","xml::reader","",11,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",16,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",17,[[["formatter"],["self"]],["result"]]],[11,"fmt","xml::writer","",20,[[["formatter"],["self"]],["result"]]],[11,"fmt","xml","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","xml::writer::events","",21,[[["formatter"],["self"]],["result"]]],[11,"fmt","xml::name","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",29,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","xml::attribute","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","xml::common","",6,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",7,[[["formatter"],["self"]],["result"]]],[11,"fmt","xml::reader","",17,[[["formatter"],["self"]],["result"]]],[11,"fmt","xml::writer","",20,[[["formatter"],["self"]],["result"]]],[11,"hash","xml::name","",2,[[["self"],["__h"]]]],[11,"hash","","",3,[[["self"],["__h"]]]],[11,"hash","xml::attribute","",4,[[["self"],["__h"]]]],[11,"hash","","",5,[[["self"],["__h"]]]],[11,"from_str","xml::name","Parses the given string slice into a qualified name.",3,[[["str"]],[["ownedname"],["result",["ownedname"]]]]],[11,"description","xml::reader","",17,[[["self"]],["str"]]],[11,"description","xml::writer","",20,[[["self"]],["str"]]]],"p":[[3,"ParserConfig"],[3,"EmitterConfig"],[3,"Name"],[3,"OwnedName"],[3,"Attribute"],[3,"OwnedAttribute"],[3,"TextPosition"],[4,"XmlVersion"],[8,"Position"],[3,"Namespace"],[3,"NamespaceStack"],[4,"XmlEvent"],[13,"StartDocument"],[13,"ProcessingInstruction"],[13,"StartElement"],[13,"EndElement"],[4,"ErrorKind"],[3,"Error"],[3,"EventReader"],[3,"Events"],[4,"Error"],[4,"XmlEvent"],[13,"StartDocument"],[13,"ProcessingInstruction"],[13,"StartElement"],[13,"EndElement"],[3,"EndElementBuilder"],[3,"StartElementBuilder"],[3,"EventWriter"],[3,"ReprDisplay"],[3,"NamespaceStackMappings"],[3,"CheckedTarget"]]};
addSearchOptions(searchIndex);initSearch(searchIndex);